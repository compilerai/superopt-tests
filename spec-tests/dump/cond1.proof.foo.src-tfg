=TFG_SSA:
=TFG_SPEC src.spec.foo:
=TFG:
=Nodes: L0%0%d L1%3%d L1%4%bbentry L1%5%bbentry L1%10%bbentry E0%0%d
=Edges:
L0%0%d => L1%3%d
L1%3%d => L1%5%bbentry
L1%3%d => L1%4%bbentry
L1%4%bbentry => L1%10%bbentry
L1%5%bbentry => L1%10%bbentry
L1%10%bbentry => E0%0%d
=graph done
=is_ssa_graph:
1
=StartState:
=spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=state_end
=PC to var-version map at L0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%3%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%4%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%5%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%10%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at E0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Input: spec-method-arg.0
=arg addr
1 : (undefined) : UNDEFINED
=arg val
1 : input.spec-%var-x-0 : BV:32
=arg end
=Node outputs: E0%0%d
=Output: spec-%ret-reg
1 : input.spec-%tmpvar-7.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
=Touched symbols:
=Symbol-map done
=Locals-map:
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=memlabel_map.0 for call-context {*;foo}
mlheap.src.spec.foo : memlabel-mem--heap
=Edge: L0%0%d => L1%3%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-0.L1%3%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-1.L1%3%d
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((func_head*ctor_bv)*intrinsic_app_bvslt)
tfg_edge_comment end

=Edge: L1%3%d => L1%5%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-1.L1%3%d : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:6:ite_false_split
tfg_edge_comment end

=Edge: L1%3%d => L1%4%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-1.L1%3%d : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:6:ite_true_split
tfg_edge_comment end

=Edge: L1%4%bbentry => L1%10%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-2.L1%10%bbentry
1 : 5 { 0x5 +1.59e129 } : BV:32
=spec-%tmpvar-3.L1%10%bbentry
1 : input.spec-%var-x-0 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvsub(1, 2) : BV:32
=spec-%tmpvar-6.L1%10%bbentry
1 : input.spec-%var-x-0 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvsub(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*ctor_bv)*intrinsic_app_bvsub)*ite_true_merge)
tfg_edge_comment end

=Edge: L1%5%bbentry => L1%10%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-6.L1%10%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
2 : input.spec-%var-x-0 : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-4.L1%10%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%tmpvar-5.L1%10%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
2 : input.spec-%var-x-0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*ctor_bv)*intrinsic_app_bvadd)*ite_false_merge)
tfg_edge_comment end

=Edge: L1%10%bbentry => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-7.E0%0%d
1 : input.spec-%tmpvar-6.L1%10%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*func_ret)
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in src.spec.foo
=Loc 1 in src.spec.foo.
REGMEM
spec-%var-x-0
1 : input.spec-%var-x-0 : BV:32
=Loc 10 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 11 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Loc 12 in src.spec.foo.
REGMEM
spec-%tmpvar-1.L1%3%d
1 : input.spec-%tmpvar-1.L1%3%d : BOOL
=Loc 13 in src.spec.foo.
REGMEM
spec-%tmpvar-0.L1%3%d
1 : input.spec-%tmpvar-0.L1%3%d : BV:32
=Loc 14 in src.spec.foo.
REGMEM
spec-%tmpvar-6.L1%10%bbentry
1 : input.spec-%tmpvar-6.L1%10%bbentry : BV:32
=Loc 15 in src.spec.foo.
REGMEM
spec-%tmpvar-7.E0%0%d
1 : input.spec-%tmpvar-7.E0%0%d : BV:32
=Loc 16 in src.spec.foo.
REGMEM
spec-%tmpvar-2.L1%10%bbentry
1 : input.spec-%tmpvar-2.L1%10%bbentry : BV:32
=Loc 17 in src.spec.foo.
REGMEM
spec-%tmpvar-3.L1%10%bbentry
1 : input.spec-%tmpvar-3.L1%10%bbentry : BV:32
=Loc 18 in src.spec.foo.
REGMEM
spec-%tmpvar-4.L1%10%bbentry
1 : input.spec-%tmpvar-4.L1%10%bbentry : BV:32
=Loc 19 in src.spec.foo.
REGMEM
spec-%tmpvar-5.L1%10%bbentry
1 : input.spec-%tmpvar-5.L1%10%bbentry : BV:32
=Locs end
=Liveness in src.spec.foo
=live locs at L0%0%d
1, 
=live locs at L1%3%d
1, 12, 
=live locs at L1%4%bbentry
1, 
=live locs at L1%5%bbentry
1, 
=live locs at L1%10%bbentry
14, 
=live locs at E0%0%d
15[f], 

=Definedness in src.spec.foo
=loc definedness at L0%0%d
1, 10, 11
=loc definedness at L1%3%d
1, 10, 11, 12, 13
=loc definedness at L1%4%bbentry
1, 10, 11, 12, 13
=loc definedness at L1%5%bbentry
1, 10, 11, 12, 13
=loc definedness at L1%10%bbentry
1, 10, 11, 12, 13, 14
=loc definedness at E0%0%d
1, 10, 11, 12, 13, 14, 15

=Branch affecting variable locs in src.spec.foo
=branch affecting variable locs at L0%0%d
1
=branch affecting variable locs at L1%3%d
12
=branch affecting variable locs at L1%4%bbentry

=branch affecting variable locs at L1%5%bbentry

=branch affecting variable locs at L1%10%bbentry

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.spec.foo
=relevant memlabels
=function: foo
memlabel-mem--heap
memlabel-mem--arg.0
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d for loc_id 12 {input.spec-%tmpvar-1.L1%3%d }
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d for loc_id 13 {input.spec-%tmpvar-0.L1%3%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d done
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%4%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%4%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%5%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%5%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%10%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%10%bbentry for loc_id 14 {input.spec-%tmpvar-6.L1%10%bbentry }
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%10%bbentry for loc_id 16 {input.spec-%tmpvar-2.L1%10%bbentry }
1 : 5 { 0x5 +1.59e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%10%bbentry for loc_id 17 {input.spec-%tmpvar-3.L1%10%bbentry }
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%10%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%5%bbentry=>L1%10%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%5%bbentry=>L1%10%bbentry for loc_id 14 {input.spec-%tmpvar-6.L1%10%bbentry }
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%5%bbentry=>L1%10%bbentry for loc_id 18 {input.spec-%tmpvar-4.L1%10%bbentry }
1 : 12 { 0xc +1.143e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%5%bbentry=>L1%10%bbentry for loc_id 19 {input.spec-%tmpvar-5.L1%10%bbentry }
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%5%bbentry=>L1%10%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%10%bbentry=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L1%10%bbentry=>E0%0%d for loc_id 15 {input.spec-%tmpvar-7.E0%0%d }
1 : input.spec-%tmpvar-6.L1%10%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%10%bbentry=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at L1%3%d:
vacuous mls at L1%4%bbentry:
vacuous mls at L1%5%bbentry:
vacuous mls at L1%10%bbentry:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at L1%3%d:
non-vacuous mls at L1%4%bbentry:
non-vacuous mls at L1%5%bbentry:
non-vacuous mls at L1%10%bbentry:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in src.spec.foo
=avail_exprs begin
=loc 1
=loc_expr
140273 : input.spec-%var-x-0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 12
=loc_expr
140300 : input.spec-%tmpvar-1.L1%3%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=avail_exprs_val.end
=loc 13
=loc_expr
140304 : input.spec-%tmpvar-0.L1%3%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 16
=loc_expr
140305 : input.spec-%tmpvar-2.L1%10%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 5 { 0x5 +1.59e129 } : BV:32
=avail_exprs_val.end
=loc 17
=loc_expr
140306 : input.spec-%tmpvar-3.L1%10%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 18
=loc_expr
140307 : input.spec-%tmpvar-4.L1%10%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 12 { 0xc +1.143e129 } : BV:32
=avail_exprs_val.end
=loc 19
=loc_expr
140308 : input.spec-%tmpvar-5.L1%10%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.spec.foo
=loc 13 expr
1 : input.spec-%tmpvar-0.L1%3%d : BV:32
=loc 13 spreled-expr
140276 : 0 { 0x0 +1.0e129 } : BV:32
=loc 16 expr
1 : input.spec-%tmpvar-2.L1%10%bbentry : BV:32
=loc 16 spreled-expr
140285 : 5 { 0x5 +1.59e129 } : BV:32
=loc 18 expr
1 : input.spec-%tmpvar-4.L1%10%bbentry : BV:32
=loc 18 spreled-expr
140281 : 12 { 0xc +1.143e129 } : BV:32
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 1 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 10 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 11 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 12 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 13 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 14 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 15 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 16 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 17 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 18 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 19 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 13 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 16 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 18 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L1%3%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%3%d=>L1%4%bbentry
1 : input.spec-%tmpvar-1.L1%3%d : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%3%d=>L1%5%bbentry
1 : input.spec-%tmpvar-1.L1%3%d : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%4%bbentry=>L1%10%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%5%bbentry=>L1%10%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%10%bbentry=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L1%3%d
=spec-%tmpvar-0.L1%3%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-1.L1%3%d
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%3%d=>L1%4%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%3%d=>L1%5%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%4%bbentry=>L1%10%bbentry
=spec-%tmpvar-2.L1%10%bbentry
1 : 5 { 0x5 +1.59e129 } : BV:32
=spec-%tmpvar-3.L1%10%bbentry
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-6.L1%10%bbentry
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%5%bbentry=>L1%10%bbentry
=spec-%tmpvar-6.L1%10%bbentry
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-4.L1%10%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%tmpvar-5.L1%10%bbentry
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%10%bbentry=>E0%0%d
=spec-%tmpvar-7.E0%0%d
1 : input.spec-%tmpvar-6.L1%10%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L1%3%d
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L1%3%d done
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%4%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%4%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%5%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%5%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%4%bbentry=>L1%10%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%4%bbentry=>L1%10%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%5%bbentry=>L1%10%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%5%bbentry=>L1%10%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%10%bbentry=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L1%10%bbentry=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
0
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for src.spec.foo
=suffixpath_at_L0%0%d for src.spec.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_L1%3%d for src.spec.foo
=suffixpath_at_L1%3%d.graph_edge_composition
(L0%0%d=>L1%3%d)
=suffixpath_at_L1%4%bbentry for src.spec.foo
=suffixpath_at_L1%4%bbentry.graph_edge_composition
((L0%0%d=>L1%3%d)*(L1%3%d=>L1%4%bbentry))
=suffixpath_at_L1%5%bbentry for src.spec.foo
=suffixpath_at_L1%5%bbentry.graph_edge_composition
((L0%0%d=>L1%3%d)*(L1%3%d=>L1%5%bbentry))
=suffixpath_at_L1%10%bbentry for src.spec.foo
=suffixpath_at_L1%10%bbentry.graph_edge_composition
(((L0%0%d=>L1%3%d)*((L1%3%d=>L1%4%bbentry)*(L1%4%bbentry=>L1%10%bbentry)))+((L0%0%d=>L1%3%d)*((L1%3%d=>L1%5%bbentry)*(L1%5%bbentry=>L1%10%bbentry))))
=suffixpath_at_E0%0%d for src.spec.foo
=suffixpath_at_E0%0%d.graph_edge_composition
((((L0%0%d=>L1%3%d)*((L1%3%d=>L1%4%bbentry)*(L1%4%bbentry=>L1%10%bbentry)))+((L0%0%d=>L1%3%d)*((L1%3%d=>L1%5%bbentry)*(L1%5%bbentry=>L1%10%bbentry))))*(L1%10%bbentry=>E0%0%d))
=suffixpaths for src.spec.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L1%3%d
tfg.assumes_around_edge at L0%0%d=>L1%3%d done
tfg.assumes_around_edge at L1%3%d=>L1%4%bbentry
tfg.assumes_around_edge at L1%3%d=>L1%4%bbentry done
tfg.assumes_around_edge at L1%3%d=>L1%5%bbentry
tfg.assumes_around_edge at L1%3%d=>L1%5%bbentry done
tfg.assumes_around_edge at L1%4%bbentry=>L1%10%bbentry
tfg.assumes_around_edge at L1%4%bbentry=>L1%10%bbentry done
tfg.assumes_around_edge at L1%5%bbentry=>L1%10%bbentry
tfg.assumes_around_edge at L1%5%bbentry=>L1%10%bbentry done
tfg.assumes_around_edge at L1%10%bbentry=>E0%0%d
tfg.assumes_around_edge at L1%10%bbentry=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=TFG_SPEC_done
=TFG_SSA_done
