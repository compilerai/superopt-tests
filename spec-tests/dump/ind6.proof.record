==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x7 $x10)))
 (let (($x19 (and $x8 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x7 $x10)))
 (let (($x19 (and $x8 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x14 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x55 (bvadd ?x8 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x55) (concat ?x53 ?x50))))
 (let (($x58 (= (_ bv0 32) ?x57)))
 (let (($x306 (not $x58)))
 (let (($x307 (or $x58 $x306)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x59 (not $x45)))
 (let (($x308 (and $x59 $x307)))
 (let (($x309 (or $x45 $x308)))
 (let (($x310 (= $x309 false)))
 (let (($x311 (= $x310 true)))
 (let (($x293 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x209 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x294 (= $x209 $x293)))
 (let (($x10 (= false false)))
 (let (($x204 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x292 (=> $x204 $x10)))
 (let (($x290 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x291 (= $x204 $x290)))
 (let (($x287 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x199 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x288 (= $x199 $x287)))
 (let (($x194 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x286 (=> $x194 $x10)))
 (let (($x284 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x285 (= $x194 $x284)))
 (let (($x282 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x300 (and (and (and (and (and (and $x282 $x285) $x286) $x288) $x291) $x292) $x294)))
 (let (($x301 (= $x300 true)))
 (let (($x269 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x170 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x271 (=> $x170 $x270)))
 (let (($x265 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x263 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x266 (= $x263 $x265)))
 (let (($x267 (=> $x170 $x266)))
 (let (($x259 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x260 (= $x258 $x259)))
 (let (($x261 (=> $x170 $x260)))
 (let (($x255 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x253 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x256 (= $x253 $x255)))
 (let (($x257 (=> $x170 $x256)))
 (let (($x250 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x251 (=> $x170 $x250)))
 (let (($x246 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x247 (= $x170 $x246)))
 (let (($x153 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x232 (=> $x153 $x10)))
 (let (($x244 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x245 (= $x153 $x244)))
 (let (($x277 (and (and (and (and (and (and $x245 $x232) $x247) $x251) $x257) $x261) $x267)))
 (let (($x278 (and $x277 $x271)))
 (let (($x279 (= $x278 true)))
 (let (($x233 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x234 (= $x170 $x233)))
 (let (($x230 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x231 (= $x153 $x230)))
 (let (($x227 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x148 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x228 (= $x148 $x227)))
 (let (($x131 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x186 (=> $x131 $x10)))
 (let (($x225 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x226 (= $x131 $x225)))
 (let (($x223 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x240 (and (and (and (and (and (and $x223 $x226) $x186) $x228) $x231) $x232) $x234)))
 (let (($x241 (= $x240 true)))
 (let (($x210 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x211 (= $x209 $x210)))
 (let (($x212 (=> $x148 $x211)))
 (let (($x206 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x207 (= $x204 $x206)))
 (let (($x208 (=> $x148 $x207)))
 (let (($x200 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x201 (= $x199 $x200)))
 (let (($x202 (=> $x148 $x201)))
 (let (($x196 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x197 (= $x194 $x196)))
 (let (($x198 (=> $x148 $x197)))
 (let (($x191 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x192 (=> $x148 $x191)))
 (let (($x187 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x188 (= $x148 $x187)))
 (let (($x214 (and (and (= $x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x186) $x188)))
 (let (($x219 (and (and (and (and (and $x214 $x192) $x198) $x202) $x208) $x212)))
 (let (($x220 (= $x219 true)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x158 (concat ?x157 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x164 (concat ?x163 (concat ?x160 ?x158))))
 (let (($x165 (= (_ bv0 32) ?x164)))
 (let ((?x166 (ite $x165 (_ bv0 32) (_ bv1 32))))
 (let (($x171 (bvuge ?x166 (_ bv1 32))))
 (let (($x172 (= $x170 $x171)))
 (let (($x115 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x173 (=> $x115 $x172)))
 (let (($x167 (= ?x166 (_ bv0 32))))
 (let (($x168 (= $x153 $x167)))
 (let (($x169 (=> $x115 $x168)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x136 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x142 (concat ?x141 (concat ?x138 ?x136))))
 (let (($x143 (= (_ bv0 32) ?x142)))
 (let ((?x144 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x144 (_ bv1 32))))
 (let (($x150 (= $x148 $x149)))
 (let (($x151 (=> $x115 $x150)))
 (let (($x145 (= ?x144 (_ bv0 32))))
 (let (($x146 (= $x131 $x145)))
 (let (($x147 (=> $x115 $x146)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x121)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x124)))
 (let (($x128 (= input.spec-%var-t-0.2.0 ?x127)))
 (let (($x129 (=> $x115 $x128)))
 (let ((?x111 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x111 (_ bv1 32))))
 (let (($x117 (= $x115 $x116)))
 (let (($x110 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x114 (=> $x110 $x10)))
 (let (($x112 (= ?x111 (_ bv0 32))))
 (let (($x113 (= $x110 $x112)))
 (let (($x179 (and (and (and (and (and (and $x113 $x114) $x117) $x129) $x147) $x151) $x169)))
 (let (($x180 (and $x179 $x173)))
 (let (($x181 (= $x180 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x100 (concat ?x97 ?x95)))))
 (let (($x105 (= ?x104 input.dst.llvm-%t)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let (($x84 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x90 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x59 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x91 (= $x80 true)))
 (let (($x92 (= $x91 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x69 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x60 (and $x59 $x58)))
 (let (($x63 (=> (and $x60 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x64 (= $x63 true)))
 (let (($x76 (= $x64 true)))
 (let (($x77 (= $x76 true)))
 (let ((?x34 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x19 (= (_ bv0 32) ?x34)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x47)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x18 $x25)))
 (let (($x36 (and $x6 $x19)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x46 $x36)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x9)))))))
 (let (($x13 (and $x12 $x21)))
 (let (($x32 (= $x13 true)))
 (let (($x49 (= $x32 true)))
 (let (($x30 (= $x49 true)))
 (let (($x78 (and $x30 $x77)))
 (let (($x93 (and $x78 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let (($x182 (and $x108 $x181)))
 (let (($x221 (and $x182 $x220)))
 (let (($x242 (and $x221 $x241)))
 (let (($x280 (and $x242 $x279)))
 (let (($x302 (and $x280 $x301)))
 (let (($x11 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x303 (and $x11 $x302)))
 (let (($x304 (and $x10 $x303)))
 (let (($x305 (and $x10 $x304)))
 (let (($x312 (=> $x305 $x311)))
 (not $x312)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x14 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x55 (bvadd ?x8 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x55) (concat ?x53 ?x50))))
 (let (($x58 (= (_ bv0 32) ?x57)))
 (let (($x306 (not $x58)))
 (let (($x307 (or $x58 $x306)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x59 (not $x45)))
 (let (($x308 (and $x59 $x307)))
 (let (($x309 (or $x45 $x308)))
 (let (($x310 (= $x309 false)))
 (let (($x311 (= $x310 true)))
 (let (($x293 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x209 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x294 (= $x209 $x293)))
 (let (($x10 (= false false)))
 (let (($x204 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x292 (=> $x204 $x10)))
 (let (($x290 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x291 (= $x204 $x290)))
 (let (($x287 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x199 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x288 (= $x199 $x287)))
 (let (($x194 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x286 (=> $x194 $x10)))
 (let (($x284 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x285 (= $x194 $x284)))
 (let (($x282 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x300 (and (and (and (and (and (and $x282 $x285) $x286) $x288) $x291) $x292) $x294)))
 (let (($x301 (= $x300 true)))
 (let (($x269 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x170 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x271 (=> $x170 $x270)))
 (let (($x265 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x263 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x266 (= $x263 $x265)))
 (let (($x267 (=> $x170 $x266)))
 (let (($x259 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x260 (= $x258 $x259)))
 (let (($x261 (=> $x170 $x260)))
 (let (($x255 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x253 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x256 (= $x253 $x255)))
 (let (($x257 (=> $x170 $x256)))
 (let (($x250 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x251 (=> $x170 $x250)))
 (let (($x246 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x247 (= $x170 $x246)))
 (let (($x153 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x232 (=> $x153 $x10)))
 (let (($x244 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x245 (= $x153 $x244)))
 (let (($x277 (and (and (and (and (and (and $x245 $x232) $x247) $x251) $x257) $x261) $x267)))
 (let (($x278 (and $x277 $x271)))
 (let (($x279 (= $x278 true)))
 (let (($x233 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x234 (= $x170 $x233)))
 (let (($x230 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x231 (= $x153 $x230)))
 (let (($x227 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x148 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x228 (= $x148 $x227)))
 (let (($x131 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x186 (=> $x131 $x10)))
 (let (($x225 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x226 (= $x131 $x225)))
 (let (($x223 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x240 (and (and (and (and (and (and $x223 $x226) $x186) $x228) $x231) $x232) $x234)))
 (let (($x241 (= $x240 true)))
 (let (($x210 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x211 (= $x209 $x210)))
 (let (($x212 (=> $x148 $x211)))
 (let (($x206 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x207 (= $x204 $x206)))
 (let (($x208 (=> $x148 $x207)))
 (let (($x200 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x201 (= $x199 $x200)))
 (let (($x202 (=> $x148 $x201)))
 (let (($x196 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x197 (= $x194 $x196)))
 (let (($x198 (=> $x148 $x197)))
 (let (($x191 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x192 (=> $x148 $x191)))
 (let (($x187 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x188 (= $x148 $x187)))
 (let (($x214 (and (and (= $x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x186) $x188)))
 (let (($x219 (and (and (and (and (and $x214 $x192) $x198) $x202) $x208) $x212)))
 (let (($x220 (= $x219 true)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x158 (concat ?x157 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x164 (concat ?x163 (concat ?x160 ?x158))))
 (let (($x165 (= (_ bv0 32) ?x164)))
 (let ((?x166 (ite $x165 (_ bv0 32) (_ bv1 32))))
 (let (($x171 (bvuge ?x166 (_ bv1 32))))
 (let (($x172 (= $x170 $x171)))
 (let (($x115 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x173 (=> $x115 $x172)))
 (let (($x167 (= ?x166 (_ bv0 32))))
 (let (($x168 (= $x153 $x167)))
 (let (($x169 (=> $x115 $x168)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x136 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x142 (concat ?x141 (concat ?x138 ?x136))))
 (let (($x143 (= (_ bv0 32) ?x142)))
 (let ((?x144 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x144 (_ bv1 32))))
 (let (($x150 (= $x148 $x149)))
 (let (($x151 (=> $x115 $x150)))
 (let (($x145 (= ?x144 (_ bv0 32))))
 (let (($x146 (= $x131 $x145)))
 (let (($x147 (=> $x115 $x146)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x121)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x124)))
 (let (($x128 (= input.spec-%var-t-0.2.0 ?x127)))
 (let (($x129 (=> $x115 $x128)))
 (let ((?x111 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x111 (_ bv1 32))))
 (let (($x117 (= $x115 $x116)))
 (let (($x110 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x114 (=> $x110 $x10)))
 (let (($x112 (= ?x111 (_ bv0 32))))
 (let (($x113 (= $x110 $x112)))
 (let (($x179 (and (and (and (and (and (and $x113 $x114) $x117) $x129) $x147) $x151) $x169)))
 (let (($x180 (and $x179 $x173)))
 (let (($x181 (= $x180 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x100 (concat ?x97 ?x95)))))
 (let (($x105 (= ?x104 input.dst.llvm-%t)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let (($x84 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x90 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x59 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x91 (= $x80 true)))
 (let (($x92 (= $x91 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x69 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x60 (and $x59 $x58)))
 (let (($x63 (=> (and $x60 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x64 (= $x63 true)))
 (let (($x76 (= $x64 true)))
 (let (($x77 (= $x76 true)))
 (let ((?x34 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x19 (= (_ bv0 32) ?x34)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x47)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x18 $x25)))
 (let (($x36 (and $x6 $x19)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x46 $x36)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x9)))))))
 (let (($x13 (and $x12 $x21)))
 (let (($x32 (= $x13 true)))
 (let (($x49 (= $x32 true)))
 (let (($x30 (= $x49 true)))
 (let (($x78 (and $x30 $x77)))
 (let (($x93 (and $x78 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let (($x182 (and $x108 $x181)))
 (let (($x221 (and $x182 $x220)))
 (let (($x242 (and $x221 $x241)))
 (let (($x280 (and $x242 $x279)))
 (let (($x302 (and $x280 $x301)))
 (let (($x11 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x303 (and $x11 $x302)))
 (let (($x304 (and $x10 $x303)))
 (let (($x305 (and $x10 $x304)))
 (let (($x312 (=> $x305 $x311)))
 (not $x312)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6330e004)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff))
  (define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6330e004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6330e007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv24 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv27 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv24 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x54 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x8 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x57) (concat ?x29 ?x54))))
 (let (($x61 (= (_ bv0 32) ?x60)))
 (let (($x350 (not $x61)))
 (let (($x351 (or $x61 $x350)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x62 (not $x45)))
 (let (($x352 (and $x62 $x351)))
 (let (($x353 (or $x45 $x352)))
 (let (($x354 (= $x353 false)))
 (let (($x355 (= $x354 true)))
 (let (($x224 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x336 (not $x224)))
 (let (($x218 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x335 (not $x218)))
 (let (($x333 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x334 (= $x224 $x333)))
 (let (($x53 (= false false)))
 (let (($x219 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x219 $x53)))
 (let (($x330 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x331 (= $x219 $x330)))
 (let (($x327 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x328 (= $x218 $x327)))
 (let (($x204 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x326 (=> $x204 $x53)))
 (let (($x324 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x325 (= $x204 $x324)))
 (let (($x322 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x342 (and (and (and (and (and (and $x322 $x325) $x326) $x328) $x331) $x332) $x334)))
 (let (($x344 (and (and $x342 $x335) $x336)))
 (let (($x345 (= $x344 true)))
 (let (($x294 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x168 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x309 (and $x168 $x294)))
 (let (($x310 (not $x309)))
 (let (($x291 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x307 (and $x168 $x291)))
 (let (($x308 (not $x307)))
 (let (($x287 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x305 (and $x168 $x287)))
 (let (($x306 (not $x305)))
 (let (($x284 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x303 (and $x168 $x284)))
 (let (($x304 (not $x303)))
 (let (($x300 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x301 (= $x294 $x300)))
 (let (($x302 (=> $x168 $x301)))
 (let (($x292 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x299 (= $x291 $x292)))
 (let (($x293 (=> $x168 $x299)))
 (let (($x288 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x297 (= $x287 $x288)))
 (let (($x289 (=> $x168 $x297)))
 (let (($x295 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x286 (= $x284 $x295)))
 (let (($x296 (=> $x168 $x286)))
 (let (($x281 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x282 (=> $x168 $x281)))
 (let (($x271 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x278 (= $x168 $x271)))
 (let (($x178 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x256 (=> $x178 $x53)))
 (let (($x269 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x270 (= $x178 $x269)))
 (let (($x94 (and (and (and (and (and (and $x270 $x256) $x278) $x282) $x296) $x289) $x293)))
 (let (($x318 (and (and (and (and (and $x94 $x302) $x304) $x306) $x308) $x310)))
 (let (($x319 (= $x318 true)))
 (let (($x259 (not $x168)))
 (let (($x177 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x258 (not $x177)))
 (let (($x257 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x275 (= $x168 $x257)))
 (let (($x254 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x255 (= $x178 $x254)))
 (let (($x274 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x252 (= $x177 $x274)))
 (let (($x131 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x198 (=> $x131 $x53)))
 (let (($x250 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x251 (= $x131 $x250)))
 (let (($x248 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x264 (and (and (and (and (and (and $x248 $x251) $x198) $x252) $x255) $x256) $x275)))
 (let (($x266 (and (and $x264 $x258) $x259)))
 (let (($x267 (= $x266 true)))
 (let (($x231 (and $x177 $x224)))
 (let (($x238 (not $x231)))
 (let (($x229 (and $x177 $x219)))
 (let (($x230 (not $x229)))
 (let (($x228 (and $x177 $x218)))
 (let (($x237 (not $x228)))
 (let (($x236 (and $x177 $x204)))
 (let (($x227 (not $x236)))
 (let (($x225 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x235 (=> $x177 $x226)))
 (let (($x221 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x222 (= $x219 $x221)))
 (let (($x223 (=> $x177 $x222)))
 (let (($x209 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x210 (= $x218 $x209)))
 (let (($x211 (=> $x177 $x210)))
 (let (($x206 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x207 (= $x204 $x206)))
 (let (($x208 (=> $x177 $x207)))
 (let (($x202 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x217 (=> $x177 $x202)))
 (let (($x216 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x199 (= $x177 $x216)))
 (let (($x239 (and (and (= $x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x198) $x199)))
 (let (($x243 (and (and (and (and (and (and $x239 $x217) $x208) $x211) $x223) $x235) $x227)))
 (let (($x272 (and (and (and $x243 $x237) $x230) $x238)))
 (let (($x246 (= $x272 true)))
 (let (($x117 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x183 (and $x117 $x168)))
 (let (($x184 (not $x183)))
 (let (($x181 (and $x117 $x178)))
 (let (($x182 (not $x181)))
 (let (($x173 (and $x117 $x177)))
 (let (($x180 (not $x173)))
 (let (($x171 (and $x117 $x131)))
 (let (($x172 (not $x171)))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x163 (concat ?x162 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x155 (concat ?x160 ?x163))))
 (let (($x161 (= (_ bv0 32) ?x158)))
 (let ((?x164 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x164 (_ bv1 32))))
 (let (($x179 (= $x168 $x169)))
 (let (($x170 (=> $x117 $x179)))
 (let (($x165 (= ?x164 (_ bv0 32))))
 (let (($x166 (= $x178 $x165)))
 (let (($x167 (=> $x117 $x166)))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x138 (concat ?x137 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x142 (concat ?x139 (concat ?x135 ?x138))))
 (let (($x143 (= (_ bv0 32) ?x142)))
 (let ((?x144 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x148 (bvuge ?x144 (_ bv1 32))))
 (let (($x149 (= $x177 $x148)))
 (let (($x150 (=> $x117 $x149)))
 (let (($x145 (= ?x144 (_ bv0 32))))
 (let (($x146 (= $x131 $x145)))
 (let (($x147 (=> $x117 $x146)))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x119)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x121)))
 (let (($x129 (= input.spec-%var-t-0.2.0 ?x128)))
 (let (($x176 (=> $x117 $x129)))
 (let ((?x114 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x175 (bvuge ?x114 (_ bv1 32))))
 (let (($x125 (= $x117 $x175)))
 (let (($x10 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x116 (=> $x10 $x53)))
 (let (($x174 (= ?x114 (_ bv0 32))))
 (let (($x115 (= $x10 $x174)))
 (let (($x214 (and (and (and (and (and (and $x115 $x116) $x125) $x176) $x147) $x150) $x167)))
 (let (($x215 (and (and (and (and (and $x214 $x170) $x172) $x180) $x182) $x184)))
 (let (($x193 (= $x215 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x104 (concat ?x95 ?x96)))))
 (let (($x109 (= ?x108 input.dst.llvm-%t)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x88 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x93 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x83 (=> (and $x62 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x84 (= $x83 true)))
 (let (($x102 (= $x84 true)))
 (let (($x103 (= $x102 true)))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x73 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x74 (_ bv3 32)))))
 (let (($x78 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x65 (and $x62 $x61)))
 (let (($x67 (=> (and $x65 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x68 (= $x67 true)))
 (let (($x81 (= $x68 true)))
 (let (($x82 (= $x81 true)))
 (let ((?x55 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x55)))
 (let ((?x12 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x41 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x12)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x40 $x41)))
 (let (($x13 (and $x18 $x42)))
 (let (($x49 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x49 $x13)))
 (let (($x56 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x56)))))))
 (let (($x9 (and $x37 $x6)))
 (let (($x27 (= $x9 true)))
 (let (($x48 (= $x27 true)))
 (let (($x14 (= $x48 true)))
 (let (($x89 (and $x14 $x82)))
 (let (($x99 (and $x89 $x103)))
 (let (($x112 (and $x99 $x111)))
 (let (($x194 (and $x112 $x193)))
 (let (($x247 (and $x194 $x246)))
 (let (($x277 (and $x247 $x267)))
 (let (($x320 (and $x277 $x319)))
 (let (($x346 (and $x320 $x345)))
 (let (($x44 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x347 (and $x44 $x346)))
 (let (($x348 (and $x53 $x347)))
 (let (($x349 (and $x53 $x348)))
 (let (($x356 (=> $x349 $x355)))
 (not $x356))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x54 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x8 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x57) (concat ?x29 ?x54))))
 (let (($x61 (= (_ bv0 32) ?x60)))
 (let (($x350 (not $x61)))
 (let (($x351 (or $x61 $x350)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x62 (not $x45)))
 (let (($x352 (and $x62 $x351)))
 (let (($x353 (or $x45 $x352)))
 (let (($x354 (= $x353 false)))
 (let (($x355 (= $x354 true)))
 (let (($x224 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x336 (not $x224)))
 (let (($x218 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x335 (not $x218)))
 (let (($x333 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x334 (= $x224 $x333)))
 (let (($x53 (= false false)))
 (let (($x219 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x219 $x53)))
 (let (($x330 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x331 (= $x219 $x330)))
 (let (($x327 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x328 (= $x218 $x327)))
 (let (($x204 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x326 (=> $x204 $x53)))
 (let (($x324 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x325 (= $x204 $x324)))
 (let (($x322 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x342 (and (and (and (and (and (and $x322 $x325) $x326) $x328) $x331) $x332) $x334)))
 (let (($x344 (and (and $x342 $x335) $x336)))
 (let (($x345 (= $x344 true)))
 (let (($x294 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x168 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x309 (and $x168 $x294)))
 (let (($x310 (not $x309)))
 (let (($x291 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x307 (and $x168 $x291)))
 (let (($x308 (not $x307)))
 (let (($x287 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x305 (and $x168 $x287)))
 (let (($x306 (not $x305)))
 (let (($x284 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x303 (and $x168 $x284)))
 (let (($x304 (not $x303)))
 (let (($x300 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x301 (= $x294 $x300)))
 (let (($x302 (=> $x168 $x301)))
 (let (($x292 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x299 (= $x291 $x292)))
 (let (($x293 (=> $x168 $x299)))
 (let (($x288 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x297 (= $x287 $x288)))
 (let (($x289 (=> $x168 $x297)))
 (let (($x295 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x286 (= $x284 $x295)))
 (let (($x296 (=> $x168 $x286)))
 (let (($x281 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x282 (=> $x168 $x281)))
 (let (($x271 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x278 (= $x168 $x271)))
 (let (($x178 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x256 (=> $x178 $x53)))
 (let (($x269 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x270 (= $x178 $x269)))
 (let (($x94 (and (and (and (and (and (and $x270 $x256) $x278) $x282) $x296) $x289) $x293)))
 (let (($x318 (and (and (and (and (and $x94 $x302) $x304) $x306) $x308) $x310)))
 (let (($x319 (= $x318 true)))
 (let (($x259 (not $x168)))
 (let (($x177 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x258 (not $x177)))
 (let (($x257 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x275 (= $x168 $x257)))
 (let (($x254 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x255 (= $x178 $x254)))
 (let (($x274 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x252 (= $x177 $x274)))
 (let (($x131 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x198 (=> $x131 $x53)))
 (let (($x250 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x251 (= $x131 $x250)))
 (let (($x248 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x264 (and (and (and (and (and (and $x248 $x251) $x198) $x252) $x255) $x256) $x275)))
 (let (($x266 (and (and $x264 $x258) $x259)))
 (let (($x267 (= $x266 true)))
 (let (($x231 (and $x177 $x224)))
 (let (($x238 (not $x231)))
 (let (($x229 (and $x177 $x219)))
 (let (($x230 (not $x229)))
 (let (($x228 (and $x177 $x218)))
 (let (($x237 (not $x228)))
 (let (($x236 (and $x177 $x204)))
 (let (($x227 (not $x236)))
 (let (($x225 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x235 (=> $x177 $x226)))
 (let (($x221 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x222 (= $x219 $x221)))
 (let (($x223 (=> $x177 $x222)))
 (let (($x209 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x210 (= $x218 $x209)))
 (let (($x211 (=> $x177 $x210)))
 (let (($x206 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x207 (= $x204 $x206)))
 (let (($x208 (=> $x177 $x207)))
 (let (($x202 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x217 (=> $x177 $x202)))
 (let (($x216 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x199 (= $x177 $x216)))
 (let (($x239 (and (and (= $x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x198) $x199)))
 (let (($x243 (and (and (and (and (and (and $x239 $x217) $x208) $x211) $x223) $x235) $x227)))
 (let (($x272 (and (and (and $x243 $x237) $x230) $x238)))
 (let (($x246 (= $x272 true)))
 (let (($x117 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x183 (and $x117 $x168)))
 (let (($x184 (not $x183)))
 (let (($x181 (and $x117 $x178)))
 (let (($x182 (not $x181)))
 (let (($x173 (and $x117 $x177)))
 (let (($x180 (not $x173)))
 (let (($x171 (and $x117 $x131)))
 (let (($x172 (not $x171)))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x163 (concat ?x162 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x155 (concat ?x160 ?x163))))
 (let (($x161 (= (_ bv0 32) ?x158)))
 (let ((?x164 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x164 (_ bv1 32))))
 (let (($x179 (= $x168 $x169)))
 (let (($x170 (=> $x117 $x179)))
 (let (($x165 (= ?x164 (_ bv0 32))))
 (let (($x166 (= $x178 $x165)))
 (let (($x167 (=> $x117 $x166)))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x138 (concat ?x137 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x142 (concat ?x139 (concat ?x135 ?x138))))
 (let (($x143 (= (_ bv0 32) ?x142)))
 (let ((?x144 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x148 (bvuge ?x144 (_ bv1 32))))
 (let (($x149 (= $x177 $x148)))
 (let (($x150 (=> $x117 $x149)))
 (let (($x145 (= ?x144 (_ bv0 32))))
 (let (($x146 (= $x131 $x145)))
 (let (($x147 (=> $x117 $x146)))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x119)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x121)))
 (let (($x129 (= input.spec-%var-t-0.2.0 ?x128)))
 (let (($x176 (=> $x117 $x129)))
 (let ((?x114 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x175 (bvuge ?x114 (_ bv1 32))))
 (let (($x125 (= $x117 $x175)))
 (let (($x10 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x116 (=> $x10 $x53)))
 (let (($x174 (= ?x114 (_ bv0 32))))
 (let (($x115 (= $x10 $x174)))
 (let (($x214 (and (and (and (and (and (and $x115 $x116) $x125) $x176) $x147) $x150) $x167)))
 (let (($x215 (and (and (and (and (and $x214 $x170) $x172) $x180) $x182) $x184)))
 (let (($x193 (= $x215 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x104 (concat ?x95 ?x96)))))
 (let (($x109 (= ?x108 input.dst.llvm-%t)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x88 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x93 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x83 (=> (and $x62 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x84 (= $x83 true)))
 (let (($x102 (= $x84 true)))
 (let (($x103 (= $x102 true)))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x73 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x74 (_ bv3 32)))))
 (let (($x78 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x65 (and $x62 $x61)))
 (let (($x67 (=> (and $x65 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x68 (= $x67 true)))
 (let (($x81 (= $x68 true)))
 (let (($x82 (= $x81 true)))
 (let ((?x55 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x55)))
 (let ((?x12 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x41 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x12)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x40 $x41)))
 (let (($x13 (and $x18 $x42)))
 (let (($x49 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x49 $x13)))
 (let (($x56 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x56)))))))
 (let (($x9 (and $x37 $x6)))
 (let (($x27 (= $x9 true)))
 (let (($x48 (= $x27 true)))
 (let (($x14 (= $x48 true)))
 (let (($x89 (and $x14 $x82)))
 (let (($x99 (and $x89 $x103)))
 (let (($x112 (and $x99 $x111)))
 (let (($x194 (and $x112 $x193)))
 (let (($x247 (and $x194 $x246)))
 (let (($x277 (and $x247 $x267)))
 (let (($x320 (and $x277 $x319)))
 (let (($x346 (and $x320 $x345)))
 (let (($x44 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x347 (and $x44 $x346)))
 (let (($x348 (and $x53 $x347)))
 (let (($x349 (and $x53 $x348)))
 (let (($x356 (=> $x349 $x355)))
 (not $x356))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv24 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv27 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv24 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0e000044)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0e000044)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0e000047)
  (define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x42 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x13 (concat ?x42 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x34 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x34 (_ bv3 32))))
 (let ((?x33 (concat (select input.dst.llvm-mem ?x23) (concat ?x27 ?x13))))
 (let (($x45 (= (_ bv0 32) ?x33)))
 (let (($x307 (not $x45)))
 (let (($x308 (or $x45 $x307)))
 (let (($x11 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x44 (not $x11)))
 (let (($x317 (and $x44 $x308)))
 (let (($x309 (or $x11 $x317)))
 (let (($x310 (not $x309)))
 (let (($x187 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x131 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x305 (or $x131 $x187)))
 (let (($x125 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x306 (and $x125 $x305)))
 (let (($x53 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x316 (or $x53 $x306)))
 (let (($x318 (or $x316 $x310)))
 (let (($x319 (= $x318 true)))
 (let (($x320 (= $x319 true)))
 (let (($x291 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x207 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x298 (= $x207 $x291)))
 (let (($x65 (= false false)))
 (let (($x233 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x290 (=> $x233 $x65)))
 (let (($x289 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x35 (= $x233 $x289)))
 (let (($x287 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x239 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x288 (= $x239 $x287)))
 (let (($x197 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x197 $x65)))
 (let (($x286 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x296 (= $x197 $x286)))
 (let (($x285 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x300 (and (and (and (and (and (and $x285 $x296) $x15) $x288) $x35) $x290) $x298)))
 (let (($x301 (= $x300 true)))
 (let (($x269 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x166 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x311 (=> $x166 $x270)))
 (let (($x266 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x265 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x267 (= $x265 $x266)))
 (let (($x277 (=> $x166 $x267)))
 (let (($x257 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x263 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x275 (= $x263 $x257)))
 (let (($x264 (=> $x166 $x275)))
 (let (($x255 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x253 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x262 (= $x253 $x255)))
 (let (($x256 (=> $x166 $x262)))
 (let (($x274 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x252 (=> $x166 $x274)))
 (let (($x250 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x251 (= $x166 $x250)))
 (let (($x188 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x228 (=> $x188 $x65)))
 (let (($x248 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x249 (= $x188 $x248)))
 (let (($x281 (and (and (and (and (and (and $x249 $x228) $x251) $x252) $x256) $x264) $x277)))
 (let (($x282 (and $x281 $x311)))
 (let (($x313 (= $x282 true)))
 (let (($x237 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x244 (= $x166 $x237)))
 (let (($x227 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x243 (= $x188 $x227)))
 (let (($x235 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x242 (= $x187 $x235)))
 (let (($x192 (=> $x131 $x65)))
 (let (($x225 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x226 (= $x131 $x225)))
 (let (($x241 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x272 (and (and (and (and (and (and $x241 $x226) $x192) $x242) $x243) $x228) $x244)))
 (let (($x246 (= $x272 true)))
 (let (($x208 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x234 (= $x207 $x208)))
 (let (($x218 (=> $x187 $x234)))
 (let (($x204 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x205 (= $x233 $x204)))
 (let (($x206 (=> $x187 $x205)))
 (let (($x200 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x201 (= $x239 $x200)))
 (let (($x202 (=> $x187 $x201)))
 (let (($x232 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x216 (= $x197 $x232)))
 (let (($x199 (=> $x187 $x216)))
 (let (($x194 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x195 (=> $x187 $x194)))
 (let (($x183 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x184 (= $x187 $x183)))
 (let (($x210 (and (and (= $x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x192) $x184)))
 (let (($x220 (and (and (and (and (and $x210 $x195) $x199) $x202) $x206) $x218)))
 (let (($x221 (= $x220 true)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x155 (concat ?x157 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x163 (concat ?x153 (concat ?x160 ?x155))))
 (let (($x156 (= (_ bv0 32) ?x163)))
 (let ((?x158 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x158 (_ bv1 32))))
 (let (($x214 (= $x166 $x167)))
 (let (($x168 (=> $x125 $x214)))
 (let (($x161 (= ?x158 (_ bv0 32))))
 (let (($x164 (= $x188 $x161)))
 (let (($x165 (=> $x125 $x164)))
 (let ((?x134 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x135 (concat ?x134 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x142 (concat ?x133 (concat ?x137 ?x135))))
 (let (($x143 (= (_ bv0 32) ?x142)))
 (let ((?x144 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x177 (bvuge ?x144 (_ bv1 32))))
 (let (($x148 (= $x187 $x177)))
 (let (($x149 (=> $x125 $x148)))
 (let (($x145 (= ?x144 (_ bv0 32))))
 (let (($x146 (= $x131 $x145)))
 (let (($x147 (=> $x125 $x146)))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x122)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x119)))
 (let (($x176 (= input.spec-%var-t-0.2.0 ?x129)))
 (let (($x213 (=> $x125 $x176)))
 (let ((?x116 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x116 (_ bv1 32))))
 (let (($x124 (= $x125 $x186)))
 (let (($x189 (and (and (and (and (= $x53 (= ?x116 (_ bv0 32))) (=> $x53 $x65)) $x124) $x213) $x147)))
 (let (($x190 (and (and (and $x189 $x149) $x165) $x168)))
 (let (($x173 (= $x190 true)))
 (let ((?x97 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x112 (concat ?x111 (concat ?x108 (concat ?x96 ?x97)))))
 (let (($x113 (= ?x112 input.dst.llvm-%t)))
 (let (($x10 (= $x113 true)))
 (let (($x114 (= $x10 true)))
 (let (($x103 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x99 (= $x103 true)))
 (let (($x106 (= $x99 true)))
 (let (($x107 (= $x106 true)))
 (let ((?x87 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x88 (= (_ bv0 32) ?x87)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x85)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (and $x89 $x86)))
 (let (($x90 (and $x92 $x88)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x71 $x90)))
 (let (($x64 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x80 (and $x82 $x79)))
 (let (($x91 (= $x80 true)))
 (let (($x93 (= $x91 true)))
 (let (($x83 (= $x93 true)))
 (let (($x101 (and $x83 $x107)))
 (let (($x174 (and $x101 $x114)))
 (let (($x180 (and $x174 $x173)))
 (let (($x222 (and $x180 $x221)))
 (let (($x247 (and $x222 $x246)))
 (let (($x283 (and $x247 $x313)))
 (let (($x302 (and $x283 $x301)))
 (let (($x69 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x314 (and $x69 $x302)))
 (let (($x303 (and $x65 $x314)))
 (let (($x304 (and $x65 $x303)))
 (let ((?x36 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x46 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x36 (_ bv3 32)))))
 (let (($x61 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x46)))))))
 (let (($x62 (and $x44 $x45)))
 (let (($x8 (=> (and $x62 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x29 $x46)))))))
 (let (($x37 (bvugt ?x34 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x41 (=> (bvule ?x34 (bvsub (bvadd ?x34 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x56 $x37)))))))
 (let (($x19 (=> (and $x44 (bvule ?x34 (bvsub (bvadd ?x34 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x56 $x37)))))))
 (let (($x57 (and $x19 $x8)))
 (let (($x315 (and $x57 $x304)))
 (let (($x321 (=> $x315 $x320)))
 (not $x321))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x42 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x13 (concat ?x42 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x34 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x34 (_ bv3 32))))
 (let ((?x33 (concat (select input.dst.llvm-mem ?x23) (concat ?x27 ?x13))))
 (let (($x45 (= (_ bv0 32) ?x33)))
 (let (($x307 (not $x45)))
 (let (($x308 (or $x45 $x307)))
 (let (($x11 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x44 (not $x11)))
 (let (($x317 (and $x44 $x308)))
 (let (($x309 (or $x11 $x317)))
 (let (($x310 (not $x309)))
 (let (($x187 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x131 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x305 (or $x131 $x187)))
 (let (($x125 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x306 (and $x125 $x305)))
 (let (($x53 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x316 (or $x53 $x306)))
 (let (($x318 (or $x316 $x310)))
 (let (($x319 (= $x318 true)))
 (let (($x320 (= $x319 true)))
 (let (($x291 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x207 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x298 (= $x207 $x291)))
 (let (($x65 (= false false)))
 (let (($x233 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x290 (=> $x233 $x65)))
 (let (($x289 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x35 (= $x233 $x289)))
 (let (($x287 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x239 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x288 (= $x239 $x287)))
 (let (($x197 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x197 $x65)))
 (let (($x286 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x296 (= $x197 $x286)))
 (let (($x285 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x300 (and (and (and (and (and (and $x285 $x296) $x15) $x288) $x35) $x290) $x298)))
 (let (($x301 (= $x300 true)))
 (let (($x269 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x166 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x311 (=> $x166 $x270)))
 (let (($x266 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x265 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x267 (= $x265 $x266)))
 (let (($x277 (=> $x166 $x267)))
 (let (($x257 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x263 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x275 (= $x263 $x257)))
 (let (($x264 (=> $x166 $x275)))
 (let (($x255 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x253 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x262 (= $x253 $x255)))
 (let (($x256 (=> $x166 $x262)))
 (let (($x274 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x252 (=> $x166 $x274)))
 (let (($x250 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x251 (= $x166 $x250)))
 (let (($x188 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x228 (=> $x188 $x65)))
 (let (($x248 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x249 (= $x188 $x248)))
 (let (($x281 (and (and (and (and (and (and $x249 $x228) $x251) $x252) $x256) $x264) $x277)))
 (let (($x282 (and $x281 $x311)))
 (let (($x313 (= $x282 true)))
 (let (($x237 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x244 (= $x166 $x237)))
 (let (($x227 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x243 (= $x188 $x227)))
 (let (($x235 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x242 (= $x187 $x235)))
 (let (($x192 (=> $x131 $x65)))
 (let (($x225 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x226 (= $x131 $x225)))
 (let (($x241 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x272 (and (and (and (and (and (and $x241 $x226) $x192) $x242) $x243) $x228) $x244)))
 (let (($x246 (= $x272 true)))
 (let (($x208 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x234 (= $x207 $x208)))
 (let (($x218 (=> $x187 $x234)))
 (let (($x204 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x205 (= $x233 $x204)))
 (let (($x206 (=> $x187 $x205)))
 (let (($x200 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x201 (= $x239 $x200)))
 (let (($x202 (=> $x187 $x201)))
 (let (($x232 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x216 (= $x197 $x232)))
 (let (($x199 (=> $x187 $x216)))
 (let (($x194 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x195 (=> $x187 $x194)))
 (let (($x183 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x184 (= $x187 $x183)))
 (let (($x210 (and (and (= $x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x192) $x184)))
 (let (($x220 (and (and (and (and (and $x210 $x195) $x199) $x202) $x206) $x218)))
 (let (($x221 (= $x220 true)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x155 (concat ?x157 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x163 (concat ?x153 (concat ?x160 ?x155))))
 (let (($x156 (= (_ bv0 32) ?x163)))
 (let ((?x158 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x158 (_ bv1 32))))
 (let (($x214 (= $x166 $x167)))
 (let (($x168 (=> $x125 $x214)))
 (let (($x161 (= ?x158 (_ bv0 32))))
 (let (($x164 (= $x188 $x161)))
 (let (($x165 (=> $x125 $x164)))
 (let ((?x134 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x135 (concat ?x134 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x142 (concat ?x133 (concat ?x137 ?x135))))
 (let (($x143 (= (_ bv0 32) ?x142)))
 (let ((?x144 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x177 (bvuge ?x144 (_ bv1 32))))
 (let (($x148 (= $x187 $x177)))
 (let (($x149 (=> $x125 $x148)))
 (let (($x145 (= ?x144 (_ bv0 32))))
 (let (($x146 (= $x131 $x145)))
 (let (($x147 (=> $x125 $x146)))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x122)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x119)))
 (let (($x176 (= input.spec-%var-t-0.2.0 ?x129)))
 (let (($x213 (=> $x125 $x176)))
 (let ((?x116 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x116 (_ bv1 32))))
 (let (($x124 (= $x125 $x186)))
 (let (($x189 (and (and (and (and (= $x53 (= ?x116 (_ bv0 32))) (=> $x53 $x65)) $x124) $x213) $x147)))
 (let (($x190 (and (and (and $x189 $x149) $x165) $x168)))
 (let (($x173 (= $x190 true)))
 (let ((?x97 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x112 (concat ?x111 (concat ?x108 (concat ?x96 ?x97)))))
 (let (($x113 (= ?x112 input.dst.llvm-%t)))
 (let (($x10 (= $x113 true)))
 (let (($x114 (= $x10 true)))
 (let (($x103 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x99 (= $x103 true)))
 (let (($x106 (= $x99 true)))
 (let (($x107 (= $x106 true)))
 (let ((?x87 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x88 (= (_ bv0 32) ?x87)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x85)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (and $x89 $x86)))
 (let (($x90 (and $x92 $x88)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x71 $x90)))
 (let (($x64 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x80 (and $x82 $x79)))
 (let (($x91 (= $x80 true)))
 (let (($x93 (= $x91 true)))
 (let (($x83 (= $x93 true)))
 (let (($x101 (and $x83 $x107)))
 (let (($x174 (and $x101 $x114)))
 (let (($x180 (and $x174 $x173)))
 (let (($x222 (and $x180 $x221)))
 (let (($x247 (and $x222 $x246)))
 (let (($x283 (and $x247 $x313)))
 (let (($x302 (and $x283 $x301)))
 (let (($x69 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x314 (and $x69 $x302)))
 (let (($x303 (and $x65 $x314)))
 (let (($x304 (and $x65 $x303)))
 (let ((?x36 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x46 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x36 (_ bv3 32)))))
 (let (($x61 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x46)))))))
 (let (($x62 (and $x44 $x45)))
 (let (($x8 (=> (and $x62 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x29 $x46)))))))
 (let (($x37 (bvugt ?x34 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x41 (=> (bvule ?x34 (bvsub (bvadd ?x34 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x56 $x37)))))))
 (let (($x19 (=> (and $x44 (bvule ?x34 (bvsub (bvadd ?x34 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x56 $x37)))))))
 (let (($x57 (and $x19 $x8)))
 (let (($x315 (and $x57 $x304)))
 (let (($x321 (=> $x315 $x320)))
 (not $x321))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var1582X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x43 (concat ?x32 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x41 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x72 (bvadd ?x41 (_ bv3 32))))
 (let ((?x55 (concat (select input.dst.llvm-mem ?x72) (concat ?x22 ?x43))))
 (let ((?x434 (bvadd ?x55 (_ bv8 32))))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd ?x434 (_ bv1 32))) (select input.dst.llvm-mem ?x434))))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd ?x434 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x434 (_ bv2 32))) ?x438))))
 (let (($x445 (= (_ bv0 32) ?x444)))
 (let ((?x446 (ite $x445 (_ bv0 32) (_ bv1 32))))
 (let (($x453 (bvuge ?x446 (_ bv1 32))))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x200 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x203 (concat ?x212 ?x201))))
 (let ((?x420 (bvadd ?x204 (_ bv8 32))))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd ?x420 (_ bv1 32))) (select input.dst.llvm-mem ?x420))))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd ?x420 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x420 (_ bv2 32))) ?x424))))
 (let (($x431 (= (_ bv0 32) ?x430)))
 (let ((?x432 (ite $x431 (_ bv0 32) (_ bv1 32))))
 (let (($x452 (bvuge ?x432 (_ bv1 32))))
 (let (($x454 (= $x452 $x453)))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x206 (_ bv1 32))))
 (let (($x455 (=> $x234 $x454)))
 (let (($x6 (= false false)))
 (let (($x433 (= ?x432 (_ bv0 32))))
 (let (($x450 (and $x234 $x433)))
 (let (($x451 (=> $x450 $x6)))
 (let (($x447 (= ?x446 (_ bv0 32))))
 (let (($x448 (= $x433 $x447)))
 (let (($x449 (=> $x234 $x448)))
 (let ((?x410 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x411 (concat ?x410 (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv8 32))))))
 (let ((?x413 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x416 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x417 (concat ?x416 (concat ?x413 ?x411))))
 (let (($x418 (= ?x417 ?x417)))
 (let (($x419 (=> $x234 $x418)))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x398 (concat ?x397 (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv4 32))))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x403 (concat ?x400 ?x398))))
 (let (($x405 (= ?x404 ?x404)))
 (let (($x406 (=> $x234 $x405)))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1582X))))
 (let ((?x388 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv2 32))) ?x385)))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv3 32))) ?x388)))
 (let (($x392 (= ?x391 ?x391)))
 (let (($x393 (=> $x234 $x392)))
 (let (($x60 (= (_ bv0 32) ?x55)))
 (let ((?x375 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x375 (_ bv1 32))))
 (let (($x380 (= $x234 $x379)))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x378 (=> $x219 $x6)))
 (let (($x459 (and (and (and (and (= ?x204 ?x55) (= $x219 (= ?x375 (_ bv0 32)))) $x378) $x380) $x393)))
 (let (($x464 (and (and (and (and (and $x459 $x406) $x419) $x449) $x451) $x455)))
 (let (($x373 (= true true)))
 (let (($x465 (and $x373 $x464)))
 (let (($x466 (= $x465 true)))
 (let (($x358 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x311 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x359 (= $x311 $x358)))
 (let (($x277 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x100 (=> $x277 $x6)))
 (let (($x25 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x7 (= $x277 $x25)))
 (let (($x355 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x356 (= $x258 $x355)))
 (let (($x263 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x354 (=> $x263 $x6)))
 (let (($x352 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x353 (= $x263 $x352)))
 (let (($x350 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x365 (and (and (and (and (and (and $x350 $x353) $x354) $x356) $x7) $x100) $x359)))
 (let (($x366 (= $x365 true)))
 (let (($x341 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x332 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x333 (= $x332 $x341)))
 (let (($x237 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x334 (=> $x237 $x333)))
 (let (($x330 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x339 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x331 (= $x339 $x330)))
 (let (($x340 (=> $x237 $x331)))
 (let (($x326 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x337 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x338 (= $x337 $x326)))
 (let (($x327 (=> $x237 $x338)))
 (let (($x323 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x70 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x324 (= $x70 $x323)))
 (let (($x325 (=> $x237 $x324)))
 (let (($x321 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x322 (=> $x237 $x321)))
 (let (($x310 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x318 (= $x237 $x310)))
 (let (($x222 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x300 (=> $x222 $x6)))
 (let (($x317 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x309 (= $x222 $x317)))
 (let (($x345 (and (and (and (and (and (and $x309 $x300) $x318) $x322) $x325) $x327) $x340)))
 (let (($x346 (and $x345 $x334)))
 (let (($x347 (= $x346 true)))
 (let (($x301 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x302 (= $x237 $x301)))
 (let (($x291 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x298 (= $x222 $x291)))
 (let (($x94 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x64 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x64 $x94)))
 (let (($x216 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x312 (=> $x216 $x6)))
 (let (($x289 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x35 (= $x216 $x289)))
 (let (($x293 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x306 (and (and (and (and (and (and $x293 $x35) $x312) $x290) $x298) $x300) $x302)))
 (let (($x316 (= $x306 true)))
 (let (($x282 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x313 (= $x311 $x282)))
 (let (($x283 (=> $x64 $x313)))
 (let (($x268 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x269 (= $x277 $x268)))
 (let (($x270 (=> $x64 $x269)))
 (let (($x265 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x259 (= $x258 $x265)))
 (let (($x266 (=> $x64 $x259)))
 (let (($x275 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x264 (= $x263 $x275)))
 (let (($x280 (=> $x64 $x264)))
 (let (($x262 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x256 (=> $x64 $x262)))
 (let (($x276 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x253 (= $x64 $x276)))
 (let (($x285 (and (and (= $x216 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x312) $x253)))
 (let (($x15 (and (and (and (and (and $x285 $x256) $x280) $x266) $x270) $x283)))
 (let (($x299 (= $x15 true)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x226 (concat ?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x236 (concat ?x245 (concat ?x230 ?x226))))
 (let (($x227 (= (_ bv0 32) ?x236)))
 (let ((?x243 (ite $x227 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (bvuge ?x243 (_ bv1 32))))
 (let (($x272 (= $x237 $x244)))
 (let (($x75 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x246 (=> $x75 $x272)))
 (let (($x231 (= ?x243 (_ bv0 32))))
 (let (($x228 (= $x222 $x231)))
 (let (($x238 (=> $x75 $x228)))
 (let (($x218 (= $x64 $x234)))
 (let (($x220 (=> $x75 $x218)))
 (let (($x207 (= $x216 $x219)))
 (let (($x208 (=> $x75 $x207)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x215)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x195)))
 (let (($x198 (= input.spec-%var-t-0.2.0 ?x197)))
 (let (($x232 (=> $x75 $x198)))
 (let (($x59 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x180 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x180 (_ bv1 32))))
 (let (($x209 (= $x75 $x192)))
 (let (($x173 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x182 (=> $x173 $x6)))
 (let (($x191 (= ?x180 (_ bv0 32))))
 (let (($x181 (= $x173 $x191)))
 (let (($x250 (and (and (and (and (and (and $x181 $x182) $x209) $x232) $x208) $x220) $x238)))
 (let (($x251 (and $x250 $x246)))
 (let (($x278 (= $x251 true)))
 (let ((?x113 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x117 (concat ?x53 (concat ?x114 ?x113)))))
 (let (($x167 (= ?x65 input.dst.llvm-%t)))
 (let (($x214 (= $x167 true)))
 (let (($x168 (= $x214 true)))
 (let (($x131 (= (bvand ?x55 (_ bv4294967280 32)) ?x55)))
 (let (($x170 (= (bvand ?x41 (_ bv4294967292 32)) ?x41)))
 (let (($x132 (and $x170 $x131)))
 (let (($x119 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x129 (and true $x119)))
 (let (($x126 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x41 (bvsub ?x41 (_ bv4 32))) (bvult ?x41 (bvsub ?x41 (_ bv4 32))))))
 (let (($x141 (and (and (and $x126 $x129) $x170) $x132)))
 (let (($x137 (= true $x141)))
 (let (($x89 (not $x60)))
 (let (($x154 (=> $x89 $x137)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x148 (concat ?x177 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x58 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x29 (bvadd ?x58 (_ bv3 32))))
 (let ((?x151 (concat (select input.dst.llvm-mem ?x29) (concat ?x171 ?x148))))
 (let (($x153 (= (bvand ?x151 (_ bv4294967280 32)) ?x151)))
 (let (($x147 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let (($x159 (and $x147 $x153)))
 (let (($x145 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv8 32))) (bvult ?x58 (bvsub ?x58 (_ bv8 32))))))
 (let (($x157 (and (and (and $x145 $x129) $x147) $x159)))
 (let (($x178 (= true $x157)))
 (let (($x155 (=> $x60 $x178)))
 (let (($x163 (and $x155 $x154)))
 (let (($x156 (= true $x163)))
 (let (($x136 (or $x60 $x89)))
 (let (($x14 (not $x59)))
 (let (($x135 (and $x14 $x136)))
 (let (($x158 (=> $x135 $x156)))
 (let (($x139 (=> $x14 $x137)))
 (let (($x175 (= input.dst.llvm-%t ?x65)))
 (let (($x68 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x169 (and $x68 $x175)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x96)))
 (let ((?x105 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x105)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x111 $x108)))
 (let (($x98 (and $x95 $x97)))
 (let (($x80 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x80 $x98)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x102)))))))
 (let (($x124 (and (and (and $x110 true) $x109) $x169)))
 (let (($x134 (and $x124 $x139)))
 (let (($x161 (and $x134 $x158)))
 (let (($x164 (= $x161 true)))
 (let (($x165 (= $x164 true)))
 (let (($x172 (= $x165 true)))
 (let (($x85 (and $x14 $x89)))
 (let (($x86 (= $x85 true)))
 (let (($x92 (= $x86 true)))
 (let (($x87 (= $x92 true)))
 (let (($x82 (= $x68 true)))
 (let (($x77 (= $x82 true)))
 (let (($x71 (= $x77 true)))
 (let (($x88 (and $x71 $x87)))
 (let (($x166 (and $x88 $x172)))
 (let (($x190 (and $x166 $x168)))
 (let (($x260 (and $x190 $x278)))
 (let (($x287 (and $x260 $x299)))
 (let (($x307 (and $x287 $x316)))
 (let (($x348 (and $x307 $x347)))
 (let (($x367 (and $x348 $x366)))
 (let (($x76 (and $x75 $x64)))
 (let (($x368 (and $x76 $x367)))
 (let (($x31 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x369 (and $x31 $x368)))
 (let (($x370 (and $x6 $x369)))
 (let (($x371 (and $x6 $x370)))
 (let (($x36 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x29)))
 (let (($x54 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x48 $x36)))))))
 (let (($x17 (and $x14 $x60)))
 (let (($x27 (=> (and $x17 (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x48 $x36)))))))
 (let (($x38 (bvugt ?x41 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x72)))
 (let (($x16 (=> (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x38)))))))
 (let (($x50 (=> (and $x14 (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x13 $x38)))))))
 (let (($x19 (and $x50 $x27)))
 (let (($x372 (and $x19 $x371)))
 (let (($x467 (=> $x372 $x466)))
 (not $x467)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var1582X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x43 (concat ?x32 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x41 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x72 (bvadd ?x41 (_ bv3 32))))
 (let ((?x55 (concat (select input.dst.llvm-mem ?x72) (concat ?x22 ?x43))))
 (let ((?x434 (bvadd ?x55 (_ bv8 32))))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd ?x434 (_ bv1 32))) (select input.dst.llvm-mem ?x434))))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd ?x434 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x434 (_ bv2 32))) ?x438))))
 (let (($x445 (= (_ bv0 32) ?x444)))
 (let ((?x446 (ite $x445 (_ bv0 32) (_ bv1 32))))
 (let (($x453 (bvuge ?x446 (_ bv1 32))))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x200 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x203 (concat ?x212 ?x201))))
 (let ((?x420 (bvadd ?x204 (_ bv8 32))))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd ?x420 (_ bv1 32))) (select input.dst.llvm-mem ?x420))))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd ?x420 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x420 (_ bv2 32))) ?x424))))
 (let (($x431 (= (_ bv0 32) ?x430)))
 (let ((?x432 (ite $x431 (_ bv0 32) (_ bv1 32))))
 (let (($x452 (bvuge ?x432 (_ bv1 32))))
 (let (($x454 (= $x452 $x453)))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x206 (_ bv1 32))))
 (let (($x455 (=> $x234 $x454)))
 (let (($x6 (= false false)))
 (let (($x433 (= ?x432 (_ bv0 32))))
 (let (($x450 (and $x234 $x433)))
 (let (($x451 (=> $x450 $x6)))
 (let (($x447 (= ?x446 (_ bv0 32))))
 (let (($x448 (= $x433 $x447)))
 (let (($x449 (=> $x234 $x448)))
 (let ((?x410 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x411 (concat ?x410 (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv8 32))))))
 (let ((?x413 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x416 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x417 (concat ?x416 (concat ?x413 ?x411))))
 (let (($x418 (= ?x417 ?x417)))
 (let (($x419 (=> $x234 $x418)))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x398 (concat ?x397 (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv4 32))))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1582X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x403 (concat ?x400 ?x398))))
 (let (($x405 (= ?x404 ?x404)))
 (let (($x406 (=> $x234 $x405)))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1582X))))
 (let ((?x388 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv2 32))) ?x385)))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1582X (_ bv3 32))) ?x388)))
 (let (($x392 (= ?x391 ?x391)))
 (let (($x393 (=> $x234 $x392)))
 (let (($x60 (= (_ bv0 32) ?x55)))
 (let ((?x375 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x375 (_ bv1 32))))
 (let (($x380 (= $x234 $x379)))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x378 (=> $x219 $x6)))
 (let (($x459 (and (and (and (and (= ?x204 ?x55) (= $x219 (= ?x375 (_ bv0 32)))) $x378) $x380) $x393)))
 (let (($x464 (and (and (and (and (and $x459 $x406) $x419) $x449) $x451) $x455)))
 (let (($x373 (= true true)))
 (let (($x465 (and $x373 $x464)))
 (let (($x466 (= $x465 true)))
 (let (($x358 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x311 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x359 (= $x311 $x358)))
 (let (($x277 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x100 (=> $x277 $x6)))
 (let (($x25 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x7 (= $x277 $x25)))
 (let (($x355 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x356 (= $x258 $x355)))
 (let (($x263 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x354 (=> $x263 $x6)))
 (let (($x352 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x353 (= $x263 $x352)))
 (let (($x350 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x365 (and (and (and (and (and (and $x350 $x353) $x354) $x356) $x7) $x100) $x359)))
 (let (($x366 (= $x365 true)))
 (let (($x341 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x332 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x333 (= $x332 $x341)))
 (let (($x237 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x334 (=> $x237 $x333)))
 (let (($x330 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x339 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x331 (= $x339 $x330)))
 (let (($x340 (=> $x237 $x331)))
 (let (($x326 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x337 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x338 (= $x337 $x326)))
 (let (($x327 (=> $x237 $x338)))
 (let (($x323 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x70 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x324 (= $x70 $x323)))
 (let (($x325 (=> $x237 $x324)))
 (let (($x321 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x322 (=> $x237 $x321)))
 (let (($x310 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x318 (= $x237 $x310)))
 (let (($x222 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x300 (=> $x222 $x6)))
 (let (($x317 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x309 (= $x222 $x317)))
 (let (($x345 (and (and (and (and (and (and $x309 $x300) $x318) $x322) $x325) $x327) $x340)))
 (let (($x346 (and $x345 $x334)))
 (let (($x347 (= $x346 true)))
 (let (($x301 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x302 (= $x237 $x301)))
 (let (($x291 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x298 (= $x222 $x291)))
 (let (($x94 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x64 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x64 $x94)))
 (let (($x216 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x312 (=> $x216 $x6)))
 (let (($x289 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x35 (= $x216 $x289)))
 (let (($x293 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x306 (and (and (and (and (and (and $x293 $x35) $x312) $x290) $x298) $x300) $x302)))
 (let (($x316 (= $x306 true)))
 (let (($x282 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x313 (= $x311 $x282)))
 (let (($x283 (=> $x64 $x313)))
 (let (($x268 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x269 (= $x277 $x268)))
 (let (($x270 (=> $x64 $x269)))
 (let (($x265 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x259 (= $x258 $x265)))
 (let (($x266 (=> $x64 $x259)))
 (let (($x275 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x264 (= $x263 $x275)))
 (let (($x280 (=> $x64 $x264)))
 (let (($x262 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x256 (=> $x64 $x262)))
 (let (($x276 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x253 (= $x64 $x276)))
 (let (($x285 (and (and (= $x216 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x312) $x253)))
 (let (($x15 (and (and (and (and (and $x285 $x256) $x280) $x266) $x270) $x283)))
 (let (($x299 (= $x15 true)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x226 (concat ?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x236 (concat ?x245 (concat ?x230 ?x226))))
 (let (($x227 (= (_ bv0 32) ?x236)))
 (let ((?x243 (ite $x227 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (bvuge ?x243 (_ bv1 32))))
 (let (($x272 (= $x237 $x244)))
 (let (($x75 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x246 (=> $x75 $x272)))
 (let (($x231 (= ?x243 (_ bv0 32))))
 (let (($x228 (= $x222 $x231)))
 (let (($x238 (=> $x75 $x228)))
 (let (($x218 (= $x64 $x234)))
 (let (($x220 (=> $x75 $x218)))
 (let (($x207 (= $x216 $x219)))
 (let (($x208 (=> $x75 $x207)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x215)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x195)))
 (let (($x198 (= input.spec-%var-t-0.2.0 ?x197)))
 (let (($x232 (=> $x75 $x198)))
 (let (($x59 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x180 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x180 (_ bv1 32))))
 (let (($x209 (= $x75 $x192)))
 (let (($x173 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x182 (=> $x173 $x6)))
 (let (($x191 (= ?x180 (_ bv0 32))))
 (let (($x181 (= $x173 $x191)))
 (let (($x250 (and (and (and (and (and (and $x181 $x182) $x209) $x232) $x208) $x220) $x238)))
 (let (($x251 (and $x250 $x246)))
 (let (($x278 (= $x251 true)))
 (let ((?x113 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x117 (concat ?x53 (concat ?x114 ?x113)))))
 (let (($x167 (= ?x65 input.dst.llvm-%t)))
 (let (($x214 (= $x167 true)))
 (let (($x168 (= $x214 true)))
 (let (($x131 (= (bvand ?x55 (_ bv4294967280 32)) ?x55)))
 (let (($x170 (= (bvand ?x41 (_ bv4294967292 32)) ?x41)))
 (let (($x132 (and $x170 $x131)))
 (let (($x119 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x129 (and true $x119)))
 (let (($x126 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x41 (bvsub ?x41 (_ bv4 32))) (bvult ?x41 (bvsub ?x41 (_ bv4 32))))))
 (let (($x141 (and (and (and $x126 $x129) $x170) $x132)))
 (let (($x137 (= true $x141)))
 (let (($x89 (not $x60)))
 (let (($x154 (=> $x89 $x137)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x148 (concat ?x177 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x58 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x29 (bvadd ?x58 (_ bv3 32))))
 (let ((?x151 (concat (select input.dst.llvm-mem ?x29) (concat ?x171 ?x148))))
 (let (($x153 (= (bvand ?x151 (_ bv4294967280 32)) ?x151)))
 (let (($x147 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let (($x159 (and $x147 $x153)))
 (let (($x145 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv8 32))) (bvult ?x58 (bvsub ?x58 (_ bv8 32))))))
 (let (($x157 (and (and (and $x145 $x129) $x147) $x159)))
 (let (($x178 (= true $x157)))
 (let (($x155 (=> $x60 $x178)))
 (let (($x163 (and $x155 $x154)))
 (let (($x156 (= true $x163)))
 (let (($x136 (or $x60 $x89)))
 (let (($x14 (not $x59)))
 (let (($x135 (and $x14 $x136)))
 (let (($x158 (=> $x135 $x156)))
 (let (($x139 (=> $x14 $x137)))
 (let (($x175 (= input.dst.llvm-%t ?x65)))
 (let (($x68 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x169 (and $x68 $x175)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x96)))
 (let ((?x105 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x105)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x111 $x108)))
 (let (($x98 (and $x95 $x97)))
 (let (($x80 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x80 $x98)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x102)))))))
 (let (($x124 (and (and (and $x110 true) $x109) $x169)))
 (let (($x134 (and $x124 $x139)))
 (let (($x161 (and $x134 $x158)))
 (let (($x164 (= $x161 true)))
 (let (($x165 (= $x164 true)))
 (let (($x172 (= $x165 true)))
 (let (($x85 (and $x14 $x89)))
 (let (($x86 (= $x85 true)))
 (let (($x92 (= $x86 true)))
 (let (($x87 (= $x92 true)))
 (let (($x82 (= $x68 true)))
 (let (($x77 (= $x82 true)))
 (let (($x71 (= $x77 true)))
 (let (($x88 (and $x71 $x87)))
 (let (($x166 (and $x88 $x172)))
 (let (($x190 (and $x166 $x168)))
 (let (($x260 (and $x190 $x278)))
 (let (($x287 (and $x260 $x299)))
 (let (($x307 (and $x287 $x316)))
 (let (($x348 (and $x307 $x347)))
 (let (($x367 (and $x348 $x366)))
 (let (($x76 (and $x75 $x64)))
 (let (($x368 (and $x76 $x367)))
 (let (($x31 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x369 (and $x31 $x368)))
 (let (($x370 (and $x6 $x369)))
 (let (($x371 (and $x6 $x370)))
 (let (($x36 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x29)))
 (let (($x54 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x48 $x36)))))))
 (let (($x17 (and $x14 $x60)))
 (let (($x27 (=> (and $x17 (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x48 $x36)))))))
 (let (($x38 (bvugt ?x41 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x72)))
 (let (($x16 (=> (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x38)))))))
 (let (($x50 (=> (and $x14 (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x13 $x38)))))))
 (let (($x19 (and $x50 $x27)))
 (let (($x372 (and $x19 $x371)))
 (let (($x467 (=> $x372 $x466)))
 (not $x467)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var1626X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x187 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x177 (concat ?x187 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x45 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x36 (bvadd ?x45 (_ bv3 32))))
 (let ((?x162 (concat (select input.dst.llvm-mem ?x36) (concat ?x148 ?x177))))
 (let ((?x433 (bvadd ?x162 (_ bv8 32))))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd ?x433 (_ bv1 32))) (select input.dst.llvm-mem ?x433))))
 (let ((?x441 (concat (select input.dst.llvm-mem (bvadd ?x433 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x433 (_ bv2 32))) ?x439))))
 (let (($x444 (= (_ bv0 32) ?x441)))
 (let ((?x445 (ite $x444 (_ bv0 32) (_ bv1 32))))
 (let (($x462 (bvuge ?x445 (_ bv1 32))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x201 (concat ?x239 ?x202))))
 (let ((?x377 (bvadd ?x217 (_ bv8 32))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv1 32))) (select input.dst.llvm-mem ?x377))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv2 32))) ?x379))))
 (let (($x387 (= (_ bv0 32) ?x386)))
 (let ((?x383 (ite $x387 (_ bv0 32) (_ bv1 32))))
 (let (($x449 (bvuge ?x383 (_ bv1 32))))
 (let (($x450 (= $x449 $x462)))
 (let (($x204 (= (_ bv0 32) ?x217)))
 (let ((?x205 (ite $x204 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x205 (_ bv1 32))))
 (let (($x451 (=> $x208 $x450)))
 (let (($x446 (= ?x445 (_ bv0 32))))
 (let (($x384 (= ?x383 (_ bv0 32))))
 (let (($x447 (= $x384 $x446)))
 (let (($x448 (=> $x208 $x447)))
 (let ((?x425 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x426 (concat ?x425 (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv8 32))))))
 (let ((?x423 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x430 (concat ?x427 (concat ?x423 ?x426))))
 (let (($x431 (= ?x430 ?x430)))
 (let (($x432 (=> $x208 $x431)))
 (let ((?x413 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x409 (concat ?x413 (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv4 32))))))
 (let ((?x408 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x417 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x418 (concat ?x417 (concat ?x408 ?x409))))
 (let (($x419 (= ?x418 ?x418)))
 (let (($x461 (=> $x208 $x419)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1626X))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv2 32))) ?x397)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv3 32))) ?x401)))
 (let (($x460 (= ?x406 ?x406)))
 (let (($x407 (=> $x208 $x460)))
 (let (($x391 (= (_ bv0 32) ?x162)))
 (let ((?x392 (ite $x391 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x392 (_ bv1 32))))
 (let (($x402 (= $x208 $x394)))
 (let (($x393 (= ?x392 (_ bv0 32))))
 (let (($x206 (= ?x205 (_ bv0 32))))
 (let (($x459 (= $x206 $x393)))
 (let (($x388 (= ?x217 ?x162)))
 (let (($x24 (= false false)))
 (let (($x382 (and $x208 $x384)))
 (let (($x385 (=> $x382 $x24)))
 (let (($x376 (=> $x206 $x24)))
 (let (($x464 (and (and (and (and (and (and $x376 $x385) $x388) $x459) $x402) $x407) $x461)))
 (let (($x467 (and (and (and $x464 $x432) $x448) $x451)))
 (let (($x375 (= true true)))
 (let (($x468 (and $x375 $x467)))
 (let (($x20 (= $x468 true)))
 (let (($x363 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x268 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x100 (= $x268 $x363)))
 (let (($x266 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x266 $x24)))
 (let (($x357 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x25 (= $x266 $x357)))
 (let (($x355 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x280 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x356 (= $x280 $x355)))
 (let (($x279 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x361 (=> $x279 $x24)))
 (let (($x360 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x354 (= $x279 $x360)))
 (let (($x352 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x367 (and (and (and (and (and (and $x352 $x354) $x361) $x356) $x25) $x7) $x100)))
 (let (($x368 (= $x367 true)))
 (let (($x331 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x330 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x340 (= $x330 $x331)))
 (let (($x231 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x345 (=> $x231 $x340)))
 (let (($x328 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x327 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x339 (= $x327 $x328)))
 (let (($x329 (=> $x231 $x339)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x337 (= $x325 $x336)))
 (let (($x326 (=> $x231 $x337)))
 (let (($x104 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x51 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x323 (= $x51 $x104)))
 (let (($x324 (=> $x231 $x323)))
 (let (($x321 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x322 (=> $x231 $x321)))
 (let (($x318 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x335 (= $x231 $x318)))
 (let (($x220 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x298 (=> $x220 $x24)))
 (let (($x342 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x310 (= $x220 $x342)))
 (let (($x347 (and (and (and (and (and (and $x310 $x298) $x335) $x322) $x324) $x326) $x329)))
 (let (($x348 (and $x347 $x345)))
 (let (($x349 (= $x348 true)))
 (let (($x315 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x300 (= $x231 $x315)))
 (let (($x294 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x291 (= $x220 $x294)))
 (let (($x94 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x78 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x78 $x94)))
 (let (($x248 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x276 (=> $x248 $x24)))
 (let (($x314 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x303 (= $x248 $x314)))
 (let (($x289 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x307 (and (and (and (and (and (and $x289 $x303) $x276) $x290) $x291) $x298) $x300)))
 (let (($x308 (= $x307 true)))
 (let (($x269 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x292 (=> $x78 $x270)))
 (let (($x267 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x277 (= $x266 $x267)))
 (let (($x281 (=> $x78 $x277)))
 (let (($x286 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (= $x280 $x286)))
 (let (($x265 (=> $x78 $x258)))
 (let (($x257 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x279 $x257)))
 (let (($x264 (=> $x78 $x275)))
 (let (($x262 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x256 (=> $x78 $x262)))
 (let (($x253 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x285 (= $x78 $x253)))
 (let (($x282 (and (and (= $x248 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x276) $x285)))
 (let (($x287 (and (and (and (and (and $x282 $x256) $x264) $x265) $x281) $x292)))
 (let (($x288 (= $x287 true)))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x242 (concat ?x223 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x229 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x225 (concat ?x229 ?x242))))
 (let (($x226 (= (_ bv0 32) ?x241)))
 (let ((?x235 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x235 (_ bv1 32))))
 (let (($x238 (= $x231 $x228)))
 (let (($x64 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x250 (=> $x64 $x238)))
 (let (($x236 (= ?x235 (_ bv0 32))))
 (let (($x227 (= $x220 $x236)))
 (let (($x243 (=> $x64 $x227)))
 (let (($x249 (= $x78 $x208)))
 (let (($x234 (=> $x64 $x249)))
 (let (($x219 (= $x248 $x206)))
 (let (($x207 (=> $x64 $x219)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x183)))
 (let (($x198 (= input.spec-%var-t-0.2.0 ?x197)))
 (let (($x232 (=> $x64 $x198)))
 (let (($x30 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x6 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x6 (_ bv1 32))))
 (let (($x273 (= $x64 $x209)))
 (let (($x181 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x192 (=> $x181 $x24)))
 (let (($x182 (= ?x6 (_ bv0 32))))
 (let (($x247 (= $x181 $x182)))
 (let (($x278 (and (and (and (and (and (and $x247 $x192) $x273) $x232) $x207) $x234) $x243)))
 (let (($x260 (and $x278 $x250)))
 (let (($x261 (= $x260 true)))
 (let ((?x185 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x116 (concat ?x114 (concat ?x115 ?x185)))))
 (let (($x190 (= ?x65 input.dst.llvm-%t)))
 (let (($x173 (= $x190 true)))
 (let (($x180 (= $x173 true)))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x22 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x41 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x38 (bvadd ?x41 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x38) (concat ?x43 ?x69))))
 (let (($x131 (= (bvand ?x60 (_ bv4294967280 32)) ?x60)))
 (let (($x133 (= (bvand ?x41 (_ bv4294967292 32)) ?x41)))
 (let (($x132 (and $x133 $x131)))
 (let (($x138 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x176 (and true $x138)))
 (let (($x120 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x41 (bvsub ?x41 (_ bv4 32))) (bvult ?x41 (bvsub ?x41 (_ bv4 32))))))
 (let (($x139 (and (and (and $x120 $x176) $x133) $x132)))
 (let (($x134 (= true $x139)))
 (let (($x17 (= (_ bv0 32) ?x60)))
 (let (($x142 (not $x17)))
 (let (($x158 (=> $x142 $x134)))
 (let (($x159 (= (bvand ?x162 (_ bv4294967280 32)) ?x162)))
 (let (($x188 (= (bvand ?x45 (_ bv4294967292 32)) ?x45)))
 (let (($x157 (and $x188 $x159)))
 (let (($x147 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x45 (bvsub ?x45 (_ bv8 32))) (bvult ?x45 (bvsub ?x45 (_ bv8 32))))))
 (let (($x154 (and (and (and $x147 $x176) $x188) $x157)))
 (let (($x163 (= true $x154)))
 (let (($x156 (=> $x17 $x163)))
 (let (($x161 (and $x156 $x158)))
 (let (($x164 (= true $x161)))
 (let (($x140 (or $x17 $x142)))
 (let (($x59 (not $x30)))
 (let (($x143 (and $x59 $x140)))
 (let (($x165 (=> $x143 $x164)))
 (let (($x136 (=> $x59 $x134)))
 (let (($x175 (= input.dst.llvm-%t ?x65)))
 (let (($x77 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x169 (and $x77 $x175)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x96)))
 (let ((?x105 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x105)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x111 $x108)))
 (let (($x98 (and $x95 $x97)))
 (let (($x101 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x101 $x98)))
 (let (($x99 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x80 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x99)))))))
 (let (($x179 (and (and (and $x80 true) $x109) $x169)))
 (let (($x135 (and $x179 $x136)))
 (let (($x172 (and $x135 $x165)))
 (let (($x166 (= $x172 true)))
 (let (($x167 (= $x166 true)))
 (let (($x214 (= $x167 true)))
 (let (($x39 (and $x59 $x17)))
 (let (($x86 (= $x39 true)))
 (let (($x92 (= $x86 true)))
 (let (($x87 (= $x92 true)))
 (let (($x71 (= $x77 true)))
 (let (($x89 (= $x71 true)))
 (let (($x85 (= $x89 true)))
 (let (($x88 (and $x85 $x87)))
 (let (($x168 (and $x88 $x214)))
 (let (($x191 (and $x168 $x180)))
 (let (($x274 (and $x191 $x261)))
 (let (($x293 (and $x274 $x288)))
 (let (($x317 (and $x293 $x308)))
 (let (($x350 (and $x317 $x349)))
 (let (($x369 (and $x350 $x368)))
 (let (($x67 (and $x64 $x78)))
 (let (($x370 (and $x67 $x369)))
 (let (($x75 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x371 (and $x75 $x370)))
 (let (($x372 (and $x24 $x371)))
 (let (($x373 (and $x24 $x372)))
 (let (($x47 (bvugt ?x45 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x8 (=> (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x47)))))))
 (let (($x23 (=> (and $x39 (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x5 $x47)))))))
 (let (($x61 (bvugt ?x41 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x52 (=> (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x61)))))))
 (let (($x57 (=> (and $x59 (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x61)))))))
 (let (($x49 (and $x57 $x23)))
 (let (($x374 (and $x49 $x373)))
 (let (($x90 (=> $x374 $x20)))
 (not $x90))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var1626X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x187 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x177 (concat ?x187 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x45 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x36 (bvadd ?x45 (_ bv3 32))))
 (let ((?x162 (concat (select input.dst.llvm-mem ?x36) (concat ?x148 ?x177))))
 (let ((?x433 (bvadd ?x162 (_ bv8 32))))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd ?x433 (_ bv1 32))) (select input.dst.llvm-mem ?x433))))
 (let ((?x441 (concat (select input.dst.llvm-mem (bvadd ?x433 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x433 (_ bv2 32))) ?x439))))
 (let (($x444 (= (_ bv0 32) ?x441)))
 (let ((?x445 (ite $x444 (_ bv0 32) (_ bv1 32))))
 (let (($x462 (bvuge ?x445 (_ bv1 32))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x201 (concat ?x239 ?x202))))
 (let ((?x377 (bvadd ?x217 (_ bv8 32))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv1 32))) (select input.dst.llvm-mem ?x377))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv2 32))) ?x379))))
 (let (($x387 (= (_ bv0 32) ?x386)))
 (let ((?x383 (ite $x387 (_ bv0 32) (_ bv1 32))))
 (let (($x449 (bvuge ?x383 (_ bv1 32))))
 (let (($x450 (= $x449 $x462)))
 (let (($x204 (= (_ bv0 32) ?x217)))
 (let ((?x205 (ite $x204 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x205 (_ bv1 32))))
 (let (($x451 (=> $x208 $x450)))
 (let (($x446 (= ?x445 (_ bv0 32))))
 (let (($x384 (= ?x383 (_ bv0 32))))
 (let (($x447 (= $x384 $x446)))
 (let (($x448 (=> $x208 $x447)))
 (let ((?x425 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x426 (concat ?x425 (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv8 32))))))
 (let ((?x423 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x430 (concat ?x427 (concat ?x423 ?x426))))
 (let (($x431 (= ?x430 ?x430)))
 (let (($x432 (=> $x208 $x431)))
 (let ((?x413 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x409 (concat ?x413 (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv4 32))))))
 (let ((?x408 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x417 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1626X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x418 (concat ?x417 (concat ?x408 ?x409))))
 (let (($x419 (= ?x418 ?x418)))
 (let (($x461 (=> $x208 $x419)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1626X))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv2 32))) ?x397)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1626X (_ bv3 32))) ?x401)))
 (let (($x460 (= ?x406 ?x406)))
 (let (($x407 (=> $x208 $x460)))
 (let (($x391 (= (_ bv0 32) ?x162)))
 (let ((?x392 (ite $x391 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x392 (_ bv1 32))))
 (let (($x402 (= $x208 $x394)))
 (let (($x393 (= ?x392 (_ bv0 32))))
 (let (($x206 (= ?x205 (_ bv0 32))))
 (let (($x459 (= $x206 $x393)))
 (let (($x388 (= ?x217 ?x162)))
 (let (($x24 (= false false)))
 (let (($x382 (and $x208 $x384)))
 (let (($x385 (=> $x382 $x24)))
 (let (($x376 (=> $x206 $x24)))
 (let (($x464 (and (and (and (and (and (and $x376 $x385) $x388) $x459) $x402) $x407) $x461)))
 (let (($x467 (and (and (and $x464 $x432) $x448) $x451)))
 (let (($x375 (= true true)))
 (let (($x468 (and $x375 $x467)))
 (let (($x20 (= $x468 true)))
 (let (($x363 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x268 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x100 (= $x268 $x363)))
 (let (($x266 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x266 $x24)))
 (let (($x357 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x25 (= $x266 $x357)))
 (let (($x355 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x280 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x356 (= $x280 $x355)))
 (let (($x279 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x361 (=> $x279 $x24)))
 (let (($x360 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x354 (= $x279 $x360)))
 (let (($x352 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x367 (and (and (and (and (and (and $x352 $x354) $x361) $x356) $x25) $x7) $x100)))
 (let (($x368 (= $x367 true)))
 (let (($x331 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x330 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x340 (= $x330 $x331)))
 (let (($x231 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x345 (=> $x231 $x340)))
 (let (($x328 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x327 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x339 (= $x327 $x328)))
 (let (($x329 (=> $x231 $x339)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x337 (= $x325 $x336)))
 (let (($x326 (=> $x231 $x337)))
 (let (($x104 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x51 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x323 (= $x51 $x104)))
 (let (($x324 (=> $x231 $x323)))
 (let (($x321 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x322 (=> $x231 $x321)))
 (let (($x318 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x335 (= $x231 $x318)))
 (let (($x220 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x298 (=> $x220 $x24)))
 (let (($x342 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x310 (= $x220 $x342)))
 (let (($x347 (and (and (and (and (and (and $x310 $x298) $x335) $x322) $x324) $x326) $x329)))
 (let (($x348 (and $x347 $x345)))
 (let (($x349 (= $x348 true)))
 (let (($x315 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x300 (= $x231 $x315)))
 (let (($x294 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x291 (= $x220 $x294)))
 (let (($x94 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x78 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x78 $x94)))
 (let (($x248 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x276 (=> $x248 $x24)))
 (let (($x314 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x303 (= $x248 $x314)))
 (let (($x289 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x307 (and (and (and (and (and (and $x289 $x303) $x276) $x290) $x291) $x298) $x300)))
 (let (($x308 (= $x307 true)))
 (let (($x269 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x292 (=> $x78 $x270)))
 (let (($x267 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x277 (= $x266 $x267)))
 (let (($x281 (=> $x78 $x277)))
 (let (($x286 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (= $x280 $x286)))
 (let (($x265 (=> $x78 $x258)))
 (let (($x257 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x279 $x257)))
 (let (($x264 (=> $x78 $x275)))
 (let (($x262 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x256 (=> $x78 $x262)))
 (let (($x253 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x285 (= $x78 $x253)))
 (let (($x282 (and (and (= $x248 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x276) $x285)))
 (let (($x287 (and (and (and (and (and $x282 $x256) $x264) $x265) $x281) $x292)))
 (let (($x288 (= $x287 true)))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x242 (concat ?x223 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x229 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x225 (concat ?x229 ?x242))))
 (let (($x226 (= (_ bv0 32) ?x241)))
 (let ((?x235 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x235 (_ bv1 32))))
 (let (($x238 (= $x231 $x228)))
 (let (($x64 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x250 (=> $x64 $x238)))
 (let (($x236 (= ?x235 (_ bv0 32))))
 (let (($x227 (= $x220 $x236)))
 (let (($x243 (=> $x64 $x227)))
 (let (($x249 (= $x78 $x208)))
 (let (($x234 (=> $x64 $x249)))
 (let (($x219 (= $x248 $x206)))
 (let (($x207 (=> $x64 $x219)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x183)))
 (let (($x198 (= input.spec-%var-t-0.2.0 ?x197)))
 (let (($x232 (=> $x64 $x198)))
 (let (($x30 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x6 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x6 (_ bv1 32))))
 (let (($x273 (= $x64 $x209)))
 (let (($x181 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x192 (=> $x181 $x24)))
 (let (($x182 (= ?x6 (_ bv0 32))))
 (let (($x247 (= $x181 $x182)))
 (let (($x278 (and (and (and (and (and (and $x247 $x192) $x273) $x232) $x207) $x234) $x243)))
 (let (($x260 (and $x278 $x250)))
 (let (($x261 (= $x260 true)))
 (let ((?x185 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x116 (concat ?x114 (concat ?x115 ?x185)))))
 (let (($x190 (= ?x65 input.dst.llvm-%t)))
 (let (($x173 (= $x190 true)))
 (let (($x180 (= $x173 true)))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x22 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x41 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x38 (bvadd ?x41 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x38) (concat ?x43 ?x69))))
 (let (($x131 (= (bvand ?x60 (_ bv4294967280 32)) ?x60)))
 (let (($x133 (= (bvand ?x41 (_ bv4294967292 32)) ?x41)))
 (let (($x132 (and $x133 $x131)))
 (let (($x138 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x176 (and true $x138)))
 (let (($x120 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x41 (bvsub ?x41 (_ bv4 32))) (bvult ?x41 (bvsub ?x41 (_ bv4 32))))))
 (let (($x139 (and (and (and $x120 $x176) $x133) $x132)))
 (let (($x134 (= true $x139)))
 (let (($x17 (= (_ bv0 32) ?x60)))
 (let (($x142 (not $x17)))
 (let (($x158 (=> $x142 $x134)))
 (let (($x159 (= (bvand ?x162 (_ bv4294967280 32)) ?x162)))
 (let (($x188 (= (bvand ?x45 (_ bv4294967292 32)) ?x45)))
 (let (($x157 (and $x188 $x159)))
 (let (($x147 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x45 (bvsub ?x45 (_ bv8 32))) (bvult ?x45 (bvsub ?x45 (_ bv8 32))))))
 (let (($x154 (and (and (and $x147 $x176) $x188) $x157)))
 (let (($x163 (= true $x154)))
 (let (($x156 (=> $x17 $x163)))
 (let (($x161 (and $x156 $x158)))
 (let (($x164 (= true $x161)))
 (let (($x140 (or $x17 $x142)))
 (let (($x59 (not $x30)))
 (let (($x143 (and $x59 $x140)))
 (let (($x165 (=> $x143 $x164)))
 (let (($x136 (=> $x59 $x134)))
 (let (($x175 (= input.dst.llvm-%t ?x65)))
 (let (($x77 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x169 (and $x77 $x175)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x96)))
 (let ((?x105 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x105)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x111 $x108)))
 (let (($x98 (and $x95 $x97)))
 (let (($x101 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x101 $x98)))
 (let (($x99 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x80 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x99)))))))
 (let (($x179 (and (and (and $x80 true) $x109) $x169)))
 (let (($x135 (and $x179 $x136)))
 (let (($x172 (and $x135 $x165)))
 (let (($x166 (= $x172 true)))
 (let (($x167 (= $x166 true)))
 (let (($x214 (= $x167 true)))
 (let (($x39 (and $x59 $x17)))
 (let (($x86 (= $x39 true)))
 (let (($x92 (= $x86 true)))
 (let (($x87 (= $x92 true)))
 (let (($x71 (= $x77 true)))
 (let (($x89 (= $x71 true)))
 (let (($x85 (= $x89 true)))
 (let (($x88 (and $x85 $x87)))
 (let (($x168 (and $x88 $x214)))
 (let (($x191 (and $x168 $x180)))
 (let (($x274 (and $x191 $x261)))
 (let (($x293 (and $x274 $x288)))
 (let (($x317 (and $x293 $x308)))
 (let (($x350 (and $x317 $x349)))
 (let (($x369 (and $x350 $x368)))
 (let (($x67 (and $x64 $x78)))
 (let (($x370 (and $x67 $x369)))
 (let (($x75 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x371 (and $x75 $x370)))
 (let (($x372 (and $x24 $x371)))
 (let (($x373 (and $x24 $x372)))
 (let (($x47 (bvugt ?x45 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x8 (=> (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x47)))))))
 (let (($x23 (=> (and $x39 (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x5 $x47)))))))
 (let (($x61 (bvugt ?x41 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x52 (=> (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x61)))))))
 (let (($x57 (=> (and $x59 (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x61)))))))
 (let (($x49 (and $x57 $x23)))
 (let (($x374 (and $x49 $x373)))
 (let (($x90 (=> $x374 $x20)))
 (not $x90))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var1660X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x230 (concat ?x242 (concat ?x222 ?x245))))
 (let (($x241 (= (_ bv0 32) ?x230)))
 (let ((?x226 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (= ?x226 (_ bv0 32))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x233 (concat ?x239 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x217 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x217 (concat ?x199 ?x233))))
 (let ((?x458 (bvadd ?x204 (_ bv8 32))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x458 (_ bv1 32))) (select input.dst.llvm-mem ?x458))))
 (let ((?x382 (concat (select input.dst.llvm-mem (bvadd ?x458 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x458 (_ bv2 32))) ?x379))))
 (let (($x385 (= (_ bv0 32) ?x382)))
 (let ((?x463 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (= ?x463 (_ bv0 32))))
 (let (($x430 (= $x388 $x235)))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x206 (_ bv1 32))))
 (let (($x431 (=> $x208 $x430)))
 (let (($x278 (bvuge ?x226 (_ bv1 32))))
 (let (($x428 (bvuge ?x463 (_ bv1 32))))
 (let (($x426 (= $x428 $x278)))
 (let (($x421 (=> $x208 $x426)))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x461 (concat ?x419 (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv8 32))))))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x422 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x423 (concat ?x422 (concat ?x420 ?x461))))
 (let (($x429 (= ?x423 ?x423)))
 (let (($x425 (=> $x208 $x429)))
 (let ((?x407 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x455 (concat ?x407 (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv4 32))))))
 (let ((?x414 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x408 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x412 (concat ?x408 (concat ?x414 ?x455))))
 (let (($x413 (= ?x412 ?x412)))
 (let (($x416 (=> $x208 $x413)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1660X))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv2 32))) ?x403)))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv3 32))) ?x395)))
 (let (($x399 (= ?x396 ?x396)))
 (let (($x397 (=> $x208 $x399)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x237 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (= ?x237 (_ bv0 32))))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x459 (= $x219 $x209)))
 (let (($x215 (bvuge ?x237 (_ bv1 32))))
 (let (($x393 (= $x208 $x215)))
 (let (($x392 (= ?x204 input.dst.llvm-%t)))
 (let (($x75 (= false false)))
 (let (($x452 (and $x208 $x388)))
 (let (($x391 (=> $x452 $x75)))
 (let (($x380 (=> $x219 $x75)))
 (let (($x440 (and (and (and (and (and (and $x380 $x391) $x392) $x393) $x459) $x397) $x416)))
 (let (($x443 (and (and (and $x440 $x425) $x421) $x431)))
 (let (($x390 (= true true)))
 (let (($x434 (and $x390 $x443)))
 (let (($x439 (= $x434 true)))
 (let (($x366 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x281 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x363 (= $x281 $x366)))
 (let (($x259 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x259 $x75)))
 (let (($x25 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x365 (= $x259 $x25)))
 (let (($x359 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x280 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x362 (= $x280 $x359)))
 (let (($x263 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x356 (=> $x263 $x75)))
 (let (($x358 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x355 (= $x263 $x358)))
 (let (($x364 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x371 (and (and (and (and (and (and $x364 $x355) $x356) $x362) $x365) $x7) $x363)))
 (let (($x372 (= $x371 true)))
 (let (($x347 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x329 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x330 (= $x329 $x347)))
 (let (($x243 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x331 (=> $x243 $x330)))
 (let (($x344 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x338 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x328 (= $x338 $x344)))
 (let (($x339 (=> $x243 $x328)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x337 (= $x325 $x336)))
 (let (($x326 (=> $x243 $x337)))
 (let (($x323 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x70 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x324 (= $x70 $x323)))
 (let (($x334 (=> $x243 $x324)))
 (let (($x333 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x343 (=> $x243 $x333)))
 (let (($x319 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x320 (= $x243 $x319)))
 (let (($x218 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x298 (=> $x218 $x75)))
 (let (($x335 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x341 (= $x218 $x335)))
 (let (($x351 (and (and (and (and (and (and $x341 $x298) $x320) $x343) $x334) $x326) $x339)))
 (let (($x352 (and $x351 $x331)))
 (let (($x353 (= $x352 true)))
 (let (($x316 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x315 (= $x243 $x316)))
 (let (($x291 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x306 (= $x218 $x291)))
 (let (($x302 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x82 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x304 (= $x82 $x302)))
 (let (($x216 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x282 (=> $x216 $x75)))
 (let (($x94 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x290 (= $x216 $x94)))
 (let (($x305 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x342 (and (and (and (and (and (and $x305 $x290) $x282) $x304) $x306) $x298) $x315)))
 (let (($x310 (= $x342 true)))
 (let (($x299 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x268 (= $x281 $x299)))
 (let (($x269 (=> $x82 $x268)))
 (let (($x296 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x267 (= $x259 $x296)))
 (let (($x277 (=> $x82 $x267)))
 (let (($x286 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (= $x280 $x286)))
 (let (($x265 (=> $x82 $x258)))
 (let (($x275 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x264 (= $x263 $x275)))
 (let (($x283 (=> $x82 $x264)))
 (let (($x313 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x295 (=> $x82 $x313)))
 (let (($x254 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x255 (= $x82 $x254)))
 (let (($x292 (and (and (= $x216 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x282) $x255)))
 (let (($x289 (and (and (and (and (and $x292 $x295) $x283) $x265) $x277) $x269)))
 (let (($x35 (= $x289 true)))
 (let (($x231 (= $x243 $x278)))
 (let (($x67 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x228 (=> $x67 $x231)))
 (let (($x236 (= $x218 $x235)))
 (let (($x227 (=> $x67 $x236)))
 (let (($x249 (= $x82 $x208)))
 (let (($x234 (=> $x67 $x249)))
 (let (($x207 (= $x216 $x219)))
 (let (($x246 (=> $x67 $x207)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x193)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x183)))
 (let (($x272 (= input.spec-%var-t-0.2.0 ?x232)))
 (let (($x248 (=> $x67 $x272)))
 (let (($x195 (= $x67 $x215)))
 (let (($x192 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x244 (=> $x192 $x75)))
 (let (($x273 (= $x192 $x209)))
 (let (($x252 (and (and (and (and (and (and $x273 $x244) $x195) $x248) $x246) $x234) $x227)))
 (let (($x312 (and $x252 $x228)))
 (let (($x284 (= $x312 true)))
 (let ((?x114 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x179 (concat ?x169 (concat ?x113 (concat ?x115 ?x114)))))
 (let (($x6 (= ?x179 input.dst.llvm-%t)))
 (let (($x182 (= $x6 true)))
 (let (($x247 (= $x182 true)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x22 (concat ?x74 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x46 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x46 (_ bv3 32))))
 (let ((?x39 (concat (select input.dst.llvm-mem ?x26) (concat ?x66 ?x22))))
 (let (($x134 (= (bvand ?x39 (_ bv4294967280 32)) ?x39)))
 (let (($x132 (= (bvand ?x46 (_ bv4294967292 32)) ?x46)))
 (let (($x136 (and $x132 $x134)))
 (let (($x133 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x137 (and true $x133)))
 (let (($x138 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x46 (bvsub ?x46 (_ bv4 32))) (bvult ?x46 (bvsub ?x46 (_ bv4 32))))))
 (let (($x140 (and (and (and $x138 $x137) $x132) $x136)))
 (let (($x143 (= true $x140)))
 (let (($x58 (= (_ bv0 32) ?x39)))
 (let (($x160 (not $x58)))
 (let (($x166 (=> $x160 $x143)))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x177 (concat ?x149 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x48 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x37 (bvadd ?x48 (_ bv3 32))))
 (let ((?x157 (concat (select input.dst.llvm-mem ?x37) (concat ?x162 ?x177))))
 (let (($x163 (= (bvand ?x157 (_ bv4294967280 32)) ?x157)))
 (let (($x148 (= (bvand ?x48 (_ bv4294967292 32)) ?x48)))
 (let (($x156 (and $x148 $x163)))
 (let (($x151 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x48 (bvsub ?x48 (_ bv8 32))) (bvult ?x48 (bvsub ?x48 (_ bv8 32))))))
 (let (($x164 (and (and (and $x151 $x137) $x148) $x156)))
 (let (($x165 (= true $x164)))
 (let (($x172 (=> $x58 $x165)))
 (let (($x167 (and $x172 $x166)))
 (let (($x214 (= true $x167)))
 (let (($x146 (or $x58 $x160)))
 (let (($x56 (not $x41)))
 (let (($x147 (and $x56 $x146)))
 (let (($x168 (=> $x147 $x214)))
 (let (($x145 (=> $x56 $x143)))
 (let (($x123 (= input.dst.llvm-%t ?x179)))
 (let (($x85 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x128 (and $x85 $x123)))
 (let ((?x109 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x121 (= (_ bv0 32) ?x109)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x95 $x97)))
 (let (($x174 (and $x98 $x121)))
 (let (($x99 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x99 $x174)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x125 $x80)))))))
 (let (($x120 (and (and (and $x108 true) $x116) $x128)))
 (let (($x144 (and $x120 $x145)))
 (let (($x190 (and $x144 $x168)))
 (let (($x173 (= $x190 true)))
 (let (($x180 (= $x173 true)))
 (let (($x191 (= $x180 true)))
 (let (($x88 (= $x41 true)))
 (let (($x83 (= $x88 true)))
 (let (($x84 (= $x83 true)))
 (let (($x86 (= $x85 true)))
 (let (($x92 (= $x86 true)))
 (let (($x87 (= $x92 true)))
 (let (($x79 (and $x87 $x84)))
 (let (($x181 (and $x79 $x191)))
 (let (($x24 (and $x181 $x247)))
 (let (($x276 (and $x24 $x284)))
 (let (($x314 (and $x276 $x35)))
 (let (($x332 (and $x314 $x310)))
 (let (($x360 (and $x332 $x353)))
 (let (($x373 (and $x360 $x372)))
 (let (($x77 (and $x67 $x82)))
 (let (($x374 (and $x77 $x373)))
 (let (($x76 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x375 (and $x76 $x374)))
 (let (($x376 (and $x75 $x375)))
 (let (($x377 (and $x75 $x376)))
 (let (($x54 (bvugt ?x48 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x37)))
 (let (($x81 (=> (bvule ?x48 (bvsub (bvadd ?x48 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x54)))))))
 (let (($x45 (and $x56 $x58)))
 (let (($x19 (=> (and $x45 (bvule ?x48 (bvsub (bvadd ?x48 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x40 $x54)))))))
 (let (($x16 (bvugt ?x46 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x32 (=> (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x16)))))))
 (let (($x11 (=> (and $x56 (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x16)))))))
 (let (($x36 (and $x11 $x19)))
 (let (($x389 (and $x36 $x377)))
 (let (($x437 (=> $x389 $x439)))
 (not $x437)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var1660X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x230 (concat ?x242 (concat ?x222 ?x245))))
 (let (($x241 (= (_ bv0 32) ?x230)))
 (let ((?x226 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (= ?x226 (_ bv0 32))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x233 (concat ?x239 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x217 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x217 (concat ?x199 ?x233))))
 (let ((?x458 (bvadd ?x204 (_ bv8 32))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x458 (_ bv1 32))) (select input.dst.llvm-mem ?x458))))
 (let ((?x382 (concat (select input.dst.llvm-mem (bvadd ?x458 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x458 (_ bv2 32))) ?x379))))
 (let (($x385 (= (_ bv0 32) ?x382)))
 (let ((?x463 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (= ?x463 (_ bv0 32))))
 (let (($x430 (= $x388 $x235)))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x206 (_ bv1 32))))
 (let (($x431 (=> $x208 $x430)))
 (let (($x278 (bvuge ?x226 (_ bv1 32))))
 (let (($x428 (bvuge ?x463 (_ bv1 32))))
 (let (($x426 (= $x428 $x278)))
 (let (($x421 (=> $x208 $x426)))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x461 (concat ?x419 (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv8 32))))))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x422 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x423 (concat ?x422 (concat ?x420 ?x461))))
 (let (($x429 (= ?x423 ?x423)))
 (let (($x425 (=> $x208 $x429)))
 (let ((?x407 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x455 (concat ?x407 (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv4 32))))))
 (let ((?x414 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x408 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1660X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x412 (concat ?x408 (concat ?x414 ?x455))))
 (let (($x413 (= ?x412 ?x412)))
 (let (($x416 (=> $x208 $x413)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1660X))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv2 32))) ?x403)))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1660X (_ bv3 32))) ?x395)))
 (let (($x399 (= ?x396 ?x396)))
 (let (($x397 (=> $x208 $x399)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x237 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (= ?x237 (_ bv0 32))))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x459 (= $x219 $x209)))
 (let (($x215 (bvuge ?x237 (_ bv1 32))))
 (let (($x393 (= $x208 $x215)))
 (let (($x392 (= ?x204 input.dst.llvm-%t)))
 (let (($x75 (= false false)))
 (let (($x452 (and $x208 $x388)))
 (let (($x391 (=> $x452 $x75)))
 (let (($x380 (=> $x219 $x75)))
 (let (($x440 (and (and (and (and (and (and $x380 $x391) $x392) $x393) $x459) $x397) $x416)))
 (let (($x443 (and (and (and $x440 $x425) $x421) $x431)))
 (let (($x390 (= true true)))
 (let (($x434 (and $x390 $x443)))
 (let (($x439 (= $x434 true)))
 (let (($x366 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x281 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x363 (= $x281 $x366)))
 (let (($x259 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x259 $x75)))
 (let (($x25 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x365 (= $x259 $x25)))
 (let (($x359 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x280 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x362 (= $x280 $x359)))
 (let (($x263 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x356 (=> $x263 $x75)))
 (let (($x358 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x355 (= $x263 $x358)))
 (let (($x364 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x371 (and (and (and (and (and (and $x364 $x355) $x356) $x362) $x365) $x7) $x363)))
 (let (($x372 (= $x371 true)))
 (let (($x347 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x329 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x330 (= $x329 $x347)))
 (let (($x243 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x331 (=> $x243 $x330)))
 (let (($x344 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x338 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x328 (= $x338 $x344)))
 (let (($x339 (=> $x243 $x328)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x337 (= $x325 $x336)))
 (let (($x326 (=> $x243 $x337)))
 (let (($x323 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x70 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x324 (= $x70 $x323)))
 (let (($x334 (=> $x243 $x324)))
 (let (($x333 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x343 (=> $x243 $x333)))
 (let (($x319 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x320 (= $x243 $x319)))
 (let (($x218 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x298 (=> $x218 $x75)))
 (let (($x335 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x341 (= $x218 $x335)))
 (let (($x351 (and (and (and (and (and (and $x341 $x298) $x320) $x343) $x334) $x326) $x339)))
 (let (($x352 (and $x351 $x331)))
 (let (($x353 (= $x352 true)))
 (let (($x316 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x315 (= $x243 $x316)))
 (let (($x291 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x306 (= $x218 $x291)))
 (let (($x302 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x82 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x304 (= $x82 $x302)))
 (let (($x216 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x282 (=> $x216 $x75)))
 (let (($x94 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x290 (= $x216 $x94)))
 (let (($x305 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x342 (and (and (and (and (and (and $x305 $x290) $x282) $x304) $x306) $x298) $x315)))
 (let (($x310 (= $x342 true)))
 (let (($x299 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x268 (= $x281 $x299)))
 (let (($x269 (=> $x82 $x268)))
 (let (($x296 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x267 (= $x259 $x296)))
 (let (($x277 (=> $x82 $x267)))
 (let (($x286 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (= $x280 $x286)))
 (let (($x265 (=> $x82 $x258)))
 (let (($x275 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x264 (= $x263 $x275)))
 (let (($x283 (=> $x82 $x264)))
 (let (($x313 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x295 (=> $x82 $x313)))
 (let (($x254 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x255 (= $x82 $x254)))
 (let (($x292 (and (and (= $x216 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x282) $x255)))
 (let (($x289 (and (and (and (and (and $x292 $x295) $x283) $x265) $x277) $x269)))
 (let (($x35 (= $x289 true)))
 (let (($x231 (= $x243 $x278)))
 (let (($x67 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x228 (=> $x67 $x231)))
 (let (($x236 (= $x218 $x235)))
 (let (($x227 (=> $x67 $x236)))
 (let (($x249 (= $x82 $x208)))
 (let (($x234 (=> $x67 $x249)))
 (let (($x207 (= $x216 $x219)))
 (let (($x246 (=> $x67 $x207)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x193)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x183)))
 (let (($x272 (= input.spec-%var-t-0.2.0 ?x232)))
 (let (($x248 (=> $x67 $x272)))
 (let (($x195 (= $x67 $x215)))
 (let (($x192 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x244 (=> $x192 $x75)))
 (let (($x273 (= $x192 $x209)))
 (let (($x252 (and (and (and (and (and (and $x273 $x244) $x195) $x248) $x246) $x234) $x227)))
 (let (($x312 (and $x252 $x228)))
 (let (($x284 (= $x312 true)))
 (let ((?x114 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x179 (concat ?x169 (concat ?x113 (concat ?x115 ?x114)))))
 (let (($x6 (= ?x179 input.dst.llvm-%t)))
 (let (($x182 (= $x6 true)))
 (let (($x247 (= $x182 true)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x22 (concat ?x74 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x46 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x46 (_ bv3 32))))
 (let ((?x39 (concat (select input.dst.llvm-mem ?x26) (concat ?x66 ?x22))))
 (let (($x134 (= (bvand ?x39 (_ bv4294967280 32)) ?x39)))
 (let (($x132 (= (bvand ?x46 (_ bv4294967292 32)) ?x46)))
 (let (($x136 (and $x132 $x134)))
 (let (($x133 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x137 (and true $x133)))
 (let (($x138 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x46 (bvsub ?x46 (_ bv4 32))) (bvult ?x46 (bvsub ?x46 (_ bv4 32))))))
 (let (($x140 (and (and (and $x138 $x137) $x132) $x136)))
 (let (($x143 (= true $x140)))
 (let (($x58 (= (_ bv0 32) ?x39)))
 (let (($x160 (not $x58)))
 (let (($x166 (=> $x160 $x143)))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x177 (concat ?x149 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x48 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x37 (bvadd ?x48 (_ bv3 32))))
 (let ((?x157 (concat (select input.dst.llvm-mem ?x37) (concat ?x162 ?x177))))
 (let (($x163 (= (bvand ?x157 (_ bv4294967280 32)) ?x157)))
 (let (($x148 (= (bvand ?x48 (_ bv4294967292 32)) ?x48)))
 (let (($x156 (and $x148 $x163)))
 (let (($x151 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x48 (bvsub ?x48 (_ bv8 32))) (bvult ?x48 (bvsub ?x48 (_ bv8 32))))))
 (let (($x164 (and (and (and $x151 $x137) $x148) $x156)))
 (let (($x165 (= true $x164)))
 (let (($x172 (=> $x58 $x165)))
 (let (($x167 (and $x172 $x166)))
 (let (($x214 (= true $x167)))
 (let (($x146 (or $x58 $x160)))
 (let (($x56 (not $x41)))
 (let (($x147 (and $x56 $x146)))
 (let (($x168 (=> $x147 $x214)))
 (let (($x145 (=> $x56 $x143)))
 (let (($x123 (= input.dst.llvm-%t ?x179)))
 (let (($x85 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x128 (and $x85 $x123)))
 (let ((?x109 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x121 (= (_ bv0 32) ?x109)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x95 $x97)))
 (let (($x174 (and $x98 $x121)))
 (let (($x99 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x99 $x174)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x125 $x80)))))))
 (let (($x120 (and (and (and $x108 true) $x116) $x128)))
 (let (($x144 (and $x120 $x145)))
 (let (($x190 (and $x144 $x168)))
 (let (($x173 (= $x190 true)))
 (let (($x180 (= $x173 true)))
 (let (($x191 (= $x180 true)))
 (let (($x88 (= $x41 true)))
 (let (($x83 (= $x88 true)))
 (let (($x84 (= $x83 true)))
 (let (($x86 (= $x85 true)))
 (let (($x92 (= $x86 true)))
 (let (($x87 (= $x92 true)))
 (let (($x79 (and $x87 $x84)))
 (let (($x181 (and $x79 $x191)))
 (let (($x24 (and $x181 $x247)))
 (let (($x276 (and $x24 $x284)))
 (let (($x314 (and $x276 $x35)))
 (let (($x332 (and $x314 $x310)))
 (let (($x360 (and $x332 $x353)))
 (let (($x373 (and $x360 $x372)))
 (let (($x77 (and $x67 $x82)))
 (let (($x374 (and $x77 $x373)))
 (let (($x76 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x375 (and $x76 $x374)))
 (let (($x376 (and $x75 $x375)))
 (let (($x377 (and $x75 $x376)))
 (let (($x54 (bvugt ?x48 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x37)))
 (let (($x81 (=> (bvule ?x48 (bvsub (bvadd ?x48 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x54)))))))
 (let (($x45 (and $x56 $x58)))
 (let (($x19 (=> (and $x45 (bvule ?x48 (bvsub (bvadd ?x48 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x40 $x54)))))))
 (let (($x16 (bvugt ?x46 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x32 (=> (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x16)))))))
 (let (($x11 (=> (and $x56 (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x16)))))))
 (let (($x36 (and $x11 $x19)))
 (let (($x389 (and $x36 $x377)))
 (let (($x437 (=> $x389 $x439)))
 (not $x437)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1700X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x30 (concat ?x441 (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv8 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x447 (concat ?x446 (concat ?x10 ?x30))))
 (let (($x448 (= ?x447 ?x447)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x229 (concat ?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x245 (concat ?x224 ?x229))))
 (let (($x230 (= (_ bv0 32) ?x223)))
 (let ((?x241 (ite $x230 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x241 (_ bv1 32))))
 (let (($x466 (=> $x252 $x448)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x43 (concat ?x66 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x46 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x16 (bvadd ?x46 (_ bv3 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem ?x16) (concat ?x22 ?x43))))
 (let ((?x440 (bvadd ?x58 (_ bv4 32))))
 (let ((?x464 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv1 32))) (select input.dst.llvm-mem ?x440))))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv2 32))) ?x464))))
 (let (($x423 (= (_ bv0 32) ?x424)))
 (let ((?x429 (ite $x423 (_ bv0 32) (_ bv1 32))))
 (let (($x430 (bvuge ?x429 (_ bv1 32))))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x415)))
 (let ((?x417 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x407)))
 (let (($x412 (= (_ bv0 32) ?x417)))
 (let ((?x413 (ite $x412 (_ bv0 32) (_ bv1 32))))
 (let (($x442 (bvuge ?x413 (_ bv1 32))))
 (let (($x431 (= $x442 $x430)))
 (let (($x443 (=> $x252 $x431)))
 (let (($x64 (= false false)))
 (let (($x416 (= ?x413 (_ bv0 32))))
 (let (($x426 (and $x252 $x416)))
 (let (($x421 (=> $x426 $x64)))
 (let (($x425 (= ?x429 (_ bv0 32))))
 (let (($x436 (= $x416 $x425)))
 (let (($x428 (=> $x252 $x436)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x405 (concat ?x404 (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv4 32))))))
 (let ((?x454 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x396 (concat ?x395 (concat ?x454 ?x405))))
 (let (($x399 (= ?x396 ?x396)))
 (let (($x397 (=> $x252 $x399)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1700X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv2 32))) ?x452)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv3 32))) ?x392)))
 (let (($x459 (= ?x433 ?x433)))
 (let (($x435 (=> $x252 $x459)))
 (let (($x45 (= (_ bv0 32) ?x58)))
 (let ((?x457 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x457 (_ bv1 32))))
 (let (($x387 (= $x252 $x379)))
 (let (($x456 (= ?x457 (_ bv0 32))))
 (let (($x226 (= ?x241 (_ bv0 32))))
 (let (($x378 (= $x226 $x456)))
 (let (($x467 (and (and (and (and (and (= ?x223 ?x58) (=> $x226 $x64)) $x378) $x387) $x435) $x397)))
 (let (($x112 (and (and (and (and $x467 $x428) $x421) $x443) $x466)))
 (let (($x384 (= true true)))
 (let (($x34 (and $x384 $x112)))
 (let (($x14 (= $x34 true)))
 (let (($x370 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x277 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x366 (= $x277 $x370)))
 (let (($x15 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x15 $x64)))
 (let (($x365 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x369 (= $x15 $x365)))
 (let (($x368 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x280 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x357 (= $x280 $x368)))
 (let (($x257 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x362 (=> $x257 $x64)))
 (let (($x367 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x359 (= $x257 $x367)))
 (let (($x100 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x375 (and (and (and (and (and (and $x100 $x359) $x362) $x357) $x369) $x7) $x366)))
 (let (($x376 (= $x375 true)))
 (let (($x351 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x339 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x329 (= $x339 $x351)))
 (let (($x227 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x347 (=> $x227 $x329)))
 (let (($x327 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x346 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x344 (= $x346 $x327)))
 (let (($x328 (=> $x227 $x344)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x337 (= $x325 $x336)))
 (let (($x326 (=> $x227 $x337)))
 (let (($x324 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x334 (= $x104 $x324)))
 (let (($x349 (=> $x227 $x334)))
 (let (($x348 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x51 (=> $x227 $x348)))
 (let (($x321 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x322 (= $x227 $x321)))
 (let (($x251 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x298 (=> $x251 $x64)))
 (let (($x320 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x345 (= $x251 $x320)))
 (let (($x354 (and (and (and (and (and (and $x345 $x298) $x322) $x51) $x349) $x326) $x328)))
 (let (($x364 (and $x354 $x347)))
 (let (($x361 (= $x364 true)))
 (let (($x309 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x316 (= $x227 $x309)))
 (let (($x306 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x317 (= $x251 $x306)))
 (let (($x308 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x294 (= $x261 $x308)))
 (let (($x71 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x292 (=> $x71 $x64)))
 (let (($x302 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x304 (= $x71 $x302)))
 (let (($x300 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x335 (and (and (and (and (and (and $x300 $x304) $x292) $x294) $x317) $x298) $x316)))
 (let (($x341 (= $x335 true)))
 (let (($x297 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x281 (= $x277 $x297)))
 (let (($x299 (=> $x261 $x281)))
 (let (($x266 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x296 (= $x15 $x266)))
 (let (($x267 (=> $x261 $x296)))
 (let (($x286 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (= $x280 $x286)))
 (let (($x265 (=> $x261 $x258)))
 (let (($x264 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x283 (= $x257 $x264)))
 (let (($x288 (=> $x261 $x283)))
 (let (($x287 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x279 (=> $x261 $x287)))
 (let (($x262 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x256 (= $x261 $x262)))
 (let (($x269 (and (and (= $x71 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x292) $x256)))
 (let (($x305 (and (and (and (and (and $x269 $x279) $x288) $x265) $x267) $x299)))
 (let (($x301 (= $x305 true)))
 (let (($x243 (= $x227 $x252)))
 (let (($x82 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x278 (=> $x82 $x243)))
 (let (($x235 (= $x251 $x226)))
 (let (($x236 (=> $x82 $x235)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x199 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x202 (concat ?x239 ?x199))))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x206 (_ bv1 32))))
 (let (($x249 (= $x261 $x208)))
 (let (($x234 (=> $x82 $x249)))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x207 (= $x71 $x219)))
 (let (($x246 (=> $x82 $x207)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x196)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x183)))
 (let (($x260 (= input.spec-%var-t-0.2.0 ?x248)))
 (let (($x216 (=> $x82 $x260)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x238 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x197 (bvuge ?x238 (_ bv1 32))))
 (let (($x198 (= $x82 $x197)))
 (let (($x244 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x250 (=> $x244 $x64)))
 (let (($x215 (= ?x238 (_ bv0 32))))
 (let (($x195 (= $x244 $x215)))
 (let (($x311 (and (and (and (and (and (and $x195 $x250) $x198) $x216) $x246) $x234) $x236)))
 (let (($x253 (and $x311 $x278)))
 (let (($x285 (= $x253 true)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x127 (concat ?x120 (concat ?x179 (concat ?x114 ?x117)))))
 (let (($x237 (= ?x127 input.dst.llvm-%t)))
 (let (($x209 (= $x237 true)))
 (let (($x273 (= $x209 true)))
 (let (($x145 (= (bvand ?x58 (_ bv4294967280 32)) ?x58)))
 (let (($x140 (= (bvand ?x46 (_ bv4294967292 32)) ?x46)))
 (let (($x144 (and $x140 $x145)))
 (let (($x142 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x139 (and true $x142)))
 (let (($x137 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x46 (bvsub ?x46 (_ bv4 32))) (bvult ?x46 (bvsub ?x46 (_ bv4 32))))))
 (let (($x147 (and (and (and $x137 $x139) $x140) $x144)))
 (let (($x152 (= true $x147)))
 (let (($x84 (not $x45)))
 (let (($x173 (=> $x84 $x152)))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x177 (concat ?x171 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x5 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x5 (_ bv3 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem ?x54) (concat ?x157 ?x177))))
 (let (($x165 (= (bvand ?x156 (_ bv4294967280 32)) ?x156)))
 (let (($x162 (= (bvand ?x5 (_ bv4294967292 32)) ?x5)))
 (let (($x172 (and $x162 $x165)))
 (let (($x159 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x5 (bvsub ?x5 (_ bv8 32))) (bvult ?x5 (bvsub ?x5 (_ bv8 32))))))
 (let (($x214 (and (and (and $x159 $x139) $x162) $x172)))
 (let (($x168 (= true $x214)))
 (let (($x190 (=> $x45 $x168)))
 (let (($x180 (and $x190 $x173)))
 (let (($x191 (= true $x180)))
 (let (($x155 (or $x45 $x84)))
 (let (($x42 (not $x33)))
 (let (($x151 (and $x42 $x155)))
 (let (($x181 (=> $x151 $x191)))
 (let (($x178 (=> $x42 $x152)))
 (let (($x122 (= input.dst.llvm-%t ?x127)))
 (let (($x92 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x119 (and $x92 $x122)))
 (let ((?x118 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x175 (= (_ bv0 32) ?x118)))
 (let ((?x121 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x121)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x109 $x174)))
 (let (($x169 (and $x116 $x175)))
 (let (($x124 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x53 (and $x124 $x169)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x108 $x126)))))))
 (let (($x141 (and (and (and $x98 true) $x53) $x119)))
 (let (($x188 (and $x141 $x178)))
 (let (($x6 (and $x188 $x181)))
 (let (($x182 (= $x6 true)))
 (let (($x247 (= $x182 true)))
 (let (($x24 (= $x247 true)))
 (let (($x79 (and $x42 $x84)))
 (let (($x106 (= $x79 true)))
 (let (($x107 (= $x106 true)))
 (let (($x105 (= $x107 true)))
 (let (($x87 (= $x92 true)))
 (let (($x88 (= $x87 true)))
 (let (($x83 (= $x88 true)))
 (let (($x110 (and $x83 $x105)))
 (let (($x192 (and $x110 $x24)))
 (let (($x75 (and $x192 $x273)))
 (let (($x282 (and $x75 $x285)))
 (let (($x94 (and $x282 $x301)))
 (let (($x340 (and $x94 $x341)))
 (let (($x358 (and $x340 $x361)))
 (let (($x377 (and $x358 $x376)))
 (let (($x89 (and $x82 $x71)))
 (let (($x389 (and $x89 $x377)))
 (let (($x67 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x390 (and $x67 $x389)))
 (let (($x380 (and $x64 $x390)))
 (let (($x458 (and $x64 $x380)))
 (let (($x8 (bvugt ?x5 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x63 (=> (bvule ?x5 (bvsub (bvadd ?x5 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x8)))))))
 (let (($x29 (and $x42 $x45)))
 (let (($x47 (=> (and $x29 (bvule ?x5 (bvsub (bvadd ?x5 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x8)))))))
 (let (($x52 (bvugt ?x46 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x16)))
 (let (($x17 (=> (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x50 $x52)))))))
 (let (($x18 (=> (and $x42 (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x50 $x52)))))))
 (let (($x31 (and $x18 $x47)))
 (let (($x383 (and $x31 $x458)))
 (let (($x91 (=> $x383 $x14)))
 (not $x91))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1700X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x30 (concat ?x441 (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv8 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x447 (concat ?x446 (concat ?x10 ?x30))))
 (let (($x448 (= ?x447 ?x447)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x229 (concat ?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x245 (concat ?x224 ?x229))))
 (let (($x230 (= (_ bv0 32) ?x223)))
 (let ((?x241 (ite $x230 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x241 (_ bv1 32))))
 (let (($x466 (=> $x252 $x448)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x43 (concat ?x66 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x46 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x16 (bvadd ?x46 (_ bv3 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem ?x16) (concat ?x22 ?x43))))
 (let ((?x440 (bvadd ?x58 (_ bv4 32))))
 (let ((?x464 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv1 32))) (select input.dst.llvm-mem ?x440))))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv2 32))) ?x464))))
 (let (($x423 (= (_ bv0 32) ?x424)))
 (let ((?x429 (ite $x423 (_ bv0 32) (_ bv1 32))))
 (let (($x430 (bvuge ?x429 (_ bv1 32))))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x415)))
 (let ((?x417 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x407)))
 (let (($x412 (= (_ bv0 32) ?x417)))
 (let ((?x413 (ite $x412 (_ bv0 32) (_ bv1 32))))
 (let (($x442 (bvuge ?x413 (_ bv1 32))))
 (let (($x431 (= $x442 $x430)))
 (let (($x443 (=> $x252 $x431)))
 (let (($x64 (= false false)))
 (let (($x416 (= ?x413 (_ bv0 32))))
 (let (($x426 (and $x252 $x416)))
 (let (($x421 (=> $x426 $x64)))
 (let (($x425 (= ?x429 (_ bv0 32))))
 (let (($x436 (= $x416 $x425)))
 (let (($x428 (=> $x252 $x436)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x405 (concat ?x404 (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv4 32))))))
 (let ((?x454 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1700X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x396 (concat ?x395 (concat ?x454 ?x405))))
 (let (($x399 (= ?x396 ?x396)))
 (let (($x397 (=> $x252 $x399)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1700X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv2 32))) ?x452)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1700X (_ bv3 32))) ?x392)))
 (let (($x459 (= ?x433 ?x433)))
 (let (($x435 (=> $x252 $x459)))
 (let (($x45 (= (_ bv0 32) ?x58)))
 (let ((?x457 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x457 (_ bv1 32))))
 (let (($x387 (= $x252 $x379)))
 (let (($x456 (= ?x457 (_ bv0 32))))
 (let (($x226 (= ?x241 (_ bv0 32))))
 (let (($x378 (= $x226 $x456)))
 (let (($x467 (and (and (and (and (and (= ?x223 ?x58) (=> $x226 $x64)) $x378) $x387) $x435) $x397)))
 (let (($x112 (and (and (and (and $x467 $x428) $x421) $x443) $x466)))
 (let (($x384 (= true true)))
 (let (($x34 (and $x384 $x112)))
 (let (($x14 (= $x34 true)))
 (let (($x370 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x277 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x366 (= $x277 $x370)))
 (let (($x15 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x15 $x64)))
 (let (($x365 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x369 (= $x15 $x365)))
 (let (($x368 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x280 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x357 (= $x280 $x368)))
 (let (($x257 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x362 (=> $x257 $x64)))
 (let (($x367 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x359 (= $x257 $x367)))
 (let (($x100 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x375 (and (and (and (and (and (and $x100 $x359) $x362) $x357) $x369) $x7) $x366)))
 (let (($x376 (= $x375 true)))
 (let (($x351 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x339 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x329 (= $x339 $x351)))
 (let (($x227 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x347 (=> $x227 $x329)))
 (let (($x327 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x346 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x344 (= $x346 $x327)))
 (let (($x328 (=> $x227 $x344)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x337 (= $x325 $x336)))
 (let (($x326 (=> $x227 $x337)))
 (let (($x324 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x334 (= $x104 $x324)))
 (let (($x349 (=> $x227 $x334)))
 (let (($x348 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x51 (=> $x227 $x348)))
 (let (($x321 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x322 (= $x227 $x321)))
 (let (($x251 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x298 (=> $x251 $x64)))
 (let (($x320 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x345 (= $x251 $x320)))
 (let (($x354 (and (and (and (and (and (and $x345 $x298) $x322) $x51) $x349) $x326) $x328)))
 (let (($x364 (and $x354 $x347)))
 (let (($x361 (= $x364 true)))
 (let (($x309 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x316 (= $x227 $x309)))
 (let (($x306 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x317 (= $x251 $x306)))
 (let (($x308 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x294 (= $x261 $x308)))
 (let (($x71 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x292 (=> $x71 $x64)))
 (let (($x302 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x304 (= $x71 $x302)))
 (let (($x300 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x335 (and (and (and (and (and (and $x300 $x304) $x292) $x294) $x317) $x298) $x316)))
 (let (($x341 (= $x335 true)))
 (let (($x297 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x281 (= $x277 $x297)))
 (let (($x299 (=> $x261 $x281)))
 (let (($x266 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x296 (= $x15 $x266)))
 (let (($x267 (=> $x261 $x296)))
 (let (($x286 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x258 (= $x280 $x286)))
 (let (($x265 (=> $x261 $x258)))
 (let (($x264 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x283 (= $x257 $x264)))
 (let (($x288 (=> $x261 $x283)))
 (let (($x287 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x279 (=> $x261 $x287)))
 (let (($x262 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x256 (= $x261 $x262)))
 (let (($x269 (and (and (= $x71 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x292) $x256)))
 (let (($x305 (and (and (and (and (and $x269 $x279) $x288) $x265) $x267) $x299)))
 (let (($x301 (= $x305 true)))
 (let (($x243 (= $x227 $x252)))
 (let (($x82 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x278 (=> $x82 $x243)))
 (let (($x235 (= $x251 $x226)))
 (let (($x236 (=> $x82 $x235)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x199 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x202 (concat ?x239 ?x199))))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x206 (_ bv1 32))))
 (let (($x249 (= $x261 $x208)))
 (let (($x234 (=> $x82 $x249)))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x207 (= $x71 $x219)))
 (let (($x246 (=> $x82 $x207)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x196)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x183)))
 (let (($x260 (= input.spec-%var-t-0.2.0 ?x248)))
 (let (($x216 (=> $x82 $x260)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x238 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x197 (bvuge ?x238 (_ bv1 32))))
 (let (($x198 (= $x82 $x197)))
 (let (($x244 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x250 (=> $x244 $x64)))
 (let (($x215 (= ?x238 (_ bv0 32))))
 (let (($x195 (= $x244 $x215)))
 (let (($x311 (and (and (and (and (and (and $x195 $x250) $x198) $x216) $x246) $x234) $x236)))
 (let (($x253 (and $x311 $x278)))
 (let (($x285 (= $x253 true)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x127 (concat ?x120 (concat ?x179 (concat ?x114 ?x117)))))
 (let (($x237 (= ?x127 input.dst.llvm-%t)))
 (let (($x209 (= $x237 true)))
 (let (($x273 (= $x209 true)))
 (let (($x145 (= (bvand ?x58 (_ bv4294967280 32)) ?x58)))
 (let (($x140 (= (bvand ?x46 (_ bv4294967292 32)) ?x46)))
 (let (($x144 (and $x140 $x145)))
 (let (($x142 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x139 (and true $x142)))
 (let (($x137 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x46 (bvsub ?x46 (_ bv4 32))) (bvult ?x46 (bvsub ?x46 (_ bv4 32))))))
 (let (($x147 (and (and (and $x137 $x139) $x140) $x144)))
 (let (($x152 (= true $x147)))
 (let (($x84 (not $x45)))
 (let (($x173 (=> $x84 $x152)))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x177 (concat ?x171 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x5 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x5 (_ bv3 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem ?x54) (concat ?x157 ?x177))))
 (let (($x165 (= (bvand ?x156 (_ bv4294967280 32)) ?x156)))
 (let (($x162 (= (bvand ?x5 (_ bv4294967292 32)) ?x5)))
 (let (($x172 (and $x162 $x165)))
 (let (($x159 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x5 (bvsub ?x5 (_ bv8 32))) (bvult ?x5 (bvsub ?x5 (_ bv8 32))))))
 (let (($x214 (and (and (and $x159 $x139) $x162) $x172)))
 (let (($x168 (= true $x214)))
 (let (($x190 (=> $x45 $x168)))
 (let (($x180 (and $x190 $x173)))
 (let (($x191 (= true $x180)))
 (let (($x155 (or $x45 $x84)))
 (let (($x42 (not $x33)))
 (let (($x151 (and $x42 $x155)))
 (let (($x181 (=> $x151 $x191)))
 (let (($x178 (=> $x42 $x152)))
 (let (($x122 (= input.dst.llvm-%t ?x127)))
 (let (($x92 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x119 (and $x92 $x122)))
 (let ((?x118 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x175 (= (_ bv0 32) ?x118)))
 (let ((?x121 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x121)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x109 $x174)))
 (let (($x169 (and $x116 $x175)))
 (let (($x124 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x53 (and $x124 $x169)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x108 $x126)))))))
 (let (($x141 (and (and (and $x98 true) $x53) $x119)))
 (let (($x188 (and $x141 $x178)))
 (let (($x6 (and $x188 $x181)))
 (let (($x182 (= $x6 true)))
 (let (($x247 (= $x182 true)))
 (let (($x24 (= $x247 true)))
 (let (($x79 (and $x42 $x84)))
 (let (($x106 (= $x79 true)))
 (let (($x107 (= $x106 true)))
 (let (($x105 (= $x107 true)))
 (let (($x87 (= $x92 true)))
 (let (($x88 (= $x87 true)))
 (let (($x83 (= $x88 true)))
 (let (($x110 (and $x83 $x105)))
 (let (($x192 (and $x110 $x24)))
 (let (($x75 (and $x192 $x273)))
 (let (($x282 (and $x75 $x285)))
 (let (($x94 (and $x282 $x301)))
 (let (($x340 (and $x94 $x341)))
 (let (($x358 (and $x340 $x361)))
 (let (($x377 (and $x358 $x376)))
 (let (($x89 (and $x82 $x71)))
 (let (($x389 (and $x89 $x377)))
 (let (($x67 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x390 (and $x67 $x389)))
 (let (($x380 (and $x64 $x390)))
 (let (($x458 (and $x64 $x380)))
 (let (($x8 (bvugt ?x5 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x63 (=> (bvule ?x5 (bvsub (bvadd ?x5 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x8)))))))
 (let (($x29 (and $x42 $x45)))
 (let (($x47 (=> (and $x29 (bvule ?x5 (bvsub (bvadd ?x5 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x8)))))))
 (let (($x52 (bvugt ?x46 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x16)))
 (let (($x17 (=> (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x50 $x52)))))))
 (let (($x18 (=> (and $x42 (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x50 $x52)))))))
 (let (($x31 (and $x18 $x47)))
 (let (($x383 (and $x31 $x458)))
 (let (($x91 (=> $x383 $x14)))
 (not $x91))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1734X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x434 (concat ?x90 (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv8 32))))))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x441 (concat ?x437 (concat ?x446 ?x434))))
 (let (($x439 (= ?x441 ?x441)))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x271 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x220 (concat ?x224 ?x245))))
 (let (($x225 (= (_ bv0 32) ?x229)))
 (let ((?x223 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x223 (_ bv1 32))))
 (let (($x30 (=> $x236 $x439)))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x187 (concat ?x171 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x40 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x40 (_ bv3 32))))
 (let ((?x165 (concat (select input.dst.llvm-mem ?x23) (concat ?x154 ?x187))))
 (let ((?x411 (bvadd ?x165 (_ bv4 32))))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv1 32))) (select input.dst.llvm-mem ?x411))))
 (let ((?x423 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv2 32))) ?x427))))
 (let (($x429 (= (_ bv0 32) ?x423)))
 (let ((?x425 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x421 (bvuge ?x425 (_ bv1 32))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x229 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x229 (_ bv4 32))))))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x229 (_ bv4 32)) (_ bv2 32))) ?x387)))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x229 (_ bv4 32)) (_ bv3 32))) ?x465)))
 (let (($x463 (= (_ bv0 32) ?x432)))
 (let ((?x388 (ite $x463 (_ bv0 32) (_ bv1 32))))
 (let (($x426 (bvuge ?x388 (_ bv1 32))))
 (let (($x20 (= $x426 $x421)))
 (let (($x442 (=> $x236 $x20)))
 (let (($x436 (= ?x425 (_ bv0 32))))
 (let (($x385 (= ?x388 (_ bv0 32))))
 (let (($x428 (= $x385 $x436)))
 (let (($x468 (=> $x236 $x428)))
 (let ((?x410 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x408 (concat ?x410 (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv4 32))))))
 (let ((?x415 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x412 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x413 (concat ?x412 (concat ?x415 ?x408))))
 (let (($x416 (= ?x413 ?x413)))
 (let (($x440 (=> $x236 $x416)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1734X))))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv2 32))) ?x398)))
 (let ((?x467 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv3 32))) ?x396)))
 (let (($x438 (= ?x467 ?x467)))
 (let (($x406 (=> $x236 $x438)))
 (let (($x459 (= (_ bv0 32) ?x165)))
 (let ((?x435 (ite $x459 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (= ?x435 (_ bv0 32))))
 (let (($x230 (= ?x223 (_ bv0 32))))
 (let (($x395 (= $x230 $x403)))
 (let (($x451 (bvuge ?x435 (_ bv1 32))))
 (let (($x453 (= $x236 $x451)))
 (let (($x433 (= ?x229 ?x165)))
 (let (($x67 (= false false)))
 (let (($x452 (and $x236 $x385)))
 (let (($x392 (=> $x452 $x67)))
 (let (($x457 (=> $x230 $x67)))
 (let (($x34 (and (and (and (and (and (and $x457 $x392) $x433) $x453) $x395) $x406) $x440)))
 (let (($x186 (and (and (and $x34 $x468) $x442) $x30)))
 (let (($x449 (= true true)))
 (let (($x72 (and $x449 $x186)))
 (let (($x56 (= $x72 true)))
 (let (($x7 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x296 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x374 (= $x296 $x7)))
 (let (($x314 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x373 (=> $x314 $x67)))
 (let (($x365 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x369 (= $x314 $x365)))
 (let (($x357 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x35 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x35 $x357)))
 (let (($x257 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x368 (=> $x257 $x67)))
 (let (($x362 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x371 (= $x257 $x362)))
 (let (($x359 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x389 (and (and (and (and (and (and $x359 $x371) $x368) $x372) $x369) $x373) $x374)))
 (let (($x390 (= $x389 true)))
 (let (($x328 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x354 (= $x344 $x328)))
 (let (($x235 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x339 (=> $x235 $x354)))
 (let (($x346 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x360 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x338 (= $x360 $x346)))
 (let (($x327 (=> $x235 $x338)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x353 $x325)))
 (let (($x337 (=> $x235 $x336)))
 (let (($x324 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x334 (= $x104 $x324)))
 (let (($x349 (=> $x235 $x334)))
 (let (($x51 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x352 (=> $x235 $x51)))
 (let (($x331 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x333 (= $x235 $x331)))
 (let (($x276 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x276 $x67)))
 (let (($x321 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x322 (= $x276 $x321)))
 (let (($x358 (and (and (and (and (and (and $x322 $x332) $x333) $x352) $x349) $x337) $x327)))
 (let (($x355 (and $x358 $x339)))
 (let (($x100 (= $x355 true)))
 (let (($x298 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x318 (= $x235 $x298)))
 (let (($x306 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x317 (= $x276 $x306)))
 (let (($x294 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x310 (= $x284 $x294)))
 (let (($x86 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x256 (=> $x86 $x67)))
 (let (($x342 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x308 (= $x86 $x342)))
 (let (($x304 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x319 (and (and (and (and (and (and $x304 $x308) $x256) $x310) $x317) $x332) $x318)))
 (let (($x320 (= $x319 true)))
 (let (($x267 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x303 (= $x296 $x267)))
 (let (($x277 (=> $x284 $x303)))
 (let (($x15 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x259 (= $x314 $x15)))
 (let (($x266 (=> $x284 $x259)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x35 $x280)))
 (let (($x258 (=> $x284 $x286)))
 (let (($x264 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x283 (= $x257 $x264)))
 (let (($x288 (=> $x284 $x283)))
 (let (($x279 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x289 (=> $x284 $x279)))
 (let (($x269 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x313 (= $x284 $x269)))
 (let (($x281 (and (and (= $x86 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x256) $x313)))
 (let (($x290 (and (and (and (and (and $x281 $x289) $x288) $x258) $x266) $x277)))
 (let (($x300 (= $x290 true)))
 (let (($x311 (= $x235 $x236)))
 (let (($x89 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x227 (=> $x89 $x311)))
 (let (($x241 (= $x276 $x230)))
 (let (($x226 (=> $x89 $x241)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x212 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x201 (concat ?x203 ?x239))))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x206 (_ bv1 32))))
 (let (($x208 (= $x284 $x261)))
 (let (($x249 (=> $x89 $x208)))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x207 (= $x86 $x219)))
 (let (($x246 (=> $x89 $x207)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x196)))
 (let (($x216 (= input.spec-%var-t-0.2.0 ?x260)))
 (let (($x312 (=> $x89 $x216)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x250 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x250 (_ bv1 32))))
 (let (($x232 (= $x89 $x228)))
 (let (($x64 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x198 (=> $x64 $x67)))
 (let (($x231 (= ?x250 (_ bv0 32))))
 (let (($x197 (= $x64 $x231)))
 (let (($x282 (and (and (and (and (and (and $x197 $x198) $x232) $x312) $x246) $x249) $x226)))
 (let (($x270 (and $x282 $x227)))
 (let (($x254 (= $x270 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x122 (concat ?x127 (concat ?x117 (concat ?x179 ?x120)))))
 (let (($x244 (= ?x122 input.dst.llvm-%t)))
 (let (($x238 (= $x244 true)))
 (let (($x215 (= $x238 true)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x66 (concat ?x69 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x55 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x55 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x57) (concat ?x60 ?x66))))
 (let (($x144 (= (bvand ?x29 (_ bv4294967280 32)) ?x29)))
 (let (($x143 (= (bvand ?x55 (_ bv4294967292 32)) ?x55)))
 (let (($x147 (and $x143 $x144)))
 (let (($x134 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x136 (and true $x134)))
 (let (($x131 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x55 (bvsub ?x55 (_ bv4 32))) (bvult ?x55 (bvsub ?x55 (_ bv4 32))))))
 (let (($x188 (and (and (and $x131 $x136) $x143) $x147)))
 (let (($x155 (= true $x188)))
 (let (($x48 (= (_ bv0 32) ?x29)))
 (let (($x158 (not $x48)))
 (let (($x6 (=> $x158 $x155)))
 (let (($x214 (= (bvand ?x165 (_ bv4294967280 32)) ?x165)))
 (let (($x153 (= (bvand ?x40 (_ bv4294967292 32)) ?x40)))
 (let (($x168 (and $x153 $x214)))
 (let (($x167 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x40 (bvsub ?x40 (_ bv8 32))) (bvult ?x40 (bvsub ?x40 (_ bv8 32))))))
 (let (($x180 (and (and (and $x167 $x136) $x153) $x168)))
 (let (($x191 (= true $x180)))
 (let (($x181 (=> $x48 $x191)))
 (let (($x182 (and $x181 $x6)))
 (let (($x247 (= true $x182)))
 (let (($x148 (or $x48 $x158)))
 (let (($x42 (not $x33)))
 (let (($x161 (and $x42 $x148)))
 (let (($x24 (=> $x161 $x247)))
 (let (($x151 (=> $x42 $x155)))
 (let (($x119 (= input.dst.llvm-%t ?x122)))
 (let (($x83 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x141 (and $x83 $x119)))
 (let ((?x175 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x169 (= (_ bv0 32) ?x175)))
 (let ((?x174 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x116 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x174)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (and $x121 $x116)))
 (let (($x53 (and $x118 $x169)))
 (let (($x111 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (and $x111 $x53)))
 (let (($x95 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x95)))))))
 (let (($x170 (and (and (and $x109 true) $x138) $x141)))
 (let (($x189 (and $x170 $x151)))
 (let (($x192 (and $x189 $x24)))
 (let (($x237 (= $x192 true)))
 (let (($x209 (= $x237 true)))
 (let (($x273 (= $x209 true)))
 (let (($x5 (and $x42 $x48)))
 (let (($x107 (= $x5 true)))
 (let (($x105 (= $x107 true)))
 (let (($x110 (= $x105 true)))
 (let (($x84 (= $x83 true)))
 (let (($x79 (= $x84 true)))
 (let (($x106 (= $x79 true)))
 (let (($x93 (and $x106 $x110)))
 (let (($x75 (and $x93 $x273)))
 (let (($x195 (and $x75 $x215)))
 (let (($x255 (and $x195 $x254)))
 (let (($x307 (and $x255 $x300)))
 (let (($x345 (and $x307 $x320)))
 (let (($x356 (and $x345 $x100)))
 (let (($x380 (and $x356 $x390)))
 (let (($x92 (and $x89 $x86)))
 (let (($x458 (and $x92 $x380)))
 (let (($x77 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x383 (and $x77 $x458)))
 (let (($x384 (and $x67 $x383)))
 (let (($x381 (and $x67 $x384)))
 (let (($x81 (bvugt ?x40 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x78 (=> (bvule ?x40 (bvsub (bvadd ?x40 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x81)))))))
 (let (($x36 (=> (and $x5 (bvule ?x40 (bvsub (bvadd ?x40 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x49 $x81)))))))
 (let (($x32 (bvugt ?x55 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x74 (=> (bvule ?x55 (bvsub (bvadd ?x55 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x32)))))))
 (let (($x61 (=> (and $x42 (bvule ?x55 (bvsub (bvadd ?x55 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x62 $x32)))))))
 (let (($x54 (and $x61 $x36)))
 (let (($x386 (and $x54 $x381)))
 (let (($x125 (=> $x386 $x56)))
 (not $x125))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1734X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x434 (concat ?x90 (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv8 32))))))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x441 (concat ?x437 (concat ?x446 ?x434))))
 (let (($x439 (= ?x441 ?x441)))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x271 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x220 (concat ?x224 ?x245))))
 (let (($x225 (= (_ bv0 32) ?x229)))
 (let ((?x223 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x223 (_ bv1 32))))
 (let (($x30 (=> $x236 $x439)))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x187 (concat ?x171 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x40 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x40 (_ bv3 32))))
 (let ((?x165 (concat (select input.dst.llvm-mem ?x23) (concat ?x154 ?x187))))
 (let ((?x411 (bvadd ?x165 (_ bv4 32))))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv1 32))) (select input.dst.llvm-mem ?x411))))
 (let ((?x423 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv2 32))) ?x427))))
 (let (($x429 (= (_ bv0 32) ?x423)))
 (let ((?x425 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x421 (bvuge ?x425 (_ bv1 32))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x229 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x229 (_ bv4 32))))))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x229 (_ bv4 32)) (_ bv2 32))) ?x387)))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x229 (_ bv4 32)) (_ bv3 32))) ?x465)))
 (let (($x463 (= (_ bv0 32) ?x432)))
 (let ((?x388 (ite $x463 (_ bv0 32) (_ bv1 32))))
 (let (($x426 (bvuge ?x388 (_ bv1 32))))
 (let (($x20 (= $x426 $x421)))
 (let (($x442 (=> $x236 $x20)))
 (let (($x436 (= ?x425 (_ bv0 32))))
 (let (($x385 (= ?x388 (_ bv0 32))))
 (let (($x428 (= $x385 $x436)))
 (let (($x468 (=> $x236 $x428)))
 (let ((?x410 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x408 (concat ?x410 (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv4 32))))))
 (let ((?x415 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x412 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1734X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x413 (concat ?x412 (concat ?x415 ?x408))))
 (let (($x416 (= ?x413 ?x413)))
 (let (($x440 (=> $x236 $x416)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1734X))))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv2 32))) ?x398)))
 (let ((?x467 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1734X (_ bv3 32))) ?x396)))
 (let (($x438 (= ?x467 ?x467)))
 (let (($x406 (=> $x236 $x438)))
 (let (($x459 (= (_ bv0 32) ?x165)))
 (let ((?x435 (ite $x459 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (= ?x435 (_ bv0 32))))
 (let (($x230 (= ?x223 (_ bv0 32))))
 (let (($x395 (= $x230 $x403)))
 (let (($x451 (bvuge ?x435 (_ bv1 32))))
 (let (($x453 (= $x236 $x451)))
 (let (($x433 (= ?x229 ?x165)))
 (let (($x67 (= false false)))
 (let (($x452 (and $x236 $x385)))
 (let (($x392 (=> $x452 $x67)))
 (let (($x457 (=> $x230 $x67)))
 (let (($x34 (and (and (and (and (and (and $x457 $x392) $x433) $x453) $x395) $x406) $x440)))
 (let (($x186 (and (and (and $x34 $x468) $x442) $x30)))
 (let (($x449 (= true true)))
 (let (($x72 (and $x449 $x186)))
 (let (($x56 (= $x72 true)))
 (let (($x7 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x296 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x374 (= $x296 $x7)))
 (let (($x314 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x373 (=> $x314 $x67)))
 (let (($x365 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x369 (= $x314 $x365)))
 (let (($x357 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x35 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x35 $x357)))
 (let (($x257 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x368 (=> $x257 $x67)))
 (let (($x362 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x371 (= $x257 $x362)))
 (let (($x359 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x389 (and (and (and (and (and (and $x359 $x371) $x368) $x372) $x369) $x373) $x374)))
 (let (($x390 (= $x389 true)))
 (let (($x328 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x354 (= $x344 $x328)))
 (let (($x235 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x339 (=> $x235 $x354)))
 (let (($x346 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x360 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x338 (= $x360 $x346)))
 (let (($x327 (=> $x235 $x338)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x353 $x325)))
 (let (($x337 (=> $x235 $x336)))
 (let (($x324 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x334 (= $x104 $x324)))
 (let (($x349 (=> $x235 $x334)))
 (let (($x51 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x352 (=> $x235 $x51)))
 (let (($x331 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x333 (= $x235 $x331)))
 (let (($x276 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x276 $x67)))
 (let (($x321 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x322 (= $x276 $x321)))
 (let (($x358 (and (and (and (and (and (and $x322 $x332) $x333) $x352) $x349) $x337) $x327)))
 (let (($x355 (and $x358 $x339)))
 (let (($x100 (= $x355 true)))
 (let (($x298 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x318 (= $x235 $x298)))
 (let (($x306 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x317 (= $x276 $x306)))
 (let (($x294 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x310 (= $x284 $x294)))
 (let (($x86 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x256 (=> $x86 $x67)))
 (let (($x342 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x308 (= $x86 $x342)))
 (let (($x304 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x319 (and (and (and (and (and (and $x304 $x308) $x256) $x310) $x317) $x332) $x318)))
 (let (($x320 (= $x319 true)))
 (let (($x267 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x303 (= $x296 $x267)))
 (let (($x277 (=> $x284 $x303)))
 (let (($x15 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x259 (= $x314 $x15)))
 (let (($x266 (=> $x284 $x259)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x35 $x280)))
 (let (($x258 (=> $x284 $x286)))
 (let (($x264 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x283 (= $x257 $x264)))
 (let (($x288 (=> $x284 $x283)))
 (let (($x279 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x289 (=> $x284 $x279)))
 (let (($x269 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x313 (= $x284 $x269)))
 (let (($x281 (and (and (= $x86 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x256) $x313)))
 (let (($x290 (and (and (and (and (and $x281 $x289) $x288) $x258) $x266) $x277)))
 (let (($x300 (= $x290 true)))
 (let (($x311 (= $x235 $x236)))
 (let (($x89 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x227 (=> $x89 $x311)))
 (let (($x241 (= $x276 $x230)))
 (let (($x226 (=> $x89 $x241)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x212 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x201 (concat ?x203 ?x239))))
 (let (($x205 (= (_ bv0 32) ?x204)))
 (let ((?x206 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x206 (_ bv1 32))))
 (let (($x208 (= $x284 $x261)))
 (let (($x249 (=> $x89 $x208)))
 (let (($x219 (= ?x206 (_ bv0 32))))
 (let (($x207 (= $x86 $x219)))
 (let (($x246 (=> $x89 $x207)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x196)))
 (let (($x216 (= input.spec-%var-t-0.2.0 ?x260)))
 (let (($x312 (=> $x89 $x216)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x250 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x250 (_ bv1 32))))
 (let (($x232 (= $x89 $x228)))
 (let (($x64 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x198 (=> $x64 $x67)))
 (let (($x231 (= ?x250 (_ bv0 32))))
 (let (($x197 (= $x64 $x231)))
 (let (($x282 (and (and (and (and (and (and $x197 $x198) $x232) $x312) $x246) $x249) $x226)))
 (let (($x270 (and $x282 $x227)))
 (let (($x254 (= $x270 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x122 (concat ?x127 (concat ?x117 (concat ?x179 ?x120)))))
 (let (($x244 (= ?x122 input.dst.llvm-%t)))
 (let (($x238 (= $x244 true)))
 (let (($x215 (= $x238 true)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x66 (concat ?x69 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x55 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x55 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x57) (concat ?x60 ?x66))))
 (let (($x144 (= (bvand ?x29 (_ bv4294967280 32)) ?x29)))
 (let (($x143 (= (bvand ?x55 (_ bv4294967292 32)) ?x55)))
 (let (($x147 (and $x143 $x144)))
 (let (($x134 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x136 (and true $x134)))
 (let (($x131 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x55 (bvsub ?x55 (_ bv4 32))) (bvult ?x55 (bvsub ?x55 (_ bv4 32))))))
 (let (($x188 (and (and (and $x131 $x136) $x143) $x147)))
 (let (($x155 (= true $x188)))
 (let (($x48 (= (_ bv0 32) ?x29)))
 (let (($x158 (not $x48)))
 (let (($x6 (=> $x158 $x155)))
 (let (($x214 (= (bvand ?x165 (_ bv4294967280 32)) ?x165)))
 (let (($x153 (= (bvand ?x40 (_ bv4294967292 32)) ?x40)))
 (let (($x168 (and $x153 $x214)))
 (let (($x167 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x40 (bvsub ?x40 (_ bv8 32))) (bvult ?x40 (bvsub ?x40 (_ bv8 32))))))
 (let (($x180 (and (and (and $x167 $x136) $x153) $x168)))
 (let (($x191 (= true $x180)))
 (let (($x181 (=> $x48 $x191)))
 (let (($x182 (and $x181 $x6)))
 (let (($x247 (= true $x182)))
 (let (($x148 (or $x48 $x158)))
 (let (($x42 (not $x33)))
 (let (($x161 (and $x42 $x148)))
 (let (($x24 (=> $x161 $x247)))
 (let (($x151 (=> $x42 $x155)))
 (let (($x119 (= input.dst.llvm-%t ?x122)))
 (let (($x83 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x141 (and $x83 $x119)))
 (let ((?x175 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x169 (= (_ bv0 32) ?x175)))
 (let ((?x174 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x116 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x174)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (and $x121 $x116)))
 (let (($x53 (and $x118 $x169)))
 (let (($x111 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (and $x111 $x53)))
 (let (($x95 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x95)))))))
 (let (($x170 (and (and (and $x109 true) $x138) $x141)))
 (let (($x189 (and $x170 $x151)))
 (let (($x192 (and $x189 $x24)))
 (let (($x237 (= $x192 true)))
 (let (($x209 (= $x237 true)))
 (let (($x273 (= $x209 true)))
 (let (($x5 (and $x42 $x48)))
 (let (($x107 (= $x5 true)))
 (let (($x105 (= $x107 true)))
 (let (($x110 (= $x105 true)))
 (let (($x84 (= $x83 true)))
 (let (($x79 (= $x84 true)))
 (let (($x106 (= $x79 true)))
 (let (($x93 (and $x106 $x110)))
 (let (($x75 (and $x93 $x273)))
 (let (($x195 (and $x75 $x215)))
 (let (($x255 (and $x195 $x254)))
 (let (($x307 (and $x255 $x300)))
 (let (($x345 (and $x307 $x320)))
 (let (($x356 (and $x345 $x100)))
 (let (($x380 (and $x356 $x390)))
 (let (($x92 (and $x89 $x86)))
 (let (($x458 (and $x92 $x380)))
 (let (($x77 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x383 (and $x77 $x458)))
 (let (($x384 (and $x67 $x383)))
 (let (($x381 (and $x67 $x384)))
 (let (($x81 (bvugt ?x40 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x78 (=> (bvule ?x40 (bvsub (bvadd ?x40 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x81)))))))
 (let (($x36 (=> (and $x5 (bvule ?x40 (bvsub (bvadd ?x40 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x49 $x81)))))))
 (let (($x32 (bvugt ?x55 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x74 (=> (bvule ?x55 (bvsub (bvadd ?x55 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x32)))))))
 (let (($x61 (=> (and $x42 (bvule ?x55 (bvsub (bvadd ?x55 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x62 $x32)))))))
 (let (($x54 (and $x61 $x36)))
 (let (($x386 (and $x54 $x381)))
 (let (($x125 (=> $x386 $x56)))
 (not $x125))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1768X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x424 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x422 (concat ?x424 (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv8 32))))))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x464 (concat ?x427 (concat ?x420 ?x422))))
 (let (($x423 (= ?x464 ?x464)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x222 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x221 (concat ?x245 (concat ?x218 ?x222))))
 (let (($x229 (= (_ bv0 32) ?x221)))
 (let ((?x225 (ite $x229 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x225 (_ bv1 32))))
 (let (($x429 (=> $x282 $x423)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x205 (concat ?x204 (concat ?x233 ?x202))))
 (let (($x206 (= (_ bv0 32) ?x205)))
 (let ((?x219 (ite $x206 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (= ?x219 (_ bv0 32))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x221 (_ bv4 32))))))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv2 32))) ?x387)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv3 32))) ?x463)))
 (let (($x392 (= (_ bv0 32) ?x452)))
 (let ((?x444 (ite $x392 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (= ?x444 (_ bv0 32))))
 (let (($x416 (= $x433 $x207)))
 (let (($x440 (=> $x282 $x416)))
 (let (($x261 (bvuge ?x219 (_ bv1 32))))
 (let (($x408 (bvuge ?x444 (_ bv1 32))))
 (let (($x407 (= $x408 $x261)))
 (let (($x413 (=> $x282 $x407)))
 (let ((?x406 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x112 (concat ?x406 (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv4 32))))))
 (let ((?x417 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x415 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x460 (concat ?x415 (concat ?x417 ?x112))))
 (let (($x410 (= ?x460 ?x460)))
 (let (($x414 (=> $x282 $x410)))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1768X))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv2 32))) ?x402)))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv3 32))) ?x405)))
 (let (($x454 (= ?x404 ?x404)))
 (let (($x398 (=> $x282 $x454)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x252 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (= ?x252 (_ bv0 32))))
 (let (($x223 (= ?x225 (_ bv0 32))))
 (let (($x453 (= $x223 $x228)))
 (let (($x183 (bvuge ?x252 (_ bv1 32))))
 (let (($x451 (= $x282 $x183)))
 (let (($x435 (= ?x221 input.dst.llvm-%t)))
 (let (($x77 (= false false)))
 (let (($x447 (and $x282 $x433)))
 (let (($x459 (=> $x447 $x77)))
 (let (($x450 (=> $x223 $x77)))
 (let (($x426 (and (and (and (and (and (and $x450 $x459) $x435) $x451) $x453) $x398) $x414)))
 (let (($x442 (and (and (and $x426 $x413) $x440) $x429)))
 (let (($x391 (= true true)))
 (let (($x91 (and $x391 $x442)))
 (let (($x430 (= $x91 true)))
 (let (($x377 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x266 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x7 (= $x266 $x377)))
 (let (($x265 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x373 (=> $x265 $x77)))
 (let (($x369 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x376 (= $x265 $x369)))
 (let (($x375 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x35 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x25 (= $x35 $x375)))
 (let (($x275 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x372 (=> $x275 $x77)))
 (let (($x366 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x357 (= $x275 $x366)))
 (let (($x370 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x383 (and (and (and (and (and (and $x370 $x357) $x372) $x25) $x376) $x373) $x7)))
 (let (($x384 (= $x383 true)))
 (let (($x358 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x327 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x344 (= $x327 $x358)))
 (let (($x226 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x328 (=> $x226 $x344)))
 (let (($x350 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x326 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x346 (= $x326 $x350)))
 (let (($x338 (=> $x226 $x346)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x353 $x325)))
 (let (($x337 (=> $x226 $x336)))
 (let (($x334 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x323 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x349 (= $x323 $x334)))
 (let (($x364 (=> $x226 $x349)))
 (let (($x347 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x70 (=> $x226 $x347)))
 (let (($x343 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x348 (= $x226 $x343)))
 (let (($x234 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x234 $x77)))
 (let (($x333 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x329 (= $x234 $x333)))
 (let (($x367 (and (and (and (and (and (and $x329 $x332) $x348) $x70) $x364) $x337) $x338)))
 (let (($x359 (and $x367 $x328)))
 (let (($x363 (= $x359 true)))
 (let (($x340 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x298 (= $x226 $x340)))
 (let (($x317 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x341 (= $x234 $x317)))
 (let (($x335 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x291 (= $x284 $x335)))
 (let (($x88 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x281 (=> $x88 $x77)))
 (let (($x294 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x310 (= $x88 $x294)))
 (let (($x309 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x321 (and (and (and (and (and (and $x309 $x310) $x281) $x291) $x341) $x332) $x298)))
 (let (($x322 (= $x321 true)))
 (let (($x94 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x296 (= $x266 $x94)))
 (let (($x267 (=> $x284 $x296)))
 (let (($x293 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x15 (= $x265 $x293)))
 (let (($x259 (=> $x284 $x15)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x35 $x280)))
 (let (($x258 (=> $x284 $x286)))
 (let (($x283 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x275 $x283)))
 (let (($x305 (=> $x284 $x288)))
 (let (($x299 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x263 (=> $x284 $x299)))
 (let (($x295 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x287 (= $x284 $x295)))
 (let (($x277 (and (and (= $x88 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x281) $x287)))
 (let (($x304 (and (and (and (and (and $x277 $x263) $x305) $x258) $x259) $x267)))
 (let (($x315 (= $x304 true)))
 (let (($x235 (= $x226 $x282)))
 (let (($x92 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x236 (=> $x92 $x235)))
 (let (($x230 (= $x234 $x223)))
 (let (($x241 (=> $x92 $x230)))
 (let (($x208 (= $x284 $x261)))
 (let (($x249 (=> $x92 $x208)))
 (let (($x246 (= $x88 $x207)))
 (let (($x253 (=> $x92 $x246)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x193)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x196)))
 (let (($x278 (= input.spec-%var-t-0.2.0 ?x312)))
 (let (($x240 (=> $x92 $x278)))
 (let (($x248 (= $x92 $x183)))
 (let (($x198 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x243 (=> $x198 $x77)))
 (let (($x232 (= $x198 $x228)))
 (let (($x292 (and (and (and (and (and (and $x232 $x243) $x248) $x240) $x253) $x249) $x241)))
 (let (($x268 (and $x292 $x236)))
 (let (($x262 (= $x268 true)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x170 (concat ?x141 (concat ?x185 (concat ?x179 ?x117)))))
 (let (($x250 (= ?x170 input.dst.llvm-%t)))
 (let (($x231 (= $x250 true)))
 (let (($x197 (= $x231 true)))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x22 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x26 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x11 (bvadd ?x26 (_ bv3 32))))
 (let ((?x5 (concat (select input.dst.llvm-mem ?x11) (concat ?x58 ?x69))))
 (let (($x155 (= (bvand ?x5 (_ bv4294967280 32)) ?x5)))
 (let (($x147 (= (bvand ?x26 (_ bv4294967292 32)) ?x26)))
 (let (($x151 (and $x147 $x155)))
 (let (($x143 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x178 (and true $x143)))
 (let (($x134 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x26 (bvsub ?x26 (_ bv4 32))) (bvult ?x26 (bvsub ?x26 (_ bv4 32))))))
 (let (($x148 (and (and (and $x134 $x178) $x147) $x151)))
 (let (($x161 (= true $x148)))
 (let (($x37 (= (_ bv0 32) ?x5)))
 (let (($x150 (not $x37)))
 (let (($x237 (=> $x150 $x161)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x187 (concat ?x157 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x19 (bvadd ?x8 (_ bv3 32))))
 (let ((?x168 (concat (select input.dst.llvm-mem ?x19) (concat ?x165 ?x187))))
 (let (($x191 (= (bvand ?x168 (_ bv4294967280 32)) ?x168)))
 (let (($x154 (= (bvand ?x8 (_ bv4294967292 32)) ?x8)))
 (let (($x181 (and $x154 $x191)))
 (let (($x164 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x8 (bvsub ?x8 (_ bv8 32))) (bvult ?x8 (bvsub ?x8 (_ bv8 32))))))
 (let (($x247 (and (and (and $x164 $x178) $x154) $x181)))
 (let (($x24 (= true $x247)))
 (let (($x192 (=> $x37 $x24)))
 (let (($x209 (and $x192 $x237)))
 (let (($x273 (= true $x209)))
 (let (($x162 (or $x37 $x150)))
 (let (($x42 (not $x33)))
 (let (($x167 (and $x42 $x162)))
 (let (($x75 (=> $x167 $x273)))
 (let (($x166 (=> $x42 $x161)))
 (let (($x137 (= input.dst.llvm-%t ?x170)))
 (let (($x106 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x133 (and $x106 $x137)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x176 (= (_ bv0 32) ?x138)))
 (let ((?x175 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x169 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x175)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x118 $x169)))
 (let (($x123 (and $x53 $x176)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (and $x95 $x123)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x80 $x109)))))))
 (let (($x131 (and (and (and $x116 true) $x127) $x133)))
 (let (($x159 (and $x131 $x166)))
 (let (($x244 (and $x159 $x75)))
 (let (($x238 (= $x244 true)))
 (let (($x215 (= $x238 true)))
 (let (($x195 (= $x215 true)))
 (let (($x93 (= $x33 true)))
 (let (($x108 (= $x93 true)))
 (let (($x126 (= $x108 true)))
 (let (($x107 (= $x106 true)))
 (let (($x105 (= $x107 true)))
 (let (($x110 (= $x105 true)))
 (let (($x124 (and $x110 $x126)))
 (let (($x64 (and $x124 $x195)))
 (let (($x67 (and $x64 $x197)))
 (let (($x256 (and $x67 $x262)))
 (let (($x342 (and $x256 $x315)))
 (let (($x351 (and $x342 $x322)))
 (let (($x362 (and $x351 $x363)))
 (let (($x381 (and $x362 $x384)))
 (let (($x83 (and $x92 $x88)))
 (let (($x386 (and $x83 $x381)))
 (let (($x85 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x449 (and $x85 $x386)))
 (let (($x457 (and $x77 $x449)))
 (let (($x456 (and $x77 $x457)))
 (let (($x47 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x82 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x47)))))))
 (let (($x40 (and $x42 $x37)))
 (let (($x76 (=> (and $x40 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x47)))))))
 (let (($x18 (bvugt ?x26 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x12 (=> (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x18)))))))
 (let (($x16 (=> (and $x42 (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x17 $x18)))))))
 (let (($x23 (and $x16 $x76)))
 (let (($x393 (and $x23 $x456)))
 (let (($x10 (=> $x393 $x430)))
 (not $x10)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1768X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x424 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x422 (concat ?x424 (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv8 32))))))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x464 (concat ?x427 (concat ?x420 ?x422))))
 (let (($x423 (= ?x464 ?x464)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x222 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x221 (concat ?x245 (concat ?x218 ?x222))))
 (let (($x229 (= (_ bv0 32) ?x221)))
 (let ((?x225 (ite $x229 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x225 (_ bv1 32))))
 (let (($x429 (=> $x282 $x423)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x205 (concat ?x204 (concat ?x233 ?x202))))
 (let (($x206 (= (_ bv0 32) ?x205)))
 (let ((?x219 (ite $x206 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (= ?x219 (_ bv0 32))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x221 (_ bv4 32))))))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv2 32))) ?x387)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv3 32))) ?x463)))
 (let (($x392 (= (_ bv0 32) ?x452)))
 (let ((?x444 (ite $x392 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (= ?x444 (_ bv0 32))))
 (let (($x416 (= $x433 $x207)))
 (let (($x440 (=> $x282 $x416)))
 (let (($x261 (bvuge ?x219 (_ bv1 32))))
 (let (($x408 (bvuge ?x444 (_ bv1 32))))
 (let (($x407 (= $x408 $x261)))
 (let (($x413 (=> $x282 $x407)))
 (let ((?x406 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x112 (concat ?x406 (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv4 32))))))
 (let ((?x417 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x415 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1768X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x460 (concat ?x415 (concat ?x417 ?x112))))
 (let (($x410 (= ?x460 ?x460)))
 (let (($x414 (=> $x282 $x410)))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1768X))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv2 32))) ?x402)))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1768X (_ bv3 32))) ?x405)))
 (let (($x454 (= ?x404 ?x404)))
 (let (($x398 (=> $x282 $x454)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x252 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (= ?x252 (_ bv0 32))))
 (let (($x223 (= ?x225 (_ bv0 32))))
 (let (($x453 (= $x223 $x228)))
 (let (($x183 (bvuge ?x252 (_ bv1 32))))
 (let (($x451 (= $x282 $x183)))
 (let (($x435 (= ?x221 input.dst.llvm-%t)))
 (let (($x77 (= false false)))
 (let (($x447 (and $x282 $x433)))
 (let (($x459 (=> $x447 $x77)))
 (let (($x450 (=> $x223 $x77)))
 (let (($x426 (and (and (and (and (and (and $x450 $x459) $x435) $x451) $x453) $x398) $x414)))
 (let (($x442 (and (and (and $x426 $x413) $x440) $x429)))
 (let (($x391 (= true true)))
 (let (($x91 (and $x391 $x442)))
 (let (($x430 (= $x91 true)))
 (let (($x377 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x266 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x7 (= $x266 $x377)))
 (let (($x265 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x373 (=> $x265 $x77)))
 (let (($x369 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x376 (= $x265 $x369)))
 (let (($x375 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x35 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x25 (= $x35 $x375)))
 (let (($x275 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x372 (=> $x275 $x77)))
 (let (($x366 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x357 (= $x275 $x366)))
 (let (($x370 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x383 (and (and (and (and (and (and $x370 $x357) $x372) $x25) $x376) $x373) $x7)))
 (let (($x384 (= $x383 true)))
 (let (($x358 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x327 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x344 (= $x327 $x358)))
 (let (($x226 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x328 (=> $x226 $x344)))
 (let (($x350 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x326 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x346 (= $x326 $x350)))
 (let (($x338 (=> $x226 $x346)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x353 $x325)))
 (let (($x337 (=> $x226 $x336)))
 (let (($x334 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x323 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x349 (= $x323 $x334)))
 (let (($x364 (=> $x226 $x349)))
 (let (($x347 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x70 (=> $x226 $x347)))
 (let (($x343 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x348 (= $x226 $x343)))
 (let (($x234 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x234 $x77)))
 (let (($x333 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x329 (= $x234 $x333)))
 (let (($x367 (and (and (and (and (and (and $x329 $x332) $x348) $x70) $x364) $x337) $x338)))
 (let (($x359 (and $x367 $x328)))
 (let (($x363 (= $x359 true)))
 (let (($x340 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x298 (= $x226 $x340)))
 (let (($x317 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x341 (= $x234 $x317)))
 (let (($x335 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x291 (= $x284 $x335)))
 (let (($x88 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x281 (=> $x88 $x77)))
 (let (($x294 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x310 (= $x88 $x294)))
 (let (($x309 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x321 (and (and (and (and (and (and $x309 $x310) $x281) $x291) $x341) $x332) $x298)))
 (let (($x322 (= $x321 true)))
 (let (($x94 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x296 (= $x266 $x94)))
 (let (($x267 (=> $x284 $x296)))
 (let (($x293 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x15 (= $x265 $x293)))
 (let (($x259 (=> $x284 $x15)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x35 $x280)))
 (let (($x258 (=> $x284 $x286)))
 (let (($x283 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x275 $x283)))
 (let (($x305 (=> $x284 $x288)))
 (let (($x299 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x263 (=> $x284 $x299)))
 (let (($x295 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x287 (= $x284 $x295)))
 (let (($x277 (and (and (= $x88 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x281) $x287)))
 (let (($x304 (and (and (and (and (and $x277 $x263) $x305) $x258) $x259) $x267)))
 (let (($x315 (= $x304 true)))
 (let (($x235 (= $x226 $x282)))
 (let (($x92 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x236 (=> $x92 $x235)))
 (let (($x230 (= $x234 $x223)))
 (let (($x241 (=> $x92 $x230)))
 (let (($x208 (= $x284 $x261)))
 (let (($x249 (=> $x92 $x208)))
 (let (($x246 (= $x88 $x207)))
 (let (($x253 (=> $x92 $x246)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x193)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x196)))
 (let (($x278 (= input.spec-%var-t-0.2.0 ?x312)))
 (let (($x240 (=> $x92 $x278)))
 (let (($x248 (= $x92 $x183)))
 (let (($x198 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x243 (=> $x198 $x77)))
 (let (($x232 (= $x198 $x228)))
 (let (($x292 (and (and (and (and (and (and $x232 $x243) $x248) $x240) $x253) $x249) $x241)))
 (let (($x268 (and $x292 $x236)))
 (let (($x262 (= $x268 true)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x170 (concat ?x141 (concat ?x185 (concat ?x179 ?x117)))))
 (let (($x250 (= ?x170 input.dst.llvm-%t)))
 (let (($x231 (= $x250 true)))
 (let (($x197 (= $x231 true)))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x22 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x26 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x11 (bvadd ?x26 (_ bv3 32))))
 (let ((?x5 (concat (select input.dst.llvm-mem ?x11) (concat ?x58 ?x69))))
 (let (($x155 (= (bvand ?x5 (_ bv4294967280 32)) ?x5)))
 (let (($x147 (= (bvand ?x26 (_ bv4294967292 32)) ?x26)))
 (let (($x151 (and $x147 $x155)))
 (let (($x143 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x178 (and true $x143)))
 (let (($x134 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x26 (bvsub ?x26 (_ bv4 32))) (bvult ?x26 (bvsub ?x26 (_ bv4 32))))))
 (let (($x148 (and (and (and $x134 $x178) $x147) $x151)))
 (let (($x161 (= true $x148)))
 (let (($x37 (= (_ bv0 32) ?x5)))
 (let (($x150 (not $x37)))
 (let (($x237 (=> $x150 $x161)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x187 (concat ?x157 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x19 (bvadd ?x8 (_ bv3 32))))
 (let ((?x168 (concat (select input.dst.llvm-mem ?x19) (concat ?x165 ?x187))))
 (let (($x191 (= (bvand ?x168 (_ bv4294967280 32)) ?x168)))
 (let (($x154 (= (bvand ?x8 (_ bv4294967292 32)) ?x8)))
 (let (($x181 (and $x154 $x191)))
 (let (($x164 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x8 (bvsub ?x8 (_ bv8 32))) (bvult ?x8 (bvsub ?x8 (_ bv8 32))))))
 (let (($x247 (and (and (and $x164 $x178) $x154) $x181)))
 (let (($x24 (= true $x247)))
 (let (($x192 (=> $x37 $x24)))
 (let (($x209 (and $x192 $x237)))
 (let (($x273 (= true $x209)))
 (let (($x162 (or $x37 $x150)))
 (let (($x42 (not $x33)))
 (let (($x167 (and $x42 $x162)))
 (let (($x75 (=> $x167 $x273)))
 (let (($x166 (=> $x42 $x161)))
 (let (($x137 (= input.dst.llvm-%t ?x170)))
 (let (($x106 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x133 (and $x106 $x137)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x176 (= (_ bv0 32) ?x138)))
 (let ((?x175 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x169 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x175)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x118 $x169)))
 (let (($x123 (and $x53 $x176)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (and $x95 $x123)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x80 $x109)))))))
 (let (($x131 (and (and (and $x116 true) $x127) $x133)))
 (let (($x159 (and $x131 $x166)))
 (let (($x244 (and $x159 $x75)))
 (let (($x238 (= $x244 true)))
 (let (($x215 (= $x238 true)))
 (let (($x195 (= $x215 true)))
 (let (($x93 (= $x33 true)))
 (let (($x108 (= $x93 true)))
 (let (($x126 (= $x108 true)))
 (let (($x107 (= $x106 true)))
 (let (($x105 (= $x107 true)))
 (let (($x110 (= $x105 true)))
 (let (($x124 (and $x110 $x126)))
 (let (($x64 (and $x124 $x195)))
 (let (($x67 (and $x64 $x197)))
 (let (($x256 (and $x67 $x262)))
 (let (($x342 (and $x256 $x315)))
 (let (($x351 (and $x342 $x322)))
 (let (($x362 (and $x351 $x363)))
 (let (($x381 (and $x362 $x384)))
 (let (($x83 (and $x92 $x88)))
 (let (($x386 (and $x83 $x381)))
 (let (($x85 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x449 (and $x85 $x386)))
 (let (($x457 (and $x77 $x449)))
 (let (($x456 (and $x77 $x457)))
 (let (($x47 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x82 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x47)))))))
 (let (($x40 (and $x42 $x37)))
 (let (($x76 (=> (and $x40 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x47)))))))
 (let (($x18 (bvugt ?x26 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x12 (=> (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x18)))))))
 (let (($x16 (=> (and $x42 (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x17 $x18)))))))
 (let (($x23 (and $x16 $x76)))
 (let (($x393 (and $x23 $x456)))
 (let (($x10 (=> $x393 $x430)))
 (not $x10)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1802X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x415 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x455 (concat ?x415 (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv8 32))))))
 (let ((?x438 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x412 (concat ?x112 (concat ?x438 ?x455))))
 (let (($x460 (= ?x412 ?x412)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x232 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x232 (_ bv1 32))))
 (let (($x410 (=> $x248 $x460)))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x397 (concat ?x399 (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv4 32))))))
 (let ((?x466 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x405 (concat ?x466 ?x397))))
 (let (($x454 (= ?x404 ?x404)))
 (let (($x398 (=> $x248 $x454)))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1802X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv2 32))) ?x447)))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv3 32))) ?x435)))
 (let (($x453 (= ?x428 ?x428)))
 (let (($x468 (=> $x248 $x453)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x22 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x50 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x38 (bvadd ?x50 (_ bv3 32))))
 (let ((?x40 (concat (select input.dst.llvm-mem ?x38) (concat ?x29 ?x22))))
 (let (($x27 (= (_ bv0 32) ?x40)))
 (let ((?x432 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x432 (_ bv1 32))))
 (let (($x463 (= $x248 $x387)))
 (let (($x85 (= false false)))
 (let (($x77 (= ?x232 (_ bv0 32))))
 (let (($x462 (=> $x77 $x85)))
 (let (($x408 (and (and (and (= input.dst.llvm-%t ?x40) (= $x77 (= ?x432 (_ bv0 32)))) $x462) $x463)))
 (let (($x421 (and (and (and $x408 $x468) $x398) $x410)))
 (let (($x385 (= true true)))
 (let (($x416 (and $x385 $x421)))
 (let (($x440 (= $x416 true)))
 (let (($x458 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x259 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x377 (= $x259 $x458)))
 (let (($x301 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x373 (=> $x301 $x85)))
 (let (($x376 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x380 (= $x301 $x376)))
 (let (($x390 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x35 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x365 (= $x35 $x390)))
 (let (($x264 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x264 $x85)))
 (let (($x389 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x375 (= $x264 $x389)))
 (let (($x374 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x449 (and (and (and (and (and (and $x374 $x375) $x25) $x365) $x380) $x373) $x377)))
 (let (($x457 (= $x449 true)))
 (let (($x367 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x338 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x327 (= $x338 $x367)))
 (let (($x241 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x358 (=> $x241 $x327)))
 (let (($x360 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x361 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x350 (= $x361 $x360)))
 (let (($x346 (=> $x241 $x350)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x353 $x325)))
 (let (($x337 (=> $x241 $x336)))
 (let (($x349 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x364 (= $x324 $x349)))
 (let (($x100 (=> $x241 $x364)))
 (let (($x355 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x104 (=> $x241 $x355)))
 (let (($x51 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x352 (= $x241 $x51)))
 (let (($x285 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x285 $x85)))
 (let (($x348 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x339 (= $x285 $x348)))
 (let (($x371 (and (and (and (and (and (and $x339 $x332) $x352) $x104) $x100) $x337) $x346)))
 (let (($x370 (and $x371 $x358)))
 (let (($x368 (= $x370 true)))
 (let (($x330 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x340 (= $x241 $x330)))
 (let (($x341 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x345 (= $x285 $x341)))
 (let (($x320 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x306 (= $x284 $x320)))
 (let (($x199 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x277 (=> $x199 $x85)))
 (let (($x335 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x291 (= $x199 $x335)))
 (let (($x318 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x333 (and (and (and (and (and (and $x318 $x291) $x277) $x306) $x345) $x332) $x340)))
 (let (($x329 (= $x333 true)))
 (let (($x302 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x266 (= $x259 $x302)))
 (let (($x94 (=> $x284 $x266)))
 (let (($x314 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x293 (= $x301 $x314)))
 (let (($x15 (=> $x284 $x293)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x35 $x280)))
 (let (($x258 (=> $x284 $x286)))
 (let (($x288 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x264 $x288)))
 (let (($x300 (=> $x284 $x305)))
 (let (($x290 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x257 (=> $x284 $x290)))
 (let (($x279 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x289 (= $x284 $x279)))
 (let (($x267 (and (and (= $x199 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x277) $x289)))
 (let (($x309 (and (and (and (and (and $x267 $x257) $x300) $x258) $x15) $x94)))
 (let (($x316 (= $x309 true)))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x224 (concat ?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x271 (concat ?x222 (concat ?x242 ?x224))))
 (let (($x221 (= (_ bv0 32) ?x271)))
 (let ((?x229 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (bvuge ?x229 (_ bv1 32))))
 (let (($x226 (= $x241 $x292)))
 (let (($x183 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x282 (=> $x183 $x226)))
 (let (($x225 (= ?x229 (_ bv0 32))))
 (let (($x223 (= $x285 $x225)))
 (let (($x230 (=> $x183 $x223)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x217 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x205 (concat ?x201 ?x217))))
 (let (($x219 (= (_ bv0 32) ?x206)))
 (let ((?x207 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x207 (_ bv1 32))))
 (let (($x208 (= $x284 $x261)))
 (let (($x249 (=> $x183 $x208)))
 (let (($x246 (= ?x207 (_ bv0 32))))
 (let (($x253 (= $x199 $x246)))
 (let (($x254 (=> $x183 $x253)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x210)))
 (let (($x278 (= input.spec-%var-t-0.2.0 ?x312)))
 (let (($x240 (=> $x183 $x278)))
 (let (($x227 (= $x183 $x248)))
 (let (($x83 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x311 (=> $x83 $x85)))
 (let (($x243 (= $x83 $x77)))
 (let (($x297 (and (and (and (and (and (and $x243 $x311) $x227) $x240) $x254) $x249) $x230)))
 (let (($x269 (and $x297 $x282)))
 (let (($x313 (= $x269 true)))
 (let ((?x115 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x133 (concat ?x137 (concat ?x120 (concat ?x65 ?x115)))))
 (let (($x67 (= ?x133 input.dst.llvm-%t)))
 (let (($x198 (= $x67 true)))
 (let (($x252 (= $x198 true)))
 (let (($x148 (= (bvand ?x40 (_ bv4294967280 32)) ?x40)))
 (let (($x155 (= (bvand ?x50 (_ bv4294967292 32)) ?x50)))
 (let (($x161 (and $x155 $x148)))
 (let (($x144 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x147 (and true $x144)))
 (let (($x146 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x50 (bvsub ?x50 (_ bv4 32))) (bvult ?x50 (bvsub ?x50 (_ bv4 32))))))
 (let (($x150 (and (and (and $x146 $x147) $x155) $x161)))
 (let (($x162 (= true $x150)))
 (let (($x93 (not $x27)))
 (let (($x75 (=> $x93 $x162)))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x157 (concat ?x171 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x81 (_ bv3 32))))
 (let ((?x180 (concat (select input.dst.llvm-mem ?x31) (concat ?x187 ?x157))))
 (let (($x181 (= (bvand ?x180 (_ bv4294967280 32)) ?x180)))
 (let (($x214 (= (bvand ?x81 (_ bv4294967292 32)) ?x81)))
 (let (($x247 (and $x214 $x181)))
 (let (($x154 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x81 (bvsub ?x81 (_ bv8 32))) (bvult ?x81 (bvsub ?x81 (_ bv8 32))))))
 (let (($x237 (and (and (and $x154 $x147) $x214) $x247)))
 (let (($x209 (= true $x237)))
 (let (($x273 (=> $x27 $x209)))
 (let (($x244 (and $x273 $x75)))
 (let (($x238 (= true $x244)))
 (let (($x190 (or $x27 $x93)))
 (let (($x42 (not $x33)))
 (let (($x153 (and $x42 $x190)))
 (let (($x215 (=> $x153 $x238)))
 (let (($x167 (=> $x42 $x162)))
 (let (($x131 (= input.dst.llvm-%t ?x133)))
 (let (($x106 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x132 (and $x106 $x131)))
 (let ((?x123 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x123)))
 (let ((?x53 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x53)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (and $x169 $x138)))
 (let (($x135 (and $x176 $x127)))
 (let (($x80 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x80 $x135)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x175 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x121)))))))
 (let (($x160 (and (and (and $x175 true) $x119) $x132)))
 (let (($x163 (and $x160 $x167)))
 (let (($x195 (and $x163 $x215)))
 (let (($x64 (= $x195 true)))
 (let (($x250 (= $x64 true)))
 (let (($x231 (= $x250 true)))
 (let (($x108 (and $x42 $x93)))
 (let (($x126 (= $x108 true)))
 (let (($x124 (= $x126 true)))
 (let (($x96 (= $x124 true)))
 (let (($x107 (= $x106 true)))
 (let (($x105 (= $x107 true)))
 (let (($x110 (= $x105 true)))
 (let (($x98 (and $x110 $x96)))
 (let (($x197 (and $x98 $x231)))
 (let (($x228 (and $x197 $x252)))
 (let (($x281 (and $x228 $x313)))
 (let (($x294 (and $x281 $x316)))
 (let (($x354 (and $x294 $x329)))
 (let (($x366 (and $x354 $x368)))
 (let (($x456 (and $x366 $x457)))
 (let (($x393 (and $x83 $x456)))
 (let (($x87 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x391 (and $x87 $x393)))
 (let (($x450 (and $x85 $x391)))
 (let (($x382 (and $x85 $x450)))
 (let (($x36 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x89 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x36)))))))
 (let (($x8 (and $x42 $x27)))
 (let (($x68 (=> (and $x8 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x78 $x36)))))))
 (let (($x61 (bvugt ?x50 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x44 (=> (bvule ?x50 (bvsub (bvadd ?x50 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x61)))))))
 (let (($x57 (=> (and $x42 (bvule ?x50 (bvsub (bvadd ?x50 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x74 $x61)))))))
 (let (($x19 (and $x57 $x68)))
 (let (($x388 (and $x19 $x382)))
 (let (($x20 (=> $x388 $x440)))
 (not $x20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1802X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x415 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x455 (concat ?x415 (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv8 32))))))
 (let ((?x438 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x412 (concat ?x112 (concat ?x438 ?x455))))
 (let (($x460 (= ?x412 ?x412)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x232 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x232 (_ bv1 32))))
 (let (($x410 (=> $x248 $x460)))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x397 (concat ?x399 (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv4 32))))))
 (let ((?x466 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1802X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x405 (concat ?x466 ?x397))))
 (let (($x454 (= ?x404 ?x404)))
 (let (($x398 (=> $x248 $x454)))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1802X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv2 32))) ?x447)))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1802X (_ bv3 32))) ?x435)))
 (let (($x453 (= ?x428 ?x428)))
 (let (($x468 (=> $x248 $x453)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x22 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x50 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x38 (bvadd ?x50 (_ bv3 32))))
 (let ((?x40 (concat (select input.dst.llvm-mem ?x38) (concat ?x29 ?x22))))
 (let (($x27 (= (_ bv0 32) ?x40)))
 (let ((?x432 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x432 (_ bv1 32))))
 (let (($x463 (= $x248 $x387)))
 (let (($x85 (= false false)))
 (let (($x77 (= ?x232 (_ bv0 32))))
 (let (($x462 (=> $x77 $x85)))
 (let (($x408 (and (and (and (= input.dst.llvm-%t ?x40) (= $x77 (= ?x432 (_ bv0 32)))) $x462) $x463)))
 (let (($x421 (and (and (and $x408 $x468) $x398) $x410)))
 (let (($x385 (= true true)))
 (let (($x416 (and $x385 $x421)))
 (let (($x440 (= $x416 true)))
 (let (($x458 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x259 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x377 (= $x259 $x458)))
 (let (($x301 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x373 (=> $x301 $x85)))
 (let (($x376 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x380 (= $x301 $x376)))
 (let (($x390 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x35 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x365 (= $x35 $x390)))
 (let (($x264 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x264 $x85)))
 (let (($x389 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x375 (= $x264 $x389)))
 (let (($x374 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x449 (and (and (and (and (and (and $x374 $x375) $x25) $x365) $x380) $x373) $x377)))
 (let (($x457 (= $x449 true)))
 (let (($x367 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x338 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x327 (= $x338 $x367)))
 (let (($x241 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x358 (=> $x241 $x327)))
 (let (($x360 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x361 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x350 (= $x361 $x360)))
 (let (($x346 (=> $x241 $x350)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x353 $x325)))
 (let (($x337 (=> $x241 $x336)))
 (let (($x349 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x364 (= $x324 $x349)))
 (let (($x100 (=> $x241 $x364)))
 (let (($x355 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x104 (=> $x241 $x355)))
 (let (($x51 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x352 (= $x241 $x51)))
 (let (($x285 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x332 (=> $x285 $x85)))
 (let (($x348 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x339 (= $x285 $x348)))
 (let (($x371 (and (and (and (and (and (and $x339 $x332) $x352) $x104) $x100) $x337) $x346)))
 (let (($x370 (and $x371 $x358)))
 (let (($x368 (= $x370 true)))
 (let (($x330 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x340 (= $x241 $x330)))
 (let (($x341 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x345 (= $x285 $x341)))
 (let (($x320 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x306 (= $x284 $x320)))
 (let (($x199 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x277 (=> $x199 $x85)))
 (let (($x335 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x291 (= $x199 $x335)))
 (let (($x318 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x333 (and (and (and (and (and (and $x318 $x291) $x277) $x306) $x345) $x332) $x340)))
 (let (($x329 (= $x333 true)))
 (let (($x302 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x266 (= $x259 $x302)))
 (let (($x94 (=> $x284 $x266)))
 (let (($x314 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x293 (= $x301 $x314)))
 (let (($x15 (=> $x284 $x293)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x35 $x280)))
 (let (($x258 (=> $x284 $x286)))
 (let (($x288 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x264 $x288)))
 (let (($x300 (=> $x284 $x305)))
 (let (($x290 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x257 (=> $x284 $x290)))
 (let (($x279 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x289 (= $x284 $x279)))
 (let (($x267 (and (and (= $x199 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x277) $x289)))
 (let (($x309 (and (and (and (and (and $x267 $x257) $x300) $x258) $x15) $x94)))
 (let (($x316 (= $x309 true)))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x224 (concat ?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x271 (concat ?x222 (concat ?x242 ?x224))))
 (let (($x221 (= (_ bv0 32) ?x271)))
 (let ((?x229 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (bvuge ?x229 (_ bv1 32))))
 (let (($x226 (= $x241 $x292)))
 (let (($x183 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x282 (=> $x183 $x226)))
 (let (($x225 (= ?x229 (_ bv0 32))))
 (let (($x223 (= $x285 $x225)))
 (let (($x230 (=> $x183 $x223)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x217 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x205 (concat ?x201 ?x217))))
 (let (($x219 (= (_ bv0 32) ?x206)))
 (let ((?x207 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x207 (_ bv1 32))))
 (let (($x208 (= $x284 $x261)))
 (let (($x249 (=> $x183 $x208)))
 (let (($x246 (= ?x207 (_ bv0 32))))
 (let (($x253 (= $x199 $x246)))
 (let (($x254 (=> $x183 $x253)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x210)))
 (let (($x278 (= input.spec-%var-t-0.2.0 ?x312)))
 (let (($x240 (=> $x183 $x278)))
 (let (($x227 (= $x183 $x248)))
 (let (($x83 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x311 (=> $x83 $x85)))
 (let (($x243 (= $x83 $x77)))
 (let (($x297 (and (and (and (and (and (and $x243 $x311) $x227) $x240) $x254) $x249) $x230)))
 (let (($x269 (and $x297 $x282)))
 (let (($x313 (= $x269 true)))
 (let ((?x115 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x133 (concat ?x137 (concat ?x120 (concat ?x65 ?x115)))))
 (let (($x67 (= ?x133 input.dst.llvm-%t)))
 (let (($x198 (= $x67 true)))
 (let (($x252 (= $x198 true)))
 (let (($x148 (= (bvand ?x40 (_ bv4294967280 32)) ?x40)))
 (let (($x155 (= (bvand ?x50 (_ bv4294967292 32)) ?x50)))
 (let (($x161 (and $x155 $x148)))
 (let (($x144 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x147 (and true $x144)))
 (let (($x146 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x50 (bvsub ?x50 (_ bv4 32))) (bvult ?x50 (bvsub ?x50 (_ bv4 32))))))
 (let (($x150 (and (and (and $x146 $x147) $x155) $x161)))
 (let (($x162 (= true $x150)))
 (let (($x93 (not $x27)))
 (let (($x75 (=> $x93 $x162)))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x157 (concat ?x171 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x81 (_ bv3 32))))
 (let ((?x180 (concat (select input.dst.llvm-mem ?x31) (concat ?x187 ?x157))))
 (let (($x181 (= (bvand ?x180 (_ bv4294967280 32)) ?x180)))
 (let (($x214 (= (bvand ?x81 (_ bv4294967292 32)) ?x81)))
 (let (($x247 (and $x214 $x181)))
 (let (($x154 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x81 (bvsub ?x81 (_ bv8 32))) (bvult ?x81 (bvsub ?x81 (_ bv8 32))))))
 (let (($x237 (and (and (and $x154 $x147) $x214) $x247)))
 (let (($x209 (= true $x237)))
 (let (($x273 (=> $x27 $x209)))
 (let (($x244 (and $x273 $x75)))
 (let (($x238 (= true $x244)))
 (let (($x190 (or $x27 $x93)))
 (let (($x42 (not $x33)))
 (let (($x153 (and $x42 $x190)))
 (let (($x215 (=> $x153 $x238)))
 (let (($x167 (=> $x42 $x162)))
 (let (($x131 (= input.dst.llvm-%t ?x133)))
 (let (($x106 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x132 (and $x106 $x131)))
 (let ((?x123 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x123)))
 (let ((?x53 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x53)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (and $x169 $x138)))
 (let (($x135 (and $x176 $x127)))
 (let (($x80 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x80 $x135)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x175 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x121)))))))
 (let (($x160 (and (and (and $x175 true) $x119) $x132)))
 (let (($x163 (and $x160 $x167)))
 (let (($x195 (and $x163 $x215)))
 (let (($x64 (= $x195 true)))
 (let (($x250 (= $x64 true)))
 (let (($x231 (= $x250 true)))
 (let (($x108 (and $x42 $x93)))
 (let (($x126 (= $x108 true)))
 (let (($x124 (= $x126 true)))
 (let (($x96 (= $x124 true)))
 (let (($x107 (= $x106 true)))
 (let (($x105 (= $x107 true)))
 (let (($x110 (= $x105 true)))
 (let (($x98 (and $x110 $x96)))
 (let (($x197 (and $x98 $x231)))
 (let (($x228 (and $x197 $x252)))
 (let (($x281 (and $x228 $x313)))
 (let (($x294 (and $x281 $x316)))
 (let (($x354 (and $x294 $x329)))
 (let (($x366 (and $x354 $x368)))
 (let (($x456 (and $x366 $x457)))
 (let (($x393 (and $x83 $x456)))
 (let (($x87 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x391 (and $x87 $x393)))
 (let (($x450 (and $x85 $x391)))
 (let (($x382 (and $x85 $x450)))
 (let (($x36 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x89 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x36)))))))
 (let (($x8 (and $x42 $x27)))
 (let (($x68 (=> (and $x8 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x78 $x36)))))))
 (let (($x61 (bvugt ?x50 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x44 (=> (bvule ?x50 (bvsub (bvadd ?x50 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x61)))))))
 (let (($x57 (=> (and $x42 (bvule ?x50 (bvsub (bvadd ?x50 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x74 $x61)))))))
 (let (($x19 (and $x57 $x68)))
 (let (($x388 (and $x19 $x382)))
 (let (($x20 (=> $x388 $x440)))
 (not $x20))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1835X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x417 (concat ?x112 (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv8 32))))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x455 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x406 (concat ?x455 (concat ?x401 ?x417))))
 (let (($x412 (= ?x406 ?x406)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x311 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x311 (_ bv1 32))))
 (let (($x460 (=> $x236 $x412)))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x466 (concat ?x395 (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv4 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x403 (concat ?x399 ?x466))))
 (let (($x454 (= ?x404 ?x404)))
 (let (($x398 (=> $x236 $x454)))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1835X))))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv2 32))) ?x444)))
 (let ((?x453 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv3 32))) ?x447)))
 (let (($x468 (= ?x453 ?x453)))
 (let (($x407 (=> $x236 $x468)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x172 (concat ?x157 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x47 (_ bv3 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem ?x54) (concat ?x191 ?x172))))
 (let (($x462 (= (_ bv0 32) ?x237)))
 (let ((?x426 (ite $x462 (_ bv0 32) (_ bv1 32))))
 (let (($x408 (bvuge ?x426 (_ bv1 32))))
 (let (($x452 (= $x236 $x408)))
 (let (($x387 (= ?x426 (_ bv0 32))))
 (let (($x235 (= ?x311 (_ bv0 32))))
 (let (($x463 (= $x235 $x387)))
 (let (($x421 (and (and (=> $x235 (= false false)) (= input.dst.llvm-%t ?x237)) $x463)))
 (let (($x34 (and (and (and (and $x421 $x452) $x407) $x398) $x460)))
 (let (($x379 (= true true)))
 (let (($x52 (and $x379 $x34)))
 (let (($x55 (= $x52 true)))
 (let (($x373 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x293 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x386 (= $x293 $x373)))
 (let (($x87 (= false false)))
 (let (($x342 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x381 (=> $x342 $x87)))
 (let (($x376 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x380 (= $x342 $x376)))
 (let (($x365 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x384 (= $x315 $x365)))
 (let (($x264 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x390 (=> $x264 $x87)))
 (let (($x25 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x383 (= $x264 $x25)))
 (let (($x375 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x393 (and (and (and (and (and (and $x375 $x383) $x390) $x384) $x380) $x381) $x386)))
 (let (($x391 (= $x393 true)))
 (let (($x346 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x350 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x371 (= $x350 $x346)))
 (let (($x223 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x338 (=> $x223 $x371)))
 (let (($x361 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x362 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x326 (= $x362 $x361)))
 (let (($x360 (=> $x223 $x326)))
 (let (($x353 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x363 $x353)))
 (let (($x336 (=> $x223 $x325)))
 (let (($x349 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x364 (= $x324 $x349)))
 (let (($x100 (=> $x223 $x364)))
 (let (($x104 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x359 (=> $x223 $x104)))
 (let (($x328 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x347 (= $x223 $x328)))
 (let (($x256 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x351 (=> $x256 $x87)))
 (let (($x51 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x352 (= $x256 $x51)))
 (let (($x366 (and (and (and (and (and (and $x352 $x351) $x347) $x359) $x100) $x336) $x360)))
 (let (($x357 (and $x366 $x338)))
 (let (($x374 (= $x357 true)))
 (let (($x332 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x331 (= $x223 $x332)))
 (let (($x341 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x345 (= $x256 $x341)))
 (let (($x306 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x262 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x322 (= $x262 $x306)))
 (let (($x199 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x289 (=> $x199 $x87)))
 (let (($x321 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x320 (= $x199 $x321)))
 (let (($x291 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x343 (and (and (and (and (and (and $x291 $x320) $x289) $x322) $x345) $x351) $x331)))
 (let (($x348 (= $x343 true)))
 (let (($x15 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x308 (= $x293 $x15)))
 (let (($x259 (=> $x262 $x308)))
 (let (($x301 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x265 (= $x342 $x301)))
 (let (($x314 (=> $x262 $x265)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x286 (=> $x262 $x280)))
 (let (($x288 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x264 $x288)))
 (let (($x300 (=> $x262 $x305)))
 (let (($x257 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x304 (=> $x262 $x257)))
 (let (($x267 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x299 (= $x262 $x267)))
 (let (($x266 (and (and (= $x199 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x289) $x299)))
 (let (($x310 (and (and (and (and (and $x266 $x304) $x300) $x286) $x314) $x259)))
 (let (($x318 (= $x310 true)))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x222 (concat ?x274 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x224 (concat ?x276 (concat ?x242 ?x222))))
 (let (($x220 (= (_ bv0 32) ?x224)))
 (let ((?x271 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (bvuge ?x271 (_ bv1 32))))
 (let (($x297 (= $x223 $x230)))
 (let (($x227 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x241 (=> $x227 $x297)))
 (let (($x221 (= ?x271 (_ bv0 32))))
 (let (($x229 (= $x256 $x221)))
 (let (($x225 (=> $x227 $x229)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x202 (concat ?x233 ?x201))))
 (let (($x219 (= (_ bv0 32) ?x206)))
 (let ((?x207 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x207 (_ bv1 32))))
 (let (($x261 (= $x262 $x284)))
 (let (($x208 (=> $x227 $x261)))
 (let (($x246 (= ?x207 (_ bv0 32))))
 (let (($x253 (= $x199 $x246)))
 (let (($x254 (=> $x227 $x253)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x216)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x194)))
 (let (($x240 (= input.spec-%var-t-0.2.0 ?x278)))
 (let (($x268 (=> $x227 $x240)))
 (let (($x193 (= $x227 $x236)))
 (let (($x105 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x248 (=> $x105 $x87)))
 (let (($x183 (= $x105 $x235)))
 (let (($x281 (and (and (and (and (and (and $x183 $x248) $x193) $x268) $x254) $x208) $x225)))
 (let (($x303 (and $x281 $x241)))
 (let (($x295 (= $x303 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x132 (concat ?x122 (concat ?x65 ?x120)))))
 (let (($x232 (= ?x160 input.dst.llvm-%t)))
 (let (($x77 (= $x232 true)))
 (let (($x243 (= $x77 true)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x60 (concat ?x58 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x62 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x21 (bvadd ?x62 (_ bv3 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem ?x21) (concat ?x5 ?x60))))
 (let (($x162 (= (bvand ?x8 (_ bv4294967280 32)) ?x8)))
 (let (($x161 (= (bvand ?x62 (_ bv4294967292 32)) ?x62)))
 (let (($x167 (and $x161 $x162)))
 (let (($x155 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x159 (and true $x155)))
 (let (($x144 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x62 (bvsub ?x62 (_ bv4 32))) (bvult ?x62 (bvsub ?x62 (_ bv4 32))))))
 (let (($x153 (and (and (and $x144 $x159) $x161) $x167)))
 (let (($x164 (= true $x153)))
 (let (($x49 (= (_ bv0 32) ?x8)))
 (let (($x177 (not $x49)))
 (let (($x250 (=> $x177 $x164)))
 (let (($x273 (= (bvand ?x237 (_ bv4294967280 32)) ?x237)))
 (let (($x165 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x75 (and $x165 $x273)))
 (let (($x149 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv8 32))) (bvult ?x47 (bvsub ?x47 (_ bv8 32))))))
 (let (($x215 (and (and (and $x149 $x159) $x165) $x75)))
 (let (($x195 (= true $x215)))
 (let (($x64 (=> $x49 $x195)))
 (let (($x231 (and $x64 $x250)))
 (let (($x197 (= true $x231)))
 (let (($x154 (or $x49 $x177)))
 (let (($x42 (not $x33)))
 (let (($x24 (and $x42 $x154)))
 (let (($x67 (=> $x24 $x197)))
 (let (($x173 (=> $x42 $x164)))
 (let (($x152 (= input.dst.llvm-%t ?x160)))
 (let (($x108 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x134 (and $x108 $x152)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x119)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x123)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (and $x176 $x127)))
 (let (($x170 (and $x135 $x139)))
 (let (($x121 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x121 $x170)))
 (let (($x175 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x138 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x175)))))))
 (let (($x146 (and (and (and $x138 true) $x137) $x134)))
 (let (($x6 (and $x146 $x173)))
 (let (($x198 (and $x6 $x67)))
 (let (($x252 (= $x198 true)))
 (let (($x228 (= $x252 true)))
 (let (($x88 (= $x228 true)))
 (let (($x81 (and $x42 $x49)))
 (let (($x98 (= $x81 true)))
 (let (($x109 (= $x98 true)))
 (let (($x213 (= $x109 true)))
 (let (($x126 (= $x108 true)))
 (let (($x124 (= $x126 true)))
 (let (($x96 (= $x124 true)))
 (let (($x118 (and $x96 $x213)))
 (let (($x83 (and $x118 $x88)))
 (let (($x85 (and $x83 $x243)))
 (let (($x287 (and $x85 $x295)))
 (let (($x319 (and $x287 $x318)))
 (let (($x339 (and $x319 $x348)))
 (let (($x372 (and $x339 $x374)))
 (let (($x450 (and $x372 $x391)))
 (let (($x382 (and $x105 $x450)))
 (let (($x106 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x388 (and $x106 $x382)))
 (let (($x385 (and $x87 $x388)))
 (let (($x465 (and $x87 $x385)))
 (let (($x76 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x92 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x76)))))))
 (let (($x71 (=> (and $x81 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x76)))))))
 (let (($x16 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x43 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x12 $x16)))))))
 (let (($x11 (=> (and $x42 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x12 $x16)))))))
 (let (($x31 (and $x11 $x71)))
 (let (($x432 (and $x31 $x465)))
 (let (($x174 (=> $x432 $x55)))
 (not $x174)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1835X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x417 (concat ?x112 (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv8 32))))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x455 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x406 (concat ?x455 (concat ?x401 ?x417))))
 (let (($x412 (= ?x406 ?x406)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x311 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x311 (_ bv1 32))))
 (let (($x460 (=> $x236 $x412)))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x466 (concat ?x395 (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv4 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1835X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x403 (concat ?x399 ?x466))))
 (let (($x454 (= ?x404 ?x404)))
 (let (($x398 (=> $x236 $x454)))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1835X))))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv2 32))) ?x444)))
 (let ((?x453 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1835X (_ bv3 32))) ?x447)))
 (let (($x468 (= ?x453 ?x453)))
 (let (($x407 (=> $x236 $x468)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x172 (concat ?x157 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x47 (_ bv3 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem ?x54) (concat ?x191 ?x172))))
 (let (($x462 (= (_ bv0 32) ?x237)))
 (let ((?x426 (ite $x462 (_ bv0 32) (_ bv1 32))))
 (let (($x408 (bvuge ?x426 (_ bv1 32))))
 (let (($x452 (= $x236 $x408)))
 (let (($x387 (= ?x426 (_ bv0 32))))
 (let (($x235 (= ?x311 (_ bv0 32))))
 (let (($x463 (= $x235 $x387)))
 (let (($x421 (and (and (=> $x235 (= false false)) (= input.dst.llvm-%t ?x237)) $x463)))
 (let (($x34 (and (and (and (and $x421 $x452) $x407) $x398) $x460)))
 (let (($x379 (= true true)))
 (let (($x52 (and $x379 $x34)))
 (let (($x55 (= $x52 true)))
 (let (($x373 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x293 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x386 (= $x293 $x373)))
 (let (($x87 (= false false)))
 (let (($x342 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x381 (=> $x342 $x87)))
 (let (($x376 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x380 (= $x342 $x376)))
 (let (($x365 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x384 (= $x315 $x365)))
 (let (($x264 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x390 (=> $x264 $x87)))
 (let (($x25 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x383 (= $x264 $x25)))
 (let (($x375 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x393 (and (and (and (and (and (and $x375 $x383) $x390) $x384) $x380) $x381) $x386)))
 (let (($x391 (= $x393 true)))
 (let (($x346 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x350 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x371 (= $x350 $x346)))
 (let (($x223 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x338 (=> $x223 $x371)))
 (let (($x361 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x362 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x326 (= $x362 $x361)))
 (let (($x360 (=> $x223 $x326)))
 (let (($x353 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x363 $x353)))
 (let (($x336 (=> $x223 $x325)))
 (let (($x349 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x364 (= $x324 $x349)))
 (let (($x100 (=> $x223 $x364)))
 (let (($x104 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x359 (=> $x223 $x104)))
 (let (($x328 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x347 (= $x223 $x328)))
 (let (($x256 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x351 (=> $x256 $x87)))
 (let (($x51 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x352 (= $x256 $x51)))
 (let (($x366 (and (and (and (and (and (and $x352 $x351) $x347) $x359) $x100) $x336) $x360)))
 (let (($x357 (and $x366 $x338)))
 (let (($x374 (= $x357 true)))
 (let (($x332 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x331 (= $x223 $x332)))
 (let (($x341 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x345 (= $x256 $x341)))
 (let (($x306 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x262 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x322 (= $x262 $x306)))
 (let (($x199 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x289 (=> $x199 $x87)))
 (let (($x321 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x320 (= $x199 $x321)))
 (let (($x291 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x343 (and (and (and (and (and (and $x291 $x320) $x289) $x322) $x345) $x351) $x331)))
 (let (($x348 (= $x343 true)))
 (let (($x15 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x308 (= $x293 $x15)))
 (let (($x259 (=> $x262 $x308)))
 (let (($x301 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x265 (= $x342 $x301)))
 (let (($x314 (=> $x262 $x265)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x286 (=> $x262 $x280)))
 (let (($x288 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x264 $x288)))
 (let (($x300 (=> $x262 $x305)))
 (let (($x257 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x304 (=> $x262 $x257)))
 (let (($x267 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x299 (= $x262 $x267)))
 (let (($x266 (and (and (= $x199 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x289) $x299)))
 (let (($x310 (and (and (and (and (and $x266 $x304) $x300) $x286) $x314) $x259)))
 (let (($x318 (= $x310 true)))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x222 (concat ?x274 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x224 (concat ?x276 (concat ?x242 ?x222))))
 (let (($x220 (= (_ bv0 32) ?x224)))
 (let ((?x271 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (bvuge ?x271 (_ bv1 32))))
 (let (($x297 (= $x223 $x230)))
 (let (($x227 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x241 (=> $x227 $x297)))
 (let (($x221 (= ?x271 (_ bv0 32))))
 (let (($x229 (= $x256 $x221)))
 (let (($x225 (=> $x227 $x229)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x203 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x202 (concat ?x233 ?x201))))
 (let (($x219 (= (_ bv0 32) ?x206)))
 (let ((?x207 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x207 (_ bv1 32))))
 (let (($x261 (= $x262 $x284)))
 (let (($x208 (=> $x227 $x261)))
 (let (($x246 (= ?x207 (_ bv0 32))))
 (let (($x253 (= $x199 $x246)))
 (let (($x254 (=> $x227 $x253)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x216)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x194)))
 (let (($x240 (= input.spec-%var-t-0.2.0 ?x278)))
 (let (($x268 (=> $x227 $x240)))
 (let (($x193 (= $x227 $x236)))
 (let (($x105 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x248 (=> $x105 $x87)))
 (let (($x183 (= $x105 $x235)))
 (let (($x281 (and (and (and (and (and (and $x183 $x248) $x193) $x268) $x254) $x208) $x225)))
 (let (($x303 (and $x281 $x241)))
 (let (($x295 (= $x303 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x132 (concat ?x122 (concat ?x65 ?x120)))))
 (let (($x232 (= ?x160 input.dst.llvm-%t)))
 (let (($x77 (= $x232 true)))
 (let (($x243 (= $x77 true)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x60 (concat ?x58 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x62 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x21 (bvadd ?x62 (_ bv3 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem ?x21) (concat ?x5 ?x60))))
 (let (($x162 (= (bvand ?x8 (_ bv4294967280 32)) ?x8)))
 (let (($x161 (= (bvand ?x62 (_ bv4294967292 32)) ?x62)))
 (let (($x167 (and $x161 $x162)))
 (let (($x155 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x159 (and true $x155)))
 (let (($x144 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x62 (bvsub ?x62 (_ bv4 32))) (bvult ?x62 (bvsub ?x62 (_ bv4 32))))))
 (let (($x153 (and (and (and $x144 $x159) $x161) $x167)))
 (let (($x164 (= true $x153)))
 (let (($x49 (= (_ bv0 32) ?x8)))
 (let (($x177 (not $x49)))
 (let (($x250 (=> $x177 $x164)))
 (let (($x273 (= (bvand ?x237 (_ bv4294967280 32)) ?x237)))
 (let (($x165 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x75 (and $x165 $x273)))
 (let (($x149 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv8 32))) (bvult ?x47 (bvsub ?x47 (_ bv8 32))))))
 (let (($x215 (and (and (and $x149 $x159) $x165) $x75)))
 (let (($x195 (= true $x215)))
 (let (($x64 (=> $x49 $x195)))
 (let (($x231 (and $x64 $x250)))
 (let (($x197 (= true $x231)))
 (let (($x154 (or $x49 $x177)))
 (let (($x42 (not $x33)))
 (let (($x24 (and $x42 $x154)))
 (let (($x67 (=> $x24 $x197)))
 (let (($x173 (=> $x42 $x164)))
 (let (($x152 (= input.dst.llvm-%t ?x160)))
 (let (($x108 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x134 (and $x108 $x152)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x119)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x123)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (and $x176 $x127)))
 (let (($x170 (and $x135 $x139)))
 (let (($x121 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x121 $x170)))
 (let (($x175 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x138 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x175)))))))
 (let (($x146 (and (and (and $x138 true) $x137) $x134)))
 (let (($x6 (and $x146 $x173)))
 (let (($x198 (and $x6 $x67)))
 (let (($x252 (= $x198 true)))
 (let (($x228 (= $x252 true)))
 (let (($x88 (= $x228 true)))
 (let (($x81 (and $x42 $x49)))
 (let (($x98 (= $x81 true)))
 (let (($x109 (= $x98 true)))
 (let (($x213 (= $x109 true)))
 (let (($x126 (= $x108 true)))
 (let (($x124 (= $x126 true)))
 (let (($x96 (= $x124 true)))
 (let (($x118 (and $x96 $x213)))
 (let (($x83 (and $x118 $x88)))
 (let (($x85 (and $x83 $x243)))
 (let (($x287 (and $x85 $x295)))
 (let (($x319 (and $x287 $x318)))
 (let (($x339 (and $x319 $x348)))
 (let (($x372 (and $x339 $x374)))
 (let (($x450 (and $x372 $x391)))
 (let (($x382 (and $x105 $x450)))
 (let (($x106 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x388 (and $x106 $x382)))
 (let (($x385 (and $x87 $x388)))
 (let (($x465 (and $x87 $x385)))
 (let (($x76 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x92 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x76)))))))
 (let (($x71 (=> (and $x81 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x76)))))))
 (let (($x16 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x43 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x12 $x16)))))))
 (let (($x11 (=> (and $x42 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x12 $x16)))))))
 (let (($x31 (and $x11 $x71)))
 (let (($x432 (and $x31 $x465)))
 (let (($x174 (=> $x432 $x55)))
 (not $x174)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1866X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x20 (concat ?x398 (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv8 32))))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x467 (concat ?x401 (concat ?x396 ?x20))))
 (let (($x112 (= ?x467 ?x467)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x292 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x292 (_ bv1 32))))
 (let (($x14 (=> $x210 $x112)))
 (let ((?x440 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x448 (concat ?x440 (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv4 32))))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x395 (concat ?x405 (concat ?x403 ?x448))))
 (let (($x402 (= ?x395 ?x395)))
 (let (($x466 (=> $x210 $x402)))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1866X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv2 32))) ?x435)))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv3 32))) ?x392)))
 (let (($x444 (= ?x451 ?x451)))
 (let (($x447 (=> $x210 $x444)))
 (let (($x421 (= $x210 $x210)))
 (let (($x227 (= ?x292 (_ bv0 32))))
 (let (($x463 (= $x227 $x227)))
 (let (($x387 (= input.dst.llvm-%t input.dst.llvm-%t)))
 (let (($x106 (= false false)))
 (let (($x426 (=> $x227 $x106)))
 (let (($x34 (and (and (and (and (and (and $x426 $x387) $x463) $x421) $x447) $x466) $x14)))
 (let (($x462 (= true true)))
 (let (($x52 (and $x462 $x34)))
 (let (($x55 (= $x52 true)))
 (let (($x456 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x314 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x373 (= $x314 $x456)))
 (let (($x258 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x381 (=> $x258 $x106)))
 (let (($x380 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x457 (= $x258 $x380)))
 (let (($x449 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x369 (= $x315 $x449)))
 (let (($x283 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x384 (=> $x283 $x106)))
 (let (($x377 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x365 (= $x283 $x377)))
 (let (($x458 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x388 (and (and (and (and (and (and $x458 $x365) $x384) $x369) $x457) $x381) $x373)))
 (let (($x385 (= $x388 true)))
 (let (($x366 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x360 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x350 (= $x360 $x366)))
 (let (($x225 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x346 (=> $x225 $x350)))
 (let (($x356 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x337 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x361 (= $x337 $x356)))
 (let (($x326 (=> $x225 $x361)))
 (let (($x353 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x363 $x353)))
 (let (($x336 (=> $x225 $x325)))
 (let (($x364 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x334 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x334 $x364)))
 (let (($x370 (=> $x225 $x100)))
 (let (($x358 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x323 (=> $x225 $x358)))
 (let (($x70 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x355 (= $x225 $x70)))
 (let (($x249 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x351 (=> $x249 $x106)))
 (let (($x347 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x327 (= $x249 $x347)))
 (let (($x389 (and (and (and (and (and (and $x327 $x351) $x355) $x323) $x370) $x336) $x326)))
 (let (($x375 (and $x389 $x346)))
 (let (($x7 (= $x375 true)))
 (let (($x354 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x332 (= $x225 $x354)))
 (let (($x345 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x329 (= $x249 $x345)))
 (let (($x333 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x262 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x317 (= $x262 $x333)))
 (let (($x200 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x266 (=> $x200 $x106)))
 (let (($x306 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x322 (= $x200 $x306)))
 (let (($x330 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x51 (and (and (and (and (and (and $x330 $x322) $x266) $x317) $x329) $x351) $x332)))
 (let (($x352 (= $x51 true)))
 (let (($x294 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x293 (= $x314 $x294)))
 (let (($x15 (=> $x262 $x293)))
 (let (($x307 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x301 (= $x258 $x307)))
 (let (($x265 (=> $x262 $x301)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x286 (=> $x262 $x280)))
 (let (($x305 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x300 (= $x283 $x305)))
 (let (($x309 (=> $x262 $x300)))
 (let (($x94 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x275 (=> $x262 $x94)))
 (let (($x263 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x290 (= $x262 $x263)))
 (let (($x259 (and (and (= $x200 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x266) $x290)))
 (let (($x291 (and (and (and (and (and $x259 $x275) $x309) $x286) $x265) $x15)))
 (let (($x298 (= $x291 true)))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x276 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x251 (concat ?x222 (concat ?x234 ?x218))))
 (let (($x224 (= (_ bv0 32) ?x251)))
 (let ((?x220 (ite $x224 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x220 (_ bv1 32))))
 (let (($x223 (= $x225 $x281)))
 (let (($x226 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x230 (=> $x226 $x223)))
 (let (($x271 (= ?x220 (_ bv0 32))))
 (let (($x221 (= $x249 $x271)))
 (let (($x229 (=> $x226 $x221)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x219 (concat ?x206 (concat ?x239 ?x205))))
 (let (($x207 (= (_ bv0 32) ?x219)))
 (let ((?x246 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x246 (_ bv1 32))))
 (let (($x261 (= $x262 $x284)))
 (let (($x208 (=> $x226 $x261)))
 (let (($x253 (= ?x246 (_ bv0 32))))
 (let (($x254 (= $x200 $x253)))
 (let (($x269 (=> $x226 $x254)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x184)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x194)))
 (let (($x282 (= input.spec-%var-t-0.2.0 ?x268)))
 (let (($x270 (=> $x226 $x282)))
 (let (($x312 (= $x226 $x210)))
 (let (($x124 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x193 (=> $x124 $x106)))
 (let (($x236 (= $x124 $x227)))
 (let (($x277 (and (and (and (and (and (and $x236 $x193) $x312) $x270) $x269) $x208) $x229)))
 (let (($x296 (and $x277 $x230)))
 (let (($x279 (= $x296 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x178 (concat ?x143 (concat ?x152 (concat ?x115 ?x65)))))
 (let (($x235 (= ?x178 input.dst.llvm-%t)))
 (let (($x183 (= $x235 true)))
 (let (($x87 (= $x183 true)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x58 (concat ?x29 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x39 (bvadd ?x17 (_ bv3 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem ?x39) (concat ?x40 ?x58))))
 (let (($x6 (= (bvand ?x81 (_ bv4294967280 32)) ?x81)))
 (let (($x164 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x177 (and $x164 $x6)))
 (let (($x150 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x162 (and true $x150)))
 (let (($x163 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv4 32))) (bvult ?x17 (bvsub ?x17 (_ bv4 32))))))
 (let (($x214 (and (and (and $x163 $x162) $x164) $x177)))
 (let (($x182 (= true $x214)))
 (let (($x63 (= (_ bv0 32) ?x81)))
 (let (($x149 (not $x63)))
 (let (($x88 (=> $x149 $x182)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x237 (concat ?x181 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x36 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x36 (_ bv3 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem ?x23) (concat ?x273 ?x237))))
 (let (($x250 (= (bvand ?x195 (_ bv4294967280 32)) ?x195)))
 (let (($x157 (= (bvand ?x36 (_ bv4294967292 32)) ?x36)))
 (let (($x231 (and $x157 $x250)))
 (let (($x191 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x36 (bvsub ?x36 (_ bv8 32))) (bvult ?x36 (bvsub ?x36 (_ bv8 32))))))
 (let (($x198 (and (and (and $x191 $x162) $x157) $x231)))
 (let (($x252 (= true $x198)))
 (let (($x228 (=> $x63 $x252)))
 (let (($x83 (and $x228 $x88)))
 (let (($x232 (= true $x83)))
 (let (($x244 (or $x63 $x149)))
 (let (($x42 (not $x33)))
 (let (($x187 (and $x42 $x244)))
 (let (($x77 (=> $x187 $x232)))
 (let (($x192 (=> $x42 $x182)))
 (let (($x189 (= input.dst.llvm-%t ?x178)))
 (let (($x109 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x145 (and $x109 $x189)))
 (let ((?x131 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x132 (= (_ bv0 32) ?x131)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x139 $x137)))
 (let (($x179 (and $x140 $x132)))
 (let (($x129 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (and $x129 $x179)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x119 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x111)))))))
 (let (($x147 (and (and (and $x119 true) $x122) $x145)))
 (let (($x168 (and $x147 $x192)))
 (let (($x243 (and $x168 $x77)))
 (let (($x85 (= $x243 true)))
 (let (($x107 (= $x85 true)))
 (let (($x105 (= $x107 true)))
 (let (($x130 (= $x33 true)))
 (let (($x53 (= $x130 true)))
 (let (($x99 (= $x53 true)))
 (let (($x213 (= $x109 true)))
 (let (($x118 (= $x213 true)))
 (let (($x116 (= $x118 true)))
 (let (($x95 (and $x116 $x99)))
 (let (($x311 (and $x95 $x105)))
 (let (($x248 (and $x311 $x87)))
 (let (($x289 (and $x248 $x279)))
 (let (($x321 (and $x289 $x298)))
 (let (($x367 (and $x321 $x352)))
 (let (($x25 (and $x367 $x7)))
 (let (($x465 (and $x25 $x385)))
 (let (($x432 (and $x124 $x465)))
 (let (($x108 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x379 (and $x108 $x432)))
 (let (($x378 (and $x106 $x379)))
 (let (($x414 (and $x106 $x378)))
 (let (($x68 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x79 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x68)))))))
 (let (($x47 (and $x42 $x63)))
 (let (($x86 (=> (and $x47 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x89 $x68)))))))
 (let (($x57 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x66 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x57)))))))
 (let (($x38 (=> (and $x42 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x57)))))))
 (let (($x54 (and $x38 $x86)))
 (let (($x410 (and $x54 $x414)))
 (let (($x174 (=> $x410 $x55)))
 (not $x174))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1866X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x20 (concat ?x398 (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv8 32))))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x467 (concat ?x401 (concat ?x396 ?x20))))
 (let (($x112 (= ?x467 ?x467)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x292 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x292 (_ bv1 32))))
 (let (($x14 (=> $x210 $x112)))
 (let ((?x440 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x448 (concat ?x440 (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv4 32))))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1866X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x395 (concat ?x405 (concat ?x403 ?x448))))
 (let (($x402 (= ?x395 ?x395)))
 (let (($x466 (=> $x210 $x402)))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1866X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv2 32))) ?x435)))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1866X (_ bv3 32))) ?x392)))
 (let (($x444 (= ?x451 ?x451)))
 (let (($x447 (=> $x210 $x444)))
 (let (($x421 (= $x210 $x210)))
 (let (($x227 (= ?x292 (_ bv0 32))))
 (let (($x463 (= $x227 $x227)))
 (let (($x387 (= input.dst.llvm-%t input.dst.llvm-%t)))
 (let (($x106 (= false false)))
 (let (($x426 (=> $x227 $x106)))
 (let (($x34 (and (and (and (and (and (and $x426 $x387) $x463) $x421) $x447) $x466) $x14)))
 (let (($x462 (= true true)))
 (let (($x52 (and $x462 $x34)))
 (let (($x55 (= $x52 true)))
 (let (($x456 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x314 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x373 (= $x314 $x456)))
 (let (($x258 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x381 (=> $x258 $x106)))
 (let (($x380 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x457 (= $x258 $x380)))
 (let (($x449 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x369 (= $x315 $x449)))
 (let (($x283 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x384 (=> $x283 $x106)))
 (let (($x377 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x365 (= $x283 $x377)))
 (let (($x458 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x388 (and (and (and (and (and (and $x458 $x365) $x384) $x369) $x457) $x381) $x373)))
 (let (($x385 (= $x388 true)))
 (let (($x366 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x360 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x350 (= $x360 $x366)))
 (let (($x225 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x346 (=> $x225 $x350)))
 (let (($x356 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x337 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x361 (= $x337 $x356)))
 (let (($x326 (=> $x225 $x361)))
 (let (($x353 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x363 $x353)))
 (let (($x336 (=> $x225 $x325)))
 (let (($x364 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x334 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x334 $x364)))
 (let (($x370 (=> $x225 $x100)))
 (let (($x358 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x323 (=> $x225 $x358)))
 (let (($x70 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x355 (= $x225 $x70)))
 (let (($x249 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x351 (=> $x249 $x106)))
 (let (($x347 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x327 (= $x249 $x347)))
 (let (($x389 (and (and (and (and (and (and $x327 $x351) $x355) $x323) $x370) $x336) $x326)))
 (let (($x375 (and $x389 $x346)))
 (let (($x7 (= $x375 true)))
 (let (($x354 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x332 (= $x225 $x354)))
 (let (($x345 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x329 (= $x249 $x345)))
 (let (($x333 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x262 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x317 (= $x262 $x333)))
 (let (($x200 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x266 (=> $x200 $x106)))
 (let (($x306 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x322 (= $x200 $x306)))
 (let (($x330 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x51 (and (and (and (and (and (and $x330 $x322) $x266) $x317) $x329) $x351) $x332)))
 (let (($x352 (= $x51 true)))
 (let (($x294 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x293 (= $x314 $x294)))
 (let (($x15 (=> $x262 $x293)))
 (let (($x307 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x301 (= $x258 $x307)))
 (let (($x265 (=> $x262 $x301)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x286 (=> $x262 $x280)))
 (let (($x305 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x300 (= $x283 $x305)))
 (let (($x309 (=> $x262 $x300)))
 (let (($x94 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x275 (=> $x262 $x94)))
 (let (($x263 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x290 (= $x262 $x263)))
 (let (($x259 (and (and (= $x200 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x266) $x290)))
 (let (($x291 (and (and (and (and (and $x259 $x275) $x309) $x286) $x265) $x15)))
 (let (($x298 (= $x291 true)))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x276 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x251 (concat ?x222 (concat ?x234 ?x218))))
 (let (($x224 (= (_ bv0 32) ?x251)))
 (let ((?x220 (ite $x224 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x220 (_ bv1 32))))
 (let (($x223 (= $x225 $x281)))
 (let (($x226 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x230 (=> $x226 $x223)))
 (let (($x271 (= ?x220 (_ bv0 32))))
 (let (($x221 (= $x249 $x271)))
 (let (($x229 (=> $x226 $x221)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x219 (concat ?x206 (concat ?x239 ?x205))))
 (let (($x207 (= (_ bv0 32) ?x219)))
 (let ((?x246 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x246 (_ bv1 32))))
 (let (($x261 (= $x262 $x284)))
 (let (($x208 (=> $x226 $x261)))
 (let (($x253 (= ?x246 (_ bv0 32))))
 (let (($x254 (= $x200 $x253)))
 (let (($x269 (=> $x226 $x254)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x184)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x194)))
 (let (($x282 (= input.spec-%var-t-0.2.0 ?x268)))
 (let (($x270 (=> $x226 $x282)))
 (let (($x312 (= $x226 $x210)))
 (let (($x124 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x193 (=> $x124 $x106)))
 (let (($x236 (= $x124 $x227)))
 (let (($x277 (and (and (and (and (and (and $x236 $x193) $x312) $x270) $x269) $x208) $x229)))
 (let (($x296 (and $x277 $x230)))
 (let (($x279 (= $x296 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x178 (concat ?x143 (concat ?x152 (concat ?x115 ?x65)))))
 (let (($x235 (= ?x178 input.dst.llvm-%t)))
 (let (($x183 (= $x235 true)))
 (let (($x87 (= $x183 true)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x58 (concat ?x29 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x39 (bvadd ?x17 (_ bv3 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem ?x39) (concat ?x40 ?x58))))
 (let (($x6 (= (bvand ?x81 (_ bv4294967280 32)) ?x81)))
 (let (($x164 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x177 (and $x164 $x6)))
 (let (($x150 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x162 (and true $x150)))
 (let (($x163 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv4 32))) (bvult ?x17 (bvsub ?x17 (_ bv4 32))))))
 (let (($x214 (and (and (and $x163 $x162) $x164) $x177)))
 (let (($x182 (= true $x214)))
 (let (($x63 (= (_ bv0 32) ?x81)))
 (let (($x149 (not $x63)))
 (let (($x88 (=> $x149 $x182)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x237 (concat ?x181 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x36 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x36 (_ bv3 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem ?x23) (concat ?x273 ?x237))))
 (let (($x250 (= (bvand ?x195 (_ bv4294967280 32)) ?x195)))
 (let (($x157 (= (bvand ?x36 (_ bv4294967292 32)) ?x36)))
 (let (($x231 (and $x157 $x250)))
 (let (($x191 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x36 (bvsub ?x36 (_ bv8 32))) (bvult ?x36 (bvsub ?x36 (_ bv8 32))))))
 (let (($x198 (and (and (and $x191 $x162) $x157) $x231)))
 (let (($x252 (= true $x198)))
 (let (($x228 (=> $x63 $x252)))
 (let (($x83 (and $x228 $x88)))
 (let (($x232 (= true $x83)))
 (let (($x244 (or $x63 $x149)))
 (let (($x42 (not $x33)))
 (let (($x187 (and $x42 $x244)))
 (let (($x77 (=> $x187 $x232)))
 (let (($x192 (=> $x42 $x182)))
 (let (($x189 (= input.dst.llvm-%t ?x178)))
 (let (($x109 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x145 (and $x109 $x189)))
 (let ((?x131 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x132 (= (_ bv0 32) ?x131)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x139 $x137)))
 (let (($x179 (and $x140 $x132)))
 (let (($x129 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (and $x129 $x179)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x119 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x111)))))))
 (let (($x147 (and (and (and $x119 true) $x122) $x145)))
 (let (($x168 (and $x147 $x192)))
 (let (($x243 (and $x168 $x77)))
 (let (($x85 (= $x243 true)))
 (let (($x107 (= $x85 true)))
 (let (($x105 (= $x107 true)))
 (let (($x130 (= $x33 true)))
 (let (($x53 (= $x130 true)))
 (let (($x99 (= $x53 true)))
 (let (($x213 (= $x109 true)))
 (let (($x118 (= $x213 true)))
 (let (($x116 (= $x118 true)))
 (let (($x95 (and $x116 $x99)))
 (let (($x311 (and $x95 $x105)))
 (let (($x248 (and $x311 $x87)))
 (let (($x289 (and $x248 $x279)))
 (let (($x321 (and $x289 $x298)))
 (let (($x367 (and $x321 $x352)))
 (let (($x25 (and $x367 $x7)))
 (let (($x465 (and $x25 $x385)))
 (let (($x432 (and $x124 $x465)))
 (let (($x108 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x379 (and $x108 $x432)))
 (let (($x378 (and $x106 $x379)))
 (let (($x414 (and $x106 $x378)))
 (let (($x68 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x79 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x68)))))))
 (let (($x47 (and $x42 $x63)))
 (let (($x86 (=> (and $x47 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x89 $x68)))))))
 (let (($x57 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x66 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x57)))))))
 (let (($x38 (=> (and $x42 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x57)))))))
 (let (($x54 (and $x38 $x86)))
 (let (($x410 (and $x54 $x414)))
 (let (($x174 (=> $x410 $x55)))
 (not $x174))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x29 (concat ?x5 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x74 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x45) (concat ?x8 ?x29))))
 (let (($x78 (= (_ bv0 32) ?x47)))
 (let (($x352 (not $x78)))
 (let (($x367 (or $x78 $x352)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x42 (not $x33)))
 (let (($x328 (and $x42 $x367)))
 (let (($x347 (or $x33 $x328)))
 (let (($x327 (= $x347 true)))
 (let (($x371 (= $x327 true)))
 (let (($x331 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x205 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x343 (= $x205 $x331)))
 (let (($x108 (= false false)))
 (let (($x203 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x322 (=> $x203 $x108)))
 (let (($x340 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x306 (= $x203 $x340)))
 (let (($x321 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x199 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x320 (= $x199 $x321)))
 (let (($x194 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x298 (=> $x194 $x108)))
 (let (($x15 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x291 (= $x194 $x15)))
 (let (($x294 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x329 (and (and (and (and (and (and $x294 $x291) $x298) $x320) $x306) $x322) $x343)))
 (let (($x339 (= $x329 true)))
 (let (($x315 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x318 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x35 (= $x318 $x315)))
 (let (($x235 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x280 (=> $x235 $x35)))
 (let (($x305 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x283 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x300 (= $x283 $x305)))
 (let (($x309 (=> $x235 $x300)))
 (let (($x94 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x304 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x275 (= $x304 $x94)))
 (let (($x310 (=> $x235 $x275)))
 (let (($x290 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x308 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x259 (= $x308 $x290)))
 (let (($x257 (=> $x235 $x259)))
 (let (($x267 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x299 (=> $x235 $x267)))
 (let (($x296 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x279 (= $x235 $x296)))
 (let (($x75 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x255 (=> $x75 $x108)))
 (let (($x223 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x230 (= $x75 $x223)))
 (let (($x307 (and (and (and (and (and (and $x230 $x255) $x279) $x299) $x257) $x310) $x309)))
 (let (($x301 (and $x307 $x280)))
 (let (($x265 (= $x301 true)))
 (let (($x218 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x274 (= $x235 $x218)))
 (let (($x245 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x276 (= $x75 $x245)))
 (let (($x222 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x273 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x242 (= $x273 $x222)))
 (let (($x182 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x182 $x108)))
 (let (($x256 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x285 (= $x182 $x256)))
 (let (($x313 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x229 (and (and (and (and (and (and $x313 $x285) $x278) $x242) $x276) $x255) $x274)))
 (let (($x277 (= $x229 true)))
 (let (($x201 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x219 (= $x205 $x201)))
 (let (($x207 (=> $x273 $x219)))
 (let (($x212 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x233 (= $x203 $x212)))
 (let (($x202 (=> $x273 $x233)))
 (let (($x200 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x217 (= $x199 $x200)))
 (let (($x204 (=> $x273 $x217)))
 (let (($x282 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x270 (= $x194 $x282)))
 (let (($x303 (=> $x273 $x270)))
 (let (($x211 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x272 (=> $x273 $x211)))
 (let (($x240 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x196 (= $x273 $x240)))
 (let (($x253 (and (and (= $x182 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x278) $x196)))
 (let (($x284 (and (and (and (and (and $x253 $x272) $x303) $x204) $x202) $x207)))
 (let (($x261 (= $x284 true)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x198 (concat ?x231 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x77 (concat ?x232 (concat ?x228 ?x198))))
 (let (($x243 (= (_ bv0 32) ?x77)))
 (let ((?x85 (ite $x243 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x85 (_ bv1 32))))
 (let (($x87 (= $x235 $x183)))
 (let (($x163 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x248 (=> $x163 $x87)))
 (let (($x107 (= ?x85 (_ bv0 32))))
 (let (($x105 (= $x75 $x107)))
 (let (($x311 (=> $x163 $x105)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x187 (concat ?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x197 (concat ?x191 (concat ?x165 ?x187))))
 (let (($x156 (= (_ bv0 32) ?x197)))
 (let ((?x157 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x157 (_ bv1 32))))
 (let (($x181 (= $x273 $x172)))
 (let (($x171 (=> $x163 $x181)))
 (let (($x67 (= ?x157 (_ bv0 32))))
 (let (($x215 (= $x182 $x67)))
 (let (($x209 (=> $x163 $x215)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x162)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x153)))
 (let (($x6 (= input.spec-%var-t-0.2.0 ?x173)))
 (let (($x177 (=> $x163 $x6)))
 (let ((?x188 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x148 (bvuge ?x188 (_ bv1 32))))
 (let (($x151 (= $x163 $x148)))
 (let (($x147 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x159 (=> $x147 $x108)))
 (let (($x158 (= ?x188 (_ bv0 32))))
 (let (($x155 (= $x147 $x158)))
 (let (($x106 (and (and (and (and (and (and $x155 $x159) $x151) $x177) $x209) $x171) $x311)))
 (let (($x193 (and $x106 $x248)))
 (let (($x297 (= $x193 true)))
 (let ((?x179 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x115 (concat ?x160 (concat ?x166 ?x179)))))
 (let (($x133 (= ?x65 input.dst.llvm-%t)))
 (let (($x134 (= $x133 true)))
 (let (($x178 (= $x134 true)))
 (let ((?x144 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x144)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x123)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x176 $x127)))
 (let (($x129 (and $x119 $x142)))
 (let (($x116 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x116 $x129)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x80)))))))
 (let (($x170 (and $x121 $x139)))
 (let (($x137 (= $x170 true)))
 (let (($x140 (= $x137 true)))
 (let (($x131 (= $x140 true)))
 (let (($x189 (and $x131 $x178)))
 (let (($x226 (and $x189 $x297)))
 (let (($x208 (and $x226 $x261)))
 (let (($x225 (and $x208 $x277)))
 (let (($x335 (and $x225 $x265)))
 (let (($x351 (and $x335 $x339)))
 (let (($x109 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x344 (and $x109 $x351)))
 (let (($x354 (and $x108 $x344)))
 (let (($x332 (and $x108 $x354)))
 (let ((?x76 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x71 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x76 (_ bv3 32)))))
 (let (($x93 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x71)))))))
 (let (($x36 (and $x42 $x78)))
 (let (($x84 (=> (and $x36 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x92 $x71)))))))
 (let (($x11 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x69 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x11)))))))
 (let (($x21 (=> (and $x42 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x43 $x11)))))))
 (let (($x23 (and $x21 $x84)))
 (let (($x51 (and $x23 $x332)))
 (let (($x70 (=> $x51 $x371)))
 (not $x70)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x29 (concat ?x5 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x74 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x45) (concat ?x8 ?x29))))
 (let (($x78 (= (_ bv0 32) ?x47)))
 (let (($x352 (not $x78)))
 (let (($x367 (or $x78 $x352)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x42 (not $x33)))
 (let (($x328 (and $x42 $x367)))
 (let (($x347 (or $x33 $x328)))
 (let (($x327 (= $x347 true)))
 (let (($x371 (= $x327 true)))
 (let (($x331 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x205 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x343 (= $x205 $x331)))
 (let (($x108 (= false false)))
 (let (($x203 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x322 (=> $x203 $x108)))
 (let (($x340 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x306 (= $x203 $x340)))
 (let (($x321 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x199 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x320 (= $x199 $x321)))
 (let (($x194 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x298 (=> $x194 $x108)))
 (let (($x15 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x291 (= $x194 $x15)))
 (let (($x294 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x329 (and (and (and (and (and (and $x294 $x291) $x298) $x320) $x306) $x322) $x343)))
 (let (($x339 (= $x329 true)))
 (let (($x315 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x318 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x35 (= $x318 $x315)))
 (let (($x235 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x280 (=> $x235 $x35)))
 (let (($x305 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x283 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x300 (= $x283 $x305)))
 (let (($x309 (=> $x235 $x300)))
 (let (($x94 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x304 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x275 (= $x304 $x94)))
 (let (($x310 (=> $x235 $x275)))
 (let (($x290 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x308 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x259 (= $x308 $x290)))
 (let (($x257 (=> $x235 $x259)))
 (let (($x267 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x299 (=> $x235 $x267)))
 (let (($x296 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x279 (= $x235 $x296)))
 (let (($x75 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x255 (=> $x75 $x108)))
 (let (($x223 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x230 (= $x75 $x223)))
 (let (($x307 (and (and (and (and (and (and $x230 $x255) $x279) $x299) $x257) $x310) $x309)))
 (let (($x301 (and $x307 $x280)))
 (let (($x265 (= $x301 true)))
 (let (($x218 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x274 (= $x235 $x218)))
 (let (($x245 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x276 (= $x75 $x245)))
 (let (($x222 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x273 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x242 (= $x273 $x222)))
 (let (($x182 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x182 $x108)))
 (let (($x256 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x285 (= $x182 $x256)))
 (let (($x313 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x229 (and (and (and (and (and (and $x313 $x285) $x278) $x242) $x276) $x255) $x274)))
 (let (($x277 (= $x229 true)))
 (let (($x201 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x219 (= $x205 $x201)))
 (let (($x207 (=> $x273 $x219)))
 (let (($x212 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x233 (= $x203 $x212)))
 (let (($x202 (=> $x273 $x233)))
 (let (($x200 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x217 (= $x199 $x200)))
 (let (($x204 (=> $x273 $x217)))
 (let (($x282 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x270 (= $x194 $x282)))
 (let (($x303 (=> $x273 $x270)))
 (let (($x211 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x272 (=> $x273 $x211)))
 (let (($x240 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x196 (= $x273 $x240)))
 (let (($x253 (and (and (= $x182 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x278) $x196)))
 (let (($x284 (and (and (and (and (and $x253 $x272) $x303) $x204) $x202) $x207)))
 (let (($x261 (= $x284 true)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x198 (concat ?x231 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x77 (concat ?x232 (concat ?x228 ?x198))))
 (let (($x243 (= (_ bv0 32) ?x77)))
 (let ((?x85 (ite $x243 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x85 (_ bv1 32))))
 (let (($x87 (= $x235 $x183)))
 (let (($x163 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x248 (=> $x163 $x87)))
 (let (($x107 (= ?x85 (_ bv0 32))))
 (let (($x105 (= $x75 $x107)))
 (let (($x311 (=> $x163 $x105)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x187 (concat ?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x197 (concat ?x191 (concat ?x165 ?x187))))
 (let (($x156 (= (_ bv0 32) ?x197)))
 (let ((?x157 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x157 (_ bv1 32))))
 (let (($x181 (= $x273 $x172)))
 (let (($x171 (=> $x163 $x181)))
 (let (($x67 (= ?x157 (_ bv0 32))))
 (let (($x215 (= $x182 $x67)))
 (let (($x209 (=> $x163 $x215)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x162)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x153)))
 (let (($x6 (= input.spec-%var-t-0.2.0 ?x173)))
 (let (($x177 (=> $x163 $x6)))
 (let ((?x188 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x148 (bvuge ?x188 (_ bv1 32))))
 (let (($x151 (= $x163 $x148)))
 (let (($x147 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x159 (=> $x147 $x108)))
 (let (($x158 (= ?x188 (_ bv0 32))))
 (let (($x155 (= $x147 $x158)))
 (let (($x106 (and (and (and (and (and (and $x155 $x159) $x151) $x177) $x209) $x171) $x311)))
 (let (($x193 (and $x106 $x248)))
 (let (($x297 (= $x193 true)))
 (let ((?x179 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x115 (concat ?x160 (concat ?x166 ?x179)))))
 (let (($x133 (= ?x65 input.dst.llvm-%t)))
 (let (($x134 (= $x133 true)))
 (let (($x178 (= $x134 true)))
 (let ((?x144 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x144)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x123)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x176 $x127)))
 (let (($x129 (and $x119 $x142)))
 (let (($x116 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x116 $x129)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x80)))))))
 (let (($x170 (and $x121 $x139)))
 (let (($x137 (= $x170 true)))
 (let (($x140 (= $x137 true)))
 (let (($x131 (= $x140 true)))
 (let (($x189 (and $x131 $x178)))
 (let (($x226 (and $x189 $x297)))
 (let (($x208 (and $x226 $x261)))
 (let (($x225 (and $x208 $x277)))
 (let (($x335 (and $x225 $x265)))
 (let (($x351 (and $x335 $x339)))
 (let (($x109 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x344 (and $x109 $x351)))
 (let (($x354 (and $x108 $x344)))
 (let (($x332 (and $x108 $x354)))
 (let ((?x76 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x71 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x76 (_ bv3 32)))))
 (let (($x93 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x71)))))))
 (let (($x36 (and $x42 $x78)))
 (let (($x84 (=> (and $x36 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x92 $x71)))))))
 (let (($x11 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x69 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x11)))))))
 (let (($x21 (=> (and $x42 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x43 $x11)))))))
 (let (($x23 (and $x21 $x84)))
 (let (($x51 (and $x23 $x332)))
 (let (($x70 (=> $x51 $x371)))
 (not $x70)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1965X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x46 (concat ?x13 (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv8 32))))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x90 (concat ?x443 (concat ?x114 ?x46))))
 (let (($x431 (= ?x90 ?x90)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x284 (concat ?x207 (concat ?x205 ?x202))))
 (let (($x261 (= (_ bv0 32) ?x284)))
 (let ((?x208 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x208 (_ bv1 32))))
 (let (($x434 (=> $x256 $x431)))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x424 (concat ?x419 (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv4 32))))))
 (let ((?x422 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x423 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x429 (concat ?x423 (concat ?x422 ?x424))))
 (let (($x442 (= ?x429 ?x429)))
 (let (($x91 (=> $x256 $x442)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1965X))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv2 32))) ?x18)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv3 32))) ?x185)))
 (let (($x117 (= ?x97 ?x97)))
 (let (($x461 (=> $x256 $x117)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x5 (concat ?x40 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x12 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x48 (bvadd ?x12 (_ bv3 32))))
 (let ((?x36 (concat (select input.dst.llvm-mem ?x48) (concat ?x81 ?x5))))
 (let ((?x440 (bvadd ?x36 (_ bv8 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv1 32))) (select input.dst.llvm-mem ?x440))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv2 32))) ?x395))))
 (let (($x413 (= (_ bv0 32) ?x401)))
 (let ((?x396 (ite $x413 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x396 (_ bv1 32))))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x284 (_ bv8 32))))))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv2 32))) ?x451)))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv3 32))) ?x412)))
 (let (($x397 (= (_ bv0 32) ?x405)))
 (let ((?x403 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x467 (bvuge ?x403 (_ bv1 32))))
 (let (($x14 (= $x467 $x112)))
 (let (($x34 (=> $x256 $x14)))
 (let (($x109 (= false false)))
 (let (($x407 (= ?x403 (_ bv0 32))))
 (let (($x20 (and $x256 $x407)))
 (let (($x455 (=> $x20 $x109)))
 (let (($x454 (= ?x396 (_ bv0 32))))
 (let (($x398 (= $x407 $x454)))
 (let (($x404 (=> $x256 $x398)))
 (let (($x82 (= (_ bv0 32) ?x36)))
 (let ((?x408 (ite $x82 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (bvuge ?x408 (_ bv1 32))))
 (let (($x416 (= $x256 $x433)))
 (let (($x287 (= ?x208 (_ bv0 32))))
 (let (($x428 (=> $x287 $x109)))
 (let (($x30 (and (and (and (and (= ?x284 ?x36) (= $x287 (= ?x408 (_ bv0 32)))) $x428) $x416) $x404)))
 (let (($x113 (and (and (and (and (and $x30 $x455) $x34) $x461) $x91) $x434)))
 (let (($x421 (= true true)))
 (let (($x73 (and $x421 $x113)))
 (let (($x59 (= $x73 true)))
 (let (($x373 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x388 (= $x291 $x373)))
 (let (($x335 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x456 (=> $x335 $x109)))
 (let (($x381 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x382 (= $x335 $x381)))
 (let (($x380 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x457 (= $x315 $x380)))
 (let (($x305 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x376 (=> $x305 $x109)))
 (let (($x369 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x391 (= $x305 $x369)))
 (let (($x393 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x414 (and (and (and (and (and (and $x393 $x391) $x376) $x457) $x382) $x456) $x388)))
 (let (($x410 (= $x414 true)))
 (let (($x366 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x360 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x350 (= $x360 $x366)))
 (let (($x286 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x346 (=> $x286 $x350)))
 (let (($x361 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x362 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x326 (= $x362 $x361)))
 (let (($x389 (=> $x286 $x326)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x325 $x336)))
 (let (($x368 (=> $x286 $x372)))
 (let (($x374 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x100 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x100 $x374)))
 (let (($x353 (=> $x286 $x363)))
 (let (($x334 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x349 (=> $x286 $x334)))
 (let (($x358 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x323 (= $x286 $x358)))
 (let (($x222 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x367 (=> $x222 $x109)))
 (let (($x104 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x359 (= $x222 $x104)))
 (let (($x390 (and (and (and (and (and (and $x359 $x367) $x323) $x349) $x353) $x368) $x389)))
 (let (($x377 (and $x390 $x346)))
 (let (($x365 (= $x377 true)))
 (let (($x328 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x347 (= $x286 $x328)))
 (let (($x51 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x352 (= $x222 $x51)))
 (let (($x344 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x169 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x354 (= $x169 $x344)))
 (let (($x206 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x304 (=> $x206 $x109)))
 (let (($x339 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x351 (= $x206 $x339)))
 (let (($x343 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x62 (and (and (and (and (and (and $x343 $x351) $x304) $x354) $x352) $x367) $x347)))
 (let (($x213 (= $x62 true)))
 (let (($x333 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x298 (= $x291 $x333)))
 (let (($x317 (=> $x169 $x298)))
 (let (($x294 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x293 (= $x335 $x294)))
 (let (($x15 (=> $x169 $x293)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x301 (=> $x169 $x280)))
 (let (($x309 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x307 (= $x305 $x309)))
 (let (($x318 (=> $x169 $x307)))
 (let (($x264 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x283 (=> $x169 $x264)))
 (let (($x94 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x275 (= $x169 $x94)))
 (let (($x320 (and (and (= $x206 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x304) $x275)))
 (let (($x341 (and (and (and (and (and $x320 $x283) $x318) $x301) $x15) $x317)))
 (let (($x322 (= $x341 true)))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x274 (concat ?x255 ?x276))))
 (let (($x277 (= (_ bv0 32) ?x229)))
 (let ((?x225 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x225 (_ bv1 32))))
 (let (($x279 (= $x286 $x296)))
 (let (($x95 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x319 (=> $x95 $x279)))
 (let (($x281 (= ?x225 (_ bv0 32))))
 (let (($x223 (= $x222 $x281)))
 (let (($x230 (=> $x95 $x223)))
 (let (($x285 (= $x169 $x256)))
 (let (($x251 (=> $x95 $x285)))
 (let (($x313 (= $x206 $x287)))
 (let (($x249 (=> $x95 $x313)))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x282)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x269)))
 (let (($x204 (= input.spec-%var-t-0.2.0 ?x217)))
 (let (($x295 (=> $x95 $x204)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x253 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x253 (_ bv1 32))))
 (let (($x254 (= $x95 $x272)))
 (let (($x196 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x211 (=> $x196 $x109)))
 (let (($x216 (= ?x253 (_ bv0 32))))
 (let (($x260 (= $x196 $x216)))
 (let (($x266 (and (and (and (and (and (and $x260 $x211) $x254) $x295) $x249) $x251) $x230)))
 (let (($x308 (and $x266 $x319)))
 (let (($x263 (= $x308 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x24 (concat ?x164 (concat ?x148 (concat ?x159 ?x155)))))
 (let (($x241 (= ?x24 input.dst.llvm-%t)))
 (let (($x278 (= $x241 true)))
 (let (($x246 (= $x278 true)))
 (let (($x168 (= (bvand ?x36 (_ bv4294967280 32)) ?x36)))
 (let (($x149 (= (bvand ?x12 (_ bv4294967292 32)) ?x12)))
 (let (($x187 (and $x149 $x168)))
 (let (($x180 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x191 (and true $x180)))
 (let (($x177 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x12 (bvsub ?x12 (_ bv4 32))) (bvult ?x12 (bvsub ?x12 (_ bv4 32))))))
 (let (($x156 (and (and (and $x177 $x191) $x149) $x187)))
 (let (($x157 (= true $x156)))
 (let (($x123 (not $x82)))
 (let (($x235 (=> $x123 $x157)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x252 (concat ?x232 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x68 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x68 (_ bv3 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem ?x31) (concat ?x250 ?x252))))
 (let (($x77 (= (bvand ?x198 (_ bv4294967280 32)) ?x198)))
 (let (($x75 (= (bvand ?x68 (_ bv4294967292 32)) ?x68)))
 (let (($x243 (and $x75 $x77)))
 (let (($x236 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x68 (bvsub ?x68 (_ bv8 32))) (bvult ?x68 (bvsub ?x68 (_ bv8 32))))))
 (let (($x105 (and (and (and $x236 $x191) $x75) $x243)))
 (let (($x311 (= true $x105)))
 (let (($x106 (=> $x82 $x311)))
 (let (($x183 (and $x106 $x235)))
 (let (($x87 (= true $x183)))
 (let (($x209 (or $x82 $x123)))
 (let (($x42 (not $x33)))
 (let (($x227 (and $x42 $x209)))
 (let (($x248 (=> $x227 $x87)))
 (let (($x67 (=> $x42 $x157)))
 (let (($x154 (= input.dst.llvm-%t ?x24)))
 (let (($x121 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x167 (and $x121 $x154)))
 (let ((?x189 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x189)))
 (let ((?x133 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x133)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (and $x65 $x134)))
 (let (($x147 (and $x178 $x145)))
 (let (($x137 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (and $x137 $x147)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x152 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x143)))))))
 (let (($x161 (and (and (and $x152 true) $x188) $x167)))
 (let (($x215 (and $x161 $x67)))
 (let (($x193 (and $x215 $x248)))
 (let (($x297 (= $x193 true)))
 (let (($x226 (= $x297 true)))
 (let (($x210 (= $x226 true)))
 (let (($x127 (and $x42 $x123)))
 (let (($x119 (= $x127 true)))
 (let (($x144 (= $x119 true)))
 (let (($x142 (= $x144 true)))
 (let (($x118 (= $x121 true)))
 (let (($x116 (= $x118 true)))
 (let (($x176 (= $x116 true)))
 (let (($x129 (and $x176 $x142)))
 (let (($x312 (and $x129 $x210)))
 (let (($x240 (and $x312 $x246)))
 (let (($x290 (and $x240 $x263)))
 (let (($x345 (and $x290 $x322)))
 (let (($x132 (and $x345 $x213)))
 (let (($x386 (and $x132 $x365)))
 (let (($x462 (and $x386 $x410)))
 (let (($x135 (and $x95 $x169)))
 (let (($x426 (and $x135 $x462)))
 (let (($x111 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x387 (and $x111 $x426)))
 (let (($x417 (and $x109 $x387)))
 (let (($x463 (and $x109 $x417)))
 (let (($x86 (bvugt ?x68 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x98 (=> (bvule ?x68 (bvsub (bvadd ?x68 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x86)))))))
 (let (($x76 (and $x42 $x82)))
 (let (($x110 (=> (and $x76 (bvule ?x68 (bvsub (bvadd ?x68 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x86)))))))
 (let (($x38 (bvugt ?x12 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x22 (=> (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x38)))))))
 (let (($x39 (=> (and $x42 (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x66 $x38)))))))
 (let (($x19 (and $x39 $x110)))
 (let (($x415 (and $x19 $x463)))
 (let (($x101 (=> $x415 $x59)))
 (not $x101)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1965X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x46 (concat ?x13 (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv8 32))))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x90 (concat ?x443 (concat ?x114 ?x46))))
 (let (($x431 (= ?x90 ?x90)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x284 (concat ?x207 (concat ?x205 ?x202))))
 (let (($x261 (= (_ bv0 32) ?x284)))
 (let ((?x208 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x208 (_ bv1 32))))
 (let (($x434 (=> $x256 $x431)))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x424 (concat ?x419 (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv4 32))))))
 (let ((?x422 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x423 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1965X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x429 (concat ?x423 (concat ?x422 ?x424))))
 (let (($x442 (= ?x429 ?x429)))
 (let (($x91 (=> $x256 $x442)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1965X))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv2 32))) ?x18)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1965X (_ bv3 32))) ?x185)))
 (let (($x117 (= ?x97 ?x97)))
 (let (($x461 (=> $x256 $x117)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x5 (concat ?x40 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x12 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x48 (bvadd ?x12 (_ bv3 32))))
 (let ((?x36 (concat (select input.dst.llvm-mem ?x48) (concat ?x81 ?x5))))
 (let ((?x440 (bvadd ?x36 (_ bv8 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv1 32))) (select input.dst.llvm-mem ?x440))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x440 (_ bv2 32))) ?x395))))
 (let (($x413 (= (_ bv0 32) ?x401)))
 (let ((?x396 (ite $x413 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x396 (_ bv1 32))))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x284 (_ bv8 32))))))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv2 32))) ?x451)))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv3 32))) ?x412)))
 (let (($x397 (= (_ bv0 32) ?x405)))
 (let ((?x403 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x467 (bvuge ?x403 (_ bv1 32))))
 (let (($x14 (= $x467 $x112)))
 (let (($x34 (=> $x256 $x14)))
 (let (($x109 (= false false)))
 (let (($x407 (= ?x403 (_ bv0 32))))
 (let (($x20 (and $x256 $x407)))
 (let (($x455 (=> $x20 $x109)))
 (let (($x454 (= ?x396 (_ bv0 32))))
 (let (($x398 (= $x407 $x454)))
 (let (($x404 (=> $x256 $x398)))
 (let (($x82 (= (_ bv0 32) ?x36)))
 (let ((?x408 (ite $x82 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (bvuge ?x408 (_ bv1 32))))
 (let (($x416 (= $x256 $x433)))
 (let (($x287 (= ?x208 (_ bv0 32))))
 (let (($x428 (=> $x287 $x109)))
 (let (($x30 (and (and (and (and (= ?x284 ?x36) (= $x287 (= ?x408 (_ bv0 32)))) $x428) $x416) $x404)))
 (let (($x113 (and (and (and (and (and $x30 $x455) $x34) $x461) $x91) $x434)))
 (let (($x421 (= true true)))
 (let (($x73 (and $x421 $x113)))
 (let (($x59 (= $x73 true)))
 (let (($x373 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x388 (= $x291 $x373)))
 (let (($x335 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x456 (=> $x335 $x109)))
 (let (($x381 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x382 (= $x335 $x381)))
 (let (($x380 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x457 (= $x315 $x380)))
 (let (($x305 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x376 (=> $x305 $x109)))
 (let (($x369 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x391 (= $x305 $x369)))
 (let (($x393 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x414 (and (and (and (and (and (and $x393 $x391) $x376) $x457) $x382) $x456) $x388)))
 (let (($x410 (= $x414 true)))
 (let (($x366 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x360 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x350 (= $x360 $x366)))
 (let (($x286 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x346 (=> $x286 $x350)))
 (let (($x361 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x362 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x326 (= $x362 $x361)))
 (let (($x389 (=> $x286 $x326)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x325 $x336)))
 (let (($x368 (=> $x286 $x372)))
 (let (($x374 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x100 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x100 $x374)))
 (let (($x353 (=> $x286 $x363)))
 (let (($x334 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x349 (=> $x286 $x334)))
 (let (($x358 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x323 (= $x286 $x358)))
 (let (($x222 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x367 (=> $x222 $x109)))
 (let (($x104 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x359 (= $x222 $x104)))
 (let (($x390 (and (and (and (and (and (and $x359 $x367) $x323) $x349) $x353) $x368) $x389)))
 (let (($x377 (and $x390 $x346)))
 (let (($x365 (= $x377 true)))
 (let (($x328 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x347 (= $x286 $x328)))
 (let (($x51 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x352 (= $x222 $x51)))
 (let (($x344 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x169 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x354 (= $x169 $x344)))
 (let (($x206 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x304 (=> $x206 $x109)))
 (let (($x339 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x351 (= $x206 $x339)))
 (let (($x343 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x62 (and (and (and (and (and (and $x343 $x351) $x304) $x354) $x352) $x367) $x347)))
 (let (($x213 (= $x62 true)))
 (let (($x333 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x298 (= $x291 $x333)))
 (let (($x317 (=> $x169 $x298)))
 (let (($x294 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x293 (= $x335 $x294)))
 (let (($x15 (=> $x169 $x293)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x301 (=> $x169 $x280)))
 (let (($x309 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x307 (= $x305 $x309)))
 (let (($x318 (=> $x169 $x307)))
 (let (($x264 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x283 (=> $x169 $x264)))
 (let (($x94 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x275 (= $x169 $x94)))
 (let (($x320 (and (and (= $x206 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x304) $x275)))
 (let (($x341 (and (and (and (and (and $x320 $x283) $x318) $x301) $x15) $x317)))
 (let (($x322 (= $x341 true)))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x274 (concat ?x255 ?x276))))
 (let (($x277 (= (_ bv0 32) ?x229)))
 (let ((?x225 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x225 (_ bv1 32))))
 (let (($x279 (= $x286 $x296)))
 (let (($x95 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x319 (=> $x95 $x279)))
 (let (($x281 (= ?x225 (_ bv0 32))))
 (let (($x223 (= $x222 $x281)))
 (let (($x230 (=> $x95 $x223)))
 (let (($x285 (= $x169 $x256)))
 (let (($x251 (=> $x95 $x285)))
 (let (($x313 (= $x206 $x287)))
 (let (($x249 (=> $x95 $x313)))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x282)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x269)))
 (let (($x204 (= input.spec-%var-t-0.2.0 ?x217)))
 (let (($x295 (=> $x95 $x204)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x253 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x253 (_ bv1 32))))
 (let (($x254 (= $x95 $x272)))
 (let (($x196 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x211 (=> $x196 $x109)))
 (let (($x216 (= ?x253 (_ bv0 32))))
 (let (($x260 (= $x196 $x216)))
 (let (($x266 (and (and (and (and (and (and $x260 $x211) $x254) $x295) $x249) $x251) $x230)))
 (let (($x308 (and $x266 $x319)))
 (let (($x263 (= $x308 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x24 (concat ?x164 (concat ?x148 (concat ?x159 ?x155)))))
 (let (($x241 (= ?x24 input.dst.llvm-%t)))
 (let (($x278 (= $x241 true)))
 (let (($x246 (= $x278 true)))
 (let (($x168 (= (bvand ?x36 (_ bv4294967280 32)) ?x36)))
 (let (($x149 (= (bvand ?x12 (_ bv4294967292 32)) ?x12)))
 (let (($x187 (and $x149 $x168)))
 (let (($x180 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x191 (and true $x180)))
 (let (($x177 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x12 (bvsub ?x12 (_ bv4 32))) (bvult ?x12 (bvsub ?x12 (_ bv4 32))))))
 (let (($x156 (and (and (and $x177 $x191) $x149) $x187)))
 (let (($x157 (= true $x156)))
 (let (($x123 (not $x82)))
 (let (($x235 (=> $x123 $x157)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x252 (concat ?x232 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x68 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x68 (_ bv3 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem ?x31) (concat ?x250 ?x252))))
 (let (($x77 (= (bvand ?x198 (_ bv4294967280 32)) ?x198)))
 (let (($x75 (= (bvand ?x68 (_ bv4294967292 32)) ?x68)))
 (let (($x243 (and $x75 $x77)))
 (let (($x236 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x68 (bvsub ?x68 (_ bv8 32))) (bvult ?x68 (bvsub ?x68 (_ bv8 32))))))
 (let (($x105 (and (and (and $x236 $x191) $x75) $x243)))
 (let (($x311 (= true $x105)))
 (let (($x106 (=> $x82 $x311)))
 (let (($x183 (and $x106 $x235)))
 (let (($x87 (= true $x183)))
 (let (($x209 (or $x82 $x123)))
 (let (($x42 (not $x33)))
 (let (($x227 (and $x42 $x209)))
 (let (($x248 (=> $x227 $x87)))
 (let (($x67 (=> $x42 $x157)))
 (let (($x154 (= input.dst.llvm-%t ?x24)))
 (let (($x121 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x167 (and $x121 $x154)))
 (let ((?x189 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x189)))
 (let ((?x133 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x133)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (and $x65 $x134)))
 (let (($x147 (and $x178 $x145)))
 (let (($x137 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (and $x137 $x147)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x152 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x143)))))))
 (let (($x161 (and (and (and $x152 true) $x188) $x167)))
 (let (($x215 (and $x161 $x67)))
 (let (($x193 (and $x215 $x248)))
 (let (($x297 (= $x193 true)))
 (let (($x226 (= $x297 true)))
 (let (($x210 (= $x226 true)))
 (let (($x127 (and $x42 $x123)))
 (let (($x119 (= $x127 true)))
 (let (($x144 (= $x119 true)))
 (let (($x142 (= $x144 true)))
 (let (($x118 (= $x121 true)))
 (let (($x116 (= $x118 true)))
 (let (($x176 (= $x116 true)))
 (let (($x129 (and $x176 $x142)))
 (let (($x312 (and $x129 $x210)))
 (let (($x240 (and $x312 $x246)))
 (let (($x290 (and $x240 $x263)))
 (let (($x345 (and $x290 $x322)))
 (let (($x132 (and $x345 $x213)))
 (let (($x386 (and $x132 $x365)))
 (let (($x462 (and $x386 $x410)))
 (let (($x135 (and $x95 $x169)))
 (let (($x426 (and $x135 $x462)))
 (let (($x111 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x387 (and $x111 $x426)))
 (let (($x417 (and $x109 $x387)))
 (let (($x463 (and $x109 $x417)))
 (let (($x86 (bvugt ?x68 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x98 (=> (bvule ?x68 (bvsub (bvadd ?x68 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x86)))))))
 (let (($x76 (and $x42 $x82)))
 (let (($x110 (=> (and $x76 (bvule ?x68 (bvsub (bvadd ?x68 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x86)))))))
 (let (($x38 (bvugt ?x12 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x22 (=> (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x38)))))))
 (let (($x39 (=> (and $x42 (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x66 $x38)))))))
 (let (($x19 (and $x39 $x110)))
 (let (($x415 (and $x19 $x463)))
 (let (($x101 (=> $x415 $x59)))
 (not $x101)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1997X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x430 (concat ?x125 (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv8 32))))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x13 (concat ?x437 (concat ?x443 ?x430))))
 (let (($x10 (= ?x13 ?x13)))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x284 (concat ?x201 (concat ?x233 ?x205))))
 (let (($x261 (= (_ bv0 32) ?x284)))
 (let ((?x208 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x208 (_ bv1 32))))
 (let (($x46 (=> $x299 $x10)))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x464 (concat ?x427 (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv4 32))))))
 (let ((?x411 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x409 (concat ?x419 (concat ?x411 ?x464))))
 (let (($x424 (= ?x409 ?x409)))
 (let (($x418 (=> $x299 $x424)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1997X))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv2 32))) ?x26)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv3 32))) ?x174)))
 (let (($x185 (= ?x18 ?x18)))
 (let (($x97 (=> $x299 $x185)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x195 (concat ?x232 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x71 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x71 (_ bv3 32))))
 (let ((?x77 (concat (select input.dst.llvm-mem ?x54) (concat ?x231 ?x195))))
 (let ((?x402 (bvadd ?x77 (_ bv8 32))))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv1 32))) (select input.dst.llvm-mem ?x402))))
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv2 32))) ?x468))))
 (let (($x398 (= (_ bv0 32) ?x454)))
 (let ((?x404 (ite $x398 (_ bv0 32) (_ bv1 32))))
 (let (($x467 (bvuge ?x404 (_ bv1 32))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x284 (_ bv8 32))))))
 (let ((?x453 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv2 32))) ?x416)))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv3 32))) ?x453)))
 (let (($x435 (= (_ bv0 32) ?x447)))
 (let ((?x392 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x392 (_ bv1 32))))
 (let (($x112 (= $x186 $x467)))
 (let (($x14 (=> $x299 $x112)))
 (let (($x30 (= ?x404 (_ bv0 32))))
 (let (($x452 (= ?x392 (_ bv0 32))))
 (let (($x20 (= $x452 $x30)))
 (let (($x455 (=> $x299 $x20)))
 (let (($x397 (= (_ bv0 32) ?x77)))
 (let ((?x403 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x403 (_ bv1 32))))
 (let (($x438 (= $x299 $x394)))
 (let (($x407 (= ?x403 (_ bv0 32))))
 (let (($x287 (= ?x208 (_ bv0 32))))
 (let (($x440 (= $x287 $x407)))
 (let (($x405 (= ?x284 ?x77)))
 (let (($x111 (= false false)))
 (let (($x451 (and $x299 $x452)))
 (let (($x412 (=> $x451 $x111)))
 (let (($x425 (=> $x287 $x111)))
 (let (($x73 (and (and (and (and (and (and $x425 $x412) $x405) $x440) $x438) $x455) $x14)))
 (let (($x128 (and (and (and $x73 $x97) $x418) $x46)))
 (let (($x459 (= true true)))
 (let (($x16 (and $x459 $x128)))
 (let (($x17 (= $x16 true)))
 (let (($x456 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x293 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x378 (= $x293 $x456)))
 (let (($x340 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x379 (=> $x340 $x111)))
 (let (($x381 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x382 (= $x340 $x381)))
 (let (($x457 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x330 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x432 (= $x330 $x457)))
 (let (($x305 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x380 (=> $x305 $x111)))
 (let (($x376 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x465 (= $x305 $x376)))
 (let (($x391 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x426 (and (and (and (and (and (and $x391 $x465) $x380) $x432) $x382) $x379) $x378)))
 (let (($x387 (= $x426 true)))
 (let (($x389 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x326 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x390 (= $x326 $x389)))
 (let (($x223 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x360 (=> $x223 $x390)))
 (let (($x362 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x458 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x356 (= $x458 $x362)))
 (let (($x361 (=> $x223 $x356)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x383 $x325)))
 (let (($x372 (=> $x223 $x336)))
 (let (($x374 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x100 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x100 $x374)))
 (let (($x353 (=> $x223 $x363)))
 (let (($x349 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x25 (=> $x223 $x349)))
 (let (($x7 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x357 (= $x223 $x7)))
 (let (($x316 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x355 (=> $x316 $x111)))
 (let (($x358 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x323 (= $x316 $x358)))
 (let (($x386 (and (and (and (and (and (and $x323 $x355) $x357) $x25) $x353) $x372) $x361)))
 (let (($x384 (and $x386 $x360)))
 (let (($x393 (= $x384 true)))
 (let (($x367 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x61 (= $x223 $x367)))
 (let (($x51 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x352 (= $x316 $x51)))
 (let (($x354 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x70 (= $x136 $x354)))
 (let (($x206 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x275 (=> $x206 $x111)))
 (let (($x371 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x344 (= $x206 $x371)))
 (let (($x351 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x338 (and (and (and (and (and (and $x351 $x344) $x275) $x70) $x352) $x355) $x61)))
 (let (($x104 (= $x338 true)))
 (let (($x15 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x306 (= $x293 $x15)))
 (let (($x291 (=> $x136 $x306)))
 (let (($x335 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x314 (= $x340 $x335)))
 (let (($x294 (=> $x136 $x314)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x330 $x315)))
 (let (($x280 (=> $x136 $x35)))
 (let (($x309 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x307 (= $x305 $x309)))
 (let (($x318 (=> $x136 $x307)))
 (let (($x283 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x348 (=> $x136 $x283)))
 (let (($x320 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x310 (= $x136 $x320)))
 (let (($x298 (and (and (= $x206 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x275) $x310)))
 (let (($x331 (and (and (and (and (and $x298 $x348) $x318) $x280) $x294) $x291)))
 (let (($x343 (= $x331 true)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x276 (concat ?x220 (concat ?x255 ?x274))))
 (let (($x221 (= (_ bv0 32) ?x276)))
 (let ((?x229 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (bvuge ?x229 (_ bv1 32))))
 (let (($x266 (= $x223 $x230)))
 (let (($x135 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x286 (=> $x135 $x266)))
 (let (($x277 (= ?x229 (_ bv0 32))))
 (let (($x225 (= $x316 $x277)))
 (let (($x281 (=> $x135 $x225)))
 (let (($x256 (= $x136 $x299)))
 (let (($x285 (=> $x135 $x256)))
 (let (($x313 (= $x206 $x287)))
 (let (($x249 (=> $x135 $x313)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x282)))
 (let (($x295 (= input.spec-%var-t-0.2.0 ?x204)))
 (let (($x267 (=> $x135 $x295)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x211 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x211 (_ bv1 32))))
 (let (($x199 (= $x135 $x302)))
 (let (($x109 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x254 (=> $x109 $x111)))
 (let (($x289 (= ?x211 (_ bv0 32))))
 (let (($x272 (= $x109 $x289)))
 (let (($x290 (and (and (and (and (and (and $x272 $x254) $x199) $x267) $x249) $x285) $x281)))
 (let (($x259 (and $x290 $x286)))
 (let (($x257 (= $x259 true)))
 (let ((?x164 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x24 (concat ?x155 (concat ?x148 ?x164)))))
 (let (($x196 (= ?x154 input.dst.llvm-%t)))
 (let (($x253 (= $x196 true)))
 (let (($x216 (= $x253 true)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x40 (concat ?x8 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x44 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x37 (bvadd ?x44 (_ bv3 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem ?x37) (concat ?x47 ?x40))))
 (let (($x187 (= (bvand ?x76 (_ bv4294967280 32)) ?x76)))
 (let (($x244 (= (bvand ?x44 (_ bv4294967292 32)) ?x44)))
 (let (($x156 (and $x244 $x187)))
 (let (($x238 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x165 (and true $x238)))
 (let (($x182 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x44 (bvsub ?x44 (_ bv4 32))) (bvult ?x44 (bvsub ?x44 (_ bv4 32))))))
 (let (($x215 (and (and (and $x182 $x165) $x244) $x156)))
 (let (($x209 (= true $x215)))
 (let (($x89 (= (_ bv0 32) ?x76)))
 (let (($x273 (not $x89)))
 (let (($x193 (=> $x273 $x209)))
 (let (($x105 (= (bvand ?x77 (_ bv4294967280 32)) ?x77)))
 (let (($x228 (= (bvand ?x71 (_ bv4294967292 32)) ?x71)))
 (let (($x311 (and $x228 $x105)))
 (let (($x107 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x71 (bvsub ?x71 (_ bv8 32))) (bvult ?x71 (bvsub ?x71 (_ bv8 32))))))
 (let (($x183 (and (and (and $x107 $x165) $x228) $x311)))
 (let (($x87 (= true $x183)))
 (let (($x248 (=> $x89 $x87)))
 (let (($x297 (and $x248 $x193)))
 (let (($x226 (= true $x297)))
 (let (($x181 (or $x89 $x273)))
 (let (($x42 (not $x33)))
 (let (($x171 (and $x42 $x181)))
 (let (($x210 (=> $x171 $x226)))
 (let (($x227 (=> $x42 $x209)))
 (let (($x167 (= input.dst.llvm-%t ?x154)))
 (let (($x176 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x161 (and $x176 $x167)))
 (let ((?x145 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x147 (= (_ bv0 32) ?x145)))
 (let ((?x134 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x178 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x134)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (and $x133 $x178)))
 (let (($x188 (and $x189 $x147)))
 (let (($x120 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (and $x120 $x188)))
 (let (($x166 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x65 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x166)))))))
 (let (($x173 (and (and (and $x65 true) $x150) $x161)))
 (let (($x172 (and $x173 $x227)))
 (let (($x312 (and $x172 $x210)))
 (let (($x241 (= $x312 true)))
 (let (($x278 (= $x241 true)))
 (let (($x246 (= $x278 true)))
 (let (($x68 (and $x42 $x89)))
 (let (($x144 (= $x68 true)))
 (let (($x142 (= $x144 true)))
 (let (($x129 (= $x142 true)))
 (let (($x123 (= $x176 true)))
 (let (($x127 (= $x123 true)))
 (let (($x119 (= $x127 true)))
 (let (($x140 (and $x119 $x129)))
 (let (($x240 (and $x140 $x246)))
 (let (($x260 (and $x240 $x216)))
 (let (($x258 (and $x260 $x257)))
 (let (($x329 (and $x258 $x343)))
 (let (($x359 (and $x329 $x104)))
 (let (($x449 (and $x359 $x393)))
 (let (($x417 (and $x449 $x387)))
 (let (($x121 (and $x135 $x136)))
 (let (($x463 (and $x121 $x417)))
 (let (($x80 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x415 (and $x80 $x463)))
 (let (($x421 (and $x111 $x415)))
 (let (($x406 (and $x111 $x421)))
 (let (($x84 (bvugt ?x71 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x53 (=> (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x84)))))))
 (let (($x96 (=> (and $x68 (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x93 $x84)))))))
 (let (($x21 (bvugt ?x44 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x37)))
 (let (($x60 (=> (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x21)))))))
 (let (($x45 (=> (and $x42 (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x69 $x21)))))))
 (let (($x31 (and $x45 $x96)))
 (let (($x408 (and $x31 $x406)))
 (let (($x139 (=> $x408 $x17)))
 (not $x139))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1997X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x430 (concat ?x125 (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv8 32))))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x13 (concat ?x437 (concat ?x443 ?x430))))
 (let (($x10 (= ?x13 ?x13)))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x284 (concat ?x201 (concat ?x233 ?x205))))
 (let (($x261 (= (_ bv0 32) ?x284)))
 (let ((?x208 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x208 (_ bv1 32))))
 (let (($x46 (=> $x299 $x10)))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x464 (concat ?x427 (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv4 32))))))
 (let ((?x411 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1997X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x409 (concat ?x419 (concat ?x411 ?x464))))
 (let (($x424 (= ?x409 ?x409)))
 (let (($x418 (=> $x299 $x424)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1997X))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv2 32))) ?x26)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1997X (_ bv3 32))) ?x174)))
 (let (($x185 (= ?x18 ?x18)))
 (let (($x97 (=> $x299 $x185)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x195 (concat ?x232 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x71 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x71 (_ bv3 32))))
 (let ((?x77 (concat (select input.dst.llvm-mem ?x54) (concat ?x231 ?x195))))
 (let ((?x402 (bvadd ?x77 (_ bv8 32))))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv1 32))) (select input.dst.llvm-mem ?x402))))
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv2 32))) ?x468))))
 (let (($x398 (= (_ bv0 32) ?x454)))
 (let ((?x404 (ite $x398 (_ bv0 32) (_ bv1 32))))
 (let (($x467 (bvuge ?x404 (_ bv1 32))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x284 (_ bv8 32))))))
 (let ((?x453 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv2 32))) ?x416)))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x284 (_ bv8 32)) (_ bv3 32))) ?x453)))
 (let (($x435 (= (_ bv0 32) ?x447)))
 (let ((?x392 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x392 (_ bv1 32))))
 (let (($x112 (= $x186 $x467)))
 (let (($x14 (=> $x299 $x112)))
 (let (($x30 (= ?x404 (_ bv0 32))))
 (let (($x452 (= ?x392 (_ bv0 32))))
 (let (($x20 (= $x452 $x30)))
 (let (($x455 (=> $x299 $x20)))
 (let (($x397 (= (_ bv0 32) ?x77)))
 (let ((?x403 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x403 (_ bv1 32))))
 (let (($x438 (= $x299 $x394)))
 (let (($x407 (= ?x403 (_ bv0 32))))
 (let (($x287 (= ?x208 (_ bv0 32))))
 (let (($x440 (= $x287 $x407)))
 (let (($x405 (= ?x284 ?x77)))
 (let (($x111 (= false false)))
 (let (($x451 (and $x299 $x452)))
 (let (($x412 (=> $x451 $x111)))
 (let (($x425 (=> $x287 $x111)))
 (let (($x73 (and (and (and (and (and (and $x425 $x412) $x405) $x440) $x438) $x455) $x14)))
 (let (($x128 (and (and (and $x73 $x97) $x418) $x46)))
 (let (($x459 (= true true)))
 (let (($x16 (and $x459 $x128)))
 (let (($x17 (= $x16 true)))
 (let (($x456 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x293 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x378 (= $x293 $x456)))
 (let (($x340 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x379 (=> $x340 $x111)))
 (let (($x381 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x382 (= $x340 $x381)))
 (let (($x457 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x330 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x432 (= $x330 $x457)))
 (let (($x305 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x380 (=> $x305 $x111)))
 (let (($x376 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x465 (= $x305 $x376)))
 (let (($x391 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x426 (and (and (and (and (and (and $x391 $x465) $x380) $x432) $x382) $x379) $x378)))
 (let (($x387 (= $x426 true)))
 (let (($x389 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x326 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x390 (= $x326 $x389)))
 (let (($x223 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x360 (=> $x223 $x390)))
 (let (($x362 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x458 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x356 (= $x458 $x362)))
 (let (($x361 (=> $x223 $x356)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x383 $x325)))
 (let (($x372 (=> $x223 $x336)))
 (let (($x374 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x100 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x100 $x374)))
 (let (($x353 (=> $x223 $x363)))
 (let (($x349 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x25 (=> $x223 $x349)))
 (let (($x7 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x357 (= $x223 $x7)))
 (let (($x316 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x355 (=> $x316 $x111)))
 (let (($x358 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x323 (= $x316 $x358)))
 (let (($x386 (and (and (and (and (and (and $x323 $x355) $x357) $x25) $x353) $x372) $x361)))
 (let (($x384 (and $x386 $x360)))
 (let (($x393 (= $x384 true)))
 (let (($x367 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x61 (= $x223 $x367)))
 (let (($x51 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x352 (= $x316 $x51)))
 (let (($x354 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x70 (= $x136 $x354)))
 (let (($x206 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x275 (=> $x206 $x111)))
 (let (($x371 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x344 (= $x206 $x371)))
 (let (($x351 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x338 (and (and (and (and (and (and $x351 $x344) $x275) $x70) $x352) $x355) $x61)))
 (let (($x104 (= $x338 true)))
 (let (($x15 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x306 (= $x293 $x15)))
 (let (($x291 (=> $x136 $x306)))
 (let (($x335 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x314 (= $x340 $x335)))
 (let (($x294 (=> $x136 $x314)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x330 $x315)))
 (let (($x280 (=> $x136 $x35)))
 (let (($x309 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x307 (= $x305 $x309)))
 (let (($x318 (=> $x136 $x307)))
 (let (($x283 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x348 (=> $x136 $x283)))
 (let (($x320 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x310 (= $x136 $x320)))
 (let (($x298 (and (and (= $x206 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x275) $x310)))
 (let (($x331 (and (and (and (and (and $x298 $x348) $x318) $x280) $x294) $x291)))
 (let (($x343 (= $x331 true)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x276 (concat ?x220 (concat ?x255 ?x274))))
 (let (($x221 (= (_ bv0 32) ?x276)))
 (let ((?x229 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (bvuge ?x229 (_ bv1 32))))
 (let (($x266 (= $x223 $x230)))
 (let (($x135 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x286 (=> $x135 $x266)))
 (let (($x277 (= ?x229 (_ bv0 32))))
 (let (($x225 (= $x316 $x277)))
 (let (($x281 (=> $x135 $x225)))
 (let (($x256 (= $x136 $x299)))
 (let (($x285 (=> $x135 $x256)))
 (let (($x313 (= $x206 $x287)))
 (let (($x249 (=> $x135 $x313)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x194)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x282)))
 (let (($x295 (= input.spec-%var-t-0.2.0 ?x204)))
 (let (($x267 (=> $x135 $x295)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x211 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x211 (_ bv1 32))))
 (let (($x199 (= $x135 $x302)))
 (let (($x109 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x254 (=> $x109 $x111)))
 (let (($x289 (= ?x211 (_ bv0 32))))
 (let (($x272 (= $x109 $x289)))
 (let (($x290 (and (and (and (and (and (and $x272 $x254) $x199) $x267) $x249) $x285) $x281)))
 (let (($x259 (and $x290 $x286)))
 (let (($x257 (= $x259 true)))
 (let ((?x164 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x24 (concat ?x155 (concat ?x148 ?x164)))))
 (let (($x196 (= ?x154 input.dst.llvm-%t)))
 (let (($x253 (= $x196 true)))
 (let (($x216 (= $x253 true)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x40 (concat ?x8 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x44 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x37 (bvadd ?x44 (_ bv3 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem ?x37) (concat ?x47 ?x40))))
 (let (($x187 (= (bvand ?x76 (_ bv4294967280 32)) ?x76)))
 (let (($x244 (= (bvand ?x44 (_ bv4294967292 32)) ?x44)))
 (let (($x156 (and $x244 $x187)))
 (let (($x238 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x165 (and true $x238)))
 (let (($x182 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x44 (bvsub ?x44 (_ bv4 32))) (bvult ?x44 (bvsub ?x44 (_ bv4 32))))))
 (let (($x215 (and (and (and $x182 $x165) $x244) $x156)))
 (let (($x209 (= true $x215)))
 (let (($x89 (= (_ bv0 32) ?x76)))
 (let (($x273 (not $x89)))
 (let (($x193 (=> $x273 $x209)))
 (let (($x105 (= (bvand ?x77 (_ bv4294967280 32)) ?x77)))
 (let (($x228 (= (bvand ?x71 (_ bv4294967292 32)) ?x71)))
 (let (($x311 (and $x228 $x105)))
 (let (($x107 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x71 (bvsub ?x71 (_ bv8 32))) (bvult ?x71 (bvsub ?x71 (_ bv8 32))))))
 (let (($x183 (and (and (and $x107 $x165) $x228) $x311)))
 (let (($x87 (= true $x183)))
 (let (($x248 (=> $x89 $x87)))
 (let (($x297 (and $x248 $x193)))
 (let (($x226 (= true $x297)))
 (let (($x181 (or $x89 $x273)))
 (let (($x42 (not $x33)))
 (let (($x171 (and $x42 $x181)))
 (let (($x210 (=> $x171 $x226)))
 (let (($x227 (=> $x42 $x209)))
 (let (($x167 (= input.dst.llvm-%t ?x154)))
 (let (($x176 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x161 (and $x176 $x167)))
 (let ((?x145 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x147 (= (_ bv0 32) ?x145)))
 (let ((?x134 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x178 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x134)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (and $x133 $x178)))
 (let (($x188 (and $x189 $x147)))
 (let (($x120 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (and $x120 $x188)))
 (let (($x166 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x65 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x166)))))))
 (let (($x173 (and (and (and $x65 true) $x150) $x161)))
 (let (($x172 (and $x173 $x227)))
 (let (($x312 (and $x172 $x210)))
 (let (($x241 (= $x312 true)))
 (let (($x278 (= $x241 true)))
 (let (($x246 (= $x278 true)))
 (let (($x68 (and $x42 $x89)))
 (let (($x144 (= $x68 true)))
 (let (($x142 (= $x144 true)))
 (let (($x129 (= $x142 true)))
 (let (($x123 (= $x176 true)))
 (let (($x127 (= $x123 true)))
 (let (($x119 (= $x127 true)))
 (let (($x140 (and $x119 $x129)))
 (let (($x240 (and $x140 $x246)))
 (let (($x260 (and $x240 $x216)))
 (let (($x258 (and $x260 $x257)))
 (let (($x329 (and $x258 $x343)))
 (let (($x359 (and $x329 $x104)))
 (let (($x449 (and $x359 $x393)))
 (let (($x417 (and $x449 $x387)))
 (let (($x121 (and $x135 $x136)))
 (let (($x463 (and $x121 $x417)))
 (let (($x80 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x415 (and $x80 $x463)))
 (let (($x421 (and $x111 $x415)))
 (let (($x406 (and $x111 $x421)))
 (let (($x84 (bvugt ?x71 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x53 (=> (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x84)))))))
 (let (($x96 (=> (and $x68 (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x93 $x84)))))))
 (let (($x21 (bvugt ?x44 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x37)))
 (let (($x60 (=> (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x21)))))))
 (let (($x45 (=> (and $x42 (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x69 $x21)))))))
 (let (($x31 (and $x45 $x96)))
 (let (($x408 (and $x31 $x406)))
 (let (($x139 (=> $x408 $x17)))
 (not $x139))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2029X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x174 (concat ?x26 (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv8 32))))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x420 (concat ?x117 (concat ?x185 ?x174))))
 (let (($x419 (= ?x420 ?x420)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x261 (concat ?x284 (concat ?x219 ?x207))))
 (let (($x208 (= (_ bv0 32) ?x261)))
 (let ((?x287 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x287 (_ bv1 32))))
 (let (($x423 (=> $x299 $x419)))
 (let ((?x186 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x467 (concat ?x186 (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv4 32))))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x55 (concat ?x141 (concat ?x14 ?x467))))
 (let (($x50 (= ?x55 ?x55)))
 (let (($x175 (=> $x299 $x50)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2029X))))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv2 32))) ?x448)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv3 32))) ?x468)))
 (let (($x404 (= ?x398 ?x398)))
 (let (($x30 (=> $x299 $x404)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x274 (concat ?x242 ?x271))))
 (let (($x276 (= (_ bv0 32) ?x234)))
 (let ((?x221 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (= ?x221 (_ bv0 32))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x261 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x261 (_ bv8 32))))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x261 (_ bv8 32)) (_ bv2 32))) ?x416)))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x261 (_ bv8 32)) (_ bv3 32))) ?x435)))
 (let (($x412 (= (_ bv0 32) ?x451)))
 (let ((?x445 (ite $x412 (_ bv0 32) (_ bv1 32))))
 (let (($x405 (= ?x445 (_ bv0 32))))
 (let (($x434 (= $x405 $x229)))
 (let (($x402 (=> $x299 $x434)))
 (let (($x290 (bvuge ?x221 (_ bv1 32))))
 (let (($x431 (bvuge ?x445 (_ bv1 32))))
 (let (($x394 (= $x431 $x290)))
 (let (($x438 (=> $x299 $x394)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x296 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (= ?x296 (_ bv0 32))))
 (let (($x313 (= ?x287 (_ bv0 32))))
 (let (($x440 (= $x313 $x302)))
 (let (($x269 (bvuge ?x296 (_ bv1 32))))
 (let (($x407 (= $x299 $x269)))
 (let (($x403 (= ?x261 input.dst.llvm-%t)))
 (let (($x80 (= false false)))
 (let (($x90 (and $x299 $x405)))
 (let (($x397 (=> $x90 $x80)))
 (let (($x439 (=> $x313 $x80)))
 (let (($x422 (and (and (and (and (and (and $x439 $x397) $x403) $x407) $x440) $x438) $x402)))
 (let (($x418 (and (and (and $x422 $x30) $x175) $x423)))
 (let (($x444 (= true true)))
 (let (($x101 (and $x444 $x418)))
 (let (($x429 (= $x101 true)))
 (let (($x462 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x456 (= $x294 $x462)))
 (let (($x301 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x379 (=> $x301 $x80)))
 (let (($x382 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x410 (= $x301 $x382)))
 (let (($x414 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x330 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x450 (= $x330 $x414)))
 (let (($x300 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x432 (=> $x300 $x80)))
 (let (($x388 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x457 (= $x300 $x388)))
 (let (($x373 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x415 (and (and (and (and (and (and $x373 $x457) $x432) $x450) $x410) $x379) $x456)))
 (let (($x421 (= $x415 true)))
 (let (($x386 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x361 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x326 (= $x361 $x386)))
 (let (($x281 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x389 (=> $x281 $x326)))
 (let (($x337 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x368 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x362 (= $x368 $x337)))
 (let (($x356 (=> $x281 $x362)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x383 $x325)))
 (let (($x372 (=> $x281 $x336)))
 (let (($x363 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x370 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x353 (= $x370 $x363)))
 (let (($x377 (=> $x281 $x353)))
 (let (($x346 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x364 (=> $x281 $x346)))
 (let (($x324 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x334 (= $x281 $x324)))
 (let (($x251 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x355 (=> $x251 $x80)))
 (let (($x357 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x350 (= $x251 $x357)))
 (let (($x369 (and (and (and (and (and (and $x350 $x355) $x334) $x364) $x377) $x372) $x356)))
 (let (($x391 (and $x369 $x389)))
 (let (($x385 (= $x391 true)))
 (let (($x132 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x367 (= $x281 $x132)))
 (let (($x352 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x213 (= $x251 $x352)))
 (let (($x62 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x116 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x332 (= $x116 $x62)))
 (let (($x203 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x298 (=> $x203 $x80)))
 (let (($x354 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x70 (= $x203 $x354)))
 (let (($x328 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x358 (and (and (and (and (and (and $x328 $x70) $x298) $x332) $x213) $x355) $x367)))
 (let (($x323 (= $x358 true)))
 (let (($x345 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x293 (= $x294 $x345)))
 (let (($x15 (=> $x116 $x293)))
 (let (($x265 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x335 (= $x301 $x265)))
 (let (($x314 (=> $x116 $x335)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x330 $x315)))
 (let (($x280 (=> $x116 $x35)))
 (let (($x307 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x318 (= $x300 $x307)))
 (let (($x341 (=> $x116 $x318)))
 (let (($x317 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x288 (=> $x116 $x317)))
 (let (($x342 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x264 (= $x116 $x342)))
 (let (($x291 (and (and (= $x203 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x298) $x264)))
 (let (($x351 (and (and (and (and (and $x291 $x288) $x341) $x280) $x314) $x15)))
 (let (($x327 (= $x351 true)))
 (let (($x223 (= $x281 $x290)))
 (let (($x121 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x230 (=> $x121 $x223)))
 (let (($x277 (= $x251 $x229)))
 (let (($x225 (=> $x121 $x277)))
 (let (($x256 (= $x116 $x299)))
 (let (($x285 (=> $x121 $x256)))
 (let (($x249 (= $x203 $x313)))
 (let (($x308 (=> $x121 $x249)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x303)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x282)))
 (let (($x319 (= input.spec-%var-t-0.2.0 ?x267)))
 (let (($x206 (=> $x121 $x319)))
 (let (($x217 (= $x121 $x269)))
 (let (($x254 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x279 (=> $x254 $x80)))
 (let (($x199 (= $x254 $x302)))
 (let (($x304 (and (and (and (and (and (and $x199 $x279) $x217) $x206) $x308) $x285) $x225)))
 (let (($x321 (and $x304 $x230)))
 (let (($x94 (= $x321 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x173 (concat ?x161 (concat ?x126 (concat ?x148 ?x155)))))
 (let (($x211 (= ?x173 input.dst.llvm-%t)))
 (let (($x289 (= $x211 true)))
 (let (($x272 (= $x289 true)))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x8 (concat ?x81 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x43 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x27 (bvadd ?x43 (_ bv3 32))))
 (let ((?x68 (concat (select input.dst.llvm-mem ?x27) (concat ?x36 ?x8))))
 (let (($x209 (= (bvand ?x68 (_ bv4294967280 32)) ?x68)))
 (let (($x156 (= (bvand ?x43 (_ bv4294967292 32)) ?x43)))
 (let (($x227 (and $x156 $x209)))
 (let (($x244 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x67 (and true $x244)))
 (let (($x238 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x43 (bvsub ?x43 (_ bv4 32))) (bvult ?x43 (bvsub ?x43 (_ bv4 32))))))
 (let (($x181 (and (and (and $x238 $x67) $x156) $x227)))
 (let (($x171 (= true $x181)))
 (let (($x92 (= (_ bv0 32) ?x68)))
 (let (($x237 (not $x92)))
 (let (($x241 (=> $x237 $x171)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x195 (concat ?x250 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x86 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x86 (_ bv3 32))))
 (let ((?x311 (concat (select input.dst.llvm-mem ?x23) (concat ?x77 ?x195))))
 (let (($x87 (= (bvand ?x311 (_ bv4294967280 32)) ?x311)))
 (let (($x231 (= (bvand ?x86 (_ bv4294967292 32)) ?x86)))
 (let (($x248 (and $x231 $x87)))
 (let (($x88 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x86 (bvsub ?x86 (_ bv8 32))) (bvult ?x86 (bvsub ?x86 (_ bv8 32))))))
 (let (($x226 (and (and (and $x88 $x67) $x231) $x248)))
 (let (($x210 (= true $x226)))
 (let (($x312 (=> $x92 $x210)))
 (let (($x278 (and $x312 $x241)))
 (let (($x246 (= true $x278)))
 (let (($x75 (or $x92 $x237)))
 (let (($x42 (not $x33)))
 (let (($x107 (and $x42 $x75)))
 (let (($x240 (=> $x107 $x246)))
 (let (($x85 (=> $x42 $x171)))
 (let (($x177 (= input.dst.llvm-%t ?x173)))
 (let (($x119 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x6 (and $x119 $x177)))
 (let ((?x150 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x150)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x188 (and $x189 $x147)))
 (let (($x151 (and $x188 $x162)))
 (let (($x166 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x24 (and $x166 $x151)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x65)))))))
 (let (($x182 (and (and (and $x178 true) $x24) $x6)))
 (let (($x236 (and $x182 $x85)))
 (let (($x196 (and $x236 $x240)))
 (let (($x253 (= $x196 true)))
 (let (($x216 (= $x253 true)))
 (let (($x260 (= $x216 true)))
 (let (($x140 (= $x33 true)))
 (let (($x115 (= $x140 true)))
 (let (($x143 (= $x115 true)))
 (let (($x144 (= $x119 true)))
 (let (($x142 (= $x144 true)))
 (let (($x129 (= $x142 true)))
 (let (($x137 (and $x129 $x143)))
 (let (($x109 (and $x137 $x260)))
 (let (($x111 (and $x109 $x272)))
 (let (($x275 (and $x111 $x94)))
 (let (($x371 (and $x275 $x327)))
 (let (($x366 (and $x371 $x323)))
 (let (($x376 (and $x366 $x385)))
 (let (($x406 (and $x376 $x421)))
 (let (($x176 (and $x121 $x116)))
 (let (($x408 (and $x176 $x406)))
 (let (($x138 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x459 (and $x138 $x408)))
 (let (($x425 (and $x80 $x459)))
 (let (($x102 (and $x80 $x425)))
 (let (($x110 (bvugt ?x86 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x95 (=> (bvule ?x86 (bvsub (bvadd ?x86 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x110)))))))
 (let (($x71 (and $x42 $x92)))
 (let (($x130 (=> (and $x71 (bvule ?x86 (bvsub (bvadd ?x86 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x98 $x110)))))))
 (let (($x39 (bvugt ?x43 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x27)))
 (let (($x58 (=> (bvule ?x43 (bvsub (bvadd ?x43 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x22 $x39)))))))
 (let (($x48 (=> (and $x42 (bvule ?x43 (bvsub (bvadd ?x43 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x22 $x39)))))))
 (let (($x54 (and $x48 $x130)))
 (let (($x399 (and $x54 $x102)))
 (let (($x114 (=> $x399 $x429)))
 (not $x114)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2029X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x174 (concat ?x26 (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv8 32))))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x420 (concat ?x117 (concat ?x185 ?x174))))
 (let (($x419 (= ?x420 ?x420)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x261 (concat ?x284 (concat ?x219 ?x207))))
 (let (($x208 (= (_ bv0 32) ?x261)))
 (let ((?x287 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x287 (_ bv1 32))))
 (let (($x423 (=> $x299 $x419)))
 (let ((?x186 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x467 (concat ?x186 (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv4 32))))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2029X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x55 (concat ?x141 (concat ?x14 ?x467))))
 (let (($x50 (= ?x55 ?x55)))
 (let (($x175 (=> $x299 $x50)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2029X))))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv2 32))) ?x448)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2029X (_ bv3 32))) ?x468)))
 (let (($x404 (= ?x398 ?x398)))
 (let (($x30 (=> $x299 $x404)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x274 (concat ?x242 ?x271))))
 (let (($x276 (= (_ bv0 32) ?x234)))
 (let ((?x221 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (= ?x221 (_ bv0 32))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x261 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x261 (_ bv8 32))))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x261 (_ bv8 32)) (_ bv2 32))) ?x416)))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x261 (_ bv8 32)) (_ bv3 32))) ?x435)))
 (let (($x412 (= (_ bv0 32) ?x451)))
 (let ((?x445 (ite $x412 (_ bv0 32) (_ bv1 32))))
 (let (($x405 (= ?x445 (_ bv0 32))))
 (let (($x434 (= $x405 $x229)))
 (let (($x402 (=> $x299 $x434)))
 (let (($x290 (bvuge ?x221 (_ bv1 32))))
 (let (($x431 (bvuge ?x445 (_ bv1 32))))
 (let (($x394 (= $x431 $x290)))
 (let (($x438 (=> $x299 $x394)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x296 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (= ?x296 (_ bv0 32))))
 (let (($x313 (= ?x287 (_ bv0 32))))
 (let (($x440 (= $x313 $x302)))
 (let (($x269 (bvuge ?x296 (_ bv1 32))))
 (let (($x407 (= $x299 $x269)))
 (let (($x403 (= ?x261 input.dst.llvm-%t)))
 (let (($x80 (= false false)))
 (let (($x90 (and $x299 $x405)))
 (let (($x397 (=> $x90 $x80)))
 (let (($x439 (=> $x313 $x80)))
 (let (($x422 (and (and (and (and (and (and $x439 $x397) $x403) $x407) $x440) $x438) $x402)))
 (let (($x418 (and (and (and $x422 $x30) $x175) $x423)))
 (let (($x444 (= true true)))
 (let (($x101 (and $x444 $x418)))
 (let (($x429 (= $x101 true)))
 (let (($x462 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x456 (= $x294 $x462)))
 (let (($x301 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x379 (=> $x301 $x80)))
 (let (($x382 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x410 (= $x301 $x382)))
 (let (($x414 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x330 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x450 (= $x330 $x414)))
 (let (($x300 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x432 (=> $x300 $x80)))
 (let (($x388 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x457 (= $x300 $x388)))
 (let (($x373 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x415 (and (and (and (and (and (and $x373 $x457) $x432) $x450) $x410) $x379) $x456)))
 (let (($x421 (= $x415 true)))
 (let (($x386 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x361 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x326 (= $x361 $x386)))
 (let (($x281 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x389 (=> $x281 $x326)))
 (let (($x337 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x368 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x362 (= $x368 $x337)))
 (let (($x356 (=> $x281 $x362)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x383 $x325)))
 (let (($x372 (=> $x281 $x336)))
 (let (($x363 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x370 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x353 (= $x370 $x363)))
 (let (($x377 (=> $x281 $x353)))
 (let (($x346 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x364 (=> $x281 $x346)))
 (let (($x324 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x334 (= $x281 $x324)))
 (let (($x251 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x355 (=> $x251 $x80)))
 (let (($x357 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x350 (= $x251 $x357)))
 (let (($x369 (and (and (and (and (and (and $x350 $x355) $x334) $x364) $x377) $x372) $x356)))
 (let (($x391 (and $x369 $x389)))
 (let (($x385 (= $x391 true)))
 (let (($x132 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x367 (= $x281 $x132)))
 (let (($x352 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x213 (= $x251 $x352)))
 (let (($x62 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x116 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x332 (= $x116 $x62)))
 (let (($x203 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x298 (=> $x203 $x80)))
 (let (($x354 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x70 (= $x203 $x354)))
 (let (($x328 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x358 (and (and (and (and (and (and $x328 $x70) $x298) $x332) $x213) $x355) $x367)))
 (let (($x323 (= $x358 true)))
 (let (($x345 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x293 (= $x294 $x345)))
 (let (($x15 (=> $x116 $x293)))
 (let (($x265 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x335 (= $x301 $x265)))
 (let (($x314 (=> $x116 $x335)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x330 $x315)))
 (let (($x280 (=> $x116 $x35)))
 (let (($x307 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x318 (= $x300 $x307)))
 (let (($x341 (=> $x116 $x318)))
 (let (($x317 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x288 (=> $x116 $x317)))
 (let (($x342 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x264 (= $x116 $x342)))
 (let (($x291 (and (and (= $x203 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x298) $x264)))
 (let (($x351 (and (and (and (and (and $x291 $x288) $x341) $x280) $x314) $x15)))
 (let (($x327 (= $x351 true)))
 (let (($x223 (= $x281 $x290)))
 (let (($x121 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x230 (=> $x121 $x223)))
 (let (($x277 (= $x251 $x229)))
 (let (($x225 (=> $x121 $x277)))
 (let (($x256 (= $x116 $x299)))
 (let (($x285 (=> $x121 $x256)))
 (let (($x249 (= $x203 $x313)))
 (let (($x308 (=> $x121 $x249)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x303)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x282)))
 (let (($x319 (= input.spec-%var-t-0.2.0 ?x267)))
 (let (($x206 (=> $x121 $x319)))
 (let (($x217 (= $x121 $x269)))
 (let (($x254 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x279 (=> $x254 $x80)))
 (let (($x199 (= $x254 $x302)))
 (let (($x304 (and (and (and (and (and (and $x199 $x279) $x217) $x206) $x308) $x285) $x225)))
 (let (($x321 (and $x304 $x230)))
 (let (($x94 (= $x321 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x173 (concat ?x161 (concat ?x126 (concat ?x148 ?x155)))))
 (let (($x211 (= ?x173 input.dst.llvm-%t)))
 (let (($x289 (= $x211 true)))
 (let (($x272 (= $x289 true)))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x8 (concat ?x81 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x43 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x27 (bvadd ?x43 (_ bv3 32))))
 (let ((?x68 (concat (select input.dst.llvm-mem ?x27) (concat ?x36 ?x8))))
 (let (($x209 (= (bvand ?x68 (_ bv4294967280 32)) ?x68)))
 (let (($x156 (= (bvand ?x43 (_ bv4294967292 32)) ?x43)))
 (let (($x227 (and $x156 $x209)))
 (let (($x244 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x67 (and true $x244)))
 (let (($x238 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x43 (bvsub ?x43 (_ bv4 32))) (bvult ?x43 (bvsub ?x43 (_ bv4 32))))))
 (let (($x181 (and (and (and $x238 $x67) $x156) $x227)))
 (let (($x171 (= true $x181)))
 (let (($x92 (= (_ bv0 32) ?x68)))
 (let (($x237 (not $x92)))
 (let (($x241 (=> $x237 $x171)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x195 (concat ?x250 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x86 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x86 (_ bv3 32))))
 (let ((?x311 (concat (select input.dst.llvm-mem ?x23) (concat ?x77 ?x195))))
 (let (($x87 (= (bvand ?x311 (_ bv4294967280 32)) ?x311)))
 (let (($x231 (= (bvand ?x86 (_ bv4294967292 32)) ?x86)))
 (let (($x248 (and $x231 $x87)))
 (let (($x88 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x86 (bvsub ?x86 (_ bv8 32))) (bvult ?x86 (bvsub ?x86 (_ bv8 32))))))
 (let (($x226 (and (and (and $x88 $x67) $x231) $x248)))
 (let (($x210 (= true $x226)))
 (let (($x312 (=> $x92 $x210)))
 (let (($x278 (and $x312 $x241)))
 (let (($x246 (= true $x278)))
 (let (($x75 (or $x92 $x237)))
 (let (($x42 (not $x33)))
 (let (($x107 (and $x42 $x75)))
 (let (($x240 (=> $x107 $x246)))
 (let (($x85 (=> $x42 $x171)))
 (let (($x177 (= input.dst.llvm-%t ?x173)))
 (let (($x119 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x6 (and $x119 $x177)))
 (let ((?x150 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x150)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x188 (and $x189 $x147)))
 (let (($x151 (and $x188 $x162)))
 (let (($x166 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x24 (and $x166 $x151)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x65)))))))
 (let (($x182 (and (and (and $x178 true) $x24) $x6)))
 (let (($x236 (and $x182 $x85)))
 (let (($x196 (and $x236 $x240)))
 (let (($x253 (= $x196 true)))
 (let (($x216 (= $x253 true)))
 (let (($x260 (= $x216 true)))
 (let (($x140 (= $x33 true)))
 (let (($x115 (= $x140 true)))
 (let (($x143 (= $x115 true)))
 (let (($x144 (= $x119 true)))
 (let (($x142 (= $x144 true)))
 (let (($x129 (= $x142 true)))
 (let (($x137 (and $x129 $x143)))
 (let (($x109 (and $x137 $x260)))
 (let (($x111 (and $x109 $x272)))
 (let (($x275 (and $x111 $x94)))
 (let (($x371 (and $x275 $x327)))
 (let (($x366 (and $x371 $x323)))
 (let (($x376 (and $x366 $x385)))
 (let (($x406 (and $x376 $x421)))
 (let (($x176 (and $x121 $x116)))
 (let (($x408 (and $x176 $x406)))
 (let (($x138 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x459 (and $x138 $x408)))
 (let (($x425 (and $x80 $x459)))
 (let (($x102 (and $x80 $x425)))
 (let (($x110 (bvugt ?x86 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x95 (=> (bvule ?x86 (bvsub (bvadd ?x86 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x110)))))))
 (let (($x71 (and $x42 $x92)))
 (let (($x130 (=> (and $x71 (bvule ?x86 (bvsub (bvadd ?x86 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x98 $x110)))))))
 (let (($x39 (bvugt ?x43 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x27)))
 (let (($x58 (=> (bvule ?x43 (bvsub (bvadd ?x43 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x22 $x39)))))))
 (let (($x48 (=> (and $x42 (bvule ?x43 (bvsub (bvadd ?x43 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x22 $x39)))))))
 (let (($x54 (and $x48 $x130)))
 (let (($x399 (and $x54 $x102)))
 (let (($x114 (=> $x399 $x429)))
 (not $x114)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2061X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x11 (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv8 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x125 (concat ?x91 (concat ?x159 ?x12))))
 (let (($x442 (= ?x125 ?x125)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x242 (concat ?x255 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x218 (concat ?x220 ?x242))))
 (let (($x276 (= (_ bv0 32) ?x234)))
 (let ((?x221 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x221 (_ bv1 32))))
 (let (($x430 (=> $x281 $x442)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x26 (concat ?x72 (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv4 32))))))
 (let ((?x174 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x423 (concat ?x419 (concat ?x174 ?x26))))
 (let (($x418 (= ?x423 ?x423)))
 (let (($x101 (=> $x281 $x418)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2061X))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv2 32))) ?x455)))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv3 32))) ?x55)))
 (let (($x52 (= ?x424 ?x424)))
 (let (($x59 (=> $x281 $x52)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x81 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x66 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x49 (bvadd ?x66 (_ bv3 32))))
 (let ((?x71 (concat (select input.dst.llvm-mem ?x49) (concat ?x76 ?x81))))
 (let ((?x438 (bvadd ?x71 (_ bv4 32))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv1 32))) (select input.dst.llvm-mem ?x438))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv2 32))) ?x422))))
 (let (($x460 (= (_ bv0 32) ?x395)))
 (let ((?x396 (ite $x460 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x396 (_ bv1 32))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x234 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x234 (_ bv4 32))))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x234 (_ bv4 32)) (_ bv2 32))) ?x397)))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x234 (_ bv4 32)) (_ bv3 32))) ?x56)))
 (let (($x461 (= (_ bv0 32) ?x440)))
 (let ((?x431 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x409 (bvuge ?x431 (_ bv1 32))))
 (let (($x34 (= $x409 $x20)))
 (let (($x141 (=> $x281 $x34)))
 (let (($x138 (= false false)))
 (let (($x394 (= ?x431 (_ bv0 32))))
 (let (($x404 (and $x281 $x394)))
 (let (($x30 (=> $x404 $x138)))
 (let (($x448 (= ?x396 (_ bv0 32))))
 (let (($x468 (= $x394 $x448)))
 (let (($x398 (=> $x281 $x468)))
 (let (($x79 (= (_ bv0 32) ?x71)))
 (let ((?x428 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x435 (bvuge ?x428 (_ bv1 32))))
 (let (($x451 (= $x281 $x435)))
 (let (($x441 (= ?x428 (_ bv0 32))))
 (let (($x229 (= ?x221 (_ bv0 32))))
 (let (($x416 (= $x229 $x441)))
 (let (($x128 (and (and (and (and (and (= ?x234 ?x71) (=> $x229 $x138)) $x416) $x451) $x398) $x30)))
 (let (($x158 (and (and (and (and $x128 $x141) $x59) $x101) $x430)))
 (let (($x453 (= true true)))
 (let (($x57 (and $x453 $x158)))
 (let (($x74 (= $x57 true)))
 (let (($x462 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x339 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x456 (= $x339 $x462)))
 (let (($x301 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x463 (=> $x301 $x138)))
 (let (($x417 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x379 (= $x301 $x417)))
 (let (($x381 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x382 (= $x315 $x381)))
 (let (($x307 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x387 (=> $x307 $x138)))
 (let (($x414 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x450 (= $x307 $x414)))
 (let (($x432 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x425 (and (and (and (and (and (and $x432 $x450) $x387) $x382) $x379) $x463) $x456)))
 (let (($x102 (= $x425 true)))
 (let (($x361 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x369 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x386 (= $x369 $x361)))
 (let (($x304 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x326 (=> $x304 $x386)))
 (let (($x337 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x368 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x362 (= $x368 $x337)))
 (let (($x356 (=> $x304 $x362)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x325 $x336)))
 (let (($x449 (=> $x304 $x372)))
 (let (($x377 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x363 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x393 (= $x363 $x377)))
 (let (($x383 (=> $x304 $x393)))
 (let (($x100 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x370 (=> $x304 $x100)))
 (let (($x25 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x346 (= $x304 $x25)))
 (let (($x251 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x375 (=> $x251 $x138)))
 (let (($x360 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x349 (= $x251 $x360)))
 (let (($x373 (and (and (and (and (and (and $x349 $x375) $x346) $x370) $x383) $x449) $x356)))
 (let (($x380 (and $x373 $x326)))
 (let (($x388 (= $x380 true)))
 (let (($x132 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x367 (= $x304 $x132)))
 (let (($x359 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x355 (= $x251 $x359)))
 (let (($x51 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x299 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x352 (= $x299 $x51)))
 (let (($x127 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x283 (=> $x127 $x138)))
 (let (($x332 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x104 (= $x127 $x332)))
 (let (($x338 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x350 (and (and (and (and (and (and $x338 $x104) $x283) $x352) $x355) $x375) $x367)))
 (let (($x390 (= $x350 true)))
 (let (($x294 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x345 (= $x339 $x294)))
 (let (($x293 (=> $x299 $x345)))
 (let (($x265 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x335 (= $x301 $x265)))
 (let (($x314 (=> $x299 $x335)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x329 (=> $x299 $x280)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x343 (= $x307 $x341)))
 (let (($x330 (=> $x299 $x343)))
 (let (($x305 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x300 (=> $x299 $x305)))
 (let (($x348 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x317 (= $x299 $x348)))
 (let (($x351 (and (and (= $x127 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x283) $x317)))
 (let (($x347 (and (and (and (and (and $x351 $x300) $x330) $x329) $x314) $x293)))
 (let (($x354 (= $x347 true)))
 (let (($x290 (= $x304 $x281)))
 (let (($x176 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x223 (=> $x176 $x290)))
 (let (($x277 (= $x251 $x229)))
 (let (($x225 (=> $x176 $x277)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x212 (concat ?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x208 (concat ?x261 (concat ?x201 ?x212))))
 (let (($x287 (= (_ bv0 32) ?x208)))
 (let ((?x313 (ite $x287 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x313 (_ bv1 32))))
 (let (($x285 (= $x299 $x256)))
 (let (($x258 (=> $x176 $x285)))
 (let (($x249 (= ?x313 (_ bv0 32))))
 (let (($x308 (= $x127 $x249)))
 (let (($x257 (=> $x176 $x308)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x268)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x267)))
 (let (($x203 (= input.spec-%var-t-0.2.0 ?x259)))
 (let (($x202 (=> $x176 $x203)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x269 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x295 (bvuge ?x269 (_ bv1 32))))
 (let (($x200 (= $x176 $x295)))
 (let (($x266 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x204 (=> $x266 $x138)))
 (let (($x217 (= ?x269 (_ bv0 32))))
 (let (($x286 (= $x266 $x217)))
 (let (($x320 (and (and (and (and (and (and $x286 $x204) $x200) $x202) $x257) $x258) $x225)))
 (let (($x310 (and $x320 $x223)))
 (let (($x298 (= $x310 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x180 (concat ?x192 (concat ?x177 (concat ?x164 ?x148)))))
 (let (($x302 (= ?x180 input.dst.llvm-%t)))
 (let (($x199 (= $x302 true)))
 (let (($x80 (= $x199 true)))
 (let (($x236 (= (bvand ?x71 (_ bv4294967280 32)) ?x71)))
 (let (($x171 (= (bvand ?x66 (_ bv4294967292 32)) ?x66)))
 (let (($x237 (and $x171 $x236)))
 (let (($x215 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x209 (and true $x215)))
 (let (($x172 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x66 (bvsub ?x66 (_ bv4 32))) (bvult ?x66 (bvsub ?x66 (_ bv4 32))))))
 (let (($x64 (and (and (and $x172 $x209) $x171) $x237)))
 (let (($x106 (= true $x64)))
 (let (($x137 (not $x79)))
 (let (($x216 (=> $x137 $x106)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x243 (concat ?x195 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x84 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x19 (bvadd ?x84 (_ bv3 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem ?x19) (concat ?x183 ?x243))))
 (let (($x312 (= (bvand ?x226 (_ bv4294967280 32)) ?x226)))
 (let (($x232 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x241 (and $x232 $x312)))
 (let (($x198 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv8 32))) (bvult ?x84 (bvsub ?x84 (_ bv8 32))))))
 (let (($x240 (and (and (and $x198 $x209) $x232) $x241)))
 (let (($x196 (= true $x240)))
 (let (($x253 (=> $x79 $x196)))
 (let (($x260 (and $x253 $x216)))
 (let (($x109 (= true $x260)))
 (let (($x88 (or $x79 $x137)))
 (let (($x42 (not $x33)))
 (let (($x193 (and $x42 $x88)))
 (let (($x211 (=> $x193 $x109)))
 (let (($x228 (=> $x42 $x106)))
 (let (($x191 (= input.dst.llvm-%t ?x180)))
 (let (($x129 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x247 (and $x129 $x191)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x167)))
 (let ((?x151 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x151)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x292 (and $x162 $x24)))
 (let (($x108 (and $x292 $x161)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x146 $x108)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x122)))))))
 (let (($x165 (and (and (and $x150 true) $x126) $x247)))
 (let (($x235 (and $x165 $x228)))
 (let (($x289 (and $x235 $x211)))
 (let (($x272 (= $x289 true)))
 (let (($x111 (= $x272 true)))
 (let (($x254 (= $x111 true)))
 (let (($x179 (and $x42 $x137)))
 (let (($x152 (= $x179 true)))
 (let (($x134 (= $x152 true)))
 (let (($x190 (= $x134 true)))
 (let (($x140 (= $x129 true)))
 (let (($x115 (= $x140 true)))
 (let (($x143 (= $x115 true)))
 (let (($x170 (and $x143 $x190)))
 (let (($x296 (and $x170 $x254)))
 (let (($x279 (and $x296 $x80)))
 (let (($x306 (and $x279 $x298)))
 (let (($x70 (and $x306 $x354)))
 (let (($x324 (and $x70 $x390)))
 (let (($x457 (and $x324 $x388)))
 (let (($x399 (and $x457 $x102)))
 (let (($x119 (and $x176 $x127)))
 (let (($x444 (and $x119 $x399)))
 (let (($x118 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x439 (and $x118 $x444)))
 (let (($x436 (and $x138 $x439)))
 (let (($x392 (and $x138 $x436)))
 (let (($x96 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x135 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x53 $x96)))))))
 (let (($x86 (and $x42 $x79)))
 (let (($x99 (=> (and $x86 (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x53 $x96)))))))
 (let (($x45 (bvugt ?x66 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x29 (=> (bvule ?x66 (bvsub (bvadd ?x66 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x60 $x45)))))))
 (let (($x37 (=> (and $x42 (bvule ?x66 (bvsub (bvadd ?x66 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x60 $x45)))))))
 (let (($x23 (and $x37 $x99)))
 (let (($x452 (and $x23 $x392)))
 (let (($x131 (=> $x452 $x74)))
 (not $x131))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2061X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x11 (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv8 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x125 (concat ?x91 (concat ?x159 ?x12))))
 (let (($x442 (= ?x125 ?x125)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x242 (concat ?x255 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x218 (concat ?x220 ?x242))))
 (let (($x276 (= (_ bv0 32) ?x234)))
 (let ((?x221 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x221 (_ bv1 32))))
 (let (($x430 (=> $x281 $x442)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x26 (concat ?x72 (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv4 32))))))
 (let ((?x174 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x419 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2061X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x423 (concat ?x419 (concat ?x174 ?x26))))
 (let (($x418 (= ?x423 ?x423)))
 (let (($x101 (=> $x281 $x418)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2061X))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv2 32))) ?x455)))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2061X (_ bv3 32))) ?x55)))
 (let (($x52 (= ?x424 ?x424)))
 (let (($x59 (=> $x281 $x52)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x81 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x66 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x49 (bvadd ?x66 (_ bv3 32))))
 (let ((?x71 (concat (select input.dst.llvm-mem ?x49) (concat ?x76 ?x81))))
 (let ((?x438 (bvadd ?x71 (_ bv4 32))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv1 32))) (select input.dst.llvm-mem ?x438))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv2 32))) ?x422))))
 (let (($x460 (= (_ bv0 32) ?x395)))
 (let ((?x396 (ite $x460 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x396 (_ bv1 32))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x234 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x234 (_ bv4 32))))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x234 (_ bv4 32)) (_ bv2 32))) ?x397)))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x234 (_ bv4 32)) (_ bv3 32))) ?x56)))
 (let (($x461 (= (_ bv0 32) ?x440)))
 (let ((?x431 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x409 (bvuge ?x431 (_ bv1 32))))
 (let (($x34 (= $x409 $x20)))
 (let (($x141 (=> $x281 $x34)))
 (let (($x138 (= false false)))
 (let (($x394 (= ?x431 (_ bv0 32))))
 (let (($x404 (and $x281 $x394)))
 (let (($x30 (=> $x404 $x138)))
 (let (($x448 (= ?x396 (_ bv0 32))))
 (let (($x468 (= $x394 $x448)))
 (let (($x398 (=> $x281 $x468)))
 (let (($x79 (= (_ bv0 32) ?x71)))
 (let ((?x428 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x435 (bvuge ?x428 (_ bv1 32))))
 (let (($x451 (= $x281 $x435)))
 (let (($x441 (= ?x428 (_ bv0 32))))
 (let (($x229 (= ?x221 (_ bv0 32))))
 (let (($x416 (= $x229 $x441)))
 (let (($x128 (and (and (and (and (and (= ?x234 ?x71) (=> $x229 $x138)) $x416) $x451) $x398) $x30)))
 (let (($x158 (and (and (and (and $x128 $x141) $x59) $x101) $x430)))
 (let (($x453 (= true true)))
 (let (($x57 (and $x453 $x158)))
 (let (($x74 (= $x57 true)))
 (let (($x462 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x339 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x456 (= $x339 $x462)))
 (let (($x301 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x463 (=> $x301 $x138)))
 (let (($x417 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x379 (= $x301 $x417)))
 (let (($x381 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x382 (= $x315 $x381)))
 (let (($x307 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x387 (=> $x307 $x138)))
 (let (($x414 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x450 (= $x307 $x414)))
 (let (($x432 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x425 (and (and (and (and (and (and $x432 $x450) $x387) $x382) $x379) $x463) $x456)))
 (let (($x102 (= $x425 true)))
 (let (($x361 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x369 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x386 (= $x369 $x361)))
 (let (($x304 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x326 (=> $x304 $x386)))
 (let (($x337 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x368 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x362 (= $x368 $x337)))
 (let (($x356 (=> $x304 $x362)))
 (let (($x336 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x325 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x325 $x336)))
 (let (($x449 (=> $x304 $x372)))
 (let (($x377 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x363 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x393 (= $x363 $x377)))
 (let (($x383 (=> $x304 $x393)))
 (let (($x100 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x370 (=> $x304 $x100)))
 (let (($x25 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x346 (= $x304 $x25)))
 (let (($x251 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x375 (=> $x251 $x138)))
 (let (($x360 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x349 (= $x251 $x360)))
 (let (($x373 (and (and (and (and (and (and $x349 $x375) $x346) $x370) $x383) $x449) $x356)))
 (let (($x380 (and $x373 $x326)))
 (let (($x388 (= $x380 true)))
 (let (($x132 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x367 (= $x304 $x132)))
 (let (($x359 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x355 (= $x251 $x359)))
 (let (($x51 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x299 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x352 (= $x299 $x51)))
 (let (($x127 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x283 (=> $x127 $x138)))
 (let (($x332 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x104 (= $x127 $x332)))
 (let (($x338 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x350 (and (and (and (and (and (and $x338 $x104) $x283) $x352) $x355) $x375) $x367)))
 (let (($x390 (= $x350 true)))
 (let (($x294 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x345 (= $x339 $x294)))
 (let (($x293 (=> $x299 $x345)))
 (let (($x265 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x335 (= $x301 $x265)))
 (let (($x314 (=> $x299 $x335)))
 (let (($x35 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x280 (= $x315 $x35)))
 (let (($x329 (=> $x299 $x280)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x343 (= $x307 $x341)))
 (let (($x330 (=> $x299 $x343)))
 (let (($x305 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x300 (=> $x299 $x305)))
 (let (($x348 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x317 (= $x299 $x348)))
 (let (($x351 (and (and (= $x127 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x283) $x317)))
 (let (($x347 (and (and (and (and (and $x351 $x300) $x330) $x329) $x314) $x293)))
 (let (($x354 (= $x347 true)))
 (let (($x290 (= $x304 $x281)))
 (let (($x176 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x223 (=> $x176 $x290)))
 (let (($x277 (= $x251 $x229)))
 (let (($x225 (=> $x176 $x277)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x212 (concat ?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x208 (concat ?x261 (concat ?x201 ?x212))))
 (let (($x287 (= (_ bv0 32) ?x208)))
 (let ((?x313 (ite $x287 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x313 (_ bv1 32))))
 (let (($x285 (= $x299 $x256)))
 (let (($x258 (=> $x176 $x285)))
 (let (($x249 (= ?x313 (_ bv0 32))))
 (let (($x308 (= $x127 $x249)))
 (let (($x257 (=> $x176 $x308)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x268)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x267)))
 (let (($x203 (= input.spec-%var-t-0.2.0 ?x259)))
 (let (($x202 (=> $x176 $x203)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x269 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x295 (bvuge ?x269 (_ bv1 32))))
 (let (($x200 (= $x176 $x295)))
 (let (($x266 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x204 (=> $x266 $x138)))
 (let (($x217 (= ?x269 (_ bv0 32))))
 (let (($x286 (= $x266 $x217)))
 (let (($x320 (and (and (and (and (and (and $x286 $x204) $x200) $x202) $x257) $x258) $x225)))
 (let (($x310 (and $x320 $x223)))
 (let (($x298 (= $x310 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x180 (concat ?x192 (concat ?x177 (concat ?x164 ?x148)))))
 (let (($x302 (= ?x180 input.dst.llvm-%t)))
 (let (($x199 (= $x302 true)))
 (let (($x80 (= $x199 true)))
 (let (($x236 (= (bvand ?x71 (_ bv4294967280 32)) ?x71)))
 (let (($x171 (= (bvand ?x66 (_ bv4294967292 32)) ?x66)))
 (let (($x237 (and $x171 $x236)))
 (let (($x215 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x209 (and true $x215)))
 (let (($x172 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x66 (bvsub ?x66 (_ bv4 32))) (bvult ?x66 (bvsub ?x66 (_ bv4 32))))))
 (let (($x64 (and (and (and $x172 $x209) $x171) $x237)))
 (let (($x106 (= true $x64)))
 (let (($x137 (not $x79)))
 (let (($x216 (=> $x137 $x106)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x243 (concat ?x195 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x84 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x19 (bvadd ?x84 (_ bv3 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem ?x19) (concat ?x183 ?x243))))
 (let (($x312 (= (bvand ?x226 (_ bv4294967280 32)) ?x226)))
 (let (($x232 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x241 (and $x232 $x312)))
 (let (($x198 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv8 32))) (bvult ?x84 (bvsub ?x84 (_ bv8 32))))))
 (let (($x240 (and (and (and $x198 $x209) $x232) $x241)))
 (let (($x196 (= true $x240)))
 (let (($x253 (=> $x79 $x196)))
 (let (($x260 (and $x253 $x216)))
 (let (($x109 (= true $x260)))
 (let (($x88 (or $x79 $x137)))
 (let (($x42 (not $x33)))
 (let (($x193 (and $x42 $x88)))
 (let (($x211 (=> $x193 $x109)))
 (let (($x228 (=> $x42 $x106)))
 (let (($x191 (= input.dst.llvm-%t ?x180)))
 (let (($x129 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x247 (and $x129 $x191)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x167)))
 (let ((?x151 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x151)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x292 (and $x162 $x24)))
 (let (($x108 (and $x292 $x161)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x146 $x108)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x122)))))))
 (let (($x165 (and (and (and $x150 true) $x126) $x247)))
 (let (($x235 (and $x165 $x228)))
 (let (($x289 (and $x235 $x211)))
 (let (($x272 (= $x289 true)))
 (let (($x111 (= $x272 true)))
 (let (($x254 (= $x111 true)))
 (let (($x179 (and $x42 $x137)))
 (let (($x152 (= $x179 true)))
 (let (($x134 (= $x152 true)))
 (let (($x190 (= $x134 true)))
 (let (($x140 (= $x129 true)))
 (let (($x115 (= $x140 true)))
 (let (($x143 (= $x115 true)))
 (let (($x170 (and $x143 $x190)))
 (let (($x296 (and $x170 $x254)))
 (let (($x279 (and $x296 $x80)))
 (let (($x306 (and $x279 $x298)))
 (let (($x70 (and $x306 $x354)))
 (let (($x324 (and $x70 $x390)))
 (let (($x457 (and $x324 $x388)))
 (let (($x399 (and $x457 $x102)))
 (let (($x119 (and $x176 $x127)))
 (let (($x444 (and $x119 $x399)))
 (let (($x118 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x439 (and $x118 $x444)))
 (let (($x436 (and $x138 $x439)))
 (let (($x392 (and $x138 $x436)))
 (let (($x96 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x135 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x53 $x96)))))))
 (let (($x86 (and $x42 $x79)))
 (let (($x99 (=> (and $x86 (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x53 $x96)))))))
 (let (($x45 (bvugt ?x66 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x29 (=> (bvule ?x66 (bvsub (bvadd ?x66 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x60 $x45)))))))
 (let (($x37 (=> (and $x42 (bvule ?x66 (bvsub (bvadd ?x66 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x60 $x45)))))))
 (let (($x23 (and $x37 $x99)))
 (let (($x452 (and $x23 $x392)))
 (let (($x131 (=> $x452 $x74)))
 (not $x131))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2093X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x429 (concat ?x139 (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv8 32))))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x11 (concat ?x437 (concat ?x91 ?x429))))
 (let (($x114 (= ?x11 ?x11)))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x271 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x222 (concat ?x220 ?x218))))
 (let (($x224 (= (_ bv0 32) ?x242)))
 (let ((?x234 (ite $x224 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x234 (_ bv1 32))))
 (let (($x12 (=> $x225 $x114)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x420 (concat ?x117 (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv4 32))))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x18 (concat ?x72 (concat ?x32 ?x420))))
 (let (($x26 (= ?x18 ?x18)))
 (let (($x97 (=> $x225 $x26)))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2093X))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv2 32))) ?x175)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv3 32))) ?x113)))
 (let (($x55 (= ?x455 ?x455)))
 (let (($x424 (=> $x225 $x55)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x250 (concat ?x195 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x110 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x110 (_ bv3 32))))
 (let ((?x312 (concat (select input.dst.llvm-mem ?x31) (concat ?x87 ?x250))))
 (let ((?x413 (bvadd ?x312 (_ bv4 32))))
 (let ((?x464 (concat (select input.dst.llvm-mem (bvadd ?x413 (_ bv1 32))) (select input.dst.llvm-mem ?x413))))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd ?x413 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x413 (_ bv2 32))) ?x464))))
 (let (($x468 (= (_ bv0 32) ?x448)))
 (let ((?x398 (ite $x468 (_ bv0 32) (_ bv1 32))))
 (let (($x409 (bvuge ?x398 (_ bv1 32))))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x242 (_ bv4 32))))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x242 (_ bv4 32)) (_ bv2 32))) ?x451)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x242 (_ bv4 32)) (_ bv3 32))) ?x407)))
 (let (($x405 (= (_ bv0 32) ?x403)))
 (let ((?x90 (ite $x405 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x90 (_ bv1 32))))
 (let (($x20 (= $x128 $x409)))
 (let (($x34 (=> $x225 $x20)))
 (let (($x46 (= ?x398 (_ bv0 32))))
 (let (($x445 (= ?x90 (_ bv0 32))))
 (let (($x404 (= $x445 $x46)))
 (let (($x30 (=> $x225 $x404)))
 (let (($x461 (= (_ bv0 32) ?x312)))
 (let ((?x431 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x400 (= ?x431 (_ bv0 32))))
 (let (($x276 (= ?x234 (_ bv0 32))))
 (let (($x466 (= $x276 $x400)))
 (let (($x394 (bvuge ?x431 (_ bv1 32))))
 (let (($x438 (= $x225 $x394)))
 (let (($x440 (= ?x242 ?x312)))
 (let (($x118 (= false false)))
 (let (($x397 (and $x225 $x445)))
 (let (($x56 (=> $x397 $x118)))
 (let (($x428 (=> $x276 $x118)))
 (let (($x57 (and (and (and (and (and (and $x428 $x56) $x440) $x438) $x466) $x30) $x34)))
 (let (($x124 (and (and (and $x57 $x424) $x97) $x12)))
 (let (($x103 (= true true)))
 (let (($x38 (and $x103 $x124)))
 (let (($x44 (= $x38 true)))
 (let (($x463 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x335 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x459 (= $x335 $x463)))
 (let (($x344 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x408 (=> $x344 $x118)))
 (let (($x417 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x379 (= $x344 $x417)))
 (let (($x382 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x406 (= $x371 $x382)))
 (let (($x307 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x381 (=> $x307 $x118)))
 (let (($x387 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x421 (= $x307 $x387)))
 (let (($x450 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x444 (and (and (and (and (and (and $x450 $x421) $x381) $x406) $x379) $x408) $x459)))
 (let (($x439 (= $x444 true)))
 (let (($x356 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x362 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x373 (= $x362 $x356)))
 (let (($x277 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x369 (=> $x277 $x373)))
 (let (($x368 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x465 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x458 (= $x465 $x368)))
 (let (($x337 (=> $x277 $x458)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x376 $x325)))
 (let (($x372 (=> $x277 $x336)))
 (let (($x377 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x363 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x393 (= $x363 $x377)))
 (let (($x383 (=> $x277 $x393)))
 (let (($x370 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x385 (=> $x277 $x370)))
 (let (($x391 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x364 (= $x277 $x391)))
 (let (($x333 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x333 $x118)))
 (let (($x25 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x346 (= $x333 $x25)))
 (let (($x457 (and (and (and (and (and (and $x346 $x7) $x364) $x385) $x383) $x372) $x337)))
 (let (($x378 (and $x457 $x369)))
 (let (($x432 (= $x378 true)))
 (let (($x375 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x357 (= $x277 $x375)))
 (let (($x359 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x355 (= $x333 $x359)))
 (let (($x352 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x366 (= $x275 $x352)))
 (let (($x142 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x317 (=> $x142 $x118)))
 (let (($x323 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x51 (= $x142 $x323)))
 (let (($x104 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x334 (and (and (and (and (and (and $x104 $x51) $x317) $x366) $x355) $x7) $x357)))
 (let (($x360 (= $x334 true)))
 (let (($x314 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x328 (= $x335 $x314)))
 (let (($x339 (=> $x275 $x328)))
 (let (($x301 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x340 (= $x344 $x301)))
 (let (($x265 (=> $x275 $x340)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x371 $x315)))
 (let (($x280 (=> $x275 $x35)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x343 (= $x307 $x341)))
 (let (($x330 (=> $x275 $x343)))
 (let (($x300 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x327 (=> $x275 $x300)))
 (let (($x351 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x288 (= $x275 $x351)))
 (let (($x345 (and (and (= $x142 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x317) $x288)))
 (let (($x61 (and (and (and (and (and $x345 $x327) $x330) $x280) $x265) $x339)))
 (let (($x338 (= $x61 true)))
 (let (($x320 (= $x277 $x225)))
 (let (($x119 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x304 (=> $x119 $x320)))
 (let (($x221 (= $x333 $x276)))
 (let (($x229 (=> $x119 $x221)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x208 (concat ?x207 (concat ?x219 ?x201))))
 (let (($x287 (= (_ bv0 32) ?x208)))
 (let ((?x313 (ite $x287 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x313 (_ bv1 32))))
 (let (($x256 (= $x275 $x299)))
 (let (($x285 (=> $x119 $x256)))
 (let (($x249 (= ?x313 (_ bv0 32))))
 (let (($x308 (= $x142 $x249)))
 (let (($x257 (=> $x119 $x308)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x184)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x268)))
 (let (($x202 (= input.spec-%var-t-0.2.0 ?x203)))
 (let (($x94 (=> $x119 $x202)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x204 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (bvuge ?x204 (_ bv1 32))))
 (let (($x319 (= $x119 $x321)))
 (let (($x138 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x200 (=> $x138 $x118)))
 (let (($x230 (= ?x204 (_ bv0 32))))
 (let (($x295 (= $x138 $x230)))
 (let (($x306 (and (and (and (and (and (and $x295 $x200) $x319) $x94) $x257) $x285) $x229)))
 (let (($x342 (and $x306 $x304)))
 (let (($x264 (= $x342 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x191 (concat ?x180 (concat ?x148 (concat ?x177 ?x192)))))
 (let (($x266 (= ?x191 input.dst.llvm-%t)))
 (let (($x269 (= $x266 true)))
 (let (($x217 (= $x269 true)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x47 (concat ?x36 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x69 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x63 (bvadd ?x69 (_ bv3 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem ?x63) (concat ?x68 ?x47))))
 (let (($x237 (= (bvand ?x86 (_ bv4294967280 32)) ?x86)))
 (let (($x85 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x64 (and $x85 $x237)))
 (let (($x227 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x181 (and true $x227)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv4 32))) (bvult ?x69 (bvsub ?x69 (_ bv4 32))))))
 (let (($x235 (and (and (and $x156 $x181) $x85) $x64)))
 (let (($x88 (= true $x235)))
 (let (($x93 (= (_ bv0 32) ?x86)))
 (let (($x252 (not $x93)))
 (let (($x289 (=> $x252 $x88)))
 (let (($x240 (= (bvand ?x312 (_ bv4294967280 32)) ?x312)))
 (let (($x311 (= (bvand ?x110 (_ bv4294967292 32)) ?x110)))
 (let (($x196 (and $x311 $x240)))
 (let (($x246 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x110 (bvsub ?x110 (_ bv8 32))) (bvult ?x110 (bvsub ?x110 (_ bv8 32))))))
 (let (($x260 (and (and (and $x246 $x181) $x311) $x196)))
 (let (($x109 (= true $x260)))
 (let (($x211 (=> $x93 $x109)))
 (let (($x272 (and $x211 $x289)))
 (let (($x111 (= true $x272)))
 (let (($x297 (or $x93 $x252)))
 (let (($x42 (not $x33)))
 (let (($x105 (and $x42 $x297)))
 (let (($x254 (=> $x105 $x111)))
 (let (($x193 (=> $x42 $x88)))
 (let (($x247 (= input.dst.llvm-%t ?x191)))
 (let (($x143 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x165 (and $x143 $x247)))
 (let ((?x161 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x161)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x292 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (and $x151 $x292)))
 (let (($x126 (and $x167 $x108)))
 (let (($x178 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x178 $x126)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x162 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x189 $x145)))))))
 (let (($x244 (and (and (and $x162 true) $x157) $x165)))
 (let (($x231 (and $x244 $x193)))
 (let (($x296 (and $x231 $x254)))
 (let (($x302 (= $x296 true)))
 (let (($x199 (= $x302 true)))
 (let (($x80 (= $x199 true)))
 (let (($x84 (and $x42 $x93)))
 (let (($x134 (= $x84 true)))
 (let (($x190 (= $x134 true)))
 (let (($x170 (= $x190 true)))
 (let (($x137 (= $x143 true)))
 (let (($x179 (= $x137 true)))
 (let (($x152 (= $x179 true)))
 (let (($x120 (and $x152 $x170)))
 (let (($x279 (and $x120 $x80)))
 (let (($x286 (and $x279 $x217)))
 (let (($x291 (and $x286 $x264)))
 (let (($x62 (and $x291 $x338)))
 (let (($x349 (and $x62 $x360)))
 (let (($x426 (and $x349 $x432)))
 (let (($x436 (and $x426 $x439)))
 (let (($x129 (and $x119 $x142)))
 (let (($x392 (and $x129 $x436)))
 (let (($x123 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x452 (and $x123 $x392)))
 (let (($x453 (and $x118 $x452)))
 (let (($x447 (and $x118 $x453)))
 (let (($x130 (bvugt ?x110 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x121 (=> (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x130)))))))
 (let (($x169 (=> (and $x84 (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x95 $x130)))))))
 (let (($x48 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x5 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x48)))))))
 (let (($x27 (=> (and $x42 (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x58 $x48)))))))
 (let (($x19 (and $x27 $x169)))
 (let (($x433 (and $x19 $x447)))
 (let (($x65 (=> $x433 $x44)))
 (not $x65))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2093X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x429 (concat ?x139 (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv8 32))))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x11 (concat ?x437 (concat ?x91 ?x429))))
 (let (($x114 (= ?x11 ?x11)))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x271 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x222 (concat ?x220 ?x218))))
 (let (($x224 (= (_ bv0 32) ?x242)))
 (let ((?x234 (ite $x224 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x234 (_ bv1 32))))
 (let (($x12 (=> $x225 $x114)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x420 (concat ?x117 (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv4 32))))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2093X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x18 (concat ?x72 (concat ?x32 ?x420))))
 (let (($x26 (= ?x18 ?x18)))
 (let (($x97 (=> $x225 $x26)))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2093X))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv2 32))) ?x175)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2093X (_ bv3 32))) ?x113)))
 (let (($x55 (= ?x455 ?x455)))
 (let (($x424 (=> $x225 $x55)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x250 (concat ?x195 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x110 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x110 (_ bv3 32))))
 (let ((?x312 (concat (select input.dst.llvm-mem ?x31) (concat ?x87 ?x250))))
 (let ((?x413 (bvadd ?x312 (_ bv4 32))))
 (let ((?x464 (concat (select input.dst.llvm-mem (bvadd ?x413 (_ bv1 32))) (select input.dst.llvm-mem ?x413))))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd ?x413 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x413 (_ bv2 32))) ?x464))))
 (let (($x468 (= (_ bv0 32) ?x448)))
 (let ((?x398 (ite $x468 (_ bv0 32) (_ bv1 32))))
 (let (($x409 (bvuge ?x398 (_ bv1 32))))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x242 (_ bv4 32))))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x242 (_ bv4 32)) (_ bv2 32))) ?x451)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x242 (_ bv4 32)) (_ bv3 32))) ?x407)))
 (let (($x405 (= (_ bv0 32) ?x403)))
 (let ((?x90 (ite $x405 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x90 (_ bv1 32))))
 (let (($x20 (= $x128 $x409)))
 (let (($x34 (=> $x225 $x20)))
 (let (($x46 (= ?x398 (_ bv0 32))))
 (let (($x445 (= ?x90 (_ bv0 32))))
 (let (($x404 (= $x445 $x46)))
 (let (($x30 (=> $x225 $x404)))
 (let (($x461 (= (_ bv0 32) ?x312)))
 (let ((?x431 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x400 (= ?x431 (_ bv0 32))))
 (let (($x276 (= ?x234 (_ bv0 32))))
 (let (($x466 (= $x276 $x400)))
 (let (($x394 (bvuge ?x431 (_ bv1 32))))
 (let (($x438 (= $x225 $x394)))
 (let (($x440 (= ?x242 ?x312)))
 (let (($x118 (= false false)))
 (let (($x397 (and $x225 $x445)))
 (let (($x56 (=> $x397 $x118)))
 (let (($x428 (=> $x276 $x118)))
 (let (($x57 (and (and (and (and (and (and $x428 $x56) $x440) $x438) $x466) $x30) $x34)))
 (let (($x124 (and (and (and $x57 $x424) $x97) $x12)))
 (let (($x103 (= true true)))
 (let (($x38 (and $x103 $x124)))
 (let (($x44 (= $x38 true)))
 (let (($x463 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x335 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x459 (= $x335 $x463)))
 (let (($x344 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x408 (=> $x344 $x118)))
 (let (($x417 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x379 (= $x344 $x417)))
 (let (($x382 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x406 (= $x371 $x382)))
 (let (($x307 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x381 (=> $x307 $x118)))
 (let (($x387 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x421 (= $x307 $x387)))
 (let (($x450 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x444 (and (and (and (and (and (and $x450 $x421) $x381) $x406) $x379) $x408) $x459)))
 (let (($x439 (= $x444 true)))
 (let (($x356 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x362 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x373 (= $x362 $x356)))
 (let (($x277 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x369 (=> $x277 $x373)))
 (let (($x368 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x465 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x458 (= $x465 $x368)))
 (let (($x337 (=> $x277 $x458)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x376 $x325)))
 (let (($x372 (=> $x277 $x336)))
 (let (($x377 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x363 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x393 (= $x363 $x377)))
 (let (($x383 (=> $x277 $x393)))
 (let (($x370 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x385 (=> $x277 $x370)))
 (let (($x391 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x364 (= $x277 $x391)))
 (let (($x333 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x333 $x118)))
 (let (($x25 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x346 (= $x333 $x25)))
 (let (($x457 (and (and (and (and (and (and $x346 $x7) $x364) $x385) $x383) $x372) $x337)))
 (let (($x378 (and $x457 $x369)))
 (let (($x432 (= $x378 true)))
 (let (($x375 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x357 (= $x277 $x375)))
 (let (($x359 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x355 (= $x333 $x359)))
 (let (($x352 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x366 (= $x275 $x352)))
 (let (($x142 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x317 (=> $x142 $x118)))
 (let (($x323 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x51 (= $x142 $x323)))
 (let (($x104 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x334 (and (and (and (and (and (and $x104 $x51) $x317) $x366) $x355) $x7) $x357)))
 (let (($x360 (= $x334 true)))
 (let (($x314 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x328 (= $x335 $x314)))
 (let (($x339 (=> $x275 $x328)))
 (let (($x301 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x340 (= $x344 $x301)))
 (let (($x265 (=> $x275 $x340)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x371 $x315)))
 (let (($x280 (=> $x275 $x35)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x343 (= $x307 $x341)))
 (let (($x330 (=> $x275 $x343)))
 (let (($x300 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x327 (=> $x275 $x300)))
 (let (($x351 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x288 (= $x275 $x351)))
 (let (($x345 (and (and (= $x142 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x317) $x288)))
 (let (($x61 (and (and (and (and (and $x345 $x327) $x330) $x280) $x265) $x339)))
 (let (($x338 (= $x61 true)))
 (let (($x320 (= $x277 $x225)))
 (let (($x119 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x304 (=> $x119 $x320)))
 (let (($x221 (= $x333 $x276)))
 (let (($x229 (=> $x119 $x221)))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x208 (concat ?x207 (concat ?x219 ?x201))))
 (let (($x287 (= (_ bv0 32) ?x208)))
 (let ((?x313 (ite $x287 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x313 (_ bv1 32))))
 (let (($x256 (= $x275 $x299)))
 (let (($x285 (=> $x119 $x256)))
 (let (($x249 (= ?x313 (_ bv0 32))))
 (let (($x308 (= $x142 $x249)))
 (let (($x257 (=> $x119 $x308)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x184)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x268)))
 (let (($x202 (= input.spec-%var-t-0.2.0 ?x203)))
 (let (($x94 (=> $x119 $x202)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x204 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (bvuge ?x204 (_ bv1 32))))
 (let (($x319 (= $x119 $x321)))
 (let (($x138 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x200 (=> $x138 $x118)))
 (let (($x230 (= ?x204 (_ bv0 32))))
 (let (($x295 (= $x138 $x230)))
 (let (($x306 (and (and (and (and (and (and $x295 $x200) $x319) $x94) $x257) $x285) $x229)))
 (let (($x342 (and $x306 $x304)))
 (let (($x264 (= $x342 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x191 (concat ?x180 (concat ?x148 (concat ?x177 ?x192)))))
 (let (($x266 (= ?x191 input.dst.llvm-%t)))
 (let (($x269 (= $x266 true)))
 (let (($x217 (= $x269 true)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x47 (concat ?x36 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x69 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x63 (bvadd ?x69 (_ bv3 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem ?x63) (concat ?x68 ?x47))))
 (let (($x237 (= (bvand ?x86 (_ bv4294967280 32)) ?x86)))
 (let (($x85 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x64 (and $x85 $x237)))
 (let (($x227 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x181 (and true $x227)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv4 32))) (bvult ?x69 (bvsub ?x69 (_ bv4 32))))))
 (let (($x235 (and (and (and $x156 $x181) $x85) $x64)))
 (let (($x88 (= true $x235)))
 (let (($x93 (= (_ bv0 32) ?x86)))
 (let (($x252 (not $x93)))
 (let (($x289 (=> $x252 $x88)))
 (let (($x240 (= (bvand ?x312 (_ bv4294967280 32)) ?x312)))
 (let (($x311 (= (bvand ?x110 (_ bv4294967292 32)) ?x110)))
 (let (($x196 (and $x311 $x240)))
 (let (($x246 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x110 (bvsub ?x110 (_ bv8 32))) (bvult ?x110 (bvsub ?x110 (_ bv8 32))))))
 (let (($x260 (and (and (and $x246 $x181) $x311) $x196)))
 (let (($x109 (= true $x260)))
 (let (($x211 (=> $x93 $x109)))
 (let (($x272 (and $x211 $x289)))
 (let (($x111 (= true $x272)))
 (let (($x297 (or $x93 $x252)))
 (let (($x42 (not $x33)))
 (let (($x105 (and $x42 $x297)))
 (let (($x254 (=> $x105 $x111)))
 (let (($x193 (=> $x42 $x88)))
 (let (($x247 (= input.dst.llvm-%t ?x191)))
 (let (($x143 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x165 (and $x143 $x247)))
 (let ((?x161 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x161)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x292 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (and $x151 $x292)))
 (let (($x126 (and $x167 $x108)))
 (let (($x178 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x178 $x126)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x162 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x189 $x145)))))))
 (let (($x244 (and (and (and $x162 true) $x157) $x165)))
 (let (($x231 (and $x244 $x193)))
 (let (($x296 (and $x231 $x254)))
 (let (($x302 (= $x296 true)))
 (let (($x199 (= $x302 true)))
 (let (($x80 (= $x199 true)))
 (let (($x84 (and $x42 $x93)))
 (let (($x134 (= $x84 true)))
 (let (($x190 (= $x134 true)))
 (let (($x170 (= $x190 true)))
 (let (($x137 (= $x143 true)))
 (let (($x179 (= $x137 true)))
 (let (($x152 (= $x179 true)))
 (let (($x120 (and $x152 $x170)))
 (let (($x279 (and $x120 $x80)))
 (let (($x286 (and $x279 $x217)))
 (let (($x291 (and $x286 $x264)))
 (let (($x62 (and $x291 $x338)))
 (let (($x349 (and $x62 $x360)))
 (let (($x426 (and $x349 $x432)))
 (let (($x436 (and $x426 $x439)))
 (let (($x129 (and $x119 $x142)))
 (let (($x392 (and $x129 $x436)))
 (let (($x123 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x452 (and $x123 $x392)))
 (let (($x453 (and $x118 $x452)))
 (let (($x447 (and $x118 $x453)))
 (let (($x130 (bvugt ?x110 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x121 (=> (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x130)))))))
 (let (($x169 (=> (and $x84 (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x95 $x130)))))))
 (let (($x48 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x5 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x48)))))))
 (let (($x27 (=> (and $x42 (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x58 $x48)))))))
 (let (($x19 (and $x27 $x169)))
 (let (($x433 (and $x19 $x447)))
 (let (($x65 (=> $x433 $x44)))
 (not $x65))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2125X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x175 (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv8 32))))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x185 (concat ?x52 (concat ?x55 ?x113))))
 (let (($x72 (= ?x185 ?x185)))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x222 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x274 (concat ?x218 (concat ?x316 ?x245))))
 (let (($x242 (= (_ bv0 32) ?x274)))
 (let ((?x224 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x306 (bvuge ?x224 (_ bv1 32))))
 (let (($x419 (=> $x306 $x72)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x409 (concat ?x128 (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv4 32))))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x14 (concat ?x186 (concat ?x34 ?x409))))
 (let (($x467 (= ?x14 ?x14)))
 (let (($x73 (=> $x306 $x467)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2125X))))
 (let ((?x464 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv2 32))) ?x434)))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv3 32))) ?x464)))
 (let (($x398 (= ?x468 ?x468)))
 (let (($x46 (=> $x306 $x398)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x261 (concat ?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x287 (concat ?x208 (concat ?x205 ?x261))))
 (let (($x313 (= (_ bv0 32) ?x287)))
 (let ((?x249 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x308 (= ?x249 (_ bv0 32))))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x274 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x274 (_ bv4 32))))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x274 (_ bv4 32)) (_ bv2 32))) ?x451)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x274 (_ bv4 32)) (_ bv3 32))) ?x405)))
 (let (($x56 (= (_ bv0 32) ?x397)))
 (let ((?x446 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x440 (= ?x446 (_ bv0 32))))
 (let (($x430 (= $x440 $x308)))
 (let (($x413 (=> $x306 $x430)))
 (let (($x299 (bvuge ?x249 (_ bv1 32))))
 (let (($x442 (bvuge ?x446 (_ bv1 32))))
 (let (($x400 (= $x442 $x299)))
 (let (($x466 (=> $x306 $x400)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x281 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (= ?x281 (_ bv0 32))))
 (let (($x234 (= ?x224 (_ bv0 32))))
 (let (($x438 (= $x234 $x321)))
 (let (($x267 (bvuge ?x281 (_ bv1 32))))
 (let (($x394 (= $x306 $x267)))
 (let (($x431 (= ?x274 input.dst.llvm-%t)))
 (let (($x123 (= false false)))
 (let (($x125 (and $x306 $x440)))
 (let (($x461 (=> $x125 $x123)))
 (let (($x10 (=> $x234 $x123)))
 (let (($x174 (and (and (and (and (and (and $x10 $x461) $x431) $x394) $x438) $x466) $x413)))
 (let (($x97 (and (and (and $x174 $x46) $x73) $x419)))
 (let (($x411 (= true true)))
 (let (($x131 (and $x411 $x97)))
 (let (($x423 (= $x131 true)))
 (let (($x399 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x265 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x463 (= $x265 $x399)))
 (let (($x329 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x408 (=> $x329 $x123)))
 (let (($x379 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x102 (= $x329 $x379)))
 (let (($x425 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x410 (= $x371 $x425)))
 (let (($x318 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x406 (=> $x318 $x123)))
 (let (($x456 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x382 (= $x318 $x456)))
 (let (($x462 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x452 (and (and (and (and (and (and $x462 $x382) $x406) $x410) $x102) $x408) $x463)))
 (let (($x453 (= $x452 true)))
 (let (($x457 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x337 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x362 (= $x337 $x457)))
 (let (($x229 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x356 (=> $x229 $x362)))
 (let (($x365 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x449 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x368 (= $x449 $x365)))
 (let (($x458 (=> $x229 $x368)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x376 $x325)))
 (let (($x372 (=> $x229 $x336)))
 (let (($x393 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x353 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x353 $x393)))
 (let (($x380 (=> $x229 $x383)))
 (let (($x326 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x374 (=> $x229 $x326)))
 (let (($x384 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x100 (= $x229 $x384)))
 (let (($x258 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x258 $x123)))
 (let (($x364 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x386 (= $x258 $x364)))
 (let (($x414 (and (and (and (and (and (and $x386 $x7) $x100) $x374) $x380) $x372) $x458)))
 (let (($x450 (and $x414 $x356)))
 (let (($x415 (= $x450 true)))
 (let (($x324 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x375 (= $x229 $x324)))
 (let (($x355 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x390 (= $x258 $x355)))
 (let (($x350 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x213 (= $x275 $x350)))
 (let (($x115 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x345 (=> $x115 $x123)))
 (let (($x352 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x366 (= $x115 $x352)))
 (let (($x132 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x25 (and (and (and (and (and (and $x132 $x366) $x345) $x213) $x390) $x7) $x375)))
 (let (($x346 (= $x25 true)))
 (let (($x70 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x335 (= $x265 $x70)))
 (let (($x314 (=> $x275 $x335)))
 (let (($x322 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x301 (= $x329 $x322)))
 (let (($x340 (=> $x275 $x301)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x371 $x315)))
 (let (($x280 (=> $x275 $x35)))
 (let (($x343 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x330 (= $x318 $x343)))
 (let (($x347 (=> $x275 $x330)))
 (let (($x293 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x309 (=> $x275 $x293)))
 (let (($x331 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x305 (= $x275 $x331)))
 (let (($x339 (and (and (= $x115 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x345) $x305)))
 (let (($x104 (and (and (and (and (and $x339 $x309) $x347) $x280) $x340) $x314)))
 (let (($x358 (= $x104 true)))
 (let (($x277 (= $x229 $x306)))
 (let (($x129 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x225 (=> $x129 $x277)))
 (let (($x276 (= $x258 $x234)))
 (let (($x221 (=> $x129 $x276)))
 (let (($x256 (= $x275 $x299)))
 (let (($x285 (=> $x129 $x256)))
 (let (($x257 (= $x115 $x308)))
 (let (($x310 (=> $x129 $x257)))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x282)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x268)))
 (let (($x223 (= input.spec-%var-t-0.2.0 ?x94)))
 (let (($x239 (=> $x129 $x223)))
 (let (($x259 (= $x129 $x267)))
 (let (($x200 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x290 (=> $x200 $x123)))
 (let (($x319 (= $x200 $x321)))
 (let (($x283 (and (and (and (and (and (and $x319 $x290) $x259) $x239) $x310) $x285) $x221)))
 (let (($x15 (and $x283 $x225)))
 (let (($x348 (= $x15 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x244 (concat ?x165 (concat ?x154 (concat ?x177 ?x148)))))
 (let (($x204 (= ?x244 input.dst.llvm-%t)))
 (let (($x230 (= $x204 true)))
 (let (($x295 (= $x230 true)))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x36 (concat ?x76 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x22 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x78 (bvadd ?x22 (_ bv3 32))))
 (let ((?x84 (concat (select input.dst.llvm-mem ?x78) (concat ?x71 ?x36))))
 (let (($x88 (= (bvand ?x84 (_ bv4294967280 32)) ?x84)))
 (let (($x64 (= (bvand ?x22 (_ bv4294967292 32)) ?x22)))
 (let (($x193 (and $x64 $x88)))
 (let (($x85 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x228 (and true $x85)))
 (let (($x227 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x22 (bvsub ?x22 (_ bv4 32))) (bvult ?x22 (bvsub ?x22 (_ bv4 32))))))
 (let (($x297 (and (and (and $x227 $x228) $x64) $x193)))
 (let (($x105 (= true $x297)))
 (let (($x98 (= (_ bv0 32) ?x84)))
 (let (($x77 (not $x98)))
 (let (($x302 (=> $x77 $x105)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x250 (concat ?x183 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x96 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x96 (_ bv3 32))))
 (let ((?x196 (concat (select input.dst.llvm-mem ?x54) (concat ?x312 ?x250))))
 (let (($x109 (= (bvand ?x196 (_ bv4294967280 32)) ?x196)))
 (let (($x87 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x211 (and $x87 $x109)))
 (let (($x210 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv8 32))) (bvult ?x96 (bvsub ?x96 (_ bv8 32))))))
 (let (($x111 (and (and (and $x210 $x228) $x87) $x211)))
 (let (($x254 (= true $x111)))
 (let (($x296 (=> $x98 $x254)))
 (let (($x199 (and $x296 $x302)))
 (let (($x80 (= true $x199)))
 (let (($x232 (or $x98 $x77)))
 (let (($x42 (not $x33)))
 (let (($x246 (and $x42 $x232)))
 (let (($x279 (=> $x246 $x80)))
 (let (($x278 (=> $x42 $x105)))
 (let (($x172 (= input.dst.llvm-%t ?x244)))
 (let (($x152 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x67 (and $x152 $x172)))
 (let ((?x157 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x149 (= (_ bv0 32) ?x157)))
 (let ((?x161 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x161)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x167 $x108)))
 (let (($x6 (and $x126 $x149)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x180 (and $x145 $x6)))
 (let (($x162 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x292 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x162)))))))
 (let (($x156 (and (and (and $x292 true) $x180) $x67)))
 (let (($x198 (and $x156 $x278)))
 (let (($x266 (and $x198 $x279)))
 (let (($x269 (= $x266 true)))
 (let (($x217 (= $x269 true)))
 (let (($x286 (= $x217 true)))
 (let (($x120 (= $x33 true)))
 (let (($x214 (= $x120 true)))
 (let (($x122 (= $x214 true)))
 (let (($x134 (= $x152 true)))
 (let (($x190 (= $x134 true)))
 (let (($x170 (= $x190 true)))
 (let (($x146 (and $x170 $x122)))
 (let (($x138 (and $x146 $x286)))
 (let (($x118 (and $x138 $x295)))
 (let (($x317 (and $x118 $x348)))
 (let (($x323 (and $x317 $x358)))
 (let (($x361 (and $x323 $x346)))
 (let (($x387 (and $x361 $x415)))
 (let (($x447 (and $x387 $x453)))
 (let (($x143 (and $x129 $x115)))
 (let (($x433 (and $x143 $x447)))
 (let (($x144 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x103 (and $x144 $x433)))
 (let (($x428 (and $x123 $x103)))
 (let (($x441 (and $x123 $x428)))
 (let (($x99 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x176 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x99)))))))
 (let (($x110 (and $x42 $x98)))
 (let (($x136 (=> (and $x110 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x135 $x99)))))))
 (let (($x37 (bvugt ?x22 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x78)))
 (let (($x40 (=> (bvule ?x22 (bvsub (bvadd ?x22 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x37)))))))
 (let (($x49 (=> (and $x42 (bvule ?x22 (bvsub (bvadd ?x22 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x29 $x37)))))))
 (let (($x31 (and $x49 $x136)))
 (let (($x427 (and $x31 $x441)))
 (let (($x159 (=> $x427 $x423)))
 (not $x159)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2125X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x175 (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv8 32))))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x185 (concat ?x52 (concat ?x55 ?x113))))
 (let (($x72 (= ?x185 ?x185)))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x222 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x274 (concat ?x218 (concat ?x316 ?x245))))
 (let (($x242 (= (_ bv0 32) ?x274)))
 (let ((?x224 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x306 (bvuge ?x224 (_ bv1 32))))
 (let (($x419 (=> $x306 $x72)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x409 (concat ?x128 (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv4 32))))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2125X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x14 (concat ?x186 (concat ?x34 ?x409))))
 (let (($x467 (= ?x14 ?x14)))
 (let (($x73 (=> $x306 $x467)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2125X))))
 (let ((?x464 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv2 32))) ?x434)))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2125X (_ bv3 32))) ?x464)))
 (let (($x398 (= ?x468 ?x468)))
 (let (($x46 (=> $x306 $x398)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x261 (concat ?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x287 (concat ?x208 (concat ?x205 ?x261))))
 (let (($x313 (= (_ bv0 32) ?x287)))
 (let ((?x249 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x308 (= ?x249 (_ bv0 32))))
 (let ((?x451 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x274 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x274 (_ bv4 32))))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x274 (_ bv4 32)) (_ bv2 32))) ?x451)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x274 (_ bv4 32)) (_ bv3 32))) ?x405)))
 (let (($x56 (= (_ bv0 32) ?x397)))
 (let ((?x446 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x440 (= ?x446 (_ bv0 32))))
 (let (($x430 (= $x440 $x308)))
 (let (($x413 (=> $x306 $x430)))
 (let (($x299 (bvuge ?x249 (_ bv1 32))))
 (let (($x442 (bvuge ?x446 (_ bv1 32))))
 (let (($x400 (= $x442 $x299)))
 (let (($x466 (=> $x306 $x400)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x281 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (= ?x281 (_ bv0 32))))
 (let (($x234 (= ?x224 (_ bv0 32))))
 (let (($x438 (= $x234 $x321)))
 (let (($x267 (bvuge ?x281 (_ bv1 32))))
 (let (($x394 (= $x306 $x267)))
 (let (($x431 (= ?x274 input.dst.llvm-%t)))
 (let (($x123 (= false false)))
 (let (($x125 (and $x306 $x440)))
 (let (($x461 (=> $x125 $x123)))
 (let (($x10 (=> $x234 $x123)))
 (let (($x174 (and (and (and (and (and (and $x10 $x461) $x431) $x394) $x438) $x466) $x413)))
 (let (($x97 (and (and (and $x174 $x46) $x73) $x419)))
 (let (($x411 (= true true)))
 (let (($x131 (and $x411 $x97)))
 (let (($x423 (= $x131 true)))
 (let (($x399 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x265 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x463 (= $x265 $x399)))
 (let (($x329 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x408 (=> $x329 $x123)))
 (let (($x379 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x102 (= $x329 $x379)))
 (let (($x425 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x410 (= $x371 $x425)))
 (let (($x318 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x406 (=> $x318 $x123)))
 (let (($x456 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x382 (= $x318 $x456)))
 (let (($x462 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x452 (and (and (and (and (and (and $x462 $x382) $x406) $x410) $x102) $x408) $x463)))
 (let (($x453 (= $x452 true)))
 (let (($x457 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x337 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x362 (= $x337 $x457)))
 (let (($x229 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x356 (=> $x229 $x362)))
 (let (($x365 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x449 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x368 (= $x449 $x365)))
 (let (($x458 (=> $x229 $x368)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x376 $x325)))
 (let (($x372 (=> $x229 $x336)))
 (let (($x393 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x353 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x353 $x393)))
 (let (($x380 (=> $x229 $x383)))
 (let (($x326 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x374 (=> $x229 $x326)))
 (let (($x384 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x100 (= $x229 $x384)))
 (let (($x258 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x258 $x123)))
 (let (($x364 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x386 (= $x258 $x364)))
 (let (($x414 (and (and (and (and (and (and $x386 $x7) $x100) $x374) $x380) $x372) $x458)))
 (let (($x450 (and $x414 $x356)))
 (let (($x415 (= $x450 true)))
 (let (($x324 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x375 (= $x229 $x324)))
 (let (($x355 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x390 (= $x258 $x355)))
 (let (($x350 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x213 (= $x275 $x350)))
 (let (($x115 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x345 (=> $x115 $x123)))
 (let (($x352 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x366 (= $x115 $x352)))
 (let (($x132 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x25 (and (and (and (and (and (and $x132 $x366) $x345) $x213) $x390) $x7) $x375)))
 (let (($x346 (= $x25 true)))
 (let (($x70 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x335 (= $x265 $x70)))
 (let (($x314 (=> $x275 $x335)))
 (let (($x322 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x301 (= $x329 $x322)))
 (let (($x340 (=> $x275 $x301)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x371 $x315)))
 (let (($x280 (=> $x275 $x35)))
 (let (($x343 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x330 (= $x318 $x343)))
 (let (($x347 (=> $x275 $x330)))
 (let (($x293 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x309 (=> $x275 $x293)))
 (let (($x331 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x305 (= $x275 $x331)))
 (let (($x339 (and (and (= $x115 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x345) $x305)))
 (let (($x104 (and (and (and (and (and $x339 $x309) $x347) $x280) $x340) $x314)))
 (let (($x358 (= $x104 true)))
 (let (($x277 (= $x229 $x306)))
 (let (($x129 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x225 (=> $x129 $x277)))
 (let (($x276 (= $x258 $x234)))
 (let (($x221 (=> $x129 $x276)))
 (let (($x256 (= $x275 $x299)))
 (let (($x285 (=> $x129 $x256)))
 (let (($x257 (= $x115 $x308)))
 (let (($x310 (=> $x129 $x257)))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x282)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x268)))
 (let (($x223 (= input.spec-%var-t-0.2.0 ?x94)))
 (let (($x239 (=> $x129 $x223)))
 (let (($x259 (= $x129 $x267)))
 (let (($x200 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x290 (=> $x200 $x123)))
 (let (($x319 (= $x200 $x321)))
 (let (($x283 (and (and (and (and (and (and $x319 $x290) $x259) $x239) $x310) $x285) $x221)))
 (let (($x15 (and $x283 $x225)))
 (let (($x348 (= $x15 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x244 (concat ?x165 (concat ?x154 (concat ?x177 ?x148)))))
 (let (($x204 (= ?x244 input.dst.llvm-%t)))
 (let (($x230 (= $x204 true)))
 (let (($x295 (= $x230 true)))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x36 (concat ?x76 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x22 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x78 (bvadd ?x22 (_ bv3 32))))
 (let ((?x84 (concat (select input.dst.llvm-mem ?x78) (concat ?x71 ?x36))))
 (let (($x88 (= (bvand ?x84 (_ bv4294967280 32)) ?x84)))
 (let (($x64 (= (bvand ?x22 (_ bv4294967292 32)) ?x22)))
 (let (($x193 (and $x64 $x88)))
 (let (($x85 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x228 (and true $x85)))
 (let (($x227 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x22 (bvsub ?x22 (_ bv4 32))) (bvult ?x22 (bvsub ?x22 (_ bv4 32))))))
 (let (($x297 (and (and (and $x227 $x228) $x64) $x193)))
 (let (($x105 (= true $x297)))
 (let (($x98 (= (_ bv0 32) ?x84)))
 (let (($x77 (not $x98)))
 (let (($x302 (=> $x77 $x105)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x250 (concat ?x183 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x96 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x96 (_ bv3 32))))
 (let ((?x196 (concat (select input.dst.llvm-mem ?x54) (concat ?x312 ?x250))))
 (let (($x109 (= (bvand ?x196 (_ bv4294967280 32)) ?x196)))
 (let (($x87 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x211 (and $x87 $x109)))
 (let (($x210 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv8 32))) (bvult ?x96 (bvsub ?x96 (_ bv8 32))))))
 (let (($x111 (and (and (and $x210 $x228) $x87) $x211)))
 (let (($x254 (= true $x111)))
 (let (($x296 (=> $x98 $x254)))
 (let (($x199 (and $x296 $x302)))
 (let (($x80 (= true $x199)))
 (let (($x232 (or $x98 $x77)))
 (let (($x42 (not $x33)))
 (let (($x246 (and $x42 $x232)))
 (let (($x279 (=> $x246 $x80)))
 (let (($x278 (=> $x42 $x105)))
 (let (($x172 (= input.dst.llvm-%t ?x244)))
 (let (($x152 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x67 (and $x152 $x172)))
 (let ((?x157 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x149 (= (_ bv0 32) ?x157)))
 (let ((?x161 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x161)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x167 $x108)))
 (let (($x6 (and $x126 $x149)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x180 (and $x145 $x6)))
 (let (($x162 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x292 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x162)))))))
 (let (($x156 (and (and (and $x292 true) $x180) $x67)))
 (let (($x198 (and $x156 $x278)))
 (let (($x266 (and $x198 $x279)))
 (let (($x269 (= $x266 true)))
 (let (($x217 (= $x269 true)))
 (let (($x286 (= $x217 true)))
 (let (($x120 (= $x33 true)))
 (let (($x214 (= $x120 true)))
 (let (($x122 (= $x214 true)))
 (let (($x134 (= $x152 true)))
 (let (($x190 (= $x134 true)))
 (let (($x170 (= $x190 true)))
 (let (($x146 (and $x170 $x122)))
 (let (($x138 (and $x146 $x286)))
 (let (($x118 (and $x138 $x295)))
 (let (($x317 (and $x118 $x348)))
 (let (($x323 (and $x317 $x358)))
 (let (($x361 (and $x323 $x346)))
 (let (($x387 (and $x361 $x415)))
 (let (($x447 (and $x387 $x453)))
 (let (($x143 (and $x129 $x115)))
 (let (($x433 (and $x143 $x447)))
 (let (($x144 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x103 (and $x144 $x433)))
 (let (($x428 (and $x123 $x103)))
 (let (($x441 (and $x123 $x428)))
 (let (($x99 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x176 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x99)))))))
 (let (($x110 (and $x42 $x98)))
 (let (($x136 (=> (and $x110 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x135 $x99)))))))
 (let (($x37 (bvugt ?x22 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x78)))
 (let (($x40 (=> (bvule ?x22 (bvsub (bvadd ?x22 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x37)))))))
 (let (($x49 (=> (and $x42 (bvule ?x22 (bvsub (bvadd ?x22 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x29 $x37)))))))
 (let (($x31 (and $x49 $x136)))
 (let (($x427 (and $x31 $x441)))
 (let (($x159 (=> $x427 $x423)))
 (not $x159)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2157X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x464 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x468 (concat ?x464 (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv8 32))))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x186 (concat ?x141 (concat ?x46 ?x468))))
 (let (($x20 (= ?x186 ?x186)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x319 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x319 (_ bv1 32))))
 (let (($x34 (=> $x259 $x20)))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x430 (concat ?x420 (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv4 32))))))
 (let ((?x174 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x448 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x448 (concat ?x174 ?x430))))
 (let (($x401 (= ?x402 ?x402)))
 (let (($x422 (=> $x259 $x401)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2157X))))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv2 32))) ?x125)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv3 32))) ?x431)))
 (let (($x438 (= ?x117 ?x117)))
 (let (($x59 (=> $x259 $x438)))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x76 (concat ?x68 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x82 (bvadd ?x60 (_ bv3 32))))
 (let ((?x110 (concat (select input.dst.llvm-mem ?x82) (concat ?x86 ?x76))))
 (let (($x53 (= (_ bv0 32) ?x110)))
 (let ((?x403 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x451 (bvuge ?x403 (_ bv1 32))))
 (let (($x405 (= $x259 $x451)))
 (let (($x144 (= false false)))
 (let (($x123 (= ?x319 (_ bv0 32))))
 (let (($x13 (=> $x123 $x144)))
 (let (($x30 (and (and (and (= input.dst.llvm-%t ?x110) (= $x123 (= ?x403 (_ bv0 32)))) $x13) $x405)))
 (let (($x14 (and (and (and $x30 $x59) $x422) $x34)))
 (let (($x445 (= true true)))
 (let (($x467 (and $x445 $x14)))
 (let (($x73 (= $x467 true)))
 (let (($x392 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x340 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x399 (= $x340 $x392)))
 (let (($x354 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x408 (=> $x354 $x144)))
 (let (($x102 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x436 (= $x354 $x102)))
 (let (($x439 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x417 (= $x371 $x439)))
 (let (($x341 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x410 (=> $x341 $x144)))
 (let (($x444 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x425 (= $x341 $x444)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x103 (and (and (and (and (and (and $x459 $x425) $x410) $x417) $x436) $x408) $x399)))
 (let (($x428 (= $x103 true)))
 (let (($x414 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x458 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x337 (= $x458 $x414)))
 (let (($x221 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x457 (=> $x221 $x337)))
 (let (($x465 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x388 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x365 (= $x388 $x465)))
 (let (($x368 (=> $x221 $x365)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x376 $x325)))
 (let (($x372 (=> $x221 $x336)))
 (let (($x383 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x377 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x377 $x383)))
 (let (($x432 (=> $x221 $x380)))
 (let (($x378 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x363 (=> $x221 $x378)))
 (let (($x370 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x385 (= $x221 $x370)))
 (let (($x298 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x298 $x144)))
 (let (($x100 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x369 (= $x298 $x100)))
 (let (($x421 (and (and (and (and (and (and $x369 $x7) $x385) $x363) $x432) $x372) $x368)))
 (let (($x462 (and $x421 $x457)))
 (let (($x381 (= $x462 true)))
 (let (($x389 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x324 (= $x221 $x389)))
 (let (($x390 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x349 (= $x298 $x390)))
 (let (($x360 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x359 (= $x275 $x360)))
 (let (($x212 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x339 (=> $x212 $x144)))
 (let (($x350 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x213 (= $x212 $x350)))
 (let (($x357 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x364 (and (and (and (and (and (and $x357 $x213) $x339) $x359) $x349) $x7) $x324)))
 (let (($x386 (= $x364 true)))
 (let (($x332 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x265 (= $x340 $x332)))
 (let (($x70 (=> $x275 $x265)))
 (let (($x344 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x322 (= $x354 $x344)))
 (let (($x301 (=> $x275 $x322)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x371 $x315)))
 (let (($x280 (=> $x275 $x35)))
 (let (($x330 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x347 (= $x341 $x330)))
 (let (($x338 (=> $x275 $x347)))
 (let (($x61 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x307 (=> $x275 $x61)))
 (let (($x300 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x327 (= $x275 $x300)))
 (let (($x314 (and (and (= $x212 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x339) $x327)))
 (let (($x132 (and (and (and (and (and $x314 $x307) $x338) $x280) $x301) $x70)))
 (let (($x367 (= $x132 true)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x271 (concat ?x245 (concat ?x255 ?x220))))
 (let (($x274 (= (_ bv0 32) ?x271)))
 (let ((?x242 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x242 (_ bv1 32))))
 (let (($x229 (= $x221 $x283)))
 (let (($x267 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x306 (=> $x267 $x229)))
 (let (($x224 (= ?x242 (_ bv0 32))))
 (let (($x234 (= $x298 $x224)))
 (let (($x276 (=> $x267 $x234)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x313 (concat ?x287 (concat ?x207 ?x262))))
 (let (($x249 (= (_ bv0 32) ?x313)))
 (let ((?x308 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x308 (_ bv1 32))))
 (let (($x256 (= $x275 $x299)))
 (let (($x285 (=> $x267 $x256)))
 (let (($x257 (= ?x308 (_ bv0 32))))
 (let (($x310 (= $x212 $x257)))
 (let (($x264 (=> $x267 $x310)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x184)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x270)))
 (let (($x223 (= input.spec-%var-t-0.2.0 ?x94)))
 (let (($x239 (=> $x267 $x223)))
 (let (($x304 (= $x267 $x259)))
 (let (($x143 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x320 (=> $x143 $x144)))
 (let (($x290 (= $x143 $x123)))
 (let (($x294 (and (and (and (and (and (and $x290 $x320) $x304) $x239) $x264) $x285) $x276)))
 (let (($x351 (and $x294 $x306)))
 (let (($x288 (= $x351 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x67 (concat ?x172 (concat ?x192 (concat ?x173 ?x155)))))
 (let (($x118 (= ?x67 input.dst.llvm-%t)))
 (let (($x200 (= $x118 true)))
 (let (($x281 (= $x200 true)))
 (let (($x297 (= (bvand ?x110 (_ bv4294967280 32)) ?x110)))
 (let (($x88 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x105 (and $x88 $x297)))
 (let (($x237 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x64 (and true $x237)))
 (let (($x107 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv4 32))) (bvult ?x60 (bvsub ?x60 (_ bv4 32))))))
 (let (($x77 (and (and (and $x107 $x64) $x88) $x105)))
 (let (($x232 (= true $x77)))
 (let (($x120 (not $x53)))
 (let (($x279 (=> $x120 $x232)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x183 (concat ?x195 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x130 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x130 (_ bv3 32))))
 (let ((?x260 (concat (select input.dst.llvm-mem ?x23) (concat ?x250 ?x183))))
 (let (($x211 (= (bvand ?x260 (_ bv4294967280 32)) ?x260)))
 (let (($x240 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x111 (and $x240 $x211)))
 (let (($x87 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv8 32))) (bvult ?x130 (bvsub ?x130 (_ bv8 32))))))
 (let (($x302 (and (and (and $x87 $x64) $x240) $x111)))
 (let (($x199 (= true $x302)))
 (let (($x80 (=> $x53 $x199)))
 (let (($x266 (and $x80 $x279)))
 (let (($x269 (= true $x266)))
 (let (($x253 (or $x53 $x120)))
 (let (($x42 (not $x33)))
 (let (($x311 (and $x42 $x253)))
 (let (($x217 (=> $x311 $x269)))
 (let (($x246 (=> $x42 $x232)))
 (let (($x156 (= input.dst.llvm-%t ?x67)))
 (let (($x152 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x273 (and $x152 $x156)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x6)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x126)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (and $x108 $x157)))
 (let (($x168 (and $x149 $x180)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x247 (and $x153 $x168)))
 (let (($x151 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x178 $x151)))))))
 (let (($x75 (and (and (and $x161 true) $x247) $x273)))
 (let (($x248 (and $x75 $x246)))
 (let (($x286 (and $x248 $x217)))
 (let (($x138 (= $x286 true)))
 (let (($x204 (= $x138 true)))
 (let (($x230 (= $x204 true)))
 (let (($x214 (and $x42 $x120)))
 (let (($x122 (= $x214 true)))
 (let (($x146 (= $x122 true)))
 (let (($x147 (= $x146 true)))
 (let (($x134 (= $x152 true)))
 (let (($x190 (= $x134 true)))
 (let (($x170 (= $x190 true)))
 (let (($x150 (and $x170 $x147)))
 (let (($x295 (and $x150 $x230)))
 (let (($x321 (and $x295 $x281)))
 (let (($x345 (and $x321 $x288)))
 (let (($x352 (and $x345 $x367)))
 (let (($x373 (and $x352 $x386)))
 (let (($x456 (and $x373 $x381)))
 (let (($x441 (and $x456 $x428)))
 (let (($x427 (and $x143 $x441)))
 (let (($x140 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x411 (and $x140 $x427)))
 (let (($x10 (and $x144 $x411)))
 (let (($x412 (and $x144 $x10)))
 (let (($x169 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x119 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x96 (and $x42 $x53)))
 (let (($x116 (=> (and $x96 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x27 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x82)))
 (let (($x8 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x27)))))))
 (let (($x63 (=> (and $x42 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x5 $x27)))))))
 (let (($x54 (and $x63 $x116)))
 (let (($x90 (and $x54 $x412)))
 (let (($x26 (=> $x90 $x73)))
 (not $x26))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2157X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x464 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x468 (concat ?x464 (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv8 32))))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x186 (concat ?x141 (concat ?x46 ?x468))))
 (let (($x20 (= ?x186 ?x186)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x319 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x319 (_ bv1 32))))
 (let (($x34 (=> $x259 $x20)))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x430 (concat ?x420 (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv4 32))))))
 (let ((?x174 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x448 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2157X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x448 (concat ?x174 ?x430))))
 (let (($x401 (= ?x402 ?x402)))
 (let (($x422 (=> $x259 $x401)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2157X))))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv2 32))) ?x125)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2157X (_ bv3 32))) ?x431)))
 (let (($x438 (= ?x117 ?x117)))
 (let (($x59 (=> $x259 $x438)))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x76 (concat ?x68 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x82 (bvadd ?x60 (_ bv3 32))))
 (let ((?x110 (concat (select input.dst.llvm-mem ?x82) (concat ?x86 ?x76))))
 (let (($x53 (= (_ bv0 32) ?x110)))
 (let ((?x403 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x451 (bvuge ?x403 (_ bv1 32))))
 (let (($x405 (= $x259 $x451)))
 (let (($x144 (= false false)))
 (let (($x123 (= ?x319 (_ bv0 32))))
 (let (($x13 (=> $x123 $x144)))
 (let (($x30 (and (and (and (= input.dst.llvm-%t ?x110) (= $x123 (= ?x403 (_ bv0 32)))) $x13) $x405)))
 (let (($x14 (and (and (and $x30 $x59) $x422) $x34)))
 (let (($x445 (= true true)))
 (let (($x467 (and $x445 $x14)))
 (let (($x73 (= $x467 true)))
 (let (($x392 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x340 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x399 (= $x340 $x392)))
 (let (($x354 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x408 (=> $x354 $x144)))
 (let (($x102 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x436 (= $x354 $x102)))
 (let (($x439 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x417 (= $x371 $x439)))
 (let (($x341 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x410 (=> $x341 $x144)))
 (let (($x444 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x425 (= $x341 $x444)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x103 (and (and (and (and (and (and $x459 $x425) $x410) $x417) $x436) $x408) $x399)))
 (let (($x428 (= $x103 true)))
 (let (($x414 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x458 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x337 (= $x458 $x414)))
 (let (($x221 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x457 (=> $x221 $x337)))
 (let (($x465 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x388 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x365 (= $x388 $x465)))
 (let (($x368 (=> $x221 $x365)))
 (let (($x325 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x336 (= $x376 $x325)))
 (let (($x372 (=> $x221 $x336)))
 (let (($x383 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x377 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x377 $x383)))
 (let (($x432 (=> $x221 $x380)))
 (let (($x378 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x363 (=> $x221 $x378)))
 (let (($x370 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x385 (= $x221 $x370)))
 (let (($x298 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x7 (=> $x298 $x144)))
 (let (($x100 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x369 (= $x298 $x100)))
 (let (($x421 (and (and (and (and (and (and $x369 $x7) $x385) $x363) $x432) $x372) $x368)))
 (let (($x462 (and $x421 $x457)))
 (let (($x381 (= $x462 true)))
 (let (($x389 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x324 (= $x221 $x389)))
 (let (($x390 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x349 (= $x298 $x390)))
 (let (($x360 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x359 (= $x275 $x360)))
 (let (($x212 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x339 (=> $x212 $x144)))
 (let (($x350 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x213 (= $x212 $x350)))
 (let (($x357 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x364 (and (and (and (and (and (and $x357 $x213) $x339) $x359) $x349) $x7) $x324)))
 (let (($x386 (= $x364 true)))
 (let (($x332 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x265 (= $x340 $x332)))
 (let (($x70 (=> $x275 $x265)))
 (let (($x344 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x322 (= $x354 $x344)))
 (let (($x301 (=> $x275 $x322)))
 (let (($x315 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x35 (= $x371 $x315)))
 (let (($x280 (=> $x275 $x35)))
 (let (($x330 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x347 (= $x341 $x330)))
 (let (($x338 (=> $x275 $x347)))
 (let (($x61 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x307 (=> $x275 $x61)))
 (let (($x300 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x327 (= $x275 $x300)))
 (let (($x314 (and (and (= $x212 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x339) $x327)))
 (let (($x132 (and (and (and (and (and $x314 $x307) $x338) $x280) $x301) $x70)))
 (let (($x367 (= $x132 true)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x271 (concat ?x245 (concat ?x255 ?x220))))
 (let (($x274 (= (_ bv0 32) ?x271)))
 (let ((?x242 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x242 (_ bv1 32))))
 (let (($x229 (= $x221 $x283)))
 (let (($x267 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x306 (=> $x267 $x229)))
 (let (($x224 (= ?x242 (_ bv0 32))))
 (let (($x234 (= $x298 $x224)))
 (let (($x276 (=> $x267 $x234)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x313 (concat ?x287 (concat ?x207 ?x262))))
 (let (($x249 (= (_ bv0 32) ?x313)))
 (let ((?x308 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x308 (_ bv1 32))))
 (let (($x256 (= $x275 $x299)))
 (let (($x285 (=> $x267 $x256)))
 (let (($x257 (= ?x308 (_ bv0 32))))
 (let (($x310 (= $x212 $x257)))
 (let (($x264 (=> $x267 $x310)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x184)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x270)))
 (let (($x223 (= input.spec-%var-t-0.2.0 ?x94)))
 (let (($x239 (=> $x267 $x223)))
 (let (($x304 (= $x267 $x259)))
 (let (($x143 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x320 (=> $x143 $x144)))
 (let (($x290 (= $x143 $x123)))
 (let (($x294 (and (and (and (and (and (and $x290 $x320) $x304) $x239) $x264) $x285) $x276)))
 (let (($x351 (and $x294 $x306)))
 (let (($x288 (= $x351 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x67 (concat ?x172 (concat ?x192 (concat ?x173 ?x155)))))
 (let (($x118 (= ?x67 input.dst.llvm-%t)))
 (let (($x200 (= $x118 true)))
 (let (($x281 (= $x200 true)))
 (let (($x297 (= (bvand ?x110 (_ bv4294967280 32)) ?x110)))
 (let (($x88 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x105 (and $x88 $x297)))
 (let (($x237 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x64 (and true $x237)))
 (let (($x107 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv4 32))) (bvult ?x60 (bvsub ?x60 (_ bv4 32))))))
 (let (($x77 (and (and (and $x107 $x64) $x88) $x105)))
 (let (($x232 (= true $x77)))
 (let (($x120 (not $x53)))
 (let (($x279 (=> $x120 $x232)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x183 (concat ?x195 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x130 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x23 (bvadd ?x130 (_ bv3 32))))
 (let ((?x260 (concat (select input.dst.llvm-mem ?x23) (concat ?x250 ?x183))))
 (let (($x211 (= (bvand ?x260 (_ bv4294967280 32)) ?x260)))
 (let (($x240 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x111 (and $x240 $x211)))
 (let (($x87 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv8 32))) (bvult ?x130 (bvsub ?x130 (_ bv8 32))))))
 (let (($x302 (and (and (and $x87 $x64) $x240) $x111)))
 (let (($x199 (= true $x302)))
 (let (($x80 (=> $x53 $x199)))
 (let (($x266 (and $x80 $x279)))
 (let (($x269 (= true $x266)))
 (let (($x253 (or $x53 $x120)))
 (let (($x42 (not $x33)))
 (let (($x311 (and $x42 $x253)))
 (let (($x217 (=> $x311 $x269)))
 (let (($x246 (=> $x42 $x232)))
 (let (($x156 (= input.dst.llvm-%t ?x67)))
 (let (($x152 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x273 (and $x152 $x156)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x6)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x126)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (and $x108 $x157)))
 (let (($x168 (and $x149 $x180)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x247 (and $x153 $x168)))
 (let (($x151 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x178 $x151)))))))
 (let (($x75 (and (and (and $x161 true) $x247) $x273)))
 (let (($x248 (and $x75 $x246)))
 (let (($x286 (and $x248 $x217)))
 (let (($x138 (= $x286 true)))
 (let (($x204 (= $x138 true)))
 (let (($x230 (= $x204 true)))
 (let (($x214 (and $x42 $x120)))
 (let (($x122 (= $x214 true)))
 (let (($x146 (= $x122 true)))
 (let (($x147 (= $x146 true)))
 (let (($x134 (= $x152 true)))
 (let (($x190 (= $x134 true)))
 (let (($x170 (= $x190 true)))
 (let (($x150 (and $x170 $x147)))
 (let (($x295 (and $x150 $x230)))
 (let (($x321 (and $x295 $x281)))
 (let (($x345 (and $x321 $x288)))
 (let (($x352 (and $x345 $x367)))
 (let (($x373 (and $x352 $x386)))
 (let (($x456 (and $x373 $x381)))
 (let (($x441 (and $x456 $x428)))
 (let (($x427 (and $x143 $x441)))
 (let (($x140 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x411 (and $x140 $x427)))
 (let (($x10 (and $x144 $x411)))
 (let (($x412 (and $x144 $x10)))
 (let (($x169 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x119 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x96 (and $x42 $x53)))
 (let (($x116 (=> (and $x96 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x27 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x82)))
 (let (($x8 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x27)))))))
 (let (($x63 (=> (and $x42 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x5 $x27)))))))
 (let (($x54 (and $x63 $x116)))
 (let (($x90 (and $x54 $x412)))
 (let (($x26 (=> $x90 $x73)))
 (not $x26))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2188X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x398 (concat ?x141 (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv8 32))))))
 (let ((?x434 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x468 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x18 (concat ?x468 (concat ?x434 ?x398))))
 (let (($x186 (= ?x18 ?x18)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x320 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x320 (_ bv1 32))))
 (let (($x20 (=> $x225 $x186)))
 (let ((?x413 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x174 (concat ?x413 (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv4 32))))))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x460 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x460 (concat ?x420 ?x174))))
 (let (($x401 (= ?x402 ?x402)))
 (let (($x422 (=> $x225 $x401)))
 (let ((?x446 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2188X))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv2 32))) ?x446)))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv3 32))) ?x125)))
 (let (($x59 (= ?x438 ?x438)))
 (let (($x409 (=> $x225 $x59)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x241 (concat ?x183 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x99 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x19 (bvadd ?x99 (_ bv3 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem ?x19) (concat ?x109 ?x241))))
 (let (($x13 (= (_ bv0 32) ?x302)))
 (let ((?x128 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x128 (_ bv1 32))))
 (let (($x397 (= $x225 $x30)))
 (let (($x451 (= ?x128 (_ bv0 32))))
 (let (($x277 (= ?x320 (_ bv0 32))))
 (let (($x405 (= $x277 $x451)))
 (let (($x14 (and (and (=> $x277 (= false false)) (= input.dst.llvm-%t ?x302)) $x405)))
 (let (($x112 (and (and (and (and $x14 $x397) $x409) $x422) $x20)))
 (let (($x435 (= true true)))
 (let (($x45 (and $x435 $x112)))
 (let (($x69 (= $x45 true)))
 (let (($x408 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x322 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x433 (= $x322 $x408)))
 (let (($x140 (= false false)))
 (let (($x323 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x447 (=> $x323 $x140)))
 (let (($x102 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x436 (= $x323 $x102)))
 (let (($x417 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x358 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x453 (= $x358 $x417)))
 (let (($x341 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x439 (=> $x341 $x140)))
 (let (($x410 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x452 (= $x341 $x410)))
 (let (($x425 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x427 (and (and (and (and (and (and $x425 $x452) $x439) $x453) $x436) $x447) $x433)))
 (let (($x411 (= $x427 true)))
 (let (($x368 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x365 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x421 (= $x365 $x368)))
 (let (($x234 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x458 (=> $x234 $x421)))
 (let (($x388 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x387 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x449 (= $x387 $x388)))
 (let (($x465 (=> $x234 $x449)))
 (let (($x376 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x415 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x415 $x376)))
 (let (($x336 (=> $x234 $x325)))
 (let (($x383 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x377 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x377 $x383)))
 (let (($x432 (=> $x234 $x380)))
 (let (($x363 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x450 (=> $x234 $x363)))
 (let (($x356 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x326 (= $x234 $x356)))
 (let (($x317 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x361 (=> $x317 $x140)))
 (let (($x370 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x385 (= $x317 $x370)))
 (let (($x456 (and (and (and (and (and (and $x385 $x361) $x326) $x450) $x432) $x336) $x465)))
 (let (($x382 (and $x456 $x458)))
 (let (($x459 (= $x382 true)))
 (let (($x7 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x391 (= $x234 $x7)))
 (let (($x390 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x349 (= $x317 $x390)))
 (let (($x359 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x348 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x346 (= $x348 $x359)))
 (let (($x212 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x212 $x140)))
 (let (($x25 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x360 (= $x212 $x25)))
 (let (($x213 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x384 (and (and (and (and (and (and $x213 $x360) $x327) $x346) $x349) $x361) $x391)))
 (let (($x100 (= $x384 true)))
 (let (($x301 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x51 (= $x322 $x301)))
 (let (($x340 (=> $x348 $x51)))
 (let (($x354 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x329 (= $x323 $x354)))
 (let (($x344 (=> $x348 $x329)))
 (let (($x371 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x358 $x371)))
 (let (($x35 (=> $x348 $x315)))
 (let (($x330 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x347 (= $x341 $x330)))
 (let (($x338 (=> $x348 $x347)))
 (let (($x307 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x104 (=> $x348 $x307)))
 (let (($x314 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x293 (= $x348 $x314)))
 (let (($x265 (and (and (= $x212 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x327) $x293)))
 (let (($x366 (and (and (and (and (and $x265 $x104) $x338) $x35) $x344) $x340)))
 (let (($x357 (= $x366 true)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x220 (concat ?x333 (concat ?x255 ?x245))))
 (let (($x222 (= (_ bv0 32) ?x220)))
 (let ((?x271 (ite $x222 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (bvuge ?x271 (_ bv1 32))))
 (let (($x294 (= $x234 $x276)))
 (let (($x304 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x221 (=> $x304 $x294)))
 (let (($x274 (= ?x271 (_ bv0 32))))
 (let (($x242 (= $x317 $x274)))
 (let (($x224 (=> $x304 $x242)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x313 (concat ?x261 (concat ?x205 ?x207))))
 (let (($x249 (= (_ bv0 32) ?x313)))
 (let ((?x308 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x308 (_ bv1 32))))
 (let (($x299 (= $x348 $x275)))
 (let (($x256 (=> $x304 $x299)))
 (let (($x257 (= ?x308 (_ bv0 32))))
 (let (($x310 (= $x212 $x257)))
 (let (($x264 (=> $x304 $x310)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x202)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x184)))
 (let (($x239 (= input.spec-%var-t-0.2.0 ?x223)))
 (let (($x15 (=> $x304 $x239)))
 (let (($x282 (= $x304 $x225)))
 (let (($x190 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x259 (=> $x190 $x140)))
 (let (($x267 (= $x190 $x277)))
 (let (($x345 (and (and (and (and (and (and $x267 $x259) $x282) $x15) $x264) $x256) $x224)))
 (let (($x328 (and $x345 $x221)))
 (let (($x331 (= $x328 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x75 (concat ?x273 (concat ?x191 (concat ?x173 ?x192)))))
 (let (($x319 (= ?x75 input.dst.llvm-%t)))
 (let (($x123 (= $x319 true)))
 (let (($x290 (= $x123 true)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x68 (concat ?x71 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x58 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x89 (bvadd ?x58 (_ bv3 32))))
 (let ((?x96 (concat (select input.dst.llvm-mem ?x89) (concat ?x84 ?x68))))
 (let (($x232 (= (bvand ?x96 (_ bv4294967280 32)) ?x96)))
 (let (($x105 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let (($x246 (and $x105 $x232)))
 (let (($x88 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x198 (and true $x88)))
 (let (($x237 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv4 32))) (bvult ?x58 (bvsub ?x58 (_ bv4 32))))))
 (let (($x311 (and (and (and $x237 $x198) $x105) $x246)))
 (let (($x210 (= true $x311)))
 (let (($x95 (= (_ bv0 32) ?x96)))
 (let (($x243 (not $x95)))
 (let (($x204 (=> $x243 $x210)))
 (let (($x80 (= (bvand ?x302 (_ bv4294967280 32)) ?x302)))
 (let (($x312 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x279 (and $x312 $x80)))
 (let (($x83 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv8 32))) (bvult ?x99 (bvsub ?x99 (_ bv8 32))))))
 (let (($x217 (and (and (and $x83 $x198) $x312) $x279)))
 (let (($x286 (= true $x217)))
 (let (($x138 (=> $x95 $x286)))
 (let (($x230 (and $x138 $x204)))
 (let (($x295 (= true $x230)))
 (let (($x87 (or $x95 $x243)))
 (let (($x42 (not $x33)))
 (let (($x254 (and $x42 $x87)))
 (let (($x118 (=> $x254 $x295)))
 (let (($x216 (=> $x42 $x210)))
 (let (($x106 (= input.dst.llvm-%t ?x75)))
 (let (($x214 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x227 (and $x214 $x106)))
 (let ((?x247 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x247)))
 (let ((?x6 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x6)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (and $x149 $x180)))
 (let (($x244 (and $x168 $x209)))
 (let (($x151 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x172 (and $x151 $x244)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x157 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x161)))))))
 (let (($x107 (and (and (and $x157 true) $x172) $x227)))
 (let (($x289 (and $x107 $x216)))
 (let (($x200 (and $x289 $x118)))
 (let (($x281 (= $x200 true)))
 (let (($x321 (= $x281 true)))
 (let (($x115 (= $x321 true)))
 (let (($x130 (and $x42 $x95)))
 (let (($x150 (= $x130 true)))
 (let (($x162 (= $x150 true)))
 (let (($x197 (= $x162 true)))
 (let (($x122 (= $x214 true)))
 (let (($x146 (= $x122 true)))
 (let (($x147 (= $x146 true)))
 (let (($x167 (and $x147 $x197)))
 (let (($x143 (and $x167 $x115)))
 (let (($x144 (and $x143 $x290)))
 (let (($x305 (and $x144 $x331)))
 (let (($x334 (and $x305 $x357)))
 (let (($x369 (and $x334 $x100)))
 (let (($x406 (and $x369 $x459)))
 (let (($x10 (and $x406 $x411)))
 (let (($x412 (and $x190 $x10)))
 (let (($x152 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x90 (and $x152 $x412)))
 (let (($x445 (and $x140 $x90)))
 (let (($x407 (and $x140 $x445)))
 (let (($x136 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x129 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x136)))))))
 (let (($x127 (=> (and $x130 (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x176 $x136)))))))
 (let (($x49 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x81 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x49)))))))
 (let (($x78 (=> (and $x42 (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x40 $x49)))))))
 (let (($x23 (and $x78 $x127)))
 (let (($x403 (and $x23 $x407)))
 (let (($x24 (=> $x403 $x69)))
 (not $x24)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2188X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x398 (concat ?x141 (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv8 32))))))
 (let ((?x434 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x468 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x18 (concat ?x468 (concat ?x434 ?x398))))
 (let (($x186 (= ?x18 ?x18)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x320 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x320 (_ bv1 32))))
 (let (($x20 (=> $x225 $x186)))
 (let ((?x413 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x174 (concat ?x413 (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv4 32))))))
 (let ((?x420 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x460 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2188X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x460 (concat ?x420 ?x174))))
 (let (($x401 (= ?x402 ?x402)))
 (let (($x422 (=> $x225 $x401)))
 (let ((?x446 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2188X))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv2 32))) ?x446)))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2188X (_ bv3 32))) ?x125)))
 (let (($x59 (= ?x438 ?x438)))
 (let (($x409 (=> $x225 $x59)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x241 (concat ?x183 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x99 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x19 (bvadd ?x99 (_ bv3 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem ?x19) (concat ?x109 ?x241))))
 (let (($x13 (= (_ bv0 32) ?x302)))
 (let ((?x128 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x128 (_ bv1 32))))
 (let (($x397 (= $x225 $x30)))
 (let (($x451 (= ?x128 (_ bv0 32))))
 (let (($x277 (= ?x320 (_ bv0 32))))
 (let (($x405 (= $x277 $x451)))
 (let (($x14 (and (and (=> $x277 (= false false)) (= input.dst.llvm-%t ?x302)) $x405)))
 (let (($x112 (and (and (and (and $x14 $x397) $x409) $x422) $x20)))
 (let (($x435 (= true true)))
 (let (($x45 (and $x435 $x112)))
 (let (($x69 (= $x45 true)))
 (let (($x408 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x322 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x433 (= $x322 $x408)))
 (let (($x140 (= false false)))
 (let (($x323 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x447 (=> $x323 $x140)))
 (let (($x102 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x436 (= $x323 $x102)))
 (let (($x417 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x358 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x453 (= $x358 $x417)))
 (let (($x341 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x439 (=> $x341 $x140)))
 (let (($x410 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x452 (= $x341 $x410)))
 (let (($x425 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x427 (and (and (and (and (and (and $x425 $x452) $x439) $x453) $x436) $x447) $x433)))
 (let (($x411 (= $x427 true)))
 (let (($x368 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x365 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x421 (= $x365 $x368)))
 (let (($x234 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x458 (=> $x234 $x421)))
 (let (($x388 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x387 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x449 (= $x387 $x388)))
 (let (($x465 (=> $x234 $x449)))
 (let (($x376 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x415 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x415 $x376)))
 (let (($x336 (=> $x234 $x325)))
 (let (($x383 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x377 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x377 $x383)))
 (let (($x432 (=> $x234 $x380)))
 (let (($x363 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x450 (=> $x234 $x363)))
 (let (($x356 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x326 (= $x234 $x356)))
 (let (($x317 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x361 (=> $x317 $x140)))
 (let (($x370 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x385 (= $x317 $x370)))
 (let (($x456 (and (and (and (and (and (and $x385 $x361) $x326) $x450) $x432) $x336) $x465)))
 (let (($x382 (and $x456 $x458)))
 (let (($x459 (= $x382 true)))
 (let (($x7 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x391 (= $x234 $x7)))
 (let (($x390 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x349 (= $x317 $x390)))
 (let (($x359 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x348 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x346 (= $x348 $x359)))
 (let (($x212 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x212 $x140)))
 (let (($x25 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x360 (= $x212 $x25)))
 (let (($x213 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x384 (and (and (and (and (and (and $x213 $x360) $x327) $x346) $x349) $x361) $x391)))
 (let (($x100 (= $x384 true)))
 (let (($x301 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x51 (= $x322 $x301)))
 (let (($x340 (=> $x348 $x51)))
 (let (($x354 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x329 (= $x323 $x354)))
 (let (($x344 (=> $x348 $x329)))
 (let (($x371 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x358 $x371)))
 (let (($x35 (=> $x348 $x315)))
 (let (($x330 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x347 (= $x341 $x330)))
 (let (($x338 (=> $x348 $x347)))
 (let (($x307 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x104 (=> $x348 $x307)))
 (let (($x314 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x293 (= $x348 $x314)))
 (let (($x265 (and (and (= $x212 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x327) $x293)))
 (let (($x366 (and (and (and (and (and $x265 $x104) $x338) $x35) $x344) $x340)))
 (let (($x357 (= $x366 true)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x220 (concat ?x333 (concat ?x255 ?x245))))
 (let (($x222 (= (_ bv0 32) ?x220)))
 (let ((?x271 (ite $x222 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (bvuge ?x271 (_ bv1 32))))
 (let (($x294 (= $x234 $x276)))
 (let (($x304 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x221 (=> $x304 $x294)))
 (let (($x274 (= ?x271 (_ bv0 32))))
 (let (($x242 (= $x317 $x274)))
 (let (($x224 (=> $x304 $x242)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x313 (concat ?x261 (concat ?x205 ?x207))))
 (let (($x249 (= (_ bv0 32) ?x313)))
 (let ((?x308 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x308 (_ bv1 32))))
 (let (($x299 (= $x348 $x275)))
 (let (($x256 (=> $x304 $x299)))
 (let (($x257 (= ?x308 (_ bv0 32))))
 (let (($x310 (= $x212 $x257)))
 (let (($x264 (=> $x304 $x310)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x202)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x184)))
 (let (($x239 (= input.spec-%var-t-0.2.0 ?x223)))
 (let (($x15 (=> $x304 $x239)))
 (let (($x282 (= $x304 $x225)))
 (let (($x190 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x259 (=> $x190 $x140)))
 (let (($x267 (= $x190 $x277)))
 (let (($x345 (and (and (and (and (and (and $x267 $x259) $x282) $x15) $x264) $x256) $x224)))
 (let (($x328 (and $x345 $x221)))
 (let (($x331 (= $x328 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x75 (concat ?x273 (concat ?x191 (concat ?x173 ?x192)))))
 (let (($x319 (= ?x75 input.dst.llvm-%t)))
 (let (($x123 (= $x319 true)))
 (let (($x290 (= $x123 true)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x68 (concat ?x71 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x58 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x89 (bvadd ?x58 (_ bv3 32))))
 (let ((?x96 (concat (select input.dst.llvm-mem ?x89) (concat ?x84 ?x68))))
 (let (($x232 (= (bvand ?x96 (_ bv4294967280 32)) ?x96)))
 (let (($x105 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let (($x246 (and $x105 $x232)))
 (let (($x88 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x198 (and true $x88)))
 (let (($x237 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv4 32))) (bvult ?x58 (bvsub ?x58 (_ bv4 32))))))
 (let (($x311 (and (and (and $x237 $x198) $x105) $x246)))
 (let (($x210 (= true $x311)))
 (let (($x95 (= (_ bv0 32) ?x96)))
 (let (($x243 (not $x95)))
 (let (($x204 (=> $x243 $x210)))
 (let (($x80 (= (bvand ?x302 (_ bv4294967280 32)) ?x302)))
 (let (($x312 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x279 (and $x312 $x80)))
 (let (($x83 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv8 32))) (bvult ?x99 (bvsub ?x99 (_ bv8 32))))))
 (let (($x217 (and (and (and $x83 $x198) $x312) $x279)))
 (let (($x286 (= true $x217)))
 (let (($x138 (=> $x95 $x286)))
 (let (($x230 (and $x138 $x204)))
 (let (($x295 (= true $x230)))
 (let (($x87 (or $x95 $x243)))
 (let (($x42 (not $x33)))
 (let (($x254 (and $x42 $x87)))
 (let (($x118 (=> $x254 $x295)))
 (let (($x216 (=> $x42 $x210)))
 (let (($x106 (= input.dst.llvm-%t ?x75)))
 (let (($x214 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x227 (and $x214 $x106)))
 (let ((?x247 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x247)))
 (let ((?x6 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x6)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (and $x149 $x180)))
 (let (($x244 (and $x168 $x209)))
 (let (($x151 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x172 (and $x151 $x244)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x157 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x161)))))))
 (let (($x107 (and (and (and $x157 true) $x172) $x227)))
 (let (($x289 (and $x107 $x216)))
 (let (($x200 (and $x289 $x118)))
 (let (($x281 (= $x200 true)))
 (let (($x321 (= $x281 true)))
 (let (($x115 (= $x321 true)))
 (let (($x130 (and $x42 $x95)))
 (let (($x150 (= $x130 true)))
 (let (($x162 (= $x150 true)))
 (let (($x197 (= $x162 true)))
 (let (($x122 (= $x214 true)))
 (let (($x146 (= $x122 true)))
 (let (($x147 (= $x146 true)))
 (let (($x167 (and $x147 $x197)))
 (let (($x143 (and $x167 $x115)))
 (let (($x144 (and $x143 $x290)))
 (let (($x305 (and $x144 $x331)))
 (let (($x334 (and $x305 $x357)))
 (let (($x369 (and $x334 $x100)))
 (let (($x406 (and $x369 $x459)))
 (let (($x10 (and $x406 $x411)))
 (let (($x412 (and $x190 $x10)))
 (let (($x152 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x90 (and $x152 $x412)))
 (let (($x445 (and $x140 $x90)))
 (let (($x407 (and $x140 $x445)))
 (let (($x136 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x129 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x136)))))))
 (let (($x127 (=> (and $x130 (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x176 $x136)))))))
 (let (($x49 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x81 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x49)))))))
 (let (($x78 (=> (and $x42 (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x40 $x49)))))))
 (let (($x23 (and $x78 $x127)))
 (let (($x403 (and $x23 $x407)))
 (let (($x24 (=> $x403 $x69)))
 (not $x24)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2219X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x422 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x26 (concat ?x422 (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv8 32))))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x434 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x434 (concat ?x396 ?x26))))
 (let (($x141 (= ?x404 ?x404)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x283 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x270 (bvuge ?x283 (_ bv1 32))))
 (let (($x454 (=> $x270 $x141)))
 (let ((?x73 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x442 (concat ?x73 (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv4 32))))))
 (let ((?x460 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x448 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x413 (concat ?x448 (concat ?x460 ?x442))))
 (let (($x395 (= ?x413 ?x413)))
 (let (($x174 (=> $x270 $x395)))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2219X))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv2 32))) ?x431)))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv3 32))) ?x56)))
 (let (($x446 (= ?x394 ?x394)))
 (let (($x125 (=> $x270 $x446)))
 (let (($x14 (= $x270 $x270)))
 (let (($x304 (= ?x283 (_ bv0 32))))
 (let (($x405 (= $x304 $x304)))
 (let (($x451 (= input.dst.llvm-%t input.dst.llvm-%t)))
 (let (($x152 (= false false)))
 (let (($x128 (=> $x304 $x152)))
 (let (($x112 (and (and (and (and (and (and $x128 $x451) $x405) $x14) $x125) $x174) $x454)))
 (let (($x13 (= true true)))
 (let (($x45 (and $x13 $x112)))
 (let (($x69 (= $x45 true)))
 (let (($x441 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x408 (= $x344 $x441)))
 (let (($x280 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x447 (=> $x280 $x152)))
 (let (($x436 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x428 (= $x280 $x436)))
 (let (($x103 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x358 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x358 $x103)))
 (let (($x343 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x453 (=> $x343 $x152)))
 (let (($x399 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x417 (= $x343 $x399)))
 (let (($x392 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x90 (and (and (and (and (and (and $x392 $x417) $x453) $x379) $x428) $x447) $x408)))
 (let (($x445 (= $x90 true)))
 (let (($x456 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x465 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x365 (= $x465 $x456)))
 (let (($x224 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x368 (=> $x224 $x365)))
 (let (($x426 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x372 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x388 (= $x372 $x426)))
 (let (($x449 (=> $x224 $x388)))
 (let (($x376 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x415 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x415 $x376)))
 (let (($x336 (=> $x224 $x325)))
 (let (($x380 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x432 (= $x393 $x380)))
 (let (($x462 (=> $x224 $x432)))
 (let (($x457 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x353 (=> $x224 $x457)))
 (let (($x374 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x378 (= $x224 $x374)))
 (let (($x285 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x361 (=> $x285 $x152)))
 (let (($x326 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x337 (= $x285 $x326)))
 (let (($x444 (and (and (and (and (and (and $x337 $x361) $x378) $x353) $x462) $x336) $x449)))
 (let (($x425 (and $x444 $x368)))
 (let (($x463 (= $x425 true)))
 (let (($x373 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x7 (= $x224 $x373)))
 (let (($x349 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x386 (= $x285 $x349)))
 (let (($x364 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x348 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x355 (= $x348 $x364)))
 (let (($x284 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x265 (=> $x284 $x152)))
 (let (($x359 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x346 (= $x284 $x359)))
 (let (($x389 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x370 (and (and (and (and (and (and $x389 $x346) $x265) $x355) $x386) $x361) $x7)))
 (let (($x385 (= $x370 true)))
 (let (($x352 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x322 (= $x344 $x352)))
 (let (($x301 (=> $x348 $x322)))
 (let (($x62 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x354 (= $x280 $x62)))
 (let (($x329 (=> $x348 $x354)))
 (let (($x371 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x358 $x371)))
 (let (($x35 (=> $x348 $x315)))
 (let (($x347 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x338 (= $x343 $x347)))
 (let (($x132 (=> $x348 $x338)))
 (let (($x70 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x318 (=> $x348 $x70)))
 (let (($x309 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x61 (= $x348 $x309)))
 (let (($x340 (and (and (= $x284 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x265) $x61)))
 (let (($x213 (and (and (and (and (and $x340 $x318) $x132) $x35) $x329) $x301)))
 (let (($x375 (= $x213 true)))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x316 (concat ?x333 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x251 (concat ?x245 (concat ?x258 ?x316))))
 (let (($x220 (= (_ bv0 32) ?x251)))
 (let ((?x222 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x222 (_ bv1 32))))
 (let (($x234 (= $x224 $x345)))
 (let (($x229 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x276 (=> $x229 $x234)))
 (let (($x271 (= ?x222 (_ bv0 32))))
 (let (($x274 (= $x285 $x271)))
 (let (($x242 (=> $x229 $x274)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x287 (concat ?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x249 (concat ?x313 (concat ?x201 ?x287))))
 (let (($x308 (= (_ bv0 32) ?x249)))
 (let ((?x257 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x257 (_ bv1 32))))
 (let (($x299 (= $x348 $x275)))
 (let (($x256 (=> $x229 $x299)))
 (let (($x310 (= ?x257 (_ bv0 32))))
 (let (($x264 (= $x284 $x310)))
 (let (($x351 (=> $x229 $x264)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x303)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x184)))
 (let (($x306 (= input.spec-%var-t-0.2.0 ?x15)))
 (let (($x342 (=> $x229 $x306)))
 (let (($x94 (= $x229 $x270)))
 (let (($x146 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x282 (=> $x146 $x152)))
 (let (($x225 (= $x146 $x304)))
 (let (($x339 (and (and (and (and (and (and $x225 $x282) $x94) $x342) $x351) $x256) $x242)))
 (let (($x335 (and $x339 $x276)))
 (let (($x300 (= $x335 true)))
 (let ((?x173 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x228 (concat ?x85 (concat ?x106 (concat ?x155 ?x173)))))
 (let (($x277 (= ?x228 input.dst.llvm-%t)))
 (let (($x267 (= $x277 true)))
 (let (($x140 (= $x267 true)))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x71 (concat ?x86 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x29 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x92 (bvadd ?x29 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x92) (concat ?x110 ?x71))))
 (let (($x289 (= (bvand ?x130 (_ bv4294967280 32)) ?x130)))
 (let (($x210 (= (bvand ?x29 (_ bv4294967292 32)) ?x29)))
 (let (($x243 (and $x210 $x289)))
 (let (($x77 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x232 (and true $x77)))
 (let (($x248 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x29 (bvsub ?x29 (_ bv4 32))) (bvult ?x29 (bvsub ?x29 (_ bv4 32))))))
 (let (($x240 (and (and (and $x248 $x232) $x210) $x243)))
 (let (($x272 (= true $x240)))
 (let (($x135 (= (_ bv0 32) ?x130)))
 (let (($x83 (not $x135)))
 (let (($x115 (=> $x83 $x272)))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x302 (concat ?x211 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x169 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x169 (_ bv3 32))))
 (let ((?x286 (concat (select input.dst.llvm-mem ?x31) (concat ?x80 ?x302))))
 (let (($x204 (= (bvand ?x286 (_ bv4294967280 32)) ?x286)))
 (let (($x183 (= (bvand ?x169 (_ bv4294967292 32)) ?x169)))
 (let (($x230 (and $x183 $x204)))
 (let (($x109 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x169 (bvsub ?x169 (_ bv8 32))) (bvult ?x169 (bvsub ?x169 (_ bv8 32))))))
 (let (($x200 (and (and (and $x109 $x232) $x183) $x230)))
 (let (($x281 (= true $x200)))
 (let (($x321 (=> $x135 $x281)))
 (let (($x143 (and $x321 $x115)))
 (let (($x319 (= true $x143)))
 (let (($x266 (or $x135 $x83)))
 (let (($x42 (not $x33)))
 (let (($x250 (and $x42 $x266)))
 (let (($x123 (=> $x250 $x319)))
 (let (($x296 (=> $x42 $x272)))
 (let (($x231 (= input.dst.llvm-%t ?x228)))
 (let (($x162 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x236 (and $x162 $x231)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x273 (= (_ bv0 32) ?x156)))
 (let ((?x244 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x244)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x209 $x172)))
 (let (($x177 (and $x171 $x273)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x191 (and $x238 $x177)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x247 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x178)))))))
 (let (($x64 (and (and (and $x247 true) $x191) $x236)))
 (let (($x196 (and $x64 $x296)))
 (let (($x290 (and $x196 $x123)))
 (let (($x144 (= $x290 true)))
 (let (($x134 (= $x144 true)))
 (let (($x190 (= $x134 true)))
 (let (($x187 (= $x33 true)))
 (let (($x126 (= $x187 true)))
 (let (($x189 (= $x126 true)))
 (let (($x197 (= $x162 true)))
 (let (($x167 (= $x197 true)))
 (let (($x292 (= $x167 true)))
 (let (($x145 (and $x292 $x189)))
 (let (($x320 (and $x145 $x190)))
 (let (($x259 (and $x320 $x140)))
 (let (($x327 (and $x259 $x300)))
 (let (($x25 (and $x327 $x375)))
 (let (($x414 (and $x25 $x385)))
 (let (($x410 (and $x414 $x463)))
 (let (($x407 (and $x410 $x445)))
 (let (($x403 (and $x146 $x407)))
 (let (($x214 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x435 (and $x214 $x403)))
 (let (($x416 (and $x152 $x435)))
 (let (($x158 (and $x152 $x416)))
 (let (($x116 (bvugt ?x169 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x179 (=> (bvule ?x169 (bvsub (bvadd ?x169 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x116)))))))
 (let (($x99 (and $x42 $x135)))
 (let (($x142 (=> (and $x99 (bvule ?x169 (bvsub (bvadd ?x169 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x116)))))))
 (let (($x63 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x92)))
 (let (($x47 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x63)))))))
 (let (($x82 (=> (and $x42 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x8 $x63)))))))
 (let (($x19 (and $x82 $x142)))
 (let (($x34 (and $x19 $x158)))
 (let (($x24 (=> $x34 $x69)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2219X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x422 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x26 (concat ?x422 (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv8 32))))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x434 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x434 (concat ?x396 ?x26))))
 (let (($x141 (= ?x404 ?x404)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x283 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x270 (bvuge ?x283 (_ bv1 32))))
 (let (($x454 (=> $x270 $x141)))
 (let ((?x73 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x442 (concat ?x73 (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv4 32))))))
 (let ((?x460 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x448 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2219X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x413 (concat ?x448 (concat ?x460 ?x442))))
 (let (($x395 (= ?x413 ?x413)))
 (let (($x174 (=> $x270 $x395)))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2219X))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv2 32))) ?x431)))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2219X (_ bv3 32))) ?x56)))
 (let (($x446 (= ?x394 ?x394)))
 (let (($x125 (=> $x270 $x446)))
 (let (($x14 (= $x270 $x270)))
 (let (($x304 (= ?x283 (_ bv0 32))))
 (let (($x405 (= $x304 $x304)))
 (let (($x451 (= input.dst.llvm-%t input.dst.llvm-%t)))
 (let (($x152 (= false false)))
 (let (($x128 (=> $x304 $x152)))
 (let (($x112 (and (and (and (and (and (and $x128 $x451) $x405) $x14) $x125) $x174) $x454)))
 (let (($x13 (= true true)))
 (let (($x45 (and $x13 $x112)))
 (let (($x69 (= $x45 true)))
 (let (($x441 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x408 (= $x344 $x441)))
 (let (($x280 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x447 (=> $x280 $x152)))
 (let (($x436 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x428 (= $x280 $x436)))
 (let (($x103 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x358 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x358 $x103)))
 (let (($x343 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x453 (=> $x343 $x152)))
 (let (($x399 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x417 (= $x343 $x399)))
 (let (($x392 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x90 (and (and (and (and (and (and $x392 $x417) $x453) $x379) $x428) $x447) $x408)))
 (let (($x445 (= $x90 true)))
 (let (($x456 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x465 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x365 (= $x465 $x456)))
 (let (($x224 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x368 (=> $x224 $x365)))
 (let (($x426 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x372 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x388 (= $x372 $x426)))
 (let (($x449 (=> $x224 $x388)))
 (let (($x376 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x415 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x325 (= $x415 $x376)))
 (let (($x336 (=> $x224 $x325)))
 (let (($x380 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x432 (= $x393 $x380)))
 (let (($x462 (=> $x224 $x432)))
 (let (($x457 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x353 (=> $x224 $x457)))
 (let (($x374 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x378 (= $x224 $x374)))
 (let (($x285 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x361 (=> $x285 $x152)))
 (let (($x326 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x337 (= $x285 $x326)))
 (let (($x444 (and (and (and (and (and (and $x337 $x361) $x378) $x353) $x462) $x336) $x449)))
 (let (($x425 (and $x444 $x368)))
 (let (($x463 (= $x425 true)))
 (let (($x373 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x7 (= $x224 $x373)))
 (let (($x349 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x386 (= $x285 $x349)))
 (let (($x364 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x348 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x355 (= $x348 $x364)))
 (let (($x284 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x265 (=> $x284 $x152)))
 (let (($x359 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x346 (= $x284 $x359)))
 (let (($x389 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x370 (and (and (and (and (and (and $x389 $x346) $x265) $x355) $x386) $x361) $x7)))
 (let (($x385 (= $x370 true)))
 (let (($x352 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x322 (= $x344 $x352)))
 (let (($x301 (=> $x348 $x322)))
 (let (($x62 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x354 (= $x280 $x62)))
 (let (($x329 (=> $x348 $x354)))
 (let (($x371 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x358 $x371)))
 (let (($x35 (=> $x348 $x315)))
 (let (($x347 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x338 (= $x343 $x347)))
 (let (($x132 (=> $x348 $x338)))
 (let (($x70 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x318 (=> $x348 $x70)))
 (let (($x309 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x61 (= $x348 $x309)))
 (let (($x340 (and (and (= $x284 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))) $x265) $x61)))
 (let (($x213 (and (and (and (and (and $x340 $x318) $x132) $x35) $x329) $x301)))
 (let (($x375 (= $x213 true)))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x316 (concat ?x333 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x251 (concat ?x245 (concat ?x258 ?x316))))
 (let (($x220 (= (_ bv0 32) ?x251)))
 (let ((?x222 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x222 (_ bv1 32))))
 (let (($x234 (= $x224 $x345)))
 (let (($x229 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x276 (=> $x229 $x234)))
 (let (($x271 (= ?x222 (_ bv0 32))))
 (let (($x274 (= $x285 $x271)))
 (let (($x242 (=> $x229 $x274)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x287 (concat ?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x249 (concat ?x313 (concat ?x201 ?x287))))
 (let (($x308 (= (_ bv0 32) ?x249)))
 (let ((?x257 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x257 (_ bv1 32))))
 (let (($x299 (= $x348 $x275)))
 (let (($x256 (=> $x229 $x299)))
 (let (($x310 (= ?x257 (_ bv0 32))))
 (let (($x264 (= $x284 $x310)))
 (let (($x351 (=> $x229 $x264)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x303)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x184)))
 (let (($x306 (= input.spec-%var-t-0.2.0 ?x15)))
 (let (($x342 (=> $x229 $x306)))
 (let (($x94 (= $x229 $x270)))
 (let (($x146 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x282 (=> $x146 $x152)))
 (let (($x225 (= $x146 $x304)))
 (let (($x339 (and (and (and (and (and (and $x225 $x282) $x94) $x342) $x351) $x256) $x242)))
 (let (($x335 (and $x339 $x276)))
 (let (($x300 (= $x335 true)))
 (let ((?x173 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x228 (concat ?x85 (concat ?x106 (concat ?x155 ?x173)))))
 (let (($x277 (= ?x228 input.dst.llvm-%t)))
 (let (($x267 (= $x277 true)))
 (let (($x140 (= $x267 true)))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x71 (concat ?x86 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x29 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x92 (bvadd ?x29 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x92) (concat ?x110 ?x71))))
 (let (($x289 (= (bvand ?x130 (_ bv4294967280 32)) ?x130)))
 (let (($x210 (= (bvand ?x29 (_ bv4294967292 32)) ?x29)))
 (let (($x243 (and $x210 $x289)))
 (let (($x77 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x232 (and true $x77)))
 (let (($x248 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x29 (bvsub ?x29 (_ bv4 32))) (bvult ?x29 (bvsub ?x29 (_ bv4 32))))))
 (let (($x240 (and (and (and $x248 $x232) $x210) $x243)))
 (let (($x272 (= true $x240)))
 (let (($x135 (= (_ bv0 32) ?x130)))
 (let (($x83 (not $x135)))
 (let (($x115 (=> $x83 $x272)))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x302 (concat ?x211 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x169 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x31 (bvadd ?x169 (_ bv3 32))))
 (let ((?x286 (concat (select input.dst.llvm-mem ?x31) (concat ?x80 ?x302))))
 (let (($x204 (= (bvand ?x286 (_ bv4294967280 32)) ?x286)))
 (let (($x183 (= (bvand ?x169 (_ bv4294967292 32)) ?x169)))
 (let (($x230 (and $x183 $x204)))
 (let (($x109 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x169 (bvsub ?x169 (_ bv8 32))) (bvult ?x169 (bvsub ?x169 (_ bv8 32))))))
 (let (($x200 (and (and (and $x109 $x232) $x183) $x230)))
 (let (($x281 (= true $x200)))
 (let (($x321 (=> $x135 $x281)))
 (let (($x143 (and $x321 $x115)))
 (let (($x319 (= true $x143)))
 (let (($x266 (or $x135 $x83)))
 (let (($x42 (not $x33)))
 (let (($x250 (and $x42 $x266)))
 (let (($x123 (=> $x250 $x319)))
 (let (($x296 (=> $x42 $x272)))
 (let (($x231 (= input.dst.llvm-%t ?x228)))
 (let (($x162 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x236 (and $x162 $x231)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x273 (= (_ bv0 32) ?x156)))
 (let ((?x244 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x244)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x209 $x172)))
 (let (($x177 (and $x171 $x273)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x191 (and $x238 $x177)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x247 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x178)))))))
 (let (($x64 (and (and (and $x247 true) $x191) $x236)))
 (let (($x196 (and $x64 $x296)))
 (let (($x290 (and $x196 $x123)))
 (let (($x144 (= $x290 true)))
 (let (($x134 (= $x144 true)))
 (let (($x190 (= $x134 true)))
 (let (($x187 (= $x33 true)))
 (let (($x126 (= $x187 true)))
 (let (($x189 (= $x126 true)))
 (let (($x197 (= $x162 true)))
 (let (($x167 (= $x197 true)))
 (let (($x292 (= $x167 true)))
 (let (($x145 (and $x292 $x189)))
 (let (($x320 (and $x145 $x190)))
 (let (($x259 (and $x320 $x140)))
 (let (($x327 (and $x259 $x300)))
 (let (($x25 (and $x327 $x375)))
 (let (($x414 (and $x25 $x385)))
 (let (($x410 (and $x414 $x463)))
 (let (($x407 (and $x410 $x445)))
 (let (($x403 (and $x146 $x407)))
 (let (($x214 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x435 (and $x214 $x403)))
 (let (($x416 (and $x152 $x435)))
 (let (($x158 (and $x152 $x416)))
 (let (($x116 (bvugt ?x169 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x179 (=> (bvule ?x169 (bvsub (bvadd ?x169 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x116)))))))
 (let (($x99 (and $x42 $x135)))
 (let (($x142 (=> (and $x99 (bvule ?x169 (bvsub (bvadd ?x169 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x116)))))))
 (let (($x63 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x92)))
 (let (($x47 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x63)))))))
 (let (($x82 (=> (and $x42 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x8 $x63)))))))
 (let (($x19 (and $x82 $x142)))
 (let (($x34 (and $x19 $x158)))
 (let (($x24 (=> $x34 $x69)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2677231/query
