==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x7 $x10)))
 (let (($x19 (and $x8 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x7 $x10)))
 (let (($x19 (and $x8 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x14 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x55 (bvadd ?x8 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x55) (concat ?x53 ?x50))))
 (let (($x58 (= (_ bv0 32) ?x57)))
 (let (($x145 (not $x58)))
 (let (($x146 (or $x58 $x145)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x59 (not $x45)))
 (let (($x147 (and $x59 $x146)))
 (let (($x148 (or $x45 $x147)))
 (let (($x149 (= $x148 false)))
 (let (($x150 (= $x149 true)))
 (let (($x137 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x134 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x135 (= $x132 $x134)))
 (let (($x139 (and $x135 $x138)))
 (let (($x140 (= $x139 true)))
 (let (($x126 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x125 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x127 (= $x125 $x126)))
 (let (($x123 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x121 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x121 $x123)))
 (let (($x128 (and $x124 $x127)))
 (let (($x129 (= $x128 true)))
 (let ((?x111 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x111 (_ bv1 32))))
 (let (($x114 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x116 (= $x114 $x115)))
 (let (($x112 (= ?x111 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x113 (= $x110 $x112)))
 (let (($x117 (and $x113 $x116)))
 (let (($x118 (= $x117 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x100 (concat ?x97 ?x95)))))
 (let (($x105 (= ?x104 input.dst.llvm-%t)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let (($x84 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x90 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x59 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x91 (= $x80 true)))
 (let (($x92 (= $x91 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x69 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x60 (and $x59 $x58)))
 (let (($x63 (=> (and $x60 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x64 (= $x63 true)))
 (let (($x76 (= $x64 true)))
 (let (($x77 (= $x76 true)))
 (let ((?x44 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x44)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x16 $x37)))
 (let (($x9 (and $x18 $x6)))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x20 $x9)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x40)))))))
 (let (($x39 (and $x15 $x12)))
 (let (($x34 (= $x39 true)))
 (let (($x5 (= $x34 true)))
 (let (($x30 (= $x5 true)))
 (let (($x78 (and $x30 $x77)))
 (let (($x93 (and $x78 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let (($x119 (and $x108 $x118)))
 (let (($x130 (and $x119 $x129)))
 (let (($x141 (and $x130 $x140)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x142 (and $x46 $x141)))
 (let (($x27 (= false false)))
 (let (($x143 (and $x27 $x142)))
 (let (($x144 (and $x27 $x143)))
 (let (($x151 (=> $x144 $x150)))
 (not $x151))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x14 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x55 (bvadd ?x8 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x55) (concat ?x53 ?x50))))
 (let (($x58 (= (_ bv0 32) ?x57)))
 (let (($x145 (not $x58)))
 (let (($x146 (or $x58 $x145)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x59 (not $x45)))
 (let (($x147 (and $x59 $x146)))
 (let (($x148 (or $x45 $x147)))
 (let (($x149 (= $x148 false)))
 (let (($x150 (= $x149 true)))
 (let (($x137 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x134 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x135 (= $x132 $x134)))
 (let (($x139 (and $x135 $x138)))
 (let (($x140 (= $x139 true)))
 (let (($x126 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x125 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x127 (= $x125 $x126)))
 (let (($x123 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x121 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x121 $x123)))
 (let (($x128 (and $x124 $x127)))
 (let (($x129 (= $x128 true)))
 (let ((?x111 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x111 (_ bv1 32))))
 (let (($x114 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x116 (= $x114 $x115)))
 (let (($x112 (= ?x111 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x113 (= $x110 $x112)))
 (let (($x117 (and $x113 $x116)))
 (let (($x118 (= $x117 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x100 (concat ?x97 ?x95)))))
 (let (($x105 (= ?x104 input.dst.llvm-%t)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let (($x84 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x90 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x59 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x91 (= $x80 true)))
 (let (($x92 (= $x91 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x69 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x60 (and $x59 $x58)))
 (let (($x63 (=> (and $x60 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x64 (= $x63 true)))
 (let (($x76 (= $x64 true)))
 (let (($x77 (= $x76 true)))
 (let ((?x44 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x44)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x16 $x37)))
 (let (($x9 (and $x18 $x6)))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x20 $x9)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x40)))))))
 (let (($x39 (and $x15 $x12)))
 (let (($x34 (= $x39 true)))
 (let (($x5 (= $x34 true)))
 (let (($x30 (= $x5 true)))
 (let (($x78 (and $x30 $x77)))
 (let (($x93 (and $x78 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let (($x119 (and $x108 $x118)))
 (let (($x130 (and $x119 $x129)))
 (let (($x141 (and $x130 $x140)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x142 (and $x46 $x141)))
 (let (($x27 (= false false)))
 (let (($x143 (and $x27 $x142)))
 (let (($x144 (and $x27 $x143)))
 (let (($x151 (=> $x144 $x150)))
 (not $x151))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_10)
(function @fun_10
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x7f)
                                #x7ff77ffd
                                #x16)
                         #x80000000
                         #xf9)
                  #x80000002
                  #xf7)))
  (store (store (store a!1 #x7ff77ffe #x02) #x7ff77fff #xf7) #x7ff78000 #x00)))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x7ff77ff9)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv35 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x31 (concat ?x53 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x56 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x56 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x57) (concat ?x50 ?x31))))
 (let (($x61 (= (_ bv0 32) ?x60)))
 (let (($x161 (not $x61)))
 (let (($x162 (or $x61 $x161)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x62 (not $x17)))
 (let (($x163 (and $x62 $x162)))
 (let (($x164 (or $x17 $x163)))
 (let (($x165 (= $x164 false)))
 (let (($x166 (= $x165 true)))
 (let (($x143 (not true)))
 (let (($x144 (= $x143 true)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x94 (not $x151)))
 (let (($x147 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x21 (not $x147)))
 (let (($x152 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x35 (= $x151 $x152)))
 (let (($x149 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x150 (= $x147 $x149)))
 (let (($x154 (and (and (and $x150 $x35) $x21) $x94)))
 (let (($x155 (= $x154 true)))
 (let (($x133 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x137 (not $x133)))
 (let (($x129 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x136 (not $x129)))
 (let (($x134 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x135 (= $x133 $x134)))
 (let (($x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= $x129 $x131)))
 (let (($x140 (and (and (and $x132 $x135) $x136) $x137)))
 (let (($x141 (= $x140 true)))
 (let (($x118 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x122 (not $x118)))
 (let (($x114 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x121 (not $x114)))
 (let ((?x115 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x119 (bvuge ?x115 (_ bv1 32))))
 (let (($x120 (= $x118 $x119)))
 (let (($x116 (= ?x115 (_ bv0 32))))
 (let (($x117 (= $x114 $x116)))
 (let (($x125 (and (and (and $x117 $x120) $x121) $x122)))
 (let (($x126 (= $x125 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x104 (concat ?x95 ?x96)))))
 (let (($x109 (= ?x108 input.dst.llvm-%t)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x88 (bvugt ?x56 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x93 (=> (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x83 (=> (and $x62 (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x84 (= $x83 true)))
 (let (($x102 (= $x84 true)))
 (let (($x103 (= $x102 true)))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x73 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x74 (_ bv3 32)))))
 (let (($x78 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x65 (and $x62 $x61)))
 (let (($x67 (=> (and $x65 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x68 (= $x67 true)))
 (let (($x81 (= $x68 true)))
 (let (($x82 (= $x81 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x9)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x11 $x44)))
 (let (($x39 (and $x6 $x12)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (and $x23 $x39)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x27)))))))
 (let (($x5 (and $x38 $x34)))
 (let (($x30 (= $x5 true)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x89 (and $x45 $x82)))
 (let (($x99 (and $x89 $x103)))
 (let (($x112 (and $x99 $x111)))
 (let (($x127 (and $x112 $x126)))
 (let (($x142 (and $x127 $x141)))
 (let (($x145 (and $x142 $x144)))
 (let (($x156 (and $x145 $x155)))
 (let (($x157 (and $x156 $x144)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x158 (and $x46 $x157)))
 (let (($x24 (= false false)))
 (let (($x159 (and $x24 $x158)))
 (let (($x160 (and $x24 $x159)))
 (let (($x167 (=> $x160 $x166)))
 (not $x167))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x31 (concat ?x53 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x56 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x56 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x57) (concat ?x50 ?x31))))
 (let (($x61 (= (_ bv0 32) ?x60)))
 (let (($x161 (not $x61)))
 (let (($x162 (or $x61 $x161)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x62 (not $x17)))
 (let (($x163 (and $x62 $x162)))
 (let (($x164 (or $x17 $x163)))
 (let (($x165 (= $x164 false)))
 (let (($x166 (= $x165 true)))
 (let (($x143 (not true)))
 (let (($x144 (= $x143 true)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x94 (not $x151)))
 (let (($x147 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x21 (not $x147)))
 (let (($x152 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x35 (= $x151 $x152)))
 (let (($x149 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x150 (= $x147 $x149)))
 (let (($x154 (and (and (and $x150 $x35) $x21) $x94)))
 (let (($x155 (= $x154 true)))
 (let (($x133 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x137 (not $x133)))
 (let (($x129 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x136 (not $x129)))
 (let (($x134 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x135 (= $x133 $x134)))
 (let (($x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= $x129 $x131)))
 (let (($x140 (and (and (and $x132 $x135) $x136) $x137)))
 (let (($x141 (= $x140 true)))
 (let (($x118 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x122 (not $x118)))
 (let (($x114 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x121 (not $x114)))
 (let ((?x115 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x119 (bvuge ?x115 (_ bv1 32))))
 (let (($x120 (= $x118 $x119)))
 (let (($x116 (= ?x115 (_ bv0 32))))
 (let (($x117 (= $x114 $x116)))
 (let (($x125 (and (and (and $x117 $x120) $x121) $x122)))
 (let (($x126 (= $x125 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x104 (concat ?x95 ?x96)))))
 (let (($x109 (= ?x108 input.dst.llvm-%t)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x88 (bvugt ?x56 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x93 (=> (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x83 (=> (and $x62 (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x84 (= $x83 true)))
 (let (($x102 (= $x84 true)))
 (let (($x103 (= $x102 true)))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x73 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x74 (_ bv3 32)))))
 (let (($x78 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x65 (and $x62 $x61)))
 (let (($x67 (=> (and $x65 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x68 (= $x67 true)))
 (let (($x81 (= $x68 true)))
 (let (($x82 (= $x81 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x9)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x11 $x44)))
 (let (($x39 (and $x6 $x12)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (and $x23 $x39)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x27)))))))
 (let (($x5 (and $x38 $x34)))
 (let (($x30 (= $x5 true)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x89 (and $x45 $x82)))
 (let (($x99 (and $x89 $x103)))
 (let (($x112 (and $x99 $x111)))
 (let (($x127 (and $x112 $x126)))
 (let (($x142 (and $x127 $x141)))
 (let (($x145 (and $x142 $x144)))
 (let (($x156 (and $x145 $x155)))
 (let (($x157 (and $x156 $x144)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x158 (and $x46 $x157)))
 (let (($x24 (= false false)))
 (let (($x159 (and $x24 $x158)))
 (let (($x160 (and $x24 $x159)))
 (let (($x167 (=> $x160 $x166)))
 (not $x167))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x33 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x57 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x57 (_ bv3 32))))
 (let ((?x61 (concat (select input.dst.llvm-mem ?x54) (concat ?x51 ?x50))))
 (let (($x65 (= (_ bv0 32) ?x61)))
 (let (($x194 (not $x65)))
 (let (($x195 (or $x65 $x194)))
 (let (($x62 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x66 (not $x62)))
 (let (($x196 (and $x66 $x195)))
 (let (($x197 (or $x62 $x196)))
 (let (($x198 (= $x197 false)))
 (let (($x199 (= $x198 true)))
 (let (($x183 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x182 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x184 (= $x182 $x183)))
 (let (($x180 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x178 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x181 (= $x178 $x180)))
 (let (($x175 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x176 (= $x174 $x175)))
 (let (($x172 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x173 (= $x170 $x172)))
 (let (($x8 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x188 (and (and (and (and $x8 $x173) $x176) $x181) $x184)))
 (let (($x189 (= $x188 true)))
 (let (($x39 (= false false)))
 (let (($x150 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x164 (=> $x150 $x39)))
 (let (($x162 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x163 (= $x28 $x162)))
 (let (($x160 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x161 (= $x150 $x160)))
 (let (($x166 (and (and $x161 $x163) $x164)))
 (let (($x167 (= $x166 true)))
 (let (($x21 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x153 (= $x28 $x21)))
 (let (($x152 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x35 (= $x150 $x152)))
 (let (($x147 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x134 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x148 (= $x134 $x147)))
 (let (($x145 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x130 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x146 (= $x130 $x145)))
 (let (($x143 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x156 (and (and (and (and $x143 $x146) $x148) $x35) $x153)))
 (let (($x157 (= $x156 true)))
 (let (($x136 (=> $x130 $x39)))
 (let (($x135 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x138 (= $x134 $x135)))
 (let (($x132 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x133 (= $x130 $x132)))
 (let (($x137 (and (and $x133 $x138) $x136)))
 (let (($x140 (= $x137 true)))
 (let (($x117 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x122 (=> $x117 $x39)))
 (let ((?x118 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x118 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x124 (= $x123 $x121)))
 (let (($x119 (= ?x118 (_ bv0 32))))
 (let (($x120 (= $x117 $x119)))
 (let (($x126 (and (and $x120 $x124) $x122)))
 (let (($x127 (= $x126 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x111 (concat ?x110 (concat ?x105 (concat ?x95 ?x104)))))
 (let (($x112 (= ?x111 input.dst.llvm-%t)))
 (let (($x113 (= $x112 true)))
 (let (($x114 (= $x113 true)))
 (let (($x80 (bvugt ?x57 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x103 (=> (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x92 (=> (and $x66 (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x87 (= $x92 true)))
 (let (($x99 (= $x87 true)))
 (let (($x106 (= $x99 true)))
 (let ((?x70 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x64 (bvugt ?x70 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x70 (_ bv3 32)))))
 (let (($x82 (=> (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x74 (and $x66 $x65)))
 (let (($x77 (=> (and $x74 (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x71 (= $x77 true)))
 (let (($x89 (= $x71 true)))
 (let (($x85 (= $x89 true)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x7)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x6 $x23)))
 (let (($x47 (and $x26 $x12)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x46 $x47)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x34 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x10)))))))
 (let (($x30 (and $x34 $x5)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x59 (= $x45 true)))
 (let (($x86 (and $x59 $x85)))
 (let (($x107 (and $x86 $x106)))
 (let (($x115 (and $x107 $x114)))
 (let (($x128 (and $x115 $x127)))
 (let (($x141 (and $x128 $x140)))
 (let (($x158 (and $x141 $x157)))
 (let (($x168 (and $x158 $x167)))
 (let (($x190 (and $x168 $x189)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x191 (and $x22 $x190)))
 (let (($x192 (and $x39 $x191)))
 (let (($x193 (and $x39 $x192)))
 (let (($x200 (=> $x193 $x199)))
 (not $x200)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x33 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x57 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x57 (_ bv3 32))))
 (let ((?x61 (concat (select input.dst.llvm-mem ?x54) (concat ?x51 ?x50))))
 (let (($x65 (= (_ bv0 32) ?x61)))
 (let (($x194 (not $x65)))
 (let (($x195 (or $x65 $x194)))
 (let (($x62 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x66 (not $x62)))
 (let (($x196 (and $x66 $x195)))
 (let (($x197 (or $x62 $x196)))
 (let (($x198 (= $x197 false)))
 (let (($x199 (= $x198 true)))
 (let (($x183 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x182 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x184 (= $x182 $x183)))
 (let (($x180 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x178 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x181 (= $x178 $x180)))
 (let (($x175 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x176 (= $x174 $x175)))
 (let (($x172 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x173 (= $x170 $x172)))
 (let (($x8 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x188 (and (and (and (and $x8 $x173) $x176) $x181) $x184)))
 (let (($x189 (= $x188 true)))
 (let (($x39 (= false false)))
 (let (($x150 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x164 (=> $x150 $x39)))
 (let (($x162 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x163 (= $x28 $x162)))
 (let (($x160 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x161 (= $x150 $x160)))
 (let (($x166 (and (and $x161 $x163) $x164)))
 (let (($x167 (= $x166 true)))
 (let (($x21 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x153 (= $x28 $x21)))
 (let (($x152 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x35 (= $x150 $x152)))
 (let (($x147 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x134 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x148 (= $x134 $x147)))
 (let (($x145 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x130 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x146 (= $x130 $x145)))
 (let (($x143 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x156 (and (and (and (and $x143 $x146) $x148) $x35) $x153)))
 (let (($x157 (= $x156 true)))
 (let (($x136 (=> $x130 $x39)))
 (let (($x135 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x138 (= $x134 $x135)))
 (let (($x132 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x133 (= $x130 $x132)))
 (let (($x137 (and (and $x133 $x138) $x136)))
 (let (($x140 (= $x137 true)))
 (let (($x117 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x122 (=> $x117 $x39)))
 (let ((?x118 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x118 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x124 (= $x123 $x121)))
 (let (($x119 (= ?x118 (_ bv0 32))))
 (let (($x120 (= $x117 $x119)))
 (let (($x126 (and (and $x120 $x124) $x122)))
 (let (($x127 (= $x126 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x111 (concat ?x110 (concat ?x105 (concat ?x95 ?x104)))))
 (let (($x112 (= ?x111 input.dst.llvm-%t)))
 (let (($x113 (= $x112 true)))
 (let (($x114 (= $x113 true)))
 (let (($x80 (bvugt ?x57 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x103 (=> (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x92 (=> (and $x66 (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x87 (= $x92 true)))
 (let (($x99 (= $x87 true)))
 (let (($x106 (= $x99 true)))
 (let ((?x70 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x64 (bvugt ?x70 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x70 (_ bv3 32)))))
 (let (($x82 (=> (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x74 (and $x66 $x65)))
 (let (($x77 (=> (and $x74 (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x71 (= $x77 true)))
 (let (($x89 (= $x71 true)))
 (let (($x85 (= $x89 true)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x7)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x6 $x23)))
 (let (($x47 (and $x26 $x12)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x46 $x47)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x34 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x10)))))))
 (let (($x30 (and $x34 $x5)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x59 (= $x45 true)))
 (let (($x86 (and $x59 $x85)))
 (let (($x107 (and $x86 $x106)))
 (let (($x115 (and $x107 $x114)))
 (let (($x128 (and $x115 $x127)))
 (let (($x141 (and $x128 $x140)))
 (let (($x158 (and $x141 $x157)))
 (let (($x168 (and $x158 $x167)))
 (let (($x190 (and $x168 $x189)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x191 (and $x22 $x190)))
 (let (($x192 (and $x39 $x191)))
 (let (($x193 (and $x39 $x192)))
 (let (($x200 (=> $x193 $x199)))
 (not $x200)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_10)
(function @fun_10
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20468d74)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x8e)
                                #x20468d75
                                #x95)
                         #x8e5c9599
                         #x95)
                  #x20468d74
                  #x95)))
  (store (store (store (store a!1 #x20468d76 #x5c) #x8e5c959a #x95)
                #x8e5c959b
                #x95)
         #x8e5c959c
         #x5c)))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x8e5c9595)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20468d74)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20468d77)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv7 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x14 (concat ?x51 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x61 (bvadd ?x60 (_ bv3 32))))
 (let ((?x74 (concat (select input.dst.llvm-mem ?x61) (concat ?x50 ?x14))))
 (let (($x69 (= (_ bv0 32) ?x74)))
 (let (($x214 (not $x69)))
 (let (($x215 (or $x69 $x214)))
 (let (($x6 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x70 (not $x6)))
 (let (($x216 (and $x70 $x215)))
 (let (($x217 (or $x6 $x216)))
 (let (($x218 (= $x217 false)))
 (let (($x219 (= $x218 true)))
 (let (($x193 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x101 (not $x193)))
 (let (($x197 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x36 (not $x197)))
 (let (($x182 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x201 (not $x182)))
 (let (($x189 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x200 (not $x189)))
 (let (($x198 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x199 (= $x197 $x198)))
 (let (($x195 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x196 (= $x193 $x195)))
 (let (($x190 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x191 (= $x189 $x190)))
 (let (($x184 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x188 (= $x182 $x184)))
 (let (($x181 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x206 (and (and (and (and (and (and $x181 $x188) $x191) $x196) $x199) $x200) $x201)))
 (let (($x208 (and (and $x206 $x36) $x101)))
 (let (($x209 (= $x208 true)))
 (let (($x57 (= false false)))
 (let (($x149 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x174 (=> $x149 $x57)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x152 (not $x151)))
 (let (($x173 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x185 (= $x151 $x173)))
 (let (($x171 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x172 (= $x149 $x171)))
 (let (($x186 (and (and (and $x172 $x185) $x152) $x174)))
 (let (($x177 (= $x186 true)))
 (let (($x161 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x162 (= $x151 $x161)))
 (let (($x159 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x160 (= $x149 $x159)))
 (let (($x156 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x137 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x157 (= $x137 $x156)))
 (let (($x21 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x153 (= $x135 $x21)))
 (let (($x155 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x167 (and (and (and (and (and (not $x135) (not $x137)) (not $x149)) $x152) $x155) $x153)))
 (let (($x100 (and (and (and $x167 $x157) $x160) $x162)))
 (let (($x8 (= $x100 true)))
 (let (($x143 (=> $x135 $x57)))
 (let (($x142 (not $x137)))
 (let (($x140 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x141 (= $x137 $x140)))
 (let (($x139 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x136 (= $x135 $x139)))
 (let (($x146 (and (and (and $x136 $x141) $x142) $x143)))
 (let (($x94 (= $x146 true)))
 (let (($x123 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x123 $x57)))
 (let (($x39 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x127 (not $x39)))
 (let ((?x121 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x121 (_ bv1 32))))
 (let (($x126 (= $x39 $x122)))
 (let (($x124 (= ?x121 (_ bv0 32))))
 (let (($x125 (= $x123 $x124)))
 (let (($x131 (and (and (and $x125 $x126) $x127) $x128)))
 (let (($x132 (= $x131 true)))
 (let ((?x97 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x114 (concat ?x111 (concat ?x104 ?x97)))))
 (let (($x116 (= ?x115 input.dst.llvm-%t)))
 (let (($x117 (= $x116 true)))
 (let (($x118 (= $x117 true)))
 (let (($x84 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x61)))
 (let (($x107 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x70 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x109 (= $x80 true)))
 (let (($x110 (= $x109 true)))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x68 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x81 (_ bv3 32)))))
 (let (($x86 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x72 (and $x70 $x69)))
 (let (($x75 (=> (and $x72 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x63 (= $x75 true)))
 (let (($x88 (= $x63 true)))
 (let (($x90 (= $x88 true)))
 (let ((?x45 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x59 (= (_ bv0 32) ?x45)))
 (let ((?x41 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x41)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x24 $x54)))
 (let (($x37 (and $x17 $x59)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x9 $x37)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x62)))))))
 (let (($x44 (and $x43 $x29)))
 (let (($x34 (= $x44 true)))
 (let (($x48 (= $x34 true)))
 (let (($x26 (= $x48 true)))
 (let (($x102 (and $x26 $x90)))
 (let (($x98 (and $x102 $x110)))
 (let (($x119 (and $x98 $x118)))
 (let (($x133 (and $x119 $x132)))
 (let (($x147 (and $x133 $x94)))
 (let (($x169 (and $x147 $x8)))
 (let (($x178 (and $x169 $x177)))
 (let (($x210 (and $x178 $x209)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x211 (and $x22 $x210)))
 (let (($x212 (and $x57 $x211)))
 (let (($x213 (and $x57 $x212)))
 (let (($x220 (=> $x213 $x219)))
 (not $x220))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x14 (concat ?x51 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x61 (bvadd ?x60 (_ bv3 32))))
 (let ((?x74 (concat (select input.dst.llvm-mem ?x61) (concat ?x50 ?x14))))
 (let (($x69 (= (_ bv0 32) ?x74)))
 (let (($x214 (not $x69)))
 (let (($x215 (or $x69 $x214)))
 (let (($x6 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x70 (not $x6)))
 (let (($x216 (and $x70 $x215)))
 (let (($x217 (or $x6 $x216)))
 (let (($x218 (= $x217 false)))
 (let (($x219 (= $x218 true)))
 (let (($x193 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x101 (not $x193)))
 (let (($x197 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x36 (not $x197)))
 (let (($x182 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x201 (not $x182)))
 (let (($x189 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x200 (not $x189)))
 (let (($x198 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x199 (= $x197 $x198)))
 (let (($x195 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x196 (= $x193 $x195)))
 (let (($x190 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x191 (= $x189 $x190)))
 (let (($x184 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x188 (= $x182 $x184)))
 (let (($x181 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x206 (and (and (and (and (and (and $x181 $x188) $x191) $x196) $x199) $x200) $x201)))
 (let (($x208 (and (and $x206 $x36) $x101)))
 (let (($x209 (= $x208 true)))
 (let (($x57 (= false false)))
 (let (($x149 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x174 (=> $x149 $x57)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x152 (not $x151)))
 (let (($x173 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x185 (= $x151 $x173)))
 (let (($x171 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x172 (= $x149 $x171)))
 (let (($x186 (and (and (and $x172 $x185) $x152) $x174)))
 (let (($x177 (= $x186 true)))
 (let (($x161 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x162 (= $x151 $x161)))
 (let (($x159 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x160 (= $x149 $x159)))
 (let (($x156 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x137 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x157 (= $x137 $x156)))
 (let (($x21 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x153 (= $x135 $x21)))
 (let (($x155 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x167 (and (and (and (and (and (not $x135) (not $x137)) (not $x149)) $x152) $x155) $x153)))
 (let (($x100 (and (and (and $x167 $x157) $x160) $x162)))
 (let (($x8 (= $x100 true)))
 (let (($x143 (=> $x135 $x57)))
 (let (($x142 (not $x137)))
 (let (($x140 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x141 (= $x137 $x140)))
 (let (($x139 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x136 (= $x135 $x139)))
 (let (($x146 (and (and (and $x136 $x141) $x142) $x143)))
 (let (($x94 (= $x146 true)))
 (let (($x123 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x123 $x57)))
 (let (($x39 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x127 (not $x39)))
 (let ((?x121 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x121 (_ bv1 32))))
 (let (($x126 (= $x39 $x122)))
 (let (($x124 (= ?x121 (_ bv0 32))))
 (let (($x125 (= $x123 $x124)))
 (let (($x131 (and (and (and $x125 $x126) $x127) $x128)))
 (let (($x132 (= $x131 true)))
 (let ((?x97 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x114 (concat ?x111 (concat ?x104 ?x97)))))
 (let (($x116 (= ?x115 input.dst.llvm-%t)))
 (let (($x117 (= $x116 true)))
 (let (($x118 (= $x117 true)))
 (let (($x84 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x61)))
 (let (($x107 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x70 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x109 (= $x80 true)))
 (let (($x110 (= $x109 true)))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x68 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x81 (_ bv3 32)))))
 (let (($x86 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x72 (and $x70 $x69)))
 (let (($x75 (=> (and $x72 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x63 (= $x75 true)))
 (let (($x88 (= $x63 true)))
 (let (($x90 (= $x88 true)))
 (let ((?x45 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x59 (= (_ bv0 32) ?x45)))
 (let ((?x41 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x41)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x24 $x54)))
 (let (($x37 (and $x17 $x59)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x9 $x37)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x62)))))))
 (let (($x44 (and $x43 $x29)))
 (let (($x34 (= $x44 true)))
 (let (($x48 (= $x34 true)))
 (let (($x26 (= $x48 true)))
 (let (($x102 (and $x26 $x90)))
 (let (($x98 (and $x102 $x110)))
 (let (($x119 (and $x98 $x118)))
 (let (($x133 (and $x119 $x132)))
 (let (($x147 (and $x133 $x94)))
 (let (($x169 (and $x147 $x8)))
 (let (($x178 (and $x169 $x177)))
 (let (($x210 (and $x178 $x209)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x211 (and $x22 $x210)))
 (let (($x212 (and $x57 $x211)))
 (let (($x213 (and $x57 $x212)))
 (let (($x220 (=> $x213 $x219)))
 (not $x220))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x10 (concat ?x67 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x12 (bvadd ?x47 (_ bv3 32))))
 (let ((?x38 (concat (select input.dst.llvm-mem ?x12) (concat ?x77 ?x10))))
 (let (($x44 (= (_ bv0 32) ?x38)))
 (let (($x660 (not $x44)))
 (let (($x661 (or $x44 $x660)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x15 (not $x64)))
 (let (($x662 (and $x15 $x661)))
 (let (($x663 (or $x64 $x662)))
 (let (($x664 (= $x663 false)))
 (let (($x665 (= $x664 true)))
 (let (($x632 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x633 (= $x388 $x632)))
 (let (($x211 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x634 (=> $x211 $x633)))
 (let (($x45 (= false false)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x630 (and $x211 $x383)))
 (let (($x631 (=> $x630 $x45)))
 (let (($x627 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x628 (= $x383 $x627)))
 (let (($x629 (=> $x211 $x628)))
 (let (($x623 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x378 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x624 (= $x378 $x623)))
 (let (($x625 (=> $x211 $x624)))
 (let (($x373 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x621 (and $x211 $x373)))
 (let (($x622 (=> $x621 $x45)))
 (let (($x618 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x619 (= $x373 $x618)))
 (let (($x620 (=> $x211 $x619)))
 (let (($x615 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x616 (=> $x211 $x615)))
 (let (($x195 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x613 (=> $x195 $x45)))
 (let (($x610 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x354 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x611 (= $x354 $x610)))
 (let (($x191 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x612 (=> $x191 $x611)))
 (let (($x349 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x608 (and $x191 $x349)))
 (let (($x609 (=> $x608 $x45)))
 (let (($x605 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x606 (= $x349 $x605)))
 (let (($x607 (=> $x191 $x606)))
 (let (($x601 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x602 (= $x344 $x601)))
 (let (($x603 (=> $x191 $x602)))
 (let (($x339 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x599 (and $x191 $x339)))
 (let (($x600 (=> $x599 $x45)))
 (let (($x596 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x597 (= $x339 $x596)))
 (let (($x598 (=> $x191 $x597)))
 (let (($x593 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x594 (=> $x191 $x593)))
 (let (($x175 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x591 (=> $x175 $x45)))
 (let (($x589 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x590 (= $x211 $x589)))
 (let (($x587 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x588 (= $x195 $x587)))
 (let (($x584 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x585 (= $x191 $x584)))
 (let (($x582 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x583 (= $x175 $x582)))
 (let (($x580 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x640 (and (and (and (and (and (and $x580 $x583) $x585) $x588) $x590) $x591) $x594)))
 (let (($x646 (and (and (and (and (and (and $x640 $x598) $x600) $x603) $x607) $x609) $x612)))
 (let (($x652 (and (and (and (and (and (and $x646 $x613) $x616) $x620) $x622) $x625) $x629)))
 (let (($x654 (and (and $x652 $x631) $x634)))
 (let (($x655 (= $x654 true)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x290 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x533 (and $x232 $x290)))
 (let (($x557 (=> $x533 $x556)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x549 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x552 (= $x549 $x551)))
 (let (($x553 (=> $x533 $x552)))
 (let (($x545 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x544 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x546 (= $x544 $x545)))
 (let (($x547 (=> $x533 $x546)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x539 $x541)))
 (let (($x543 (=> $x533 $x542)))
 (let (($x536 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x537 (=> $x533 $x536)))
 (let (($x530 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x531 (= $x290 $x530)))
 (let (($x532 (=> $x232 $x531)))
 (let (($x273 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x459 (and $x232 $x273)))
 (let (($x460 (=> $x459 $x45)))
 (let (($x527 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x528 (= $x273 $x527)))
 (let (($x529 (=> $x232 $x528)))
 (let (($x523 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x522 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x524 (= $x522 $x523)))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x501 (and $x232 $x268)))
 (let (($x525 (=> $x501 $x524)))
 (let (($x519 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x517 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x520 (= $x517 $x519)))
 (let (($x521 (=> $x501 $x520)))
 (let (($x513 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x512 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (= $x512 $x513)))
 (let (($x515 (=> $x501 $x514)))
 (let (($x509 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x507 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x510 (= $x507 $x509)))
 (let (($x511 (=> $x501 $x510)))
 (let (($x504 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x505 (=> $x501 $x504)))
 (let (($x498 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x268 $x498)))
 (let (($x500 (=> $x232 $x499)))
 (let (($x251 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x450 (and $x232 $x251)))
 (let (($x451 (=> $x450 $x45)))
 (let (($x495 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x251 $x495)))
 (let (($x497 (=> $x232 $x496)))
 (let (($x492 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x493 (=> $x232 $x492)))
 (let (($x216 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x442 (=> $x216 $x45)))
 (let (($x489 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x490 (= $x232 $x489)))
 (let (($x487 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x488 (= $x216 $x487)))
 (let (($x563 (and (and (and (and (and (and $x488 $x490) $x442) $x493) $x497) $x451) $x500)))
 (let (($x569 (and (and (and (and (and (and $x563 $x505) $x511) $x515) $x521) $x525) $x529)))
 (let (($x575 (and (and (and (and (and (and $x569 $x460) $x532) $x537) $x543) $x547) $x553)))
 (let (($x576 (and $x575 $x557)))
 (let (($x577 (= $x576 true)))
 (let (($x461 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x462 (= $x290 $x461)))
 (let (($x463 (=> $x232 $x462)))
 (let (($x456 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x457 (= $x273 $x456)))
 (let (($x458 (=> $x232 $x457)))
 (let (($x452 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x453 (= $x268 $x452)))
 (let (($x454 (=> $x232 $x453)))
 (let (($x447 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x448 (= $x251 $x447)))
 (let (($x449 (=> $x232 $x448)))
 (let (($x444 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x445 (=> $x232 $x444)))
 (let (($x439 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x440 (= $x211 $x439)))
 (let (($x153 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x441 (=> $x153 $x440)))
 (let (($x362 (and $x153 $x195)))
 (let (($x363 (=> $x362 $x45)))
 (let (($x436 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x437 (= $x195 $x436)))
 (let (($x438 (=> $x153 $x437)))
 (let (($x432 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x433 (= $x191 $x432)))
 (let (($x434 (=> $x153 $x433)))
 (let (($x328 (and $x153 $x175)))
 (let (($x329 (=> $x328 $x45)))
 (let (($x429 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x430 (= $x175 $x429)))
 (let (($x431 (=> $x153 $x430)))
 (let (($x426 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x427 (=> $x153 $x426)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x320 (=> $x145 $x45)))
 (let (($x423 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x424 (= $x232 $x423)))
 (let (($x421 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x422 (= $x216 $x421)))
 (let (($x418 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x419 (= $x153 $x418)))
 (let (($x416 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x417 (= $x145 $x416)))
 (let (($x414 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x469 (and (and (and (and (and (and $x414 $x417) $x419) $x422) $x424) $x320) $x427)))
 (let (($x475 (and (and (and (and (and (and $x469 $x431) $x329) $x434) $x438) $x363) $x441)))
 (let (($x481 (and (and (and (and (and (and $x475 $x442) $x445) $x449) $x451) $x454) $x458)))
 (let (($x483 (and (and $x481 $x460) $x463)))
 (let (($x484 (= $x483 true)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x367 (and $x153 $x211)))
 (let (($x391 (=> $x367 $x390)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x367 $x386)))
 (let (($x379 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x380 (= $x378 $x379)))
 (let (($x381 (=> $x367 $x380)))
 (let (($x375 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x373 $x375)))
 (let (($x377 (=> $x367 $x376)))
 (let (($x370 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x371 (=> $x367 $x370)))
 (let (($x364 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x365 (= $x211 $x364)))
 (let (($x366 (=> $x153 $x365)))
 (let (($x359 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x360 (= $x195 $x359)))
 (let (($x361 (=> $x153 $x360)))
 (let (($x355 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x356 (= $x354 $x355)))
 (let (($x333 (and $x153 $x191)))
 (let (($x357 (=> $x333 $x356)))
 (let (($x351 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x352 (= $x349 $x351)))
 (let (($x353 (=> $x333 $x352)))
 (let (($x345 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x346 (= $x344 $x345)))
 (let (($x347 (=> $x333 $x346)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x342 (= $x339 $x341)))
 (let (($x343 (=> $x333 $x342)))
 (let (($x336 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x337 (=> $x333 $x336)))
 (let (($x330 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x331 (= $x191 $x330)))
 (let (($x332 (=> $x153 $x331)))
 (let (($x325 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x326 (= $x175 $x325)))
 (let (($x327 (=> $x153 $x326)))
 (let (($x322 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x323 (=> $x153 $x322)))
 (let (($x318 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x319 (= $x153 $x318)))
 (let (($x316 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x317 (= $x145 $x316)))
 (let (($x397 (and (and (and (and (and (and $x317 $x319) $x320) $x323) $x327) $x329) $x332)))
 (let (($x403 (and (and (and (and (and (and $x397 $x337) $x343) $x347) $x353) $x357) $x361)))
 (let (($x409 (and (and (and (and (and (and $x403 $x363) $x366) $x371) $x377) $x381) $x387)))
 (let (($x410 (and $x409 $x391)))
 (let (($x411 (= $x410 true)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x224 (concat ?x223 (concat ?x105 ?x221))))
 (let ((?x274 (bvadd ?x224 (_ bv8 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x278))))
 (let (($x285 (= (_ bv0 32) ?x284)))
 (let ((?x286 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x286 (_ bv1 32))))
 (let (($x292 (= $x290 $x291)))
 (let (($x127 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x236 (and $x127 $x232)))
 (let (($x293 (=> $x236 $x292)))
 (let (($x287 (= ?x286 (_ bv0 32))))
 (let (($x288 (= $x273 $x287)))
 (let (($x289 (=> $x236 $x288)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x224 (_ bv4 32))))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv2 32))) ?x256)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv3 32))) ?x259)))
 (let (($x263 (= (_ bv0 32) ?x262)))
 (let ((?x264 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x264 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x271 (=> $x236 $x270)))
 (let (($x265 (= ?x264 (_ bv0 32))))
 (let (($x266 (= $x251 $x265)))
 (let (($x267 (=> $x236 $x266)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x241))))
 (let (($x248 (= input.spec-%var-t-0.2.2.2.0 ?x247)))
 (let (($x249 (=> $x236 $x248)))
 (let (($x225 (= (_ bv0 32) ?x224)))
 (let ((?x226 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x233 (bvuge ?x226 (_ bv1 32))))
 (let (($x234 (= $x232 $x233)))
 (let (($x235 (=> $x127 $x234)))
 (let (($x230 (and $x127 $x216)))
 (let (($x231 (=> $x230 $x45)))
 (let (($x227 (= ?x226 (_ bv0 32))))
 (let (($x228 (= $x216 $x227)))
 (let (($x229 (=> $x127 $x228)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x148 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x165 (concat ?x154 ?x148))))
 (let ((?x196 (bvadd ?x151 (_ bv8 32))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x199))))
 (let (($x207 (= (_ bv0 32) ?x36)))
 (let ((?x101 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x101 (_ bv1 32))))
 (let (($x213 (= $x211 $x212)))
 (let (($x168 (and $x127 $x153)))
 (let (($x214 (=> $x168 $x213)))
 (let (($x208 (= ?x101 (_ bv0 32))))
 (let (($x209 (= $x195 $x208)))
 (let (($x210 (=> $x168 $x209)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x178)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x181)))
 (let (($x184 (= (_ bv0 32) ?x183)))
 (let ((?x188 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x188 (_ bv1 32))))
 (let (($x192 (= $x191 $x202)))
 (let (($x193 (=> $x168 $x192)))
 (let (($x55 (= ?x188 (_ bv0 32))))
 (let (($x189 (= $x175 $x55)))
 (let (($x190 (=> $x168 $x189)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x161))))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.0 ?x171)))
 (let (($x173 (=> $x168 $x172)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x164 (_ bv1 32))))
 (let (($x156 (= $x153 $x167)))
 (let (($x157 (=> $x127 $x156)))
 (let (($x28 (and $x127 $x145)))
 (let (($x21 (=> $x28 $x45)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x127 $x155)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x134)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x139)))
 (let (($x141 (= input.spec-%var-t-0.2.0 ?x140)))
 (let (($x144 (=> $x127 $x141)))
 (let (($x39 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x39 $x45)))
 (let ((?x122 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x122 (_ bv1 32))))
 (let (($x57 (= $x127 $x130)))
 (let (($x126 (= ?x122 (_ bv0 32))))
 (let (($x129 (= $x39 $x126)))
 (let (($x299 (and (and (and (and (and (and $x129 $x57) $x128) $x144) $x166) $x21) $x157)))
 (let (($x305 (and (and (and (and (and (and $x299 $x173) $x190) $x193) $x210) $x214) $x229)))
 (let (($x311 (and (and (and (and (and (and $x305 $x231) $x235) $x249) $x267) $x271) $x289)))
 (let (($x312 (and $x311 $x293)))
 (let (($x313 (= $x312 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x119 (concat ?x118 (concat ?x115 (concat ?x97 ?x95)))))
 (let (($x120 (= ?x119 input.dst.llvm-%t)))
 (let (($x123 (= $x120 true)))
 (let (($x121 (= $x123 true)))
 (let (($x99 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x98 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x83 (=> (and $x15 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x84 (= $x83 true)))
 (let (($x113 (= $x84 true)))
 (let (($x114 (= $x113 true)))
 (let ((?x6 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x89 (bvugt ?x6 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x6 (_ bv3 32)))))
 (let (($x102 (=> (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x46 (and $x15 $x44)))
 (let (($x70 (=> (and $x46 (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x20 (= $x70 true)))
 (let (($x91 (= $x20 true)))
 (let (($x93 (= $x91 true)))
 (let ((?x41 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x25 (= (_ bv0 32) ?x41)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (and $x43 $x24)))
 (let (($x52 (and $x27 $x25)))
 (let (($x48 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x48 $x52)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x85)))))))
 (let (($x54 (and $x82 $x37)))
 (let (($x17 (= $x54 true)))
 (let (($x53 (= $x17 true)))
 (let (($x11 (= $x53 true)))
 (let (($x106 (and $x11 $x93)))
 (let (($x108 (and $x106 $x114)))
 (let (($x124 (and $x108 $x121)))
 (let (($x314 (and $x124 $x313)))
 (let (($x412 (and $x314 $x411)))
 (let (($x485 (and $x412 $x484)))
 (let (($x578 (and $x485 $x577)))
 (let (($x656 (and $x578 $x655)))
 (let (($x33 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x657 (and $x33 $x656)))
 (let (($x658 (and $x45 $x657)))
 (let (($x659 (and $x45 $x658)))
 (let (($x666 (=> $x659 $x665)))
 (not $x666)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x10 (concat ?x67 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x12 (bvadd ?x47 (_ bv3 32))))
 (let ((?x38 (concat (select input.dst.llvm-mem ?x12) (concat ?x77 ?x10))))
 (let (($x44 (= (_ bv0 32) ?x38)))
 (let (($x660 (not $x44)))
 (let (($x661 (or $x44 $x660)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x15 (not $x64)))
 (let (($x662 (and $x15 $x661)))
 (let (($x663 (or $x64 $x662)))
 (let (($x664 (= $x663 false)))
 (let (($x665 (= $x664 true)))
 (let (($x632 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x633 (= $x388 $x632)))
 (let (($x211 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x634 (=> $x211 $x633)))
 (let (($x45 (= false false)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x630 (and $x211 $x383)))
 (let (($x631 (=> $x630 $x45)))
 (let (($x627 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x628 (= $x383 $x627)))
 (let (($x629 (=> $x211 $x628)))
 (let (($x623 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x378 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x624 (= $x378 $x623)))
 (let (($x625 (=> $x211 $x624)))
 (let (($x373 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x621 (and $x211 $x373)))
 (let (($x622 (=> $x621 $x45)))
 (let (($x618 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x619 (= $x373 $x618)))
 (let (($x620 (=> $x211 $x619)))
 (let (($x615 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x616 (=> $x211 $x615)))
 (let (($x195 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x613 (=> $x195 $x45)))
 (let (($x610 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x354 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x611 (= $x354 $x610)))
 (let (($x191 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x612 (=> $x191 $x611)))
 (let (($x349 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x608 (and $x191 $x349)))
 (let (($x609 (=> $x608 $x45)))
 (let (($x605 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x606 (= $x349 $x605)))
 (let (($x607 (=> $x191 $x606)))
 (let (($x601 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x602 (= $x344 $x601)))
 (let (($x603 (=> $x191 $x602)))
 (let (($x339 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x599 (and $x191 $x339)))
 (let (($x600 (=> $x599 $x45)))
 (let (($x596 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x597 (= $x339 $x596)))
 (let (($x598 (=> $x191 $x597)))
 (let (($x593 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x594 (=> $x191 $x593)))
 (let (($x175 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x591 (=> $x175 $x45)))
 (let (($x589 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x590 (= $x211 $x589)))
 (let (($x587 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x588 (= $x195 $x587)))
 (let (($x584 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x585 (= $x191 $x584)))
 (let (($x582 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x583 (= $x175 $x582)))
 (let (($x580 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x640 (and (and (and (and (and (and $x580 $x583) $x585) $x588) $x590) $x591) $x594)))
 (let (($x646 (and (and (and (and (and (and $x640 $x598) $x600) $x603) $x607) $x609) $x612)))
 (let (($x652 (and (and (and (and (and (and $x646 $x613) $x616) $x620) $x622) $x625) $x629)))
 (let (($x654 (and (and $x652 $x631) $x634)))
 (let (($x655 (= $x654 true)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x290 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x533 (and $x232 $x290)))
 (let (($x557 (=> $x533 $x556)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x549 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x552 (= $x549 $x551)))
 (let (($x553 (=> $x533 $x552)))
 (let (($x545 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x544 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x546 (= $x544 $x545)))
 (let (($x547 (=> $x533 $x546)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x539 $x541)))
 (let (($x543 (=> $x533 $x542)))
 (let (($x536 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x537 (=> $x533 $x536)))
 (let (($x530 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x531 (= $x290 $x530)))
 (let (($x532 (=> $x232 $x531)))
 (let (($x273 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x459 (and $x232 $x273)))
 (let (($x460 (=> $x459 $x45)))
 (let (($x527 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x528 (= $x273 $x527)))
 (let (($x529 (=> $x232 $x528)))
 (let (($x523 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x522 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x524 (= $x522 $x523)))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x501 (and $x232 $x268)))
 (let (($x525 (=> $x501 $x524)))
 (let (($x519 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x517 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x520 (= $x517 $x519)))
 (let (($x521 (=> $x501 $x520)))
 (let (($x513 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x512 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (= $x512 $x513)))
 (let (($x515 (=> $x501 $x514)))
 (let (($x509 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x507 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x510 (= $x507 $x509)))
 (let (($x511 (=> $x501 $x510)))
 (let (($x504 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x505 (=> $x501 $x504)))
 (let (($x498 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x268 $x498)))
 (let (($x500 (=> $x232 $x499)))
 (let (($x251 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x450 (and $x232 $x251)))
 (let (($x451 (=> $x450 $x45)))
 (let (($x495 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x251 $x495)))
 (let (($x497 (=> $x232 $x496)))
 (let (($x492 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x493 (=> $x232 $x492)))
 (let (($x216 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x442 (=> $x216 $x45)))
 (let (($x489 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x490 (= $x232 $x489)))
 (let (($x487 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x488 (= $x216 $x487)))
 (let (($x563 (and (and (and (and (and (and $x488 $x490) $x442) $x493) $x497) $x451) $x500)))
 (let (($x569 (and (and (and (and (and (and $x563 $x505) $x511) $x515) $x521) $x525) $x529)))
 (let (($x575 (and (and (and (and (and (and $x569 $x460) $x532) $x537) $x543) $x547) $x553)))
 (let (($x576 (and $x575 $x557)))
 (let (($x577 (= $x576 true)))
 (let (($x461 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x462 (= $x290 $x461)))
 (let (($x463 (=> $x232 $x462)))
 (let (($x456 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x457 (= $x273 $x456)))
 (let (($x458 (=> $x232 $x457)))
 (let (($x452 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x453 (= $x268 $x452)))
 (let (($x454 (=> $x232 $x453)))
 (let (($x447 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x448 (= $x251 $x447)))
 (let (($x449 (=> $x232 $x448)))
 (let (($x444 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x445 (=> $x232 $x444)))
 (let (($x439 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x440 (= $x211 $x439)))
 (let (($x153 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x441 (=> $x153 $x440)))
 (let (($x362 (and $x153 $x195)))
 (let (($x363 (=> $x362 $x45)))
 (let (($x436 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x437 (= $x195 $x436)))
 (let (($x438 (=> $x153 $x437)))
 (let (($x432 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x433 (= $x191 $x432)))
 (let (($x434 (=> $x153 $x433)))
 (let (($x328 (and $x153 $x175)))
 (let (($x329 (=> $x328 $x45)))
 (let (($x429 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x430 (= $x175 $x429)))
 (let (($x431 (=> $x153 $x430)))
 (let (($x426 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x427 (=> $x153 $x426)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x320 (=> $x145 $x45)))
 (let (($x423 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x424 (= $x232 $x423)))
 (let (($x421 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x422 (= $x216 $x421)))
 (let (($x418 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x419 (= $x153 $x418)))
 (let (($x416 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x417 (= $x145 $x416)))
 (let (($x414 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x469 (and (and (and (and (and (and $x414 $x417) $x419) $x422) $x424) $x320) $x427)))
 (let (($x475 (and (and (and (and (and (and $x469 $x431) $x329) $x434) $x438) $x363) $x441)))
 (let (($x481 (and (and (and (and (and (and $x475 $x442) $x445) $x449) $x451) $x454) $x458)))
 (let (($x483 (and (and $x481 $x460) $x463)))
 (let (($x484 (= $x483 true)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x367 (and $x153 $x211)))
 (let (($x391 (=> $x367 $x390)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x367 $x386)))
 (let (($x379 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x380 (= $x378 $x379)))
 (let (($x381 (=> $x367 $x380)))
 (let (($x375 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x373 $x375)))
 (let (($x377 (=> $x367 $x376)))
 (let (($x370 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x371 (=> $x367 $x370)))
 (let (($x364 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x365 (= $x211 $x364)))
 (let (($x366 (=> $x153 $x365)))
 (let (($x359 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x360 (= $x195 $x359)))
 (let (($x361 (=> $x153 $x360)))
 (let (($x355 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x356 (= $x354 $x355)))
 (let (($x333 (and $x153 $x191)))
 (let (($x357 (=> $x333 $x356)))
 (let (($x351 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x352 (= $x349 $x351)))
 (let (($x353 (=> $x333 $x352)))
 (let (($x345 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x346 (= $x344 $x345)))
 (let (($x347 (=> $x333 $x346)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x342 (= $x339 $x341)))
 (let (($x343 (=> $x333 $x342)))
 (let (($x336 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x337 (=> $x333 $x336)))
 (let (($x330 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x331 (= $x191 $x330)))
 (let (($x332 (=> $x153 $x331)))
 (let (($x325 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x326 (= $x175 $x325)))
 (let (($x327 (=> $x153 $x326)))
 (let (($x322 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x323 (=> $x153 $x322)))
 (let (($x318 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x319 (= $x153 $x318)))
 (let (($x316 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x317 (= $x145 $x316)))
 (let (($x397 (and (and (and (and (and (and $x317 $x319) $x320) $x323) $x327) $x329) $x332)))
 (let (($x403 (and (and (and (and (and (and $x397 $x337) $x343) $x347) $x353) $x357) $x361)))
 (let (($x409 (and (and (and (and (and (and $x403 $x363) $x366) $x371) $x377) $x381) $x387)))
 (let (($x410 (and $x409 $x391)))
 (let (($x411 (= $x410 true)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x224 (concat ?x223 (concat ?x105 ?x221))))
 (let ((?x274 (bvadd ?x224 (_ bv8 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x278))))
 (let (($x285 (= (_ bv0 32) ?x284)))
 (let ((?x286 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x286 (_ bv1 32))))
 (let (($x292 (= $x290 $x291)))
 (let (($x127 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x236 (and $x127 $x232)))
 (let (($x293 (=> $x236 $x292)))
 (let (($x287 (= ?x286 (_ bv0 32))))
 (let (($x288 (= $x273 $x287)))
 (let (($x289 (=> $x236 $x288)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x224 (_ bv4 32))))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv2 32))) ?x256)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv3 32))) ?x259)))
 (let (($x263 (= (_ bv0 32) ?x262)))
 (let ((?x264 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x264 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x271 (=> $x236 $x270)))
 (let (($x265 (= ?x264 (_ bv0 32))))
 (let (($x266 (= $x251 $x265)))
 (let (($x267 (=> $x236 $x266)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x241))))
 (let (($x248 (= input.spec-%var-t-0.2.2.2.0 ?x247)))
 (let (($x249 (=> $x236 $x248)))
 (let (($x225 (= (_ bv0 32) ?x224)))
 (let ((?x226 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x233 (bvuge ?x226 (_ bv1 32))))
 (let (($x234 (= $x232 $x233)))
 (let (($x235 (=> $x127 $x234)))
 (let (($x230 (and $x127 $x216)))
 (let (($x231 (=> $x230 $x45)))
 (let (($x227 (= ?x226 (_ bv0 32))))
 (let (($x228 (= $x216 $x227)))
 (let (($x229 (=> $x127 $x228)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x148 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x165 (concat ?x154 ?x148))))
 (let ((?x196 (bvadd ?x151 (_ bv8 32))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x199))))
 (let (($x207 (= (_ bv0 32) ?x36)))
 (let ((?x101 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x101 (_ bv1 32))))
 (let (($x213 (= $x211 $x212)))
 (let (($x168 (and $x127 $x153)))
 (let (($x214 (=> $x168 $x213)))
 (let (($x208 (= ?x101 (_ bv0 32))))
 (let (($x209 (= $x195 $x208)))
 (let (($x210 (=> $x168 $x209)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x178)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x181)))
 (let (($x184 (= (_ bv0 32) ?x183)))
 (let ((?x188 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x188 (_ bv1 32))))
 (let (($x192 (= $x191 $x202)))
 (let (($x193 (=> $x168 $x192)))
 (let (($x55 (= ?x188 (_ bv0 32))))
 (let (($x189 (= $x175 $x55)))
 (let (($x190 (=> $x168 $x189)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x161))))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.0 ?x171)))
 (let (($x173 (=> $x168 $x172)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x164 (_ bv1 32))))
 (let (($x156 (= $x153 $x167)))
 (let (($x157 (=> $x127 $x156)))
 (let (($x28 (and $x127 $x145)))
 (let (($x21 (=> $x28 $x45)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x127 $x155)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x134)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x139)))
 (let (($x141 (= input.spec-%var-t-0.2.0 ?x140)))
 (let (($x144 (=> $x127 $x141)))
 (let (($x39 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x39 $x45)))
 (let ((?x122 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x122 (_ bv1 32))))
 (let (($x57 (= $x127 $x130)))
 (let (($x126 (= ?x122 (_ bv0 32))))
 (let (($x129 (= $x39 $x126)))
 (let (($x299 (and (and (and (and (and (and $x129 $x57) $x128) $x144) $x166) $x21) $x157)))
 (let (($x305 (and (and (and (and (and (and $x299 $x173) $x190) $x193) $x210) $x214) $x229)))
 (let (($x311 (and (and (and (and (and (and $x305 $x231) $x235) $x249) $x267) $x271) $x289)))
 (let (($x312 (and $x311 $x293)))
 (let (($x313 (= $x312 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x119 (concat ?x118 (concat ?x115 (concat ?x97 ?x95)))))
 (let (($x120 (= ?x119 input.dst.llvm-%t)))
 (let (($x123 (= $x120 true)))
 (let (($x121 (= $x123 true)))
 (let (($x99 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x98 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x83 (=> (and $x15 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x84 (= $x83 true)))
 (let (($x113 (= $x84 true)))
 (let (($x114 (= $x113 true)))
 (let ((?x6 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x89 (bvugt ?x6 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x6 (_ bv3 32)))))
 (let (($x102 (=> (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x46 (and $x15 $x44)))
 (let (($x70 (=> (and $x46 (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x20 (= $x70 true)))
 (let (($x91 (= $x20 true)))
 (let (($x93 (= $x91 true)))
 (let ((?x41 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x25 (= (_ bv0 32) ?x41)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (and $x43 $x24)))
 (let (($x52 (and $x27 $x25)))
 (let (($x48 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x48 $x52)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x85)))))))
 (let (($x54 (and $x82 $x37)))
 (let (($x17 (= $x54 true)))
 (let (($x53 (= $x17 true)))
 (let (($x11 (= $x53 true)))
 (let (($x106 (and $x11 $x93)))
 (let (($x108 (and $x106 $x114)))
 (let (($x124 (and $x108 $x121)))
 (let (($x314 (and $x124 $x313)))
 (let (($x412 (and $x314 $x411)))
 (let (($x485 (and $x412 $x484)))
 (let (($x578 (and $x485 $x577)))
 (let (($x656 (and $x578 $x655)))
 (let (($x33 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x657 (and $x33 $x656)))
 (let (($x658 (and $x45 $x657)))
 (let (($x659 (and $x45 $x658)))
 (let (($x666 (=> $x659 $x665)))
 (not $x666)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2064380 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2064383 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2064380 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffff8)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x000cf6b2)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #xfffffffb
                                #x7f)
                         #xfffffff9
                         #xff)
                  #xfffffff8
                  #x0c)))
  (store a!1 #xfffffffa #x9f)))
  (define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x7f9fff0c)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffffb)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x17 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x39 (concat ?x17 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x124 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x124 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x129) (concat ?x44 ?x39))))
 (let (($x14 (= (_ bv0 32) ?x91)))
 (let (($x752 (not $x14)))
 (let (($x753 (or $x14 $x752)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x65 (not $x64)))
 (let (($x754 (and $x65 $x753)))
 (let (($x755 (or $x64 $x754)))
 (let (($x756 (= $x755 false)))
 (let (($x757 (= $x756 true)))
 (let (($x415 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x721 (and $x36 $x415)))
 (let (($x722 (not $x721)))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x719 (and $x36 $x409)))
 (let (($x720 (not $x719)))
 (let (($x367 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x188 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x717 (and $x188 $x367)))
 (let (($x718 (not $x717)))
 (let (($x360 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x715 (and $x188 $x360)))
 (let (($x716 (not $x715)))
 (let (($x712 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x713 (= $x415 $x712)))
 (let (($x714 (=> $x36 $x713)))
 (let (($x80 (= false false)))
 (let (($x410 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x710 (and $x36 $x410)))
 (let (($x711 (=> $x710 $x80)))
 (let (($x707 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x708 (= $x410 $x707)))
 (let (($x709 (=> $x36 $x708)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x704 (= $x409 $x703)))
 (let (($x705 (=> $x36 $x704)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x701 (and $x36 $x383)))
 (let (($x702 (=> $x701 $x80)))
 (let (($x698 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x699 (= $x383 $x698)))
 (let (($x700 (=> $x36 $x699)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x696 (=> $x36 $x695)))
 (let (($x191 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x693 (=> $x191 $x80)))
 (let (($x690 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x691 (= $x367 $x690)))
 (let (($x692 (=> $x188 $x691)))
 (let (($x404 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x688 (and $x188 $x404)))
 (let (($x689 (=> $x688 $x80)))
 (let (($x685 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x686 (= $x404 $x685)))
 (let (($x687 (=> $x188 $x686)))
 (let (($x681 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x682 (= $x360 $x681)))
 (let (($x683 (=> $x188 $x682)))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x679 (and $x188 $x356)))
 (let (($x680 (=> $x679 $x80)))
 (let (($x676 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x677 (= $x356 $x676)))
 (let (($x678 (=> $x188 $x677)))
 (let (($x673 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x674 (=> $x188 $x673)))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x671 (=> $x172 $x80)))
 (let (($x669 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x670 (= $x36 $x669)))
 (let (($x111 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x668 (= $x191 $x111)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x19 (= $x188 $x667)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x666 (= $x172 $x665)))
 (let (($x663 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x728 (and (and (and (and (and (and $x663 $x666) $x19) $x668) $x670) $x671) $x674)))
 (let (($x734 (and (and (and (and (and (and $x728 $x678) $x680) $x683) $x687) $x689) $x692)))
 (let (($x740 (and (and (and (and (and (and $x734 $x693) $x696) $x700) $x702) $x705) $x709)))
 (let (($x746 (and (and (and (and (and (and $x740 $x711) $x714) $x716) $x718) $x720) $x722)))
 (let (($x747 (= $x746 true)))
 (let (($x604 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x283 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x565 (and $x224 $x283)))
 (let (($x617 (and $x565 $x604)))
 (let (($x618 (not $x617)))
 (let (($x642 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x616 (and $x565 $x642)))
 (let (($x648 (not $x616)))
 (let (($x597 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x614 (and $x565 $x597)))
 (let (($x615 (not $x614)))
 (let (($x593 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x613 (and $x565 $x593)))
 (let (($x647 (not $x613)))
 (let (($x582 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x510 (and $x224 $x258)))
 (let (($x612 (and $x510 $x582)))
 (let (($x646 (not $x612)))
 (let (($x577 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x610 (and $x510 $x577)))
 (let (($x611 (not $x610)))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x609 (and $x510 $x554)))
 (let (($x645 (not $x609)))
 (let (($x550 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x644 (and $x510 $x550)))
 (let (($x608 (not $x644)))
 (let (($x605 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x606 (= $x604 $x605)))
 (let (($x607 (=> $x565 $x606)))
 (let (($x602 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x603 (= $x642 $x602)))
 (let (($x643 (=> $x565 $x603)))
 (let (($x598 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x641 (= $x597 $x598)))
 (let (($x599 (=> $x565 $x641)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x595 (= $x593 $x640)))
 (let (($x596 (=> $x565 $x595)))
 (let (($x591 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x639 (=> $x565 $x591)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x283 $x588)))
 (let (($x589 (=> $x224 $x637)))
 (let (($x259 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x504 (and $x224 $x259)))
 (let (($x505 (=> $x504 $x80)))
 (let (($x636 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x586 (= $x259 $x636)))
 (let (($x587 (=> $x224 $x586)))
 (let (($x583 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x635 (= $x582 $x583)))
 (let (($x584 (=> $x510 $x635)))
 (let (($x579 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x580 (= $x577 $x579)))
 (let (($x581 (=> $x510 $x580)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x557 (=> $x510 $x556)))
 (let (($x552 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x553 (= $x550 $x552)))
 (let (($x575 (=> $x510 $x553)))
 (let (($x574 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x548 (=> $x510 $x574)))
 (let (($x573 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x544 (= $x258 $x573)))
 (let (($x545 (=> $x224 $x544)))
 (let (($x242 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x561 (and $x224 $x242)))
 (let (($x562 (=> $x561 $x80)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x242 $x541)))
 (let (($x543 (=> $x224 $x542)))
 (let (($x538 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x539 (=> $x224 $x538)))
 (let (($x210 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x491 (=> $x210 $x80)))
 (let (($x536 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x537 (= $x224 $x536)))
 (let (($x534 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x535 (= $x210 $x534)))
 (let (($x650 (and (and (and (and (and (and $x535 $x537) $x491) $x539) $x543) $x562) $x545)))
 (let (($x627 (and (and (and (and (and (and $x650 $x548) $x575) $x557) $x581) $x584) $x587)))
 (let (($x653 (and (and (and (and (and (and $x627 $x505) $x589) $x639) $x596) $x599) $x643)))
 (let (($x656 (and (and (and (and (and (and $x653 $x607) $x608) $x645) $x611) $x646) $x647)))
 (let (($x659 (and (and (and $x656 $x615) $x648) $x618)))
 (let (($x660 (= $x659 true)))
 (let (($x512 (not $x565)))
 (let (($x511 (not $x510)))
 (let (($x21 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x378 (and $x21 $x36)))
 (let (($x509 (not $x378)))
 (let (($x351 (and $x21 $x188)))
 (let (($x508 (not $x351)))
 (let (($x564 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x506 (= $x283 $x564)))
 (let (($x507 (=> $x224 $x506)))
 (let (($x501 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x502 (= $x259 $x501)))
 (let (($x503 (=> $x224 $x502)))
 (let (($x498 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x258 $x498)))
 (let (($x500 (=> $x224 $x499)))
 (let (($x495 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x242 $x495)))
 (let (($x497 (=> $x224 $x496)))
 (let (($x493 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x560 (=> $x224 $x493)))
 (let (($x490 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x558 (= $x36 $x490)))
 (let (($x559 (=> $x21 $x558)))
 (let (($x374 (and $x21 $x191)))
 (let (($x375 (=> $x374 $x80)))
 (let (($x487 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x488 (= $x191 $x487)))
 (let (($x489 (=> $x21 $x488)))
 (let (($x483 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x484 (= $x188 $x483)))
 (let (($x485 (=> $x21 $x484)))
 (let (($x347 (and $x21 $x172)))
 (let (($x400 (=> $x347 $x80)))
 (let (($x461 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x462 (= $x172 $x461)))
 (let (($x463 (=> $x21 $x462)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x460 (=> $x21 $x459)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x340 (=> $x145 $x80)))
 (let (($x457 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x458 (= $x224 $x457)))
 (let (($x455 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x456 (= $x210 $x455)))
 (let (($x453 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x454 (= $x21 $x453)))
 (let (($x479 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x452 (= $x145 $x479)))
 (let (($x450 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x517 (and (and (and (and (and (and $x450 $x452) $x454) $x456) $x458) $x340) $x460)))
 (let (($x522 (and (and (and (and (and (and $x517 $x463) $x400) $x485) $x489) $x375) $x559)))
 (let (($x527 (and (and (and (and (and (and $x522 $x491) $x560) $x497) $x562) $x500) $x503)))
 (let (($x531 (and (and (and (and (and (and $x527 $x505) $x507) $x508) $x509) $x511) $x512)))
 (let (($x532 (= $x531 true)))
 (let (($x469 (and $x378 $x415)))
 (let (($x428 (not $x469)))
 (let (($x426 (and $x378 $x410)))
 (let (($x427 (not $x426)))
 (let (($x468 (and $x378 $x409)))
 (let (($x425 (not $x468)))
 (let (($x424 (and $x378 $x383)))
 (let (($x467 (not $x424)))
 (let (($x466 (and $x351 $x367)))
 (let (($x423 (not $x466)))
 (let (($x421 (and $x351 $x404)))
 (let (($x422 (not $x421)))
 (let (($x465 (and $x351 $x360)))
 (let (($x420 (not $x465)))
 (let (($x418 (and $x351 $x356)))
 (let (($x419 (not $x418)))
 (let (($x416 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x417 (= $x415 $x416)))
 (let (($x464 (=> $x378 $x417)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x410 $x412)))
 (let (($x414 (=> $x378 $x413)))
 (let (($x388 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x389 (= $x409 $x388)))
 (let (($x390 (=> $x378 $x389)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x378 $x386)))
 (let (($x381 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x408 (=> $x378 $x381)))
 (let (($x376 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x377 (= $x36 $x376)))
 (let (($x407 (=> $x21 $x377)))
 (let (($x406 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x372 (= $x191 $x406)))
 (let (($x373 (=> $x21 $x372)))
 (let (($x368 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x369 (= $x367 $x368)))
 (let (($x370 (=> $x351 $x369)))
 (let (($x365 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x366 (= $x404 $x365)))
 (let (($x405 (=> $x351 $x366)))
 (let (($x361 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x403 (= $x360 $x361)))
 (let (($x362 (=> $x351 $x403)))
 (let (($x402 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x358 (= $x356 $x402)))
 (let (($x359 (=> $x351 $x358)))
 (let (($x401 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x354 (=> $x351 $x401)))
 (let (($x348 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x349 (= $x188 $x348)))
 (let (($x350 (=> $x21 $x349)))
 (let (($x344 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x172 $x344)))
 (let (($x346 (=> $x21 $x345)))
 (let (($x342 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x343 (=> $x21 $x342)))
 (let (($x338 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x339 (= $x21 $x338)))
 (let (($x337 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x398 (= $x145 $x337)))
 (let (($x432 (and (and (and (and (and (and $x398 $x339) $x340) $x343) $x346) $x400) $x350)))
 (let (($x437 (and (and (and (and (and (and $x432 $x354) $x359) $x362) $x405) $x370) $x373)))
 (let (($x441 (and (and (and (and (and (and $x437 $x375) $x407) $x408) $x387) $x390) $x414)))
 (let (($x445 (and (and (and (and (and (and $x441 $x464) $x419) $x420) $x422) $x423) $x467)))
 (let (($x447 (and (and (and $x445 $x425) $x427) $x428)))
 (let (($x448 (= $x447 true)))
 (let (($x95 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x228 (and $x95 $x224)))
 (let (($x293 (and $x228 $x259)))
 (let (($x312 (not $x293)))
 (let (($x291 (and $x228 $x283)))
 (let (($x292 (not $x291)))
 (let (($x311 (and $x228 $x242)))
 (let (($x290 (not $x311)))
 (let (($x288 (and $x228 $x258)))
 (let (($x289 (not $x288)))
 (let (($x156 (and $x95 $x21)))
 (let (($x286 (and $x156 $x191)))
 (let (($x287 (not $x286)))
 (let (($x284 (and $x156 $x36)))
 (let (($x285 (not $x284)))
 (let (($x278 (and $x156 $x172)))
 (let (($x281 (not $x278)))
 (let (($x277 (and $x156 $x188)))
 (let (($x275 (not $x277)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x214 (concat ?x213 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x222 (concat ?x215 ?x214))))
 (let ((?x262 (bvadd ?x223 (_ bv8 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x266))))
 (let (($x310 (= (_ bv0 32) ?x271)))
 (let ((?x272 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x272 (_ bv1 32))))
 (let (($x280 (= $x283 $x279)))
 (let (($x276 (=> $x228 $x280)))
 (let (($x273 (= ?x272 (_ bv0 32))))
 (let (($x274 (= $x259 $x273)))
 (let (($x282 (=> $x228 $x274)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x241)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x248)))
 (let (($x251 (= (_ bv0 32) ?x250)))
 (let ((?x252 (ite $x251 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x252 (_ bv1 32))))
 (let (($x255 (= $x258 $x254)))
 (let (($x253 (=> $x228 $x255)))
 (let (($x260 (= ?x252 (_ bv0 32))))
 (let (($x261 (= $x242 $x260)))
 (let (($x257 (=> $x228 $x261)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x306))))
 (let (($x237 (= input.spec-%var-t-0.2.2.2.0 ?x236)))
 (let (($x245 (=> $x228 $x237)))
 (let (($x40 (= (_ bv0 32) ?x223)))
 (let ((?x105 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x105 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x227 (=> $x95 $x226)))
 (let (($x221 (and $x95 $x210)))
 (let (($x56 (=> $x221 $x80)))
 (let (($x219 (= ?x105 (_ bv0 32))))
 (let (($x220 (= $x210 $x219)))
 (let (($x218 (=> $x95 $x220)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x154 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x149 (concat ?x147 ?x154))))
 (let ((?x202 (bvadd ?x151 (_ bv8 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem ?x202))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv2 32))) ?x194))))
 (let (($x197 (= (_ bv0 32) ?x200)))
 (let ((?x198 (ite $x197 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x198 (_ bv1 32))))
 (let (($x101 (= $x36 $x207)))
 (let (($x208 (=> $x156 $x101)))
 (let (($x203 (= ?x198 (_ bv0 32))))
 (let (($x199 (= $x191 $x203)))
 (let (($x205 (=> $x156 $x199)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let (($x174 (= (_ bv0 32) ?x177)))
 (let ((?x178 (ite $x174 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x178 (_ bv1 32))))
 (let (($x189 (= $x188 $x55)))
 (let (($x190 (=> $x156 $x189)))
 (let (($x181 (= ?x178 (_ bv0 32))))
 (let (($x183 (= $x172 $x181)))
 (let (($x184 (=> $x156 $x183)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x169))))
 (let (($x161 (= input.spec-%var-t-0.2.1.2.0 ?x159)))
 (let (($x8 (=> $x156 $x161)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x164 (_ bv1 32))))
 (let (($x153 (= $x21 $x298)))
 (let (($x167 (=> $x95 $x153)))
 (let (($x297 (and $x95 $x145)))
 (let (($x28 (=> $x297 $x80)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x95 $x155)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x132)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x134)))
 (let (($x144 (= input.spec-%var-t-0.2.0 ?x141)))
 (let (($x296 (=> $x95 $x144)))
 (let (($x97 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x136 (=> $x97 $x80)))
 (let ((?x73 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x73 (_ bv1 32))))
 (let (($x295 (= $x95 $x128)))
 (let (($x81 (= ?x73 (_ bv0 32))))
 (let (($x30 (= $x97 $x81)))
 (let (($x318 (and (and (and (and (and (and $x30 $x295) $x136) $x296) $x166) $x28) $x167)))
 (let (($x322 (and (and (and (and (and (and $x318 $x8) $x184) $x190) $x205) $x208) $x218)))
 (let (($x327 (and (and (and (and (and (and $x322 $x56) $x227) $x245) $x257) $x253) $x282)))
 (let (($x331 (and (and (and (and (and (and $x327 $x276) $x275) $x281) $x285) $x287) $x289)))
 (let (($x333 (and (and (and $x331 $x290) $x292) $x312)))
 (let (($x334 (= $x333 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x87 (concat ?x38 (concat ?x10 (concat ?x67 ?x52)))))
 (let (($x46 (= ?x87 input.dst.llvm-%t)))
 (let (($x107 (= $x46 true)))
 (let (($x69 (= $x107 true)))
 (let (($x70 (bvugt ?x124 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x5 (=> (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x51 $x70)))))))
 (let (($x108 (=> (and $x65 (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x51 $x70)))))))
 (let (($x33 (= $x108 true)))
 (let (($x99 (= $x33 true)))
 (let (($x15 (= $x99 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x45 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x294 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x130 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x106 (and $x65 $x14)))
 (let (($x127 (=> (and $x106 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x7 (= $x127 true)))
 (let (($x60 (= $x7 true)))
 (let (($x90 (= $x60 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x24 (= (_ bv0 32) ?x9)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (and $x82 $x43)))
 (let (($x27 (and $x32 $x24)))
 (let (($x96 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x96 $x27)))
 (let (($x93 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x93)))))))
 (let (($x37 (and $x110 $x12)))
 (let (($x98 (= $x37 true)))
 (let (($x120 (= $x98 true)))
 (let (($x59 (= $x120 true)))
 (let (($x61 (and $x59 $x90)))
 (let (($x83 (and $x61 $x15)))
 (let (($x50 (and $x83 $x69)))
 (let (($x335 (and $x50 $x334)))
 (let (($x449 (and $x335 $x448)))
 (let (($x571 (and $x449 $x532)))
 (let (($x661 (and $x571 $x660)))
 (let (($x748 (and $x661 $x747)))
 (let (($x117 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x749 (and $x117 $x748)))
 (let (($x750 (and $x80 $x749)))
 (let (($x751 (and $x80 $x750)))
 (let (($x758 (=> $x751 $x757)))
 (not $x758))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x17 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x39 (concat ?x17 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x124 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x124 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x129) (concat ?x44 ?x39))))
 (let (($x14 (= (_ bv0 32) ?x91)))
 (let (($x752 (not $x14)))
 (let (($x753 (or $x14 $x752)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x65 (not $x64)))
 (let (($x754 (and $x65 $x753)))
 (let (($x755 (or $x64 $x754)))
 (let (($x756 (= $x755 false)))
 (let (($x757 (= $x756 true)))
 (let (($x415 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x721 (and $x36 $x415)))
 (let (($x722 (not $x721)))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x719 (and $x36 $x409)))
 (let (($x720 (not $x719)))
 (let (($x367 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x188 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x717 (and $x188 $x367)))
 (let (($x718 (not $x717)))
 (let (($x360 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x715 (and $x188 $x360)))
 (let (($x716 (not $x715)))
 (let (($x712 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x713 (= $x415 $x712)))
 (let (($x714 (=> $x36 $x713)))
 (let (($x80 (= false false)))
 (let (($x410 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x710 (and $x36 $x410)))
 (let (($x711 (=> $x710 $x80)))
 (let (($x707 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x708 (= $x410 $x707)))
 (let (($x709 (=> $x36 $x708)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x704 (= $x409 $x703)))
 (let (($x705 (=> $x36 $x704)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x701 (and $x36 $x383)))
 (let (($x702 (=> $x701 $x80)))
 (let (($x698 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x699 (= $x383 $x698)))
 (let (($x700 (=> $x36 $x699)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x696 (=> $x36 $x695)))
 (let (($x191 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x693 (=> $x191 $x80)))
 (let (($x690 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x691 (= $x367 $x690)))
 (let (($x692 (=> $x188 $x691)))
 (let (($x404 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x688 (and $x188 $x404)))
 (let (($x689 (=> $x688 $x80)))
 (let (($x685 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x686 (= $x404 $x685)))
 (let (($x687 (=> $x188 $x686)))
 (let (($x681 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x682 (= $x360 $x681)))
 (let (($x683 (=> $x188 $x682)))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x679 (and $x188 $x356)))
 (let (($x680 (=> $x679 $x80)))
 (let (($x676 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x677 (= $x356 $x676)))
 (let (($x678 (=> $x188 $x677)))
 (let (($x673 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x674 (=> $x188 $x673)))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x671 (=> $x172 $x80)))
 (let (($x669 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x670 (= $x36 $x669)))
 (let (($x111 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x668 (= $x191 $x111)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x19 (= $x188 $x667)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x666 (= $x172 $x665)))
 (let (($x663 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x728 (and (and (and (and (and (and $x663 $x666) $x19) $x668) $x670) $x671) $x674)))
 (let (($x734 (and (and (and (and (and (and $x728 $x678) $x680) $x683) $x687) $x689) $x692)))
 (let (($x740 (and (and (and (and (and (and $x734 $x693) $x696) $x700) $x702) $x705) $x709)))
 (let (($x746 (and (and (and (and (and (and $x740 $x711) $x714) $x716) $x718) $x720) $x722)))
 (let (($x747 (= $x746 true)))
 (let (($x604 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x283 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x565 (and $x224 $x283)))
 (let (($x617 (and $x565 $x604)))
 (let (($x618 (not $x617)))
 (let (($x642 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x616 (and $x565 $x642)))
 (let (($x648 (not $x616)))
 (let (($x597 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x614 (and $x565 $x597)))
 (let (($x615 (not $x614)))
 (let (($x593 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x613 (and $x565 $x593)))
 (let (($x647 (not $x613)))
 (let (($x582 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x510 (and $x224 $x258)))
 (let (($x612 (and $x510 $x582)))
 (let (($x646 (not $x612)))
 (let (($x577 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x610 (and $x510 $x577)))
 (let (($x611 (not $x610)))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x609 (and $x510 $x554)))
 (let (($x645 (not $x609)))
 (let (($x550 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x644 (and $x510 $x550)))
 (let (($x608 (not $x644)))
 (let (($x605 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x606 (= $x604 $x605)))
 (let (($x607 (=> $x565 $x606)))
 (let (($x602 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x603 (= $x642 $x602)))
 (let (($x643 (=> $x565 $x603)))
 (let (($x598 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x641 (= $x597 $x598)))
 (let (($x599 (=> $x565 $x641)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x595 (= $x593 $x640)))
 (let (($x596 (=> $x565 $x595)))
 (let (($x591 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x639 (=> $x565 $x591)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x283 $x588)))
 (let (($x589 (=> $x224 $x637)))
 (let (($x259 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x504 (and $x224 $x259)))
 (let (($x505 (=> $x504 $x80)))
 (let (($x636 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x586 (= $x259 $x636)))
 (let (($x587 (=> $x224 $x586)))
 (let (($x583 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x635 (= $x582 $x583)))
 (let (($x584 (=> $x510 $x635)))
 (let (($x579 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x580 (= $x577 $x579)))
 (let (($x581 (=> $x510 $x580)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x557 (=> $x510 $x556)))
 (let (($x552 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x553 (= $x550 $x552)))
 (let (($x575 (=> $x510 $x553)))
 (let (($x574 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x548 (=> $x510 $x574)))
 (let (($x573 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x544 (= $x258 $x573)))
 (let (($x545 (=> $x224 $x544)))
 (let (($x242 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x561 (and $x224 $x242)))
 (let (($x562 (=> $x561 $x80)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x242 $x541)))
 (let (($x543 (=> $x224 $x542)))
 (let (($x538 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x539 (=> $x224 $x538)))
 (let (($x210 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x491 (=> $x210 $x80)))
 (let (($x536 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x537 (= $x224 $x536)))
 (let (($x534 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x535 (= $x210 $x534)))
 (let (($x650 (and (and (and (and (and (and $x535 $x537) $x491) $x539) $x543) $x562) $x545)))
 (let (($x627 (and (and (and (and (and (and $x650 $x548) $x575) $x557) $x581) $x584) $x587)))
 (let (($x653 (and (and (and (and (and (and $x627 $x505) $x589) $x639) $x596) $x599) $x643)))
 (let (($x656 (and (and (and (and (and (and $x653 $x607) $x608) $x645) $x611) $x646) $x647)))
 (let (($x659 (and (and (and $x656 $x615) $x648) $x618)))
 (let (($x660 (= $x659 true)))
 (let (($x512 (not $x565)))
 (let (($x511 (not $x510)))
 (let (($x21 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x378 (and $x21 $x36)))
 (let (($x509 (not $x378)))
 (let (($x351 (and $x21 $x188)))
 (let (($x508 (not $x351)))
 (let (($x564 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x506 (= $x283 $x564)))
 (let (($x507 (=> $x224 $x506)))
 (let (($x501 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x502 (= $x259 $x501)))
 (let (($x503 (=> $x224 $x502)))
 (let (($x498 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x258 $x498)))
 (let (($x500 (=> $x224 $x499)))
 (let (($x495 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x242 $x495)))
 (let (($x497 (=> $x224 $x496)))
 (let (($x493 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x560 (=> $x224 $x493)))
 (let (($x490 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x558 (= $x36 $x490)))
 (let (($x559 (=> $x21 $x558)))
 (let (($x374 (and $x21 $x191)))
 (let (($x375 (=> $x374 $x80)))
 (let (($x487 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x488 (= $x191 $x487)))
 (let (($x489 (=> $x21 $x488)))
 (let (($x483 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x484 (= $x188 $x483)))
 (let (($x485 (=> $x21 $x484)))
 (let (($x347 (and $x21 $x172)))
 (let (($x400 (=> $x347 $x80)))
 (let (($x461 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x462 (= $x172 $x461)))
 (let (($x463 (=> $x21 $x462)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x460 (=> $x21 $x459)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x340 (=> $x145 $x80)))
 (let (($x457 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x458 (= $x224 $x457)))
 (let (($x455 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x456 (= $x210 $x455)))
 (let (($x453 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x454 (= $x21 $x453)))
 (let (($x479 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x452 (= $x145 $x479)))
 (let (($x450 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x517 (and (and (and (and (and (and $x450 $x452) $x454) $x456) $x458) $x340) $x460)))
 (let (($x522 (and (and (and (and (and (and $x517 $x463) $x400) $x485) $x489) $x375) $x559)))
 (let (($x527 (and (and (and (and (and (and $x522 $x491) $x560) $x497) $x562) $x500) $x503)))
 (let (($x531 (and (and (and (and (and (and $x527 $x505) $x507) $x508) $x509) $x511) $x512)))
 (let (($x532 (= $x531 true)))
 (let (($x469 (and $x378 $x415)))
 (let (($x428 (not $x469)))
 (let (($x426 (and $x378 $x410)))
 (let (($x427 (not $x426)))
 (let (($x468 (and $x378 $x409)))
 (let (($x425 (not $x468)))
 (let (($x424 (and $x378 $x383)))
 (let (($x467 (not $x424)))
 (let (($x466 (and $x351 $x367)))
 (let (($x423 (not $x466)))
 (let (($x421 (and $x351 $x404)))
 (let (($x422 (not $x421)))
 (let (($x465 (and $x351 $x360)))
 (let (($x420 (not $x465)))
 (let (($x418 (and $x351 $x356)))
 (let (($x419 (not $x418)))
 (let (($x416 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x417 (= $x415 $x416)))
 (let (($x464 (=> $x378 $x417)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x410 $x412)))
 (let (($x414 (=> $x378 $x413)))
 (let (($x388 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x389 (= $x409 $x388)))
 (let (($x390 (=> $x378 $x389)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x378 $x386)))
 (let (($x381 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x408 (=> $x378 $x381)))
 (let (($x376 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x377 (= $x36 $x376)))
 (let (($x407 (=> $x21 $x377)))
 (let (($x406 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x372 (= $x191 $x406)))
 (let (($x373 (=> $x21 $x372)))
 (let (($x368 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x369 (= $x367 $x368)))
 (let (($x370 (=> $x351 $x369)))
 (let (($x365 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x366 (= $x404 $x365)))
 (let (($x405 (=> $x351 $x366)))
 (let (($x361 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x403 (= $x360 $x361)))
 (let (($x362 (=> $x351 $x403)))
 (let (($x402 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x358 (= $x356 $x402)))
 (let (($x359 (=> $x351 $x358)))
 (let (($x401 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x354 (=> $x351 $x401)))
 (let (($x348 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x349 (= $x188 $x348)))
 (let (($x350 (=> $x21 $x349)))
 (let (($x344 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x172 $x344)))
 (let (($x346 (=> $x21 $x345)))
 (let (($x342 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x343 (=> $x21 $x342)))
 (let (($x338 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x339 (= $x21 $x338)))
 (let (($x337 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x398 (= $x145 $x337)))
 (let (($x432 (and (and (and (and (and (and $x398 $x339) $x340) $x343) $x346) $x400) $x350)))
 (let (($x437 (and (and (and (and (and (and $x432 $x354) $x359) $x362) $x405) $x370) $x373)))
 (let (($x441 (and (and (and (and (and (and $x437 $x375) $x407) $x408) $x387) $x390) $x414)))
 (let (($x445 (and (and (and (and (and (and $x441 $x464) $x419) $x420) $x422) $x423) $x467)))
 (let (($x447 (and (and (and $x445 $x425) $x427) $x428)))
 (let (($x448 (= $x447 true)))
 (let (($x95 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x228 (and $x95 $x224)))
 (let (($x293 (and $x228 $x259)))
 (let (($x312 (not $x293)))
 (let (($x291 (and $x228 $x283)))
 (let (($x292 (not $x291)))
 (let (($x311 (and $x228 $x242)))
 (let (($x290 (not $x311)))
 (let (($x288 (and $x228 $x258)))
 (let (($x289 (not $x288)))
 (let (($x156 (and $x95 $x21)))
 (let (($x286 (and $x156 $x191)))
 (let (($x287 (not $x286)))
 (let (($x284 (and $x156 $x36)))
 (let (($x285 (not $x284)))
 (let (($x278 (and $x156 $x172)))
 (let (($x281 (not $x278)))
 (let (($x277 (and $x156 $x188)))
 (let (($x275 (not $x277)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x214 (concat ?x213 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x222 (concat ?x215 ?x214))))
 (let ((?x262 (bvadd ?x223 (_ bv8 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x266))))
 (let (($x310 (= (_ bv0 32) ?x271)))
 (let ((?x272 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x272 (_ bv1 32))))
 (let (($x280 (= $x283 $x279)))
 (let (($x276 (=> $x228 $x280)))
 (let (($x273 (= ?x272 (_ bv0 32))))
 (let (($x274 (= $x259 $x273)))
 (let (($x282 (=> $x228 $x274)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x241)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x248)))
 (let (($x251 (= (_ bv0 32) ?x250)))
 (let ((?x252 (ite $x251 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x252 (_ bv1 32))))
 (let (($x255 (= $x258 $x254)))
 (let (($x253 (=> $x228 $x255)))
 (let (($x260 (= ?x252 (_ bv0 32))))
 (let (($x261 (= $x242 $x260)))
 (let (($x257 (=> $x228 $x261)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x306))))
 (let (($x237 (= input.spec-%var-t-0.2.2.2.0 ?x236)))
 (let (($x245 (=> $x228 $x237)))
 (let (($x40 (= (_ bv0 32) ?x223)))
 (let ((?x105 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x105 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x227 (=> $x95 $x226)))
 (let (($x221 (and $x95 $x210)))
 (let (($x56 (=> $x221 $x80)))
 (let (($x219 (= ?x105 (_ bv0 32))))
 (let (($x220 (= $x210 $x219)))
 (let (($x218 (=> $x95 $x220)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x154 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x149 (concat ?x147 ?x154))))
 (let ((?x202 (bvadd ?x151 (_ bv8 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem ?x202))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv2 32))) ?x194))))
 (let (($x197 (= (_ bv0 32) ?x200)))
 (let ((?x198 (ite $x197 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x198 (_ bv1 32))))
 (let (($x101 (= $x36 $x207)))
 (let (($x208 (=> $x156 $x101)))
 (let (($x203 (= ?x198 (_ bv0 32))))
 (let (($x199 (= $x191 $x203)))
 (let (($x205 (=> $x156 $x199)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let (($x174 (= (_ bv0 32) ?x177)))
 (let ((?x178 (ite $x174 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x178 (_ bv1 32))))
 (let (($x189 (= $x188 $x55)))
 (let (($x190 (=> $x156 $x189)))
 (let (($x181 (= ?x178 (_ bv0 32))))
 (let (($x183 (= $x172 $x181)))
 (let (($x184 (=> $x156 $x183)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x169))))
 (let (($x161 (= input.spec-%var-t-0.2.1.2.0 ?x159)))
 (let (($x8 (=> $x156 $x161)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x164 (_ bv1 32))))
 (let (($x153 (= $x21 $x298)))
 (let (($x167 (=> $x95 $x153)))
 (let (($x297 (and $x95 $x145)))
 (let (($x28 (=> $x297 $x80)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x95 $x155)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x132)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x134)))
 (let (($x144 (= input.spec-%var-t-0.2.0 ?x141)))
 (let (($x296 (=> $x95 $x144)))
 (let (($x97 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x136 (=> $x97 $x80)))
 (let ((?x73 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x73 (_ bv1 32))))
 (let (($x295 (= $x95 $x128)))
 (let (($x81 (= ?x73 (_ bv0 32))))
 (let (($x30 (= $x97 $x81)))
 (let (($x318 (and (and (and (and (and (and $x30 $x295) $x136) $x296) $x166) $x28) $x167)))
 (let (($x322 (and (and (and (and (and (and $x318 $x8) $x184) $x190) $x205) $x208) $x218)))
 (let (($x327 (and (and (and (and (and (and $x322 $x56) $x227) $x245) $x257) $x253) $x282)))
 (let (($x331 (and (and (and (and (and (and $x327 $x276) $x275) $x281) $x285) $x287) $x289)))
 (let (($x333 (and (and (and $x331 $x290) $x292) $x312)))
 (let (($x334 (= $x333 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x87 (concat ?x38 (concat ?x10 (concat ?x67 ?x52)))))
 (let (($x46 (= ?x87 input.dst.llvm-%t)))
 (let (($x107 (= $x46 true)))
 (let (($x69 (= $x107 true)))
 (let (($x70 (bvugt ?x124 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x5 (=> (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x51 $x70)))))))
 (let (($x108 (=> (and $x65 (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x51 $x70)))))))
 (let (($x33 (= $x108 true)))
 (let (($x99 (= $x33 true)))
 (let (($x15 (= $x99 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x45 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x294 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x130 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x106 (and $x65 $x14)))
 (let (($x127 (=> (and $x106 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x7 (= $x127 true)))
 (let (($x60 (= $x7 true)))
 (let (($x90 (= $x60 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x24 (= (_ bv0 32) ?x9)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (and $x82 $x43)))
 (let (($x27 (and $x32 $x24)))
 (let (($x96 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x96 $x27)))
 (let (($x93 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x93)))))))
 (let (($x37 (and $x110 $x12)))
 (let (($x98 (= $x37 true)))
 (let (($x120 (= $x98 true)))
 (let (($x59 (= $x120 true)))
 (let (($x61 (and $x59 $x90)))
 (let (($x83 (and $x61 $x15)))
 (let (($x50 (and $x83 $x69)))
 (let (($x335 (and $x50 $x334)))
 (let (($x449 (and $x335 $x448)))
 (let (($x571 (and $x449 $x532)))
 (let (($x661 (and $x571 $x660)))
 (let (($x748 (and $x661 $x747)))
 (let (($x117 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x749 (and $x117 $x748)))
 (let (($x750 (and $x80 $x749)))
 (let (($x751 (and $x80 $x750)))
 (let (($x758 (=> $x751 $x757)))
 (not $x758))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2076160 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2076163 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2076160 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x000cf6b2)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #xffffffff
                                #x7e)
                         #xfffffffd
                         #x2e)
                  #xfffffffc
                  #x55)))
  (store a!1 #xfffffffe #xdb)))
  (define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x7edb2e55)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x24 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x27 (concat ?x24 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x109 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x76 (bvadd ?x109 (_ bv3 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem ?x76) (concat ?x98 ?x27))))
 (let (($x64 (= (_ bv0 32) ?x18)))
 (let (($x78 (not $x64)))
 (let (($x67 (or $x64 $x78)))
 (let (($x89 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x58 (not $x89)))
 (let (($x52 (and $x58 $x67)))
 (let (($x203 (or $x89 $x52)))
 (let (($x199 (not $x203)))
 (let (($x181 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x179 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x200 (or $x179 $x181)))
 (let (($x186 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x197 (and $x186 $x200)))
 (let (($x171 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x198 (or $x171 $x197)))
 (let (($x205 (or $x198 $x199)))
 (let (($x393 (= $x205 true)))
 (let (($x36 (= $x393 true)))
 (let (($x206 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x204 (= $x202 $x206)))
 (let (($x301 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x190 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x191 (= $x190 $x301)))
 (let (($x195 (and $x191 $x204)))
 (let (($x196 (= $x195 true)))
 (let (($x183 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x184 (= $x181 $x183)))
 (let (($x174 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x178 (= $x179 $x174)))
 (let (($x392 (and $x178 $x184)))
 (let (($x188 (= $x392 true)))
 (let ((?x172 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x172 (_ bv1 32))))
 (let (($x182 (= $x186 $x187)))
 (let (($x173 (= ?x172 (_ bv0 32))))
 (let (($x180 (= $x171 $x173)))
 (let (($x185 (and $x180 $x182)))
 (let (($x175 (= $x185 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x299 (concat ?x162 (concat ?x160 ?x156)))))
 (let (($x100 (= ?x169 input.dst.llvm-%t)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x165 (= (bvand ?x18 (_ bv4294967280 32)) ?x18)))
 (let (($x94 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x163 (and $x94 $x165)))
 (let (($x73 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x81 (and true $x73)))
 (let (($x148 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv4 32))) (bvult ?x109 (bvsub ?x109 (_ bv4 32))))))
 (let (($x146 (and (and (and $x148 $x81) $x94) $x163)))
 (let (($x151 (= true $x146)))
 (let (($x317 (=> $x58 $x151)))
 (let (($x21 (= $x317 true)))
 (let (($x298 (= $x21 true)))
 (let (($x153 (= $x298 true)))
 (let (($x152 (=> $x78 $x151)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x136 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x119 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x125 (bvadd ?x119 (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x125) (concat ?x139 ?x136))))
 (let (($x138 (= (bvand ?x131 (_ bv4294967280 32)) ?x131)))
 (let (($x128 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x137 (and $x128 $x138)))
 (let (($x107 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv8 32))) (bvult ?x119 (bvsub ?x119 (_ bv8 32))))))
 (let (($x141 (and (and (and $x107 $x81) $x128) $x137)))
 (let (($x144 (= true $x141)))
 (let (($x296 (=> $x64 $x144)))
 (let (($x164 (and $x296 $x152)))
 (let (($x35 (= true $x164)))
 (let (($x155 (=> $x52 $x35)))
 (let (($x166 (= $x155 true)))
 (let (($x316 (= $x166 true)))
 (let (($x297 (= $x316 true)))
 (let (($x15 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x83 (= $x15 true)))
 (let (($x104 (= $x83 true)))
 (let (($x38 (= $x104 true)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x51)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x68 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x61 $x68)))
 (let (($x41 (and $x53 $x70)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x25 (and $x57 $x41)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x23)))))))
 (let (($x47 (and $x90 $x25)))
 (let (($x20 (= $x47 true)))
 (let (($x5 (= $x20 true)))
 (let (($x108 (= $x5 true)))
 (let (($x84 (and $x108 $x38)))
 (let (($x10 (and $x84 $x38)))
 (let (($x28 (and $x10 $x297)))
 (let (($x167 (and $x28 $x153)))
 (let (($x8 (and $x167 $x161)))
 (let (($x300 (and $x8 $x175)))
 (let (($x55 (and $x300 $x188)))
 (let (($x193 (and $x55 $x196)))
 (let (($x11 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x302 (and $x11 $x193)))
 (let (($x106 (= false false)))
 (let (($x192 (and $x106 $x302)))
 (let (($x194 (and $x106 $x192)))
 (let (($x123 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x125)))
 (let (($x14 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x65 (and $x58 $x64)))
 (let (($x124 (=> (and $x65 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x110 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x43 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x110)))))))
 (let (($x75 (=> (and $x58 (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x93 $x110)))))))
 (let (($x129 (and $x75 $x124)))
 (let (($x201 (and $x129 $x194)))
 (let (($x207 (=> $x201 $x36)))
 (not $x207))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x24 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x27 (concat ?x24 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x109 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x76 (bvadd ?x109 (_ bv3 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem ?x76) (concat ?x98 ?x27))))
 (let (($x64 (= (_ bv0 32) ?x18)))
 (let (($x78 (not $x64)))
 (let (($x67 (or $x64 $x78)))
 (let (($x89 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x58 (not $x89)))
 (let (($x52 (and $x58 $x67)))
 (let (($x203 (or $x89 $x52)))
 (let (($x199 (not $x203)))
 (let (($x181 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x179 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x200 (or $x179 $x181)))
 (let (($x186 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x197 (and $x186 $x200)))
 (let (($x171 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x198 (or $x171 $x197)))
 (let (($x205 (or $x198 $x199)))
 (let (($x393 (= $x205 true)))
 (let (($x36 (= $x393 true)))
 (let (($x206 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x204 (= $x202 $x206)))
 (let (($x301 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x190 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x191 (= $x190 $x301)))
 (let (($x195 (and $x191 $x204)))
 (let (($x196 (= $x195 true)))
 (let (($x183 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x184 (= $x181 $x183)))
 (let (($x174 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x178 (= $x179 $x174)))
 (let (($x392 (and $x178 $x184)))
 (let (($x188 (= $x392 true)))
 (let ((?x172 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x172 (_ bv1 32))))
 (let (($x182 (= $x186 $x187)))
 (let (($x173 (= ?x172 (_ bv0 32))))
 (let (($x180 (= $x171 $x173)))
 (let (($x185 (and $x180 $x182)))
 (let (($x175 (= $x185 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x299 (concat ?x162 (concat ?x160 ?x156)))))
 (let (($x100 (= ?x169 input.dst.llvm-%t)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x165 (= (bvand ?x18 (_ bv4294967280 32)) ?x18)))
 (let (($x94 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x163 (and $x94 $x165)))
 (let (($x73 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x81 (and true $x73)))
 (let (($x148 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv4 32))) (bvult ?x109 (bvsub ?x109 (_ bv4 32))))))
 (let (($x146 (and (and (and $x148 $x81) $x94) $x163)))
 (let (($x151 (= true $x146)))
 (let (($x317 (=> $x58 $x151)))
 (let (($x21 (= $x317 true)))
 (let (($x298 (= $x21 true)))
 (let (($x153 (= $x298 true)))
 (let (($x152 (=> $x78 $x151)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x136 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x119 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x125 (bvadd ?x119 (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x125) (concat ?x139 ?x136))))
 (let (($x138 (= (bvand ?x131 (_ bv4294967280 32)) ?x131)))
 (let (($x128 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x137 (and $x128 $x138)))
 (let (($x107 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv8 32))) (bvult ?x119 (bvsub ?x119 (_ bv8 32))))))
 (let (($x141 (and (and (and $x107 $x81) $x128) $x137)))
 (let (($x144 (= true $x141)))
 (let (($x296 (=> $x64 $x144)))
 (let (($x164 (and $x296 $x152)))
 (let (($x35 (= true $x164)))
 (let (($x155 (=> $x52 $x35)))
 (let (($x166 (= $x155 true)))
 (let (($x316 (= $x166 true)))
 (let (($x297 (= $x316 true)))
 (let (($x15 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x83 (= $x15 true)))
 (let (($x104 (= $x83 true)))
 (let (($x38 (= $x104 true)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x51)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x68 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x61 $x68)))
 (let (($x41 (and $x53 $x70)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x25 (and $x57 $x41)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x23)))))))
 (let (($x47 (and $x90 $x25)))
 (let (($x20 (= $x47 true)))
 (let (($x5 (= $x20 true)))
 (let (($x108 (= $x5 true)))
 (let (($x84 (and $x108 $x38)))
 (let (($x10 (and $x84 $x38)))
 (let (($x28 (and $x10 $x297)))
 (let (($x167 (and $x28 $x153)))
 (let (($x8 (and $x167 $x161)))
 (let (($x300 (and $x8 $x175)))
 (let (($x55 (and $x300 $x188)))
 (let (($x193 (and $x55 $x196)))
 (let (($x11 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x302 (and $x11 $x193)))
 (let (($x106 (= false false)))
 (let (($x192 (and $x106 $x302)))
 (let (($x194 (and $x106 $x192)))
 (let (($x123 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x125)))
 (let (($x14 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x65 (and $x58 $x64)))
 (let (($x124 (=> (and $x65 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x110 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x43 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x110)))))))
 (let (($x75 (=> (and $x58 (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x93 $x110)))))))
 (let (($x129 (and $x75 $x124)))
 (let (($x201 (and $x129 $x194)))
 (let (($x207 (=> $x201 $x36)))
 (not $x207))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3890X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x102 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x11 (bvadd ?x85 (_ bv3 32))))
 (let ((?x9 (concat (select input.dst.llvm-mem ?x11) (concat ?x63 ?x122))))
 (let ((?x327 (bvadd ?x9 (_ bv8 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x276))))
 (let (($x329 (= (_ bv0 32) ?x281)))
 (let ((?x284 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x289 (bvuge ?x284 (_ bv1 32))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x40 (concat ?x223 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x221 (concat ?x322 (concat ?x219 ?x40))))
 (let ((?x270 (bvadd ?x221 (_ bv8 32))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x265))))
 (let (($x273 (= (_ bv0 32) ?x272)))
 (let ((?x274 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x274 (_ bv1 32))))
 (let (($x331 (= $x288 $x289)))
 (let (($x323 (= (_ bv0 32) ?x221)))
 (let ((?x224 (ite $x323 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x224 (_ bv1 32))))
 (let (($x311 (=> $x229 $x331)))
 (let (($x12 (= false false)))
 (let (($x282 (= ?x274 (_ bv0 32))))
 (let (($x287 (and $x229 $x282)))
 (let (($x330 (=> $x287 $x12)))
 (let (($x285 (= ?x284 (_ bv0 32))))
 (let (($x396 (= $x282 $x285)))
 (let (($x286 (=> $x229 $x396)))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x258 (concat ?x325 (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x259 (concat ?x256 (concat ?x255 ?x258))))
 (let (($x262 (= ?x259 ?x259)))
 (let (($x269 (=> $x229 $x262)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv4 32))))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x250 (concat ?x248 (concat ?x238 ?x247))))
 (let (($x251 (= ?x250 ?x250)))
 (let (($x252 (=> $x229 $x251)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3890X))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv2 32))) ?x305)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv3 32))) ?x236)))
 (let (($x246 (= ?x324 ?x324)))
 (let (($x242 (=> $x229 $x246)))
 (let (($x91 (= (_ bv0 32) ?x9)))
 (let ((?x226 (ite $x91 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x226 (_ bv1 32))))
 (let (($x307 (= $x229 $x235)))
 (let (($x225 (= ?x224 (_ bv0 32))))
 (let (($x228 (=> $x225 $x12)))
 (let (($x292 (and (and (and (and (= ?x221 ?x9) (= $x225 (= ?x226 (_ bv0 32)))) $x228) $x307) $x242)))
 (let (($x334 (and (and (and (and (and $x292 $x252) $x269) $x286) $x330) $x311)))
 (let (($x213 (not true)))
 (let (($x335 (or $x213 $x334)))
 (let (($x212 (= true true)))
 (let (($x336 (and $x212 $x335)))
 (let (($x337 (= $x336 true)))
 (let (($x117 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x318 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x208 (= $x318 $x117)))
 (let (($x101 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x36 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x72 (= $x36 $x101)))
 (let (($x321 (and $x72 $x208)))
 (let (($x209 (= $x321 true)))
 (let (($x197 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x26 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x198 (= $x26 $x197)))
 (let (($x201 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x192 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x200 (= $x192 $x201)))
 (let (($x203 (and $x200 $x198)))
 (let (($x199 (= $x203 true)))
 (let (($x22 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x301 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x206 (bvuge ?x301 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x204 (= $x60 $x206)))
 (let (($x191 (= ?x301 (_ bv0 32))))
 (let (($x320 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x202 (= $x320 $x191)))
 (let (($x195 (and $x202 $x204)))
 (let (($x196 (= $x195 true)))
 (let ((?x169 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x180 (concat ?x173 (concat ?x319 (concat ?x159 ?x169)))))
 (let (($x188 (= ?x180 input.dst.llvm-%t)))
 (let (($x55 (= $x188 true)))
 (let (($x189 (= $x55 true)))
 (let (($x297 (= (bvand ?x9 (_ bv4294967280 32)) ?x9)))
 (let (($x166 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x28 (and $x166 $x297)))
 (let (($x295 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x136 (and true $x295)))
 (let (($x35 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x298 (and (and (and $x35 $x136) $x166) $x28)))
 (let (($x153 (= true $x298)))
 (let (($x31 (not $x22)))
 (let (($x49 (=> $x31 $x153)))
 (let (($x181 (= $x49 true)))
 (let (($x183 (= $x181 true)))
 (let (($x184 (= $x183 true)))
 (let (($x186 (= input.dst.llvm-%t ?x180)))
 (let (($x67 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x187 (and $x67 $x186)))
 (let ((?x108 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x33 (= (_ bv0 32) ?x108)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x20 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x47)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (and $x25 $x20)))
 (let (($x99 (and $x5 $x33)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x127 $x99)))
 (let (($x61 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x41 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x57 $x61)))))))
 (let (($x175 (and (and (and $x41 true) $x15) $x187)))
 (let (($x300 (and $x49 $x175)))
 (let (($x107 (not $x91)))
 (let (($x167 (=> $x107 $x153)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x144 (concat ?x141 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x44 (bvadd ?x74 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x44) (concat ?x142 ?x144))))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x135 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x149 (and $x135 $x150)))
 (let (($x133 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv8 32))) (bvult ?x74 (bvsub ?x74 (_ bv8 32))))))
 (let (($x147 (and (and (and $x133 $x136) $x135) $x149)))
 (let (($x165 (= true $x147)))
 (let (($x163 (=> $x91 $x165)))
 (let (($x158 (and $x163 $x167)))
 (let (($x299 (= true $x158)))
 (let (($x81 (or $x91 $x107)))
 (let (($x132 (and $x31 $x81)))
 (let (($x170 (=> $x132 $x299)))
 (let (($x176 (and $x170 $x300)))
 (let (($x179 (= $x176 true)))
 (let (($x177 (= $x179 true)))
 (let (($x174 (= $x177 true)))
 (let (($x162 (= $x170 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x50 (and $x31 $x107)))
 (let (($x69 (= $x50 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x115 (= $x29 true)))
 (let (($x83 (and $x41 $x15)))
 (let (($x104 (= $x83 true)))
 (let (($x38 (= $x104 true)))
 (let (($x84 (= $x38 true)))
 (let (($x87 (and $x84 $x115)))
 (let (($x46 (and $x87 $x115)))
 (let (($x73 (and $x46 $x97)))
 (let (($x156 (and $x73 $x160)))
 (let (($x178 (and $x156 $x174)))
 (let (($x392 (and $x178 $x184)))
 (let (($x190 (and $x392 $x189)))
 (let (($x193 (and $x190 $x196)))
 (let (($x302 (and $x193 $x196)))
 (let (($x205 (and $x302 $x199)))
 (let (($x210 (and $x205 $x209)))
 (let (($x23 (and $x60 $x26)))
 (let (($x303 (and $x23 $x210)))
 (let (($x54 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x217 (and $x54 $x303)))
 (let (($x222 (and $x12 $x217)))
 (let (($x304 (and $x12 $x222)))
 (let (($x119 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x44)))
 (let (($x39 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x120 $x119)))))))
 (let (($x86 (and $x31 $x91)))
 (let (($x98 (=> (and $x86 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x120 $x119)))))))
 (let (($x88 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x66 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x88)))))))
 (let (($x58 (=> (and $x31 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x88)))))))
 (let (($x75 (and $x58 $x98)))
 (let (($x215 (and $x75 $x304)))
 (let (($x398 (=> $x215 $x337)))
 (not $x398))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3890X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x102 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x11 (bvadd ?x85 (_ bv3 32))))
 (let ((?x9 (concat (select input.dst.llvm-mem ?x11) (concat ?x63 ?x122))))
 (let ((?x327 (bvadd ?x9 (_ bv8 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x276))))
 (let (($x329 (= (_ bv0 32) ?x281)))
 (let ((?x284 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x289 (bvuge ?x284 (_ bv1 32))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x40 (concat ?x223 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x221 (concat ?x322 (concat ?x219 ?x40))))
 (let ((?x270 (bvadd ?x221 (_ bv8 32))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x265))))
 (let (($x273 (= (_ bv0 32) ?x272)))
 (let ((?x274 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x274 (_ bv1 32))))
 (let (($x331 (= $x288 $x289)))
 (let (($x323 (= (_ bv0 32) ?x221)))
 (let ((?x224 (ite $x323 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x224 (_ bv1 32))))
 (let (($x311 (=> $x229 $x331)))
 (let (($x12 (= false false)))
 (let (($x282 (= ?x274 (_ bv0 32))))
 (let (($x287 (and $x229 $x282)))
 (let (($x330 (=> $x287 $x12)))
 (let (($x285 (= ?x284 (_ bv0 32))))
 (let (($x396 (= $x282 $x285)))
 (let (($x286 (=> $x229 $x396)))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x258 (concat ?x325 (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x259 (concat ?x256 (concat ?x255 ?x258))))
 (let (($x262 (= ?x259 ?x259)))
 (let (($x269 (=> $x229 $x262)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv4 32))))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3890X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x250 (concat ?x248 (concat ?x238 ?x247))))
 (let (($x251 (= ?x250 ?x250)))
 (let (($x252 (=> $x229 $x251)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3890X))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv2 32))) ?x305)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3890X (_ bv3 32))) ?x236)))
 (let (($x246 (= ?x324 ?x324)))
 (let (($x242 (=> $x229 $x246)))
 (let (($x91 (= (_ bv0 32) ?x9)))
 (let ((?x226 (ite $x91 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x226 (_ bv1 32))))
 (let (($x307 (= $x229 $x235)))
 (let (($x225 (= ?x224 (_ bv0 32))))
 (let (($x228 (=> $x225 $x12)))
 (let (($x292 (and (and (and (and (= ?x221 ?x9) (= $x225 (= ?x226 (_ bv0 32)))) $x228) $x307) $x242)))
 (let (($x334 (and (and (and (and (and $x292 $x252) $x269) $x286) $x330) $x311)))
 (let (($x213 (not true)))
 (let (($x335 (or $x213 $x334)))
 (let (($x212 (= true true)))
 (let (($x336 (and $x212 $x335)))
 (let (($x337 (= $x336 true)))
 (let (($x117 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x318 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x208 (= $x318 $x117)))
 (let (($x101 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x36 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x72 (= $x36 $x101)))
 (let (($x321 (and $x72 $x208)))
 (let (($x209 (= $x321 true)))
 (let (($x197 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x26 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x198 (= $x26 $x197)))
 (let (($x201 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x192 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x200 (= $x192 $x201)))
 (let (($x203 (and $x200 $x198)))
 (let (($x199 (= $x203 true)))
 (let (($x22 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x301 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x206 (bvuge ?x301 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x204 (= $x60 $x206)))
 (let (($x191 (= ?x301 (_ bv0 32))))
 (let (($x320 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x202 (= $x320 $x191)))
 (let (($x195 (and $x202 $x204)))
 (let (($x196 (= $x195 true)))
 (let ((?x169 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x180 (concat ?x173 (concat ?x319 (concat ?x159 ?x169)))))
 (let (($x188 (= ?x180 input.dst.llvm-%t)))
 (let (($x55 (= $x188 true)))
 (let (($x189 (= $x55 true)))
 (let (($x297 (= (bvand ?x9 (_ bv4294967280 32)) ?x9)))
 (let (($x166 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x28 (and $x166 $x297)))
 (let (($x295 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x136 (and true $x295)))
 (let (($x35 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x298 (and (and (and $x35 $x136) $x166) $x28)))
 (let (($x153 (= true $x298)))
 (let (($x31 (not $x22)))
 (let (($x49 (=> $x31 $x153)))
 (let (($x181 (= $x49 true)))
 (let (($x183 (= $x181 true)))
 (let (($x184 (= $x183 true)))
 (let (($x186 (= input.dst.llvm-%t ?x180)))
 (let (($x67 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x187 (and $x67 $x186)))
 (let ((?x108 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x33 (= (_ bv0 32) ?x108)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x20 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x47)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (and $x25 $x20)))
 (let (($x99 (and $x5 $x33)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x127 $x99)))
 (let (($x61 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x41 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x57 $x61)))))))
 (let (($x175 (and (and (and $x41 true) $x15) $x187)))
 (let (($x300 (and $x49 $x175)))
 (let (($x107 (not $x91)))
 (let (($x167 (=> $x107 $x153)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x144 (concat ?x141 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x44 (bvadd ?x74 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x44) (concat ?x142 ?x144))))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x135 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x149 (and $x135 $x150)))
 (let (($x133 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv8 32))) (bvult ?x74 (bvsub ?x74 (_ bv8 32))))))
 (let (($x147 (and (and (and $x133 $x136) $x135) $x149)))
 (let (($x165 (= true $x147)))
 (let (($x163 (=> $x91 $x165)))
 (let (($x158 (and $x163 $x167)))
 (let (($x299 (= true $x158)))
 (let (($x81 (or $x91 $x107)))
 (let (($x132 (and $x31 $x81)))
 (let (($x170 (=> $x132 $x299)))
 (let (($x176 (and $x170 $x300)))
 (let (($x179 (= $x176 true)))
 (let (($x177 (= $x179 true)))
 (let (($x174 (= $x177 true)))
 (let (($x162 (= $x170 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x50 (and $x31 $x107)))
 (let (($x69 (= $x50 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x115 (= $x29 true)))
 (let (($x83 (and $x41 $x15)))
 (let (($x104 (= $x83 true)))
 (let (($x38 (= $x104 true)))
 (let (($x84 (= $x38 true)))
 (let (($x87 (and $x84 $x115)))
 (let (($x46 (and $x87 $x115)))
 (let (($x73 (and $x46 $x97)))
 (let (($x156 (and $x73 $x160)))
 (let (($x178 (and $x156 $x174)))
 (let (($x392 (and $x178 $x184)))
 (let (($x190 (and $x392 $x189)))
 (let (($x193 (and $x190 $x196)))
 (let (($x302 (and $x193 $x196)))
 (let (($x205 (and $x302 $x199)))
 (let (($x210 (and $x205 $x209)))
 (let (($x23 (and $x60 $x26)))
 (let (($x303 (and $x23 $x210)))
 (let (($x54 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x217 (and $x54 $x303)))
 (let (($x222 (and $x12 $x217)))
 (let (($x304 (and $x12 $x222)))
 (let (($x119 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x44)))
 (let (($x39 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x120 $x119)))))))
 (let (($x86 (and $x31 $x91)))
 (let (($x98 (=> (and $x86 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x120 $x119)))))))
 (let (($x88 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x66 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x88)))))))
 (let (($x58 (=> (and $x31 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x88)))))))
 (let (($x75 (and $x58 $x98)))
 (let (($x215 (and $x75 $x304)))
 (let (($x398 (=> $x215 $x337)))
 (not $x398))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3936X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x142 (concat ?x296 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x64 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x119 (bvadd ?x64 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x119) (concat ?x141 ?x142))))
 (let ((?x282 (bvadd ?x315 (_ bv8 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x395))))
 (let (($x281 (= (_ bv0 32) ?x275)))
 (let ((?x329 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x329 (_ bv1 32))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x223 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x323 (concat ?x56 (concat ?x40 ?x223))))
 (let ((?x290 (bvadd ?x323 (_ bv8 32))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv1 32))) (select input.dst.llvm-mem ?x290))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv2 32))) ?x235))))
 (let (($x234 (= (_ bv0 32) ?x306)))
 (let ((?x230 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x230 (_ bv1 32))))
 (let (($x287 (= $x286 $x312)))
 (let (($x224 (= (_ bv0 32) ?x323)))
 (let ((?x225 (ite $x224 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x225 (_ bv1 32))))
 (let (($x330 (=> $x394 $x287)))
 (let (($x284 (= ?x329 (_ bv0 32))))
 (let (($x231 (= ?x230 (_ bv0 32))))
 (let (($x285 (= $x231 $x284)))
 (let (($x396 (=> $x394 $x285)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x263 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv8 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x268 (concat ?x264 ?x266))))
 (let (($x273 (= ?x272 ?x272)))
 (let (($x274 (=> $x394 $x273)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x257 (concat ?x255 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv4 32))))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x262 (concat ?x259 (concat ?x261 ?x257))))
 (let (($x269 (= ?x262 ?x262)))
 (let (($x293 (=> $x394 $x269)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3936X))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv2 32))) ?x244)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv3 32))) ?x239)))
 (let (($x397 (= ?x252 ?x252)))
 (let (($x260 (=> $x394 $x397)))
 (let (($x324 (= (_ bv0 32) ?x315)))
 (let ((?x246 (ite $x324 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x246 (_ bv1 32))))
 (let (($x241 (= $x394 $x243)))
 (let (($x242 (= ?x246 (_ bv0 32))))
 (let (($x226 (= ?x225 (_ bv0 32))))
 (let (($x292 (= $x226 $x242)))
 (let (($x236 (= ?x323 ?x315)))
 (let (($x124 (= false false)))
 (let (($x233 (and $x394 $x231)))
 (let (($x305 (=> $x233 $x124)))
 (let (($x227 (=> $x226 $x124)))
 (let (($x334 (and (and (and (and (and (and $x227 $x305) $x236) $x292) $x241) $x260) $x293)))
 (let (($x337 (and (and (and $x334 $x274) $x396) $x330)))
 (let (($x218 (not true)))
 (let (($x398 (or $x218 $x337)))
 (let (($x211 (= true true)))
 (let (($x338 (and $x211 $x398)))
 (let (($x121 (= $x338 true)))
 (let (($x321 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x208 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x209 (= $x208 $x321)))
 (let (($x318 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x101 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x117 (= $x101 $x318)))
 (let (($x210 (and $x117 $x209)))
 (let (($x303 (= $x210 true)))
 (let (($x203 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x23 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x199 (= $x23 $x203)))
 (let (($x197 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x201 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x198 (= $x201 $x197)))
 (let (($x205 (and $x198 $x199)))
 (let (($x393 (= $x205 true)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x202 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x202 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x196 (= $x42 $x195)))
 (let (($x206 (= ?x202 (_ bv0 32))))
 (let (($x191 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x204 (= $x191 $x206)))
 (let (($x193 (and $x204 $x196)))
 (let (($x302 (= $x193 true)))
 (let ((?x172 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x180 (concat ?x171 (concat ?x159 (concat ?x8 ?x172)))))
 (let (($x189 (= ?x180 input.dst.llvm-%t)))
 (let (($x190 (= $x189 true)))
 (let (($x320 (= $x190 true)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x62 (concat ?x63 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x88 (bvadd ?x85 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x88) (concat ?x122 ?x62))))
 (let (($x316 (= (bvand ?x91 (_ bv4294967280 32)) ?x91)))
 (let (($x166 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x297 (and $x166 $x316)))
 (let (($x136 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x94 (and true $x136)))
 (let (($x317 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x153 (and (and (and $x317 $x94) $x166) $x297)))
 (let (($x167 (= true $x153)))
 (let (($x22 (not $x48)))
 (let (($x182 (=> $x22 $x167)))
 (let (($x184 (= $x182 true)))
 (let (($x392 (= $x184 true)))
 (let (($x188 (= $x392 true)))
 (let (($x186 (= input.dst.llvm-%t ?x180)))
 (let (($x29 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x187 (and $x29 $x186)))
 (let ((?x99 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x99)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x20 $x108)))
 (let (($x83 (and $x33 $x15)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x114 $x83)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x47 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x53)))))))
 (let (($x176 (and (and (and $x47 true) $x104) $x187)))
 (let (($x179 (and $x182 $x176)))
 (let (($x86 (= (_ bv0 32) ?x91)))
 (let (($x81 (not $x86)))
 (let (($x158 (=> $x81 $x167)))
 (let (($x148 (= (bvand ?x315 (_ bv4294967280 32)) ?x315)))
 (let (($x135 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x150 (and $x135 $x148)))
 (let (($x139 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv8 32))) (bvult ?x64 (bvsub ?x64 (_ bv8 32))))))
 (let (($x165 (and (and (and $x139 $x94) $x135) $x150)))
 (let (($x163 (= true $x165)))
 (let (($x151 (=> $x86 $x163)))
 (let (($x299 (and $x151 $x158)))
 (let (($x170 (= true $x299)))
 (let (($x132 (or $x86 $x81)))
 (let (($x95 (and $x22 $x132)))
 (let (($x162 (=> $x95 $x170)))
 (let (($x177 (and $x162 $x179)))
 (let (($x174 (= $x177 true)))
 (let (($x178 (= $x174 true)))
 (let (($x181 (= $x178 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x156 (= $x160 true)))
 (let (($x125 (and $x22 $x86)))
 (let (($x69 (= $x125 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x115 (= $x29 true)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let (($x38 (and $x47 $x104)))
 (let (($x84 (= $x38 true)))
 (let (($x10 (= $x84 true)))
 (let (($x78 (= $x10 true)))
 (let (($x107 (and $x78 $x46)))
 (let (($x50 (and $x107 $x46)))
 (let (($x73 (and $x50 $x97)))
 (let (($x49 (and $x73 $x156)))
 (let (($x183 (and $x49 $x181)))
 (let (($x55 (and $x183 $x188)))
 (let (($x301 (and $x55 $x320)))
 (let (($x192 (and $x301 $x302)))
 (let (($x194 (and $x192 $x302)))
 (let (($x36 (and $x194 $x393)))
 (let (($x217 (and $x36 $x303)))
 (let (($x7 (and $x42 $x23)))
 (let (($x222 (and $x7 $x217)))
 (let (($x45 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x304 (and $x45 $x222)))
 (let (($x215 (and $x124 $x304)))
 (let (($x212 (and $x124 $x215)))
 (let (($x17 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x12 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x17)))))))
 (let (($x76 (=> (and $x125 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x17)))))))
 (let (($x14 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x294 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x116 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x294 $x14)))))))
 (let (($x129 (=> (and $x22 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x294 $x14)))))))
 (let (($x96 (and $x129 $x76)))
 (let (($x213 (and $x96 $x212)))
 (let (($x6 (=> $x213 $x121)))
 (not $x6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3936X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x142 (concat ?x296 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x64 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x119 (bvadd ?x64 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x119) (concat ?x141 ?x142))))
 (let ((?x282 (bvadd ?x315 (_ bv8 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x395))))
 (let (($x281 (= (_ bv0 32) ?x275)))
 (let ((?x329 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x329 (_ bv1 32))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x223 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x323 (concat ?x56 (concat ?x40 ?x223))))
 (let ((?x290 (bvadd ?x323 (_ bv8 32))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv1 32))) (select input.dst.llvm-mem ?x290))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv2 32))) ?x235))))
 (let (($x234 (= (_ bv0 32) ?x306)))
 (let ((?x230 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x230 (_ bv1 32))))
 (let (($x287 (= $x286 $x312)))
 (let (($x224 (= (_ bv0 32) ?x323)))
 (let ((?x225 (ite $x224 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x225 (_ bv1 32))))
 (let (($x330 (=> $x394 $x287)))
 (let (($x284 (= ?x329 (_ bv0 32))))
 (let (($x231 (= ?x230 (_ bv0 32))))
 (let (($x285 (= $x231 $x284)))
 (let (($x396 (=> $x394 $x285)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x263 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv8 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x268 (concat ?x264 ?x266))))
 (let (($x273 (= ?x272 ?x272)))
 (let (($x274 (=> $x394 $x273)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x257 (concat ?x255 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv4 32))))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x262 (concat ?x259 (concat ?x261 ?x257))))
 (let (($x269 (= ?x262 ?x262)))
 (let (($x293 (=> $x394 $x269)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3936X))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv2 32))) ?x244)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv3 32))) ?x239)))
 (let (($x397 (= ?x252 ?x252)))
 (let (($x260 (=> $x394 $x397)))
 (let (($x324 (= (_ bv0 32) ?x315)))
 (let ((?x246 (ite $x324 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x246 (_ bv1 32))))
 (let (($x241 (= $x394 $x243)))
 (let (($x242 (= ?x246 (_ bv0 32))))
 (let (($x226 (= ?x225 (_ bv0 32))))
 (let (($x292 (= $x226 $x242)))
 (let (($x236 (= ?x323 ?x315)))
 (let (($x124 (= false false)))
 (let (($x233 (and $x394 $x231)))
 (let (($x305 (=> $x233 $x124)))
 (let (($x227 (=> $x226 $x124)))
 (let (($x334 (and (and (and (and (and (and $x227 $x305) $x236) $x292) $x241) $x260) $x293)))
 (let (($x337 (and (and (and $x334 $x274) $x396) $x330)))
 (let (($x218 (not true)))
 (let (($x398 (or $x218 $x337)))
 (let (($x211 (= true true)))
 (let (($x338 (and $x211 $x398)))
 (let (($x121 (= $x338 true)))
 (let (($x321 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x208 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x209 (= $x208 $x321)))
 (let (($x318 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x101 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x117 (= $x101 $x318)))
 (let (($x210 (and $x117 $x209)))
 (let (($x303 (= $x210 true)))
 (let (($x203 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x23 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x199 (= $x23 $x203)))
 (let (($x197 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x201 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x198 (= $x201 $x197)))
 (let (($x205 (and $x198 $x199)))
 (let (($x393 (= $x205 true)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x202 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x202 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x196 (= $x42 $x195)))
 (let (($x206 (= ?x202 (_ bv0 32))))
 (let (($x191 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x204 (= $x191 $x206)))
 (let (($x193 (and $x204 $x196)))
 (let (($x302 (= $x193 true)))
 (let ((?x172 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x180 (concat ?x171 (concat ?x159 (concat ?x8 ?x172)))))
 (let (($x189 (= ?x180 input.dst.llvm-%t)))
 (let (($x190 (= $x189 true)))
 (let (($x320 (= $x190 true)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x62 (concat ?x63 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x88 (bvadd ?x85 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x88) (concat ?x122 ?x62))))
 (let (($x316 (= (bvand ?x91 (_ bv4294967280 32)) ?x91)))
 (let (($x166 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x297 (and $x166 $x316)))
 (let (($x136 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x94 (and true $x136)))
 (let (($x317 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x153 (and (and (and $x317 $x94) $x166) $x297)))
 (let (($x167 (= true $x153)))
 (let (($x22 (not $x48)))
 (let (($x182 (=> $x22 $x167)))
 (let (($x184 (= $x182 true)))
 (let (($x392 (= $x184 true)))
 (let (($x188 (= $x392 true)))
 (let (($x186 (= input.dst.llvm-%t ?x180)))
 (let (($x29 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x187 (and $x29 $x186)))
 (let ((?x99 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x99)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x20 $x108)))
 (let (($x83 (and $x33 $x15)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x114 $x83)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x47 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x53)))))))
 (let (($x176 (and (and (and $x47 true) $x104) $x187)))
 (let (($x179 (and $x182 $x176)))
 (let (($x86 (= (_ bv0 32) ?x91)))
 (let (($x81 (not $x86)))
 (let (($x158 (=> $x81 $x167)))
 (let (($x148 (= (bvand ?x315 (_ bv4294967280 32)) ?x315)))
 (let (($x135 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x150 (and $x135 $x148)))
 (let (($x139 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv8 32))) (bvult ?x64 (bvsub ?x64 (_ bv8 32))))))
 (let (($x165 (and (and (and $x139 $x94) $x135) $x150)))
 (let (($x163 (= true $x165)))
 (let (($x151 (=> $x86 $x163)))
 (let (($x299 (and $x151 $x158)))
 (let (($x170 (= true $x299)))
 (let (($x132 (or $x86 $x81)))
 (let (($x95 (and $x22 $x132)))
 (let (($x162 (=> $x95 $x170)))
 (let (($x177 (and $x162 $x179)))
 (let (($x174 (= $x177 true)))
 (let (($x178 (= $x174 true)))
 (let (($x181 (= $x178 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x156 (= $x160 true)))
 (let (($x125 (and $x22 $x86)))
 (let (($x69 (= $x125 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x115 (= $x29 true)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let (($x38 (and $x47 $x104)))
 (let (($x84 (= $x38 true)))
 (let (($x10 (= $x84 true)))
 (let (($x78 (= $x10 true)))
 (let (($x107 (and $x78 $x46)))
 (let (($x50 (and $x107 $x46)))
 (let (($x73 (and $x50 $x97)))
 (let (($x49 (and $x73 $x156)))
 (let (($x183 (and $x49 $x181)))
 (let (($x55 (and $x183 $x188)))
 (let (($x301 (and $x55 $x320)))
 (let (($x192 (and $x301 $x302)))
 (let (($x194 (and $x192 $x302)))
 (let (($x36 (and $x194 $x393)))
 (let (($x217 (and $x36 $x303)))
 (let (($x7 (and $x42 $x23)))
 (let (($x222 (and $x7 $x217)))
 (let (($x45 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x304 (and $x45 $x222)))
 (let (($x215 (and $x124 $x304)))
 (let (($x212 (and $x124 $x215)))
 (let (($x17 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x12 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x17)))))))
 (let (($x76 (=> (and $x125 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x17)))))))
 (let (($x14 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x294 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x116 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x294 $x14)))))))
 (let (($x129 (=> (and $x22 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x294 $x14)))))))
 (let (($x96 (and $x129 $x76)))
 (let (($x213 (and $x96 $x212)))
 (let (($x6 (=> $x213 $x121)))
 (not $x6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x006aa7b4)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x00000020)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00040000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000200)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xd5)
                                #x00d56528
                                #x20)
                         #x006aa7b7
                         #x00)
                  #x00d56529
                  #x45)))
(let ((a!2 (store (store (store (store a!1 #x00d5652b #x00) #x006aa7b4 #x20)
                         #x006aa7b5
                         #x65)
                  #x00d56527
                  #x00)))
  (store (store (store a!2 #x00d56524 #x00) #x00d56526 #x00) #x00d56525 #x00))))
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00d56520)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x006aa7b4)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x006aa7b7)
  (define-fun input.ind-%var3936X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv1050624 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4026531845 32) (_ bv8 8)) (_ bv4026531846 32) (_ bv16 8)) (_ bv1050632 32) (_ bv16 8)))
(define-fun input.ind-%var3936X () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4026531844 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4026531844 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4026531847 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3936X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x296 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x120 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x110 (bvadd ?x120 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x110) (concat ?x142 ?x296))))
 (let ((?x471 (bvadd ?x143 (_ bv8 32))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ?x471 (_ bv1 32))) (select input.dst.llvm-mem ?x471))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ?x471 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x471 (_ bv2 32))) ?x432))))
 (let (($x355 (= (_ bv0 32) ?x433)))
 (let ((?x356 (ite $x355 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x356 (_ bv1 32))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x326 (concat ?x311 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x254 (concat ?x259 ?x326))))
 (let ((?x293 (bvadd ?x255 (_ bv8 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv1 32))) (select input.dst.llvm-mem ?x293))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv2 32))) ?x268))))
 (let (($x267 (= (_ bv0 32) ?x266)))
 (let ((?x272 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x359 (bvuge ?x272 (_ bv1 32))))
 (let (($x360 (= $x359 $x434)))
 (let (($x256 (= (_ bv0 32) ?x255)))
 (let ((?x257 (ite $x256 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x257 (_ bv1 32))))
 (let (($x361 (=> $x269 $x360)))
 (let (($x357 (= ?x356 (_ bv0 32))))
 (let (($x273 (= ?x272 (_ bv0 32))))
 (let (($x402 (= $x273 $x357)))
 (let (($x358 (=> $x269 $x402)))
 (let ((?x342 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x343 (concat ?x342 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv8 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x470 (concat ?x346 (concat ?x399 ?x343))))
 (let (($x347 (= ?x470 ?x470)))
 (let (($x400 (=> $x269 $x347)))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x121 (concat ?x338 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv4 32))))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x185 (concat ?x90 (concat ?x168 ?x121))))
 (let (($x339 (= ?x185 ?x185)))
 (let (($x429 (=> $x269 $x339)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3936X))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv2 32))) ?x281)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv3 32))) ?x285)))
 (let (($x312 (= ?x286 ?x286)))
 (let (($x287 (=> $x269 $x312)))
 (let (($x283 (= (_ bv0 32) ?x143)))
 (let ((?x276 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x276 (_ bv1 32))))
 (let (($x278 (= $x269 $x328)))
 (let (($x277 (= ?x276 (_ bv0 32))))
 (let (($x258 (= ?x257 (_ bv0 32))))
 (let (($x279 (= $x258 $x277)))
 (let (($x282 (= ?x255 ?x143)))
 (let (($x54 (= false false)))
 (let (($x274 (and $x269 $x273)))
 (let (($x335 (=> $x274 $x54)))
 (let (($x262 (=> $x258 $x54)))
 (let (($x364 (and (and (and (and (and (and $x262 $x335) $x282) $x279) $x278) $x287) $x429)))
 (let (($x405 (and (and (and $x364 $x400) $x358) $x361)))
 (let (($x239 (not true)))
 (let (($x435 (or $x239 $x405)))
 (let (($x244 (= true true)))
 (let (($x367 (and $x244 $x435)))
 (let (($x368 (= $x367 true)))
 (let (($x292 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x242 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x289 (= $x242 $x292)))
 (let (($x324 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x246 (= $x236 $x324)))
 (let (($x233 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x231 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x305 (= $x231 $x233)))
 (let (($x234 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x232 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x230 (= $x232 $x234)))
 (let (($x228 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x248 (and (and (and (and $x228 $x230) $x305) $x246) $x289)))
 (let (($x250 (= $x248 true)))
 (let (($x211 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x290 (=> $x211 $x54)))
 (let (($x227 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x56 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x394 (= $x56 $x227)))
 (let (($x225 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x226 (= $x211 $x225)))
 (let (($x245 (and (and $x226 $x394) $x290)))
 (let (($x307 (= $x245 true)))
 (let (($x214 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x40 (= $x56 $x214)))
 (let (($x322 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x221 (= $x211 $x322)))
 (let (($x215 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x57 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x212 (= $x57 $x215)))
 (let (($x222 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x205 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x304 (= $x205 $x222)))
 (let (($x303 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x223 (and (and (and (and $x303 $x304) $x212) $x221) $x40)))
 (let (($x220 (= $x223 true)))
 (let (($x318 (=> $x205 $x54)))
 (let (($x101 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x72 (= $x57 $x101)))
 (let (($x36 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x207 (= $x205 $x36)))
 (let (($x208 (and (and $x207 $x72) $x318)))
 (let (($x321 (= $x208 true)))
 (let (($x195 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x201 (=> $x195 $x54)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x196 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x196 (_ bv1 32))))
 (let (($x23 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x194 (= $x23 $x192)))
 (let (($x193 (= ?x196 (_ bv0 32))))
 (let (($x302 (= $x195 $x193)))
 (let (($x197 (and (and $x302 $x194) $x201)))
 (let (($x198 (= $x197 true)))
 (let ((?x100 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x187 (concat ?x186 (concat ?x319 (concat ?x173 ?x100)))))
 (let (($x191 (= ?x187 input.dst.llvm-%t)))
 (let (($x202 (= $x191 true)))
 (let (($x206 (= $x202 true)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x63 (concat ?x103 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x123 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x24 (bvadd ?x123 (_ bv3 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem ?x24) (concat ?x106 ?x63))))
 (let (($x297 (= (bvand ?x125 (_ bv4294967280 32)) ?x125)))
 (let (($x21 (= (bvand ?x123 (_ bv4294967292 32)) ?x123)))
 (let (($x153 (and $x21 $x297)))
 (let (($x140 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x131 (and true $x140)))
 (let (($x166 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x123 (bvsub ?x123 (_ bv4 32))) (bvult ?x123 (bvsub ?x123 (_ bv4 32))))))
 (let (($x299 (and (and (and $x166 $x131) $x21) $x153)))
 (let (($x170 (= true $x299)))
 (let (($x22 (not $x48)))
 (let (($x161 (=> $x22 $x170)))
 (let (($x189 (= $x161 true)))
 (let (($x190 (= $x189 true)))
 (let (($x320 (= $x190 true)))
 (let (($x176 (= input.dst.llvm-%t ?x187)))
 (let (($x46 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x179 (and $x46 $x176)))
 (let ((?x104 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x104)))
 (let ((?x99 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x99)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x33 $x15)))
 (let (($x84 (and $x83 $x38)))
 (let (($x68 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x68 $x84)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x127)))))))
 (let (($x178 (and (and (and $x108 true) $x10) $x179)))
 (let (($x181 (and $x161 $x178)))
 (let (($x74 (= (_ bv0 32) ?x125)))
 (let (($x128 (not $x74)))
 (let (($x162 (=> $x128 $x170)))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x144 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x165 (and $x144 $x150)))
 (let (($x80 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv8 32))) (bvult ?x120 (bvsub ?x120 (_ bv8 32))))))
 (let (($x152 (and (and (and $x80 $x131) $x144) $x165)))
 (let (($x146 (= true $x152)))
 (let (($x164 (=> $x74 $x146)))
 (let (($x157 (and $x164 $x162)))
 (let (($x160 (= true $x157)))
 (let (($x30 (or $x74 $x128)))
 (let (($x134 (and $x22 $x30)))
 (let (($x156 (=> $x134 $x160)))
 (let (($x183 (and $x156 $x181)))
 (let (($x184 (= $x183 true)))
 (let (($x392 (= $x184 true)))
 (let (($x188 (= $x392 true)))
 (let (($x49 (= $x156 true)))
 (let (($x182 (= $x49 true)))
 (let (($x175 (= $x182 true)))
 (let (($x64 (and $x22 $x74)))
 (let (($x73 (= $x64 true)))
 (let (($x81 (= $x73 true)))
 (let (($x132 (= $x81 true)))
 (let (($x107 (= $x46 true)))
 (let (($x50 (= $x107 true)))
 (let (($x69 (= $x50 true)))
 (let (($x78 (and $x108 $x10)))
 (let (($x67 (= $x78 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x126 (and $x29 $x69)))
 (let (($x97 (and $x126 $x69)))
 (let (($x95 (and $x97 $x132)))
 (let (($x300 (and $x95 $x175)))
 (let (($x55 (and $x300 $x188)))
 (let (($x301 (and $x55 $x320)))
 (let (($x204 (and $x301 $x206)))
 (let (($x203 (and $x204 $x198)))
 (let (($x199 (and $x203 $x198)))
 (let (($x209 (and $x199 $x321)))
 (let (($x323 (and $x209 $x220)))
 (let (($x291 (and $x323 $x307)))
 (let (($x251 (and $x291 $x250)))
 (let (($x61 (and $x23 $x57)))
 (let (($x249 (and $x61 $x251)))
 (let (($x42 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x247 (and $x42 $x249)))
 (let (($x238 (and $x54 $x247)))
 (let (($x308 (and $x54 $x238)))
 (let (($x39 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x92 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x39)))))))
 (let (($x75 (=> (and $x64 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x39)))))))
 (let (($x66 (bvugt ?x123 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x102 (=> (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x66)))))))
 (let (($x93 (=> (and $x22 (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x37 $x66)))))))
 (let (($x119 (and $x93 $x75)))
 (let (($x240 (and $x119 $x308)))
 (let (($x369 (=> $x240 $x368)))
 (not $x369))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3936X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x296 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x120 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x110 (bvadd ?x120 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x110) (concat ?x142 ?x296))))
 (let ((?x471 (bvadd ?x143 (_ bv8 32))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ?x471 (_ bv1 32))) (select input.dst.llvm-mem ?x471))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ?x471 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x471 (_ bv2 32))) ?x432))))
 (let (($x355 (= (_ bv0 32) ?x433)))
 (let ((?x356 (ite $x355 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x356 (_ bv1 32))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x326 (concat ?x311 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x254 (concat ?x259 ?x326))))
 (let ((?x293 (bvadd ?x255 (_ bv8 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv1 32))) (select input.dst.llvm-mem ?x293))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv2 32))) ?x268))))
 (let (($x267 (= (_ bv0 32) ?x266)))
 (let ((?x272 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x359 (bvuge ?x272 (_ bv1 32))))
 (let (($x360 (= $x359 $x434)))
 (let (($x256 (= (_ bv0 32) ?x255)))
 (let ((?x257 (ite $x256 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x257 (_ bv1 32))))
 (let (($x361 (=> $x269 $x360)))
 (let (($x357 (= ?x356 (_ bv0 32))))
 (let (($x273 (= ?x272 (_ bv0 32))))
 (let (($x402 (= $x273 $x357)))
 (let (($x358 (=> $x269 $x402)))
 (let ((?x342 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x343 (concat ?x342 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv8 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x470 (concat ?x346 (concat ?x399 ?x343))))
 (let (($x347 (= ?x470 ?x470)))
 (let (($x400 (=> $x269 $x347)))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x121 (concat ?x338 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv4 32))))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x185 (concat ?x90 (concat ?x168 ?x121))))
 (let (($x339 (= ?x185 ?x185)))
 (let (($x429 (=> $x269 $x339)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3936X))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv2 32))) ?x281)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv3 32))) ?x285)))
 (let (($x312 (= ?x286 ?x286)))
 (let (($x287 (=> $x269 $x312)))
 (let (($x283 (= (_ bv0 32) ?x143)))
 (let ((?x276 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x276 (_ bv1 32))))
 (let (($x278 (= $x269 $x328)))
 (let (($x277 (= ?x276 (_ bv0 32))))
 (let (($x258 (= ?x257 (_ bv0 32))))
 (let (($x279 (= $x258 $x277)))
 (let (($x282 (= ?x255 ?x143)))
 (let (($x54 (= false false)))
 (let (($x274 (and $x269 $x273)))
 (let (($x335 (=> $x274 $x54)))
 (let (($x262 (=> $x258 $x54)))
 (let (($x364 (and (and (and (and (and (and $x262 $x335) $x282) $x279) $x278) $x287) $x429)))
 (let (($x405 (and (and (and $x364 $x400) $x358) $x361)))
 (let (($x239 (not true)))
 (let (($x435 (or $x239 $x405)))
 (let (($x244 (= true true)))
 (let (($x367 (and $x244 $x435)))
 (let (($x368 (= $x367 true)))
 (let (($x292 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x242 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x289 (= $x242 $x292)))
 (let (($x324 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x246 (= $x236 $x324)))
 (let (($x233 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x231 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x305 (= $x231 $x233)))
 (let (($x234 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x232 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x230 (= $x232 $x234)))
 (let (($x228 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x248 (and (and (and (and $x228 $x230) $x305) $x246) $x289)))
 (let (($x250 (= $x248 true)))
 (let (($x211 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x290 (=> $x211 $x54)))
 (let (($x227 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x56 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x394 (= $x56 $x227)))
 (let (($x225 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x226 (= $x211 $x225)))
 (let (($x245 (and (and $x226 $x394) $x290)))
 (let (($x307 (= $x245 true)))
 (let (($x214 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x40 (= $x56 $x214)))
 (let (($x322 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x221 (= $x211 $x322)))
 (let (($x215 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x57 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x212 (= $x57 $x215)))
 (let (($x222 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x205 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x304 (= $x205 $x222)))
 (let (($x303 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x223 (and (and (and (and $x303 $x304) $x212) $x221) $x40)))
 (let (($x220 (= $x223 true)))
 (let (($x318 (=> $x205 $x54)))
 (let (($x101 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x72 (= $x57 $x101)))
 (let (($x36 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x207 (= $x205 $x36)))
 (let (($x208 (and (and $x207 $x72) $x318)))
 (let (($x321 (= $x208 true)))
 (let (($x195 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x201 (=> $x195 $x54)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x196 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x196 (_ bv1 32))))
 (let (($x23 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x194 (= $x23 $x192)))
 (let (($x193 (= ?x196 (_ bv0 32))))
 (let (($x302 (= $x195 $x193)))
 (let (($x197 (and (and $x302 $x194) $x201)))
 (let (($x198 (= $x197 true)))
 (let ((?x100 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x187 (concat ?x186 (concat ?x319 (concat ?x173 ?x100)))))
 (let (($x191 (= ?x187 input.dst.llvm-%t)))
 (let (($x202 (= $x191 true)))
 (let (($x206 (= $x202 true)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x63 (concat ?x103 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x123 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x24 (bvadd ?x123 (_ bv3 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem ?x24) (concat ?x106 ?x63))))
 (let (($x297 (= (bvand ?x125 (_ bv4294967280 32)) ?x125)))
 (let (($x21 (= (bvand ?x123 (_ bv4294967292 32)) ?x123)))
 (let (($x153 (and $x21 $x297)))
 (let (($x140 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x131 (and true $x140)))
 (let (($x166 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x123 (bvsub ?x123 (_ bv4 32))) (bvult ?x123 (bvsub ?x123 (_ bv4 32))))))
 (let (($x299 (and (and (and $x166 $x131) $x21) $x153)))
 (let (($x170 (= true $x299)))
 (let (($x22 (not $x48)))
 (let (($x161 (=> $x22 $x170)))
 (let (($x189 (= $x161 true)))
 (let (($x190 (= $x189 true)))
 (let (($x320 (= $x190 true)))
 (let (($x176 (= input.dst.llvm-%t ?x187)))
 (let (($x46 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x179 (and $x46 $x176)))
 (let ((?x104 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x104)))
 (let ((?x99 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x99)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x33 $x15)))
 (let (($x84 (and $x83 $x38)))
 (let (($x68 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x68 $x84)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x127)))))))
 (let (($x178 (and (and (and $x108 true) $x10) $x179)))
 (let (($x181 (and $x161 $x178)))
 (let (($x74 (= (_ bv0 32) ?x125)))
 (let (($x128 (not $x74)))
 (let (($x162 (=> $x128 $x170)))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x144 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x165 (and $x144 $x150)))
 (let (($x80 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv8 32))) (bvult ?x120 (bvsub ?x120 (_ bv8 32))))))
 (let (($x152 (and (and (and $x80 $x131) $x144) $x165)))
 (let (($x146 (= true $x152)))
 (let (($x164 (=> $x74 $x146)))
 (let (($x157 (and $x164 $x162)))
 (let (($x160 (= true $x157)))
 (let (($x30 (or $x74 $x128)))
 (let (($x134 (and $x22 $x30)))
 (let (($x156 (=> $x134 $x160)))
 (let (($x183 (and $x156 $x181)))
 (let (($x184 (= $x183 true)))
 (let (($x392 (= $x184 true)))
 (let (($x188 (= $x392 true)))
 (let (($x49 (= $x156 true)))
 (let (($x182 (= $x49 true)))
 (let (($x175 (= $x182 true)))
 (let (($x64 (and $x22 $x74)))
 (let (($x73 (= $x64 true)))
 (let (($x81 (= $x73 true)))
 (let (($x132 (= $x81 true)))
 (let (($x107 (= $x46 true)))
 (let (($x50 (= $x107 true)))
 (let (($x69 (= $x50 true)))
 (let (($x78 (and $x108 $x10)))
 (let (($x67 (= $x78 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x126 (and $x29 $x69)))
 (let (($x97 (and $x126 $x69)))
 (let (($x95 (and $x97 $x132)))
 (let (($x300 (and $x95 $x175)))
 (let (($x55 (and $x300 $x188)))
 (let (($x301 (and $x55 $x320)))
 (let (($x204 (and $x301 $x206)))
 (let (($x203 (and $x204 $x198)))
 (let (($x199 (and $x203 $x198)))
 (let (($x209 (and $x199 $x321)))
 (let (($x323 (and $x209 $x220)))
 (let (($x291 (and $x323 $x307)))
 (let (($x251 (and $x291 $x250)))
 (let (($x61 (and $x23 $x57)))
 (let (($x249 (and $x61 $x251)))
 (let (($x42 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x247 (and $x42 $x249)))
 (let (($x238 (and $x54 $x247)))
 (let (($x308 (and $x54 $x238)))
 (let (($x39 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x92 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x39)))))))
 (let (($x75 (=> (and $x64 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x39)))))))
 (let (($x66 (bvugt ?x123 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x102 (=> (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x66)))))))
 (let (($x93 (=> (and $x22 (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x37 $x66)))))))
 (let (($x119 (and $x93 $x75)))
 (let (($x240 (and $x119 $x308)))
 (let (($x369 (=> $x240 $x368)))
 (not $x369))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x979cfd5c)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x20000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x9c)
                                #x009cd118
                                #x10)
                         #x979cfd5f
                         #x00)
                  #x979cfd5d
                  #xd1)))
(let ((a!2 (store (store (store (store a!1 #x009cd11b #x00) #x979cfd5c #x10)
                         #x009cd119
                         #xd1)
                  #x009cd117
                  #x00)))
  (store (store (store a!2 #x009cd114 #x00) #x009cd116 #x00) #x009cd115 #x00))))
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x009cd110)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x979cfd5c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x979cfd5f)
  (define-fun input.ind-%var3936X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv1048576 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483710 32) (_ bv16 8)) (_ bv1048584 32) (_ bv16 8)))
(define-fun input.ind-%var3936X () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483711 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3936X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x137 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x98 (bvadd ?x17 (_ bv3 32))))
 (let ((?x150 (concat (select input.dst.llvm-mem ?x98) (concat ?x138 ?x137))))
 (let ((?x791 (bvadd ?x150 (_ bv8 32))))
 (let ((?x795 (concat (select input.dst.llvm-mem (bvadd ?x791 (_ bv1 32))) (select input.dst.llvm-mem ?x791))))
 (let ((?x801 (concat (select input.dst.llvm-mem (bvadd ?x791 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x791 (_ bv2 32))) ?x795))))
 (let (($x802 (= (_ bv0 32) ?x801)))
 (let ((?x803 (ite $x802 (_ bv0 32) (_ bv1 32))))
 (let (($x807 (bvuge ?x803 (_ bv1 32))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x219 (concat ?x304 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x218 (concat ?x211 (concat ?x212 ?x219))))
 (let ((?x308 (bvadd ?x218 (_ bv8 32))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv1 32))) (select input.dst.llvm-mem ?x308))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv2 32))) ?x252))))
 (let (($x397 (= (_ bv0 32) ?x311)))
 (let ((?x326 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x326 (_ bv1 32))))
 (let (($x808 (= $x258 $x807)))
 (let (($x322 (= (_ bv0 32) ?x218)))
 (let ((?x221 (ite $x322 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x221 (_ bv1 32))))
 (let (($x809 (=> $x220 $x808)))
 (let (($x804 (= ?x803 (_ bv0 32))))
 (let (($x325 (= ?x326 (_ bv0 32))))
 (let (($x805 (= $x325 $x804)))
 (let (($x806 (=> $x220 $x805)))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x782 (concat ?x781 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv8 32))))))
 (let ((?x784 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x787 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x788 (concat ?x787 (concat ?x784 ?x782))))
 (let (($x789 (= ?x788 ?x788)))
 (let (($x790 (=> $x220 $x789)))
 (let ((?x768 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x769 (concat ?x768 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv4 32))))))
 (let ((?x771 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x774 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x775 (concat ?x774 (concat ?x771 ?x769))))
 (let (($x776 (= ?x775 ?x775)))
 (let (($x777 (=> $x220 $x776)))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3936X))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv2 32))) ?x759)))
 (let ((?x762 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv3 32))) ?x77)))
 (let (($x763 (= ?x762 ?x762)))
 (let (($x764 (=> $x220 $x763)))
 (let (($x749 (= (_ bv0 32) ?x150)))
 (let ((?x750 (ite $x749 (_ bv0 32) (_ bv1 32))))
 (let (($x753 (bvuge ?x750 (_ bv1 32))))
 (let (($x754 (= $x220 $x753)))
 (let (($x751 (= ?x750 (_ bv0 32))))
 (let (($x105 (= ?x221 (_ bv0 32))))
 (let (($x752 (= $x105 $x751)))
 (let (($x748 (= ?x218 ?x150)))
 (let (($x42 (= false false)))
 (let (($x746 (and $x220 $x325)))
 (let (($x747 (=> $x746 $x42)))
 (let (($x722 (=> $x105 $x42)))
 (let (($x815 (and (and (and (and (and (and $x722 $x747) $x748) $x752) $x754) $x764) $x777)))
 (let (($x818 (and (and (and $x815 $x790) $x806) $x809)))
 (let (($x721 (not true)))
 (let (($x819 (or $x721 $x818)))
 (let (($x745 (= true true)))
 (let (($x820 (and $x745 $x819)))
 (let (($x821 (= $x820 true)))
 (let (($x699 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x514 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x700 (= $x514 $x699)))
 (let (($x257 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x737 (=> $x257 $x700)))
 (let (($x479 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x697 (and $x257 $x479)))
 (let (($x698 (=> $x697 $x42)))
 (let (($x695 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x696 (= $x479 $x695)))
 (let (($x736 (=> $x257 $x696)))
 (let (($x734 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x448 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x693 (= $x448 $x734)))
 (let (($x735 (=> $x257 $x693)))
 (let (($x427 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x691 (and $x257 $x427)))
 (let (($x692 (=> $x691 $x42)))
 (let (($x689 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x733 (= $x427 $x689)))
 (let (($x690 (=> $x257 $x733)))
 (let (($x687 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x732 (=> $x257 $x687)))
 (let (($x238 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x685 (=> $x238 $x42)))
 (let (($x683 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x418 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x731 (= $x418 $x683)))
 (let (($x248 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x684 (=> $x248 $x731)))
 (let (($x415 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x681 (and $x248 $x415)))
 (let (($x682 (=> $x681 $x42)))
 (let (($x679 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x680 (= $x415 $x679)))
 (let (($x730 (=> $x248 $x680)))
 (let (($x676 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x411 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x677 (= $x411 $x676)))
 (let (($x678 (=> $x248 $x677)))
 (let (($x389 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x728 (and $x248 $x389)))
 (let (($x675 (=> $x728 $x42)))
 (let (($x672 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x673 (= $x389 $x672)))
 (let (($x674 (=> $x248 $x673)))
 (let (($x726 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x671 (=> $x248 $x726)))
 (let (($x306 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x669 (=> $x306 $x42)))
 (let (($x668 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x725 (= $x257 $x668)))
 (let (($x34 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x111 (= $x238 $x34)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x19 (= $x248 $x667)))
 (let (($x666 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x723 (= $x306 $x666)))
 (let (($x664 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x705 (and (and (and (and (and (and $x664 $x723) $x19) $x111) $x725) $x669) $x671)))
 (let (($x740 (and (and (and (and (and (and $x705 $x674) $x675) $x678) $x730) $x682) $x684)))
 (let (($x714 (and (and (and (and (and (and $x740 $x685) $x732) $x690) $x692) $x735) $x736)))
 (let (($x715 (and (and $x714 $x698) $x737)))
 (let (($x716 (= $x715 true)))
 (let (($x609 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x633 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x645 (= $x633 $x609)))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x276 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x596 (and $x276 $x353)))
 (let (($x634 (=> $x596 $x645)))
 (let (($x632 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x606 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x644 (= $x606 $x632)))
 (let (($x608 (=> $x596 $x644)))
 (let (($x643 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x603 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x653 (= $x603 $x643)))
 (let (($x604 (=> $x596 $x653)))
 (let (($x642 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x631 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x601 (= $x631 $x642)))
 (let (($x602 (=> $x596 $x601)))
 (let (($x598 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x641 (=> $x596 $x598)))
 (let (($x594 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x640 (= $x353 $x594)))
 (let (($x595 (=> $x276 $x640)))
 (let (($x342 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x512 (and $x276 $x342)))
 (let (($x531 (=> $x512 $x42)))
 (let (($x652 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x592 (= $x342 $x652)))
 (let (($x593 (=> $x276 $x592)))
 (let (($x590 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x629 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x638 (= $x629 $x590)))
 (let (($x345 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x576 (and $x276 $x345)))
 (let (($x591 (=> $x576 $x638)))
 (let (($x588 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x627 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x637 (= $x627 $x588)))
 (let (($x589 (=> $x576 $x637)))
 (let (($x585 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x626 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x636 (= $x626 $x585)))
 (let (($x586 (=> $x576 $x636)))
 (let (($x583 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x651 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x635 (= $x651 $x583)))
 (let (($x584 (=> $x576 $x635)))
 (let (($x579 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x580 (=> $x576 $x579)))
 (let (($x556 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x557 (= $x345 $x556)))
 (let (($x625 (=> $x276 $x557)))
 (let (($x287 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x529 (and $x276 $x287)))
 (let (($x508 (=> $x529 $x42)))
 (let (($x624 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x554 (= $x287 $x624)))
 (let (($x555 (=> $x276 $x554)))
 (let (($x552 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x553 (=> $x276 $x552)))
 (let (($x263 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x503 (=> $x263 $x42)))
 (let (($x549 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x550 (= $x276 $x549)))
 (let (($x548 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x623 (= $x263 $x548)))
 (let (($x655 (and (and (and (and (and (and $x623 $x550) $x503) $x553) $x555) $x508) $x625)))
 (let (($x657 (and (and (and (and (and (and $x655 $x580) $x584) $x586) $x589) $x591) $x593)))
 (let (($x659 (and (and (and (and (and (and $x657 $x531) $x595) $x641) $x602) $x604) $x608)))
 (let (($x660 (and $x659 $x634)))
 (let (($x661 (= $x660 true)))
 (let (($x532 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x571 (= $x353 $x532)))
 (let (($x533 (=> $x276 $x571)))
 (let (($x511 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x530 (= $x342 $x511)))
 (let (($x565 (=> $x276 $x530)))
 (let (($x569 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x509 (= $x345 $x569)))
 (let (($x570 (=> $x276 $x509)))
 (let (($x564 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x506 (= $x287 $x564)))
 (let (($x507 (=> $x276 $x506)))
 (let (($x504 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x505 (=> $x276 $x504)))
 (let (($x563 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x501 (= $x257 $x563)))
 (let (($x51 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x502 (=> $x51 $x501)))
 (let (($x443 (and $x51 $x238)))
 (let (($x466 (=> $x443 $x42)))
 (let (($x499 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x500 (= $x238 $x499)))
 (let (($x526 (=> $x51 $x500)))
 (let (($x561 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x562 (= $x248 $x561)))
 (let (($x568 (=> $x51 $x562)))
 (let (($x408 (and $x51 $x306)))
 (let (($x474 (=> $x408 $x42)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x497 (= $x306 $x496)))
 (let (($x525 (=> $x51 $x497)))
 (let (($x524 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x494 (=> $x51 $x524)))
 (let (($x210 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x376 (=> $x210 $x42)))
 (let (($x492 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x493 (= $x276 $x492)))
 (let (($x491 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x523 (= $x263 $x491)))
 (let (($x558 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x559 (= $x51 $x558)))
 (let (($x567 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x490 (= $x210 $x567)))
 (let (($x489 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x620 (and (and (and (and (and (and $x489 $x490) $x559) $x523) $x493) $x376) $x494)))
 (let (($x541 (and (and (and (and (and (and $x620 $x525) $x474) $x568) $x526) $x466) $x502)))
 (let (($x544 (and (and (and (and (and (and $x541 $x503) $x505) $x507) $x508) $x570) $x565)))
 (let (($x650 (and (and $x544 $x531) $x533)))
 (let (($x546 (= $x650 true)))
 (let (($x480 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x455 (= $x514 $x480)))
 (let (($x467 (and $x51 $x257)))
 (let (($x456 (=> $x467 $x455)))
 (let (($x513 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x453 (= $x479 $x513)))
 (let (($x454 (=> $x467 $x453)))
 (let (($x449 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x478 (= $x448 $x449)))
 (let (($x450 (=> $x467 $x478)))
 (let (($x469 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x428 (= $x427 $x469)))
 (let (($x447 (=> $x467 $x428)))
 (let (($x425 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x477 (=> $x467 $x425)))
 (let (($x423 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x444 (= $x257 $x423)))
 (let (($x424 (=> $x51 $x444)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x421 (= $x238 $x476)))
 (let (($x422 (=> $x51 $x421)))
 (let (($x419 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x442 (= $x418 $x419)))
 (let (($x385 (and $x51 $x248)))
 (let (($x465 (=> $x385 $x442)))
 (let (($x417 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x464 (= $x415 $x417)))
 (let (($x475 (=> $x385 $x464)))
 (let (($x412 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x413 (= $x411 $x412)))
 (let (($x414 (=> $x385 $x413)))
 (let (($x440 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x391 (= $x389 $x440)))
 (let (($x410 (=> $x385 $x391)))
 (let (($x439 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x409 (=> $x385 $x439)))
 (let (($x382 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (= $x248 $x382)))
 (let (($x384 (=> $x51 $x383)))
 (let (($x379 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x306 $x379)))
 (let (($x381 (=> $x51 $x380)))
 (let (($x407 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x473 (=> $x51 $x407)))
 (let (($x375 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x438 (= $x51 $x375)))
 (let (($x437 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x374 (= $x210 $x437)))
 (let (($x481 (and (and (and (and (and (and $x374 $x438) $x376) $x473) $x381) $x474) $x384)))
 (let (($x462 (and (and (and (and (and (and $x481 $x409) $x410) $x414) $x475) $x465) $x422)))
 (let (($x485 (and (and (and (and (and (and $x462 $x466) $x424) $x477) $x447) $x450) $x454)))
 (let (($x520 (and $x485 $x456)))
 (let (($x486 (= $x520 true)))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x270 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x267 (concat ?x268 ?x265))))
 (let ((?x430 (bvadd ?x272 (_ bv8 32))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x430 (_ bv1 32))) (select input.dst.llvm-mem ?x430))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x430 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x430 (_ bv2 32))) ?x347))))
 (let (($x352 (= (_ bv0 32) ?x351)))
 (let ((?x349 (ite $x352 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (bvuge ?x349 (_ bv1 32))))
 (let (($x355 (= $x353 $x433)))
 (let (($x61 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x328 (and $x61 $x276)))
 (let (($x356 (=> $x328 $x355)))
 (let (($x350 (= ?x349 (_ bv0 32))))
 (let (($x348 (= $x342 $x350)))
 (let (($x432 (=> $x328 $x348)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x272 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x272 (_ bv4 32))))))
 (let ((?x338 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x272 (_ bv4 32)) (_ bv2 32))) ?x6)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x272 (_ bv4 32)) (_ bv3 32))) ?x338)))
 (let (($x185 (= (_ bv0 32) ?x43)))
 (let ((?x339 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x346 (bvuge ?x339 (_ bv1 32))))
 (let (($x431 (= $x345 $x346)))
 (let (($x399 (=> $x328 $x431)))
 (let (($x429 (= ?x339 (_ bv0 32))))
 (let (($x364 (= $x287 $x429)))
 (let (($x340 (=> $x328 $x364)))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x336))))
 (let (($x285 (= input.spec-%var-t-0.2.2.2.0 ?x281)))
 (let (($x286 (=> $x328 $x285)))
 (let (($x273 (= (_ bv0 32) ?x272)))
 (let ((?x274 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x274 (_ bv1 32))))
 (let (($x279 (= $x276 $x277)))
 (let (($x472 (=> $x61 $x279)))
 (let (($x362 (and $x61 $x263)))
 (let (($x283 (=> $x362 $x42)))
 (let (($x335 (= ?x274 (_ bv0 32))))
 (let (($x403 (= $x263 $x335)))
 (let (($x282 (=> $x61 $x403)))
 (let (($x262 (= $x257 $x258)))
 (let (($x5 (and $x61 $x51)))
 (let (($x269 (=> $x5 $x262)))
 (let (($x255 (= $x238 $x325)))
 (let (($x256 (=> $x5 $x255)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x218 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x218 (_ bv4 32))))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x218 (_ bv4 32)) (_ bv2 32))) ?x233)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x218 (_ bv4 32)) (_ bv3 32))) ?x333)))
 (let (($x246 (= (_ bv0 32) ?x324)))
 (let ((?x331 (ite $x246 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x331 (_ bv1 32))))
 (let (($x251 (= $x248 $x250)))
 (let (($x249 (=> $x5 $x251)))
 (let (($x242 (= ?x331 (_ bv0 32))))
 (let (($x292 (= $x306 $x242)))
 (let (($x289 (=> $x5 $x292)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem ?x218))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv2 32))) ?x237))))
 (let (($x228 (= input.spec-%var-t-0.2.1.2.0 ?x229)))
 (let (($x235 (=> $x5 $x228)))
 (let (($x323 (= $x51 $x220)))
 (let (($x224 (=> $x61 $x323)))
 (let (($x40 (and $x61 $x210)))
 (let (($x223 (=> $x40 $x42)))
 (let (($x56 (= $x210 $x105)))
 (let (($x214 (=> $x61 $x56)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x36)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x72)))
 (let (($x321 (= input.spec-%var-t-0.2.0 ?x208)))
 (let (($x209 (=> $x61 $x321)))
 (let (($x194 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x203 (=> $x194 $x42)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x200 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x197 (bvuge ?x200 (_ bv1 32))))
 (let (($x198 (= $x61 $x197)))
 (let (($x54 (= ?x200 (_ bv0 32))))
 (let (($x201 (= $x194 $x54)))
 (let (($x434 (and (and (and (and (and (and $x201 $x198) $x203) $x209) $x214) $x223) $x224)))
 (let (($x368 (and (and (and (and (and (and $x434 $x235) $x289) $x249) $x256) $x269) $x282)))
 (let (($x171 (and (and (and (and (and (and $x368 $x283) $x472) $x286) $x340) $x399) $x432)))
 (let (($x436 (and $x171 $x356)))
 (let (($x371 (= $x436 true)))
 (let ((?x319 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x178 (concat ?x179 (concat ?x169 (concat ?x173 ?x319)))))
 (let (($x196 (= ?x178 input.dst.llvm-%t)))
 (let (($x193 (= $x196 true)))
 (let (($x302 (= $x193 true)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x103 (concat ?x122 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x58 (bvadd ?x11 (_ bv3 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem ?x58) (concat ?x91 ?x103))))
 (let (($x299 (= (bvand ?x64 (_ bv4294967280 32)) ?x64)))
 (let (($x297 (= (bvand ?x11 (_ bv4294967292 32)) ?x11)))
 (let (($x170 (and $x297 $x299)))
 (let (($x147 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x144 (and true $x147)))
 (let (($x158 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x11 (bvsub ?x11 (_ bv4 32))) (bvult ?x11 (bvsub ?x11 (_ bv4 32))))))
 (let (($x160 (and (and (and $x158 $x144) $x297) $x170)))
 (let (($x156 (= true $x160)))
 (let (($x22 (not $x48)))
 (let (($x186 (=> $x22 $x156)))
 (let (($x202 (= $x186 true)))
 (let (($x206 (= $x202 true)))
 (let (($x204 (= $x206 true)))
 (let (($x181 (= input.dst.llvm-%t ?x178)))
 (let (($x126 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x183 (and $x126 $x181)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x78)))
 (let ((?x38 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x38)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x104 $x84)))
 (let (($x52 (and $x10 $x67)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x127 $x52)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x108)))))))
 (let (($x188 (and (and (and $x83 true) $x29) $x183)))
 (let (($x55 (and $x186 $x188)))
 (let (($x44 (= (_ bv0 32) ?x64)))
 (let (($x133 (not $x44)))
 (let (($x49 (=> $x133 $x156)))
 (let (($x152 (= (bvand ?x150 (_ bv4294967280 32)) ?x150)))
 (let (($x154 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x146 (and $x154 $x152)))
 (let (($x149 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv8 32))) (bvult ?x17 (bvsub ?x17 (_ bv8 32))))))
 (let (($x35 (and (and (and $x149 $x144) $x154) $x146)))
 (let (($x28 (= true $x35)))
 (let (($x155 (=> $x44 $x28)))
 (let (($x182 (and $x155 $x49)))
 (let (($x175 (= true $x182)))
 (let (($x313 (or $x44 $x133)))
 (let (($x314 (and $x22 $x313)))
 (let (($x300 (=> $x314 $x175)))
 (let (($x189 (and $x300 $x55)))
 (let (($x190 (= $x189 true)))
 (let (($x320 (= $x190 true)))
 (let (($x301 (= $x320 true)))
 (let (($x161 (= $x300 true)))
 (let (($x177 (= $x161 true)))
 (let (($x174 (= $x177 true)))
 (let (($x120 (and $x22 $x44)))
 (let (($x128 (= $x120 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x97 (= $x126 true)))
 (let (($x73 (= $x97 true)))
 (let (($x81 (= $x73 true)))
 (let (($x115 (and $x83 $x29)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let (($x107 (= $x46 true)))
 (let (($x132 (and $x107 $x81)))
 (let (($x95 (and $x132 $x81)))
 (let (($x139 (and $x95 $x134)))
 (let (($x180 (and $x139 $x174)))
 (let (($x191 (and $x180 $x301)))
 (let (($x195 (and $x191 $x204)))
 (let (($x192 (and $x195 $x302)))
 (let (($x406 (and $x192 $x371)))
 (let (($x372 (and $x406 $x371)))
 (let (($x487 (and $x372 $x486)))
 (let (($x547 (and $x487 $x546)))
 (let (($x662 (and $x547 $x661)))
 (let (($x743 (and $x662 $x716)))
 (let (($x717 (and $x5 $x743)))
 (let (($x7 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x718 (and $x7 $x717)))
 (let (($x744 (and $x42 $x718)))
 (let (($x719 (and $x42 $x744)))
 (let (($x76 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x60 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x12 $x76)))))))
 (let (($x124 (=> (and $x120 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x12 $x76)))))))
 (let (($x129 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x113 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x129)))))))
 (let (($x88 (=> (and $x22 (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x116 $x129)))))))
 (let (($x110 (and $x88 $x124)))
 (let (($x720 (and $x110 $x719)))
 (let (($x822 (=> $x720 $x821)))
 (not $x
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3936X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x137 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x98 (bvadd ?x17 (_ bv3 32))))
 (let ((?x150 (concat (select input.dst.llvm-mem ?x98) (concat ?x138 ?x137))))
 (let ((?x791 (bvadd ?x150 (_ bv8 32))))
 (let ((?x795 (concat (select input.dst.llvm-mem (bvadd ?x791 (_ bv1 32))) (select input.dst.llvm-mem ?x791))))
 (let ((?x801 (concat (select input.dst.llvm-mem (bvadd ?x791 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x791 (_ bv2 32))) ?x795))))
 (let (($x802 (= (_ bv0 32) ?x801)))
 (let ((?x803 (ite $x802 (_ bv0 32) (_ bv1 32))))
 (let (($x807 (bvuge ?x803 (_ bv1 32))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x219 (concat ?x304 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x218 (concat ?x211 (concat ?x212 ?x219))))
 (let ((?x308 (bvadd ?x218 (_ bv8 32))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv1 32))) (select input.dst.llvm-mem ?x308))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv2 32))) ?x252))))
 (let (($x397 (= (_ bv0 32) ?x311)))
 (let ((?x326 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x326 (_ bv1 32))))
 (let (($x808 (= $x258 $x807)))
 (let (($x322 (= (_ bv0 32) ?x218)))
 (let ((?x221 (ite $x322 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x221 (_ bv1 32))))
 (let (($x809 (=> $x220 $x808)))
 (let (($x804 (= ?x803 (_ bv0 32))))
 (let (($x325 (= ?x326 (_ bv0 32))))
 (let (($x805 (= $x325 $x804)))
 (let (($x806 (=> $x220 $x805)))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x782 (concat ?x781 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv8 32))))))
 (let ((?x784 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x787 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x788 (concat ?x787 (concat ?x784 ?x782))))
 (let (($x789 (= ?x788 ?x788)))
 (let (($x790 (=> $x220 $x789)))
 (let ((?x768 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x769 (concat ?x768 (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv4 32))))))
 (let ((?x771 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x774 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3936X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x775 (concat ?x774 (concat ?x771 ?x769))))
 (let (($x776 (= ?x775 ?x775)))
 (let (($x777 (=> $x220 $x776)))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3936X))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv2 32))) ?x759)))
 (let ((?x762 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3936X (_ bv3 32))) ?x77)))
 (let (($x763 (= ?x762 ?x762)))
 (let (($x764 (=> $x220 $x763)))
 (let (($x749 (= (_ bv0 32) ?x150)))
 (let ((?x750 (ite $x749 (_ bv0 32) (_ bv1 32))))
 (let (($x753 (bvuge ?x750 (_ bv1 32))))
 (let (($x754 (= $x220 $x753)))
 (let (($x751 (= ?x750 (_ bv0 32))))
 (let (($x105 (= ?x221 (_ bv0 32))))
 (let (($x752 (= $x105 $x751)))
 (let (($x748 (= ?x218 ?x150)))
 (let (($x42 (= false false)))
 (let (($x746 (and $x220 $x325)))
 (let (($x747 (=> $x746 $x42)))
 (let (($x722 (=> $x105 $x42)))
 (let (($x815 (and (and (and (and (and (and $x722 $x747) $x748) $x752) $x754) $x764) $x777)))
 (let (($x818 (and (and (and $x815 $x790) $x806) $x809)))
 (let (($x721 (not true)))
 (let (($x819 (or $x721 $x818)))
 (let (($x745 (= true true)))
 (let (($x820 (and $x745 $x819)))
 (let (($x821 (= $x820 true)))
 (let (($x699 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x514 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x700 (= $x514 $x699)))
 (let (($x257 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x737 (=> $x257 $x700)))
 (let (($x479 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x697 (and $x257 $x479)))
 (let (($x698 (=> $x697 $x42)))
 (let (($x695 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x696 (= $x479 $x695)))
 (let (($x736 (=> $x257 $x696)))
 (let (($x734 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x448 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x693 (= $x448 $x734)))
 (let (($x735 (=> $x257 $x693)))
 (let (($x427 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x691 (and $x257 $x427)))
 (let (($x692 (=> $x691 $x42)))
 (let (($x689 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x733 (= $x427 $x689)))
 (let (($x690 (=> $x257 $x733)))
 (let (($x687 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x732 (=> $x257 $x687)))
 (let (($x238 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x685 (=> $x238 $x42)))
 (let (($x683 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x418 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x731 (= $x418 $x683)))
 (let (($x248 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x684 (=> $x248 $x731)))
 (let (($x415 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x681 (and $x248 $x415)))
 (let (($x682 (=> $x681 $x42)))
 (let (($x679 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x680 (= $x415 $x679)))
 (let (($x730 (=> $x248 $x680)))
 (let (($x676 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x411 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x677 (= $x411 $x676)))
 (let (($x678 (=> $x248 $x677)))
 (let (($x389 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x728 (and $x248 $x389)))
 (let (($x675 (=> $x728 $x42)))
 (let (($x672 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x673 (= $x389 $x672)))
 (let (($x674 (=> $x248 $x673)))
 (let (($x726 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x671 (=> $x248 $x726)))
 (let (($x306 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x669 (=> $x306 $x42)))
 (let (($x668 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x725 (= $x257 $x668)))
 (let (($x34 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x111 (= $x238 $x34)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x19 (= $x248 $x667)))
 (let (($x666 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x723 (= $x306 $x666)))
 (let (($x664 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x705 (and (and (and (and (and (and $x664 $x723) $x19) $x111) $x725) $x669) $x671)))
 (let (($x740 (and (and (and (and (and (and $x705 $x674) $x675) $x678) $x730) $x682) $x684)))
 (let (($x714 (and (and (and (and (and (and $x740 $x685) $x732) $x690) $x692) $x735) $x736)))
 (let (($x715 (and (and $x714 $x698) $x737)))
 (let (($x716 (= $x715 true)))
 (let (($x609 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x633 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x645 (= $x633 $x609)))
 (let (($x353 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x276 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x596 (and $x276 $x353)))
 (let (($x634 (=> $x596 $x645)))
 (let (($x632 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x606 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x644 (= $x606 $x632)))
 (let (($x608 (=> $x596 $x644)))
 (let (($x643 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x603 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x653 (= $x603 $x643)))
 (let (($x604 (=> $x596 $x653)))
 (let (($x642 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x631 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x601 (= $x631 $x642)))
 (let (($x602 (=> $x596 $x601)))
 (let (($x598 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x641 (=> $x596 $x598)))
 (let (($x594 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x640 (= $x353 $x594)))
 (let (($x595 (=> $x276 $x640)))
 (let (($x342 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x512 (and $x276 $x342)))
 (let (($x531 (=> $x512 $x42)))
 (let (($x652 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x592 (= $x342 $x652)))
 (let (($x593 (=> $x276 $x592)))
 (let (($x590 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x629 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x638 (= $x629 $x590)))
 (let (($x345 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x576 (and $x276 $x345)))
 (let (($x591 (=> $x576 $x638)))
 (let (($x588 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x627 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x637 (= $x627 $x588)))
 (let (($x589 (=> $x576 $x637)))
 (let (($x585 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x626 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x636 (= $x626 $x585)))
 (let (($x586 (=> $x576 $x636)))
 (let (($x583 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x651 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x635 (= $x651 $x583)))
 (let (($x584 (=> $x576 $x635)))
 (let (($x579 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x580 (=> $x576 $x579)))
 (let (($x556 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x557 (= $x345 $x556)))
 (let (($x625 (=> $x276 $x557)))
 (let (($x287 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x529 (and $x276 $x287)))
 (let (($x508 (=> $x529 $x42)))
 (let (($x624 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x554 (= $x287 $x624)))
 (let (($x555 (=> $x276 $x554)))
 (let (($x552 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x553 (=> $x276 $x552)))
 (let (($x263 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x503 (=> $x263 $x42)))
 (let (($x549 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x550 (= $x276 $x549)))
 (let (($x548 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x623 (= $x263 $x548)))
 (let (($x655 (and (and (and (and (and (and $x623 $x550) $x503) $x553) $x555) $x508) $x625)))
 (let (($x657 (and (and (and (and (and (and $x655 $x580) $x584) $x586) $x589) $x591) $x593)))
 (let (($x659 (and (and (and (and (and (and $x657 $x531) $x595) $x641) $x602) $x604) $x608)))
 (let (($x660 (and $x659 $x634)))
 (let (($x661 (= $x660 true)))
 (let (($x532 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x571 (= $x353 $x532)))
 (let (($x533 (=> $x276 $x571)))
 (let (($x511 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x530 (= $x342 $x511)))
 (let (($x565 (=> $x276 $x530)))
 (let (($x569 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x509 (= $x345 $x569)))
 (let (($x570 (=> $x276 $x509)))
 (let (($x564 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x506 (= $x287 $x564)))
 (let (($x507 (=> $x276 $x506)))
 (let (($x504 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x505 (=> $x276 $x504)))
 (let (($x563 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x501 (= $x257 $x563)))
 (let (($x51 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x502 (=> $x51 $x501)))
 (let (($x443 (and $x51 $x238)))
 (let (($x466 (=> $x443 $x42)))
 (let (($x499 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x500 (= $x238 $x499)))
 (let (($x526 (=> $x51 $x500)))
 (let (($x561 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x562 (= $x248 $x561)))
 (let (($x568 (=> $x51 $x562)))
 (let (($x408 (and $x51 $x306)))
 (let (($x474 (=> $x408 $x42)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x497 (= $x306 $x496)))
 (let (($x525 (=> $x51 $x497)))
 (let (($x524 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x494 (=> $x51 $x524)))
 (let (($x210 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x376 (=> $x210 $x42)))
 (let (($x492 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x493 (= $x276 $x492)))
 (let (($x491 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x523 (= $x263 $x491)))
 (let (($x558 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x559 (= $x51 $x558)))
 (let (($x567 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x490 (= $x210 $x567)))
 (let (($x489 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x620 (and (and (and (and (and (and $x489 $x490) $x559) $x523) $x493) $x376) $x494)))
 (let (($x541 (and (and (and (and (and (and $x620 $x525) $x474) $x568) $x526) $x466) $x502)))
 (let (($x544 (and (and (and (and (and (and $x541 $x503) $x505) $x507) $x508) $x570) $x565)))
 (let (($x650 (and (and $x544 $x531) $x533)))
 (let (($x546 (= $x650 true)))
 (let (($x480 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x455 (= $x514 $x480)))
 (let (($x467 (and $x51 $x257)))
 (let (($x456 (=> $x467 $x455)))
 (let (($x513 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x453 (= $x479 $x513)))
 (let (($x454 (=> $x467 $x453)))
 (let (($x449 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x478 (= $x448 $x449)))
 (let (($x450 (=> $x467 $x478)))
 (let (($x469 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x428 (= $x427 $x469)))
 (let (($x447 (=> $x467 $x428)))
 (let (($x425 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x477 (=> $x467 $x425)))
 (let (($x423 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x444 (= $x257 $x423)))
 (let (($x424 (=> $x51 $x444)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x421 (= $x238 $x476)))
 (let (($x422 (=> $x51 $x421)))
 (let (($x419 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x442 (= $x418 $x419)))
 (let (($x385 (and $x51 $x248)))
 (let (($x465 (=> $x385 $x442)))
 (let (($x417 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x464 (= $x415 $x417)))
 (let (($x475 (=> $x385 $x464)))
 (let (($x412 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x413 (= $x411 $x412)))
 (let (($x414 (=> $x385 $x413)))
 (let (($x440 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x391 (= $x389 $x440)))
 (let (($x410 (=> $x385 $x391)))
 (let (($x439 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x409 (=> $x385 $x439)))
 (let (($x382 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (= $x248 $x382)))
 (let (($x384 (=> $x51 $x383)))
 (let (($x379 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x306 $x379)))
 (let (($x381 (=> $x51 $x380)))
 (let (($x407 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x473 (=> $x51 $x407)))
 (let (($x375 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x438 (= $x51 $x375)))
 (let (($x437 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x374 (= $x210 $x437)))
 (let (($x481 (and (and (and (and (and (and $x374 $x438) $x376) $x473) $x381) $x474) $x384)))
 (let (($x462 (and (and (and (and (and (and $x481 $x409) $x410) $x414) $x475) $x465) $x422)))
 (let (($x485 (and (and (and (and (and (and $x462 $x466) $x424) $x477) $x447) $x450) $x454)))
 (let (($x520 (and $x485 $x456)))
 (let (($x486 (= $x520 true)))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x270 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x267 (concat ?x268 ?x265))))
 (let ((?x430 (bvadd ?x272 (_ bv8 32))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x430 (_ bv1 32))) (select input.dst.llvm-mem ?x430))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x430 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x430 (_ bv2 32))) ?x347))))
 (let (($x352 (= (_ bv0 32) ?x351)))
 (let ((?x349 (ite $x352 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (bvuge ?x349 (_ bv1 32))))
 (let (($x355 (= $x353 $x433)))
 (let (($x61 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x328 (and $x61 $x276)))
 (let (($x356 (=> $x328 $x355)))
 (let (($x350 (= ?x349 (_ bv0 32))))
 (let (($x348 (= $x342 $x350)))
 (let (($x432 (=> $x328 $x348)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x272 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x272 (_ bv4 32))))))
 (let ((?x338 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x272 (_ bv4 32)) (_ bv2 32))) ?x6)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x272 (_ bv4 32)) (_ bv3 32))) ?x338)))
 (let (($x185 (= (_ bv0 32) ?x43)))
 (let ((?x339 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x346 (bvuge ?x339 (_ bv1 32))))
 (let (($x431 (= $x345 $x346)))
 (let (($x399 (=> $x328 $x431)))
 (let (($x429 (= ?x339 (_ bv0 32))))
 (let (($x364 (= $x287 $x429)))
 (let (($x340 (=> $x328 $x364)))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x336))))
 (let (($x285 (= input.spec-%var-t-0.2.2.2.0 ?x281)))
 (let (($x286 (=> $x328 $x285)))
 (let (($x273 (= (_ bv0 32) ?x272)))
 (let ((?x274 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x274 (_ bv1 32))))
 (let (($x279 (= $x276 $x277)))
 (let (($x472 (=> $x61 $x279)))
 (let (($x362 (and $x61 $x263)))
 (let (($x283 (=> $x362 $x42)))
 (let (($x335 (= ?x274 (_ bv0 32))))
 (let (($x403 (= $x263 $x335)))
 (let (($x282 (=> $x61 $x403)))
 (let (($x262 (= $x257 $x258)))
 (let (($x5 (and $x61 $x51)))
 (let (($x269 (=> $x5 $x262)))
 (let (($x255 (= $x238 $x325)))
 (let (($x256 (=> $x5 $x255)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x218 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x218 (_ bv4 32))))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x218 (_ bv4 32)) (_ bv2 32))) ?x233)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x218 (_ bv4 32)) (_ bv3 32))) ?x333)))
 (let (($x246 (= (_ bv0 32) ?x324)))
 (let ((?x331 (ite $x246 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x331 (_ bv1 32))))
 (let (($x251 (= $x248 $x250)))
 (let (($x249 (=> $x5 $x251)))
 (let (($x242 (= ?x331 (_ bv0 32))))
 (let (($x292 (= $x306 $x242)))
 (let (($x289 (=> $x5 $x292)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem ?x218))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv2 32))) ?x237))))
 (let (($x228 (= input.spec-%var-t-0.2.1.2.0 ?x229)))
 (let (($x235 (=> $x5 $x228)))
 (let (($x323 (= $x51 $x220)))
 (let (($x224 (=> $x61 $x323)))
 (let (($x40 (and $x61 $x210)))
 (let (($x223 (=> $x40 $x42)))
 (let (($x56 (= $x210 $x105)))
 (let (($x214 (=> $x61 $x56)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x36)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x72)))
 (let (($x321 (= input.spec-%var-t-0.2.0 ?x208)))
 (let (($x209 (=> $x61 $x321)))
 (let (($x194 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x203 (=> $x194 $x42)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x200 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x197 (bvuge ?x200 (_ bv1 32))))
 (let (($x198 (= $x61 $x197)))
 (let (($x54 (= ?x200 (_ bv0 32))))
 (let (($x201 (= $x194 $x54)))
 (let (($x434 (and (and (and (and (and (and $x201 $x198) $x203) $x209) $x214) $x223) $x224)))
 (let (($x368 (and (and (and (and (and (and $x434 $x235) $x289) $x249) $x256) $x269) $x282)))
 (let (($x171 (and (and (and (and (and (and $x368 $x283) $x472) $x286) $x340) $x399) $x432)))
 (let (($x436 (and $x171 $x356)))
 (let (($x371 (= $x436 true)))
 (let ((?x319 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x178 (concat ?x179 (concat ?x169 (concat ?x173 ?x319)))))
 (let (($x196 (= ?x178 input.dst.llvm-%t)))
 (let (($x193 (= $x196 true)))
 (let (($x302 (= $x193 true)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x103 (concat ?x122 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x58 (bvadd ?x11 (_ bv3 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem ?x58) (concat ?x91 ?x103))))
 (let (($x299 (= (bvand ?x64 (_ bv4294967280 32)) ?x64)))
 (let (($x297 (= (bvand ?x11 (_ bv4294967292 32)) ?x11)))
 (let (($x170 (and $x297 $x299)))
 (let (($x147 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x144 (and true $x147)))
 (let (($x158 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x11 (bvsub ?x11 (_ bv4 32))) (bvult ?x11 (bvsub ?x11 (_ bv4 32))))))
 (let (($x160 (and (and (and $x158 $x144) $x297) $x170)))
 (let (($x156 (= true $x160)))
 (let (($x22 (not $x48)))
 (let (($x186 (=> $x22 $x156)))
 (let (($x202 (= $x186 true)))
 (let (($x206 (= $x202 true)))
 (let (($x204 (= $x206 true)))
 (let (($x181 (= input.dst.llvm-%t ?x178)))
 (let (($x126 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x183 (and $x126 $x181)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x78)))
 (let ((?x38 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x38)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x104 $x84)))
 (let (($x52 (and $x10 $x67)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x127 $x52)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x108)))))))
 (let (($x188 (and (and (and $x83 true) $x29) $x183)))
 (let (($x55 (and $x186 $x188)))
 (let (($x44 (= (_ bv0 32) ?x64)))
 (let (($x133 (not $x44)))
 (let (($x49 (=> $x133 $x156)))
 (let (($x152 (= (bvand ?x150 (_ bv4294967280 32)) ?x150)))
 (let (($x154 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x146 (and $x154 $x152)))
 (let (($x149 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv8 32))) (bvult ?x17 (bvsub ?x17 (_ bv8 32))))))
 (let (($x35 (and (and (and $x149 $x144) $x154) $x146)))
 (let (($x28 (= true $x35)))
 (let (($x155 (=> $x44 $x28)))
 (let (($x182 (and $x155 $x49)))
 (let (($x175 (= true $x182)))
 (let (($x313 (or $x44 $x133)))
 (let (($x314 (and $x22 $x313)))
 (let (($x300 (=> $x314 $x175)))
 (let (($x189 (and $x300 $x55)))
 (let (($x190 (= $x189 true)))
 (let (($x320 (= $x190 true)))
 (let (($x301 (= $x320 true)))
 (let (($x161 (= $x300 true)))
 (let (($x177 (= $x161 true)))
 (let (($x174 (= $x177 true)))
 (let (($x120 (and $x22 $x44)))
 (let (($x128 (= $x120 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x97 (= $x126 true)))
 (let (($x73 (= $x97 true)))
 (let (($x81 (= $x73 true)))
 (let (($x115 (and $x83 $x29)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let (($x107 (= $x46 true)))
 (let (($x132 (and $x107 $x81)))
 (let (($x95 (and $x132 $x81)))
 (let (($x139 (and $x95 $x134)))
 (let (($x180 (and $x139 $x174)))
 (let (($x191 (and $x180 $x301)))
 (let (($x195 (and $x191 $x204)))
 (let (($x192 (and $x195 $x302)))
 (let (($x406 (and $x192 $x371)))
 (let (($x372 (and $x406 $x371)))
 (let (($x487 (and $x372 $x486)))
 (let (($x547 (and $x487 $x546)))
 (let (($x662 (and $x547 $x661)))
 (let (($x743 (and $x662 $x716)))
 (let (($x717 (and $x5 $x743)))
 (let (($x7 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x718 (and $x7 $x717)))
 (let (($x744 (and $x42 $x718)))
 (let (($x719 (and $x42 $x744)))
 (let (($x76 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x60 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x12 $x76)))))))
 (let (($x124 (=> (and $x120 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x12 $x76)))))))
 (let (($x129 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x113 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x129)))))))
 (let (($x88 (=> (and $x22 (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x116 $x129)))))))
 (let (($x110 (and $x88 $x124)))
 (let (($x720 (and $x110 $x719)))
 (let (($x822 (=> $x720 $x821)))
 (not $x822)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var4396X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x310 (concat ?x265 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x282 (concat ?x403 (concat ?x273 ?x310))))
 (let (($x368 (= (_ bv0 32) ?x282)))
 (let ((?x362 (ite $x368 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (= ?x362 (_ bv0 32))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x434 (concat ?x224 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x245 (concat ?x290 (concat ?x225 ?x434))))
 (let ((?x229 (bvadd ?x245 (_ bv8 32))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x232))))
 (let (($x243 (= (_ bv0 32) ?x241)))
 (let ((?x231 (ite $x243 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (= ?x231 (_ bv0 32))))
 (let (($x279 (= $x230 $x277)))
 (let (($x227 (= (_ bv0 32) ?x245)))
 (let ((?x394 (ite $x227 (_ bv0 32) (_ bv1 32))))
 (let (($x307 (bvuge ?x394 (_ bv1 32))))
 (let (($x472 (=> $x307 $x279)))
 (let (($x283 (bvuge ?x362 (_ bv1 32))))
 (let (($x268 (bvuge ?x231 (_ bv1 32))))
 (let (($x369 (= $x268 $x283)))
 (let (($x276 (=> $x307 $x369)))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x258 (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv8 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x266 (concat ?x271 (concat ?x367 ?x262))))
 (let (($x267 (= ?x266 ?x266)))
 (let (($x334 (=> $x307 $x267)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv4 32))))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x326 (concat ?x397 (concat ?x252 ?x239))))
 (let (($x325 (= ?x326 ?x326)))
 (let (($x255 (=> $x307 $x325)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4396X))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv2 32))) ?x248)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv3 32))) ?x249)))
 (let (($x308 (= ?x238 ?x238)))
 (let (($x259 (=> $x307 $x308)))
 (let (($x11 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x402 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (= ?x402 (_ bv0 32))))
 (let (($x226 (= ?x394 (_ bv0 32))))
 (let (($x331 (= $x226 $x117)))
 (let (($x207 (bvuge ?x402 (_ bv1 32))))
 (let (($x246 (= $x307 $x207)))
 (let (($x324 (= ?x245 input.dst.llvm-%t)))
 (let (($x7 (= false false)))
 (let (($x233 (and $x307 $x230)))
 (let (($x333 (=> $x233 $x7)))
 (let (($x237 (=> $x226 $x7)))
 (let (($x329 (and (and (and (and (and (and $x237 $x333) $x324) $x246) $x331) $x259) $x255)))
 (let (($x396 (and (and (and $x329 $x334) $x276) $x472)))
 (let (($x359 (not true)))
 (let (($x363 (or $x359 $x396)))
 (let (($x223 (= true true)))
 (let (($x336 (and $x223 $x363)))
 (let (($x280 (= $x336 true)))
 (let (($x219 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x217 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x216 (= $x217 $x219)))
 (let (($x222 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x304 (= $x215 $x222)))
 (let (($x218 (and $x304 $x216)))
 (let (($x322 (= $x218 true)))
 (let (($x358 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x13 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x53 (= $x13 $x358)))
 (let (($x321 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x72 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x209 (= $x72 $x321)))
 (let (($x210 (and $x209 $x53)))
 (let (($x303 (= $x210 true)))
 (let (($x20 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x101 (= $x20 $x207)))
 (let (($x203 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x318 (= $x203 $x117)))
 (let (($x205 (and $x318 $x101)))
 (let (($x393 (= $x205 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x301 (concat ?x320 (concat ?x55 (concat ?x181 ?x187)))))
 (let (($x197 (= ?x301 input.dst.llvm-%t)))
 (let (($x198 (= $x197 true)))
 (let (($x357 (= $x198 true)))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x106 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x294 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x65 (bvadd ?x294 (_ bv3 32))))
 (let ((?x120 (concat (select input.dst.llvm-mem ?x65) (concat ?x125 ?x122))))
 (let (($x300 (= (bvand ?x120 (_ bv4294967280 32)) ?x120)))
 (let (($x182 (= (bvand ?x294 (_ bv4294967292 32)) ?x294)))
 (let (($x161 (and $x182 $x300)))
 (let (($x138 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x141 (and true $x138)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x294 (bvsub ?x294 (_ bv4 32))) (bvult ?x294 (bvsub ?x294 (_ bv4 32))))))
 (let (($x180 (and (and (and $x156 $x141) $x182) $x161)))
 (let (($x186 (= true $x180)))
 (let (($x123 (not $x11)))
 (let (($x319 (=> $x123 $x186)))
 (let (($x200 (= $x319 true)))
 (let (($x54 (= $x200 true)))
 (let (($x201 (= $x54 true)))
 (let (($x191 (= input.dst.llvm-%t ?x301)))
 (let (($x139 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x202 (and $x139 $x191)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x69)))
 (let ((?x46 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x87 $x107)))
 (let (($x97 (and $x50 $x126)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x83 $x97)))
 (let (($x84 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x84)))))))
 (let (($x195 (and (and (and $x115 true) $x73) $x202)))
 (let (($x196 (and $x319 $x195)))
 (let (($x71 (= (_ bv0 32) ?x120)))
 (let (($x140 (not $x71)))
 (let (($x184 (=> $x140 $x186)))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x152 (concat ?x165 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x39 (_ bv3 32))))
 (let ((?x167 (concat (select input.dst.llvm-mem ?x96) (concat ?x35 ?x152))))
 (let (($x298 (= (bvand ?x167 (_ bv4294967280 32)) ?x167)))
 (let (($x137 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x21 (and $x137 $x298)))
 (let (($x315 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv8 32))) (bvult ?x39 (bvsub ?x39 (_ bv8 32))))))
 (let (($x316 (and (and (and $x315 $x141) $x137) $x21)))
 (let (($x297 (= true $x316)))
 (let (($x157 (=> $x71 $x297)))
 (let (($x392 (and $x157 $x184)))
 (let (($x176 (= true $x392)))
 (let (($x163 (or $x71 $x140)))
 (let (($x135 (and $x123 $x163)))
 (let (($x179 (=> $x135 $x176)))
 (let (($x193 (and $x179 $x196)))
 (let (($x302 (= $x193 true)))
 (let (($x192 (= $x302 true)))
 (let (($x57 (= $x192 true)))
 (let (($x8 (= $x179 true)))
 (let (($x169 (= $x8 true)))
 (let (($x159 (= $x169 true)))
 (let (($x295 (= $x11 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x314 (= $x313 true)))
 (let (($x81 (and $x115 $x73)))
 (let (($x132 (= $x81 true)))
 (let (($x95 (= $x132 true)))
 (let (($x128 (= $x95 true)))
 (let (($x136 (and $x128 $x314)))
 (let (($x80 (and $x136 $x314)))
 (let (($x131 (and $x80 $x149)))
 (let (($x173 (and $x131 $x159)))
 (let (($x194 (and $x173 $x57)))
 (let (($x61 (and $x194 $x201)))
 (let (($x42 (and $x61 $x357)))
 (let (($x199 (and $x42 $x393)))
 (let (($x36 (and $x199 $x393)))
 (let (($x213 (and $x36 $x303)))
 (let (($x221 (and $x213 $x322)))
 (let (($x68 (and $x20 $x13)))
 (let (($x105 (and $x68 $x221)))
 (let (($x15 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x56 (and $x15 $x105)))
 (let (($x214 (and $x7 $x56)))
 (let (($x366 (and $x7 $x214)))
 (let (($x75 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x23 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x75)))))))
 (let (($x17 (and $x123 $x71)))
 (let (($x45 (=> (and $x17 (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x92 $x75)))))))
 (let (($x93 (bvugt ?x294 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x59 (=> (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x93)))))))
 (let (($x24 (=> (and $x123 (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x102 $x93)))))))
 (let (($x98 (and $x24 $x45)))
 (let (($x40 (and $x98 $x366)))
 (let (($x281 (=> $x40 $x280)))
 (not $x281)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var4396X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x310 (concat ?x265 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x282 (concat ?x403 (concat ?x273 ?x310))))
 (let (($x368 (= (_ bv0 32) ?x282)))
 (let ((?x362 (ite $x368 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (= ?x362 (_ bv0 32))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x434 (concat ?x224 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x245 (concat ?x290 (concat ?x225 ?x434))))
 (let ((?x229 (bvadd ?x245 (_ bv8 32))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x232))))
 (let (($x243 (= (_ bv0 32) ?x241)))
 (let ((?x231 (ite $x243 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (= ?x231 (_ bv0 32))))
 (let (($x279 (= $x230 $x277)))
 (let (($x227 (= (_ bv0 32) ?x245)))
 (let ((?x394 (ite $x227 (_ bv0 32) (_ bv1 32))))
 (let (($x307 (bvuge ?x394 (_ bv1 32))))
 (let (($x472 (=> $x307 $x279)))
 (let (($x283 (bvuge ?x362 (_ bv1 32))))
 (let (($x268 (bvuge ?x231 (_ bv1 32))))
 (let (($x369 (= $x268 $x283)))
 (let (($x276 (=> $x307 $x369)))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x258 (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv8 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x266 (concat ?x271 (concat ?x367 ?x262))))
 (let (($x267 (= ?x266 ?x266)))
 (let (($x334 (=> $x307 $x267)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv4 32))))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4396X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x326 (concat ?x397 (concat ?x252 ?x239))))
 (let (($x325 (= ?x326 ?x326)))
 (let (($x255 (=> $x307 $x325)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4396X))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv2 32))) ?x248)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4396X (_ bv3 32))) ?x249)))
 (let (($x308 (= ?x238 ?x238)))
 (let (($x259 (=> $x307 $x308)))
 (let (($x11 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x402 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (= ?x402 (_ bv0 32))))
 (let (($x226 (= ?x394 (_ bv0 32))))
 (let (($x331 (= $x226 $x117)))
 (let (($x207 (bvuge ?x402 (_ bv1 32))))
 (let (($x246 (= $x307 $x207)))
 (let (($x324 (= ?x245 input.dst.llvm-%t)))
 (let (($x7 (= false false)))
 (let (($x233 (and $x307 $x230)))
 (let (($x333 (=> $x233 $x7)))
 (let (($x237 (=> $x226 $x7)))
 (let (($x329 (and (and (and (and (and (and $x237 $x333) $x324) $x246) $x331) $x259) $x255)))
 (let (($x396 (and (and (and $x329 $x334) $x276) $x472)))
 (let (($x359 (not true)))
 (let (($x363 (or $x359 $x396)))
 (let (($x223 (= true true)))
 (let (($x336 (and $x223 $x363)))
 (let (($x280 (= $x336 true)))
 (let (($x219 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x217 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x216 (= $x217 $x219)))
 (let (($x222 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x304 (= $x215 $x222)))
 (let (($x218 (and $x304 $x216)))
 (let (($x322 (= $x218 true)))
 (let (($x358 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x13 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x53 (= $x13 $x358)))
 (let (($x321 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x72 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x209 (= $x72 $x321)))
 (let (($x210 (and $x209 $x53)))
 (let (($x303 (= $x210 true)))
 (let (($x20 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x101 (= $x20 $x207)))
 (let (($x203 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x318 (= $x203 $x117)))
 (let (($x205 (and $x318 $x101)))
 (let (($x393 (= $x205 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x301 (concat ?x320 (concat ?x55 (concat ?x181 ?x187)))))
 (let (($x197 (= ?x301 input.dst.llvm-%t)))
 (let (($x198 (= $x197 true)))
 (let (($x357 (= $x198 true)))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x106 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x294 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x65 (bvadd ?x294 (_ bv3 32))))
 (let ((?x120 (concat (select input.dst.llvm-mem ?x65) (concat ?x125 ?x122))))
 (let (($x300 (= (bvand ?x120 (_ bv4294967280 32)) ?x120)))
 (let (($x182 (= (bvand ?x294 (_ bv4294967292 32)) ?x294)))
 (let (($x161 (and $x182 $x300)))
 (let (($x138 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x141 (and true $x138)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x294 (bvsub ?x294 (_ bv4 32))) (bvult ?x294 (bvsub ?x294 (_ bv4 32))))))
 (let (($x180 (and (and (and $x156 $x141) $x182) $x161)))
 (let (($x186 (= true $x180)))
 (let (($x123 (not $x11)))
 (let (($x319 (=> $x123 $x186)))
 (let (($x200 (= $x319 true)))
 (let (($x54 (= $x200 true)))
 (let (($x201 (= $x54 true)))
 (let (($x191 (= input.dst.llvm-%t ?x301)))
 (let (($x139 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x202 (and $x139 $x191)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x69)))
 (let ((?x46 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x87 $x107)))
 (let (($x97 (and $x50 $x126)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x83 $x97)))
 (let (($x84 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x84)))))))
 (let (($x195 (and (and (and $x115 true) $x73) $x202)))
 (let (($x196 (and $x319 $x195)))
 (let (($x71 (= (_ bv0 32) ?x120)))
 (let (($x140 (not $x71)))
 (let (($x184 (=> $x140 $x186)))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x152 (concat ?x165 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x39 (_ bv3 32))))
 (let ((?x167 (concat (select input.dst.llvm-mem ?x96) (concat ?x35 ?x152))))
 (let (($x298 (= (bvand ?x167 (_ bv4294967280 32)) ?x167)))
 (let (($x137 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x21 (and $x137 $x298)))
 (let (($x315 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv8 32))) (bvult ?x39 (bvsub ?x39 (_ bv8 32))))))
 (let (($x316 (and (and (and $x315 $x141) $x137) $x21)))
 (let (($x297 (= true $x316)))
 (let (($x157 (=> $x71 $x297)))
 (let (($x392 (and $x157 $x184)))
 (let (($x176 (= true $x392)))
 (let (($x163 (or $x71 $x140)))
 (let (($x135 (and $x123 $x163)))
 (let (($x179 (=> $x135 $x176)))
 (let (($x193 (and $x179 $x196)))
 (let (($x302 (= $x193 true)))
 (let (($x192 (= $x302 true)))
 (let (($x57 (= $x192 true)))
 (let (($x8 (= $x179 true)))
 (let (($x169 (= $x8 true)))
 (let (($x159 (= $x169 true)))
 (let (($x295 (= $x11 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x314 (= $x313 true)))
 (let (($x81 (and $x115 $x73)))
 (let (($x132 (= $x81 true)))
 (let (($x95 (= $x132 true)))
 (let (($x128 (= $x95 true)))
 (let (($x136 (and $x128 $x314)))
 (let (($x80 (and $x136 $x314)))
 (let (($x131 (and $x80 $x149)))
 (let (($x173 (and $x131 $x159)))
 (let (($x194 (and $x173 $x57)))
 (let (($x61 (and $x194 $x201)))
 (let (($x42 (and $x61 $x357)))
 (let (($x199 (and $x42 $x393)))
 (let (($x36 (and $x199 $x393)))
 (let (($x213 (and $x36 $x303)))
 (let (($x221 (and $x213 $x322)))
 (let (($x68 (and $x20 $x13)))
 (let (($x105 (and $x68 $x221)))
 (let (($x15 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x56 (and $x15 $x105)))
 (let (($x214 (and $x7 $x56)))
 (let (($x366 (and $x7 $x214)))
 (let (($x75 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x23 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x75)))))))
 (let (($x17 (and $x123 $x71)))
 (let (($x45 (=> (and $x17 (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x92 $x75)))))))
 (let (($x93 (bvugt ?x294 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x59 (=> (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x93)))))))
 (let (($x24 (=> (and $x123 (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x102 $x93)))))))
 (let (($x98 (and $x24 $x45)))
 (let (($x40 (and $x98 $x366)))
 (let (($x281 (=> $x40 $x280)))
 (not $x281)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4438X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x282 (concat ?x274 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv8 32))))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x327 (concat ?x276 (concat ?x362 ?x282))))
 (let (($x277 (= ?x327 ?x327)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x434 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x237 (concat ?x226 (concat ?x245 ?x434))))
 (let (($x229 (= (_ bv0 32) ?x237)))
 (let ((?x288 (ite $x229 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x288 (_ bv1 32))))
 (let (($x279 (=> $x228 $x277)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x91 (concat ?x125 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x294 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x93 (bvadd ?x294 (_ bv3 32))))
 (let ((?x71 (concat (select input.dst.llvm-mem ?x93) (concat ?x122 ?x91))))
 (let ((?x329 (bvadd ?x71 (_ bv4 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv1 32))) (select input.dst.llvm-mem ?x329))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv2 32))) ?x269))))
 (let (($x266 (= (_ bv0 32) ?x293)))
 (let ((?x267 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x267 (_ bv1 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x237 (_ bv4 32))))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x237 (_ bv4 32)) (_ bv2 32))) ?x240)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x237 (_ bv4 32)) (_ bv3 32))) ?x244)))
 (let (($x326 (= (_ bv0 32) ?x253)))
 (let ((?x325 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x325 (_ bv1 32))))
 (let (($x273 (= $x403 $x272)))
 (let (($x309 (=> $x228 $x273)))
 (let (($x47 (= false false)))
 (let (($x255 (= ?x325 (_ bv0 32))))
 (let (($x264 (and $x228 $x255)))
 (let (($x335 (=> $x264 $x47)))
 (let (($x334 (= ?x267 (_ bv0 32))))
 (let (($x284 (= $x255 $x334)))
 (let (($x268 (=> $x228 $x284)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x250 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv4 32))))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x249 (concat ?x361 ?x251))))
 (let (($x308 (= ?x238 ?x238)))
 (let (($x259 (=> $x228 $x308)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4438X))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv2 32))) ?x233)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv3 32))) ?x324)))
 (let (($x331 (= ?x278 ?x278)))
 (let (($x275 (=> $x228 $x331)))
 (let (($x17 (= (_ bv0 32) ?x71)))
 (let ((?x234 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x234 (_ bv1 32))))
 (let (($x236 (= $x228 $x232)))
 (let (($x235 (= ?x234 (_ bv0 32))))
 (let (($x305 (= ?x288 (_ bv0 32))))
 (let (($x360 (= $x305 $x235)))
 (let (($x280 (and (and (and (and (and (= ?x237 ?x71) (=> $x305 $x47)) $x360) $x236) $x275) $x259)))
 (let (($x33 (and (and (and (and $x280 $x268) $x335) $x309) $x279)))
 (let (($x5 (not true)))
 (let (($x100 (or $x5 $x33)))
 (let (($x290 (= true true)))
 (let (($x286 (and $x290 $x100)))
 (let (($x112 (= $x286 true)))
 (let (($x221 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x322 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x105 (= $x322 $x221)))
 (let (($x216 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x217 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x218 (= $x217 $x216)))
 (let (($x56 (and $x218 $x105)))
 (let (($x214 (= $x56 true)))
 (let (($x213 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x211 (= $x303 $x213)))
 (let (($x53 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x68 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x210 (= $x68 $x53)))
 (let (($x215 (and $x210 $x211)))
 (let (($x212 (= $x215 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x101 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x199 (bvuge ?x101 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x36 (= $x108 $x199)))
 (let (($x205 (= ?x101 (_ bv0 32))))
 (let (($x207 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x393 (= $x207 $x205)))
 (let (($x72 (and $x393 $x36)))
 (let (($x208 (= $x72 true)))
 (let ((?x188 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x202 (concat ?x191 (concat ?x183 (concat ?x178 ?x188)))))
 (let (($x203 (= ?x202 input.dst.llvm-%t)))
 (let (($x402 (= $x203 true)))
 (let (($x117 (= $x402 true)))
 (let (($x161 (= (bvand ?x71 (_ bv4294967280 32)) ?x71)))
 (let (($x175 (= (bvand ?x294 (_ bv4294967292 32)) ?x294)))
 (let (($x180 (and $x175 $x161)))
 (let (($x145 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x142 (and true $x145)))
 (let (($x182 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x294 (bvsub ?x294 (_ bv4 32))) (bvult ?x294 (bvsub ?x294 (_ bv4 32))))))
 (let (($x392 (and (and (and $x182 $x142) $x175) $x180)))
 (let (($x176 (= true $x392)))
 (let (($x89 (not $x18)))
 (let (($x190 (=> $x89 $x176)))
 (let (($x197 (= $x190 true)))
 (let (($x198 (= $x197 true)))
 (let (($x357 (= $x198 true)))
 (let (($x195 (= input.dst.llvm-%t ?x202)))
 (let (($x313 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x196 (and $x313 $x195)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x97)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x107 $x69)))
 (let (($x81 (and $x126 $x73)))
 (let (($x104 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x104 $x81)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x46 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x67)))))))
 (let (($x192 (and (and (and $x46 true) $x132) $x196)))
 (let (($x57 (and $x190 $x192)))
 (let (($x149 (not $x17)))
 (let (($x179 (=> $x149 $x176)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x165 (concat ?x150 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x12 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x12 (_ bv3 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem ?x75) (concat ?x152 ?x165))))
 (let (($x21 (= (bvand ?x166 (_ bv4294967280 32)) ?x166)))
 (let (($x155 (= (bvand ?x12 (_ bv4294967292 32)) ?x12)))
 (let (($x316 (and $x155 $x21)))
 (let (($x148 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x12 (bvsub ?x12 (_ bv8 32))) (bvult ?x12 (bvsub ?x12 (_ bv8 32))))))
 (let (($x299 (and (and (and $x148 $x142) $x155) $x316)))
 (let (($x153 (= true $x299)))
 (let (($x170 (=> $x17 $x153)))
 (let (($x8 (and $x170 $x179)))
 (let (($x169 (= true $x8)))
 (let (($x147 (or $x17 $x149)))
 (let (($x164 (and $x89 $x147)))
 (let (($x159 (=> $x164 $x169)))
 (let (($x194 (and $x159 $x57)))
 (let (($x200 (= $x194 true)))
 (let (($x54 (= $x200 true)))
 (let (($x201 (= $x54 true)))
 (let (($x173 (= $x159 true)))
 (let (($x319 (= $x173 true)))
 (let (($x206 (= $x319 true)))
 (let (($x131 (and $x89 $x149)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let (($x314 (= $x313 true)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let (($x95 (and $x46 $x132)))
 (let (($x128 (= $x95 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x295 (and $x134 $x80)))
 (let (($x94 (and $x295 $x80)))
 (let (($x144 (and $x94 $x135)))
 (let (($x204 (and $x144 $x206)))
 (let (($x61 (and $x204 $x201)))
 (let (($x42 (and $x61 $x357)))
 (let (($x318 (and $x42 $x117)))
 (let (($x321 (and $x318 $x208)))
 (let (($x209 (and $x321 $x208)))
 (let (($x222 (and $x209 $x212)))
 (let (($x366 (and $x222 $x214)))
 (let (($x130 (and $x108 $x68)))
 (let (($x40 (and $x130 $x366)))
 (let (($x114 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x223 (and $x114 $x40)))
 (let (($x359 (and $x47 $x223)))
 (let (($x51 (and $x47 $x359)))
 (let (($x60 (bvugt ?x12 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x7 (=> (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x60)))))))
 (let (($x82 (and $x89 $x17)))
 (let (($x76 (=> (and $x82 (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x60)))))))
 (let (($x113 (bvugt ?x294 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x93)))
 (let (($x44 (=> (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x113)))))))
 (let (($x66 (=> (and $x89 (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x113)))))))
 (let (($x26 (and $x66 $x76)))
 (let (($x332 (and $x26 $x51)))
 (let (($x312 (=> $x332 $x112)))
 (not $x312)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4438X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x282 (concat ?x274 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv8 32))))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x327 (concat ?x276 (concat ?x362 ?x282))))
 (let (($x277 (= ?x327 ?x327)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x434 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x237 (concat ?x226 (concat ?x245 ?x434))))
 (let (($x229 (= (_ bv0 32) ?x237)))
 (let ((?x288 (ite $x229 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x288 (_ bv1 32))))
 (let (($x279 (=> $x228 $x277)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x91 (concat ?x125 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x294 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x93 (bvadd ?x294 (_ bv3 32))))
 (let ((?x71 (concat (select input.dst.llvm-mem ?x93) (concat ?x122 ?x91))))
 (let ((?x329 (bvadd ?x71 (_ bv4 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv1 32))) (select input.dst.llvm-mem ?x329))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv2 32))) ?x269))))
 (let (($x266 (= (_ bv0 32) ?x293)))
 (let ((?x267 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x267 (_ bv1 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x237 (_ bv4 32))))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x237 (_ bv4 32)) (_ bv2 32))) ?x240)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x237 (_ bv4 32)) (_ bv3 32))) ?x244)))
 (let (($x326 (= (_ bv0 32) ?x253)))
 (let ((?x325 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x325 (_ bv1 32))))
 (let (($x273 (= $x403 $x272)))
 (let (($x309 (=> $x228 $x273)))
 (let (($x47 (= false false)))
 (let (($x255 (= ?x325 (_ bv0 32))))
 (let (($x264 (and $x228 $x255)))
 (let (($x335 (=> $x264 $x47)))
 (let (($x334 (= ?x267 (_ bv0 32))))
 (let (($x284 (= $x255 $x334)))
 (let (($x268 (=> $x228 $x284)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x250 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv4 32))))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x249 (concat ?x361 ?x251))))
 (let (($x308 (= ?x238 ?x238)))
 (let (($x259 (=> $x228 $x308)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4438X))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv2 32))) ?x233)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv3 32))) ?x324)))
 (let (($x331 (= ?x278 ?x278)))
 (let (($x275 (=> $x228 $x331)))
 (let (($x17 (= (_ bv0 32) ?x71)))
 (let ((?x234 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x234 (_ bv1 32))))
 (let (($x236 (= $x228 $x232)))
 (let (($x235 (= ?x234 (_ bv0 32))))
 (let (($x305 (= ?x288 (_ bv0 32))))
 (let (($x360 (= $x305 $x235)))
 (let (($x280 (and (and (and (and (and (= ?x237 ?x71) (=> $x305 $x47)) $x360) $x236) $x275) $x259)))
 (let (($x33 (and (and (and (and $x280 $x268) $x335) $x309) $x279)))
 (let (($x5 (not true)))
 (let (($x100 (or $x5 $x33)))
 (let (($x290 (= true true)))
 (let (($x286 (and $x290 $x100)))
 (let (($x112 (= $x286 true)))
 (let (($x221 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x322 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x105 (= $x322 $x221)))
 (let (($x216 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x217 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x218 (= $x217 $x216)))
 (let (($x56 (and $x218 $x105)))
 (let (($x214 (= $x56 true)))
 (let (($x213 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x211 (= $x303 $x213)))
 (let (($x53 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x68 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x210 (= $x68 $x53)))
 (let (($x215 (and $x210 $x211)))
 (let (($x212 (= $x215 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x101 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x199 (bvuge ?x101 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x36 (= $x108 $x199)))
 (let (($x205 (= ?x101 (_ bv0 32))))
 (let (($x207 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x393 (= $x207 $x205)))
 (let (($x72 (and $x393 $x36)))
 (let (($x208 (= $x72 true)))
 (let ((?x188 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x202 (concat ?x191 (concat ?x183 (concat ?x178 ?x188)))))
 (let (($x203 (= ?x202 input.dst.llvm-%t)))
 (let (($x402 (= $x203 true)))
 (let (($x117 (= $x402 true)))
 (let (($x161 (= (bvand ?x71 (_ bv4294967280 32)) ?x71)))
 (let (($x175 (= (bvand ?x294 (_ bv4294967292 32)) ?x294)))
 (let (($x180 (and $x175 $x161)))
 (let (($x145 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x142 (and true $x145)))
 (let (($x182 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x294 (bvsub ?x294 (_ bv4 32))) (bvult ?x294 (bvsub ?x294 (_ bv4 32))))))
 (let (($x392 (and (and (and $x182 $x142) $x175) $x180)))
 (let (($x176 (= true $x392)))
 (let (($x89 (not $x18)))
 (let (($x190 (=> $x89 $x176)))
 (let (($x197 (= $x190 true)))
 (let (($x198 (= $x197 true)))
 (let (($x357 (= $x198 true)))
 (let (($x195 (= input.dst.llvm-%t ?x202)))
 (let (($x313 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x196 (and $x313 $x195)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x97)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x107 $x69)))
 (let (($x81 (and $x126 $x73)))
 (let (($x104 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x104 $x81)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x46 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x67)))))))
 (let (($x192 (and (and (and $x46 true) $x132) $x196)))
 (let (($x57 (and $x190 $x192)))
 (let (($x149 (not $x17)))
 (let (($x179 (=> $x149 $x176)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x165 (concat ?x150 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x12 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x12 (_ bv3 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem ?x75) (concat ?x152 ?x165))))
 (let (($x21 (= (bvand ?x166 (_ bv4294967280 32)) ?x166)))
 (let (($x155 (= (bvand ?x12 (_ bv4294967292 32)) ?x12)))
 (let (($x316 (and $x155 $x21)))
 (let (($x148 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x12 (bvsub ?x12 (_ bv8 32))) (bvult ?x12 (bvsub ?x12 (_ bv8 32))))))
 (let (($x299 (and (and (and $x148 $x142) $x155) $x316)))
 (let (($x153 (= true $x299)))
 (let (($x170 (=> $x17 $x153)))
 (let (($x8 (and $x170 $x179)))
 (let (($x169 (= true $x8)))
 (let (($x147 (or $x17 $x149)))
 (let (($x164 (and $x89 $x147)))
 (let (($x159 (=> $x164 $x169)))
 (let (($x194 (and $x159 $x57)))
 (let (($x200 (= $x194 true)))
 (let (($x54 (= $x200 true)))
 (let (($x201 (= $x54 true)))
 (let (($x173 (= $x159 true)))
 (let (($x319 (= $x173 true)))
 (let (($x206 (= $x319 true)))
 (let (($x131 (and $x89 $x149)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let (($x314 (= $x313 true)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let (($x95 (and $x46 $x132)))
 (let (($x128 (= $x95 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x295 (and $x134 $x80)))
 (let (($x94 (and $x295 $x80)))
 (let (($x144 (and $x94 $x135)))
 (let (($x204 (and $x144 $x206)))
 (let (($x61 (and $x204 $x201)))
 (let (($x42 (and $x61 $x357)))
 (let (($x318 (and $x42 $x117)))
 (let (($x321 (and $x318 $x208)))
 (let (($x209 (and $x321 $x208)))
 (let (($x222 (and $x209 $x212)))
 (let (($x366 (and $x222 $x214)))
 (let (($x130 (and $x108 $x68)))
 (let (($x40 (and $x130 $x366)))
 (let (($x114 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x223 (and $x114 $x40)))
 (let (($x359 (and $x47 $x223)))
 (let (($x51 (and $x47 $x359)))
 (let (($x60 (bvugt ?x12 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x7 (=> (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x60)))))))
 (let (($x82 (and $x89 $x17)))
 (let (($x76 (=> (and $x82 (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x60)))))))
 (let (($x113 (bvugt ?x294 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x93)))
 (let (($x44 (=> (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x113)))))))
 (let (($x66 (=> (and $x89 (bvule ?x294 (bvsub (bvadd ?x294 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x113)))))))
 (let (($x26 (and $x66 $x76)))
 (let (($x332 (and $x26 $x51)))
 (let (($x312 (=> $x332 $x112)))
 (not $x312)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var4438X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1074003962 32) (_ bv64 8)) (_ bv4194308 32) (_ bv16 8)) (_ bv4194312 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1074003963 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #x00800002
                     #x80)
              #x00800008
              #x06)
       #x00800007
       #xd1))
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00800000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00800000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00800003)
  (define-fun input.ind-%var4438X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4438X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x401 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x354 (concat ?x401 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv8 32))))))
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x343 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x347 (concat ?x343 (concat ?x365 ?x354))))
 (let (($x471 (= ?x347 ?x347)))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x254 (concat ?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x253 (concat ?x244 (concat ?x397 ?x254))))
 (let (($x325 (= (_ bv0 32) ?x253)))
 (let ((?x255 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x255 (_ bv1 32))))
 (let (($x351 (=> $x263 $x471)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x125 (concat ?x103 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x88 (bvadd ?x74 (_ bv3 32))))
 (let ((?x82 (concat (select input.dst.llvm-mem ?x88) (concat ?x64 ?x125))))
 (let ((?x404 (bvadd ?x82 (_ bv4 32))))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv1 32))) (select input.dst.llvm-mem ?x404))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv2 32))) ?x398))))
 (let (($x185 (= (_ bv0 32) ?x43)))
 (let ((?x339 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x431 (bvuge ?x339 (_ bv1 32))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x253 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x253 (_ bv4 32))))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x253 (_ bv4 32)) (_ bv2 32))) ?x33)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x253 (_ bv4 32)) (_ bv3 32))) ?x112)))
 (let (($x123 (= (_ bv0 32) ?x37)))
 (let ((?x127 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x346 (bvuge ?x127 (_ bv1 32))))
 (let (($x399 (= $x346 $x431)))
 (let (($x25 (=> $x263 $x399)))
 (let (($x15 (= false false)))
 (let (($x320 (= ?x127 (_ bv0 32))))
 (let (($x16 (and $x263 $x320)))
 (let (($x345 (=> $x16 $x15)))
 (let (($x429 (= ?x339 (_ bv0 32))))
 (let (($x364 (= $x320 $x429)))
 (let (($x340 (=> $x263 $x364)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x48 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv4 32))))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x274 (concat ?x310 (concat ?x276 ?x265))))
 (let (($x270 (= ?x274 ?x274)))
 (let (($x282 (=> $x263 $x270)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4438X))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv2 32))) ?x267)))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv3 32))) ?x268)))
 (let (($x285 (= ?x335 ?x335)))
 (let (($x403 (=> $x263 $x285)))
 (let (($x39 (= (_ bv0 32) ?x82)))
 (let ((?x262 (ite $x39 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x262 (_ bv1 32))))
 (let (($x256 (= $x263 $x271)))
 (let (($x367 (= ?x262 (_ bv0 32))))
 (let (($x329 (= ?x255 (_ bv0 32))))
 (let (($x257 (= $x329 $x367)))
 (let (($x432 (and (and (and (and (and (= ?x253 ?x82) (=> $x329 $x15)) $x257) $x256) $x403) $x282)))
 (let (($x355 (and (and (and (and $x432 $x340) $x345) $x25) $x351)))
 (let (($x280 (not true)))
 (let (($x356 (or $x280 $x355)))
 (let (($x259 (= true true)))
 (let (($x436 (and $x259 $x356)))
 (let (($x371 (= $x436 true)))
 (let (($x336 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x242 (= $x275 $x336)))
 (let (($x278 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x233 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x331 (= $x233 $x278)))
 (let (($x231 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x370 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x230 (= $x370 $x231)))
 (let (($x246 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x241 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (= $x241 $x246)))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x361 (and (and (and (and $x236 $x333) $x230) $x331) $x242)))
 (let (($x247 (= $x361 true)))
 (let (($x290 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x472 (=> $x290 $x15)))
 (let (($x305 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x226 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x306 (= $x226 $x305)))
 (let (($x229 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x288 (= $x290 $x229)))
 (let (($x235 (and (and $x288 $x306) $x472)))
 (let (($x360 (= $x235 true)))
 (let (($x291 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x245 (= $x226 $x291)))
 (let (($x225 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x394 (= $x290 $x225)))
 (let (($x359 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x304 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x51 (= $x304 $x359)))
 (let (($x40 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x38 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x223 (= $x38 $x40)))
 (let (($x214 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x434 (and (and (and (and $x214 $x223) $x51) $x394) $x245)))
 (let (($x227 (= $x434 true)))
 (let (($x216 (=> $x38 $x15)))
 (let (($x217 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x219 (= $x304 $x217)))
 (let (($x212 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x222 (= $x38 $x212)))
 (let (($x322 (and (and $x222 $x219) $x216)))
 (let (($x221 (= $x322 true)))
 (let (($x199 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x358 (=> $x199 $x15)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x36 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (bvuge ?x36 (_ bv1 32))))
 (let (($x68 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x209 (= $x68 $x321)))
 (let (($x72 (= ?x36 (_ bv0 32))))
 (let (($x208 (= $x199 $x72)))
 (let (($x210 (and (and $x208 $x209) $x358)))
 (let (($x303 (= $x210 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x196 (concat ?x195 (concat ?x181 (concat ?x55 ?x187)))))
 (let (($x207 (= ?x196 input.dst.llvm-%t)))
 (let (($x101 (= $x207 true)))
 (let (($x205 (= $x101 true)))
 (let (($x180 (= (bvand ?x82 (_ bv4294967280 32)) ?x82)))
 (let (($x300 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x392 (and $x300 $x180)))
 (let (($x137 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x162 (and true $x137)))
 (let (($x175 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv4 32))) (bvult ?x74 (bvsub ?x74 (_ bv4 32))))))
 (let (($x8 (and (and (and $x175 $x162) $x300) $x392)))
 (let (($x169 (= true $x8)))
 (let (($x89 (not $x18)))
 (let (($x301 (=> $x89 $x169)))
 (let (($x203 (= $x301 true)))
 (let (($x402 (= $x203 true)))
 (let (($x117 (= $x402 true)))
 (let (($x192 (= input.dst.llvm-%t ?x196)))
 (let (($x80 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x57 (and $x80 $x192)))
 (let ((?x132 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x95 (= (_ bv0 32) ?x132)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x97)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x126 $x73)))
 (let (($x128 (and $x81 $x95)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (and $x78 $x128)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x83)))))))
 (let (($x54 (and (and (and $x69 true) $x30) $x57)))
 (let (($x201 (and $x301 $x54)))
 (let (($x163 (not $x39)))
 (let (($x159 (=> $x163 $x169)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x150 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x92 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x92 (_ bv3 32))))
 (let ((?x298 (concat (select input.dst.llvm-mem ?x124) (concat ?x165 ?x150))))
 (let (($x316 (= (bvand ?x298 (_ bv4294967280 32)) ?x298)))
 (let (($x167 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x299 (and $x167 $x316)))
 (let (($x141 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x92 (bvsub ?x92 (_ bv8 32))) (bvult ?x92 (bvsub ?x92 (_ bv8 32))))))
 (let (($x156 (and (and (and $x141 $x162) $x167) $x299)))
 (let (($x160 (= true $x156)))
 (let (($x177 (=> $x39 $x160)))
 (let (($x173 (and $x177 $x159)))
 (let (($x319 (= true $x173)))
 (let (($x151 (or $x39 $x163)))
 (let (($x317 (and $x89 $x151)))
 (let (($x206 (=> $x317 $x319)))
 (let (($x61 (and $x206 $x201)))
 (let (($x197 (= $x61 true)))
 (let (($x198 (= $x197 true)))
 (let (($x357 (= $x198 true)))
 (let (($x204 (= $x206 true)))
 (let (($x190 (= $x204 true)))
 (let (($x193 (= $x190 true)))
 (let (($x135 (and $x89 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x295 (= $x80 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let (($x134 (and $x69 $x30)))
 (let (($x139 (= $x134 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x131 (and $x313 $x149)))
 (let (($x140 (and $x131 $x149)))
 (let (($x315 (and $x140 $x164)))
 (let (($x302 (and $x315 $x193)))
 (let (($x42 (and $x302 $x357)))
 (let (($x318 (and $x42 $x117)))
 (let (($x393 (and $x318 $x205)))
 (let (($x213 (and $x393 $x303)))
 (let (($x211 (and $x213 $x303)))
 (let (($x105 (and $x211 $x221)))
 (let (($x237 (and $x105 $x227)))
 (let (($x396 (and $x237 $x360)))
 (let (($x250 (and $x396 $x247)))
 (let (($x84 (and $x68 $x38)))
 (let (($x405 (and $x84 $x250)))
 (let (($x108 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x251 (and $x108 $x405)))
 (let (($x292 (and $x15 $x251)))
 (let (($x238 (and $x15 $x292)))
 (let (($x23 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x70 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x23)))))))
 (let (($x12 (and $x89 $x39)))
 (let (($x98 (=> (and $x12 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x110 $x23)))))))
 (let (($x59 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x106 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x59)))))))
 (let (($x129 (=> (and $x89 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x59)))))))
 (let (($x75 (and $x129 $x98)))
 (let (($x308 (and $x75 $x238)))
 (let (($x406 (=> $x308 $x371)))
 (not $x406))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4438X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x401 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x354 (concat ?x401 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv8 32))))))
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x343 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x347 (concat ?x343 (concat ?x365 ?x354))))
 (let (($x471 (= ?x347 ?x347)))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x254 (concat ?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x253 (concat ?x244 (concat ?x397 ?x254))))
 (let (($x325 (= (_ bv0 32) ?x253)))
 (let ((?x255 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x255 (_ bv1 32))))
 (let (($x351 (=> $x263 $x471)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x125 (concat ?x103 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x88 (bvadd ?x74 (_ bv3 32))))
 (let ((?x82 (concat (select input.dst.llvm-mem ?x88) (concat ?x64 ?x125))))
 (let ((?x404 (bvadd ?x82 (_ bv4 32))))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv1 32))) (select input.dst.llvm-mem ?x404))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv2 32))) ?x398))))
 (let (($x185 (= (_ bv0 32) ?x43)))
 (let ((?x339 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x431 (bvuge ?x339 (_ bv1 32))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x253 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x253 (_ bv4 32))))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x253 (_ bv4 32)) (_ bv2 32))) ?x33)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x253 (_ bv4 32)) (_ bv3 32))) ?x112)))
 (let (($x123 (= (_ bv0 32) ?x37)))
 (let ((?x127 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x346 (bvuge ?x127 (_ bv1 32))))
 (let (($x399 (= $x346 $x431)))
 (let (($x25 (=> $x263 $x399)))
 (let (($x15 (= false false)))
 (let (($x320 (= ?x127 (_ bv0 32))))
 (let (($x16 (and $x263 $x320)))
 (let (($x345 (=> $x16 $x15)))
 (let (($x429 (= ?x339 (_ bv0 32))))
 (let (($x364 (= $x320 $x429)))
 (let (($x340 (=> $x263 $x364)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x48 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv4 32))))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x274 (concat ?x310 (concat ?x276 ?x265))))
 (let (($x270 (= ?x274 ?x274)))
 (let (($x282 (=> $x263 $x270)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4438X))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv2 32))) ?x267)))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv3 32))) ?x268)))
 (let (($x285 (= ?x335 ?x335)))
 (let (($x403 (=> $x263 $x285)))
 (let (($x39 (= (_ bv0 32) ?x82)))
 (let ((?x262 (ite $x39 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x262 (_ bv1 32))))
 (let (($x256 (= $x263 $x271)))
 (let (($x367 (= ?x262 (_ bv0 32))))
 (let (($x329 (= ?x255 (_ bv0 32))))
 (let (($x257 (= $x329 $x367)))
 (let (($x432 (and (and (and (and (and (= ?x253 ?x82) (=> $x329 $x15)) $x257) $x256) $x403) $x282)))
 (let (($x355 (and (and (and (and $x432 $x340) $x345) $x25) $x351)))
 (let (($x280 (not true)))
 (let (($x356 (or $x280 $x355)))
 (let (($x259 (= true true)))
 (let (($x436 (and $x259 $x356)))
 (let (($x371 (= $x436 true)))
 (let (($x336 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x275 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x242 (= $x275 $x336)))
 (let (($x278 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x233 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x331 (= $x233 $x278)))
 (let (($x231 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x370 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x230 (= $x370 $x231)))
 (let (($x246 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x241 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (= $x241 $x246)))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x361 (and (and (and (and $x236 $x333) $x230) $x331) $x242)))
 (let (($x247 (= $x361 true)))
 (let (($x290 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x472 (=> $x290 $x15)))
 (let (($x305 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x226 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x306 (= $x226 $x305)))
 (let (($x229 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x288 (= $x290 $x229)))
 (let (($x235 (and (and $x288 $x306) $x472)))
 (let (($x360 (= $x235 true)))
 (let (($x291 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x245 (= $x226 $x291)))
 (let (($x225 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x394 (= $x290 $x225)))
 (let (($x359 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x304 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x51 (= $x304 $x359)))
 (let (($x40 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x38 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x223 (= $x38 $x40)))
 (let (($x214 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x434 (and (and (and (and $x214 $x223) $x51) $x394) $x245)))
 (let (($x227 (= $x434 true)))
 (let (($x216 (=> $x38 $x15)))
 (let (($x217 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x219 (= $x304 $x217)))
 (let (($x212 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x222 (= $x38 $x212)))
 (let (($x322 (and (and $x222 $x219) $x216)))
 (let (($x221 (= $x322 true)))
 (let (($x199 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x358 (=> $x199 $x15)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x36 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (bvuge ?x36 (_ bv1 32))))
 (let (($x68 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x209 (= $x68 $x321)))
 (let (($x72 (= ?x36 (_ bv0 32))))
 (let (($x208 (= $x199 $x72)))
 (let (($x210 (and (and $x208 $x209) $x358)))
 (let (($x303 (= $x210 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x196 (concat ?x195 (concat ?x181 (concat ?x55 ?x187)))))
 (let (($x207 (= ?x196 input.dst.llvm-%t)))
 (let (($x101 (= $x207 true)))
 (let (($x205 (= $x101 true)))
 (let (($x180 (= (bvand ?x82 (_ bv4294967280 32)) ?x82)))
 (let (($x300 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x392 (and $x300 $x180)))
 (let (($x137 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x162 (and true $x137)))
 (let (($x175 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv4 32))) (bvult ?x74 (bvsub ?x74 (_ bv4 32))))))
 (let (($x8 (and (and (and $x175 $x162) $x300) $x392)))
 (let (($x169 (= true $x8)))
 (let (($x89 (not $x18)))
 (let (($x301 (=> $x89 $x169)))
 (let (($x203 (= $x301 true)))
 (let (($x402 (= $x203 true)))
 (let (($x117 (= $x402 true)))
 (let (($x192 (= input.dst.llvm-%t ?x196)))
 (let (($x80 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x57 (and $x80 $x192)))
 (let ((?x132 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x95 (= (_ bv0 32) ?x132)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x97)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x126 $x73)))
 (let (($x128 (and $x81 $x95)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (and $x78 $x128)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x83)))))))
 (let (($x54 (and (and (and $x69 true) $x30) $x57)))
 (let (($x201 (and $x301 $x54)))
 (let (($x163 (not $x39)))
 (let (($x159 (=> $x163 $x169)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x150 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x92 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x92 (_ bv3 32))))
 (let ((?x298 (concat (select input.dst.llvm-mem ?x124) (concat ?x165 ?x150))))
 (let (($x316 (= (bvand ?x298 (_ bv4294967280 32)) ?x298)))
 (let (($x167 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x299 (and $x167 $x316)))
 (let (($x141 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x92 (bvsub ?x92 (_ bv8 32))) (bvult ?x92 (bvsub ?x92 (_ bv8 32))))))
 (let (($x156 (and (and (and $x141 $x162) $x167) $x299)))
 (let (($x160 (= true $x156)))
 (let (($x177 (=> $x39 $x160)))
 (let (($x173 (and $x177 $x159)))
 (let (($x319 (= true $x173)))
 (let (($x151 (or $x39 $x163)))
 (let (($x317 (and $x89 $x151)))
 (let (($x206 (=> $x317 $x319)))
 (let (($x61 (and $x206 $x201)))
 (let (($x197 (= $x61 true)))
 (let (($x198 (= $x197 true)))
 (let (($x357 (= $x198 true)))
 (let (($x204 (= $x206 true)))
 (let (($x190 (= $x204 true)))
 (let (($x193 (= $x190 true)))
 (let (($x135 (and $x89 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x295 (= $x80 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let (($x134 (and $x69 $x30)))
 (let (($x139 (= $x134 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x131 (and $x313 $x149)))
 (let (($x140 (and $x131 $x149)))
 (let (($x315 (and $x140 $x164)))
 (let (($x302 (and $x315 $x193)))
 (let (($x42 (and $x302 $x357)))
 (let (($x318 (and $x42 $x117)))
 (let (($x393 (and $x318 $x205)))
 (let (($x213 (and $x393 $x303)))
 (let (($x211 (and $x213 $x303)))
 (let (($x105 (and $x211 $x221)))
 (let (($x237 (and $x105 $x227)))
 (let (($x396 (and $x237 $x360)))
 (let (($x250 (and $x396 $x247)))
 (let (($x84 (and $x68 $x38)))
 (let (($x405 (and $x84 $x250)))
 (let (($x108 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x251 (and $x108 $x405)))
 (let (($x292 (and $x15 $x251)))
 (let (($x238 (and $x15 $x292)))
 (let (($x23 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x70 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x23)))))))
 (let (($x12 (and $x89 $x39)))
 (let (($x98 (=> (and $x12 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x110 $x23)))))))
 (let (($x59 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x106 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x59)))))))
 (let (($x129 (=> (and $x89 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x59)))))))
 (let (($x75 (and $x129 $x98)))
 (let (($x308 (and $x75 $x238)))
 (let (($x406 (=> $x308 $x371)))
 (not $x406))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var4438X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4288560114 32) (_ bv1 8)) (_ bv65540 32) (_ bv128 8)) (_ bv65541 32) (_ bv35 8)) (_ bv65542 32) (_ bv224 8)) (_ bv65543 32) (_ bv162 8)) (_ bv65544 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv65536 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4288560115 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x3030303c)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x30)
                     #x9b303034
                     #x67)
              #x30303038
              #x35)
       #x30303037
       #x9b))
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x30303030)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x3030303c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x3030303f)
  (define-fun input.ind-%var4438X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4438X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x794 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x792 (concat ?x794 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv8 32))))))
 (let ((?x798 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x803 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x804 (concat ?x803 (concat ?x798 ?x792))))
 (let (($x805 (= ?x804 ?x804)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x334 (concat ?x264 (concat ?x350 ?x271))))
 (let (($x284 (= (_ bv0 32) ?x334)))
 (let ((?x293 (ite $x284 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x293 (_ bv1 32))))
 (let (($x806 (=> $x403 $x805)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x103 (concat ?x122 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x24 (bvadd ?x65 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x24) (concat ?x71 ?x103))))
 (let ((?x775 (bvadd ?x12 (_ bv4 32))))
 (let ((?x778 (concat (select input.dst.llvm-mem (bvadd ?x775 (_ bv1 32))) (select input.dst.llvm-mem ?x775))))
 (let ((?x781 (concat (select input.dst.llvm-mem (bvadd ?x775 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x775 (_ bv2 32))) ?x778))))
 (let (($x779 (= (_ bv0 32) ?x781)))
 (let ((?x782 (ite $x779 (_ bv0 32) (_ bv1 32))))
 (let (($x791 (bvuge ?x782 (_ bv1 32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x334 (_ bv4 32))))))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv4 32)) (_ bv2 32))) ?x327)))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv4 32)) (_ bv3 32))) ?x37)))
 (let (($x404 (= (_ bv0 32) ?x320)))
 (let ((?x6 (ite $x404 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x6 (_ bv1 32))))
 (let (($x799 (= $x168 $x791)))
 (let (($x800 (=> $x403 $x799)))
 (let (($x108 (= false false)))
 (let (($x338 (= ?x6 (_ bv0 32))))
 (let (($x790 (and $x403 $x338)))
 (let (($x816 (=> $x790 $x108)))
 (let (($x785 (= ?x782 (_ bv0 32))))
 (let (($x788 (= $x338 $x785)))
 (let (($x789 (=> $x403 $x788)))
 (let ((?x765 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x773 (concat ?x765 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv4 32))))))
 (let ((?x770 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x768 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x766 (concat ?x768 (concat ?x770 ?x773))))
 (let (($x769 (= ?x766 ?x766)))
 (let (($x772 (=> $x403 $x769)))
 (let ((?x761 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4438X))))
 (let ((?x757 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv2 32))) ?x761)))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv3 32))) ?x757)))
 (let (($x77 (= ?x759 ?x759)))
 (let (($x762 (=> $x403 $x77)))
 (let (($x96 (= (_ bv0 32) ?x12)))
 (let ((?x750 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x812 (bvuge ?x750 (_ bv1 32))))
 (let (($x753 (= $x403 $x812)))
 (let (($x751 (= ?x750 (_ bv0 32))))
 (let (($x266 (= ?x293 (_ bv0 32))))
 (let (($x752 (= $x266 $x751)))
 (let (($x818 (and (and (and (and (and (= ?x334 ?x12) (=> $x266 $x108)) $x752) $x753) $x762) $x772)))
 (let (($x822 (and (and (and (and $x818 $x789) $x816) $x800) $x806)))
 (let (($x748 (not true)))
 (let (($x823 (or $x748 $x822)))
 (let (($x810 (= true true)))
 (let (($x32 (and $x810 $x823)))
 (let (($x85 (= $x32 true)))
 (let (($x692 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x483 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x712 (= $x483 $x692)))
 (let (($x325 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x734 (=> $x325 $x712)))
 (let (($x427 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x741 (and $x325 $x427)))
 (let (($x691 (=> $x741 $x108)))
 (let (($x689 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x733 (= $x427 $x689)))
 (let (($x690 (=> $x325 $x733)))
 (let (($x687 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x468 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x732 (= $x468 $x687)))
 (let (($x711 (=> $x325 $x732)))
 (let (($x444 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x710 (and $x325 $x444)))
 (let (($x686 (=> $x710 $x108)))
 (let (($x684 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x740 (= $x444 $x684)))
 (let (($x685 (=> $x325 $x740)))
 (let (($x709 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x683 (=> $x325 $x709)))
 (let (($x292 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x681 (=> $x292 $x108)))
 (let (($x680 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x416 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x730 (= $x416 $x680)))
 (let (($x361 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x708 (=> $x361 $x730)))
 (let (($x413 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x729 (and $x361 $x413)))
 (let (($x679 (=> $x729 $x108)))
 (let (($x677 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x678 (= $x413 $x677)))
 (let (($x707 (=> $x361 $x678)))
 (let (($x728 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x391 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x675 (= $x391 $x728)))
 (let (($x706 (=> $x361 $x675)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x674 (and $x361 $x459)))
 (let (($x739 (=> $x674 $x108)))
 (let (($x727 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x672 (= $x459 $x727)))
 (let (($x673 (=> $x361 $x672)))
 (let (($x726 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x671 (=> $x361 $x726)))
 (let (($x328 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x704 (=> $x328 $x108)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x669 (= $x325 $x703)))
 (let (($x668 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x725 (= $x292 $x668)))
 (let (($x34 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x111 (= $x361 $x34)))
 (let (($x702 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x724 (= $x328 $x702)))
 (let (($x667 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x696 (and (and (and (and (and (and $x667 $x724) $x111) $x725) $x669) $x704) $x671)))
 (let (($x699 (and (and (and (and (and (and $x696 $x673) $x739) $x706) $x707) $x679) $x708)))
 (let (($x717 (and (and (and (and (and (and $x699 $x681) $x683) $x685) $x686) $x711) $x690)))
 (let (($x744 (and (and $x717 $x691) $x734)))
 (let (($x719 (= $x744 true)))
 (let (($x603 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x617 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x643 (= $x617 $x603)))
 (let (($x343 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x652 (and $x285 $x343)))
 (let (($x653 (=> $x652 $x643)))
 (let (($x642 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x631 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x601 (= $x631 $x642)))
 (let (($x602 (=> $x652 $x601)))
 (let (($x598 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x597 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x641 (= $x597 $x598)))
 (let (($x658 (=> $x652 $x641)))
 (let (($x648 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x640 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x596 (= $x640 $x648)))
 (let (($x630 (=> $x652 $x596)))
 (let (($x657 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x616 (=> $x652 $x657)))
 (let (($x591 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x615 (= $x343 $x591)))
 (let (($x639 (=> $x285 $x615)))
 (let (($x43 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x621 (and $x285 $x43)))
 (let (($x529 (=> $x621 $x108)))
 (let (($x629 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x590 (= $x43 $x629)))
 (let (($x638 (=> $x285 $x590)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x628 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x628 $x588)))
 (let (($x121 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x655 (and $x285 $x121)))
 (let (($x589 (=> $x655 $x637)))
 (let (($x656 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x636 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x587 (= $x636 $x656)))
 (let (($x627 (=> $x655 $x587)))
 (let (($x584 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x635 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x647 (= $x635 $x584)))
 (let (($x626 (=> $x655 $x647)))
 (let (($x651 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x613 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x582 (= $x613 $x651)))
 (let (($x583 (=> $x655 $x582)))
 (let (($x578 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x579 (=> $x655 $x578)))
 (let (($x556 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x557 (= $x121 $x556)))
 (let (($x625 (=> $x285 $x557)))
 (let (($x287 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x542 (and $x285 $x287)))
 (let (($x527 (=> $x542 $x108)))
 (let (($x555 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x612 (= $x287 $x555)))
 (let (($x646 (=> $x285 $x612)))
 (let (($x575 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x624 (=> $x285 $x575)))
 (let (($x262 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x526 (=> $x262 $x108)))
 (let (($x552 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x553 (= $x285 $x552)))
 (let (($x611 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x551 (= $x262 $x611)))
 (let (($x632 (and (and (and (and (and (and $x551 $x553) $x526) $x624) $x646) $x527) $x625)))
 (let (($x645 (and (and (and (and (and (and $x632 $x579) $x583) $x626) $x627) $x589) $x638)))
 (let (($x664 (and (and (and (and (and (and $x645 $x529) $x639) $x616) $x630) $x658) $x602)))
 (let (($x665 (and $x664 $x653)))
 (let (($x666 (= $x665 true)))
 (let (($x508 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x622 (= $x343 $x508)))
 (let (($x569 (=> $x285 $x622)))
 (let (($x564 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x506 (= $x43 $x564)))
 (let (($x507 (=> $x285 $x506)))
 (let (($x504 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x505 (= $x121 $x504)))
 (let (($x543 (=> $x285 $x505)))
 (let (($x502 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x541 (= $x287 $x502)))
 (let (($x503 (=> $x285 $x541)))
 (let (($x540 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x563 (=> $x285 $x540)))
 (let (($x498 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x499 (= $x325 $x498)))
 (let (($x245 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x500 (=> $x245 $x499)))
 (let (($x465 (and $x245 $x292)))
 (let (($x461 (=> $x465 $x108)))
 (let (($x562 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x568 (= $x292 $x562)))
 (let (($x539 (=> $x245 $x568)))
 (let (($x525 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x572 (= $x361 $x525)))
 (let (($x538 (=> $x245 $x572)))
 (let (($x474 (and $x245 $x328)))
 (let (($x516 (=> $x474 $x108)))
 (let (($x495 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x328 $x495)))
 (let (($x497 (=> $x245 $x496)))
 (let (($x524 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x494 (=> $x245 $x524)))
 (let (($x52 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x473 (=> $x52 $x108)))
 (let (($x537 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x619 (= $x285 $x537)))
 (let (($x492 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x493 (= $x262 $x492)))
 (let (($x491 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x523 (= $x245 $x491)))
 (let (($x535 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x522 (= $x52 $x535)))
 (let (($x558 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x530 (and (and (and (and (and (and $x558 $x522) $x523) $x493) $x619) $x473) $x494)))
 (let (($x532 (and (and (and (and (and (and $x530 $x497) $x516) $x538) $x539) $x461) $x500)))
 (let (($x574 (and (and (and (and (and (and $x532 $x526) $x563) $x503) $x527) $x543) $x507)))
 (let (($x623 (and (and $x574 $x529) $x569)))
 (let (($x549 (= $x623 true)))
 (let (($x448 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x449 (= $x483 $x448)))
 (let (($x422 (and $x245 $x325)))
 (let (($x478 (=> $x422 $x449)))
 (let (($x469 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x428 (= $x427 $x469)))
 (let (($x447 (=> $x422 $x428)))
 (let (($x425 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x477 (= $x468 $x425)))
 (let (($x519 (=> $x422 $x477)))
 (let (($x518 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x467 (= $x444 $x518)))
 (let (($x445 (=> $x422 $x467)))
 (let (($x466 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x463 (=> $x422 $x466)))
 (let (($x420 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x476 (= $x325 $x420)))
 (let (($x421 (=> $x245 $x476)))
 (let (($x418 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x419 (= $x292 $x418)))
 (let (($x442 (=> $x245 $x419)))
 (let (($x417 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x464 (= $x416 $x417)))
 (let (($x481 (and $x245 $x361)))
 (let (($x475 (=> $x481 $x464)))
 (let (($x517 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x441 (= $x413 $x517)))
 (let (($x415 (=> $x481 $x441)))
 (let (($x410 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x460 (= $x391 $x410)))
 (let (($x411 (=> $x481 $x460)))
 (let (($x389 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x390 (= $x459 $x389)))
 (let (($x440 (=> $x481 $x390)))
 (let (($x387 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x439 (=> $x481 $x387)))
 (let (($x382 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (= $x361 $x382)))
 (let (($x384 (=> $x245 $x383)))
 (let (($x381 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x566 (= $x328 $x381)))
 (let (($x408 (=> $x245 $x566)))
 (let (($x378 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x379 (=> $x245 $x378)))
 (let (($x377 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x407 (= $x245 $x377)))
 (let (($x376 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x457 (= $x52 $x376)))
 (let (($x513 (and (and (and (and (and (and $x457 $x407) $x473) $x379) $x408) $x516) $x384)))
 (let (($x455 (and (and (and (and (and (and $x513 $x439) $x440) $x411) $x415) $x475) $x442)))
 (let (($x489 (and (and (and (and (and (and $x455 $x461) $x421) $x463) $x445) $x519) $x447)))
 (let (($x521 (and $x489 $x478)))
 (let (($x567 (= $x521 true)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x334 (_ bv8 32))))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv8 32)) (_ bv2 32))) ?x340)))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv8 32)) (_ bv3 32))) ?x345)))
 (let (($x399 (= (_ bv0 32) ?x431)))
 (let ((?x25 (ite $x399 (_ bv0 32) (_ bv1 32))))
 (let (($x400 (bvuge ?x25 (_ bv1 32))))
 (let (($x365 (= $x343 $x400)))
 (let (($x84 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x362 (and $x84 $x285)))
 (let (($x430 (=> $x362 $x365)))
 (let (($x433 (= ?x25 (_ bv0 32))))
 (let (($x341 (= $x43 $x433)))
 (let (($x470 (=> $x362 $x341)))
 (let (($x337 (= $x121 $x168)))
 (let (($x398 (=> $x362 $x337)))
 (let (($x31 (= $x287 $x338)))
 (let (($x90 (=> $x362 $x31)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv1 32))) (select input.dst.llvm-mem ?x334))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv2 32))) ?x48))))
 (let (($x432 (= input.spec-%var-t-0.2.2.2.0 ?x282)))
 (let (($x283 (=> $x362 $x432)))
 (let (($x348 (= $x285 $x403)))
 (let (($x272 (=> $x84 $x348)))
 (let (($x268 (and $x84 $x262)))
 (let (($x335 (=> $x268 $x108)))
 (let (($x258 (= $x262 $x266)))
 (let (($x267 (=> $x84 $x258)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x223 (concat ?x40 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x332 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x290 (concat ?x332 (concat ?x359 ?x223))))
 (let ((?x238 (bvadd ?x290 (_ bv8 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x395))))
 (let (($x261 (= (_ bv0 32) ?x252)))
 (let ((?x254 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x254 (_ bv1 32))))
 (let (($x329 (= $x325 $x255)))
 (let (($x307 (and $x84 $x245)))
 (let (($x435 (=> $x307 $x329)))
 (let (($x260 (= ?x254 (_ bv0 32))))
 (let (($x253 (= $x292 $x260)))
 (let (($x326 (=> $x307 $x253)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x290 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x290 (_ bv4 32))))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x290 (_ bv4 32)) (_ bv2 32))) ?x231)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x290 (_ bv4 32)) (_ bv3 32))) ?x243)))
 (let (($x331 (= (_ bv0 32) ?x278)))
 (let ((?x289 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x289 (_ bv1 32))))
 (let (($x250 (= $x361 $x247)))
 (let (($x405 (=> $x307 $x250)))
 (let (($x275 (= ?x289 (_ bv0 32))))
 (let (($x336 (= $x328 $x275)))
 (let (($x242 (=> $x307 $x336)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv1 32))) (select input.dst.llvm-mem ?x290))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv2 32))) ?x234))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.0 ?x232)))
 (let (($x363 (=> $x307 $x236)))
 (let (($x5 (= (_ bv0 32) ?x290)))
 (let ((?x225 (ite $x5 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x225 (_ bv1 32))))
 (let (($x227 (= $x245 $x434)))
 (let (($x237 (=> $x84 $x227)))
 (let (($x50 (and $x84 $x52)))
 (let (($x291 (=> $x50 $x108)))
 (let (($x394 (= ?x225 (_ bv0 32))))
 (let (($x323 (= $x52 $x394)))
 (let (($x226 (=> $x84 $x323)))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x222)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x219)))
 (let (($x221 (= input.spec-%var-t-0.2.0 ?x322)))
 (let (($x105 (=> $x84 $x221)))
 (let (($x209 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x213 (=> $x209 $x108)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x53 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x53 (_ bv1 32))))
 (let (($x303 (= $x84 $x210)))
 (let (($x15 (= ?x53 (_ bv0 32))))
 (let (($x358 (= $x209 $x15)))
 (let (($x471 (and (and (and (and (and (and $x358 $x303) $x213) $x105) $x226) $x291) $x237)))
 (let (($x406 (and (and (and (and (and (and $x471 $x363) $x242) $x405) $x326) $x435) $x267)))
 (let (($x373 (and (and (and (and (and (and $x406 $x335) $x272) $x283) $x90) $x398) $x470)))
 (let (($x437 (and $x373 $x430)))
 (let (($x374 (= $x437 true)))
 (let ((?x181 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x54 (concat ?x57 (concat ?x189 (concat ?x55 ?x181)))))
 (let (($x36 (= ?x54 input.dst.llvm-%t)))
 (let (($x72 (= $x36 true)))
 (let (($x208 (= $x72 true)))
 (let (($x8 (= (bvand ?x12 (_ bv4294967280 32)) ?x12)))
 (let (($x180 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x169 (and $x180 $x8)))
 (let (($x157 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x167 (and true $x157)))
 (let (($x179 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv4 32))) (bvult ?x65 (bvsub ?x65 (_ bv4 32))))))
 (let (($x319 (and (and (and $x179 $x167) $x180) $x169)))
 (let (($x206 (= true $x319)))
 (let (($x89 (not $x18)))
 (let (($x195 (=> $x89 $x206)))
 (let (($x101 (= $x195 true)))
 (let (($x205 (= $x101 true)))
 (let (($x393 (= $x205 true)))
 (let (($x201 (= input.dst.llvm-%t ?x54)))
 (let (($x131 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x61 (and $x131 $x201)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x134)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x95)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x132 $x128)))
 (let (($x133 (and $x30 $x139)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x313 (and $x83 $x133)))
 (let (($x69 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x69)))))))
 (let (($x357 (and (and (and $x81 true) $x313) $x61)))
 (let (($x42 (and $x195 $x357)))
 (let (($x164 (not $x96)))
 (let (($x204 (=> $x164 $x206)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x143 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x28 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x60 (_ bv3 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem ?x45) (concat ?x28 ?x143))))
 (let (($x156 (= (bvand ?x316 (_ bv4294967280 32)) ?x316)))
 (let (($x146 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x160 (and $x146 $x156)))
 (let (($x297 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv8 32))) (bvult ?x60 (bvsub ?x60 (_ bv8 32))))))
 (let (($x49 (and (and (and $x297 $x167) $x146) $x160)))
 (let (($x186 (= true $x49)))
 (let (($x174 (=> $x96 $x186)))
 (let (($x190 (and $x174 $x204)))
 (let (($x193 (= true $x190)))
 (let (($x138 (or $x96 $x164)))
 (let (($x296 (and $x89 $x138)))
 (let (($x302 (=> $x296 $x193)))
 (let (($x203 (and $x302 $x42)))
 (let (($x402 (= $x203 true)))
 (let (($x117 (= $x402 true)))
 (let (($x318 (= $x117 true)))
 (let (($x301 (= $x302 true)))
 (let (($x194 (= $x301 true)))
 (let (($x200 (= $x194 true)))
 (let (($x315 (and $x89 $x164)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x148 (= $x317 true)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let (($x314 (and $x81 $x313)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let (($x295 (= $x80 true)))
 (let (($x144 (and $x295 $x135)))
 (let (($x147 (and $x144 $x135)))
 (let (($x154 (and $x147 $x148)))
 (let (($x202 (and $x154 $x200)))
 (let (($x207 (and $x202 $x318)))
 (let (($x199 (and $x207 $x393)))
 (let (($x321 (and $x199 $x208)))
 (let (($x375 (and $x321 $x374)))
 (let (($x438 (and $x375 $x374)))
 (let (($x490 (and $x438 $x567)))
 (let (($x550 (and $x490 $x549)))
 (let (($x723 (and $x550 $x666)))
 (let (($x720 (and $x723 $x719)))
 (let (($x745 (and $x50 $x720)))
 (let (($x130 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x721 (and $x130 $x745)))
 (let (($x722 (and $x108 $x721)))
 (let (($x746 (and $x108 $x722)))
 (let (($x76 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x20 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x7 $x76)))))))
 (let (($x92 (and $x89 $x96)))
 (let (($x47 (=> (and $x92 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x7 $x76)))))))
 (let (($x66 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x62 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x66)))))))
 (let (($x93 (=> (and $x89 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x66)))))))
 (let (($x124 (and $x93 $x47)))
 (let (($x747 (and $x124 $x746)))
 (let (($x41 (=> $x747 $x85)))
 (not $x
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4438X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x794 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x792 (concat ?x794 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv8 32))))))
 (let ((?x798 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x803 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x804 (concat ?x803 (concat ?x798 ?x792))))
 (let (($x805 (= ?x804 ?x804)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x334 (concat ?x264 (concat ?x350 ?x271))))
 (let (($x284 (= (_ bv0 32) ?x334)))
 (let ((?x293 (ite $x284 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x293 (_ bv1 32))))
 (let (($x806 (=> $x403 $x805)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x103 (concat ?x122 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x24 (bvadd ?x65 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x24) (concat ?x71 ?x103))))
 (let ((?x775 (bvadd ?x12 (_ bv4 32))))
 (let ((?x778 (concat (select input.dst.llvm-mem (bvadd ?x775 (_ bv1 32))) (select input.dst.llvm-mem ?x775))))
 (let ((?x781 (concat (select input.dst.llvm-mem (bvadd ?x775 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x775 (_ bv2 32))) ?x778))))
 (let (($x779 (= (_ bv0 32) ?x781)))
 (let ((?x782 (ite $x779 (_ bv0 32) (_ bv1 32))))
 (let (($x791 (bvuge ?x782 (_ bv1 32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x334 (_ bv4 32))))))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv4 32)) (_ bv2 32))) ?x327)))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv4 32)) (_ bv3 32))) ?x37)))
 (let (($x404 (= (_ bv0 32) ?x320)))
 (let ((?x6 (ite $x404 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x6 (_ bv1 32))))
 (let (($x799 (= $x168 $x791)))
 (let (($x800 (=> $x403 $x799)))
 (let (($x108 (= false false)))
 (let (($x338 (= ?x6 (_ bv0 32))))
 (let (($x790 (and $x403 $x338)))
 (let (($x816 (=> $x790 $x108)))
 (let (($x785 (= ?x782 (_ bv0 32))))
 (let (($x788 (= $x338 $x785)))
 (let (($x789 (=> $x403 $x788)))
 (let ((?x765 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x773 (concat ?x765 (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv4 32))))))
 (let ((?x770 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x768 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4438X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x766 (concat ?x768 (concat ?x770 ?x773))))
 (let (($x769 (= ?x766 ?x766)))
 (let (($x772 (=> $x403 $x769)))
 (let ((?x761 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4438X))))
 (let ((?x757 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv2 32))) ?x761)))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4438X (_ bv3 32))) ?x757)))
 (let (($x77 (= ?x759 ?x759)))
 (let (($x762 (=> $x403 $x77)))
 (let (($x96 (= (_ bv0 32) ?x12)))
 (let ((?x750 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x812 (bvuge ?x750 (_ bv1 32))))
 (let (($x753 (= $x403 $x812)))
 (let (($x751 (= ?x750 (_ bv0 32))))
 (let (($x266 (= ?x293 (_ bv0 32))))
 (let (($x752 (= $x266 $x751)))
 (let (($x818 (and (and (and (and (and (= ?x334 ?x12) (=> $x266 $x108)) $x752) $x753) $x762) $x772)))
 (let (($x822 (and (and (and (and $x818 $x789) $x816) $x800) $x806)))
 (let (($x748 (not true)))
 (let (($x823 (or $x748 $x822)))
 (let (($x810 (= true true)))
 (let (($x32 (and $x810 $x823)))
 (let (($x85 (= $x32 true)))
 (let (($x692 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x483 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x712 (= $x483 $x692)))
 (let (($x325 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x734 (=> $x325 $x712)))
 (let (($x427 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x741 (and $x325 $x427)))
 (let (($x691 (=> $x741 $x108)))
 (let (($x689 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x733 (= $x427 $x689)))
 (let (($x690 (=> $x325 $x733)))
 (let (($x687 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x468 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x732 (= $x468 $x687)))
 (let (($x711 (=> $x325 $x732)))
 (let (($x444 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x710 (and $x325 $x444)))
 (let (($x686 (=> $x710 $x108)))
 (let (($x684 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x740 (= $x444 $x684)))
 (let (($x685 (=> $x325 $x740)))
 (let (($x709 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x683 (=> $x325 $x709)))
 (let (($x292 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x681 (=> $x292 $x108)))
 (let (($x680 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x416 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x730 (= $x416 $x680)))
 (let (($x361 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x708 (=> $x361 $x730)))
 (let (($x413 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x729 (and $x361 $x413)))
 (let (($x679 (=> $x729 $x108)))
 (let (($x677 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x678 (= $x413 $x677)))
 (let (($x707 (=> $x361 $x678)))
 (let (($x728 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x391 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x675 (= $x391 $x728)))
 (let (($x706 (=> $x361 $x675)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x674 (and $x361 $x459)))
 (let (($x739 (=> $x674 $x108)))
 (let (($x727 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x672 (= $x459 $x727)))
 (let (($x673 (=> $x361 $x672)))
 (let (($x726 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x671 (=> $x361 $x726)))
 (let (($x328 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x704 (=> $x328 $x108)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x669 (= $x325 $x703)))
 (let (($x668 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x725 (= $x292 $x668)))
 (let (($x34 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x111 (= $x361 $x34)))
 (let (($x702 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x724 (= $x328 $x702)))
 (let (($x667 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x696 (and (and (and (and (and (and $x667 $x724) $x111) $x725) $x669) $x704) $x671)))
 (let (($x699 (and (and (and (and (and (and $x696 $x673) $x739) $x706) $x707) $x679) $x708)))
 (let (($x717 (and (and (and (and (and (and $x699 $x681) $x683) $x685) $x686) $x711) $x690)))
 (let (($x744 (and (and $x717 $x691) $x734)))
 (let (($x719 (= $x744 true)))
 (let (($x603 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x617 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x643 (= $x617 $x603)))
 (let (($x343 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x652 (and $x285 $x343)))
 (let (($x653 (=> $x652 $x643)))
 (let (($x642 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x631 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x601 (= $x631 $x642)))
 (let (($x602 (=> $x652 $x601)))
 (let (($x598 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x597 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x641 (= $x597 $x598)))
 (let (($x658 (=> $x652 $x641)))
 (let (($x648 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x640 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x596 (= $x640 $x648)))
 (let (($x630 (=> $x652 $x596)))
 (let (($x657 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x616 (=> $x652 $x657)))
 (let (($x591 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x615 (= $x343 $x591)))
 (let (($x639 (=> $x285 $x615)))
 (let (($x43 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x621 (and $x285 $x43)))
 (let (($x529 (=> $x621 $x108)))
 (let (($x629 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x590 (= $x43 $x629)))
 (let (($x638 (=> $x285 $x590)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x628 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x628 $x588)))
 (let (($x121 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x655 (and $x285 $x121)))
 (let (($x589 (=> $x655 $x637)))
 (let (($x656 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x636 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x587 (= $x636 $x656)))
 (let (($x627 (=> $x655 $x587)))
 (let (($x584 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x635 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x647 (= $x635 $x584)))
 (let (($x626 (=> $x655 $x647)))
 (let (($x651 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x613 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x582 (= $x613 $x651)))
 (let (($x583 (=> $x655 $x582)))
 (let (($x578 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x579 (=> $x655 $x578)))
 (let (($x556 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x557 (= $x121 $x556)))
 (let (($x625 (=> $x285 $x557)))
 (let (($x287 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x542 (and $x285 $x287)))
 (let (($x527 (=> $x542 $x108)))
 (let (($x555 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x612 (= $x287 $x555)))
 (let (($x646 (=> $x285 $x612)))
 (let (($x575 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x624 (=> $x285 $x575)))
 (let (($x262 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x526 (=> $x262 $x108)))
 (let (($x552 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x553 (= $x285 $x552)))
 (let (($x611 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x551 (= $x262 $x611)))
 (let (($x632 (and (and (and (and (and (and $x551 $x553) $x526) $x624) $x646) $x527) $x625)))
 (let (($x645 (and (and (and (and (and (and $x632 $x579) $x583) $x626) $x627) $x589) $x638)))
 (let (($x664 (and (and (and (and (and (and $x645 $x529) $x639) $x616) $x630) $x658) $x602)))
 (let (($x665 (and $x664 $x653)))
 (let (($x666 (= $x665 true)))
 (let (($x508 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x622 (= $x343 $x508)))
 (let (($x569 (=> $x285 $x622)))
 (let (($x564 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x506 (= $x43 $x564)))
 (let (($x507 (=> $x285 $x506)))
 (let (($x504 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x505 (= $x121 $x504)))
 (let (($x543 (=> $x285 $x505)))
 (let (($x502 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x541 (= $x287 $x502)))
 (let (($x503 (=> $x285 $x541)))
 (let (($x540 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x563 (=> $x285 $x540)))
 (let (($x498 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x499 (= $x325 $x498)))
 (let (($x245 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x500 (=> $x245 $x499)))
 (let (($x465 (and $x245 $x292)))
 (let (($x461 (=> $x465 $x108)))
 (let (($x562 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x568 (= $x292 $x562)))
 (let (($x539 (=> $x245 $x568)))
 (let (($x525 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x572 (= $x361 $x525)))
 (let (($x538 (=> $x245 $x572)))
 (let (($x474 (and $x245 $x328)))
 (let (($x516 (=> $x474 $x108)))
 (let (($x495 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x328 $x495)))
 (let (($x497 (=> $x245 $x496)))
 (let (($x524 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x494 (=> $x245 $x524)))
 (let (($x52 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x473 (=> $x52 $x108)))
 (let (($x537 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x619 (= $x285 $x537)))
 (let (($x492 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x493 (= $x262 $x492)))
 (let (($x491 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x523 (= $x245 $x491)))
 (let (($x535 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x522 (= $x52 $x535)))
 (let (($x558 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x530 (and (and (and (and (and (and $x558 $x522) $x523) $x493) $x619) $x473) $x494)))
 (let (($x532 (and (and (and (and (and (and $x530 $x497) $x516) $x538) $x539) $x461) $x500)))
 (let (($x574 (and (and (and (and (and (and $x532 $x526) $x563) $x503) $x527) $x543) $x507)))
 (let (($x623 (and (and $x574 $x529) $x569)))
 (let (($x549 (= $x623 true)))
 (let (($x448 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x449 (= $x483 $x448)))
 (let (($x422 (and $x245 $x325)))
 (let (($x478 (=> $x422 $x449)))
 (let (($x469 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x428 (= $x427 $x469)))
 (let (($x447 (=> $x422 $x428)))
 (let (($x425 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x477 (= $x468 $x425)))
 (let (($x519 (=> $x422 $x477)))
 (let (($x518 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x467 (= $x444 $x518)))
 (let (($x445 (=> $x422 $x467)))
 (let (($x466 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x463 (=> $x422 $x466)))
 (let (($x420 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x476 (= $x325 $x420)))
 (let (($x421 (=> $x245 $x476)))
 (let (($x418 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x419 (= $x292 $x418)))
 (let (($x442 (=> $x245 $x419)))
 (let (($x417 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x464 (= $x416 $x417)))
 (let (($x481 (and $x245 $x361)))
 (let (($x475 (=> $x481 $x464)))
 (let (($x517 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x441 (= $x413 $x517)))
 (let (($x415 (=> $x481 $x441)))
 (let (($x410 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x460 (= $x391 $x410)))
 (let (($x411 (=> $x481 $x460)))
 (let (($x389 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x390 (= $x459 $x389)))
 (let (($x440 (=> $x481 $x390)))
 (let (($x387 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x439 (=> $x481 $x387)))
 (let (($x382 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x383 (= $x361 $x382)))
 (let (($x384 (=> $x245 $x383)))
 (let (($x381 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x566 (= $x328 $x381)))
 (let (($x408 (=> $x245 $x566)))
 (let (($x378 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x379 (=> $x245 $x378)))
 (let (($x377 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x407 (= $x245 $x377)))
 (let (($x376 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x457 (= $x52 $x376)))
 (let (($x513 (and (and (and (and (and (and $x457 $x407) $x473) $x379) $x408) $x516) $x384)))
 (let (($x455 (and (and (and (and (and (and $x513 $x439) $x440) $x411) $x415) $x475) $x442)))
 (let (($x489 (and (and (and (and (and (and $x455 $x461) $x421) $x463) $x445) $x519) $x447)))
 (let (($x521 (and $x489 $x478)))
 (let (($x567 (= $x521 true)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x334 (_ bv8 32))))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv8 32)) (_ bv2 32))) ?x340)))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x334 (_ bv8 32)) (_ bv3 32))) ?x345)))
 (let (($x399 (= (_ bv0 32) ?x431)))
 (let ((?x25 (ite $x399 (_ bv0 32) (_ bv1 32))))
 (let (($x400 (bvuge ?x25 (_ bv1 32))))
 (let (($x365 (= $x343 $x400)))
 (let (($x84 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x362 (and $x84 $x285)))
 (let (($x430 (=> $x362 $x365)))
 (let (($x433 (= ?x25 (_ bv0 32))))
 (let (($x341 (= $x43 $x433)))
 (let (($x470 (=> $x362 $x341)))
 (let (($x337 (= $x121 $x168)))
 (let (($x398 (=> $x362 $x337)))
 (let (($x31 (= $x287 $x338)))
 (let (($x90 (=> $x362 $x31)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv1 32))) (select input.dst.llvm-mem ?x334))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv2 32))) ?x48))))
 (let (($x432 (= input.spec-%var-t-0.2.2.2.0 ?x282)))
 (let (($x283 (=> $x362 $x432)))
 (let (($x348 (= $x285 $x403)))
 (let (($x272 (=> $x84 $x348)))
 (let (($x268 (and $x84 $x262)))
 (let (($x335 (=> $x268 $x108)))
 (let (($x258 (= $x262 $x266)))
 (let (($x267 (=> $x84 $x258)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x223 (concat ?x40 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x332 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x290 (concat ?x332 (concat ?x359 ?x223))))
 (let ((?x238 (bvadd ?x290 (_ bv8 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x395))))
 (let (($x261 (= (_ bv0 32) ?x252)))
 (let ((?x254 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x254 (_ bv1 32))))
 (let (($x329 (= $x325 $x255)))
 (let (($x307 (and $x84 $x245)))
 (let (($x435 (=> $x307 $x329)))
 (let (($x260 (= ?x254 (_ bv0 32))))
 (let (($x253 (= $x292 $x260)))
 (let (($x326 (=> $x307 $x253)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x290 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x290 (_ bv4 32))))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x290 (_ bv4 32)) (_ bv2 32))) ?x231)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x290 (_ bv4 32)) (_ bv3 32))) ?x243)))
 (let (($x331 (= (_ bv0 32) ?x278)))
 (let ((?x289 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x289 (_ bv1 32))))
 (let (($x250 (= $x361 $x247)))
 (let (($x405 (=> $x307 $x250)))
 (let (($x275 (= ?x289 (_ bv0 32))))
 (let (($x336 (= $x328 $x275)))
 (let (($x242 (=> $x307 $x336)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv1 32))) (select input.dst.llvm-mem ?x290))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x290 (_ bv2 32))) ?x234))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.0 ?x232)))
 (let (($x363 (=> $x307 $x236)))
 (let (($x5 (= (_ bv0 32) ?x290)))
 (let ((?x225 (ite $x5 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x225 (_ bv1 32))))
 (let (($x227 (= $x245 $x434)))
 (let (($x237 (=> $x84 $x227)))
 (let (($x50 (and $x84 $x52)))
 (let (($x291 (=> $x50 $x108)))
 (let (($x394 (= ?x225 (_ bv0 32))))
 (let (($x323 (= $x52 $x394)))
 (let (($x226 (=> $x84 $x323)))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x222)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x219)))
 (let (($x221 (= input.spec-%var-t-0.2.0 ?x322)))
 (let (($x105 (=> $x84 $x221)))
 (let (($x209 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x213 (=> $x209 $x108)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x53 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x53 (_ bv1 32))))
 (let (($x303 (= $x84 $x210)))
 (let (($x15 (= ?x53 (_ bv0 32))))
 (let (($x358 (= $x209 $x15)))
 (let (($x471 (and (and (and (and (and (and $x358 $x303) $x213) $x105) $x226) $x291) $x237)))
 (let (($x406 (and (and (and (and (and (and $x471 $x363) $x242) $x405) $x326) $x435) $x267)))
 (let (($x373 (and (and (and (and (and (and $x406 $x335) $x272) $x283) $x90) $x398) $x470)))
 (let (($x437 (and $x373 $x430)))
 (let (($x374 (= $x437 true)))
 (let ((?x181 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x54 (concat ?x57 (concat ?x189 (concat ?x55 ?x181)))))
 (let (($x36 (= ?x54 input.dst.llvm-%t)))
 (let (($x72 (= $x36 true)))
 (let (($x208 (= $x72 true)))
 (let (($x8 (= (bvand ?x12 (_ bv4294967280 32)) ?x12)))
 (let (($x180 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x169 (and $x180 $x8)))
 (let (($x157 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x167 (and true $x157)))
 (let (($x179 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv4 32))) (bvult ?x65 (bvsub ?x65 (_ bv4 32))))))
 (let (($x319 (and (and (and $x179 $x167) $x180) $x169)))
 (let (($x206 (= true $x319)))
 (let (($x89 (not $x18)))
 (let (($x195 (=> $x89 $x206)))
 (let (($x101 (= $x195 true)))
 (let (($x205 (= $x101 true)))
 (let (($x393 (= $x205 true)))
 (let (($x201 (= input.dst.llvm-%t ?x54)))
 (let (($x131 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x61 (and $x131 $x201)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x134)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x95)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x132 $x128)))
 (let (($x133 (and $x30 $x139)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x313 (and $x83 $x133)))
 (let (($x69 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x69)))))))
 (let (($x357 (and (and (and $x81 true) $x313) $x61)))
 (let (($x42 (and $x195 $x357)))
 (let (($x164 (not $x96)))
 (let (($x204 (=> $x164 $x206)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x143 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x28 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x60 (_ bv3 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem ?x45) (concat ?x28 ?x143))))
 (let (($x156 (= (bvand ?x316 (_ bv4294967280 32)) ?x316)))
 (let (($x146 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x160 (and $x146 $x156)))
 (let (($x297 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv8 32))) (bvult ?x60 (bvsub ?x60 (_ bv8 32))))))
 (let (($x49 (and (and (and $x297 $x167) $x146) $x160)))
 (let (($x186 (= true $x49)))
 (let (($x174 (=> $x96 $x186)))
 (let (($x190 (and $x174 $x204)))
 (let (($x193 (= true $x190)))
 (let (($x138 (or $x96 $x164)))
 (let (($x296 (and $x89 $x138)))
 (let (($x302 (=> $x296 $x193)))
 (let (($x203 (and $x302 $x42)))
 (let (($x402 (= $x203 true)))
 (let (($x117 (= $x402 true)))
 (let (($x318 (= $x117 true)))
 (let (($x301 (= $x302 true)))
 (let (($x194 (= $x301 true)))
 (let (($x200 (= $x194 true)))
 (let (($x315 (and $x89 $x164)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x148 (= $x317 true)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let (($x314 (and $x81 $x313)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let (($x295 (= $x80 true)))
 (let (($x144 (and $x295 $x135)))
 (let (($x147 (and $x144 $x135)))
 (let (($x154 (and $x147 $x148)))
 (let (($x202 (and $x154 $x200)))
 (let (($x207 (and $x202 $x318)))
 (let (($x199 (and $x207 $x393)))
 (let (($x321 (and $x199 $x208)))
 (let (($x375 (and $x321 $x374)))
 (let (($x438 (and $x375 $x374)))
 (let (($x490 (and $x438 $x567)))
 (let (($x550 (and $x490 $x549)))
 (let (($x723 (and $x550 $x666)))
 (let (($x720 (and $x723 $x719)))
 (let (($x745 (and $x50 $x720)))
 (let (($x130 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x721 (and $x130 $x745)))
 (let (($x722 (and $x108 $x721)))
 (let (($x746 (and $x108 $x722)))
 (let (($x76 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x20 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x7 $x76)))))))
 (let (($x92 (and $x89 $x96)))
 (let (($x47 (=> (and $x92 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x7 $x76)))))))
 (let (($x66 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x62 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x66)))))))
 (let (($x93 (=> (and $x89 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x66)))))))
 (let (($x124 (and $x93 $x47)))
 (let (($x747 (and $x124 $x746)))
 (let (($x41 (=> $x747 $x85)))
 (not $x
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4898X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x335 (concat ?x268 (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv8 32))))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x116 (concat ?x272 (concat ?x285 ?x335))))
 (let (($x362 (= ?x116 ?x116)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x237 (concat ?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x472 (concat ?x228 (concat ?x307 ?x237))))
 (let (($x235 (= (_ bv0 32) ?x472)))
 (let ((?x305 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x305 (_ bv1 32))))
 (let (($x310 (=> $x234 $x362)))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x316 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x23 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x23 (_ bv3 32))))
 (let ((?x174 (concat (select input.dst.llvm-mem ?x26) (concat ?x160 ?x299))))
 (let ((?x255 (bvadd ?x174 (_ bv4 32))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x352))))
 (let (($x349 (= (_ bv0 32) ?x350)))
 (let ((?x263 (ite $x349 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x263 (_ bv1 32))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x472 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x472 (_ bv4 32))))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x472 (_ bv4 32)) (_ bv2 32))) ?x351)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x472 (_ bv4 32)) (_ bv3 32))) ?x246)))
 (let (($x249 (= (_ bv0 32) ?x230)))
 (let ((?x248 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x334 (bvuge ?x248 (_ bv1 32))))
 (let (($x293 (= $x334 $x284)))
 (let (($x266 (=> $x234 $x293)))
 (let (($x257 (= ?x263 (_ bv0 32))))
 (let (($x370 (= ?x248 (_ bv0 32))))
 (let (($x271 (= $x370 $x257)))
 (let (($x269 (=> $x234 $x271)))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x395 (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv4 32))))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x326 (concat ?x253 (concat ?x261 ?x311))))
 (let (($x436 (= ?x326 ?x326)))
 (let (($x325 (=> $x234 $x436)))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4898X))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv2 32))) ?x405)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv3 32))) ?x292)))
 (let (($x240 (= ?x239 ?x239)))
 (let (($x244 (=> $x234 $x240)))
 (let (($x278 (= (_ bv0 32) ?x174)))
 (let ((?x331 (ite $x278 (_ bv0 32) (_ bv1 32))))
 (let (($x336 (= ?x331 (_ bv0 32))))
 (let (($x306 (= ?x305 (_ bv0 32))))
 (let (($x242 (= $x306 $x336)))
 (let (($x289 (bvuge ?x331 (_ bv1 32))))
 (let (($x275 (= $x234 $x289)))
 (let (($x243 (= ?x472 ?x174)))
 (let (($x130 (= false false)))
 (let (($x333 (and $x234 $x370)))
 (let (($x231 (=> $x333 $x130)))
 (let (($x288 (=> $x306 $x130)))
 (let (($x309 (and (and (and (and (and (and $x288 $x231) $x243) $x275) $x242) $x244) $x325)))
 (let (($x368 (and (and (and $x309 $x269) $x266) $x310)))
 (let (($x291 (not true)))
 (let (($x282 (or $x291 $x368)))
 (let (($x50 (= true true)))
 (let (($x432 (and $x50 $x282)))
 (let (($x283 (= $x432 true)))
 (let (($x214 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x223 (= $x40 $x214)))
 (let (($x359 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x366 (= $x332 $x359)))
 (let (($x51 (and $x366 $x223)))
 (let (($x290 (= $x51 true)))
 (let (($x105 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x354 (= $x221 $x105)))
 (let (($x219 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x10 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x322 (= $x10 $x219)))
 (let (($x67 (and $x322 $x354)))
 (let (($x52 (= $x67 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x213 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x213 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x304 (= $x107 $x216)))
 (let (($x342 (= ?x213 (_ bv0 32))))
 (let (($x108 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x218 (= $x108 $x342)))
 (let (($x217 (and $x218 $x304)))
 (let (($x215 (= $x217 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x357 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x402 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x117 (concat ?x402 (concat ?x357 (concat ?x54 ?x187)))))
 (let (($x84 (= ?x117 input.dst.llvm-%t)))
 (let (($x210 (= $x84 true)))
 (let (($x303 (= $x210 true)))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x64 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x109 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x58 (bvadd ?x109 (_ bv3 32))))
 (let ((?x92 (concat (select input.dst.llvm-mem ?x58) (concat ?x82 ?x122))))
 (let (($x193 (= (bvand ?x92 (_ bv4294967280 32)) ?x92)))
 (let (($x204 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x302 (and $x204 $x193)))
 (let (($x150 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x28 (and true $x150)))
 (let (($x319 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv4 32))) (bvult ?x109 (bvsub ?x109 (_ bv4 32))))))
 (let (($x200 (and (and (and $x319 $x28) $x204) $x302)))
 (let (($x202 (= true $x200)))
 (let (($x89 (not $x18)))
 (let (($x55 (=> $x89 $x202)))
 (let (($x209 (= $x55 true)))
 (let (($x53 (= $x209 true)))
 (let (($x15 (= $x53 true)))
 (let (($x318 (= input.dst.llvm-%t ?x117)))
 (let (($x317 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x207 (and $x317 $x318)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x131 (= (_ bv0 32) ?x149)))
 (let ((?x80 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x80)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x94 (and $x136 $x295)))
 (let (($x140 (and $x94 $x131)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (and $x81 $x140)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x314 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x393 (and (and (and $x314 true) $x163) $x207)))
 (let (($x199 (and $x55 $x393)))
 (let (($x119 (= (_ bv0 32) ?x92)))
 (let (($x162 (not $x119)))
 (let (($x195 (=> $x162 $x202)))
 (let (($x175 (= (bvand ?x174 (_ bv4294967280 32)) ?x174)))
 (let (($x165 (= (bvand ?x23 (_ bv4294967292 32)) ?x23)))
 (let (($x184 (and $x165 $x175)))
 (let (($x170 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x23 (bvsub ?x23 (_ bv8 32))) (bvult ?x23 (bvsub ?x23 (_ bv8 32))))))
 (let (($x159 (and (and (and $x170 $x28) $x165) $x184)))
 (let (($x161 (= true $x159)))
 (let (($x180 (=> $x119 $x161)))
 (let (($x197 (and $x180 $x195)))
 (let (($x198 (= true $x197)))
 (let (($x137 (or $x119 $x162)))
 (let (($x153 (and $x89 $x137)))
 (let (($x192 (=> $x153 $x198)))
 (let (($x36 (and $x192 $x199)))
 (let (($x72 (= $x36 true)))
 (let (($x208 (= $x72 true)))
 (let (($x321 (= $x208 true)))
 (let (($x57 (= $x192 true)))
 (let (($x178 (= $x57 true)))
 (let (($x189 (= $x178 true)))
 (let (($x60 (and $x89 $x119)))
 (let (($x141 (= $x60 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x148 (= $x317 true)))
 (let (($x154 (= $x148 true)))
 (let (($x138 (= $x154 true)))
 (let (($x135 (and $x314 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x296 (and $x164 $x138)))
 (let (($x145 (and $x296 $x138)))
 (let (($x297 (and $x145 $x142)))
 (let (($x183 (and $x297 $x189)))
 (let (($x38 (and $x183 $x321)))
 (let (($x358 (and $x38 $x15)))
 (let (($x401 (and $x358 $x303)))
 (let (($x212 (and $x401 $x215)))
 (let (($x211 (and $x212 $x215)))
 (let (($x56 (and $x211 $x52)))
 (let (($x5 (and $x56 $x290)))
 (let (($x78 (and $x107 $x10)))
 (let (($x225 (and $x78 $x5)))
 (let (($x73 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x394 (and $x73 $x225)))
 (let (($x323 (and $x130 $x394)))
 (let (($x226 (and $x130 $x323)))
 (let (($x98 (bvugt ?x23 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x68 (=> (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x70 $x98)))))))
 (let (($x114 (=> (and $x60 (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x70 $x98)))))))
 (let (($x129 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x63 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x106 $x129)))))))
 (let (($x88 (=> (and $x89 (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x106 $x129)))))))
 (let (($x45 (and $x88 $x114)))
 (let (($x344 (and $x45 $x226)))
 (let (($x22 (=> $x344 $x283)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4898X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x335 (concat ?x268 (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv8 32))))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x116 (concat ?x272 (concat ?x285 ?x335))))
 (let (($x362 (= ?x116 ?x116)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x237 (concat ?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x472 (concat ?x228 (concat ?x307 ?x237))))
 (let (($x235 (= (_ bv0 32) ?x472)))
 (let ((?x305 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x305 (_ bv1 32))))
 (let (($x310 (=> $x234 $x362)))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x316 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x23 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x23 (_ bv3 32))))
 (let ((?x174 (concat (select input.dst.llvm-mem ?x26) (concat ?x160 ?x299))))
 (let ((?x255 (bvadd ?x174 (_ bv4 32))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x352))))
 (let (($x349 (= (_ bv0 32) ?x350)))
 (let ((?x263 (ite $x349 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x263 (_ bv1 32))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x472 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x472 (_ bv4 32))))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x472 (_ bv4 32)) (_ bv2 32))) ?x351)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x472 (_ bv4 32)) (_ bv3 32))) ?x246)))
 (let (($x249 (= (_ bv0 32) ?x230)))
 (let ((?x248 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x334 (bvuge ?x248 (_ bv1 32))))
 (let (($x293 (= $x334 $x284)))
 (let (($x266 (=> $x234 $x293)))
 (let (($x257 (= ?x263 (_ bv0 32))))
 (let (($x370 (= ?x248 (_ bv0 32))))
 (let (($x271 (= $x370 $x257)))
 (let (($x269 (=> $x234 $x271)))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x395 (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv4 32))))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4898X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x326 (concat ?x253 (concat ?x261 ?x311))))
 (let (($x436 (= ?x326 ?x326)))
 (let (($x325 (=> $x234 $x436)))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4898X))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv2 32))) ?x405)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4898X (_ bv3 32))) ?x292)))
 (let (($x240 (= ?x239 ?x239)))
 (let (($x244 (=> $x234 $x240)))
 (let (($x278 (= (_ bv0 32) ?x174)))
 (let ((?x331 (ite $x278 (_ bv0 32) (_ bv1 32))))
 (let (($x336 (= ?x331 (_ bv0 32))))
 (let (($x306 (= ?x305 (_ bv0 32))))
 (let (($x242 (= $x306 $x336)))
 (let (($x289 (bvuge ?x331 (_ bv1 32))))
 (let (($x275 (= $x234 $x289)))
 (let (($x243 (= ?x472 ?x174)))
 (let (($x130 (= false false)))
 (let (($x333 (and $x234 $x370)))
 (let (($x231 (=> $x333 $x130)))
 (let (($x288 (=> $x306 $x130)))
 (let (($x309 (and (and (and (and (and (and $x288 $x231) $x243) $x275) $x242) $x244) $x325)))
 (let (($x368 (and (and (and $x309 $x269) $x266) $x310)))
 (let (($x291 (not true)))
 (let (($x282 (or $x291 $x368)))
 (let (($x50 (= true true)))
 (let (($x432 (and $x50 $x282)))
 (let (($x283 (= $x432 true)))
 (let (($x214 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x223 (= $x40 $x214)))
 (let (($x359 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x366 (= $x332 $x359)))
 (let (($x51 (and $x366 $x223)))
 (let (($x290 (= $x51 true)))
 (let (($x105 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x354 (= $x221 $x105)))
 (let (($x219 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x10 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x322 (= $x10 $x219)))
 (let (($x67 (and $x322 $x354)))
 (let (($x52 (= $x67 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x213 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x213 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x304 (= $x107 $x216)))
 (let (($x342 (= ?x213 (_ bv0 32))))
 (let (($x108 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x218 (= $x108 $x342)))
 (let (($x217 (and $x218 $x304)))
 (let (($x215 (= $x217 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x357 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x402 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x117 (concat ?x402 (concat ?x357 (concat ?x54 ?x187)))))
 (let (($x84 (= ?x117 input.dst.llvm-%t)))
 (let (($x210 (= $x84 true)))
 (let (($x303 (= $x210 true)))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x64 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x109 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x58 (bvadd ?x109 (_ bv3 32))))
 (let ((?x92 (concat (select input.dst.llvm-mem ?x58) (concat ?x82 ?x122))))
 (let (($x193 (= (bvand ?x92 (_ bv4294967280 32)) ?x92)))
 (let (($x204 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x302 (and $x204 $x193)))
 (let (($x150 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x28 (and true $x150)))
 (let (($x319 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv4 32))) (bvult ?x109 (bvsub ?x109 (_ bv4 32))))))
 (let (($x200 (and (and (and $x319 $x28) $x204) $x302)))
 (let (($x202 (= true $x200)))
 (let (($x89 (not $x18)))
 (let (($x55 (=> $x89 $x202)))
 (let (($x209 (= $x55 true)))
 (let (($x53 (= $x209 true)))
 (let (($x15 (= $x53 true)))
 (let (($x318 (= input.dst.llvm-%t ?x117)))
 (let (($x317 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x207 (and $x317 $x318)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x131 (= (_ bv0 32) ?x149)))
 (let ((?x80 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x80)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x94 (and $x136 $x295)))
 (let (($x140 (and $x94 $x131)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (and $x81 $x140)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x314 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x393 (and (and (and $x314 true) $x163) $x207)))
 (let (($x199 (and $x55 $x393)))
 (let (($x119 (= (_ bv0 32) ?x92)))
 (let (($x162 (not $x119)))
 (let (($x195 (=> $x162 $x202)))
 (let (($x175 (= (bvand ?x174 (_ bv4294967280 32)) ?x174)))
 (let (($x165 (= (bvand ?x23 (_ bv4294967292 32)) ?x23)))
 (let (($x184 (and $x165 $x175)))
 (let (($x170 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x23 (bvsub ?x23 (_ bv8 32))) (bvult ?x23 (bvsub ?x23 (_ bv8 32))))))
 (let (($x159 (and (and (and $x170 $x28) $x165) $x184)))
 (let (($x161 (= true $x159)))
 (let (($x180 (=> $x119 $x161)))
 (let (($x197 (and $x180 $x195)))
 (let (($x198 (= true $x197)))
 (let (($x137 (or $x119 $x162)))
 (let (($x153 (and $x89 $x137)))
 (let (($x192 (=> $x153 $x198)))
 (let (($x36 (and $x192 $x199)))
 (let (($x72 (= $x36 true)))
 (let (($x208 (= $x72 true)))
 (let (($x321 (= $x208 true)))
 (let (($x57 (= $x192 true)))
 (let (($x178 (= $x57 true)))
 (let (($x189 (= $x178 true)))
 (let (($x60 (and $x89 $x119)))
 (let (($x141 (= $x60 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x148 (= $x317 true)))
 (let (($x154 (= $x148 true)))
 (let (($x138 (= $x154 true)))
 (let (($x135 (and $x314 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x296 (and $x164 $x138)))
 (let (($x145 (and $x296 $x138)))
 (let (($x297 (and $x145 $x142)))
 (let (($x183 (and $x297 $x189)))
 (let (($x38 (and $x183 $x321)))
 (let (($x358 (and $x38 $x15)))
 (let (($x401 (and $x358 $x303)))
 (let (($x212 (and $x401 $x215)))
 (let (($x211 (and $x212 $x215)))
 (let (($x56 (and $x211 $x52)))
 (let (($x5 (and $x56 $x290)))
 (let (($x78 (and $x107 $x10)))
 (let (($x225 (and $x78 $x5)))
 (let (($x73 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x394 (and $x73 $x225)))
 (let (($x323 (and $x130 $x394)))
 (let (($x226 (and $x130 $x323)))
 (let (($x98 (bvugt ?x23 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x68 (=> (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x70 $x98)))))))
 (let (($x114 (=> (and $x60 (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x70 $x98)))))))
 (let (($x129 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x63 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x106 $x129)))))))
 (let (($x88 (=> (and $x89 (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x106 $x129)))))))
 (let (($x45 (and $x88 $x114)))
 (let (($x344 (and $x45 $x226)))
 (let (($x22 (=> $x344 $x283)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4934X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x284 (concat ?x334 (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv8 32))))))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x348 (concat ?x266 ?x284))))
 (let (($x372 (= ?x272 ?x272)))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x237 (concat ?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x472 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x288 (concat ?x306 (concat ?x472 ?x237))))
 (let (($x234 (= (_ bv0 32) ?x288)))
 (let ((?x360 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (bvuge ?x360 (_ bv1 32))))
 (let (($x285 (=> $x241 $x372)))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x309 (concat ?x325 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x435 (concat ?x367 (concat ?x264 ?x309))))
 (let (($x371 (= (_ bv0 32) ?x435)))
 (let ((?x329 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x349 (= ?x329 (_ bv0 32))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x288 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x288 (_ bv4 32))))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x288 (_ bv4 32)) (_ bv2 32))) ?x351)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x288 (_ bv4 32)) (_ bv3 32))) ?x249)))
 (let (($x231 (= (_ bv0 32) ?x333)))
 (let ((?x274 (ite $x231 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (= ?x274 (_ bv0 32))))
 (let (($x263 (= $x243 $x349)))
 (let (($x257 (=> $x241 $x263)))
 (let (($x352 (bvuge ?x329 (_ bv1 32))))
 (let (($x311 (bvuge ?x274 (_ bv1 32))))
 (let (($x281 (= $x311 $x352)))
 (let (($x350 (=> $x241 $x281)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv4 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x308 (concat ?x261 (concat ?x260 ?x276))))
 (let (($x395 (= ?x308 ?x308)))
 (let (($x280 (=> $x241 $x395)))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4934X))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv2 32))) ?x355)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv3 32))) ?x356)))
 (let (($x361 (= ?x250 ?x250)))
 (let (($x405 (=> $x241 $x361)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x304 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x304 (_ bv0 32))))
 (let (($x233 (= ?x360 (_ bv0 32))))
 (let (($x275 (= $x233 $x217)))
 (let (($x212 (bvuge ?x304 (_ bv1 32))))
 (let (($x289 (= $x241 $x212)))
 (let (($x331 (= ?x288 input.dst.llvm-%t)))
 (let (($x29 (= false false)))
 (let (($x270 (and $x241 $x243)))
 (let (($x278 (=> $x270 $x29)))
 (let (($x324 (=> $x233 $x29)))
 (let (($x116 (and (and (and (and (and (and $x324 $x278) $x331) $x289) $x275) $x405) $x280)))
 (let (($x368 (and (and (and $x116 $x350) $x257) $x285)))
 (let (($x471 (not true)))
 (let (($x282 (or $x471 $x368)))
 (let (($x228 (= true true)))
 (let (($x432 (and $x228 $x282)))
 (let (($x283 (= $x432 true)))
 (let (($x5 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x290 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x225 (= $x290 $x5)))
 (let (($x223 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x40 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x51 (= $x40 $x223)))
 (let (($x394 (and $x51 $x225)))
 (let (($x323 (= $x394 true)))
 (let (($x56 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x52 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x220 (= $x52 $x56)))
 (let (($x354 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x99 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x67 (= $x99 $x354)))
 (let (($x332 (and $x67 $x220)))
 (let (($x224 (= $x332 true)))
 (let (($x10 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x211 (= $x10 $x212)))
 (let (($x216 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x215 (= $x216 $x217)))
 (let (($x222 (and $x215 $x211)))
 (let (($x219 (= $x222 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x318 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x207 (concat ?x318 (concat ?x201 (concat ?x196 ?x61)))))
 (let (($x108 (= ?x207 input.dst.llvm-%t)))
 (let (($x213 (= $x108 true)))
 (let (($x342 (= $x213 true)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x64 (concat ?x71 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x9 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x86 (bvadd ?x9 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x86) (concat ?x12 ?x64))))
 (let (($x302 (= (bvand ?x60 (_ bv4294967280 32)) ?x60)))
 (let (($x190 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x200 (and $x190 $x302)))
 (let (($x152 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x35 (and true $x152)))
 (let (($x204 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv4 32))) (bvult ?x9 (bvsub ?x9 (_ bv4 32))))))
 (let (($x197 (and (and (and $x204 $x35) $x190) $x200)))
 (let (($x198 (= true $x197)))
 (let (($x89 (not $x18)))
 (let (($x203 (=> $x89 $x198)))
 (let (($x84 (= $x203 true)))
 (let (($x210 (= $x84 true)))
 (let (($x303 (= $x210 true)))
 (let (($x393 (= input.dst.llvm-%t ?x207)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x199 (and $x138 $x393)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x95 $x144)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x295 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x133)))))))
 (let (($x208 (and (and (and $x295 true) $x147) $x199)))
 (let (($x321 (and $x203 $x208)))
 (let (($x110 (= (_ bv0 32) ?x60)))
 (let (($x157 (not $x110)))
 (let (($x192 (=> $x157 $x198)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x316 (concat ?x298 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x76 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x76 (_ bv3 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem ?x75) (concat ?x299 ?x316))))
 (let (($x184 (= (bvand ?x176 (_ bv4294967280 32)) ?x176)))
 (let (($x186 (= (bvand ?x76 (_ bv4294967292 32)) ?x76)))
 (let (($x159 (and $x186 $x184)))
 (let (($x182 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x76 (bvsub ?x76 (_ bv8 32))) (bvult ?x76 (bvsub ?x76 (_ bv8 32))))))
 (let (($x392 (and (and (and $x182 $x35) $x186) $x159)))
 (let (($x173 (= true $x392)))
 (let (($x8 (=> $x110 $x173)))
 (let (($x57 (and $x8 $x192)))
 (let (($x178 (= true $x57)))
 (let (($x155 (or $x110 $x157)))
 (let (($x167 (and $x89 $x155)))
 (let (($x189 (=> $x167 $x178)))
 (let (($x38 (and $x189 $x321)))
 (let (($x209 (= $x38 true)))
 (let (($x53 (= $x209 true)))
 (let (($x15 (= $x53 true)))
 (let (($x183 (= $x189 true)))
 (let (($x55 (= $x183 true)))
 (let (($x101 (= $x55 true)))
 (let (($x297 (= $x18 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let (($x164 (and $x295 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x153 (and $x142 $x137)))
 (let (($x205 (and $x153 $x101)))
 (let (($x358 (and $x205 $x15)))
 (let (($x401 (and $x358 $x303)))
 (let (($x218 (and $x401 $x342)))
 (let (($x322 (and $x218 $x219)))
 (let (($x221 (and $x322 $x219)))
 (let (($x359 (and $x221 $x224)))
 (let (($x226 (and $x359 $x323)))
 (let (($x83 (and $x10 $x99)))
 (let (($x344 (and $x83 $x226)))
 (let (($x107 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x50 (and $x107 $x344)))
 (let (($x291 (and $x29 $x50)))
 (let (($x347 (and $x29 $x291)))
 (let (($x47 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x46 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x23 (and $x89 $x110)))
 (let (($x13 (=> (and $x23 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x93 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x91 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x93)))))))
 (let (($x24 (=> (and $x89 (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x62 $x93)))))))
 (let (($x26 (and $x24 $x13)))
 (let (($x396 (and $x26 $x347)))
 (let (($x22 (=> $x396 $x283)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4934X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x284 (concat ?x334 (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv8 32))))))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x348 (concat ?x266 ?x284))))
 (let (($x372 (= ?x272 ?x272)))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x237 (concat ?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x472 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x288 (concat ?x306 (concat ?x472 ?x237))))
 (let (($x234 (= (_ bv0 32) ?x288)))
 (let ((?x360 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (bvuge ?x360 (_ bv1 32))))
 (let (($x285 (=> $x241 $x372)))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x309 (concat ?x325 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x435 (concat ?x367 (concat ?x264 ?x309))))
 (let (($x371 (= (_ bv0 32) ?x435)))
 (let ((?x329 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x349 (= ?x329 (_ bv0 32))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x288 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x288 (_ bv4 32))))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x288 (_ bv4 32)) (_ bv2 32))) ?x351)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x288 (_ bv4 32)) (_ bv3 32))) ?x249)))
 (let (($x231 (= (_ bv0 32) ?x333)))
 (let ((?x274 (ite $x231 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (= ?x274 (_ bv0 32))))
 (let (($x263 (= $x243 $x349)))
 (let (($x257 (=> $x241 $x263)))
 (let (($x352 (bvuge ?x329 (_ bv1 32))))
 (let (($x311 (bvuge ?x274 (_ bv1 32))))
 (let (($x281 (= $x311 $x352)))
 (let (($x350 (=> $x241 $x281)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv4 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4934X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x308 (concat ?x261 (concat ?x260 ?x276))))
 (let (($x395 (= ?x308 ?x308)))
 (let (($x280 (=> $x241 $x395)))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4934X))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv2 32))) ?x355)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4934X (_ bv3 32))) ?x356)))
 (let (($x361 (= ?x250 ?x250)))
 (let (($x405 (=> $x241 $x361)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x304 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x304 (_ bv0 32))))
 (let (($x233 (= ?x360 (_ bv0 32))))
 (let (($x275 (= $x233 $x217)))
 (let (($x212 (bvuge ?x304 (_ bv1 32))))
 (let (($x289 (= $x241 $x212)))
 (let (($x331 (= ?x288 input.dst.llvm-%t)))
 (let (($x29 (= false false)))
 (let (($x270 (and $x241 $x243)))
 (let (($x278 (=> $x270 $x29)))
 (let (($x324 (=> $x233 $x29)))
 (let (($x116 (and (and (and (and (and (and $x324 $x278) $x331) $x289) $x275) $x405) $x280)))
 (let (($x368 (and (and (and $x116 $x350) $x257) $x285)))
 (let (($x471 (not true)))
 (let (($x282 (or $x471 $x368)))
 (let (($x228 (= true true)))
 (let (($x432 (and $x228 $x282)))
 (let (($x283 (= $x432 true)))
 (let (($x5 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x290 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x225 (= $x290 $x5)))
 (let (($x223 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x40 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x51 (= $x40 $x223)))
 (let (($x394 (and $x51 $x225)))
 (let (($x323 (= $x394 true)))
 (let (($x56 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x52 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x220 (= $x52 $x56)))
 (let (($x354 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x99 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x67 (= $x99 $x354)))
 (let (($x332 (and $x67 $x220)))
 (let (($x224 (= $x332 true)))
 (let (($x10 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x211 (= $x10 $x212)))
 (let (($x216 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x215 (= $x216 $x217)))
 (let (($x222 (and $x215 $x211)))
 (let (($x219 (= $x222 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x318 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x207 (concat ?x318 (concat ?x201 (concat ?x196 ?x61)))))
 (let (($x108 (= ?x207 input.dst.llvm-%t)))
 (let (($x213 (= $x108 true)))
 (let (($x342 (= $x213 true)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x64 (concat ?x71 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x9 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x86 (bvadd ?x9 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x86) (concat ?x12 ?x64))))
 (let (($x302 (= (bvand ?x60 (_ bv4294967280 32)) ?x60)))
 (let (($x190 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x200 (and $x190 $x302)))
 (let (($x152 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x35 (and true $x152)))
 (let (($x204 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv4 32))) (bvult ?x9 (bvsub ?x9 (_ bv4 32))))))
 (let (($x197 (and (and (and $x204 $x35) $x190) $x200)))
 (let (($x198 (= true $x197)))
 (let (($x89 (not $x18)))
 (let (($x203 (=> $x89 $x198)))
 (let (($x84 (= $x203 true)))
 (let (($x210 (= $x84 true)))
 (let (($x303 (= $x210 true)))
 (let (($x393 (= input.dst.llvm-%t ?x207)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x199 (and $x138 $x393)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x95 $x144)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x295 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x133)))))))
 (let (($x208 (and (and (and $x295 true) $x147) $x199)))
 (let (($x321 (and $x203 $x208)))
 (let (($x110 (= (_ bv0 32) ?x60)))
 (let (($x157 (not $x110)))
 (let (($x192 (=> $x157 $x198)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x316 (concat ?x298 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x76 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x76 (_ bv3 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem ?x75) (concat ?x299 ?x316))))
 (let (($x184 (= (bvand ?x176 (_ bv4294967280 32)) ?x176)))
 (let (($x186 (= (bvand ?x76 (_ bv4294967292 32)) ?x76)))
 (let (($x159 (and $x186 $x184)))
 (let (($x182 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x76 (bvsub ?x76 (_ bv8 32))) (bvult ?x76 (bvsub ?x76 (_ bv8 32))))))
 (let (($x392 (and (and (and $x182 $x35) $x186) $x159)))
 (let (($x173 (= true $x392)))
 (let (($x8 (=> $x110 $x173)))
 (let (($x57 (and $x8 $x192)))
 (let (($x178 (= true $x57)))
 (let (($x155 (or $x110 $x157)))
 (let (($x167 (and $x89 $x155)))
 (let (($x189 (=> $x167 $x178)))
 (let (($x38 (and $x189 $x321)))
 (let (($x209 (= $x38 true)))
 (let (($x53 (= $x209 true)))
 (let (($x15 (= $x53 true)))
 (let (($x183 (= $x189 true)))
 (let (($x55 (= $x183 true)))
 (let (($x101 (= $x55 true)))
 (let (($x297 (= $x18 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let (($x164 (and $x295 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x153 (and $x142 $x137)))
 (let (($x205 (and $x153 $x101)))
 (let (($x358 (and $x205 $x15)))
 (let (($x401 (and $x358 $x303)))
 (let (($x218 (and $x401 $x342)))
 (let (($x322 (and $x218 $x219)))
 (let (($x221 (and $x322 $x219)))
 (let (($x359 (and $x221 $x224)))
 (let (($x226 (and $x359 $x323)))
 (let (($x83 (and $x10 $x99)))
 (let (($x344 (and $x83 $x226)))
 (let (($x107 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x50 (and $x107 $x344)))
 (let (($x291 (and $x29 $x50)))
 (let (($x347 (and $x29 $x291)))
 (let (($x47 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x46 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x23 (and $x89 $x110)))
 (let (($x13 (=> (and $x23 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x93 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x91 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x93)))))))
 (let (($x24 (=> (and $x89 (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x62 $x93)))))))
 (let (($x26 (and $x24 $x13)))
 (let (($x396 (and $x26 $x347)))
 (let (($x22 (=> $x396 $x283)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4970X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x251 (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv8 32))))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x355 (concat ?x336 (concat ?x397 ?x247))))
 (let (($x356 (= ?x355 ?x355)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x217 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x217 (_ bv1 32))))
 (let (($x250 (=> $x222 $x356)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x231 (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv4 32))))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x268 (concat ?x331 (concat ?x270 ?x274))))
 (let (($x289 (= ?x268 ?x268)))
 (let (($x267 (=> $x222 $x289)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4970X))))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv2 32))) ?x241)))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv3 32))) ?x370)))
 (let (($x232 (= ?x363 ?x363)))
 (let (($x236 (=> $x222 $x232)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x71 (concat ?x82 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x44 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x120 (bvadd ?x44 (_ bv3 32))))
 (let ((?x23 (concat (select input.dst.llvm-mem ?x120) (concat ?x92 ?x71))))
 (let (($x7 (= (_ bv0 32) ?x23)))
 (let ((?x227 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x227 (_ bv1 32))))
 (let (($x288 (= $x222 $x235)))
 (let (($x104 (= false false)))
 (let (($x215 (= ?x217 (_ bv0 32))))
 (let (($x237 (=> $x215 $x104)))
 (let (($x403 (and (and (and (= input.dst.llvm-%t ?x23) (= $x215 (= ?x227 (_ bv0 32)))) $x237) $x288)))
 (let (($x261 (and (and (and $x403 $x236) $x267) $x250)))
 (let (($x229 (not true)))
 (let (($x259 (or $x229 $x261)))
 (let (($x306 (= true true)))
 (let (($x260 (and $x306 $x259)))
 (let (($x240 (= $x260 true)))
 (let (($x226 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x323 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x344 (= $x323 $x226)))
 (let (($x225 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x290 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x394 (= $x290 $x225)))
 (let (($x50 (and $x394 $x344)))
 (let (($x291 (= $x50 true)))
 (let (($x359 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x366 (= $x224 $x359)))
 (let (($x220 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x332 (= $x52 $x220)))
 (let (($x40 (and $x332 $x366)))
 (let (($x214 (= $x40 true)))
 (let (($x211 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x219 (= $x211 $x222)))
 (let (($x99 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x212 (= $x99 $x215)))
 (let (($x322 (and $x212 $x219)))
 (let (($x221 (= $x322 true)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x207 (concat ?x42 (concat ?x196 (concat ?x187 ?x117)))))
 (let (($x342 (= ?x207 input.dst.llvm-%t)))
 (let (($x218 (= $x342 true)))
 (let (($x216 (= $x218 true)))
 (let (($x193 (= (bvand ?x23 (_ bv4294967280 32)) ?x23)))
 (let (($x190 (= (bvand ?x44 (_ bv4294967292 32)) ?x44)))
 (let (($x302 (and $x190 $x193)))
 (let (($x35 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x161 (and true $x35)))
 (let (($x202 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x44 (bvsub ?x44 (_ bv4 32))) (bvult ?x44 (bvsub ?x44 (_ bv4 32))))))
 (let (($x198 (and (and (and $x202 $x161) $x190) $x302)))
 (let (($x192 (= true $x198)))
 (let (($x89 (not $x18)))
 (let (($x36 (=> $x89 $x192)))
 (let (($x303 (= $x36 true)))
 (let (($x401 (= $x303 true)))
 (let (($x108 (= $x401 true)))
 (let (($x393 (= input.dst.llvm-%t ?x207)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x199 (and $x138 $x393)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x30 $x144)))
 (let (($x314 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x95 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x314)))))))
 (let (($x38 (and (and (and $x95 true) $x147) $x199)))
 (let (($x209 (and $x36 $x38)))
 (let (($x297 (not $x7)))
 (let (($x57 (=> $x297 $x192)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x98 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x98 (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x124) (concat ?x298 ?x299))))
 (let (($x175 (= (bvand ?x49 (_ bv4294967280 32)) ?x49)))
 (let (($x186 (= (bvand ?x98 (_ bv4294967292 32)) ?x98)))
 (let (($x184 (and $x186 $x175)))
 (let (($x150 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x98 (bvsub ?x98 (_ bv8 32))) (bvult ?x98 (bvsub ?x98 (_ bv8 32))))))
 (let (($x173 (and (and (and $x150 $x161) $x186) $x184)))
 (let (($x8 (= true $x173)))
 (let (($x319 (=> $x7 $x8)))
 (let (($x178 (and $x319 $x57)))
 (let (($x189 (= true $x178)))
 (let (($x167 (or $x7 $x297)))
 (let (($x170 (and $x89 $x167)))
 (let (($x183 (=> $x170 $x189)))
 (let (($x53 (and $x183 $x209)))
 (let (($x15 (= $x53 true)))
 (let (($x358 (= $x15 true)))
 (let (($x84 (= $x358 true)))
 (let (($x55 (= $x183 true)))
 (let (($x101 (= $x55 true)))
 (let (($x205 (= $x101 true)))
 (let (($x162 (and $x89 $x297)))
 (let (($x137 (= $x162 true)))
 (let (($x153 (= $x137 true)))
 (let (($x157 (= $x153 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let (($x164 (and $x95 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x155 (and $x142 $x157)))
 (let (($x203 (and $x155 $x205)))
 (let (($x210 (and $x203 $x84)))
 (let (($x213 (and $x210 $x108)))
 (let (($x304 (and $x213 $x216)))
 (let (($x105 (and $x304 $x221)))
 (let (($x354 (and $x105 $x221)))
 (let (($x223 (and $x354 $x214)))
 (let (($x347 (and $x223 $x291)))
 (let (($x396 (and $x99 $x347)))
 (let (($x10 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x228 (and $x10 $x396)))
 (let (($x471 (and $x104 $x228)))
 (let (($x307 (and $x104 $x471)))
 (let (($x114 (bvugt ?x98 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x73 (=> (bvule ?x98 (bvsub (bvadd ?x98 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x114)))))))
 (let (($x76 (and $x89 $x7)))
 (let (($x130 (=> (and $x76 (bvule ?x98 (bvsub (bvadd ?x98 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x114)))))))
 (let (($x88 (bvugt ?x44 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x120)))
 (let (($x125 (=> (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x88)))))))
 (let (($x58 (=> (and $x89 (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x88)))))))
 (let (($x75 (and $x58 $x130)))
 (let (($x305 (and $x75 $x307)))
 (let (($x244 (=> $x305 $x240)))
 (not $x244))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4970X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x251 (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv8 32))))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x355 (concat ?x336 (concat ?x397 ?x247))))
 (let (($x356 (= ?x355 ?x355)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x217 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x217 (_ bv1 32))))
 (let (($x250 (=> $x222 $x356)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x231 (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv4 32))))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4970X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x268 (concat ?x331 (concat ?x270 ?x274))))
 (let (($x289 (= ?x268 ?x268)))
 (let (($x267 (=> $x222 $x289)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4970X))))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv2 32))) ?x241)))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4970X (_ bv3 32))) ?x370)))
 (let (($x232 (= ?x363 ?x363)))
 (let (($x236 (=> $x222 $x232)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x71 (concat ?x82 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x44 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x120 (bvadd ?x44 (_ bv3 32))))
 (let ((?x23 (concat (select input.dst.llvm-mem ?x120) (concat ?x92 ?x71))))
 (let (($x7 (= (_ bv0 32) ?x23)))
 (let ((?x227 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x227 (_ bv1 32))))
 (let (($x288 (= $x222 $x235)))
 (let (($x104 (= false false)))
 (let (($x215 (= ?x217 (_ bv0 32))))
 (let (($x237 (=> $x215 $x104)))
 (let (($x403 (and (and (and (= input.dst.llvm-%t ?x23) (= $x215 (= ?x227 (_ bv0 32)))) $x237) $x288)))
 (let (($x261 (and (and (and $x403 $x236) $x267) $x250)))
 (let (($x229 (not true)))
 (let (($x259 (or $x229 $x261)))
 (let (($x306 (= true true)))
 (let (($x260 (and $x306 $x259)))
 (let (($x240 (= $x260 true)))
 (let (($x226 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x323 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x344 (= $x323 $x226)))
 (let (($x225 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x290 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x394 (= $x290 $x225)))
 (let (($x50 (and $x394 $x344)))
 (let (($x291 (= $x50 true)))
 (let (($x359 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x366 (= $x224 $x359)))
 (let (($x220 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x332 (= $x52 $x220)))
 (let (($x40 (and $x332 $x366)))
 (let (($x214 (= $x40 true)))
 (let (($x211 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x219 (= $x211 $x222)))
 (let (($x99 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x212 (= $x99 $x215)))
 (let (($x322 (and $x212 $x219)))
 (let (($x221 (= $x322 true)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x207 (concat ?x42 (concat ?x196 (concat ?x187 ?x117)))))
 (let (($x342 (= ?x207 input.dst.llvm-%t)))
 (let (($x218 (= $x342 true)))
 (let (($x216 (= $x218 true)))
 (let (($x193 (= (bvand ?x23 (_ bv4294967280 32)) ?x23)))
 (let (($x190 (= (bvand ?x44 (_ bv4294967292 32)) ?x44)))
 (let (($x302 (and $x190 $x193)))
 (let (($x35 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x161 (and true $x35)))
 (let (($x202 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x44 (bvsub ?x44 (_ bv4 32))) (bvult ?x44 (bvsub ?x44 (_ bv4 32))))))
 (let (($x198 (and (and (and $x202 $x161) $x190) $x302)))
 (let (($x192 (= true $x198)))
 (let (($x89 (not $x18)))
 (let (($x36 (=> $x89 $x192)))
 (let (($x303 (= $x36 true)))
 (let (($x401 (= $x303 true)))
 (let (($x108 (= $x401 true)))
 (let (($x393 (= input.dst.llvm-%t ?x207)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x199 (and $x138 $x393)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x30 $x144)))
 (let (($x314 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x95 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x314)))))))
 (let (($x38 (and (and (and $x95 true) $x147) $x199)))
 (let (($x209 (and $x36 $x38)))
 (let (($x297 (not $x7)))
 (let (($x57 (=> $x297 $x192)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x98 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x98 (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x124) (concat ?x298 ?x299))))
 (let (($x175 (= (bvand ?x49 (_ bv4294967280 32)) ?x49)))
 (let (($x186 (= (bvand ?x98 (_ bv4294967292 32)) ?x98)))
 (let (($x184 (and $x186 $x175)))
 (let (($x150 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x98 (bvsub ?x98 (_ bv8 32))) (bvult ?x98 (bvsub ?x98 (_ bv8 32))))))
 (let (($x173 (and (and (and $x150 $x161) $x186) $x184)))
 (let (($x8 (= true $x173)))
 (let (($x319 (=> $x7 $x8)))
 (let (($x178 (and $x319 $x57)))
 (let (($x189 (= true $x178)))
 (let (($x167 (or $x7 $x297)))
 (let (($x170 (and $x89 $x167)))
 (let (($x183 (=> $x170 $x189)))
 (let (($x53 (and $x183 $x209)))
 (let (($x15 (= $x53 true)))
 (let (($x358 (= $x15 true)))
 (let (($x84 (= $x358 true)))
 (let (($x55 (= $x183 true)))
 (let (($x101 (= $x55 true)))
 (let (($x205 (= $x101 true)))
 (let (($x162 (and $x89 $x297)))
 (let (($x137 (= $x162 true)))
 (let (($x153 (= $x137 true)))
 (let (($x157 (= $x153 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let (($x164 (and $x95 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x155 (and $x142 $x157)))
 (let (($x203 (and $x155 $x205)))
 (let (($x210 (and $x203 $x84)))
 (let (($x213 (and $x210 $x108)))
 (let (($x304 (and $x213 $x216)))
 (let (($x105 (and $x304 $x221)))
 (let (($x354 (and $x105 $x221)))
 (let (($x223 (and $x354 $x214)))
 (let (($x347 (and $x223 $x291)))
 (let (($x396 (and $x99 $x347)))
 (let (($x10 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x228 (and $x10 $x396)))
 (let (($x471 (and $x104 $x228)))
 (let (($x307 (and $x104 $x471)))
 (let (($x114 (bvugt ?x98 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x73 (=> (bvule ?x98 (bvsub (bvadd ?x98 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x114)))))))
 (let (($x76 (and $x89 $x7)))
 (let (($x130 (=> (and $x76 (bvule ?x98 (bvsub (bvadd ?x98 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x114)))))))
 (let (($x88 (bvugt ?x44 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x120)))
 (let (($x125 (=> (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x88)))))))
 (let (($x58 (=> (and $x89 (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x88)))))))
 (let (($x75 (and $x58 $x130)))
 (let (($x305 (and $x75 $x307)))
 (let (($x244 (=> $x305 $x240)))
 (not $x244))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5005X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x238 (concat ?x336 (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv8 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x247 (concat ?x273 ?x238))))
 (let (($x355 (= ?x242 ?x242)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x211 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x221 (bvuge ?x211 (_ bv1 32))))
 (let (($x356 (=> $x221 $x355)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x270 (concat ?x243 (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv4 32))))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x268 (concat ?x278 (concat ?x231 ?x270))))
 (let (($x289 (= ?x268 ?x268)))
 (let (($x267 (=> $x221 $x289)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5005X))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv2 32))) ?x233)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv3 32))) ?x241)))
 (let (($x236 (= ?x232 ?x232)))
 (let (($x292 (=> $x221 $x236)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x180 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x47 (_ bv3 32))))
 (let ((?x175 (concat (select input.dst.llvm-mem ?x45) (concat ?x156 ?x180))))
 (let (($x237 (= (_ bv0 32) ?x175)))
 (let ((?x405 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x405 (_ bv1 32))))
 (let (($x234 (= $x221 $x403)))
 (let (($x235 (= ?x405 (_ bv0 32))))
 (let (($x222 (= ?x211 (_ bv0 32))))
 (let (($x288 (= $x222 $x235)))
 (let (($x261 (and (and (=> $x222 (= false false)) (= input.dst.llvm-%t ?x175)) $x288)))
 (let (($x244 (and (and (and (and $x261 $x234) $x292) $x267) $x356)))
 (let (($x245 (not true)))
 (let (($x239 (or $x245 $x244)))
 (let (($x227 (= true true)))
 (let (($x66 (and $x227 $x239)))
 (let (($x109 (= $x66 true)))
 (let (($x291 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x50 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x347 (= $x50 $x291)))
 (let (($x226 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x394 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x344 (= $x394 $x226)))
 (let (($x396 (and $x344 $x347)))
 (let (($x228 (= $x396 true)))
 (let (($x214 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x223 (= $x40 $x214)))
 (let (($x359 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x366 (= $x332 $x359)))
 (let (($x51 (and $x366 $x223)))
 (let (($x290 (= $x51 true)))
 (let (($x322 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x105 (= $x322 $x221)))
 (let (($x139 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x219 (= $x139 $x222)))
 (let (($x354 (and $x219 $x105)))
 (let (($x67 (= $x354 true)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x38 (concat ?x199 (concat ?x61 (concat ?x187 ?x196)))))
 (let (($x99 (= ?x38 input.dst.llvm-%t)))
 (let (($x217 (= $x99 true)))
 (let (($x215 (= $x217 true)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x82 (concat ?x12 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x106 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x17 (bvadd ?x106 (_ bv3 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem ?x17) (concat ?x60 ?x82))))
 (let (($x198 (= (bvand ?x76 (_ bv4294967280 32)) ?x76)))
 (let (($x193 (= (bvand ?x106 (_ bv4294967292 32)) ?x106)))
 (let (($x192 (and $x193 $x198)))
 (let (($x179 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x186 (and true $x179)))
 (let (($x197 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x106 (bvsub ?x106 (_ bv4 32))) (bvult ?x106 (bvsub ?x106 (_ bv4 32))))))
 (let (($x189 (and (and (and $x197 $x186) $x193) $x192)))
 (let (($x183 (= true $x189)))
 (let (($x89 (not $x18)))
 (let (($x42 (=> $x89 $x183)))
 (let (($x218 (= $x42 true)))
 (let (($x216 (= $x218 true)))
 (let (($x304 (= $x216 true)))
 (let (($x209 (= input.dst.llvm-%t ?x38)))
 (let (($x142 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x53 (and $x142 $x209)))
 (let ((?x315 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x315)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (and $x135 $x147)))
 (let (($x317 (and $x164 $x151)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x97 $x317)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x163 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x84 (and (and (and $x163 true) $x148) $x53)))
 (let (($x210 (and $x42 $x84)))
 (let (($x70 (= (_ bv0 32) ?x76)))
 (let (($x177 (not $x70)))
 (let (($x55 (=> $x177 $x183)))
 (let (($x173 (= (bvand ?x175 (_ bv4294967280 32)) ?x175)))
 (let (($x160 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x8 (and $x160 $x173)))
 (let (($x152 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv8 32))) (bvult ?x47 (bvsub ?x47 (_ bv8 32))))))
 (let (($x169 (and (and (and $x152 $x186) $x160) $x8)))
 (let (($x206 (= true $x169)))
 (let (($x204 (=> $x70 $x206)))
 (let (($x101 (and $x204 $x55)))
 (let (($x205 (= true $x101)))
 (let (($x166 (or $x70 $x177)))
 (let (($x182 (and $x89 $x166)))
 (let (($x203 (=> $x182 $x205)))
 (let (($x303 (and $x203 $x210)))
 (let (($x401 (= $x303 true)))
 (let (($x108 (= $x401 true)))
 (let (($x213 (= $x108 true)))
 (let (($x36 (= $x203 true)))
 (let (($x208 (= $x36 true)))
 (let (($x321 (= $x208 true)))
 (let (($x98 (and $x89 $x70)))
 (let (($x155 (= $x98 true)))
 (let (($x167 (= $x155 true)))
 (let (($x170 (= $x167 true)))
 (let (($x297 (= $x142 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let (($x154 (and $x163 $x148)))
 (let (($x138 (= $x154 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x153 (and $x145 $x137)))
 (let (($x157 (and $x153 $x137)))
 (let (($x146 (and $x157 $x170)))
 (let (($x54 (and $x146 $x321)))
 (let (($x342 (and $x54 $x213)))
 (let (($x78 (and $x342 $x304)))
 (let (($x212 (and $x78 $x215)))
 (let (($x52 (and $x212 $x67)))
 (let (($x56 (and $x52 $x67)))
 (let (($x5 (and $x56 $x290)))
 (let (($x471 (and $x5 $x228)))
 (let (($x307 (and $x139 $x471)))
 (let (($x134 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x305 (and $x134 $x307)))
 (let (($x69 (= false false)))
 (let (($x306 (and $x69 $x305)))
 (let (($x229 (and $x69 $x306)))
 (let (($x13 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x107 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x46 $x13)))))))
 (let (($x29 (=> (and $x98 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x46 $x13)))))))
 (let (($x24 (bvugt ?x106 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x103 (=> (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x24)))))))
 (let (($x86 (=> (and $x89 (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x91 $x24)))))))
 (let (($x124 (and $x86 $x29)))
 (let (($x472 (and $x124 $x229)))
 (let (($x83 (=> $x472 $x109)))
 (not $x83)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5005X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x238 (concat ?x336 (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv8 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x247 (concat ?x273 ?x238))))
 (let (($x355 (= ?x242 ?x242)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x211 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x221 (bvuge ?x211 (_ bv1 32))))
 (let (($x356 (=> $x221 $x355)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x270 (concat ?x243 (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv4 32))))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5005X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x268 (concat ?x278 (concat ?x231 ?x270))))
 (let (($x289 (= ?x268 ?x268)))
 (let (($x267 (=> $x221 $x289)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5005X))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv2 32))) ?x233)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5005X (_ bv3 32))) ?x241)))
 (let (($x236 (= ?x232 ?x232)))
 (let (($x292 (=> $x221 $x236)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x180 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x47 (_ bv3 32))))
 (let ((?x175 (concat (select input.dst.llvm-mem ?x45) (concat ?x156 ?x180))))
 (let (($x237 (= (_ bv0 32) ?x175)))
 (let ((?x405 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x405 (_ bv1 32))))
 (let (($x234 (= $x221 $x403)))
 (let (($x235 (= ?x405 (_ bv0 32))))
 (let (($x222 (= ?x211 (_ bv0 32))))
 (let (($x288 (= $x222 $x235)))
 (let (($x261 (and (and (=> $x222 (= false false)) (= input.dst.llvm-%t ?x175)) $x288)))
 (let (($x244 (and (and (and (and $x261 $x234) $x292) $x267) $x356)))
 (let (($x245 (not true)))
 (let (($x239 (or $x245 $x244)))
 (let (($x227 (= true true)))
 (let (($x66 (and $x227 $x239)))
 (let (($x109 (= $x66 true)))
 (let (($x291 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x50 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x347 (= $x50 $x291)))
 (let (($x226 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x394 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x344 (= $x394 $x226)))
 (let (($x396 (and $x344 $x347)))
 (let (($x228 (= $x396 true)))
 (let (($x214 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x223 (= $x40 $x214)))
 (let (($x359 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x366 (= $x332 $x359)))
 (let (($x51 (and $x366 $x223)))
 (let (($x290 (= $x51 true)))
 (let (($x322 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x105 (= $x322 $x221)))
 (let (($x139 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x219 (= $x139 $x222)))
 (let (($x354 (and $x219 $x105)))
 (let (($x67 (= $x354 true)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x38 (concat ?x199 (concat ?x61 (concat ?x187 ?x196)))))
 (let (($x99 (= ?x38 input.dst.llvm-%t)))
 (let (($x217 (= $x99 true)))
 (let (($x215 (= $x217 true)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x82 (concat ?x12 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x106 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x17 (bvadd ?x106 (_ bv3 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem ?x17) (concat ?x60 ?x82))))
 (let (($x198 (= (bvand ?x76 (_ bv4294967280 32)) ?x76)))
 (let (($x193 (= (bvand ?x106 (_ bv4294967292 32)) ?x106)))
 (let (($x192 (and $x193 $x198)))
 (let (($x179 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x186 (and true $x179)))
 (let (($x197 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x106 (bvsub ?x106 (_ bv4 32))) (bvult ?x106 (bvsub ?x106 (_ bv4 32))))))
 (let (($x189 (and (and (and $x197 $x186) $x193) $x192)))
 (let (($x183 (= true $x189)))
 (let (($x89 (not $x18)))
 (let (($x42 (=> $x89 $x183)))
 (let (($x218 (= $x42 true)))
 (let (($x216 (= $x218 true)))
 (let (($x304 (= $x216 true)))
 (let (($x209 (= input.dst.llvm-%t ?x38)))
 (let (($x142 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x53 (and $x142 $x209)))
 (let ((?x315 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x315)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (and $x135 $x147)))
 (let (($x317 (and $x164 $x151)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x97 $x317)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x163 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x84 (and (and (and $x163 true) $x148) $x53)))
 (let (($x210 (and $x42 $x84)))
 (let (($x70 (= (_ bv0 32) ?x76)))
 (let (($x177 (not $x70)))
 (let (($x55 (=> $x177 $x183)))
 (let (($x173 (= (bvand ?x175 (_ bv4294967280 32)) ?x175)))
 (let (($x160 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x8 (and $x160 $x173)))
 (let (($x152 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv8 32))) (bvult ?x47 (bvsub ?x47 (_ bv8 32))))))
 (let (($x169 (and (and (and $x152 $x186) $x160) $x8)))
 (let (($x206 (= true $x169)))
 (let (($x204 (=> $x70 $x206)))
 (let (($x101 (and $x204 $x55)))
 (let (($x205 (= true $x101)))
 (let (($x166 (or $x70 $x177)))
 (let (($x182 (and $x89 $x166)))
 (let (($x203 (=> $x182 $x205)))
 (let (($x303 (and $x203 $x210)))
 (let (($x401 (= $x303 true)))
 (let (($x108 (= $x401 true)))
 (let (($x213 (= $x108 true)))
 (let (($x36 (= $x203 true)))
 (let (($x208 (= $x36 true)))
 (let (($x321 (= $x208 true)))
 (let (($x98 (and $x89 $x70)))
 (let (($x155 (= $x98 true)))
 (let (($x167 (= $x155 true)))
 (let (($x170 (= $x167 true)))
 (let (($x297 (= $x142 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let (($x154 (and $x163 $x148)))
 (let (($x138 (= $x154 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x153 (and $x145 $x137)))
 (let (($x157 (and $x153 $x137)))
 (let (($x146 (and $x157 $x170)))
 (let (($x54 (and $x146 $x321)))
 (let (($x342 (and $x54 $x213)))
 (let (($x78 (and $x342 $x304)))
 (let (($x212 (and $x78 $x215)))
 (let (($x52 (and $x212 $x67)))
 (let (($x56 (and $x52 $x67)))
 (let (($x5 (and $x56 $x290)))
 (let (($x471 (and $x5 $x228)))
 (let (($x307 (and $x139 $x471)))
 (let (($x134 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x305 (and $x134 $x307)))
 (let (($x69 (= false false)))
 (let (($x306 (and $x69 $x305)))
 (let (($x229 (and $x69 $x306)))
 (let (($x13 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x107 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x46 $x13)))))))
 (let (($x29 (=> (and $x98 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x46 $x13)))))))
 (let (($x24 (bvugt ?x106 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x103 (=> (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x24)))))))
 (let (($x86 (=> (and $x89 (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x91 $x24)))))))
 (let (($x124 (and $x86 $x29)))
 (let (($x472 (and $x124 $x229)))
 (let (($x83 (=> $x472 $x109)))
 (not $x83)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x12 (concat ?x92 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x62 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x39 (bvadd ?x62 (_ bv3 32))))
 (let ((?x98 (concat (select input.dst.llvm-mem ?x39) (concat ?x23 ?x12))))
 (let (($x20 (= (_ bv0 32) ?x98)))
 (let (($x302 (not $x20)))
 (let (($x198 (or $x20 $x302)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x89 (not $x18)))
 (let (($x192 (and $x89 $x198)))
 (let (($x189 (or $x18 $x192)))
 (let (($x183 (= $x189 true)))
 (let (($x55 (= $x183 true)))
 (let (($x200 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x204 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x202 (= $x204 $x200)))
 (let (($x169 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x173 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x206 (= $x173 $x169)))
 (let (($x194 (and $x206 $x202)))
 (let (($x190 (= $x194 true)))
 (let (($x143 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x298 (= $x174 $x143)))
 (let (($x299 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x301 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x156 (= $x301 $x299)))
 (let (($x180 (and $x156 $x298)))
 (let (($x49 (= $x180 true)))
 (let ((?x161 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (bvuge ?x161 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x186 (= $x165 $x179)))
 (let (($x35 (= ?x161 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x159 (= $x152 $x35)))
 (let (($x319 (and $x159 $x186)))
 (let (($x392 (= $x319 true)))
 (let ((?x162 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x177 (concat ?x167 (concat ?x153 ?x162)))))
 (let (($x182 (= ?x166 input.dst.llvm-%t)))
 (let (($x28 (= $x182 true)))
 (let (($x150 (= $x28 true)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x148)))
 (let ((?x315 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x151 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x315)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x317 (and $x164 $x151)))
 (let (($x138 (and $x317 $x154)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x296 (and $x95 $x138)))
 (let (($x131 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x147 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x131)))))))
 (let (($x145 (and $x147 $x296)))
 (let (($x141 (= $x145 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x21 (and $x142 $x150)))
 (let (($x316 (and $x21 $x392)))
 (let (($x175 (and $x316 $x49)))
 (let (($x197 (and $x175 $x190)))
 (let (($x136 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x57 (and $x136 $x197)))
 (let (($x80 (= false false)))
 (let (($x195 (and $x80 $x57)))
 (let (($x193 (and $x80 $x195)))
 (let ((?x114 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x130 (bvugt ?x114 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x114 (_ bv3 32)))))
 (let (($x10 (=> (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x47 (and $x89 $x20)))
 (let (($x104 (=> (and $x47 (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x58 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x122 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x125 $x58)))))))
 (let (($x120 (=> (and $x89 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x125 $x58)))))))
 (let (($x45 (and $x120 $x104)))
 (let (($x178 (and $x45 $x193)))
 (let (($x101 (=> $x178 $x55)))
 (not $x101))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x12 (concat ?x92 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x62 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x39 (bvadd ?x62 (_ bv3 32))))
 (let ((?x98 (concat (select input.dst.llvm-mem ?x39) (concat ?x23 ?x12))))
 (let (($x20 (= (_ bv0 32) ?x98)))
 (let (($x302 (not $x20)))
 (let (($x198 (or $x20 $x302)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x89 (not $x18)))
 (let (($x192 (and $x89 $x198)))
 (let (($x189 (or $x18 $x192)))
 (let (($x183 (= $x189 true)))
 (let (($x55 (= $x183 true)))
 (let (($x200 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x204 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x202 (= $x204 $x200)))
 (let (($x169 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x173 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x206 (= $x173 $x169)))
 (let (($x194 (and $x206 $x202)))
 (let (($x190 (= $x194 true)))
 (let (($x143 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x298 (= $x174 $x143)))
 (let (($x299 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x301 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x156 (= $x301 $x299)))
 (let (($x180 (and $x156 $x298)))
 (let (($x49 (= $x180 true)))
 (let ((?x161 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (bvuge ?x161 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x186 (= $x165 $x179)))
 (let (($x35 (= ?x161 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x159 (= $x152 $x35)))
 (let (($x319 (and $x159 $x186)))
 (let (($x392 (= $x319 true)))
 (let ((?x162 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x177 (concat ?x167 (concat ?x153 ?x162)))))
 (let (($x182 (= ?x166 input.dst.llvm-%t)))
 (let (($x28 (= $x182 true)))
 (let (($x150 (= $x28 true)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x148)))
 (let ((?x315 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x151 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x315)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x317 (and $x164 $x151)))
 (let (($x138 (and $x317 $x154)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x296 (and $x95 $x138)))
 (let (($x131 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x147 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x131)))))))
 (let (($x145 (and $x147 $x296)))
 (let (($x141 (= $x145 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x21 (and $x142 $x150)))
 (let (($x316 (and $x21 $x392)))
 (let (($x175 (and $x316 $x49)))
 (let (($x197 (and $x175 $x190)))
 (let (($x136 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x57 (and $x136 $x197)))
 (let (($x80 (= false false)))
 (let (($x195 (and $x80 $x57)))
 (let (($x193 (and $x80 $x195)))
 (let ((?x114 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x130 (bvugt ?x114 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x114 (_ bv3 32)))))
 (let (($x10 (=> (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x47 (and $x89 $x20)))
 (let (($x104 (=> (and $x47 (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x58 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x122 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x125 $x58)))))))
 (let (($x120 (=> (and $x89 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x125 $x58)))))))
 (let (($x45 (and $x120 $x104)))
 (let (($x178 (and $x45 $x193)))
 (let (($x101 (=> $x178 $x55)))
 (not $x101))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5106X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x293 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x293 (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv8 32))))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x48 (concat ?x334 ?x266))))
 (let (($x372 (= ?x272 ?x272)))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x259 (concat ?x234 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x370 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x360 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x328 (concat ?x360 (concat ?x370 ?x259))))
 (let (($x230 (= (_ bv0 32) ?x328)))
 (let ((?x233 (ite $x230 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (bvuge ?x233 (_ bv1 32))))
 (let (($x285 (=> $x351 $x372)))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x329 (concat ?x371 (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv4 32))))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x263 (concat ?x349 (concat ?x281 ?x329))))
 (let (($x257 (= ?x263 ?x263)))
 (let (($x310 (=> $x351 $x257)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5106X))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv2 32))) ?x311)))
 (let ((?x436 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv3 32))) ?x367)))
 (let (($x325 (= ?x436 ?x436)))
 (let (($x326 (=> $x351 $x325)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x92 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x63 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x63 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x96) (concat ?x76 ?x92))))
 (let ((?x397 (bvadd ?x47 (_ bv8 32))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x275))))
 (let (($x239 (= (_ bv0 32) ?x244)))
 (let ((?x66 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x357 (bvuge ?x66 (_ bv1 32))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x328 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x328 (_ bv8 32))))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x328 (_ bv8 32)) (_ bv2 32))) ?x406)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x328 (_ bv8 32)) (_ bv3 32))) ?x268)))
 (let (($x252 (= (_ bv0 32) ?x240)))
 (let ((?x335 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x335 (_ bv1 32))))
 (let (($x276 (= $x133 $x357)))
 (let (($x253 (=> $x351 $x276)))
 (let (($x81 (= false false)))
 (let (($x247 (= ?x335 (_ bv0 32))))
 (let (($x129 (and $x351 $x247)))
 (let (($x9 (=> $x129 $x81)))
 (let (($x109 (= ?x66 (_ bv0 32))))
 (let (($x83 (= $x247 $x109)))
 (let (($x72 (=> $x351 $x83)))
 (let (($x68 (= (_ bv0 32) ?x47)))
 (let ((?x232 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x232 (_ bv1 32))))
 (let (($x278 (= $x351 $x274)))
 (let (($x241 (= ?x233 (_ bv0 32))))
 (let (($x260 (=> $x241 $x81)))
 (let (($x283 (and (and (and (and (= ?x328 ?x47) (= $x241 (= ?x232 (_ bv0 32)))) $x260) $x278) $x72)))
 (let (($x313 (and (and (and (and (and $x283 $x9) $x253) $x326) $x310) $x285)))
 (let (($x235 (not true)))
 (let (($x402 (or $x235 $x313)))
 (let (($x405 (= true true)))
 (let (($x113 (and $x405 $x402)))
 (let (($x74 (= $x113 true)))
 (let (($x305 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x307 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x306 (= $x307 $x305)))
 (let (($x228 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x347 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x471 (= $x347 $x228)))
 (let (($x229 (and $x471 $x306)))
 (let (($x472 (= $x229 true)))
 (let (($x394 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x323 (= $x131 $x394)))
 (let (($x5 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x51 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x225 (= $x51 $x5)))
 (let (($x226 (and $x225 $x323)))
 (let (($x344 (= $x226 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x56 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x56 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x359 (= $x94 $x224)))
 (let (($x220 (= ?x56 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x332 (= $x52 $x220)))
 (let (($x366 (and $x332 $x359)))
 (let (($x40 (= $x366 true)))
 (let ((?x318 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x210 (concat ?x84 (concat ?x38 (concat ?x196 ?x318)))))
 (let (($x221 (= ?x210 input.dst.llvm-%t)))
 (let (($x105 (= $x221 true)))
 (let (($x354 (= $x105 true)))
 (let (($x203 (= (bvand ?x47 (_ bv4294967280 32)) ?x47)))
 (let (($x297 (= (bvand ?x63 (_ bv4294967292 32)) ?x63)))
 (let (($x36 (and $x297 $x203)))
 (let (($x180 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x49 (and true $x180)))
 (let (($x44 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x63 (bvsub ?x63 (_ bv4 32))) (bvult ?x63 (bvsub ?x63 (_ bv4 32))))))
 (let (($x54 (and (and (and $x44 $x49) $x297) $x36)))
 (let (($x42 (= true $x54)))
 (let (($x89 (not $x18)))
 (let (($x201 (=> $x89 $x42)))
 (let (($x211 (= $x201 true)))
 (let (($x222 (= $x211 true)))
 (let (($x219 (= $x222 true)))
 (let (($x161 (not $x68)))
 (let (($x15 (=> $x161 $x42)))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x204 (concat ?x206 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x13 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x13 (_ bv3 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem ?x75) (concat ?x202 ?x204))))
 (let (($x195 (= (bvand ?x197 (_ bv4294967280 32)) ?x197)))
 (let (($x173 (= (bvand ?x13 (_ bv4294967292 32)) ?x13)))
 (let (($x193 (and $x173 $x195)))
 (let (($x299 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x13 (bvsub ?x13 (_ bv8 32))) (bvult ?x13 (bvsub ?x13 (_ bv8 32))))))
 (let (($x198 (and (and (and $x299 $x49) $x173) $x193)))
 (let (($x192 (= true $x198)))
 (let (($x189 (=> $x68 $x192)))
 (let (($x358 (and $x189 $x15)))
 (let (($x393 (= true $x358)))
 (let (($x319 (or $x68 $x161)))
 (let (($x392 (and $x89 $x319)))
 (let (($x199 (=> $x392 $x393)))
 (let (($x215 (= $x199 true)))
 (let (($x212 (= $x215 true)))
 (let (($x132 (= $x212 true)))
 (let (($x303 (= input.dst.llvm-%t ?x210)))
 (let (($x182 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x401 (and $x182 $x303)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x177 (= (_ bv0 32) ?x146)))
 (let ((?x141 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x158 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x141)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x145 $x158)))
 (let (($x155 (and $x142 $x177)))
 (let (($x135 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x167 (and $x135 $x155)))
 (let (($x315 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x315)))))))
 (let (($x342 (and (and (and $x296 true) $x167) $x401)))
 (let (($x218 (and $x201 $x342)))
 (let (($x216 (and $x199 $x218)))
 (let (($x304 (= $x216 true)))
 (let (($x78 (= $x304 true)))
 (let (($x99 (= $x78 true)))
 (let (($x35 (and $x89 $x161)))
 (let (($x159 (= $x35 true)))
 (let (($x165 (= $x159 true)))
 (let (($x179 (= $x165 true)))
 (let (($x28 (= $x182 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let (($x137 (and $x296 $x167)))
 (let (($x153 (= $x137 true)))
 (let (($x162 (= $x153 true)))
 (let (($x157 (= $x162 true)))
 (let (($x300 (and $x157 $x21)))
 (let (($x152 (and $x300 $x21)))
 (let (($x186 (and $x152 $x179)))
 (let (($x217 (and $x186 $x99)))
 (let (($x139 (and $x217 $x132)))
 (let (($x322 (and $x139 $x219)))
 (let (($x67 (and $x322 $x354)))
 (let (($x214 (and $x67 $x40)))
 (let (($x223 (and $x214 $x40)))
 (let (($x50 (and $x223 $x344)))
 (let (($x227 (and $x50 $x472)))
 (let (($x163 (and $x94 $x131)))
 (let (($x245 (and $x163 $x227)))
 (let (($x30 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x434 (and $x30 $x245)))
 (let (($x361 (and $x81 $x434)))
 (let (($x250 (and $x81 $x361)))
 (let (($x29 (bvugt ?x13 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x134 (=> (bvule ?x13 (bvsub (bvadd ?x13 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x114 (and $x89 $x68)))
 (let (($x69 (=> (and $x114 (bvule ?x13 (bvsub (bvadd ?x13 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x86 (bvugt ?x63 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x64 (=> (bvule ?x63 (bvsub (bvadd ?x63 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x86)))))))
 (let (($x17 (=> (and $x89 (bvule ?x63 (bvsub (bvadd ?x63 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x86)))))))
 (let (($x26 (and $x17 $x69)))
 (let (($x237 (and $x26 $x250)))
 (let (($x126 (=> $x237 $x74)))
 (not $x126))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5106X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x293 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x293 (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv8 32))))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x48 (concat ?x334 ?x266))))
 (let (($x372 (= ?x272 ?x272)))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x259 (concat ?x234 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x370 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x360 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x328 (concat ?x360 (concat ?x370 ?x259))))
 (let (($x230 (= (_ bv0 32) ?x328)))
 (let ((?x233 (ite $x230 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (bvuge ?x233 (_ bv1 32))))
 (let (($x285 (=> $x351 $x372)))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x329 (concat ?x371 (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv4 32))))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5106X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x263 (concat ?x349 (concat ?x281 ?x329))))
 (let (($x257 (= ?x263 ?x263)))
 (let (($x310 (=> $x351 $x257)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5106X))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv2 32))) ?x311)))
 (let ((?x436 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5106X (_ bv3 32))) ?x367)))
 (let (($x325 (= ?x436 ?x436)))
 (let (($x326 (=> $x351 $x325)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x92 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x63 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x63 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x96) (concat ?x76 ?x92))))
 (let ((?x397 (bvadd ?x47 (_ bv8 32))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x275))))
 (let (($x239 (= (_ bv0 32) ?x244)))
 (let ((?x66 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x357 (bvuge ?x66 (_ bv1 32))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x328 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x328 (_ bv8 32))))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x328 (_ bv8 32)) (_ bv2 32))) ?x406)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x328 (_ bv8 32)) (_ bv3 32))) ?x268)))
 (let (($x252 (= (_ bv0 32) ?x240)))
 (let ((?x335 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x335 (_ bv1 32))))
 (let (($x276 (= $x133 $x357)))
 (let (($x253 (=> $x351 $x276)))
 (let (($x81 (= false false)))
 (let (($x247 (= ?x335 (_ bv0 32))))
 (let (($x129 (and $x351 $x247)))
 (let (($x9 (=> $x129 $x81)))
 (let (($x109 (= ?x66 (_ bv0 32))))
 (let (($x83 (= $x247 $x109)))
 (let (($x72 (=> $x351 $x83)))
 (let (($x68 (= (_ bv0 32) ?x47)))
 (let ((?x232 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x232 (_ bv1 32))))
 (let (($x278 (= $x351 $x274)))
 (let (($x241 (= ?x233 (_ bv0 32))))
 (let (($x260 (=> $x241 $x81)))
 (let (($x283 (and (and (and (and (= ?x328 ?x47) (= $x241 (= ?x232 (_ bv0 32)))) $x260) $x278) $x72)))
 (let (($x313 (and (and (and (and (and $x283 $x9) $x253) $x326) $x310) $x285)))
 (let (($x235 (not true)))
 (let (($x402 (or $x235 $x313)))
 (let (($x405 (= true true)))
 (let (($x113 (and $x405 $x402)))
 (let (($x74 (= $x113 true)))
 (let (($x305 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x307 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x306 (= $x307 $x305)))
 (let (($x228 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x347 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x471 (= $x347 $x228)))
 (let (($x229 (and $x471 $x306)))
 (let (($x472 (= $x229 true)))
 (let (($x394 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x323 (= $x131 $x394)))
 (let (($x5 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x51 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x225 (= $x51 $x5)))
 (let (($x226 (and $x225 $x323)))
 (let (($x344 (= $x226 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x56 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x56 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x359 (= $x94 $x224)))
 (let (($x220 (= ?x56 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x332 (= $x52 $x220)))
 (let (($x366 (and $x332 $x359)))
 (let (($x40 (= $x366 true)))
 (let ((?x318 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x210 (concat ?x84 (concat ?x38 (concat ?x196 ?x318)))))
 (let (($x221 (= ?x210 input.dst.llvm-%t)))
 (let (($x105 (= $x221 true)))
 (let (($x354 (= $x105 true)))
 (let (($x203 (= (bvand ?x47 (_ bv4294967280 32)) ?x47)))
 (let (($x297 (= (bvand ?x63 (_ bv4294967292 32)) ?x63)))
 (let (($x36 (and $x297 $x203)))
 (let (($x180 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x49 (and true $x180)))
 (let (($x44 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x63 (bvsub ?x63 (_ bv4 32))) (bvult ?x63 (bvsub ?x63 (_ bv4 32))))))
 (let (($x54 (and (and (and $x44 $x49) $x297) $x36)))
 (let (($x42 (= true $x54)))
 (let (($x89 (not $x18)))
 (let (($x201 (=> $x89 $x42)))
 (let (($x211 (= $x201 true)))
 (let (($x222 (= $x211 true)))
 (let (($x219 (= $x222 true)))
 (let (($x161 (not $x68)))
 (let (($x15 (=> $x161 $x42)))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x204 (concat ?x206 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x13 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x13 (_ bv3 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem ?x75) (concat ?x202 ?x204))))
 (let (($x195 (= (bvand ?x197 (_ bv4294967280 32)) ?x197)))
 (let (($x173 (= (bvand ?x13 (_ bv4294967292 32)) ?x13)))
 (let (($x193 (and $x173 $x195)))
 (let (($x299 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x13 (bvsub ?x13 (_ bv8 32))) (bvult ?x13 (bvsub ?x13 (_ bv8 32))))))
 (let (($x198 (and (and (and $x299 $x49) $x173) $x193)))
 (let (($x192 (= true $x198)))
 (let (($x189 (=> $x68 $x192)))
 (let (($x358 (and $x189 $x15)))
 (let (($x393 (= true $x358)))
 (let (($x319 (or $x68 $x161)))
 (let (($x392 (and $x89 $x319)))
 (let (($x199 (=> $x392 $x393)))
 (let (($x215 (= $x199 true)))
 (let (($x212 (= $x215 true)))
 (let (($x132 (= $x212 true)))
 (let (($x303 (= input.dst.llvm-%t ?x210)))
 (let (($x182 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x401 (and $x182 $x303)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x177 (= (_ bv0 32) ?x146)))
 (let ((?x141 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x158 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x141)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x145 $x158)))
 (let (($x155 (and $x142 $x177)))
 (let (($x135 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x167 (and $x135 $x155)))
 (let (($x315 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x315)))))))
 (let (($x342 (and (and (and $x296 true) $x167) $x401)))
 (let (($x218 (and $x201 $x342)))
 (let (($x216 (and $x199 $x218)))
 (let (($x304 (= $x216 true)))
 (let (($x78 (= $x304 true)))
 (let (($x99 (= $x78 true)))
 (let (($x35 (and $x89 $x161)))
 (let (($x159 (= $x35 true)))
 (let (($x165 (= $x159 true)))
 (let (($x179 (= $x165 true)))
 (let (($x28 (= $x182 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let (($x137 (and $x296 $x167)))
 (let (($x153 (= $x137 true)))
 (let (($x162 (= $x153 true)))
 (let (($x157 (= $x162 true)))
 (let (($x300 (and $x157 $x21)))
 (let (($x152 (and $x300 $x21)))
 (let (($x186 (and $x152 $x179)))
 (let (($x217 (and $x186 $x99)))
 (let (($x139 (and $x217 $x132)))
 (let (($x322 (and $x139 $x219)))
 (let (($x67 (and $x322 $x354)))
 (let (($x214 (and $x67 $x40)))
 (let (($x223 (and $x214 $x40)))
 (let (($x50 (and $x223 $x344)))
 (let (($x227 (and $x50 $x472)))
 (let (($x163 (and $x94 $x131)))
 (let (($x245 (and $x163 $x227)))
 (let (($x30 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x434 (and $x30 $x245)))
 (let (($x361 (and $x81 $x434)))
 (let (($x250 (and $x81 $x361)))
 (let (($x29 (bvugt ?x13 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x134 (=> (bvule ?x13 (bvsub (bvadd ?x13 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x114 (and $x89 $x68)))
 (let (($x69 (=> (and $x114 (bvule ?x13 (bvsub (bvadd ?x13 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x86 (bvugt ?x63 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x64 (=> (bvule ?x63 (bvsub (bvadd ?x63 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x86)))))))
 (let (($x17 (=> (and $x89 (bvule ?x63 (bvsub (bvadd ?x63 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x86)))))))
 (let (($x26 (and $x17 $x69)))
 (let (($x237 (and $x26 $x250)))
 (let (($x126 (=> $x237 $x74)))
 (not $x126))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5140X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x65 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv8 32))))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x293 (concat ?x348 (concat ?x48 ?x271))))
 (let (($x258 (= ?x293 ?x293)))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x261 (concat ?x234 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x363 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x233 (concat ?x230 (concat ?x363 ?x261))))
 (let (($x241 (= (_ bv0 32) ?x233)))
 (let ((?x232 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x368 (bvuge ?x232 (_ bv1 32))))
 (let (($x266 (=> $x368 $x258)))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x362 (concat ?x309 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv4 32))))))
 (let ((?x352 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x256 (concat ?x371 (concat ?x352 ?x362))))
 (let (($x329 (= ?x256 ?x256)))
 (let (($x350 (=> $x368 $x329)))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5140X))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv2 32))) ?x264)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv3 32))) ?x280)))
 (let (($x367 (= ?x311 ?x311)))
 (let (($x436 (=> $x368 $x367)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x169 (concat ?x202 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x130 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x130 (_ bv3 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem ?x124) (concat ?x8 ?x169))))
 (let ((?x238 (bvadd ?x197 (_ bv8 32))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x273))))
 (let (($x83 (= (_ bv0 32) ?x109)))
 (let ((?x72 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x72 (_ bv1 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x233 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x233 (_ bv8 32))))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x233 (_ bv8 32)) (_ bv2 32))) ?x278)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x233 (_ bv8 32)) (_ bv3 32))) ?x289)))
 (let (($x331 (= (_ bv0 32) ?x249)))
 (let ((?x243 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x243 (_ bv1 32))))
 (let (($x357 (= $x22 $x133)))
 (let (($x276 (=> $x368 $x357)))
 (let (($x283 (= ?x72 (_ bv0 32))))
 (let (($x231 (= ?x243 (_ bv0 32))))
 (let (($x129 (= $x231 $x283)))
 (let (($x9 (=> $x368 $x129)))
 (let (($x252 (= (_ bv0 32) ?x197)))
 (let ((?x335 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x355 (bvuge ?x335 (_ bv1 32))))
 (let (($x356 (= $x368 $x355)))
 (let (($x247 (= ?x335 (_ bv0 32))))
 (let (($x236 (= ?x232 (_ bv0 32))))
 (let (($x397 (= $x236 $x247)))
 (let (($x240 (= ?x233 ?x197)))
 (let (($x128 (= false false)))
 (let (($x406 (and $x368 $x231)))
 (let (($x268 (=> $x406 $x128)))
 (let (($x292 (=> $x236 $x128)))
 (let (($x402 (and (and (and (and (and (and $x292 $x268) $x240) $x397) $x356) $x9) $x276)))
 (let (($x126 (and (and (and $x402 $x436) $x350) $x266)))
 (let (($x360 (not true)))
 (let (($x181 (or $x360 $x126)))
 (let (($x324 (= true true)))
 (let (($x88 (and $x324 $x181)))
 (let (($x106 (= $x88 true)))
 (let (($x472 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x229 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x227 (= $x229 $x472)))
 (let (($x305 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x471 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x306 (= $x471 $x305)))
 (let (($x245 (and $x306 $x227)))
 (let (($x434 (= $x245 true)))
 (let (($x344 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x50 (= $x147 $x344)))
 (let (($x323 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x225 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x226 (= $x225 $x323)))
 (let (($x291 (and $x226 $x50)))
 (let (($x347 (= $x291 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x224 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x224 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x214 (= $x131 $x40)))
 (let (($x359 (= ?x224 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x366 (= $x332 $x359)))
 (let (($x223 (and $x366 $x214)))
 (let (($x51 (= $x223 true)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x318 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x303 (concat ?x210 (concat ?x318 (concat ?x38 ?x84)))))
 (let (($x67 (= ?x303 input.dst.llvm-%t)))
 (let (($x52 (= $x67 true)))
 (let (($x56 (= $x52 true)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x60 (concat ?x23 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x91 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x119 (bvadd ?x91 (_ bv3 32))))
 (let ((?x114 (concat (select input.dst.llvm-mem ?x119) (concat ?x98 ?x60))))
 (let (($x203 (= (bvand ?x114 (_ bv4294967280 32)) ?x114)))
 (let (($x321 (= (bvand ?x91 (_ bv4294967292 32)) ?x91)))
 (let (($x36 (and $x321 $x203)))
 (let (($x178 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x175 (and true $x178)))
 (let (($x140 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x91 (bvsub ?x91 (_ bv4 32))) (bvult ?x91 (bvsub ?x91 (_ bv4 32))))))
 (let (($x15 (and (and (and $x140 $x175) $x321) $x36)))
 (let (($x358 (= true $x15)))
 (let (($x89 (not $x18)))
 (let (($x213 (=> $x89 $x358)))
 (let (($x322 (= $x213 true)))
 (let (($x221 (= $x322 true)))
 (let (($x105 (= $x221 true)))
 (let (($x46 (= (_ bv0 32) ?x114)))
 (let (($x392 (not $x46)))
 (let (($x393 (=> $x392 $x358)))
 (let (($x195 (= (bvand ?x197 (_ bv4294967280 32)) ?x197)))
 (let (($x302 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x193 (and $x302 $x195)))
 (let (($x156 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv8 32))) (bvult ?x130 (bvsub ?x130 (_ bv8 32))))))
 (let (($x189 (and (and (and $x156 $x175) $x302) $x193)))
 (let (($x55 (= true $x189)))
 (let (($x183 (=> $x46 $x55)))
 (let (($x199 (and $x183 $x393)))
 (let (($x201 (= true $x199)))
 (let (($x160 (or $x46 $x392)))
 (let (($x316 (and $x89 $x160)))
 (let (($x108 (=> $x316 $x201)))
 (let (($x139 (= $x108 true)))
 (let (($x211 (= $x139 true)))
 (let (($x222 (= $x211 true)))
 (let (($x401 (= input.dst.llvm-%t ?x303)))
 (let (($x21 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x342 (and $x21 $x401)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x167)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x142 $x177)))
 (let (($x153 (and $x155 $x137)))
 (let (($x164 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x164 $x153)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x158 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x148 $x154)))))))
 (let (($x304 (and (and (and $x158 true) $x162) $x342)))
 (let (($x78 (and $x213 $x304)))
 (let (($x99 (and $x108 $x78)))
 (let (($x217 (= $x99 true)))
 (let (($x215 (= $x217 true)))
 (let (($x212 (= $x215 true)))
 (let (($x13 (and $x89 $x46)))
 (let (($x165 (= $x13 true)))
 (let (($x179 (= $x165 true)))
 (let (($x186 (= $x179 true)))
 (let (($x300 (= $x21 true)))
 (let (($x152 (= $x300 true)))
 (let (($x161 (= $x152 true)))
 (let (($x157 (and $x158 $x162)))
 (let (($x170 (= $x157 true)))
 (let (($x166 (= $x170 true)))
 (let (($x182 (= $x166 true)))
 (let (($x35 (and $x182 $x161)))
 (let (($x159 (and $x35 $x161)))
 (let (($x319 (and $x159 $x186)))
 (let (($x132 (and $x319 $x212)))
 (let (($x219 (and $x132 $x222)))
 (let (($x354 (and $x219 $x105)))
 (let (($x220 (and $x354 $x56)))
 (let (($x290 (and $x220 $x51)))
 (let (($x5 (and $x290 $x51)))
 (let (($x396 (and $x5 $x347)))
 (let (($x361 (and $x396 $x434)))
 (let (($x295 (and $x131 $x147)))
 (let (($x250 (and $x295 $x361)))
 (let (($x94 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x237 (and $x94 $x250)))
 (let (($x405 (and $x128 $x237)))
 (let (($x235 (and $x128 $x405)))
 (let (($x104 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x136 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x80 (=> (and $x13 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x120 (bvugt ?x91 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x71 (=> (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x120)))))))
 (let (($x39 (=> (and $x89 (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x122 $x120)))))))
 (let (($x75 (and $x39 $x80)))
 (let (($x288 (and $x75 $x235)))
 (let (($x314 (=> $x288 $x106)))
 (not $x314)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5140X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x65 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv8 32))))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x293 (concat ?x348 (concat ?x48 ?x271))))
 (let (($x258 (= ?x293 ?x293)))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x261 (concat ?x234 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x363 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x233 (concat ?x230 (concat ?x363 ?x261))))
 (let (($x241 (= (_ bv0 32) ?x233)))
 (let ((?x232 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x368 (bvuge ?x232 (_ bv1 32))))
 (let (($x266 (=> $x368 $x258)))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x362 (concat ?x309 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv4 32))))))
 (let ((?x352 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x256 (concat ?x371 (concat ?x352 ?x362))))
 (let (($x329 (= ?x256 ?x256)))
 (let (($x350 (=> $x368 $x329)))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5140X))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv2 32))) ?x264)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv3 32))) ?x280)))
 (let (($x367 (= ?x311 ?x311)))
 (let (($x436 (=> $x368 $x367)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x169 (concat ?x202 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x130 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x130 (_ bv3 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem ?x124) (concat ?x8 ?x169))))
 (let ((?x238 (bvadd ?x197 (_ bv8 32))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x273))))
 (let (($x83 (= (_ bv0 32) ?x109)))
 (let ((?x72 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x72 (_ bv1 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x233 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x233 (_ bv8 32))))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x233 (_ bv8 32)) (_ bv2 32))) ?x278)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x233 (_ bv8 32)) (_ bv3 32))) ?x289)))
 (let (($x331 (= (_ bv0 32) ?x249)))
 (let ((?x243 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x243 (_ bv1 32))))
 (let (($x357 (= $x22 $x133)))
 (let (($x276 (=> $x368 $x357)))
 (let (($x283 (= ?x72 (_ bv0 32))))
 (let (($x231 (= ?x243 (_ bv0 32))))
 (let (($x129 (= $x231 $x283)))
 (let (($x9 (=> $x368 $x129)))
 (let (($x252 (= (_ bv0 32) ?x197)))
 (let ((?x335 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x355 (bvuge ?x335 (_ bv1 32))))
 (let (($x356 (= $x368 $x355)))
 (let (($x247 (= ?x335 (_ bv0 32))))
 (let (($x236 (= ?x232 (_ bv0 32))))
 (let (($x397 (= $x236 $x247)))
 (let (($x240 (= ?x233 ?x197)))
 (let (($x128 (= false false)))
 (let (($x406 (and $x368 $x231)))
 (let (($x268 (=> $x406 $x128)))
 (let (($x292 (=> $x236 $x128)))
 (let (($x402 (and (and (and (and (and (and $x292 $x268) $x240) $x397) $x356) $x9) $x276)))
 (let (($x126 (and (and (and $x402 $x436) $x350) $x266)))
 (let (($x360 (not true)))
 (let (($x181 (or $x360 $x126)))
 (let (($x324 (= true true)))
 (let (($x88 (and $x324 $x181)))
 (let (($x106 (= $x88 true)))
 (let (($x472 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x229 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x227 (= $x229 $x472)))
 (let (($x305 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x471 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x306 (= $x471 $x305)))
 (let (($x245 (and $x306 $x227)))
 (let (($x434 (= $x245 true)))
 (let (($x344 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x50 (= $x147 $x344)))
 (let (($x323 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x225 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x226 (= $x225 $x323)))
 (let (($x291 (and $x226 $x50)))
 (let (($x347 (= $x291 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x224 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x224 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x214 (= $x131 $x40)))
 (let (($x359 (= ?x224 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x366 (= $x332 $x359)))
 (let (($x223 (and $x366 $x214)))
 (let (($x51 (= $x223 true)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x318 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x303 (concat ?x210 (concat ?x318 (concat ?x38 ?x84)))))
 (let (($x67 (= ?x303 input.dst.llvm-%t)))
 (let (($x52 (= $x67 true)))
 (let (($x56 (= $x52 true)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x60 (concat ?x23 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x91 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x119 (bvadd ?x91 (_ bv3 32))))
 (let ((?x114 (concat (select input.dst.llvm-mem ?x119) (concat ?x98 ?x60))))
 (let (($x203 (= (bvand ?x114 (_ bv4294967280 32)) ?x114)))
 (let (($x321 (= (bvand ?x91 (_ bv4294967292 32)) ?x91)))
 (let (($x36 (and $x321 $x203)))
 (let (($x178 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x175 (and true $x178)))
 (let (($x140 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x91 (bvsub ?x91 (_ bv4 32))) (bvult ?x91 (bvsub ?x91 (_ bv4 32))))))
 (let (($x15 (and (and (and $x140 $x175) $x321) $x36)))
 (let (($x358 (= true $x15)))
 (let (($x89 (not $x18)))
 (let (($x213 (=> $x89 $x358)))
 (let (($x322 (= $x213 true)))
 (let (($x221 (= $x322 true)))
 (let (($x105 (= $x221 true)))
 (let (($x46 (= (_ bv0 32) ?x114)))
 (let (($x392 (not $x46)))
 (let (($x393 (=> $x392 $x358)))
 (let (($x195 (= (bvand ?x197 (_ bv4294967280 32)) ?x197)))
 (let (($x302 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x193 (and $x302 $x195)))
 (let (($x156 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv8 32))) (bvult ?x130 (bvsub ?x130 (_ bv8 32))))))
 (let (($x189 (and (and (and $x156 $x175) $x302) $x193)))
 (let (($x55 (= true $x189)))
 (let (($x183 (=> $x46 $x55)))
 (let (($x199 (and $x183 $x393)))
 (let (($x201 (= true $x199)))
 (let (($x160 (or $x46 $x392)))
 (let (($x316 (and $x89 $x160)))
 (let (($x108 (=> $x316 $x201)))
 (let (($x139 (= $x108 true)))
 (let (($x211 (= $x139 true)))
 (let (($x222 (= $x211 true)))
 (let (($x401 (= input.dst.llvm-%t ?x303)))
 (let (($x21 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x342 (and $x21 $x401)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x167)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x142 $x177)))
 (let (($x153 (and $x155 $x137)))
 (let (($x164 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x164 $x153)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x158 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x148 $x154)))))))
 (let (($x304 (and (and (and $x158 true) $x162) $x342)))
 (let (($x78 (and $x213 $x304)))
 (let (($x99 (and $x108 $x78)))
 (let (($x217 (= $x99 true)))
 (let (($x215 (= $x217 true)))
 (let (($x212 (= $x215 true)))
 (let (($x13 (and $x89 $x46)))
 (let (($x165 (= $x13 true)))
 (let (($x179 (= $x165 true)))
 (let (($x186 (= $x179 true)))
 (let (($x300 (= $x21 true)))
 (let (($x152 (= $x300 true)))
 (let (($x161 (= $x152 true)))
 (let (($x157 (and $x158 $x162)))
 (let (($x170 (= $x157 true)))
 (let (($x166 (= $x170 true)))
 (let (($x182 (= $x166 true)))
 (let (($x35 (and $x182 $x161)))
 (let (($x159 (and $x35 $x161)))
 (let (($x319 (and $x159 $x186)))
 (let (($x132 (and $x319 $x212)))
 (let (($x219 (and $x132 $x222)))
 (let (($x354 (and $x219 $x105)))
 (let (($x220 (and $x354 $x56)))
 (let (($x290 (and $x220 $x51)))
 (let (($x5 (and $x290 $x51)))
 (let (($x396 (and $x5 $x347)))
 (let (($x361 (and $x396 $x434)))
 (let (($x295 (and $x131 $x147)))
 (let (($x250 (and $x295 $x361)))
 (let (($x94 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x237 (and $x94 $x250)))
 (let (($x405 (and $x128 $x237)))
 (let (($x235 (and $x128 $x405)))
 (let (($x104 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x136 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x80 (=> (and $x13 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x120 (bvugt ?x91 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x71 (=> (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x120)))))))
 (let (($x39 (=> (and $x89 (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x122 $x120)))))))
 (let (($x75 (and $x39 $x80)))
 (let (($x288 (and $x75 $x235)))
 (let (($x314 (=> $x288 $x106)))
 (not $x314)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x006aa7b4)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x00000020)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00040000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000200)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xd5)
                                #x00d56528
                                #x20)
                         #x006aa7b7
                         #x00)
                  #x00d56529
                  #x45)))
(let ((a!2 (store (store (store (store a!1 #x00d5652b #x00) #x006aa7b4 #x20)
                         #x006aa7b5
                         #x65)
                  #x00d56527
                  #x00)))
  (store (store (store a!2 #x00d56524 #x00) #x00d56526 #x00) #x00d56525 #x00))))
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00d56520)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x006aa7b4)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x006aa7b7)
  (define-fun input.ind-%var5140X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5140X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4026531845 32) (_ bv8 8)) (_ bv4026531846 32) (_ bv16 8)) (_ bv1050632 32) (_ bv16 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv1050624 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4026531844 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4026531844 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4026531847 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5140X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x353 (concat ?x185 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv8 32))))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x364 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x339 (concat ?x364 (concat ?x171 ?x353))))
 (let (($x340 (= ?x339 ?x339)))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x129 (concat ?x283 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x357 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x276 (concat ?x357 (concat ?x313 ?x129))))
 (let (($x402 (= (_ bv0 32) ?x276)))
 (let ((?x253 (ite $x402 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x253 (_ bv1 32))))
 (let (($x345 (=> $x254 $x340)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x404 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv4 32))))))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x168 (concat ?x121 (concat ?x31 ?x6))))
 (let (($x337 (= ?x168 ?x168)))
 (let (($x398 (=> $x254 $x337)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5140X))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv2 32))) ?x287)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv3 32))) ?x127)))
 (let (($x279 (= ?x277 ?x277)))
 (let (($x286 (=> $x254 $x279)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x202 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x29 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x29 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x45) (concat ?x169 ?x202))))
 (let ((?x74 (bvadd ?x57 (_ bv8 32))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x284))))
 (let (($x293 (= (_ bv0 32) ?x369)))
 (let ((?x258 (ite $x293 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x258 (_ bv1 32))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x276 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x276 (_ bv8 32))))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x276 (_ bv8 32)) (_ bv2 32))) ?x264)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x276 (_ bv8 32)) (_ bv3 32))) ?x367)))
 (let (($x435 (= (_ bv0 32) ?x325)))
 (let ((?x371 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x371 (_ bv1 32))))
 (let (($x314 (= $x88 $x106)))
 (let (($x61 (=> $x254 $x314)))
 (let (($x266 (= ?x258 (_ bv0 32))))
 (let (($x349 (= ?x371 (_ bv0 32))))
 (let (($x126 (= $x349 $x266)))
 (let (($x181 (=> $x254 $x126)))
 (let (($x326 (= (_ bv0 32) ?x57)))
 (let ((?x362 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x362 (_ bv1 32))))
 (let (($x350 (= $x254 $x329)))
 (let (($x281 (= ?x362 (_ bv0 32))))
 (let (($x116 (= ?x253 (_ bv0 32))))
 (let (($x256 (= $x116 $x281)))
 (let (($x309 (= ?x276 ?x57)))
 (let (($x144 (= false false)))
 (let (($x352 (and $x254 $x349)))
 (let (($x59 (=> $x352 $x144)))
 (let (($x395 (=> $x116 $x144)))
 (let (($x470 (and (and (and (and (and (and $x395 $x59) $x309) $x256) $x350) $x181) $x61)))
 (let (($x400 (and (and (and $x470 $x286) $x398) $x345)))
 (let (($x244 (not true)))
 (let (($x365 (or $x244 $x400)))
 (let (($x273 (= true true)))
 (let (($x430 (and $x273 $x365)))
 (let (($x437 (= $x430 true)))
 (let (($x397 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x372 (= $x247 $x397)))
 (let (($x252 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x240 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x335 (= $x240 $x252)))
 (let (($x406 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x231 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x268 (= $x231 $x406)))
 (let (($x331 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x289 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x243 (= $x289 $x331)))
 (let (($x282 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x238 (and (and (and (and $x282 $x243) $x268) $x335) $x372)))
 (let (($x239 (= $x238 true)))
 (let (($x324 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x260 (=> $x324 $x144)))
 (let (($x292 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x368 (= $x230 $x292)))
 (let (($x232 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x236 (= $x324 $x232)))
 (let (($x270 (and (and $x236 $x368) $x260)))
 (let (($x432 (= $x270 true)))
 (let (($x259 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x363 (= $x230 $x259)))
 (let (($x246 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x248 (= $x324 $x246)))
 (let (($x405 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x235 (= $x315 $x405)))
 (let (($x250 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x291 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x237 (= $x291 $x250)))
 (let (($x434 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x261 (and (and (and (and $x434 $x237) $x235) $x248) $x363)))
 (let (($x328 (= $x261 true)))
 (let (($x305 (=> $x291 $x144)))
 (let (($x471 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x307 (= $x315 $x471)))
 (let (($x396 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x228 (= $x291 $x396)))
 (let (($x229 (and (and $x228 $x307) $x305)))
 (let (($x472 (= $x229 true)))
 (let (($x40 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x225 (=> $x40 $x144)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x214 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x290 (bvuge ?x214 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x5 (= $x147 $x290)))
 (let (($x223 (= ?x214 (_ bv0 32))))
 (let (($x51 (= $x40 $x223)))
 (let (($x323 (and (and $x51 $x5) $x225)))
 (let (($x226 (= $x323 true)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x342 (concat ?x401 (concat ?x187 (concat ?x207 ?x196)))))
 (let (($x332 (= ?x342 input.dst.llvm-%t)))
 (let (($x224 (= $x332 true)))
 (let (($x359 (= $x224 true)))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x23 (concat ?x76 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x125 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x110 (bvadd ?x125 (_ bv3 32))))
 (let ((?x13 (concat (select input.dst.llvm-mem ?x110) (concat ?x47 ?x23))))
 (let (($x36 (= (bvand ?x13 (_ bv4294967280 32)) ?x13)))
 (let (($x93 (= (bvand ?x125 (_ bv4294967292 32)) ?x125)))
 (let (($x15 (and $x93 $x36)))
 (let (($x184 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x173 (and true $x184)))
 (let (($x321 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x125 (bvsub ?x125 (_ bv4 32))) (bvult ?x125 (bvsub ?x125 (_ bv4 32))))))
 (let (($x199 (and (and (and $x321 $x173) $x93) $x15)))
 (let (($x201 (= true $x199)))
 (let (($x89 (not $x18)))
 (let (($x209 (=> $x89 $x201)))
 (let (($x67 (= $x209 true)))
 (let (($x52 (= $x67 true)))
 (let (($x56 (= $x52 true)))
 (let (($x73 (= (_ bv0 32) ?x13)))
 (let (($x176 (not $x73)))
 (let (($x108 (=> $x176 $x201)))
 (let (($x193 (= (bvand ?x57 (_ bv4294967280 32)) ?x57)))
 (let (($x194 (= (bvand ?x29 (_ bv4294967292 32)) ?x29)))
 (let (($x189 (and $x194 $x193)))
 (let (($x180 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x29 (bvsub ?x29 (_ bv8 32))) (bvult ?x29 (bvsub ?x29 (_ bv8 32))))))
 (let (($x205 (and (and (and $x180 $x173) $x194) $x189)))
 (let (($x101 (= true $x205)))
 (let (($x44 (=> $x73 $x101)))
 (let (($x213 (and $x44 $x108)))
 (let (($x218 (= true $x213)))
 (let (($x301 (or $x73 $x176)))
 (let (($x299 (and $x89 $x301)))
 (let (($x216 (=> $x299 $x218)))
 (let (($x322 (= $x216 true)))
 (let (($x221 (= $x322 true)))
 (let (($x105 (= $x221 true)))
 (let (($x304 (= input.dst.llvm-%t ?x342)))
 (let (($x161 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x78 (and $x161 $x304)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x157 (= (_ bv0 32) ?x162)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x167)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (and $x155 $x137)))
 (let (($x170 (and $x153 $x157)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x148 $x170)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x177 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x145)))))))
 (let (($x215 (and (and (and $x177 true) $x166) $x78)))
 (let (($x212 (and $x209 $x215)))
 (let (($x132 (and $x216 $x212)))
 (let (($x139 (= $x132 true)))
 (let (($x211 (= $x139 true)))
 (let (($x222 (= $x211 true)))
 (let (($x130 (and $x89 $x73)))
 (let (($x319 (= $x130 true)))
 (let (($x392 (= $x319 true)))
 (let (($x160 (= $x392 true)))
 (let (($x35 (= $x161 true)))
 (let (($x159 (= $x35 true)))
 (let (($x165 (= $x159 true)))
 (let (($x182 (and $x177 $x166)))
 (let (($x28 (= $x182 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let (($x179 (and $x21 $x165)))
 (let (($x186 (and $x179 $x165)))
 (let (($x316 (and $x186 $x160)))
 (let (($x219 (and $x316 $x222)))
 (let (($x354 (and $x219 $x105)))
 (let (($x220 (and $x354 $x56)))
 (let (($x366 (and $x220 $x359)))
 (let (($x344 (and $x366 $x226)))
 (let (($x50 (and $x344 $x226)))
 (let (($x227 (and $x50 $x472)))
 (let (($x233 (and $x227 $x328)))
 (let (($x333 (and $x233 $x432)))
 (let (($x66 (and $x333 $x239)))
 (let (($x151 (and $x147 $x315)))
 (let (($x275 (and $x151 $x66)))
 (let (($x131 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x242 (and $x131 $x275)))
 (let (($x265 (and $x144 $x242)))
 (let (($x336 (and $x144 $x265)))
 (let (($x69 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x30 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x81 (=> (and $x130 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x17 (bvugt ?x125 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x82 (=> (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x17)))))))
 (let (($x96 (=> (and $x89 (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x64 $x17)))))))
 (let (($x124 (and $x96 $x81)))
 (let (($x251 (and $x124 $x336)))
 (let (($x374 (=> $x251 $x437)))
 (not $x374))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5140X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x353 (concat ?x185 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv8 32))))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x364 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x339 (concat ?x364 (concat ?x171 ?x353))))
 (let (($x340 (= ?x339 ?x339)))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x129 (concat ?x283 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x357 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x276 (concat ?x357 (concat ?x313 ?x129))))
 (let (($x402 (= (_ bv0 32) ?x276)))
 (let ((?x253 (ite $x402 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x253 (_ bv1 32))))
 (let (($x345 (=> $x254 $x340)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x404 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv4 32))))))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x168 (concat ?x121 (concat ?x31 ?x6))))
 (let (($x337 (= ?x168 ?x168)))
 (let (($x398 (=> $x254 $x337)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5140X))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv2 32))) ?x287)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv3 32))) ?x127)))
 (let (($x279 (= ?x277 ?x277)))
 (let (($x286 (=> $x254 $x279)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x202 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x29 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x29 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x45) (concat ?x169 ?x202))))
 (let ((?x74 (bvadd ?x57 (_ bv8 32))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x284))))
 (let (($x293 (= (_ bv0 32) ?x369)))
 (let ((?x258 (ite $x293 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x258 (_ bv1 32))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x276 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x276 (_ bv8 32))))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x276 (_ bv8 32)) (_ bv2 32))) ?x264)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x276 (_ bv8 32)) (_ bv3 32))) ?x367)))
 (let (($x435 (= (_ bv0 32) ?x325)))
 (let ((?x371 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x371 (_ bv1 32))))
 (let (($x314 (= $x88 $x106)))
 (let (($x61 (=> $x254 $x314)))
 (let (($x266 (= ?x258 (_ bv0 32))))
 (let (($x349 (= ?x371 (_ bv0 32))))
 (let (($x126 (= $x349 $x266)))
 (let (($x181 (=> $x254 $x126)))
 (let (($x326 (= (_ bv0 32) ?x57)))
 (let ((?x362 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x362 (_ bv1 32))))
 (let (($x350 (= $x254 $x329)))
 (let (($x281 (= ?x362 (_ bv0 32))))
 (let (($x116 (= ?x253 (_ bv0 32))))
 (let (($x256 (= $x116 $x281)))
 (let (($x309 (= ?x276 ?x57)))
 (let (($x144 (= false false)))
 (let (($x352 (and $x254 $x349)))
 (let (($x59 (=> $x352 $x144)))
 (let (($x395 (=> $x116 $x144)))
 (let (($x470 (and (and (and (and (and (and $x395 $x59) $x309) $x256) $x350) $x181) $x61)))
 (let (($x400 (and (and (and $x470 $x286) $x398) $x345)))
 (let (($x244 (not true)))
 (let (($x365 (or $x244 $x400)))
 (let (($x273 (= true true)))
 (let (($x430 (and $x273 $x365)))
 (let (($x437 (= $x430 true)))
 (let (($x397 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x372 (= $x247 $x397)))
 (let (($x252 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x240 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x335 (= $x240 $x252)))
 (let (($x406 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x231 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x268 (= $x231 $x406)))
 (let (($x331 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x289 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x243 (= $x289 $x331)))
 (let (($x282 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x238 (and (and (and (and $x282 $x243) $x268) $x335) $x372)))
 (let (($x239 (= $x238 true)))
 (let (($x324 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x260 (=> $x324 $x144)))
 (let (($x292 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x368 (= $x230 $x292)))
 (let (($x232 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x236 (= $x324 $x232)))
 (let (($x270 (and (and $x236 $x368) $x260)))
 (let (($x432 (= $x270 true)))
 (let (($x259 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x363 (= $x230 $x259)))
 (let (($x246 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x248 (= $x324 $x246)))
 (let (($x405 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x235 (= $x315 $x405)))
 (let (($x250 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x291 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x237 (= $x291 $x250)))
 (let (($x434 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x261 (and (and (and (and $x434 $x237) $x235) $x248) $x363)))
 (let (($x328 (= $x261 true)))
 (let (($x305 (=> $x291 $x144)))
 (let (($x471 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x307 (= $x315 $x471)))
 (let (($x396 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x228 (= $x291 $x396)))
 (let (($x229 (and (and $x228 $x307) $x305)))
 (let (($x472 (= $x229 true)))
 (let (($x40 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x225 (=> $x40 $x144)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x214 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x290 (bvuge ?x214 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x5 (= $x147 $x290)))
 (let (($x223 (= ?x214 (_ bv0 32))))
 (let (($x51 (= $x40 $x223)))
 (let (($x323 (and (and $x51 $x5) $x225)))
 (let (($x226 (= $x323 true)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x342 (concat ?x401 (concat ?x187 (concat ?x207 ?x196)))))
 (let (($x332 (= ?x342 input.dst.llvm-%t)))
 (let (($x224 (= $x332 true)))
 (let (($x359 (= $x224 true)))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x23 (concat ?x76 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x125 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x110 (bvadd ?x125 (_ bv3 32))))
 (let ((?x13 (concat (select input.dst.llvm-mem ?x110) (concat ?x47 ?x23))))
 (let (($x36 (= (bvand ?x13 (_ bv4294967280 32)) ?x13)))
 (let (($x93 (= (bvand ?x125 (_ bv4294967292 32)) ?x125)))
 (let (($x15 (and $x93 $x36)))
 (let (($x184 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x173 (and true $x184)))
 (let (($x321 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x125 (bvsub ?x125 (_ bv4 32))) (bvult ?x125 (bvsub ?x125 (_ bv4 32))))))
 (let (($x199 (and (and (and $x321 $x173) $x93) $x15)))
 (let (($x201 (= true $x199)))
 (let (($x89 (not $x18)))
 (let (($x209 (=> $x89 $x201)))
 (let (($x67 (= $x209 true)))
 (let (($x52 (= $x67 true)))
 (let (($x56 (= $x52 true)))
 (let (($x73 (= (_ bv0 32) ?x13)))
 (let (($x176 (not $x73)))
 (let (($x108 (=> $x176 $x201)))
 (let (($x193 (= (bvand ?x57 (_ bv4294967280 32)) ?x57)))
 (let (($x194 (= (bvand ?x29 (_ bv4294967292 32)) ?x29)))
 (let (($x189 (and $x194 $x193)))
 (let (($x180 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x29 (bvsub ?x29 (_ bv8 32))) (bvult ?x29 (bvsub ?x29 (_ bv8 32))))))
 (let (($x205 (and (and (and $x180 $x173) $x194) $x189)))
 (let (($x101 (= true $x205)))
 (let (($x44 (=> $x73 $x101)))
 (let (($x213 (and $x44 $x108)))
 (let (($x218 (= true $x213)))
 (let (($x301 (or $x73 $x176)))
 (let (($x299 (and $x89 $x301)))
 (let (($x216 (=> $x299 $x218)))
 (let (($x322 (= $x216 true)))
 (let (($x221 (= $x322 true)))
 (let (($x105 (= $x221 true)))
 (let (($x304 (= input.dst.llvm-%t ?x342)))
 (let (($x161 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x78 (and $x161 $x304)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x157 (= (_ bv0 32) ?x162)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x167)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (and $x155 $x137)))
 (let (($x170 (and $x153 $x157)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x148 $x170)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x177 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x145)))))))
 (let (($x215 (and (and (and $x177 true) $x166) $x78)))
 (let (($x212 (and $x209 $x215)))
 (let (($x132 (and $x216 $x212)))
 (let (($x139 (= $x132 true)))
 (let (($x211 (= $x139 true)))
 (let (($x222 (= $x211 true)))
 (let (($x130 (and $x89 $x73)))
 (let (($x319 (= $x130 true)))
 (let (($x392 (= $x319 true)))
 (let (($x160 (= $x392 true)))
 (let (($x35 (= $x161 true)))
 (let (($x159 (= $x35 true)))
 (let (($x165 (= $x159 true)))
 (let (($x182 (and $x177 $x166)))
 (let (($x28 (= $x182 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let (($x179 (and $x21 $x165)))
 (let (($x186 (and $x179 $x165)))
 (let (($x316 (and $x186 $x160)))
 (let (($x219 (and $x316 $x222)))
 (let (($x354 (and $x219 $x105)))
 (let (($x220 (and $x354 $x56)))
 (let (($x366 (and $x220 $x359)))
 (let (($x344 (and $x366 $x226)))
 (let (($x50 (and $x344 $x226)))
 (let (($x227 (and $x50 $x472)))
 (let (($x233 (and $x227 $x328)))
 (let (($x333 (and $x233 $x432)))
 (let (($x66 (and $x333 $x239)))
 (let (($x151 (and $x147 $x315)))
 (let (($x275 (and $x151 $x66)))
 (let (($x131 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x242 (and $x131 $x275)))
 (let (($x265 (and $x144 $x242)))
 (let (($x336 (and $x144 $x265)))
 (let (($x69 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x30 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x81 (=> (and $x130 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x17 (bvugt ?x125 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x82 (=> (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x17)))))))
 (let (($x96 (=> (and $x89 (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x64 $x17)))))))
 (let (($x124 (and $x96 $x81)))
 (let (($x251 (and $x124 $x336)))
 (let (($x374 (=> $x251 $x437)))
 (not $x374))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x979cfd5c)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x20000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x9c)
                                #x009cd118
                                #x10)
                         #x979cfd5f
                         #x00)
                  #x979cfd5d
                  #xd1)))
(let ((a!2 (store (store (store (store a!1 #x009cd11b #x00) #x979cfd5c #x10)
                         #x009cd119
                         #xd1)
                  #x009cd117
                  #x00)))
  (store (store (store a!2 #x009cd114 #x00) #x009cd116 #x00) #x009cd115 #x00))))
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x009cd110)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x979cfd5c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x979cfd5f)
  (define-fun input.ind-%var5140X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5140X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483710 32) (_ bv16 8)) (_ bv1048584 32) (_ bv16 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv1048576 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483711 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5140X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x821 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x796 (concat ?x821 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv8 32))))))
 (let ((?x803 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x793 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x794 (concat ?x793 (concat ?x803 ?x796))))
 (let (($x797 (= ?x794 ?x794)))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x403 (concat ?x237 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x360 (concat ?x324 (concat ?x235 ?x403))))
 (let (($x246 (= (_ bv0 32) ?x360)))
 (let ((?x248 (ite $x246 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x248 (_ bv1 32))))
 (let (($x792 (=> $x328 $x797)))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x779 (concat ?x781 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv4 32))))))
 (let ((?x785 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x819 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x790 (concat ?x819 (concat ?x785 ?x779))))
 (let (($x816 (= ?x790 ?x790)))
 (let (($x820 (=> $x328 $x816)))
 (let ((?x772 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5140X))))
 (let ((?x784 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv2 32))) ?x772)))
 (let ((?x787 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv3 32))) ?x784)))
 (let (($x777 (= ?x787 ?x787)))
 (let (($x815 (=> $x328 $x777)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x206 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x104 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x104 (_ bv3 32))))
 (let ((?x193 (concat (select input.dst.llvm-mem ?x26) (concat ?x204 ?x206))))
 (let ((?x118 (bvadd ?x193 (_ bv8 32))))
 (let ((?x813 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x809 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x813))))
 (let (($x763 (= (_ bv0 32) ?x809)))
 (let ((?x767 (ite $x763 (_ bv0 32) (_ bv1 32))))
 (let (($x814 (bvuge ?x767 (_ bv1 32))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x360 (_ bv8 32))))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv8 32)) (_ bv2 32))) ?x109)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv8 32)) (_ bv3 32))) ?x9)))
 (let (($x83 (= (_ bv0 32) ?x283)))
 (let ((?x129 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x129 (_ bv1 32))))
 (let (($x765 (= $x116 $x814)))
 (let (($x764 (=> $x328 $x765)))
 (let (($x768 (= ?x767 (_ bv0 32))))
 (let (($x22 (= ?x129 (_ bv0 32))))
 (let (($x774 (= $x22 $x768)))
 (let (($x770 (=> $x328 $x774)))
 (let (($x812 (= (_ bv0 32) ?x193)))
 (let ((?x753 (ite $x812 (_ bv0 32) (_ bv1 32))))
 (let (($x758 (bvuge ?x753 (_ bv1 32))))
 (let (($x756 (= $x328 $x758)))
 (let (($x808 (= ?x753 (_ bv0 32))))
 (let (($x370 (= ?x248 (_ bv0 32))))
 (let (($x754 (= $x370 $x808)))
 (let (($x807 (= ?x360 ?x193)))
 (let (($x131 (= false false)))
 (let (($x751 (and $x328 $x22)))
 (let (($x752 (=> $x751 $x131)))
 (let (($x750 (=> $x370 $x131)))
 (let (($x823 (and (and (and (and (and (and $x750 $x752) $x807) $x754) $x756) $x770) $x764)))
 (let (($x41 (and (and (and $x823 $x815) $x820) $x792)))
 (let (($x817 (not true)))
 (let (($x172 (or $x817 $x41)))
 (let (($x749 (= true true)))
 (let (($x27 (and $x749 $x172)))
 (let (($x294 (= $x27 true)))
 (let (($x715 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x467 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x710 (= $x467 $x715)))
 (let (($x253 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x686 (=> $x253 $x710)))
 (let (($x486 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x740 (and $x253 $x486)))
 (let (($x685 (=> $x740 $x131)))
 (let (($x737 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x731 (= $x486 $x737)))
 (let (($x684 (=> $x253 $x731)))
 (let (($x700 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x422 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x682 (= $x422 $x700)))
 (let (($x709 (=> $x253 $x682)))
 (let (($x456 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x699 (and $x253 $x456)))
 (let (($x681 (=> $x699 $x131)))
 (let (($x680 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x730 (= $x456 $x680)))
 (let (($x708 (=> $x253 $x730)))
 (let (($x729 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x679 (=> $x253 $x729)))
 (let (($x265 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x707 (=> $x265 $x131)))
 (let (($x676 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x412 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x677 (= $x412 $x676)))
 (let (($x238 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x678 (=> $x238 $x677)))
 (let (($x391 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x706 (and $x238 $x391)))
 (let (($x697 (=> $x706 $x131)))
 (let (($x714 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x728 (= $x391 $x714)))
 (let (($x675 (=> $x238 $x728)))
 (let (($x673 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x736 (= $x388 $x673)))
 (let (($x674 (=> $x238 $x736)))
 (let (($x387 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x727 (and $x238 $x387)))
 (let (($x672 (=> $x727 $x131)))
 (let (($x671 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x696 (= $x387 $x671)))
 (let (($x705 (=> $x238 $x696)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x670 (=> $x238 $x695)))
 (let (($x249 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x694 (=> $x249 $x131)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x669 (= $x253 $x703)))
 (let (($x725 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x713 (= $x265 $x725)))
 (let (($x735 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x738 (= $x238 $x735)))
 (let (($x34 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x111 (= $x249 $x34)))
 (let (($x724 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x688 (and (and (and (and (and (and $x724 $x111) $x738) $x713) $x669) $x694) $x670)))
 (let (($x691 (and (and (and (and (and (and $x688 $x705) $x672) $x674) $x675) $x697) $x678)))
 (let (($x719 (and (and (and (and (and (and $x691 $x707) $x679) $x708) $x681) $x709) $x684)))
 (let (($x745 (and (and $x719 $x685) $x686)))
 (let (($x721 (= $x745 true)))
 (let (($x630 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x596 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x662 (= $x596 $x630)))
 (let (($x429 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x362 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x609 (and $x362 $x429)))
 (let (($x597 (=> $x609 $x662)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x661 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x595 (= $x661 $x640)))
 (let (($x648 (=> $x609 $x595)))
 (let (($x592 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x652 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x593 (= $x652 $x592)))
 (let (($x657 (=> $x609 $x593)))
 (let (($x615 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x634 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x639 (= $x634 $x615)))
 (let (($x660 (=> $x609 $x639)))
 (let (($x590 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x638 (=> $x609 $x590)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x429 $x588)))
 (let (($x589 (=> $x362 $x637)))
 (let (($x286 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x541 (and $x362 $x286)))
 (let (($x503 (=> $x541 $x131)))
 (let (($x627 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x633 (= $x286 $x627)))
 (let (($x628 (=> $x362 $x633)))
 (let (($x636 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x585 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x586 (= $x585 $x636)))
 (let (($x62 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x557 (and $x362 $x62)))
 (let (($x656 (=> $x557 $x586)))
 (let (($x647 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x635 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x626 (= $x635 $x647)))
 (let (($x659 (=> $x557 $x626)))
 (let (($x651 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x581 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x582 (= $x581 $x651)))
 (let (($x583 (=> $x557 $x582)))
 (let (($x644 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x578 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x580 (= $x578 $x644)))
 (let (($x613 (=> $x557 $x580)))
 (let (($x655 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x576 (=> $x557 $x655)))
 (let (($x606 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x607 (= $x62 $x606)))
 (let (($x556 (=> $x362 $x607)))
 (let (($x258 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x532 (and $x362 $x258)))
 (let (($x526 (=> $x532 $x131)))
 (let (($x555 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x612 (= $x258 $x555)))
 (let (($x646 (=> $x362 $x612)))
 (let (($x624 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x605 (=> $x362 $x624)))
 (let (($x436 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x562 (=> $x436 $x131)))
 (let (($x618 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x654 (= $x362 $x618)))
 (let (($x553 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x604 (= $x436 $x553)))
 (let (($x631 (and (and (and (and (and (and $x604 $x654) $x562) $x605) $x646) $x526) $x556)))
 (let (($x617 (and (and (and (and (and (and $x631 $x576) $x613) $x583) $x659) $x656) $x628)))
 (let (($x723 (and (and (and (and (and (and $x617 $x503) $x589) $x638) $x660) $x657) $x648)))
 (let (($x701 (and $x723 $x597)))
 (let (($x667 (= $x701 true)))
 (let (($x650 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x542 (= $x429 $x650)))
 (let (($x527 (=> $x362 $x542)))
 (let (($x533 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x501 (= $x286 $x533)))
 (let (($x502 (=> $x362 $x501)))
 (let (($x571 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x649 (= $x62 $x571)))
 (let (($x540 (=> $x362 $x649)))
 (let (($x498 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x499 (= $x258 $x498)))
 (let (($x500 (=> $x362 $x499)))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x531 (=> $x362 $x539)))
 (let (($x538 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x512 (= $x253 $x538)))
 (let (($x296 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x561 (=> $x296 $x512)))
 (let (($x417 (and $x296 $x265)))
 (let (($x464 (=> $x417 $x131)))
 (let (($x544 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x525 (= $x265 $x544)))
 (let (($x572 (=> $x296 $x525)))
 (let (($x495 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x496 (= $x238 $x495)))
 (let (($x497 (=> $x296 $x496)))
 (let (($x479 (and $x296 $x249)))
 (let (($x474 (=> $x479 $x131)))
 (let (($x494 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x530 (= $x249 $x494)))
 (let (($x620 (=> $x296 $x530)))
 (let (($x511 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x560 (=> $x296 $x511)))
 (let (($x245 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x458 (=> $x245 $x131)))
 (let (($x537 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x619 (= $x362 $x537)))
 (let (($x493 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x573 (= $x436 $x493)))
 (let (($x570 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x536 (= $x296 $x570)))
 (let (($x491 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x523 (= $x245 $x491)))
 (let (($x522 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x528 (and (and (and (and (and (and $x522 $x523) $x536) $x573) $x619) $x458) $x560)))
 (let (($x529 (and (and (and (and (and (and $x528 $x620) $x474) $x497) $x572) $x464) $x561)))
 (let (($x549 (and (and (and (and (and (and $x529 $x562) $x531) $x500) $x526) $x540) $x502)))
 (let (($x610 (and (and $x549 $x503) $x527)))
 (let (($x611 (= $x610 true)))
 (let (($x445 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x487 (= $x467 $x445)))
 (let (($x418 (and $x296 $x253)))
 (let (($x468 (=> $x418 $x487)))
 (let (($x444 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x424 (= $x486 $x444)))
 (let (($x518 (=> $x418 $x424)))
 (let (($x462 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x443 (= $x422 $x462)))
 (let (($x466 (=> $x418 $x443)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x421 (= $x456 $x476)))
 (let (($x520 (=> $x418 $x421)))
 (let (($x455 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x465 (=> $x418 $x455)))
 (let (($x475 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x480 (= $x253 $x475)))
 (let (($x482 (=> $x296 $x480)))
 (let (($x415 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x514 (= $x265 $x415)))
 (let (($x416 (=> $x296 $x514)))
 (let (($x413 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x414 (= $x412 $x413)))
 (let (($x383 (and $x296 $x238)))
 (let (($x517 (=> $x383 $x414)))
 (let (($x460 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x411 (= $x391 $x460)))
 (let (($x485 (=> $x383 $x411)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x440 (=> $x383 $x390)))
 (let (($x453 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x409 (= $x387 $x453)))
 (let (($x459 (=> $x383 $x409)))
 (let (($x481 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x385 (=> $x383 $x481)))
 (let (($x516 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x452 (= $x238 $x516)))
 (let (($x382 (=> $x296 $x452)))
 (let (($x381 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x566 (= $x249 $x381)))
 (let (($x408 (=> $x296 $x566)))
 (let (($x379 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x451 (=> $x296 $x379)))
 (let (($x473 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x484 (= $x296 $x473)))
 (let (($x407 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x450 (= $x245 $x407)))
 (let (($x427 (and (and (and (and (and (and $x450 $x484) $x458) $x451) $x408) $x474) $x382)))
 (let (($x483 (and (and (and (and (and (and $x427 $x385) $x459) $x440) $x485) $x517) $x416)))
 (let (($x490 (and (and (and (and (and (and $x483 $x464) $x482) $x465) $x520) $x466) $x518)))
 (let (($x534 (and $x490 $x468)))
 (let (($x558 (= $x534 true)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x312 (concat ?x255 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x435 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x371 (concat ?x435 (concat ?x264 ?x312))))
 (let ((?x373 (bvadd ?x371 (_ bv8 32))))
 (let ((?x338 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv1 32))) (select input.dst.llvm-mem ?x373))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv2 32))) ?x338))))
 (let (($x168 (= (_ bv0 32) ?x90)))
 (let ((?x337 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x364 (bvuge ?x337 (_ bv1 32))))
 (let (($x346 (= $x429 $x364)))
 (let (($x151 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x329 (and $x151 $x362)))
 (let (($x171 (=> $x329 $x346)))
 (let (($x398 (= ?x337 (_ bv0 32))))
 (let (($x343 (= $x286 $x398)))
 (let (($x191 (=> $x329 $x343)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x371 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x371 (_ bv4 32))))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x371 (_ bv4 32)) (_ bv2 32))) ?x88)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x371 (_ bv4 32)) (_ bv3 32))) ?x61)))
 (let (($x112 (= (_ bv0 32) ?x33)))
 (let ((?x100 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x100 (_ bv1 32))))
 (let (($x127 (= $x62 $x287)))
 (let (($x277 (=> $x329 $x127)))
 (let (($x123 (= ?x100 (_ bv0 32))))
 (let (($x138 (= $x258 $x123)))
 (let (($x53 (=> $x329 $x138)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv1 32))) (select input.dst.llvm-mem ?x371))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv2 32))) ?x271))))
 (let (($x65 (= input.spec-%var-t-0.2.2.2.0 ?x284)))
 (let (($x369 (=> $x329 $x65)))
 (let (($x349 (= (_ bv0 32) ?x371)))
 (let ((?x352 (ite $x349 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x352 (_ bv1 32))))
 (let (($x256 (= $x362 $x281)))
 (let (($x25 (=> $x151 $x256)))
 (let (($x399 (and $x151 $x436)))
 (let (($x326 (=> $x399 $x131)))
 (let (($x59 (= ?x352 (_ bv0 32))))
 (let (($x431 (= $x436 $x59)))
 (let (($x309 (=> $x151 $x431)))
 (let (($x395 (= $x253 $x116)))
 (let (($x146 (and $x151 $x296)))
 (let (($x254 (=> $x146 $x395)))
 (let (($x276 (= $x265 $x22)))
 (let (($x402 (=> $x146 $x276)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x360 (_ bv4 32))))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv4 32)) (_ bv2 32))) ?x406)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv4 32)) (_ bv3 32))) ?x269)))
 (let (($x335 (= (_ bv0 32) ?x252)))
 (let ((?x285 (ite $x335 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x285 (_ bv1 32))))
 (let (($x66 (= $x238 $x239)))
 (let (($x275 (=> $x146 $x66)))
 (let (($x247 (= ?x285 (_ bv0 32))))
 (let (($x397 (= $x249 $x247)))
 (let (($x372 (=> $x146 $x397)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv1 32))) (select input.dst.llvm-mem ?x360))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv2 32))) ?x267))))
 (let (($x282 (= input.spec-%var-t-0.2.1.2.0 ?x274)))
 (let (($x278 (=> $x146 $x282)))
 (let (($x233 (= $x296 $x328)))
 (let (($x241 (=> $x151 $x233)))
 (let (($x363 (and $x151 $x245)))
 (let (($x261 (=> $x363 $x131)))
 (let (($x230 (= $x245 $x370)))
 (let (($x259 (=> $x151 $x230)))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x396)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x307)))
 (let (($x472 (= input.spec-%var-t-0.2.0 ?x229)))
 (let (($x227 (=> $x151 $x472)))
 (let (($x5 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x344 (=> $x5 $x131)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x394 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x394 (_ bv1 32))))
 (let (($x226 (= $x151 $x323)))
 (let (($x144 (= ?x394 (_ bv0 32))))
 (let (($x225 (= $x5 $x144)))
 (let (($x339 (and (and (and (and (and (and $x225 $x226) $x344) $x227) $x259) $x261) $x241)))
 (let (($x437 (and (and (and (and (and (and $x339 $x278) $x372) $x275) $x402) $x254) $x309)))
 (let (($x210 (and (and (and (and (and (and $x437 $x326) $x25) $x369) $x53) $x277) $x191)))
 (let (($x438 (and $x210 $x171)))
 (let (($x515 (= $x438 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x215 (concat ?x78 (concat ?x117 (concat ?x207 ?x187)))))
 (let (($x214 (= ?x215 input.dst.llvm-%t)))
 (let (($x223 (= $x214 true)))
 (let (($x51 (= $x223 true)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x76 (concat ?x98 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x103 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x7 (bvadd ?x103 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x7) (concat ?x114 ?x76))))
 (let (($x199 (= (bvand ?x130 (_ bv4294967280 32)) ?x130)))
 (let (($x36 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x201 (and $x36 $x199)))
 (let (($x192 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x194 (and true $x192)))
 (let (($x393 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv4 32))) (bvult ?x103 (bvsub ?x103 (_ bv4 32))))))
 (let (($x218 (and (and (and $x393 $x194) $x36) $x201)))
 (let (($x216 (= true $x218)))
 (let (($x89 (not $x18)))
 (let (($x401 (=> $x89 $x216)))
 (let (($x224 (= $x401 true)))
 (let (($x359 (= $x224 true)))
 (let (($x366 (= $x359 true)))
 (let (($x107 (= (_ bv0 32) ?x130)))
 (let (($x174 (not $x107)))
 (let (($x209 (=> $x174 $x216)))
 (let (($x205 (= (bvand ?x193 (_ bv4294967280 32)) ?x193)))
 (let (($x190 (= (bvand ?x104 (_ bv4294967292 32)) ?x104)))
 (let (($x101 (and $x190 $x205)))
 (let (($x198 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x104 (bvsub ?x104 (_ bv8 32))) (bvult ?x104 (bvsub ?x104 (_ bv8 32))))))
 (let (($x208 (and (and (and $x198 $x194) $x190) $x101)))
 (let (($x54 (= true $x208)))
 (let (($x297 (=> $x107 $x54)))
 (let (($x99 (and $x297 $x209)))
 (let (($x217 (= true $x99)))
 (let (($x298 (or $x107 $x174)))
 (let (($x143 (and $x89 $x298)))
 (let (($x303 (=> $x143 $x217)))
 (let (($x52 (= $x303 true)))
 (let (($x56 (= $x52 true)))
 (let (($x220 (= $x56 true)))
 (let (($x212 (= input.dst.llvm-%t ?x215)))
 (let (($x179 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x132 (and $x179 $x212)))
 (let ((?x182 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x182)))
 (let ((?x157 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x170 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x157)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (and $x162 $x170)))
 (let (($x150 (and $x166 $x28)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x145 $x150)))
 (let (($x177 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x177)))))))
 (let (($x222 (and (and (and $x153 true) $x21) $x132)))
 (let (($x219 (and $x401 $x222)))
 (let (($x322 (and $x303 $x219)))
 (let (($x221 (= $x322 true)))
 (let (($x105 (= $x221 true)))
 (let (($x354 (= $x105 true)))
 (let (($x29 (and $x89 $x107)))
 (let (($x176 (= $x29 true)))
 (let (($x301 (= $x176 true)))
 (let (($x299 (= $x301 true)))
 (let (($x186 (= $x179 true)))
 (let (($x319 (= $x186 true)))
 (let (($x392 (= $x319 true)))
 (let (($x300 (and $x153 $x21)))
 (let (($x152 (= $x300 true)))
 (let (($x161 (= $x152 true)))
 (let (($x35 (= $x161 true)))
 (let (($x160 (and $x35 $x392)))
 (let (($x316 (and $x160 $x392)))
 (let (($x156 (and $x316 $x299)))
 (let (($x67 (and $x156 $x354)))
 (let (($x332 (and $x67 $x220)))
 (let (($x40 (and $x332 $x366)))
 (let (($x290 (and $x40 $x51)))
 (let (($x376 (and $x290 $x515)))
 (let (($x457 (and $x376 $x515)))
 (let (($x559 (and $x457 $x558)))
 (let (($x551 (and $x559 $x611)))
 (let (($x19 (and $x551 $x667)))
 (let (($x722 (and $x19 $x721)))
 (let (($x746 (and $x146 $x722)))
 (let (($x295 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x747 (and $x295 $x746)))
 (let (($x810 (and $x131 $x747)))
 (let (($x748 (and $x131 $x810)))
 (let (($x80 (bvugt ?x104 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x149 (=> (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x128 (=> (and $x29 (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x39 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x12 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x39)))))))
 (let (($x119 (=> (and $x89 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x39)))))))
 (let (($x45 (and $x119 $x128)))
 (let (($x811 (and $x45 $x748)))
 (let (($x115 (=> $x811 $x294)))
 (not $x
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5140X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x821 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x796 (concat ?x821 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv8 32))))))
 (let ((?x803 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x793 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x794 (concat ?x793 (concat ?x803 ?x796))))
 (let (($x797 (= ?x794 ?x794)))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x403 (concat ?x237 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x360 (concat ?x324 (concat ?x235 ?x403))))
 (let (($x246 (= (_ bv0 32) ?x360)))
 (let ((?x248 (ite $x246 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x248 (_ bv1 32))))
 (let (($x792 (=> $x328 $x797)))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x779 (concat ?x781 (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv4 32))))))
 (let ((?x785 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x819 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5140X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x790 (concat ?x819 (concat ?x785 ?x779))))
 (let (($x816 (= ?x790 ?x790)))
 (let (($x820 (=> $x328 $x816)))
 (let ((?x772 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5140X))))
 (let ((?x784 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv2 32))) ?x772)))
 (let ((?x787 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5140X (_ bv3 32))) ?x784)))
 (let (($x777 (= ?x787 ?x787)))
 (let (($x815 (=> $x328 $x777)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x206 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x104 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x104 (_ bv3 32))))
 (let ((?x193 (concat (select input.dst.llvm-mem ?x26) (concat ?x204 ?x206))))
 (let ((?x118 (bvadd ?x193 (_ bv8 32))))
 (let ((?x813 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x809 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x813))))
 (let (($x763 (= (_ bv0 32) ?x809)))
 (let ((?x767 (ite $x763 (_ bv0 32) (_ bv1 32))))
 (let (($x814 (bvuge ?x767 (_ bv1 32))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x360 (_ bv8 32))))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv8 32)) (_ bv2 32))) ?x109)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv8 32)) (_ bv3 32))) ?x9)))
 (let (($x83 (= (_ bv0 32) ?x283)))
 (let ((?x129 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x129 (_ bv1 32))))
 (let (($x765 (= $x116 $x814)))
 (let (($x764 (=> $x328 $x765)))
 (let (($x768 (= ?x767 (_ bv0 32))))
 (let (($x22 (= ?x129 (_ bv0 32))))
 (let (($x774 (= $x22 $x768)))
 (let (($x770 (=> $x328 $x774)))
 (let (($x812 (= (_ bv0 32) ?x193)))
 (let ((?x753 (ite $x812 (_ bv0 32) (_ bv1 32))))
 (let (($x758 (bvuge ?x753 (_ bv1 32))))
 (let (($x756 (= $x328 $x758)))
 (let (($x808 (= ?x753 (_ bv0 32))))
 (let (($x370 (= ?x248 (_ bv0 32))))
 (let (($x754 (= $x370 $x808)))
 (let (($x807 (= ?x360 ?x193)))
 (let (($x131 (= false false)))
 (let (($x751 (and $x328 $x22)))
 (let (($x752 (=> $x751 $x131)))
 (let (($x750 (=> $x370 $x131)))
 (let (($x823 (and (and (and (and (and (and $x750 $x752) $x807) $x754) $x756) $x770) $x764)))
 (let (($x41 (and (and (and $x823 $x815) $x820) $x792)))
 (let (($x817 (not true)))
 (let (($x172 (or $x817 $x41)))
 (let (($x749 (= true true)))
 (let (($x27 (and $x749 $x172)))
 (let (($x294 (= $x27 true)))
 (let (($x715 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x467 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x710 (= $x467 $x715)))
 (let (($x253 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x686 (=> $x253 $x710)))
 (let (($x486 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x740 (and $x253 $x486)))
 (let (($x685 (=> $x740 $x131)))
 (let (($x737 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x731 (= $x486 $x737)))
 (let (($x684 (=> $x253 $x731)))
 (let (($x700 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x422 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x682 (= $x422 $x700)))
 (let (($x709 (=> $x253 $x682)))
 (let (($x456 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x699 (and $x253 $x456)))
 (let (($x681 (=> $x699 $x131)))
 (let (($x680 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x730 (= $x456 $x680)))
 (let (($x708 (=> $x253 $x730)))
 (let (($x729 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x679 (=> $x253 $x729)))
 (let (($x265 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x707 (=> $x265 $x131)))
 (let (($x676 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x412 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x677 (= $x412 $x676)))
 (let (($x238 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x678 (=> $x238 $x677)))
 (let (($x391 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x706 (and $x238 $x391)))
 (let (($x697 (=> $x706 $x131)))
 (let (($x714 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x728 (= $x391 $x714)))
 (let (($x675 (=> $x238 $x728)))
 (let (($x673 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x736 (= $x388 $x673)))
 (let (($x674 (=> $x238 $x736)))
 (let (($x387 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x727 (and $x238 $x387)))
 (let (($x672 (=> $x727 $x131)))
 (let (($x671 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x696 (= $x387 $x671)))
 (let (($x705 (=> $x238 $x696)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x670 (=> $x238 $x695)))
 (let (($x249 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x694 (=> $x249 $x131)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x669 (= $x253 $x703)))
 (let (($x725 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x713 (= $x265 $x725)))
 (let (($x735 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x738 (= $x238 $x735)))
 (let (($x34 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x111 (= $x249 $x34)))
 (let (($x724 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x688 (and (and (and (and (and (and $x724 $x111) $x738) $x713) $x669) $x694) $x670)))
 (let (($x691 (and (and (and (and (and (and $x688 $x705) $x672) $x674) $x675) $x697) $x678)))
 (let (($x719 (and (and (and (and (and (and $x691 $x707) $x679) $x708) $x681) $x709) $x684)))
 (let (($x745 (and (and $x719 $x685) $x686)))
 (let (($x721 (= $x745 true)))
 (let (($x630 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x596 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x662 (= $x596 $x630)))
 (let (($x429 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x362 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x609 (and $x362 $x429)))
 (let (($x597 (=> $x609 $x662)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x661 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x595 (= $x661 $x640)))
 (let (($x648 (=> $x609 $x595)))
 (let (($x592 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x652 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x593 (= $x652 $x592)))
 (let (($x657 (=> $x609 $x593)))
 (let (($x615 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x634 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x639 (= $x634 $x615)))
 (let (($x660 (=> $x609 $x639)))
 (let (($x590 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x638 (=> $x609 $x590)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x429 $x588)))
 (let (($x589 (=> $x362 $x637)))
 (let (($x286 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x541 (and $x362 $x286)))
 (let (($x503 (=> $x541 $x131)))
 (let (($x627 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x633 (= $x286 $x627)))
 (let (($x628 (=> $x362 $x633)))
 (let (($x636 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x585 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x586 (= $x585 $x636)))
 (let (($x62 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x557 (and $x362 $x62)))
 (let (($x656 (=> $x557 $x586)))
 (let (($x647 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x635 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x626 (= $x635 $x647)))
 (let (($x659 (=> $x557 $x626)))
 (let (($x651 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x581 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x582 (= $x581 $x651)))
 (let (($x583 (=> $x557 $x582)))
 (let (($x644 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x578 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x580 (= $x578 $x644)))
 (let (($x613 (=> $x557 $x580)))
 (let (($x655 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x576 (=> $x557 $x655)))
 (let (($x606 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x607 (= $x62 $x606)))
 (let (($x556 (=> $x362 $x607)))
 (let (($x258 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x532 (and $x362 $x258)))
 (let (($x526 (=> $x532 $x131)))
 (let (($x555 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x612 (= $x258 $x555)))
 (let (($x646 (=> $x362 $x612)))
 (let (($x624 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x605 (=> $x362 $x624)))
 (let (($x436 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x562 (=> $x436 $x131)))
 (let (($x618 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x654 (= $x362 $x618)))
 (let (($x553 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x604 (= $x436 $x553)))
 (let (($x631 (and (and (and (and (and (and $x604 $x654) $x562) $x605) $x646) $x526) $x556)))
 (let (($x617 (and (and (and (and (and (and $x631 $x576) $x613) $x583) $x659) $x656) $x628)))
 (let (($x723 (and (and (and (and (and (and $x617 $x503) $x589) $x638) $x660) $x657) $x648)))
 (let (($x701 (and $x723 $x597)))
 (let (($x667 (= $x701 true)))
 (let (($x650 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x542 (= $x429 $x650)))
 (let (($x527 (=> $x362 $x542)))
 (let (($x533 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x501 (= $x286 $x533)))
 (let (($x502 (=> $x362 $x501)))
 (let (($x571 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x649 (= $x62 $x571)))
 (let (($x540 (=> $x362 $x649)))
 (let (($x498 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x499 (= $x258 $x498)))
 (let (($x500 (=> $x362 $x499)))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x531 (=> $x362 $x539)))
 (let (($x538 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x512 (= $x253 $x538)))
 (let (($x296 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x561 (=> $x296 $x512)))
 (let (($x417 (and $x296 $x265)))
 (let (($x464 (=> $x417 $x131)))
 (let (($x544 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x525 (= $x265 $x544)))
 (let (($x572 (=> $x296 $x525)))
 (let (($x495 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x496 (= $x238 $x495)))
 (let (($x497 (=> $x296 $x496)))
 (let (($x479 (and $x296 $x249)))
 (let (($x474 (=> $x479 $x131)))
 (let (($x494 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x530 (= $x249 $x494)))
 (let (($x620 (=> $x296 $x530)))
 (let (($x511 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x560 (=> $x296 $x511)))
 (let (($x245 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x458 (=> $x245 $x131)))
 (let (($x537 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x619 (= $x362 $x537)))
 (let (($x493 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x573 (= $x436 $x493)))
 (let (($x570 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x536 (= $x296 $x570)))
 (let (($x491 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x523 (= $x245 $x491)))
 (let (($x522 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x528 (and (and (and (and (and (and $x522 $x523) $x536) $x573) $x619) $x458) $x560)))
 (let (($x529 (and (and (and (and (and (and $x528 $x620) $x474) $x497) $x572) $x464) $x561)))
 (let (($x549 (and (and (and (and (and (and $x529 $x562) $x531) $x500) $x526) $x540) $x502)))
 (let (($x610 (and (and $x549 $x503) $x527)))
 (let (($x611 (= $x610 true)))
 (let (($x445 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x487 (= $x467 $x445)))
 (let (($x418 (and $x296 $x253)))
 (let (($x468 (=> $x418 $x487)))
 (let (($x444 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x424 (= $x486 $x444)))
 (let (($x518 (=> $x418 $x424)))
 (let (($x462 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x443 (= $x422 $x462)))
 (let (($x466 (=> $x418 $x443)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x421 (= $x456 $x476)))
 (let (($x520 (=> $x418 $x421)))
 (let (($x455 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x465 (=> $x418 $x455)))
 (let (($x475 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x480 (= $x253 $x475)))
 (let (($x482 (=> $x296 $x480)))
 (let (($x415 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x514 (= $x265 $x415)))
 (let (($x416 (=> $x296 $x514)))
 (let (($x413 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x414 (= $x412 $x413)))
 (let (($x383 (and $x296 $x238)))
 (let (($x517 (=> $x383 $x414)))
 (let (($x460 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x411 (= $x391 $x460)))
 (let (($x485 (=> $x383 $x411)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x440 (=> $x383 $x390)))
 (let (($x453 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x409 (= $x387 $x453)))
 (let (($x459 (=> $x383 $x409)))
 (let (($x481 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x385 (=> $x383 $x481)))
 (let (($x516 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x452 (= $x238 $x516)))
 (let (($x382 (=> $x296 $x452)))
 (let (($x381 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x566 (= $x249 $x381)))
 (let (($x408 (=> $x296 $x566)))
 (let (($x379 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x451 (=> $x296 $x379)))
 (let (($x473 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x484 (= $x296 $x473)))
 (let (($x407 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x450 (= $x245 $x407)))
 (let (($x427 (and (and (and (and (and (and $x450 $x484) $x458) $x451) $x408) $x474) $x382)))
 (let (($x483 (and (and (and (and (and (and $x427 $x385) $x459) $x440) $x485) $x517) $x416)))
 (let (($x490 (and (and (and (and (and (and $x483 $x464) $x482) $x465) $x520) $x466) $x518)))
 (let (($x534 (and $x490 $x468)))
 (let (($x558 (= $x534 true)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x312 (concat ?x255 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x435 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x371 (concat ?x435 (concat ?x264 ?x312))))
 (let ((?x373 (bvadd ?x371 (_ bv8 32))))
 (let ((?x338 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv1 32))) (select input.dst.llvm-mem ?x373))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv2 32))) ?x338))))
 (let (($x168 (= (_ bv0 32) ?x90)))
 (let ((?x337 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x364 (bvuge ?x337 (_ bv1 32))))
 (let (($x346 (= $x429 $x364)))
 (let (($x151 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x329 (and $x151 $x362)))
 (let (($x171 (=> $x329 $x346)))
 (let (($x398 (= ?x337 (_ bv0 32))))
 (let (($x343 (= $x286 $x398)))
 (let (($x191 (=> $x329 $x343)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x371 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x371 (_ bv4 32))))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x371 (_ bv4 32)) (_ bv2 32))) ?x88)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x371 (_ bv4 32)) (_ bv3 32))) ?x61)))
 (let (($x112 (= (_ bv0 32) ?x33)))
 (let ((?x100 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x100 (_ bv1 32))))
 (let (($x127 (= $x62 $x287)))
 (let (($x277 (=> $x329 $x127)))
 (let (($x123 (= ?x100 (_ bv0 32))))
 (let (($x138 (= $x258 $x123)))
 (let (($x53 (=> $x329 $x138)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv1 32))) (select input.dst.llvm-mem ?x371))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv2 32))) ?x271))))
 (let (($x65 (= input.spec-%var-t-0.2.2.2.0 ?x284)))
 (let (($x369 (=> $x329 $x65)))
 (let (($x349 (= (_ bv0 32) ?x371)))
 (let ((?x352 (ite $x349 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x352 (_ bv1 32))))
 (let (($x256 (= $x362 $x281)))
 (let (($x25 (=> $x151 $x256)))
 (let (($x399 (and $x151 $x436)))
 (let (($x326 (=> $x399 $x131)))
 (let (($x59 (= ?x352 (_ bv0 32))))
 (let (($x431 (= $x436 $x59)))
 (let (($x309 (=> $x151 $x431)))
 (let (($x395 (= $x253 $x116)))
 (let (($x146 (and $x151 $x296)))
 (let (($x254 (=> $x146 $x395)))
 (let (($x276 (= $x265 $x22)))
 (let (($x402 (=> $x146 $x276)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x360 (_ bv4 32))))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv4 32)) (_ bv2 32))) ?x406)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x360 (_ bv4 32)) (_ bv3 32))) ?x269)))
 (let (($x335 (= (_ bv0 32) ?x252)))
 (let ((?x285 (ite $x335 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x285 (_ bv1 32))))
 (let (($x66 (= $x238 $x239)))
 (let (($x275 (=> $x146 $x66)))
 (let (($x247 (= ?x285 (_ bv0 32))))
 (let (($x397 (= $x249 $x247)))
 (let (($x372 (=> $x146 $x397)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv1 32))) (select input.dst.llvm-mem ?x360))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv2 32))) ?x267))))
 (let (($x282 (= input.spec-%var-t-0.2.1.2.0 ?x274)))
 (let (($x278 (=> $x146 $x282)))
 (let (($x233 (= $x296 $x328)))
 (let (($x241 (=> $x151 $x233)))
 (let (($x363 (and $x151 $x245)))
 (let (($x261 (=> $x363 $x131)))
 (let (($x230 (= $x245 $x370)))
 (let (($x259 (=> $x151 $x230)))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x396)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x307)))
 (let (($x472 (= input.spec-%var-t-0.2.0 ?x229)))
 (let (($x227 (=> $x151 $x472)))
 (let (($x5 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x344 (=> $x5 $x131)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x394 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x394 (_ bv1 32))))
 (let (($x226 (= $x151 $x323)))
 (let (($x144 (= ?x394 (_ bv0 32))))
 (let (($x225 (= $x5 $x144)))
 (let (($x339 (and (and (and (and (and (and $x225 $x226) $x344) $x227) $x259) $x261) $x241)))
 (let (($x437 (and (and (and (and (and (and $x339 $x278) $x372) $x275) $x402) $x254) $x309)))
 (let (($x210 (and (and (and (and (and (and $x437 $x326) $x25) $x369) $x53) $x277) $x191)))
 (let (($x438 (and $x210 $x171)))
 (let (($x515 (= $x438 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x215 (concat ?x78 (concat ?x117 (concat ?x207 ?x187)))))
 (let (($x214 (= ?x215 input.dst.llvm-%t)))
 (let (($x223 (= $x214 true)))
 (let (($x51 (= $x223 true)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x76 (concat ?x98 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x103 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x7 (bvadd ?x103 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x7) (concat ?x114 ?x76))))
 (let (($x199 (= (bvand ?x130 (_ bv4294967280 32)) ?x130)))
 (let (($x36 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x201 (and $x36 $x199)))
 (let (($x192 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x194 (and true $x192)))
 (let (($x393 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv4 32))) (bvult ?x103 (bvsub ?x103 (_ bv4 32))))))
 (let (($x218 (and (and (and $x393 $x194) $x36) $x201)))
 (let (($x216 (= true $x218)))
 (let (($x89 (not $x18)))
 (let (($x401 (=> $x89 $x216)))
 (let (($x224 (= $x401 true)))
 (let (($x359 (= $x224 true)))
 (let (($x366 (= $x359 true)))
 (let (($x107 (= (_ bv0 32) ?x130)))
 (let (($x174 (not $x107)))
 (let (($x209 (=> $x174 $x216)))
 (let (($x205 (= (bvand ?x193 (_ bv4294967280 32)) ?x193)))
 (let (($x190 (= (bvand ?x104 (_ bv4294967292 32)) ?x104)))
 (let (($x101 (and $x190 $x205)))
 (let (($x198 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x104 (bvsub ?x104 (_ bv8 32))) (bvult ?x104 (bvsub ?x104 (_ bv8 32))))))
 (let (($x208 (and (and (and $x198 $x194) $x190) $x101)))
 (let (($x54 (= true $x208)))
 (let (($x297 (=> $x107 $x54)))
 (let (($x99 (and $x297 $x209)))
 (let (($x217 (= true $x99)))
 (let (($x298 (or $x107 $x174)))
 (let (($x143 (and $x89 $x298)))
 (let (($x303 (=> $x143 $x217)))
 (let (($x52 (= $x303 true)))
 (let (($x56 (= $x52 true)))
 (let (($x220 (= $x56 true)))
 (let (($x212 (= input.dst.llvm-%t ?x215)))
 (let (($x179 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x132 (and $x179 $x212)))
 (let ((?x182 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x182)))
 (let ((?x157 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x170 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x157)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (and $x162 $x170)))
 (let (($x150 (and $x166 $x28)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x145 $x150)))
 (let (($x177 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x177)))))))
 (let (($x222 (and (and (and $x153 true) $x21) $x132)))
 (let (($x219 (and $x401 $x222)))
 (let (($x322 (and $x303 $x219)))
 (let (($x221 (= $x322 true)))
 (let (($x105 (= $x221 true)))
 (let (($x354 (= $x105 true)))
 (let (($x29 (and $x89 $x107)))
 (let (($x176 (= $x29 true)))
 (let (($x301 (= $x176 true)))
 (let (($x299 (= $x301 true)))
 (let (($x186 (= $x179 true)))
 (let (($x319 (= $x186 true)))
 (let (($x392 (= $x319 true)))
 (let (($x300 (and $x153 $x21)))
 (let (($x152 (= $x300 true)))
 (let (($x161 (= $x152 true)))
 (let (($x35 (= $x161 true)))
 (let (($x160 (and $x35 $x392)))
 (let (($x316 (and $x160 $x392)))
 (let (($x156 (and $x316 $x299)))
 (let (($x67 (and $x156 $x354)))
 (let (($x332 (and $x67 $x220)))
 (let (($x40 (and $x332 $x366)))
 (let (($x290 (and $x40 $x51)))
 (let (($x376 (and $x290 $x515)))
 (let (($x457 (and $x376 $x515)))
 (let (($x559 (and $x457 $x558)))
 (let (($x551 (and $x559 $x611)))
 (let (($x19 (and $x551 $x667)))
 (let (($x722 (and $x19 $x721)))
 (let (($x746 (and $x146 $x722)))
 (let (($x295 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x747 (and $x295 $x746)))
 (let (($x810 (and $x131 $x747)))
 (let (($x748 (and $x131 $x810)))
 (let (($x80 (bvugt ?x104 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x149 (=> (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x128 (=> (and $x29 (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x39 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x12 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x39)))))))
 (let (($x119 (=> (and $x89 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x39)))))))
 (let (($x45 (and $x119 $x128)))
 (let (($x811 (and $x45 $x748)))
 (let (($x115 (=> $x811 $x294)))
 (not $x
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5598X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x431 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x309 (concat ?x431 (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv8 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x281 (concat ?x362 (concat ?x399 ?x309))))
 (let (($x256 (= ?x281 ?x281)))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x339 (concat ?x241 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x260 (concat ?x232 ?x339))))
 (let (($x292 (= (_ bv0 32) ?x270)))
 (let ((?x368 (ite $x292 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x368 (_ bv1 32))))
 (let (($x25 (=> $x432 $x256)))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x435 (concat ?x325 (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv4 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x312 (concat ?x280 (concat ?x264 ?x435))))
 (let (($x367 (= ?x312 ?x312)))
 (let (($x371 (=> $x432 $x367)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5598X))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv2 32))) ?x22)))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv3 32))) ?x365)))
 (let (($x254 (= ?x395 ?x395)))
 (let (($x430 (=> $x432 $x254)))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x238 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x336 (concat ?x265 (concat ?x275 ?x239))))
 (let (($x313 (= (_ bv0 32) ?x336)))
 (let ((?x72 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (= ?x72 (_ bv0 32))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x270 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x270 (_ bv8 32))))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x270 (_ bv8 32)) (_ bv2 32))) ?x289)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x270 (_ bv8 32)) (_ bv3 32))) ?x240)))
 (let (($x355 (= (_ bv0 32) ?x356)))
 (let ((?x231 (ite $x355 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (= ?x231 (_ bv0 32))))
 (let (($x251 (= $x243 $x244)))
 (let (($x109 (=> $x432 $x251)))
 (let (($x133 (bvuge ?x72 (_ bv1 32))))
 (let (($x247 (bvuge ?x231 (_ bv1 32))))
 (let (($x357 (= $x247 $x133)))
 (let (($x273 (=> $x432 $x357)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x185 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x306 (= ?x185 (_ bv0 32))))
 (let (($x236 (= ?x368 (_ bv0 32))))
 (let (($x285 (= $x236 $x306)))
 (let (($x228 (bvuge ?x185 (_ bv1 32))))
 (let (($x335 (= $x432 $x228)))
 (let (($x252 (= ?x270 input.dst.llvm-%t)))
 (let (($x295 (= false false)))
 (let (($x406 (and $x432 $x243)))
 (let (($x269 (=> $x406 $x295)))
 (let (($x267 (=> $x236 $x295)))
 (let (($x48 (and (and (and (and (and (and $x267 $x269) $x252) $x335) $x285) $x273) $x109)))
 (let (($x257 (and (and (and $x48 $x430) $x371) $x25)))
 (let (($x16 (not true)))
 (let (($x433 (or $x16 $x257)))
 (let (($x261 (= true true)))
 (let (($x271 (and $x261 $x433)))
 (let (($x334 (= $x271 true)))
 (let (($x403 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x361 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x234 (= $x361 $x403)))
 (let (($x250 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x405 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x237 (= $x405 $x250)))
 (let (($x360 (and $x237 $x234)))
 (let (($x246 (= $x360 true)))
 (let (($x330 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x154 (= $x317 $x330)))
 (let (($x472 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x307 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x307 $x472)))
 (let (($x245 (and $x227 $x154)))
 (let (($x434 (= $x245 true)))
 (let (($x142 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x471 (= $x142 $x228)))
 (let (($x344 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x305 (= $x344 $x306)))
 (let (($x291 (and $x305 $x471)))
 (let (($x347 (= $x291 true)))
 (let ((?x342 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x354 (concat ?x105 (concat ?x219 (concat ?x212 ?x342)))))
 (let (($x323 (= ?x354 input.dst.llvm-%t)))
 (let (($x226 (= $x323 true)))
 (let (($x43 (= $x226 true)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x98 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x122 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x70 (bvadd ?x122 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x70) (concat ?x13 ?x98))))
 (let (($x303 (= (bvand ?x29 (_ bv4294967280 32)) ?x29)))
 (let (($x99 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x401 (and $x99 $x303)))
 (let (($x204 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x8 (and true $x204)))
 (let (($x216 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv4 32))) (bvult ?x122 (bvsub ?x122 (_ bv4 32))))))
 (let (($x304 (and (and (and $x216 $x8) $x99) $x401)))
 (let (($x78 (= true $x304)))
 (let (($x89 (not $x18)))
 (let (($x187 (=> $x89 $x78)))
 (let (($x394 (= $x187 true)))
 (let (($x144 (= $x394 true)))
 (let (($x225 (= $x144 true)))
 (let (($x10 (= (_ bv0 32) ?x29)))
 (let (($x184 (not $x10)))
 (let (($x38 (=> $x184 $x78)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x205 (concat ?x189 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x69 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x69 (_ bv3 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem ?x75) (concat ?x208 ?x205))))
 (let (($x42 (= (bvand ?x358 (_ bv4294967280 32)) ?x358)))
 (let (($x206 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x93 (and $x206 $x42)))
 (let (($x197 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv8 32))) (bvult ?x69 (bvsub ?x69 (_ bv8 32))))))
 (let (($x203 (and (and (and $x197 $x8) $x206) $x93)))
 (let (($x36 (= true $x203)))
 (let (($x213 (=> $x10 $x36)))
 (let (($x117 (and $x213 $x38)))
 (let (($x318 (= true $x117)))
 (let (($x55 (or $x10 $x184)))
 (let (($x302 (and $x89 $x55)))
 (let (($x207 (=> $x302 $x318)))
 (let (($x51 (= $x207 true)))
 (let (($x290 (= $x51 true)))
 (let (($x315 (= $x290 true)))
 (let (($x67 (= input.dst.llvm-%t ?x354)))
 (let (($x156 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x52 (and $x156 $x67)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x179 (= (_ bv0 32) ?x165)))
 (let ((?x161 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x161)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (and $x152 $x35)))
 (let (($x186 (and $x159 $x179)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x319 (and $x153 $x186)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x300 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x170)))))))
 (let (($x332 (and (and (and $x300 true) $x319) $x52)))
 (let (($x224 (and $x187 $x332)))
 (let (($x359 (and $x207 $x224)))
 (let (($x366 (= $x359 true)))
 (let (($x40 (= $x366 true)))
 (let (($x214 (= $x40 true)))
 (let (($x49 (= $x18 true)))
 (let (($x175 (= $x49 true)))
 (let (($x198 (= $x175 true)))
 (let (($x174 (= $x156 true)))
 (let (($x298 (= $x174 true)))
 (let (($x143 (= $x298 true)))
 (let (($x392 (and $x300 $x319)))
 (let (($x160 (= $x392 true)))
 (let (($x316 (= $x160 true)))
 (let (($x176 (= $x316 true)))
 (let (($x178 (and $x176 $x143)))
 (let (($x180 (and $x178 $x143)))
 (let (($x173 (and $x180 $x198)))
 (let (($x223 (and $x173 $x214)))
 (let (($x5 (and $x223 $x315)))
 (let (($x151 (and $x5 $x225)))
 (let (($x131 (and $x151 $x43)))
 (let (($x50 (and $x131 $x347)))
 (let (($x396 (and $x50 $x347)))
 (let (($x288 (and $x396 $x434)))
 (let (($x248 (and $x288 $x246)))
 (let (($x148 (and $x142 $x317)))
 (let (($x370 (and $x148 $x248)))
 (let (($x137 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x230 (and $x137 $x370)))
 (let (($x259 (and $x295 $x230)))
 (let (($x353 (and $x295 $x259)))
 (let (($x81 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x147 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x104 (and $x89 $x10)))
 (let (($x94 (=> (and $x104 (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x96 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x92 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x96)))))))
 (let (($x110 (=> (and $x89 (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x96)))))))
 (let (($x26 (and $x110 $x94)))
 (let (($x363 (and $x26 $x353)))
 (let (($x284 (=> $x363 $x334)))
 (not $x284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5598X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x431 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x309 (concat ?x431 (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv8 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x281 (concat ?x362 (concat ?x399 ?x309))))
 (let (($x256 (= ?x281 ?x281)))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x339 (concat ?x241 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x260 (concat ?x232 ?x339))))
 (let (($x292 (= (_ bv0 32) ?x270)))
 (let ((?x368 (ite $x292 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x368 (_ bv1 32))))
 (let (($x25 (=> $x432 $x256)))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x435 (concat ?x325 (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv4 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5598X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x312 (concat ?x280 (concat ?x264 ?x435))))
 (let (($x367 (= ?x312 ?x312)))
 (let (($x371 (=> $x432 $x367)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5598X))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv2 32))) ?x22)))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5598X (_ bv3 32))) ?x365)))
 (let (($x254 (= ?x395 ?x395)))
 (let (($x430 (=> $x432 $x254)))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x238 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x336 (concat ?x265 (concat ?x275 ?x239))))
 (let (($x313 (= (_ bv0 32) ?x336)))
 (let ((?x72 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (= ?x72 (_ bv0 32))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x270 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x270 (_ bv8 32))))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x270 (_ bv8 32)) (_ bv2 32))) ?x289)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x270 (_ bv8 32)) (_ bv3 32))) ?x240)))
 (let (($x355 (= (_ bv0 32) ?x356)))
 (let ((?x231 (ite $x355 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (= ?x231 (_ bv0 32))))
 (let (($x251 (= $x243 $x244)))
 (let (($x109 (=> $x432 $x251)))
 (let (($x133 (bvuge ?x72 (_ bv1 32))))
 (let (($x247 (bvuge ?x231 (_ bv1 32))))
 (let (($x357 (= $x247 $x133)))
 (let (($x273 (=> $x432 $x357)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x185 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x306 (= ?x185 (_ bv0 32))))
 (let (($x236 (= ?x368 (_ bv0 32))))
 (let (($x285 (= $x236 $x306)))
 (let (($x228 (bvuge ?x185 (_ bv1 32))))
 (let (($x335 (= $x432 $x228)))
 (let (($x252 (= ?x270 input.dst.llvm-%t)))
 (let (($x295 (= false false)))
 (let (($x406 (and $x432 $x243)))
 (let (($x269 (=> $x406 $x295)))
 (let (($x267 (=> $x236 $x295)))
 (let (($x48 (and (and (and (and (and (and $x267 $x269) $x252) $x335) $x285) $x273) $x109)))
 (let (($x257 (and (and (and $x48 $x430) $x371) $x25)))
 (let (($x16 (not true)))
 (let (($x433 (or $x16 $x257)))
 (let (($x261 (= true true)))
 (let (($x271 (and $x261 $x433)))
 (let (($x334 (= $x271 true)))
 (let (($x403 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x361 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x234 (= $x361 $x403)))
 (let (($x250 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x405 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x237 (= $x405 $x250)))
 (let (($x360 (and $x237 $x234)))
 (let (($x246 (= $x360 true)))
 (let (($x330 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x154 (= $x317 $x330)))
 (let (($x472 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x307 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x307 $x472)))
 (let (($x245 (and $x227 $x154)))
 (let (($x434 (= $x245 true)))
 (let (($x142 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x471 (= $x142 $x228)))
 (let (($x344 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x305 (= $x344 $x306)))
 (let (($x291 (and $x305 $x471)))
 (let (($x347 (= $x291 true)))
 (let ((?x342 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x354 (concat ?x105 (concat ?x219 (concat ?x212 ?x342)))))
 (let (($x323 (= ?x354 input.dst.llvm-%t)))
 (let (($x226 (= $x323 true)))
 (let (($x43 (= $x226 true)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x98 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x122 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x70 (bvadd ?x122 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x70) (concat ?x13 ?x98))))
 (let (($x303 (= (bvand ?x29 (_ bv4294967280 32)) ?x29)))
 (let (($x99 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x401 (and $x99 $x303)))
 (let (($x204 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x8 (and true $x204)))
 (let (($x216 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv4 32))) (bvult ?x122 (bvsub ?x122 (_ bv4 32))))))
 (let (($x304 (and (and (and $x216 $x8) $x99) $x401)))
 (let (($x78 (= true $x304)))
 (let (($x89 (not $x18)))
 (let (($x187 (=> $x89 $x78)))
 (let (($x394 (= $x187 true)))
 (let (($x144 (= $x394 true)))
 (let (($x225 (= $x144 true)))
 (let (($x10 (= (_ bv0 32) ?x29)))
 (let (($x184 (not $x10)))
 (let (($x38 (=> $x184 $x78)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x205 (concat ?x189 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x69 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x69 (_ bv3 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem ?x75) (concat ?x208 ?x205))))
 (let (($x42 (= (bvand ?x358 (_ bv4294967280 32)) ?x358)))
 (let (($x206 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x93 (and $x206 $x42)))
 (let (($x197 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv8 32))) (bvult ?x69 (bvsub ?x69 (_ bv8 32))))))
 (let (($x203 (and (and (and $x197 $x8) $x206) $x93)))
 (let (($x36 (= true $x203)))
 (let (($x213 (=> $x10 $x36)))
 (let (($x117 (and $x213 $x38)))
 (let (($x318 (= true $x117)))
 (let (($x55 (or $x10 $x184)))
 (let (($x302 (and $x89 $x55)))
 (let (($x207 (=> $x302 $x318)))
 (let (($x51 (= $x207 true)))
 (let (($x290 (= $x51 true)))
 (let (($x315 (= $x290 true)))
 (let (($x67 (= input.dst.llvm-%t ?x354)))
 (let (($x156 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x52 (and $x156 $x67)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x179 (= (_ bv0 32) ?x165)))
 (let ((?x161 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x161)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (and $x152 $x35)))
 (let (($x186 (and $x159 $x179)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x319 (and $x153 $x186)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x300 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x170)))))))
 (let (($x332 (and (and (and $x300 true) $x319) $x52)))
 (let (($x224 (and $x187 $x332)))
 (let (($x359 (and $x207 $x224)))
 (let (($x366 (= $x359 true)))
 (let (($x40 (= $x366 true)))
 (let (($x214 (= $x40 true)))
 (let (($x49 (= $x18 true)))
 (let (($x175 (= $x49 true)))
 (let (($x198 (= $x175 true)))
 (let (($x174 (= $x156 true)))
 (let (($x298 (= $x174 true)))
 (let (($x143 (= $x298 true)))
 (let (($x392 (and $x300 $x319)))
 (let (($x160 (= $x392 true)))
 (let (($x316 (= $x160 true)))
 (let (($x176 (= $x316 true)))
 (let (($x178 (and $x176 $x143)))
 (let (($x180 (and $x178 $x143)))
 (let (($x173 (and $x180 $x198)))
 (let (($x223 (and $x173 $x214)))
 (let (($x5 (and $x223 $x315)))
 (let (($x151 (and $x5 $x225)))
 (let (($x131 (and $x151 $x43)))
 (let (($x50 (and $x131 $x347)))
 (let (($x396 (and $x50 $x347)))
 (let (($x288 (and $x396 $x434)))
 (let (($x248 (and $x288 $x246)))
 (let (($x148 (and $x142 $x317)))
 (let (($x370 (and $x148 $x248)))
 (let (($x137 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x230 (and $x137 $x370)))
 (let (($x259 (and $x295 $x230)))
 (let (($x353 (and $x295 $x259)))
 (let (($x81 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x147 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x104 (and $x89 $x10)))
 (let (($x94 (=> (and $x104 (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x96 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x92 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x96)))))))
 (let (($x110 (=> (and $x89 (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x96)))))))
 (let (($x26 (and $x110 $x94)))
 (let (($x363 (and $x26 $x353)))
 (let (($x284 (=> $x363 $x334)))
 (not $x284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5632X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x399 (concat ?x437 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv8 32))))))
 (let ((?x431 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x281 (concat ?x326 (concat ?x431 ?x399))))
 (let (($x256 (= ?x281 ?x281)))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x333 (concat ?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x432 (concat ?x267 (concat ?x292 ?x333))))
 (let (($x272 (= (_ bv0 32) ?x432)))
 (let ((?x268 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x289 (bvuge ?x268 (_ bv1 32))))
 (let (($x25 (=> $x289 $x256)))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x264 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv4 32))))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x367 (concat ?x312 (concat ?x436 ?x113))))
 (let (($x371 (= ?x367 ?x367)))
 (let (($x74 (=> $x289 $x371)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5632X))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv2 32))) ?x129)))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv3 32))) ?x365)))
 (let (($x310 (= ?x430 ?x430)))
 (let (($x262 (=> $x289 $x310)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x47 (concat ?x114 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x20 (bvadd ?x64 (_ bv3 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem ?x20) (concat ?x130 ?x47))))
 (let ((?x242 (bvadd ?x104 (_ bv4 32))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv1 32))) (select input.dst.llvm-mem ?x242))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv2 32))) ?x345))))
 (let (($x72 (= (_ bv0 32) ?x313)))
 (let ((?x133 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x133 (_ bv1 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x432 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x432 (_ bv4 32))))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x432 (_ bv4 32)) (_ bv2 32))) ?x269)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x432 (_ bv4 32)) (_ bv3 32))) ?x329)))
 (let (($x348 (= (_ bv0 32) ?x285)))
 (let ((?x247 (ite $x348 (_ bv0 32) (_ bv1 32))))
 (let (($x109 (bvuge ?x247 (_ bv1 32))))
 (let (($x9 (= $x109 $x48)))
 (let (($x253 (=> $x289 $x9)))
 (let (($x95 (= false false)))
 (let (($x397 (= ?x247 (_ bv0 32))))
 (let (($x244 (and $x289 $x397)))
 (let (($x251 (=> $x244 $x95)))
 (let (($x357 (= ?x133 (_ bv0 32))))
 (let (($x273 (= $x397 $x357)))
 (let (($x263 (=> $x289 $x273)))
 (let (($x134 (= (_ bv0 32) ?x104)))
 (let ((?x278 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x278 (_ bv1 32))))
 (let (($x356 (= $x289 $x240)))
 (let (($x340 (= ?x278 (_ bv0 32))))
 (let (($x249 (= ?x268 (_ bv0 32))))
 (let (($x282 (= $x249 $x340)))
 (let (($x284 (and (and (and (and (and (= ?x432 ?x104) (=> $x249 $x95)) $x282) $x356) $x263) $x251)))
 (let (($x155 (and (and (and (and $x284 $x253) $x262) $x74) $x25)))
 (let (($x232 (not true)))
 (let (($x196 (or $x232 $x155)))
 (let (($x146 (= true true)))
 (let (($x369 (and $x146 $x196)))
 (let (($x58 (= $x369 true)))
 (let (($x370 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x248 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x230 (= $x248 $x370)))
 (let (($x360 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x403 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x246 (= $x403 $x360)))
 (let (($x259 (and $x246 $x230)))
 (let (($x353 (= $x259 true)))
 (let (($x324 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x288 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x405 (= $x288 $x324)))
 (let (($x245 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x434 (= $x135 $x245)))
 (let (($x235 (and $x434 $x405)))
 (let (($x250 (= $x235 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x291 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x396 (bvuge ?x291 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x307 (= $x317 $x396)))
 (let (($x347 (= ?x291 (_ bv0 32))))
 (let (($x471 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x50 (= $x471 $x347)))
 (let (($x229 (and $x50 $x307)))
 (let (($x472 (= $x229 true)))
 (let ((?x219 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x332 (concat ?x52 (concat ?x322 (concat ?x212 ?x219)))))
 (let (($x185 (= ?x332 input.dst.llvm-%t)))
 (let (($x306 (= $x185 true)))
 (let (($x305 (= $x306 true)))
 (let (($x304 (= (bvand ?x104 (_ bv4294967280 32)) ?x104)))
 (let (($x303 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x78 (and $x303 $x304)))
 (let (($x169 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x206 (and true $x169)))
 (let (($x211 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x318 (and (and (and $x211 $x206) $x303) $x78)))
 (let (($x207 (= true $x318)))
 (let (($x89 (not $x18)))
 (let (($x105 (=> $x89 $x207)))
 (let (($x226 (= $x105 true)))
 (let (($x43 (= $x226 true)))
 (let (($x131 (= $x43 true)))
 (let (($x173 (not $x134)))
 (let (($x187 (=> $x173 $x207)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x57 (concat ?x189 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x80 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x80 (_ bv3 32))))
 (let ((?x42 (concat (select input.dst.llvm-mem ?x124) (concat ?x54 ?x57))))
 (let (($x203 (= (bvand ?x42 (_ bv4294967280 32)) ?x42)))
 (let (($x101 (= (bvand ?x80 (_ bv4294967292 32)) ?x80)))
 (let (($x36 (and $x101 $x203)))
 (let (($x202 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x80 (bvsub ?x80 (_ bv8 32))) (bvult ?x80 (bvsub ?x80 (_ bv8 32))))))
 (let (($x15 (and (and (and $x202 $x206) $x101) $x36)))
 (let (($x201 (= true $x15)))
 (let (($x218 (=> $x134 $x201)))
 (let (($x56 (and $x218 $x187)))
 (let (($x220 (= true $x56)))
 (let (($x44 (or $x134 $x173)))
 (let (($x183 (and $x89 $x44)))
 (let (($x221 (=> $x183 $x220)))
 (let (($x144 (= $x221 true)))
 (let (($x225 (= $x144 true)))
 (let (($x151 (= $x225 true)))
 (let (($x224 (= input.dst.llvm-%t ?x332)))
 (let (($x143 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x359 (and $x143 $x224)))
 (let ((?x319 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x392 (= (_ bv0 32) ?x319)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x179 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x186 (and $x159 $x179)))
 (let (($x160 (and $x186 $x392)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (and $x157 $x160)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x150)))))))
 (let (($x214 (and (and (and $x35 true) $x316) $x359)))
 (let (($x223 (and $x105 $x214)))
 (let (($x51 (and $x221 $x223)))
 (let (($x290 (= $x51 true)))
 (let (($x315 (= $x290 true)))
 (let (($x5 (= $x315 true)))
 (let (($x184 (and $x89 $x173)))
 (let (($x55 (= $x184 true)))
 (let (($x302 (= $x55 true)))
 (let (($x194 (= $x302 true)))
 (let (($x178 (= $x143 true)))
 (let (($x180 (= $x178 true)))
 (let (($x49 (= $x180 true)))
 (let (($x176 (and $x35 $x316)))
 (let (($x301 (= $x176 true)))
 (let (($x299 (= $x301 true)))
 (let (($x156 (= $x299 true)))
 (let (($x175 (and $x156 $x49)))
 (let (($x198 (and $x175 $x49)))
 (let (($x192 (and $x198 $x194)))
 (let (($x394 (and $x192 $x5)))
 (let (($x323 (and $x394 $x151)))
 (let (($x344 (and $x323 $x131)))
 (let (($x228 (and $x344 $x305)))
 (let (($x227 (and $x228 $x472)))
 (let (($x330 (and $x227 $x472)))
 (let (($x237 (and $x330 $x250)))
 (let (($x363 (and $x237 $x353)))
 (let (($x145 (and $x317 $x135)))
 (let (($x261 (and $x145 $x363)))
 (let (($x142 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x16 (and $x142 $x261)))
 (let (($x296 (and $x95 $x16)))
 (let (($x351 (and $x95 $x296)))
 (let (($x128 (bvugt ?x80 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x158 (=> (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x69 (and $x89 $x134)))
 (let (($x163 (=> (and $x69 (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x119 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x60 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x12 $x119)))))))
 (let (($x7 (=> (and $x89 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x12 $x119)))))))
 (let (($x75 (and $x7 $x163)))
 (let (($x260 (and $x75 $x351)))
 (let (($x293 (=> $x260 $x58)))
 (not $x293)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5632X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x399 (concat ?x437 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv8 32))))))
 (let ((?x431 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x281 (concat ?x326 (concat ?x431 ?x399))))
 (let (($x256 (= ?x281 ?x281)))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x333 (concat ?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x432 (concat ?x267 (concat ?x292 ?x333))))
 (let (($x272 (= (_ bv0 32) ?x432)))
 (let ((?x268 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x289 (bvuge ?x268 (_ bv1 32))))
 (let (($x25 (=> $x289 $x256)))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x264 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv4 32))))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x367 (concat ?x312 (concat ?x436 ?x113))))
 (let (($x371 (= ?x367 ?x367)))
 (let (($x74 (=> $x289 $x371)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5632X))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv2 32))) ?x129)))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv3 32))) ?x365)))
 (let (($x310 (= ?x430 ?x430)))
 (let (($x262 (=> $x289 $x310)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x47 (concat ?x114 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x20 (bvadd ?x64 (_ bv3 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem ?x20) (concat ?x130 ?x47))))
 (let ((?x242 (bvadd ?x104 (_ bv4 32))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv1 32))) (select input.dst.llvm-mem ?x242))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv2 32))) ?x345))))
 (let (($x72 (= (_ bv0 32) ?x313)))
 (let ((?x133 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x133 (_ bv1 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x432 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x432 (_ bv4 32))))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x432 (_ bv4 32)) (_ bv2 32))) ?x269)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x432 (_ bv4 32)) (_ bv3 32))) ?x329)))
 (let (($x348 (= (_ bv0 32) ?x285)))
 (let ((?x247 (ite $x348 (_ bv0 32) (_ bv1 32))))
 (let (($x109 (bvuge ?x247 (_ bv1 32))))
 (let (($x9 (= $x109 $x48)))
 (let (($x253 (=> $x289 $x9)))
 (let (($x95 (= false false)))
 (let (($x397 (= ?x247 (_ bv0 32))))
 (let (($x244 (and $x289 $x397)))
 (let (($x251 (=> $x244 $x95)))
 (let (($x357 (= ?x133 (_ bv0 32))))
 (let (($x273 (= $x397 $x357)))
 (let (($x263 (=> $x289 $x273)))
 (let (($x134 (= (_ bv0 32) ?x104)))
 (let ((?x278 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x278 (_ bv1 32))))
 (let (($x356 (= $x289 $x240)))
 (let (($x340 (= ?x278 (_ bv0 32))))
 (let (($x249 (= ?x268 (_ bv0 32))))
 (let (($x282 (= $x249 $x340)))
 (let (($x284 (and (and (and (and (and (= ?x432 ?x104) (=> $x249 $x95)) $x282) $x356) $x263) $x251)))
 (let (($x155 (and (and (and (and $x284 $x253) $x262) $x74) $x25)))
 (let (($x232 (not true)))
 (let (($x196 (or $x232 $x155)))
 (let (($x146 (= true true)))
 (let (($x369 (and $x146 $x196)))
 (let (($x58 (= $x369 true)))
 (let (($x370 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x248 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x230 (= $x248 $x370)))
 (let (($x360 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x403 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x246 (= $x403 $x360)))
 (let (($x259 (and $x246 $x230)))
 (let (($x353 (= $x259 true)))
 (let (($x324 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x288 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x405 (= $x288 $x324)))
 (let (($x245 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x434 (= $x135 $x245)))
 (let (($x235 (and $x434 $x405)))
 (let (($x250 (= $x235 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x291 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x396 (bvuge ?x291 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x307 (= $x317 $x396)))
 (let (($x347 (= ?x291 (_ bv0 32))))
 (let (($x471 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x50 (= $x471 $x347)))
 (let (($x229 (and $x50 $x307)))
 (let (($x472 (= $x229 true)))
 (let ((?x219 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x332 (concat ?x52 (concat ?x322 (concat ?x212 ?x219)))))
 (let (($x185 (= ?x332 input.dst.llvm-%t)))
 (let (($x306 (= $x185 true)))
 (let (($x305 (= $x306 true)))
 (let (($x304 (= (bvand ?x104 (_ bv4294967280 32)) ?x104)))
 (let (($x303 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x78 (and $x303 $x304)))
 (let (($x169 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x206 (and true $x169)))
 (let (($x211 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x318 (and (and (and $x211 $x206) $x303) $x78)))
 (let (($x207 (= true $x318)))
 (let (($x89 (not $x18)))
 (let (($x105 (=> $x89 $x207)))
 (let (($x226 (= $x105 true)))
 (let (($x43 (= $x226 true)))
 (let (($x131 (= $x43 true)))
 (let (($x173 (not $x134)))
 (let (($x187 (=> $x173 $x207)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x57 (concat ?x189 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x80 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x80 (_ bv3 32))))
 (let ((?x42 (concat (select input.dst.llvm-mem ?x124) (concat ?x54 ?x57))))
 (let (($x203 (= (bvand ?x42 (_ bv4294967280 32)) ?x42)))
 (let (($x101 (= (bvand ?x80 (_ bv4294967292 32)) ?x80)))
 (let (($x36 (and $x101 $x203)))
 (let (($x202 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x80 (bvsub ?x80 (_ bv8 32))) (bvult ?x80 (bvsub ?x80 (_ bv8 32))))))
 (let (($x15 (and (and (and $x202 $x206) $x101) $x36)))
 (let (($x201 (= true $x15)))
 (let (($x218 (=> $x134 $x201)))
 (let (($x56 (and $x218 $x187)))
 (let (($x220 (= true $x56)))
 (let (($x44 (or $x134 $x173)))
 (let (($x183 (and $x89 $x44)))
 (let (($x221 (=> $x183 $x220)))
 (let (($x144 (= $x221 true)))
 (let (($x225 (= $x144 true)))
 (let (($x151 (= $x225 true)))
 (let (($x224 (= input.dst.llvm-%t ?x332)))
 (let (($x143 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x359 (and $x143 $x224)))
 (let ((?x319 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x392 (= (_ bv0 32) ?x319)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x179 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x186 (and $x159 $x179)))
 (let (($x160 (and $x186 $x392)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (and $x157 $x160)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x150)))))))
 (let (($x214 (and (and (and $x35 true) $x316) $x359)))
 (let (($x223 (and $x105 $x214)))
 (let (($x51 (and $x221 $x223)))
 (let (($x290 (= $x51 true)))
 (let (($x315 (= $x290 true)))
 (let (($x5 (= $x315 true)))
 (let (($x184 (and $x89 $x173)))
 (let (($x55 (= $x184 true)))
 (let (($x302 (= $x55 true)))
 (let (($x194 (= $x302 true)))
 (let (($x178 (= $x143 true)))
 (let (($x180 (= $x178 true)))
 (let (($x49 (= $x180 true)))
 (let (($x176 (and $x35 $x316)))
 (let (($x301 (= $x176 true)))
 (let (($x299 (= $x301 true)))
 (let (($x156 (= $x299 true)))
 (let (($x175 (and $x156 $x49)))
 (let (($x198 (and $x175 $x49)))
 (let (($x192 (and $x198 $x194)))
 (let (($x394 (and $x192 $x5)))
 (let (($x323 (and $x394 $x151)))
 (let (($x344 (and $x323 $x131)))
 (let (($x228 (and $x344 $x305)))
 (let (($x227 (and $x228 $x472)))
 (let (($x330 (and $x227 $x472)))
 (let (($x237 (and $x330 $x250)))
 (let (($x363 (and $x237 $x353)))
 (let (($x145 (and $x317 $x135)))
 (let (($x261 (and $x145 $x363)))
 (let (($x142 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x16 (and $x142 $x261)))
 (let (($x296 (and $x95 $x16)))
 (let (($x351 (and $x95 $x296)))
 (let (($x128 (bvugt ?x80 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x158 (=> (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x69 (and $x89 $x134)))
 (let (($x163 (=> (and $x69 (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x119 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x60 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x12 $x119)))))))
 (let (($x7 (=> (and $x89 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x12 $x119)))))))
 (let (($x75 (and $x7 $x163)))
 (let (($x260 (and $x75 $x351)))
 (let (($x293 (=> $x260 $x58)))
 (not $x293)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5632X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1074003962 32) (_ bv64 8)) (_ bv4194308 32) (_ bv16 8)) (_ bv4194312 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1074003963 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #x00800002
                     #x80)
              #x00800008
              #x06)
       #x00800007
       #xd1))
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00800000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00800000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00800003)
  (define-fun input.ind-%var5632X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5632X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x37 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv8 32))))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x327 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x338 (concat ?x327 (concat ?x320 ?x6))))
 (let (($x404 (= ?x338 ?x338)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x65 (concat ?x253 (concat ?x109 ?x251))))
 (let (($x395 (= (_ bv0 32) ?x65)))
 (let ((?x254 (ite $x395 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x254 (_ bv1 32))))
 (let (($x90 (=> $x129 $x404)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x123 (concat ?x100 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv4 32))))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x287 (concat ?x53 ?x123))))
 (let (($x277 (= ?x127 ?x127)))
 (let (($x141 (=> $x129 $x277)))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5632X))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv2 32))) ?x266)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv3 32))) ?x106)))
 (let (($x126 (= ?x341 ?x341)))
 (let (($x88 (=> $x129 $x126)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x114 (concat ?x13 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x71 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x68 (bvadd ?x71 (_ bv3 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem ?x68) (concat ?x29 ?x114))))
 (let ((?x371 (bvadd ?x69 (_ bv4 32))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv1 32))) (select input.dst.llvm-mem ?x371))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv2 32))) ?x309))))
 (let (($x399 (= (_ bv0 32) ?x374)))
 (let ((?x352 (ite $x399 (_ bv0 32) (_ bv1 32))))
 (let (($x58 (bvuge ?x352 (_ bv1 32))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x65 (_ bv4 32))))))
 (let ((?x436 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x65 (_ bv4 32)) (_ bv2 32))) ?x311)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x65 (_ bv4 32)) (_ bv3 32))) ?x436)))
 (let (($x113 (= (_ bv0 32) ?x280)))
 (let ((?x435 (ite $x113 (_ bv0 32) (_ bv1 32))))
 (let (($x369 (bvuge ?x435 (_ bv1 32))))
 (let (($x293 (= $x369 $x58)))
 (let (($x258 (=> $x129 $x293)))
 (let (($x164 (= false false)))
 (let (($x367 (= ?x435 (_ bv0 32))))
 (let (($x155 (and $x129 $x367)))
 (let (($x196 (=> $x155 $x164)))
 (let (($x281 (= ?x352 (_ bv0 32))))
 (let (($x256 (= $x367 $x281)))
 (let (($x25 (=> $x129 $x256)))
 (let (($x136 (= (_ bv0 32) ?x69)))
 (let ((?x402 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x365 (bvuge ?x402 (_ bv1 32))))
 (let (($x430 (= $x129 $x365)))
 (let (($x83 (= ?x402 (_ bv0 32))))
 (let (($x283 (= ?x254 (_ bv0 32))))
 (let (($x276 (= $x283 $x83)))
 (let (($x191 (and (and (and (and (and (= ?x65 ?x69) (=> $x283 $x164)) $x276) $x430) $x25) $x196)))
 (let (($x346 (and (and (and (and $x191 $x258) $x88) $x141) $x90)))
 (let (($x357 (not true)))
 (let (($x171 (or $x357 $x346)))
 (let (($x133 (= true true)))
 (let (($x438 (and $x133 $x171)))
 (let (($x515 (= $x438 true)))
 (let (($x397 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x242 (= $x247 $x397)))
 (let (($x285 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x269 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x348 (= $x269 $x285)))
 (let (($x243 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x252 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x406 (= $x252 $x243)))
 (let (($x350 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x355 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x375 (= $x355 $x350)))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x372 (and (and (and (and $x356 $x375) $x406) $x348) $x242)))
 (let (($x66 (= $x372 true)))
 (let (($x146 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x257 (=> $x146 $x164)))
 (let (($x249 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x267 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x331 (= $x267 $x249)))
 (let (($x272 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x268 (= $x146 $x272)))
 (let (($x340 (and (and $x268 $x331) $x257)))
 (let (($x282 (= $x340 true)))
 (let (($x270 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x292 (= $x267 $x270)))
 (let (($x233 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x236 (= $x146 $x233)))
 (let (($x296 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x361 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x351 (= $x361 $x296)))
 (let (($x261 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x16 (= $x170 $x261)))
 (let (($x353 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x333 (and (and (and (and $x353 $x16) $x351) $x236) $x292)))
 (let (($x368 (= $x333 true)))
 (let (($x360 (=> $x170 $x164)))
 (let (($x403 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x234 (= $x361 $x403)))
 (let (($x250 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x237 (= $x170 $x250)))
 (let (($x248 (and (and $x237 $x234) $x360)))
 (let (($x370 (= $x248 true)))
 (let (($x396 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x154 (=> $x396 $x164)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x307 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x307 (_ bv1 32))))
 (let (($x135 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x330 (= $x135 $x227)))
 (let (($x229 (= ?x307 (_ bv0 32))))
 (let (($x472 (= $x396 $x229)))
 (let (($x434 (and (and $x472 $x330) $x154)))
 (let (($x288 (= $x434 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x359 (concat ?x224 (concat ?x342 (concat ?x215 ?x132)))))
 (let (($x471 (= ?x359 input.dst.llvm-%t)))
 (let (($x291 (= $x471 true)))
 (let (($x347 (= $x291 true)))
 (let (($x78 (= (bvand ?x69 (_ bv4294967280 32)) ?x69)))
 (let (($x401 (= (bvand ?x71 (_ bv4294967292 32)) ?x71)))
 (let (($x318 (and $x401 $x78)))
 (let (($x108 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x297 (and true $x108)))
 (let (($x303 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x71 (bvsub ?x71 (_ bv4 32))) (bvult ?x71 (bvsub ?x71 (_ bv4 32))))))
 (let (($x56 (and (and (and $x303 $x297) $x401) $x318)))
 (let (($x220 (= true $x56)))
 (let (($x89 (not $x18)))
 (let (($x67 (=> $x89 $x220)))
 (let (($x185 (= $x67 true)))
 (let (($x306 (= $x185 true)))
 (let (($x305 (= $x306 true)))
 (let (($x302 (not $x136)))
 (let (($x221 (=> $x302 $x220)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x189 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x81 (_ bv3 32))))
 (let ((?x93 (concat (select input.dst.llvm-mem ?x45) (concat ?x57 ?x189))))
 (let (($x36 (= (bvand ?x93 (_ bv4294967280 32)) ?x93)))
 (let (($x321 (= (bvand ?x81 (_ bv4294967292 32)) ?x81)))
 (let (($x15 (and $x321 $x36)))
 (let (($x393 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x81 (bvsub ?x81 (_ bv8 32))) (bvult ?x81 (bvsub ?x81 (_ bv8 32))))))
 (let (($x139 (and (and (and $x393 $x297) $x321) $x15)))
 (let (($x216 (= true $x139)))
 (let (($x209 (=> $x136 $x216)))
 (let (($x105 (and $x209 $x221)))
 (let (($x366 (= true $x105)))
 (let (($x197 (or $x136 $x302)))
 (let (($x190 (and $x89 $x197)))
 (let (($x40 (=> $x190 $x366)))
 (let (($x226 (= $x40 true)))
 (let (($x43 (= $x226 true)))
 (let (($x131 (= $x43 true)))
 (let (($x214 (= input.dst.llvm-%t ?x359)))
 (let (($x49 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x223 (and $x49 $x214)))
 (let ((?x316 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x176 (= (_ bv0 32) ?x316)))
 (let ((?x319 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x392 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x319)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x186 $x392)))
 (let (($x301 (and $x160 $x176)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x299 (and $x28 $x301)))
 (let (($x152 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x152)))))))
 (let (($x315 (and (and (and $x179 true) $x299) $x223)))
 (let (($x5 (and $x67 $x315)))
 (let (($x394 (and $x40 $x5)))
 (let (($x144 (= $x394 true)))
 (let (($x225 (= $x144 true)))
 (let (($x151 (= $x225 true)))
 (let (($x194 (and $x89 $x302)))
 (let (($x192 (= $x194 true)))
 (let (($x44 (= $x192 true)))
 (let (($x183 (= $x44 true)))
 (let (($x175 (= $x49 true)))
 (let (($x198 (= $x175 true)))
 (let (($x173 (= $x198 true)))
 (let (($x156 (and $x179 $x299)))
 (let (($x174 (= $x156 true)))
 (let (($x298 (= $x174 true)))
 (let (($x143 (= $x298 true)))
 (let (($x184 (and $x143 $x173)))
 (let (($x55 (and $x184 $x173)))
 (let (($x140 (and $x55 $x183)))
 (let (($x323 (and $x140 $x151)))
 (let (($x344 (and $x323 $x131)))
 (let (($x228 (and $x344 $x305)))
 (let (($x50 (and $x228 $x347)))
 (let (($x324 (and $x50 $x288)))
 (let (($x405 (and $x324 $x288)))
 (let (($x230 (and $x405 $x370)))
 (let (($x432 (and $x230 $x368)))
 (let (($x433 (and $x432 $x282)))
 (let (($x275 (and $x433 $x66)))
 (let (($x166 (and $x135 $x170)))
 (let (($x265 (and $x166 $x275)))
 (let (($x317 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x345 (and $x317 $x265)))
 (let (($x239 (and $x164 $x345)))
 (let (($x313 (and $x164 $x239)))
 (let (($x94 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x137 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x80 (and $x89 $x136)))
 (let (($x295 (=> (and $x80 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x110 (bvugt ?x71 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x23 (=> (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x110)))))))
 (let (($x70 (=> (and $x89 (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x92 $x110)))))))
 (let (($x124 (and $x70 $x295)))
 (let (($x72 (and $x124 $x313)))
 (let (($x376 (=> $x72 $x515)))
 (not $x376))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5632X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x37 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv8 32))))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x327 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x338 (concat ?x327 (concat ?x320 ?x6))))
 (let (($x404 (= ?x338 ?x338)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x65 (concat ?x253 (concat ?x109 ?x251))))
 (let (($x395 (= (_ bv0 32) ?x65)))
 (let ((?x254 (ite $x395 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x254 (_ bv1 32))))
 (let (($x90 (=> $x129 $x404)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x123 (concat ?x100 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv4 32))))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x287 (concat ?x53 ?x123))))
 (let (($x277 (= ?x127 ?x127)))
 (let (($x141 (=> $x129 $x277)))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5632X))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv2 32))) ?x266)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv3 32))) ?x106)))
 (let (($x126 (= ?x341 ?x341)))
 (let (($x88 (=> $x129 $x126)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x114 (concat ?x13 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x71 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x68 (bvadd ?x71 (_ bv3 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem ?x68) (concat ?x29 ?x114))))
 (let ((?x371 (bvadd ?x69 (_ bv4 32))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv1 32))) (select input.dst.llvm-mem ?x371))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x371 (_ bv2 32))) ?x309))))
 (let (($x399 (= (_ bv0 32) ?x374)))
 (let ((?x352 (ite $x399 (_ bv0 32) (_ bv1 32))))
 (let (($x58 (bvuge ?x352 (_ bv1 32))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x65 (_ bv4 32))))))
 (let ((?x436 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x65 (_ bv4 32)) (_ bv2 32))) ?x311)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x65 (_ bv4 32)) (_ bv3 32))) ?x436)))
 (let (($x113 (= (_ bv0 32) ?x280)))
 (let ((?x435 (ite $x113 (_ bv0 32) (_ bv1 32))))
 (let (($x369 (bvuge ?x435 (_ bv1 32))))
 (let (($x293 (= $x369 $x58)))
 (let (($x258 (=> $x129 $x293)))
 (let (($x164 (= false false)))
 (let (($x367 (= ?x435 (_ bv0 32))))
 (let (($x155 (and $x129 $x367)))
 (let (($x196 (=> $x155 $x164)))
 (let (($x281 (= ?x352 (_ bv0 32))))
 (let (($x256 (= $x367 $x281)))
 (let (($x25 (=> $x129 $x256)))
 (let (($x136 (= (_ bv0 32) ?x69)))
 (let ((?x402 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x365 (bvuge ?x402 (_ bv1 32))))
 (let (($x430 (= $x129 $x365)))
 (let (($x83 (= ?x402 (_ bv0 32))))
 (let (($x283 (= ?x254 (_ bv0 32))))
 (let (($x276 (= $x283 $x83)))
 (let (($x191 (and (and (and (and (and (= ?x65 ?x69) (=> $x283 $x164)) $x276) $x430) $x25) $x196)))
 (let (($x346 (and (and (and (and $x191 $x258) $x88) $x141) $x90)))
 (let (($x357 (not true)))
 (let (($x171 (or $x357 $x346)))
 (let (($x133 (= true true)))
 (let (($x438 (and $x133 $x171)))
 (let (($x515 (= $x438 true)))
 (let (($x397 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x242 (= $x247 $x397)))
 (let (($x285 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x269 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x348 (= $x269 $x285)))
 (let (($x243 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x252 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x406 (= $x252 $x243)))
 (let (($x350 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x355 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x375 (= $x355 $x350)))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x372 (and (and (and (and $x356 $x375) $x406) $x348) $x242)))
 (let (($x66 (= $x372 true)))
 (let (($x146 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x257 (=> $x146 $x164)))
 (let (($x249 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x267 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x331 (= $x267 $x249)))
 (let (($x272 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x268 (= $x146 $x272)))
 (let (($x340 (and (and $x268 $x331) $x257)))
 (let (($x282 (= $x340 true)))
 (let (($x270 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x292 (= $x267 $x270)))
 (let (($x233 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x236 (= $x146 $x233)))
 (let (($x296 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x361 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x351 (= $x361 $x296)))
 (let (($x261 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x16 (= $x170 $x261)))
 (let (($x353 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x333 (and (and (and (and $x353 $x16) $x351) $x236) $x292)))
 (let (($x368 (= $x333 true)))
 (let (($x360 (=> $x170 $x164)))
 (let (($x403 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x234 (= $x361 $x403)))
 (let (($x250 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x237 (= $x170 $x250)))
 (let (($x248 (and (and $x237 $x234) $x360)))
 (let (($x370 (= $x248 true)))
 (let (($x396 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x154 (=> $x396 $x164)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x307 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x307 (_ bv1 32))))
 (let (($x135 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x330 (= $x135 $x227)))
 (let (($x229 (= ?x307 (_ bv0 32))))
 (let (($x472 (= $x396 $x229)))
 (let (($x434 (and (and $x472 $x330) $x154)))
 (let (($x288 (= $x434 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x359 (concat ?x224 (concat ?x342 (concat ?x215 ?x132)))))
 (let (($x471 (= ?x359 input.dst.llvm-%t)))
 (let (($x291 (= $x471 true)))
 (let (($x347 (= $x291 true)))
 (let (($x78 (= (bvand ?x69 (_ bv4294967280 32)) ?x69)))
 (let (($x401 (= (bvand ?x71 (_ bv4294967292 32)) ?x71)))
 (let (($x318 (and $x401 $x78)))
 (let (($x108 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x297 (and true $x108)))
 (let (($x303 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x71 (bvsub ?x71 (_ bv4 32))) (bvult ?x71 (bvsub ?x71 (_ bv4 32))))))
 (let (($x56 (and (and (and $x303 $x297) $x401) $x318)))
 (let (($x220 (= true $x56)))
 (let (($x89 (not $x18)))
 (let (($x67 (=> $x89 $x220)))
 (let (($x185 (= $x67 true)))
 (let (($x306 (= $x185 true)))
 (let (($x305 (= $x306 true)))
 (let (($x302 (not $x136)))
 (let (($x221 (=> $x302 $x220)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x189 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x81 (_ bv3 32))))
 (let ((?x93 (concat (select input.dst.llvm-mem ?x45) (concat ?x57 ?x189))))
 (let (($x36 (= (bvand ?x93 (_ bv4294967280 32)) ?x93)))
 (let (($x321 (= (bvand ?x81 (_ bv4294967292 32)) ?x81)))
 (let (($x15 (and $x321 $x36)))
 (let (($x393 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x81 (bvsub ?x81 (_ bv8 32))) (bvult ?x81 (bvsub ?x81 (_ bv8 32))))))
 (let (($x139 (and (and (and $x393 $x297) $x321) $x15)))
 (let (($x216 (= true $x139)))
 (let (($x209 (=> $x136 $x216)))
 (let (($x105 (and $x209 $x221)))
 (let (($x366 (= true $x105)))
 (let (($x197 (or $x136 $x302)))
 (let (($x190 (and $x89 $x197)))
 (let (($x40 (=> $x190 $x366)))
 (let (($x226 (= $x40 true)))
 (let (($x43 (= $x226 true)))
 (let (($x131 (= $x43 true)))
 (let (($x214 (= input.dst.llvm-%t ?x359)))
 (let (($x49 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x223 (and $x49 $x214)))
 (let ((?x316 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x176 (= (_ bv0 32) ?x316)))
 (let ((?x319 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x392 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x319)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x186 $x392)))
 (let (($x301 (and $x160 $x176)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x299 (and $x28 $x301)))
 (let (($x152 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x152)))))))
 (let (($x315 (and (and (and $x179 true) $x299) $x223)))
 (let (($x5 (and $x67 $x315)))
 (let (($x394 (and $x40 $x5)))
 (let (($x144 (= $x394 true)))
 (let (($x225 (= $x144 true)))
 (let (($x151 (= $x225 true)))
 (let (($x194 (and $x89 $x302)))
 (let (($x192 (= $x194 true)))
 (let (($x44 (= $x192 true)))
 (let (($x183 (= $x44 true)))
 (let (($x175 (= $x49 true)))
 (let (($x198 (= $x175 true)))
 (let (($x173 (= $x198 true)))
 (let (($x156 (and $x179 $x299)))
 (let (($x174 (= $x156 true)))
 (let (($x298 (= $x174 true)))
 (let (($x143 (= $x298 true)))
 (let (($x184 (and $x143 $x173)))
 (let (($x55 (and $x184 $x173)))
 (let (($x140 (and $x55 $x183)))
 (let (($x323 (and $x140 $x151)))
 (let (($x344 (and $x323 $x131)))
 (let (($x228 (and $x344 $x305)))
 (let (($x50 (and $x228 $x347)))
 (let (($x324 (and $x50 $x288)))
 (let (($x405 (and $x324 $x288)))
 (let (($x230 (and $x405 $x370)))
 (let (($x432 (and $x230 $x368)))
 (let (($x433 (and $x432 $x282)))
 (let (($x275 (and $x433 $x66)))
 (let (($x166 (and $x135 $x170)))
 (let (($x265 (and $x166 $x275)))
 (let (($x317 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x345 (and $x317 $x265)))
 (let (($x239 (and $x164 $x345)))
 (let (($x313 (and $x164 $x239)))
 (let (($x94 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x137 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x80 (and $x89 $x136)))
 (let (($x295 (=> (and $x80 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x110 (bvugt ?x71 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x23 (=> (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x110)))))))
 (let (($x70 (=> (and $x89 (bvule ?x71 (bvsub (bvadd ?x71 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x92 $x110)))))))
 (let (($x124 (and $x70 $x295)))
 (let (($x72 (and $x124 $x313)))
 (let (($x376 (=> $x72 $x515)))
 (not $x376))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5632X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4288560114 32) (_ bv1 8)) (_ bv65540 32) (_ bv128 8)) (_ bv65541 32) (_ bv35 8)) (_ bv65542 32) (_ bv224 8)) (_ bv65543 32) (_ bv162 8)) (_ bv65544 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv65536 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4288560115 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x3030303c)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x30)
                     #x9b303034
                     #x67)
              #x30303038
              #x35)
       #x30303037
       #x9b))
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x30303030)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x3030303c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x3030303f)
  (define-fun input.ind-%var5632X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5632X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x791 (concat ?x85 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv8 32))))))
 (let ((?x793 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x800 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x821 (concat ?x800 (concat ?x793 ?x791))))
 (let (($x799 (= ?x821 ?x821)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x365 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x312 (concat ?x264 (concat ?x398 ?x365))))
 (let (($x325 (= (_ bv0 32) ?x312)))
 (let ((?x120 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x435 (bvuge ?x120 (_ bv1 32))))
 (let (($x796 (=> $x435 $x799)))
 (let ((?x776 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x789 (concat ?x776 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv4 32))))))
 (let ((?x782 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x778 (concat ?x781 (concat ?x782 ?x789))))
 (let (($x779 (= ?x778 ?x778)))
 (let (($x788 (=> $x435 $x779)))
 (let ((?x786 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5632X))))
 (let ((?x766 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv2 32))) ?x786)))
 (let ((?x772 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv3 32))) ?x766)))
 (let (($x784 (= ?x772 ?x772)))
 (let (($x787 (=> $x435 $x784)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x13 (concat ?x130 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x82 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x46 (bvadd ?x82 (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x46) (concat ?x104 ?x13))))
 (let ((?x756 (bvadd ?x80 (_ bv4 32))))
 (let ((?x762 (concat (select input.dst.llvm-mem (bvadd ?x756 (_ bv1 32))) (select input.dst.llvm-mem ?x756))))
 (let ((?x813 (concat (select input.dst.llvm-mem (bvadd ?x756 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x756 (_ bv2 32))) ?x762))))
 (let (($x759 (= (_ bv0 32) ?x813)))
 (let ((?x809 (ite $x759 (_ bv0 32) (_ bv1 32))))
 (let (($x822 (bvuge ?x809 (_ bv1 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x312 (_ bv4 32))))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv4 32)) (_ bv2 32))) ?x58)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv4 32)) (_ bv3 32))) ?x210)))
 (let (($x470 (= (_ bv0 32) ?x181)))
 (let ((?x24 (ite $x470 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x24 (_ bv1 32))))
 (let (($x814 (= $x106 $x822)))
 (let (($x765 (=> $x435 $x814)))
 (let (($x317 (= false false)))
 (let (($x21 (= ?x24 (_ bv0 32))))
 (let (($x774 (and $x435 $x21)))
 (let (($x770 (=> $x774 $x317)))
 (let (($x763 (= ?x809 (_ bv0 32))))
 (let (($x767 (= $x21 $x763)))
 (let (($x768 (=> $x435 $x767)))
 (let (($x30 (= (_ bv0 32) ?x80)))
 (let ((?x753 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x805 (bvuge ?x753 (_ bv1 32))))
 (let (($x758 (= $x435 $x805)))
 (let (($x808 (= ?x753 (_ bv0 32))))
 (let (($x255 (= ?x120 (_ bv0 32))))
 (let (($x754 (= $x255 $x808)))
 (let (($x41 (and (and (and (and (and (= ?x312 ?x80) (=> $x255 $x317)) $x754) $x758) $x768) $x770)))
 (let (($x115 (and (and (and (and $x41 $x765) $x787) $x788) $x796)))
 (let (($x807 (not true)))
 (let (($x188 (or $x807 $x115)))
 (let (($x801 (= true true)))
 (let (($x86 (and $x801 $x188)))
 (let (($x91 (= $x86 true)))
 (let (($x681 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x521 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x734 (= $x521 $x681)))
 (let (($x395 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x700 (=> $x395 $x734)))
 (let (($x456 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x712 (and $x395 $x456)))
 (let (($x699 (=> $x712 $x317)))
 (let (($x680 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x730 (= $x456 $x680)))
 (let (($x708 (=> $x395 $x730)))
 (let (($x729 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x442 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x679 (= $x442 $x729)))
 (let (($x692 (=> $x395 $x679)))
 (let (($x480 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x718 (and $x395 $x480)))
 (let (($x698 (=> $x718 $x317)))
 (let (($x678 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x691 (= $x480 $x678)))
 (let (($x707 (=> $x395 $x691)))
 (let (($x741 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x676 (=> $x395 $x741)))
 (let (($x239 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x706 (=> $x239 $x317)))
 (let (($x728 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x410 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x675 (= $x410 $x728)))
 (let (($x372 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x717 (=> $x372 $x675)))
 (let (($x390 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x739 (and $x372 $x390)))
 (let (($x714 (=> $x739 $x317)))
 (let (($x736 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x674 (= $x390 $x736)))
 (let (($x690 (=> $x372 $x674)))
 (let (($x727 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x672 (= $x409 $x727)))
 (let (($x733 (=> $x372 $x672)))
 (let (($x446 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x705 (and $x372 $x446)))
 (let (($x689 (=> $x705 $x317)))
 (let (($x726 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x671 (= $x446 $x726)))
 (let (($x696 (=> $x372 $x671)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x670 (=> $x372 $x695)))
 (let (($x335 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x743 (=> $x335 $x317)))
 (let (($x711 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x694 (= $x395 $x711)))
 (let (($x703 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x669 (= $x239 $x703)))
 (let (($x725 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x713 (= $x372 $x725)))
 (let (($x687 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x668 (= $x335 $x687)))
 (let (($x735 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x731 (and (and (and (and (and (and $x735 $x668) $x713) $x669) $x694) $x743) $x670)))
 (let (($x715 (and (and (and (and (and (and $x731 $x696) $x689) $x733) $x690) $x714) $x717)))
 (let (($x746 (and (and (and (and (and (and $x715 $x706) $x676) $x707) $x698) $x692) $x708)))
 (let (($x810 (and (and $x746 $x699) $x700)))
 (let (($x748 (= $x810 true)))
 (let (($x652 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x665 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x592 (= $x665 $x652)))
 (let (($x327 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x113 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x627 (and $x113 $x327)))
 (let (($x593 (=> $x627 $x592)))
 (let (($x615 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x634 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x639 (= $x634 $x615)))
 (let (($x660 (=> $x627 $x639)))
 (let (($x590 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x629 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x638 (= $x629 $x590)))
 (let (($x653 (=> $x627 $x638)))
 (let (($x643 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x637 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x609 (= $x637 $x643)))
 (let (($x614 (=> $x627 $x609)))
 (let (($x617 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x603 (=> $x627 $x617)))
 (let (($x656 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x664 (= $x327 $x656)))
 (let (($x587 (=> $x113 $x664)))
 (let (($x429 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x622 (and $x113 $x429)))
 (let (($x532 (=> $x622 $x317)))
 (let (($x585 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x636 (= $x429 $x585)))
 (let (($x586 (=> $x113 $x636)))
 (let (($x647 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x584 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x626 (= $x584 $x647)))
 (let (($x266 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x631 (and $x113 $x266)))
 (let (($x659 (=> $x631 $x626)))
 (let (($x601 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x582 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x608 (= $x582 $x601)))
 (let (($x635 (=> $x631 $x608)))
 (let (($x613 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x580 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x642 (= $x580 $x613)))
 (let (($x581 (=> $x631 $x642)))
 (let (($x578 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x600 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x579 (= $x600 $x578)))
 (let (($x644 (=> $x631 $x579)))
 (let (($x632 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x655 (=> $x631 $x632)))
 (let (($x606 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x607 (= $x266 $x606)))
 (let (($x556 (=> $x113 $x607)))
 (let (($x343 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x548 (and $x113 $x343)))
 (let (($x568 (=> $x548 $x317)))
 (let (($x646 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x663 (= $x343 $x646)))
 (let (($x599 (=> $x113 $x663)))
 (let (($x554 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x555 (=> $x113 $x554)))
 (let (($x402 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x572 (=> $x402 $x317)))
 (let (($x624 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x605 (= $x113 $x624)))
 (let (($x641 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x575 (= $x402 $x641)))
 (let (($x640 (and (and (and (and (and (and $x575 $x605) $x572) $x555) $x599) $x568) $x556)))
 (let (($x662 (and (and (and (and (and (and $x640 $x655) $x644) $x581) $x635) $x659) $x586)))
 (let (($x724 (and (and (and (and (and (and $x662 $x532) $x587) $x603) $x614) $x653) $x660)))
 (let (($x693 (and $x724 $x593)))
 (let (($x34 (= $x693 true)))
 (let (($x526 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x569 (= $x327 $x526)))
 (let (($x571 (=> $x113 $x569)))
 (let (($x498 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x499 (= $x429 $x498)))
 (let (($x500 (=> $x113 $x499)))
 (let (($x539 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x531 (= $x266 $x539)))
 (let (($x508 (=> $x113 $x531)))
 (let (($x561 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x529 (= $x343 $x561)))
 (let (($x562 (=> $x113 $x529)))
 (let (($x621 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x538 (=> $x113 $x621)))
 (let (($x565 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x544 (= $x395 $x565)))
 (let (($x292 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x525 (=> $x292 $x544)))
 (let (($x517 (and $x292 $x239)))
 (let (($x489 (=> $x517 $x317)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x497 (= $x239 $x496)))
 (let (($x507 (=> $x292 $x497)))
 (let (($x620 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x564 (= $x372 $x620)))
 (let (($x506 (=> $x292 $x564)))
 (let (($x474 (and $x292 $x335)))
 (let (($x426 (=> $x474 $x317)))
 (let (($x524 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x494 (= $x335 $x524)))
 (let (($x530 (=> $x292 $x494)))
 (let (($x511 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x560 (=> $x292 $x511)))
 (let (($x300 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x451 (=> $x300 $x317)))
 (let (($x543 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x547 (= $x113 $x543)))
 (let (($x537 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x619 (= $x402 $x537)))
 (let (($x493 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x573 (= $x292 $x493)))
 (let (($x504 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x492 (= $x300 $x504)))
 (let (($x570 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x501 (and (and (and (and (and (and $x570 $x492) $x573) $x619) $x547) $x451) $x560)))
 (let (($x650 (and (and (and (and (and (and $x501 $x530) $x426) $x506) $x507) $x489) $x525)))
 (let (($x552 (and (and (and (and (and (and $x650 $x572) $x538) $x562) $x568) $x508) $x500)))
 (let (($x604 (and (and $x552 $x532) $x571)))
 (let (($x618 (= $x604 true)))
 (let (($x422 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x462 (= $x521 $x422)))
 (let (($x416 (and $x292 $x395)))
 (let (($x443 (=> $x416 $x462)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x421 (= $x456 $x476)))
 (let (($x520 (=> $x416 $x421)))
 (let (($x455 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x465 (= $x442 $x455)))
 (let (($x478 (=> $x416 $x465)))
 (let (($x449 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x418 (= $x480 $x449)))
 (let (($x419 (=> $x416 $x418)))
 (let (($x464 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x448 (=> $x416 $x464)))
 (let (($x441 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x415 (= $x395 $x441)))
 (let (($x514 (=> $x292 $x415)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x239 $x412)))
 (let (($x414 (=> $x292 $x413)))
 (let (($x460 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x411 (= $x410 $x460)))
 (let (($x427 (and $x292 $x372)))
 (let (($x485 (=> $x427 $x411)))
 (let (($x428 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x454 (= $x390 $x428)))
 (let (($x391 (=> $x427 $x454)))
 (let (($x459 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x469 (= $x409 $x459)))
 (let (($x388 (=> $x427 $x469)))
 (let (($x387 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x439 (= $x446 $x387)))
 (let (($x453 (=> $x427 $x439)))
 (let (($x513 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x481 (=> $x427 $x513)))
 (let (($x516 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x452 (= $x372 $x516)))
 (let (($x382 (=> $x292 $x452)))
 (let (($x408 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x488 (= $x335 $x408)))
 (let (($x479 (=> $x292 $x488)))
 (let (($x380 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x381 (=> $x292 $x380)))
 (let (($x378 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x379 (= $x292 $x378)))
 (let (($x458 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x477 (= $x300 $x458)))
 (let (($x444 (and (and (and (and (and (and $x477 $x379) $x451) $x381) $x479) $x426) $x382)))
 (let (($x487 (and (and (and (and (and (and $x444 $x481) $x453) $x388) $x391) $x485) $x414)))
 (let (($x522 (and (and (and (and (and (and $x487 $x489) $x514) $x448) $x419) $x478) $x520)))
 (let (($x509 (and $x522 $x443)))
 (let (($x491 (= $x509 true)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x312 (_ bv8 32))))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv8 32)) (_ bv2 32))) ?x53)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv8 32)) (_ bv3 32))) ?x33)))
 (let (($x277 (= (_ bv0 32) ?x127)))
 (let ((?x141 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x141 (_ bv1 32))))
 (let (($x320 (= $x327 $x31)))
 (let (($x166 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x362 (and $x166 $x113)))
 (let (($x373 (=> $x362 $x320)))
 (let (($x364 (= ?x141 (_ bv0 32))))
 (let (($x279 (= $x429 $x364)))
 (let (($x121 (=> $x362 $x279)))
 (let (($x341 (= $x266 $x106)))
 (let (($x126 (=> $x362 $x341)))
 (let (($x222 (= $x343 $x21)))
 (let (($x103 (=> $x362 $x222)))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv1 32))) (select input.dst.llvm-mem ?x312))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv2 32))) ?x349))))
 (let (($x281 (= input.spec-%var-t-0.2.2.2.0 ?x352)))
 (let (($x256 (=> $x362 $x281)))
 (let (($x367 (= $x113 $x435)))
 (let (($x371 (=> $x166 $x367)))
 (let (($x436 (and $x166 $x402)))
 (let (($x280 (=> $x436 $x317)))
 (let (($x262 (= $x402 $x255)))
 (let (($x311 (=> $x166 $x262)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x16 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (concat ?x260 (concat ?x296 ?x16))))
 (let ((?x313 (bvadd ?x146 (_ bv8 32))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x273))))
 (let (($x263 (= (_ bv0 32) ?x244)))
 (let ((?x251 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x251 (_ bv1 32))))
 (let (($x283 (= $x395 $x254)))
 (let (($x274 (and $x166 $x292)))
 (let (($x22 (=> $x274 $x283)))
 (let (($x48 (= ?x251 (_ bv0 32))))
 (let (($x65 (= $x239 $x48)))
 (let (($x116 (=> $x274 $x65)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x146 (_ bv4 32))))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv2 32))) ?x243)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv3 32))) ?x231)))
 (let (($x348 (= (_ bv0 32) ?x285)))
 (let ((?x238 (ite $x348 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x238 (_ bv1 32))))
 (let (($x275 (= $x372 $x66)))
 (let (($x265 (=> $x274 $x275)))
 (let (($x247 (= ?x238 (_ bv0 32))))
 (let (($x397 (= $x335 $x247)))
 (let (($x242 (=> $x274 $x397)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x278))))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.0 ?x240)))
 (let (($x271 (=> $x274 $x356)))
 (let (($x232 (= (_ bv0 32) ?x146)))
 (let ((?x233 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x333 (bvuge ?x233 (_ bv1 32))))
 (let (($x368 (= $x292 $x333)))
 (let (($x432 (=> $x166 $x368)))
 (let (($x165 (and $x166 $x300)))
 (let (($x270 (=> $x165 $x317)))
 (let (($x236 (= ?x233 (_ bv0 32))))
 (let (($x241 (= $x300 $x236)))
 (let (($x267 (=> $x166 $x241)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x237)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x234)))
 (let (($x370 (= input.spec-%var-t-0.2.0 ?x248)))
 (let (($x230 (=> $x166 $x370)))
 (let (($x330 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x324 (=> $x330 $x317)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x245 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x245 (_ bv1 32))))
 (let (($x288 (= $x166 $x434)))
 (let (($x164 (= ?x245 (_ bv0 32))))
 (let (($x154 (= $x330 $x164)))
 (let (($x404 (and (and (and (and (and (and $x154 $x288) $x324) $x230) $x267) $x270) $x432)))
 (let (($x376 (and (and (and (and (and (and $x404 $x271) $x242) $x265) $x116) $x22) $x311)))
 (let (($x377 (and (and (and (and (and (and $x376 $x280) $x371) $x256) $x103) $x126) $x121)))
 (let (($x407 (and $x377 $x373)))
 (let (($x450 (= $x407 true)))
 (let ((?x342 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x354 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x315 (concat ?x223 (concat ?x354 (concat ?x215 ?x342)))))
 (let (($x307 (= ?x315 input.dst.llvm-%t)))
 (let (($x229 (= $x307 true)))
 (let (($x472 (= $x229 true)))
 (let (($x56 (= (bvand ?x80 (_ bv4294967280 32)) ?x80)))
 (let (($x78 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x220 (and $x78 $x56)))
 (let (($x199 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x321 (and true $x199)))
 (let (($x187 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv4 32))) (bvult ?x82 (bvsub ?x82 (_ bv4 32))))))
 (let (($x366 (and (and (and $x187 $x321) $x78) $x220)))
 (let (($x40 (= true $x366)))
 (let (($x89 (not $x18)))
 (let (($x224 (=> $x89 $x40)))
 (let (($x291 (= $x224 true)))
 (let (($x347 (= $x291 true)))
 (let (($x50 (= $x347 true)))
 (let (($x183 (not $x30)))
 (let (($x67 (=> $x183 $x40)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x205 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x128 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x128 (_ bv3 32))))
 (let ((?x36 (concat (select input.dst.llvm-mem ?x26) (concat ?x358 ?x205))))
 (let (($x139 (= (bvand ?x36 (_ bv4294967280 32)) ?x36)))
 (let (($x208 (= (bvand ?x128 (_ bv4294967292 32)) ?x128)))
 (let (($x216 (and $x208 $x139)))
 (let (($x213 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x128 (bvsub ?x128 (_ bv8 32))) (bvult ?x128 (bvsub ?x128 (_ bv8 32))))))
 (let (($x99 (and (and (and $x213 $x321) $x208) $x216)))
 (let (($x38 (= true $x99)))
 (let (($x217 (=> $x30 $x38)))
 (let (($x51 (and $x217 $x67)))
 (let (($x290 (= true $x51)))
 (let (($x8 (or $x30 $x183)))
 (let (($x204 (and $x89 $x8)))
 (let (($x332 (=> $x204 $x290)))
 (let (($x306 (= $x332 true)))
 (let (($x305 (= $x306 true)))
 (let (($x228 (= $x305 true)))
 (let (($x5 (= input.dst.llvm-%t ?x315)))
 (let (($x184 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x394 (and $x184 $x5)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x156)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x176)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x299 (and $x316 $x301)))
 (let (($x298 (and $x299 $x174)))
 (let (($x152 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x152 $x298)))
 (let (($x179 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x179)))))))
 (let (($x151 (and (and (and $x160 true) $x143) $x394)))
 (let (($x323 (and $x224 $x151)))
 (let (($x226 (and $x332 $x323)))
 (let (($x43 (= $x226 true)))
 (let (($x131 (= $x43 true)))
 (let (($x344 (= $x131 true)))
 (let (($x140 (and $x89 $x183)))
 (let (($x197 (= $x140 true)))
 (let (($x190 (= $x197 true)))
 (let (($x202 (= $x190 true)))
 (let (($x55 (= $x184 true)))
 (let (($x302 (= $x55 true)))
 (let (($x194 (= $x302 true)))
 (let (($x178 (and $x160 $x143)))
 (let (($x180 (= $x178 true)))
 (let (($x49 (= $x180 true)))
 (let (($x175 (= $x49 true)))
 (let (($x192 (and $x175 $x194)))
 (let (($x44 (and $x192 $x194)))
 (let (($x195 (and $x44 $x202)))
 (let (($x185 (and $x195 $x344)))
 (let (($x471 (and $x185 $x228)))
 (let (($x396 (and $x471 $x50)))
 (let (($x227 (and $x396 $x472)))
 (let (($x473 (and $x227 $x450)))
 (let (($x484 (and $x473 $x450)))
 (let (($x523 (and $x484 $x491)))
 (let (($x654 (and $x523 $x618)))
 (let (($x111 (and $x654 $x34)))
 (let (($x811 (and $x111 $x748)))
 (let (($x749 (and $x165 $x811)))
 (let (($x145 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x817 (and $x145 $x749)))
 (let (($x750 (and $x317 $x817)))
 (let (($x751 (and $x317 $x750)))
 (let (($x163 (bvugt ?x128 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x177 (=> (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x81 (and $x89 $x30)))
 (let (($x95 (=> (and $x81 (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x7 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x46)))
 (let (($x76 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x20 (=> (and $x89 (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x45 (and $x20 $x95)))
 (let (($x752 (and $x45 $x751)))
 (let (($x97 (=> $x752 $x91)))
 (not $x
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5632X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x791 (concat ?x85 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv8 32))))))
 (let ((?x793 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x800 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x821 (concat ?x800 (concat ?x793 ?x791))))
 (let (($x799 (= ?x821 ?x821)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x365 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x312 (concat ?x264 (concat ?x398 ?x365))))
 (let (($x325 (= (_ bv0 32) ?x312)))
 (let ((?x120 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x435 (bvuge ?x120 (_ bv1 32))))
 (let (($x796 (=> $x435 $x799)))
 (let ((?x776 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x789 (concat ?x776 (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv4 32))))))
 (let ((?x782 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5632X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x778 (concat ?x781 (concat ?x782 ?x789))))
 (let (($x779 (= ?x778 ?x778)))
 (let (($x788 (=> $x435 $x779)))
 (let ((?x786 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5632X))))
 (let ((?x766 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv2 32))) ?x786)))
 (let ((?x772 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5632X (_ bv3 32))) ?x766)))
 (let (($x784 (= ?x772 ?x772)))
 (let (($x787 (=> $x435 $x784)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x13 (concat ?x130 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x82 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x46 (bvadd ?x82 (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x46) (concat ?x104 ?x13))))
 (let ((?x756 (bvadd ?x80 (_ bv4 32))))
 (let ((?x762 (concat (select input.dst.llvm-mem (bvadd ?x756 (_ bv1 32))) (select input.dst.llvm-mem ?x756))))
 (let ((?x813 (concat (select input.dst.llvm-mem (bvadd ?x756 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x756 (_ bv2 32))) ?x762))))
 (let (($x759 (= (_ bv0 32) ?x813)))
 (let ((?x809 (ite $x759 (_ bv0 32) (_ bv1 32))))
 (let (($x822 (bvuge ?x809 (_ bv1 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x312 (_ bv4 32))))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv4 32)) (_ bv2 32))) ?x58)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv4 32)) (_ bv3 32))) ?x210)))
 (let (($x470 (= (_ bv0 32) ?x181)))
 (let ((?x24 (ite $x470 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x24 (_ bv1 32))))
 (let (($x814 (= $x106 $x822)))
 (let (($x765 (=> $x435 $x814)))
 (let (($x317 (= false false)))
 (let (($x21 (= ?x24 (_ bv0 32))))
 (let (($x774 (and $x435 $x21)))
 (let (($x770 (=> $x774 $x317)))
 (let (($x763 (= ?x809 (_ bv0 32))))
 (let (($x767 (= $x21 $x763)))
 (let (($x768 (=> $x435 $x767)))
 (let (($x30 (= (_ bv0 32) ?x80)))
 (let ((?x753 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x805 (bvuge ?x753 (_ bv1 32))))
 (let (($x758 (= $x435 $x805)))
 (let (($x808 (= ?x753 (_ bv0 32))))
 (let (($x255 (= ?x120 (_ bv0 32))))
 (let (($x754 (= $x255 $x808)))
 (let (($x41 (and (and (and (and (and (= ?x312 ?x80) (=> $x255 $x317)) $x754) $x758) $x768) $x770)))
 (let (($x115 (and (and (and (and $x41 $x765) $x787) $x788) $x796)))
 (let (($x807 (not true)))
 (let (($x188 (or $x807 $x115)))
 (let (($x801 (= true true)))
 (let (($x86 (and $x801 $x188)))
 (let (($x91 (= $x86 true)))
 (let (($x681 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x521 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x734 (= $x521 $x681)))
 (let (($x395 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x700 (=> $x395 $x734)))
 (let (($x456 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x712 (and $x395 $x456)))
 (let (($x699 (=> $x712 $x317)))
 (let (($x680 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x730 (= $x456 $x680)))
 (let (($x708 (=> $x395 $x730)))
 (let (($x729 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x442 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x679 (= $x442 $x729)))
 (let (($x692 (=> $x395 $x679)))
 (let (($x480 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x718 (and $x395 $x480)))
 (let (($x698 (=> $x718 $x317)))
 (let (($x678 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x691 (= $x480 $x678)))
 (let (($x707 (=> $x395 $x691)))
 (let (($x741 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x676 (=> $x395 $x741)))
 (let (($x239 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x706 (=> $x239 $x317)))
 (let (($x728 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x410 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x675 (= $x410 $x728)))
 (let (($x372 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x717 (=> $x372 $x675)))
 (let (($x390 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x739 (and $x372 $x390)))
 (let (($x714 (=> $x739 $x317)))
 (let (($x736 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x674 (= $x390 $x736)))
 (let (($x690 (=> $x372 $x674)))
 (let (($x727 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x672 (= $x409 $x727)))
 (let (($x733 (=> $x372 $x672)))
 (let (($x446 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x705 (and $x372 $x446)))
 (let (($x689 (=> $x705 $x317)))
 (let (($x726 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x671 (= $x446 $x726)))
 (let (($x696 (=> $x372 $x671)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x670 (=> $x372 $x695)))
 (let (($x335 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x743 (=> $x335 $x317)))
 (let (($x711 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x694 (= $x395 $x711)))
 (let (($x703 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x669 (= $x239 $x703)))
 (let (($x725 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x713 (= $x372 $x725)))
 (let (($x687 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x668 (= $x335 $x687)))
 (let (($x735 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x731 (and (and (and (and (and (and $x735 $x668) $x713) $x669) $x694) $x743) $x670)))
 (let (($x715 (and (and (and (and (and (and $x731 $x696) $x689) $x733) $x690) $x714) $x717)))
 (let (($x746 (and (and (and (and (and (and $x715 $x706) $x676) $x707) $x698) $x692) $x708)))
 (let (($x810 (and (and $x746 $x699) $x700)))
 (let (($x748 (= $x810 true)))
 (let (($x652 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x665 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x592 (= $x665 $x652)))
 (let (($x327 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x113 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x627 (and $x113 $x327)))
 (let (($x593 (=> $x627 $x592)))
 (let (($x615 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x634 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x639 (= $x634 $x615)))
 (let (($x660 (=> $x627 $x639)))
 (let (($x590 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x629 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x638 (= $x629 $x590)))
 (let (($x653 (=> $x627 $x638)))
 (let (($x643 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x637 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x609 (= $x637 $x643)))
 (let (($x614 (=> $x627 $x609)))
 (let (($x617 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x603 (=> $x627 $x617)))
 (let (($x656 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x664 (= $x327 $x656)))
 (let (($x587 (=> $x113 $x664)))
 (let (($x429 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x622 (and $x113 $x429)))
 (let (($x532 (=> $x622 $x317)))
 (let (($x585 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x636 (= $x429 $x585)))
 (let (($x586 (=> $x113 $x636)))
 (let (($x647 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x584 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x626 (= $x584 $x647)))
 (let (($x266 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x631 (and $x113 $x266)))
 (let (($x659 (=> $x631 $x626)))
 (let (($x601 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x582 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x608 (= $x582 $x601)))
 (let (($x635 (=> $x631 $x608)))
 (let (($x613 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x580 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x642 (= $x580 $x613)))
 (let (($x581 (=> $x631 $x642)))
 (let (($x578 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x600 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x579 (= $x600 $x578)))
 (let (($x644 (=> $x631 $x579)))
 (let (($x632 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x655 (=> $x631 $x632)))
 (let (($x606 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x607 (= $x266 $x606)))
 (let (($x556 (=> $x113 $x607)))
 (let (($x343 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x548 (and $x113 $x343)))
 (let (($x568 (=> $x548 $x317)))
 (let (($x646 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x663 (= $x343 $x646)))
 (let (($x599 (=> $x113 $x663)))
 (let (($x554 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x555 (=> $x113 $x554)))
 (let (($x402 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x572 (=> $x402 $x317)))
 (let (($x624 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x605 (= $x113 $x624)))
 (let (($x641 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x575 (= $x402 $x641)))
 (let (($x640 (and (and (and (and (and (and $x575 $x605) $x572) $x555) $x599) $x568) $x556)))
 (let (($x662 (and (and (and (and (and (and $x640 $x655) $x644) $x581) $x635) $x659) $x586)))
 (let (($x724 (and (and (and (and (and (and $x662 $x532) $x587) $x603) $x614) $x653) $x660)))
 (let (($x693 (and $x724 $x593)))
 (let (($x34 (= $x693 true)))
 (let (($x526 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x569 (= $x327 $x526)))
 (let (($x571 (=> $x113 $x569)))
 (let (($x498 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x499 (= $x429 $x498)))
 (let (($x500 (=> $x113 $x499)))
 (let (($x539 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x531 (= $x266 $x539)))
 (let (($x508 (=> $x113 $x531)))
 (let (($x561 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x529 (= $x343 $x561)))
 (let (($x562 (=> $x113 $x529)))
 (let (($x621 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x538 (=> $x113 $x621)))
 (let (($x565 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x544 (= $x395 $x565)))
 (let (($x292 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x525 (=> $x292 $x544)))
 (let (($x517 (and $x292 $x239)))
 (let (($x489 (=> $x517 $x317)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x497 (= $x239 $x496)))
 (let (($x507 (=> $x292 $x497)))
 (let (($x620 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x564 (= $x372 $x620)))
 (let (($x506 (=> $x292 $x564)))
 (let (($x474 (and $x292 $x335)))
 (let (($x426 (=> $x474 $x317)))
 (let (($x524 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x494 (= $x335 $x524)))
 (let (($x530 (=> $x292 $x494)))
 (let (($x511 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x560 (=> $x292 $x511)))
 (let (($x300 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x451 (=> $x300 $x317)))
 (let (($x543 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x547 (= $x113 $x543)))
 (let (($x537 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x619 (= $x402 $x537)))
 (let (($x493 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x573 (= $x292 $x493)))
 (let (($x504 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x492 (= $x300 $x504)))
 (let (($x570 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x501 (and (and (and (and (and (and $x570 $x492) $x573) $x619) $x547) $x451) $x560)))
 (let (($x650 (and (and (and (and (and (and $x501 $x530) $x426) $x506) $x507) $x489) $x525)))
 (let (($x552 (and (and (and (and (and (and $x650 $x572) $x538) $x562) $x568) $x508) $x500)))
 (let (($x604 (and (and $x552 $x532) $x571)))
 (let (($x618 (= $x604 true)))
 (let (($x422 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x462 (= $x521 $x422)))
 (let (($x416 (and $x292 $x395)))
 (let (($x443 (=> $x416 $x462)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x421 (= $x456 $x476)))
 (let (($x520 (=> $x416 $x421)))
 (let (($x455 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x465 (= $x442 $x455)))
 (let (($x478 (=> $x416 $x465)))
 (let (($x449 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x418 (= $x480 $x449)))
 (let (($x419 (=> $x416 $x418)))
 (let (($x464 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x448 (=> $x416 $x464)))
 (let (($x441 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x415 (= $x395 $x441)))
 (let (($x514 (=> $x292 $x415)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x239 $x412)))
 (let (($x414 (=> $x292 $x413)))
 (let (($x460 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x411 (= $x410 $x460)))
 (let (($x427 (and $x292 $x372)))
 (let (($x485 (=> $x427 $x411)))
 (let (($x428 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x454 (= $x390 $x428)))
 (let (($x391 (=> $x427 $x454)))
 (let (($x459 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x469 (= $x409 $x459)))
 (let (($x388 (=> $x427 $x469)))
 (let (($x387 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x439 (= $x446 $x387)))
 (let (($x453 (=> $x427 $x439)))
 (let (($x513 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x481 (=> $x427 $x513)))
 (let (($x516 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x452 (= $x372 $x516)))
 (let (($x382 (=> $x292 $x452)))
 (let (($x408 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x488 (= $x335 $x408)))
 (let (($x479 (=> $x292 $x488)))
 (let (($x380 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x381 (=> $x292 $x380)))
 (let (($x378 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x379 (= $x292 $x378)))
 (let (($x458 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x477 (= $x300 $x458)))
 (let (($x444 (and (and (and (and (and (and $x477 $x379) $x451) $x381) $x479) $x426) $x382)))
 (let (($x487 (and (and (and (and (and (and $x444 $x481) $x453) $x388) $x391) $x485) $x414)))
 (let (($x522 (and (and (and (and (and (and $x487 $x489) $x514) $x448) $x419) $x478) $x520)))
 (let (($x509 (and $x522 $x443)))
 (let (($x491 (= $x509 true)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x312 (_ bv8 32))))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv8 32)) (_ bv2 32))) ?x53)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x312 (_ bv8 32)) (_ bv3 32))) ?x33)))
 (let (($x277 (= (_ bv0 32) ?x127)))
 (let ((?x141 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x141 (_ bv1 32))))
 (let (($x320 (= $x327 $x31)))
 (let (($x166 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x362 (and $x166 $x113)))
 (let (($x373 (=> $x362 $x320)))
 (let (($x364 (= ?x141 (_ bv0 32))))
 (let (($x279 (= $x429 $x364)))
 (let (($x121 (=> $x362 $x279)))
 (let (($x341 (= $x266 $x106)))
 (let (($x126 (=> $x362 $x341)))
 (let (($x222 (= $x343 $x21)))
 (let (($x103 (=> $x362 $x222)))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv1 32))) (select input.dst.llvm-mem ?x312))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv2 32))) ?x349))))
 (let (($x281 (= input.spec-%var-t-0.2.2.2.0 ?x352)))
 (let (($x256 (=> $x362 $x281)))
 (let (($x367 (= $x113 $x435)))
 (let (($x371 (=> $x166 $x367)))
 (let (($x436 (and $x166 $x402)))
 (let (($x280 (=> $x436 $x317)))
 (let (($x262 (= $x402 $x255)))
 (let (($x311 (=> $x166 $x262)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x16 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (concat ?x260 (concat ?x296 ?x16))))
 (let ((?x313 (bvadd ?x146 (_ bv8 32))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x273))))
 (let (($x263 (= (_ bv0 32) ?x244)))
 (let ((?x251 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x251 (_ bv1 32))))
 (let (($x283 (= $x395 $x254)))
 (let (($x274 (and $x166 $x292)))
 (let (($x22 (=> $x274 $x283)))
 (let (($x48 (= ?x251 (_ bv0 32))))
 (let (($x65 (= $x239 $x48)))
 (let (($x116 (=> $x274 $x65)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x146 (_ bv4 32))))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv2 32))) ?x243)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv3 32))) ?x231)))
 (let (($x348 (= (_ bv0 32) ?x285)))
 (let ((?x238 (ite $x348 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x238 (_ bv1 32))))
 (let (($x275 (= $x372 $x66)))
 (let (($x265 (=> $x274 $x275)))
 (let (($x247 (= ?x238 (_ bv0 32))))
 (let (($x397 (= $x335 $x247)))
 (let (($x242 (=> $x274 $x397)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x278))))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.0 ?x240)))
 (let (($x271 (=> $x274 $x356)))
 (let (($x232 (= (_ bv0 32) ?x146)))
 (let ((?x233 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x333 (bvuge ?x233 (_ bv1 32))))
 (let (($x368 (= $x292 $x333)))
 (let (($x432 (=> $x166 $x368)))
 (let (($x165 (and $x166 $x300)))
 (let (($x270 (=> $x165 $x317)))
 (let (($x236 (= ?x233 (_ bv0 32))))
 (let (($x241 (= $x300 $x236)))
 (let (($x267 (=> $x166 $x241)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x237)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x234)))
 (let (($x370 (= input.spec-%var-t-0.2.0 ?x248)))
 (let (($x230 (=> $x166 $x370)))
 (let (($x330 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x324 (=> $x330 $x317)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x245 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x245 (_ bv1 32))))
 (let (($x288 (= $x166 $x434)))
 (let (($x164 (= ?x245 (_ bv0 32))))
 (let (($x154 (= $x330 $x164)))
 (let (($x404 (and (and (and (and (and (and $x154 $x288) $x324) $x230) $x267) $x270) $x432)))
 (let (($x376 (and (and (and (and (and (and $x404 $x271) $x242) $x265) $x116) $x22) $x311)))
 (let (($x377 (and (and (and (and (and (and $x376 $x280) $x371) $x256) $x103) $x126) $x121)))
 (let (($x407 (and $x377 $x373)))
 (let (($x450 (= $x407 true)))
 (let ((?x342 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x354 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x315 (concat ?x223 (concat ?x354 (concat ?x215 ?x342)))))
 (let (($x307 (= ?x315 input.dst.llvm-%t)))
 (let (($x229 (= $x307 true)))
 (let (($x472 (= $x229 true)))
 (let (($x56 (= (bvand ?x80 (_ bv4294967280 32)) ?x80)))
 (let (($x78 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x220 (and $x78 $x56)))
 (let (($x199 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x321 (and true $x199)))
 (let (($x187 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv4 32))) (bvult ?x82 (bvsub ?x82 (_ bv4 32))))))
 (let (($x366 (and (and (and $x187 $x321) $x78) $x220)))
 (let (($x40 (= true $x366)))
 (let (($x89 (not $x18)))
 (let (($x224 (=> $x89 $x40)))
 (let (($x291 (= $x224 true)))
 (let (($x347 (= $x291 true)))
 (let (($x50 (= $x347 true)))
 (let (($x183 (not $x30)))
 (let (($x67 (=> $x183 $x40)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x205 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x128 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x128 (_ bv3 32))))
 (let ((?x36 (concat (select input.dst.llvm-mem ?x26) (concat ?x358 ?x205))))
 (let (($x139 (= (bvand ?x36 (_ bv4294967280 32)) ?x36)))
 (let (($x208 (= (bvand ?x128 (_ bv4294967292 32)) ?x128)))
 (let (($x216 (and $x208 $x139)))
 (let (($x213 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x128 (bvsub ?x128 (_ bv8 32))) (bvult ?x128 (bvsub ?x128 (_ bv8 32))))))
 (let (($x99 (and (and (and $x213 $x321) $x208) $x216)))
 (let (($x38 (= true $x99)))
 (let (($x217 (=> $x30 $x38)))
 (let (($x51 (and $x217 $x67)))
 (let (($x290 (= true $x51)))
 (let (($x8 (or $x30 $x183)))
 (let (($x204 (and $x89 $x8)))
 (let (($x332 (=> $x204 $x290)))
 (let (($x306 (= $x332 true)))
 (let (($x305 (= $x306 true)))
 (let (($x228 (= $x305 true)))
 (let (($x5 (= input.dst.llvm-%t ?x315)))
 (let (($x184 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x394 (and $x184 $x5)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x156)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x176)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x299 (and $x316 $x301)))
 (let (($x298 (and $x299 $x174)))
 (let (($x152 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x152 $x298)))
 (let (($x179 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x179)))))))
 (let (($x151 (and (and (and $x160 true) $x143) $x394)))
 (let (($x323 (and $x224 $x151)))
 (let (($x226 (and $x332 $x323)))
 (let (($x43 (= $x226 true)))
 (let (($x131 (= $x43 true)))
 (let (($x344 (= $x131 true)))
 (let (($x140 (and $x89 $x183)))
 (let (($x197 (= $x140 true)))
 (let (($x190 (= $x197 true)))
 (let (($x202 (= $x190 true)))
 (let (($x55 (= $x184 true)))
 (let (($x302 (= $x55 true)))
 (let (($x194 (= $x302 true)))
 (let (($x178 (and $x160 $x143)))
 (let (($x180 (= $x178 true)))
 (let (($x49 (= $x180 true)))
 (let (($x175 (= $x49 true)))
 (let (($x192 (and $x175 $x194)))
 (let (($x44 (and $x192 $x194)))
 (let (($x195 (and $x44 $x202)))
 (let (($x185 (and $x195 $x344)))
 (let (($x471 (and $x185 $x228)))
 (let (($x396 (and $x471 $x50)))
 (let (($x227 (and $x396 $x472)))
 (let (($x473 (and $x227 $x450)))
 (let (($x484 (and $x473 $x450)))
 (let (($x523 (and $x484 $x491)))
 (let (($x654 (and $x523 $x618)))
 (let (($x111 (and $x654 $x34)))
 (let (($x811 (and $x111 $x748)))
 (let (($x749 (and $x165 $x811)))
 (let (($x145 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x817 (and $x145 $x749)))
 (let (($x750 (and $x317 $x817)))
 (let (($x751 (and $x317 $x750)))
 (let (($x163 (bvugt ?x128 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x177 (=> (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x81 (and $x89 $x30)))
 (let (($x95 (=> (and $x81 (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x7 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x46)))
 (let (($x76 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x20 (=> (and $x89 (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x45 (and $x20 $x95)))
 (let (($x752 (and $x45 $x751)))
 (let (($x97 (=> $x752 $x91)))
 (not $x
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6090X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x280 (concat ?x436 (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv8 32))))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x39 (concat ?x371 (concat ?x113 ?x280))))
 (let (($x362 (= ?x39 ?x39)))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x432 (concat ?x368 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x289 (concat ?x274 ?x432))))
 (let (($x340 (= (_ bv0 32) ?x257)))
 (let ((?x249 (ite $x340 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x249 (_ bv1 32))))
 (let (($x437 (=> $x278 $x362)))
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x337 (concat ?x398 (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv4 32))))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x325 (concat ?x312 (concat ?x276 ?x337))))
 (let (($x120 (= ?x325 ?x325)))
 (let (($x255 (=> $x278 $x120)))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6090X))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv2 32))) ?x438)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv3 32))) ?x283)))
 (let (($x402 (= ?x168 ?x168)))
 (let (($x83 (=> $x278 $x402)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x15 (concat ?x36 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x94 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x94 (_ bv3 32))))
 (let ((?x217 (concat (select input.dst.llvm-mem ?x75) (concat ?x216 ?x15))))
 (let ((?x346 (bvadd ?x217 (_ bv4 32))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv1 32))) (select input.dst.llvm-mem ?x346))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv2 32))) ?x265))))
 (let (($x9 (= (_ bv0 32) ?x334)))
 (let ((?x253 (ite $x9 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x253 (_ bv1 32))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x257 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x257 (_ bv4 32))))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x257 (_ bv4 32)) (_ bv2 32))) ?x90)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x257 (_ bv4 32)) (_ bv3 32))) ?x350)))
 (let (($x336 (= (_ bv0 32) ?x406)))
 (let ((?x400 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (bvuge ?x400 (_ bv1 32))))
 (let (($x244 (= $x273 $x284)))
 (let (($x263 (=> $x278 $x244)))
 (let (($x133 (= ?x253 (_ bv0 32))))
 (let (($x252 (= ?x400 (_ bv0 32))))
 (let (($x357 (= $x252 $x133)))
 (let (($x72 (=> $x278 $x357)))
 (let (($x285 (= (_ bv0 32) ?x217)))
 (let ((?x348 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x397 (= ?x348 (_ bv0 32))))
 (let (($x331 (= ?x249 (_ bv0 32))))
 (let (($x242 (= $x331 $x397)))
 (let (($x238 (bvuge ?x348 (_ bv1 32))))
 (let (($x247 (= $x278 $x238)))
 (let (($x231 (= ?x257 ?x217)))
 (let (($x145 (= false false)))
 (let (($x375 (and $x278 $x252)))
 (let (($x243 (=> $x375 $x145)))
 (let (($x268 (=> $x331 $x145)))
 (let (($x125 (and (and (and (and (and (and $x268 $x243) $x231) $x247) $x242) $x72) $x263)))
 (let (($x431 (and (and (and $x125 $x83) $x255) $x437)))
 (let (($x270 (not true)))
 (let (($x352 (or $x270 $x431)))
 (let (($x165 (= true true)))
 (let (($x281 (and $x165 $x352)))
 (let (($x256 (= $x281 true)))
 (let (($x353 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x16 (= $x261 $x353)))
 (let (($x296 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x260 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x363 (= $x260 $x296)))
 (let (($x351 (and $x363 $x16)))
 (let (($x146 (= $x351 true)))
 (let (($x230 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x370 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x6 (= $x370 $x230)))
 (let (($x234 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x182 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x248 (= $x182 $x234)))
 (let (($x150 (and $x248 $x6)))
 (let (($x300 (= $x150 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x324 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x360 (bvuge ?x324 (_ bv1 32))))
 (let (($x159 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x361 (= $x159 $x360)))
 (let (($x286 (= ?x324 (_ bv0 32))))
 (let (($x317 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x246 (= $x317 $x286)))
 (let (($x403 (and $x246 $x361)))
 (let (($x235 (= $x403 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x131 (concat ?x43 (concat ?x151 (concat ?x315 ?x132)))))
 (let (($x166 (= ?x131 input.dst.llvm-%t)))
 (let (($x434 (= $x166 true)))
 (let (($x288 (= $x434 true)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x130 (concat ?x29 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x12 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x73 (bvadd ?x12 (_ bv3 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem ?x73) (concat ?x69 ?x130))))
 (let (($x290 (= (bvand ?x81 (_ bv4294967280 32)) ?x81)))
 (let (($x67 (= (bvand ?x12 (_ bv4294967292 32)) ?x12)))
 (let (($x332 (and $x67 $x290)))
 (let (($x189 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x358 (and true $x189)))
 (let (($x366 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x12 (bvsub ?x12 (_ bv4 32))) (bvult ?x12 (bvsub ?x12 (_ bv4 32))))))
 (let (($x225 (and (and (and $x366 $x358) $x67) $x332)))
 (let (($x214 (= true $x225)))
 (let (($x89 (not $x18)))
 (let (($x215 (=> $x89 $x214)))
 (let (($x330 (= $x215 true)))
 (let (($x245 (= $x330 true)))
 (let (($x164 (= $x245 true)))
 (let (($x149 (= (_ bv0 32) ?x81)))
 (let (($x297 (not $x149)))
 (let (($x223 (=> $x297 $x214)))
 (let (($x303 (= (bvand ?x217 (_ bv4294967280 32)) ?x217)))
 (let (($x57 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x117 (and $x57 $x303)))
 (let (($x218 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x94 (bvsub ?x94 (_ bv8 32))) (bvult ?x94 (bvsub ?x94 (_ bv8 32))))))
 (let (($x221 (and (and (and $x218 $x358) $x57) $x117)))
 (let (($x304 (= true $x221)))
 (let (($x78 (=> $x149 $x304)))
 (let (($x212 (and $x78 $x223)))
 (let (($x354 (= true $x212)))
 (let (($x108 (or $x149 $x297)))
 (let (($x201 (and $x89 $x108)))
 (let (($x322 (=> $x201 $x354)))
 (let (($x229 (= $x322 true)))
 (let (($x472 (= $x229 true)))
 (let (($x227 (= $x472 true)))
 (let (($x344 (= input.dst.llvm-%t ?x131)))
 (let (($x190 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x185 (and $x190 $x344)))
 (let ((?x173 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x184 (= (_ bv0 32) ?x173)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x175 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x49)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x180 $x175)))
 (let (($x55 (and $x198 $x184)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x302 (and $x160 $x55)))
 (let (($x301 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x301)))))))
 (let (($x228 (and (and (and $x178 true) $x302) $x185)))
 (let (($x471 (and $x215 $x228)))
 (let (($x291 (and $x322 $x471)))
 (let (($x347 (= $x291 true)))
 (let (($x50 (= $x347 true)))
 (let (($x396 (= $x50 true)))
 (let (($x128 (and $x89 $x149)))
 (let (($x393 (= $x128 true)))
 (let (($x200 (= $x393 true)))
 (let (($x206 (= $x200 true)))
 (let (($x202 (= $x190 true)))
 (let (($x195 (= $x202 true)))
 (let (($x8 (= $x195 true)))
 (let (($x194 (and $x178 $x302)))
 (let (($x192 (= $x194 true)))
 (let (($x44 (= $x192 true)))
 (let (($x183 (= $x44 true)))
 (let (($x204 (and $x183 $x8)))
 (let (($x169 (and $x204 $x8)))
 (let (($x213 (and $x169 $x206)))
 (let (($x307 (and $x213 $x396)))
 (let (($x170 (and $x307 $x227)))
 (let (($x154 (and $x170 $x164)))
 (let (($x37 (and $x154 $x288)))
 (let (($x250 (and $x37 $x235)))
 (let (($x405 (and $x250 $x235)))
 (let (($x259 (and $x405 $x300)))
 (let (($x232 (and $x259 $x146)))
 (let (($x28 (and $x159 $x182)))
 (let (($x233 (and $x28 $x232)))
 (let (($x392 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x236 (and $x392 $x233)))
 (let (($x241 (and $x145 $x236)))
 (let (($x267 (and $x145 $x241)))
 (let (($x295 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x135 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x142 (=> (and $x128 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x70 (bvugt ?x12 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x98 (=> (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x70)))))))
 (let (($x68 (=> (and $x89 (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x23 $x70)))))))
 (let (($x26 (and $x68 $x142)))
 (let (($x87 (and $x26 $x267)))
 (let (($x122 (=> $x87 $x256)))
 (not $x122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6090X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x280 (concat ?x436 (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv8 32))))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x39 (concat ?x371 (concat ?x113 ?x280))))
 (let (($x362 (= ?x39 ?x39)))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x432 (concat ?x368 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x289 (concat ?x274 ?x432))))
 (let (($x340 (= (_ bv0 32) ?x257)))
 (let ((?x249 (ite $x340 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x249 (_ bv1 32))))
 (let (($x437 (=> $x278 $x362)))
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x337 (concat ?x398 (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv4 32))))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6090X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x325 (concat ?x312 (concat ?x276 ?x337))))
 (let (($x120 (= ?x325 ?x325)))
 (let (($x255 (=> $x278 $x120)))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6090X))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv2 32))) ?x438)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6090X (_ bv3 32))) ?x283)))
 (let (($x402 (= ?x168 ?x168)))
 (let (($x83 (=> $x278 $x402)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x15 (concat ?x36 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x94 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x94 (_ bv3 32))))
 (let ((?x217 (concat (select input.dst.llvm-mem ?x75) (concat ?x216 ?x15))))
 (let ((?x346 (bvadd ?x217 (_ bv4 32))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv1 32))) (select input.dst.llvm-mem ?x346))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv2 32))) ?x265))))
 (let (($x9 (= (_ bv0 32) ?x334)))
 (let ((?x253 (ite $x9 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x253 (_ bv1 32))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x257 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x257 (_ bv4 32))))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x257 (_ bv4 32)) (_ bv2 32))) ?x90)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x257 (_ bv4 32)) (_ bv3 32))) ?x350)))
 (let (($x336 (= (_ bv0 32) ?x406)))
 (let ((?x400 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (bvuge ?x400 (_ bv1 32))))
 (let (($x244 (= $x273 $x284)))
 (let (($x263 (=> $x278 $x244)))
 (let (($x133 (= ?x253 (_ bv0 32))))
 (let (($x252 (= ?x400 (_ bv0 32))))
 (let (($x357 (= $x252 $x133)))
 (let (($x72 (=> $x278 $x357)))
 (let (($x285 (= (_ bv0 32) ?x217)))
 (let ((?x348 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x397 (= ?x348 (_ bv0 32))))
 (let (($x331 (= ?x249 (_ bv0 32))))
 (let (($x242 (= $x331 $x397)))
 (let (($x238 (bvuge ?x348 (_ bv1 32))))
 (let (($x247 (= $x278 $x238)))
 (let (($x231 (= ?x257 ?x217)))
 (let (($x145 (= false false)))
 (let (($x375 (and $x278 $x252)))
 (let (($x243 (=> $x375 $x145)))
 (let (($x268 (=> $x331 $x145)))
 (let (($x125 (and (and (and (and (and (and $x268 $x243) $x231) $x247) $x242) $x72) $x263)))
 (let (($x431 (and (and (and $x125 $x83) $x255) $x437)))
 (let (($x270 (not true)))
 (let (($x352 (or $x270 $x431)))
 (let (($x165 (= true true)))
 (let (($x281 (and $x165 $x352)))
 (let (($x256 (= $x281 true)))
 (let (($x353 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x16 (= $x261 $x353)))
 (let (($x296 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x260 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x363 (= $x260 $x296)))
 (let (($x351 (and $x363 $x16)))
 (let (($x146 (= $x351 true)))
 (let (($x230 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x370 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x6 (= $x370 $x230)))
 (let (($x234 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x182 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x248 (= $x182 $x234)))
 (let (($x150 (and $x248 $x6)))
 (let (($x300 (= $x150 true)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x324 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x360 (bvuge ?x324 (_ bv1 32))))
 (let (($x159 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x361 (= $x159 $x360)))
 (let (($x286 (= ?x324 (_ bv0 32))))
 (let (($x317 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x246 (= $x317 $x286)))
 (let (($x403 (and $x246 $x361)))
 (let (($x235 (= $x403 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x131 (concat ?x43 (concat ?x151 (concat ?x315 ?x132)))))
 (let (($x166 (= ?x131 input.dst.llvm-%t)))
 (let (($x434 (= $x166 true)))
 (let (($x288 (= $x434 true)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x130 (concat ?x29 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x12 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x73 (bvadd ?x12 (_ bv3 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem ?x73) (concat ?x69 ?x130))))
 (let (($x290 (= (bvand ?x81 (_ bv4294967280 32)) ?x81)))
 (let (($x67 (= (bvand ?x12 (_ bv4294967292 32)) ?x12)))
 (let (($x332 (and $x67 $x290)))
 (let (($x189 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x358 (and true $x189)))
 (let (($x366 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x12 (bvsub ?x12 (_ bv4 32))) (bvult ?x12 (bvsub ?x12 (_ bv4 32))))))
 (let (($x225 (and (and (and $x366 $x358) $x67) $x332)))
 (let (($x214 (= true $x225)))
 (let (($x89 (not $x18)))
 (let (($x215 (=> $x89 $x214)))
 (let (($x330 (= $x215 true)))
 (let (($x245 (= $x330 true)))
 (let (($x164 (= $x245 true)))
 (let (($x149 (= (_ bv0 32) ?x81)))
 (let (($x297 (not $x149)))
 (let (($x223 (=> $x297 $x214)))
 (let (($x303 (= (bvand ?x217 (_ bv4294967280 32)) ?x217)))
 (let (($x57 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x117 (and $x57 $x303)))
 (let (($x218 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x94 (bvsub ?x94 (_ bv8 32))) (bvult ?x94 (bvsub ?x94 (_ bv8 32))))))
 (let (($x221 (and (and (and $x218 $x358) $x57) $x117)))
 (let (($x304 (= true $x221)))
 (let (($x78 (=> $x149 $x304)))
 (let (($x212 (and $x78 $x223)))
 (let (($x354 (= true $x212)))
 (let (($x108 (or $x149 $x297)))
 (let (($x201 (and $x89 $x108)))
 (let (($x322 (=> $x201 $x354)))
 (let (($x229 (= $x322 true)))
 (let (($x472 (= $x229 true)))
 (let (($x227 (= $x472 true)))
 (let (($x344 (= input.dst.llvm-%t ?x131)))
 (let (($x190 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x185 (and $x190 $x344)))
 (let ((?x173 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x184 (= (_ bv0 32) ?x173)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x175 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x49)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x180 $x175)))
 (let (($x55 (and $x198 $x184)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x302 (and $x160 $x55)))
 (let (($x301 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x301)))))))
 (let (($x228 (and (and (and $x178 true) $x302) $x185)))
 (let (($x471 (and $x215 $x228)))
 (let (($x291 (and $x322 $x471)))
 (let (($x347 (= $x291 true)))
 (let (($x50 (= $x347 true)))
 (let (($x396 (= $x50 true)))
 (let (($x128 (and $x89 $x149)))
 (let (($x393 (= $x128 true)))
 (let (($x200 (= $x393 true)))
 (let (($x206 (= $x200 true)))
 (let (($x202 (= $x190 true)))
 (let (($x195 (= $x202 true)))
 (let (($x8 (= $x195 true)))
 (let (($x194 (and $x178 $x302)))
 (let (($x192 (= $x194 true)))
 (let (($x44 (= $x192 true)))
 (let (($x183 (= $x44 true)))
 (let (($x204 (and $x183 $x8)))
 (let (($x169 (and $x204 $x8)))
 (let (($x213 (and $x169 $x206)))
 (let (($x307 (and $x213 $x396)))
 (let (($x170 (and $x307 $x227)))
 (let (($x154 (and $x170 $x164)))
 (let (($x37 (and $x154 $x288)))
 (let (($x250 (and $x37 $x235)))
 (let (($x405 (and $x250 $x235)))
 (let (($x259 (and $x405 $x300)))
 (let (($x232 (and $x259 $x146)))
 (let (($x28 (and $x159 $x182)))
 (let (($x233 (and $x28 $x232)))
 (let (($x392 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x236 (and $x392 $x233)))
 (let (($x241 (and $x145 $x236)))
 (let (($x267 (and $x145 $x241)))
 (let (($x295 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x135 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x142 (=> (and $x128 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x70 (bvugt ?x12 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x98 (=> (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x70)))))))
 (let (($x68 (=> (and $x89 (bvule ?x12 (bvsub (bvadd ?x12 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x23 $x70)))))))
 (let (($x26 (and $x68 $x142)))
 (let (($x87 (and $x26 $x267)))
 (let (($x122 (=> $x87 $x256)))
 (not $x122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6124X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x325 (concat ?x365 (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x371 (concat ?x367 (concat ?x255 ?x325))))
 (let (($x457 (= ?x371 ?x371)))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x432 (concat ?x292 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x268 (concat ?x331 (concat ?x257 ?x432))))
 (let (($x278 (= (_ bv0 32) ?x268)))
 (let ((?x282 (ite $x278 (_ bv0 32) (_ bv1 32))))
 (let (($x355 (bvuge ?x282 (_ bv1 32))))
 (let (($x113 (=> $x355 $x457)))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x402 (concat ?x168 (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv4 32))))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x129 (concat ?x312 (concat ?x326 ?x402))))
 (let (($x276 (= ?x129 ?x129)))
 (let (($x430 (=> $x355 $x276)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6124X))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv2 32))) ?x263)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv3 32))) ?x22)))
 (let (($x65 (= ?x254 ?x254)))
 (let (($x116 (=> $x355 $x65)))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x313 (concat ?x346 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x372 (concat ?x275 (concat ?x171 ?x313))))
 (let (($x265 (= (_ bv0 32) ?x372)))
 (let ((?x239 (ite $x265 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (= ?x239 (_ bv0 32))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x268 (_ bv4 32))))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv2 32))) ?x90)))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv3 32))) ?x336)))
 (let (($x243 (= (_ bv0 32) ?x375)))
 (let ((?x374 (ite $x243 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (= ?x374 (_ bv0 32))))
 (let (($x357 (= $x231 $x133)))
 (let (($x72 (=> $x355 $x357)))
 (let (($x334 (bvuge ?x239 (_ bv1 32))))
 (let (($x74 (bvuge ?x374 (_ bv1 32))))
 (let (($x9 (= $x74 $x334)))
 (let (($x253 (=> $x355 $x9)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x361 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (= ?x361 (_ bv0 32))))
 (let (($x269 (= ?x282 (_ bv0 32))))
 (let (($x247 (= $x269 $x403)))
 (let (($x250 (bvuge ?x361 (_ bv1 32))))
 (let (($x238 (= $x355 $x250)))
 (let (($x348 (= ?x268 input.dst.llvm-%t)))
 (let (($x162 (= false false)))
 (let (($x399 (and $x355 $x231)))
 (let (($x285 (=> $x399 $x162)))
 (let (($x329 (=> $x269 $x162)))
 (let (($x39 (and (and (and (and (and (and $x329 $x285) $x348) $x238) $x247) $x253) $x72)))
 (let (($x431 (and (and (and $x39 $x116) $x430) $x113)))
 (let (($x404 (not true)))
 (let (($x352 (or $x404 $x431)))
 (let (($x289 (= true true)))
 (let (($x281 (and $x289 $x352)))
 (let (($x256 (= $x281 true)))
 (let (($x232 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x233 (= $x146 $x232)))
 (let (($x16 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x261 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x351 (= $x261 $x16)))
 (let (($x236 (and $x351 $x233)))
 (let (($x241 (= $x236 true)))
 (let (($x259 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x300 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x339 (= $x300 $x259)))
 (let (($x6 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x153 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x150 (= $x153 $x6)))
 (let (($x260 (and $x150 $x339)))
 (let (($x328 (= $x260 true)))
 (let (($x182 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x405 (= $x182 $x250)))
 (let (($x360 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x235 (= $x360 $x403)))
 (let (($x237 (and $x235 $x405)))
 (let (($x234 (= $x237 true)))
 (let ((?x394 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x185 (concat ?x344 (concat ?x5 (concat ?x359 ?x394)))))
 (let (($x317 (= ?x185 input.dst.llvm-%t)))
 (let (($x324 (= $x317 true)))
 (let (($x286 (= $x324 true)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x29 (concat ?x104 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x92 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x107 (bvadd ?x92 (_ bv3 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem ?x107) (concat ?x80 ?x29))))
 (let (($x332 (= (bvand ?x128 (_ bv4294967280 32)) ?x128)))
 (let (($x51 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x225 (and $x51 $x332)))
 (let (($x54 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x193 (and true $x54)))
 (let (($x67 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x92 (bvsub ?x92 (_ bv4 32))) (bvult ?x92 (bvsub ?x92 (_ bv4 32))))))
 (let (($x212 (and (and (and $x67 $x193) $x51) $x225)))
 (let (($x354 (= true $x212)))
 (let (($x89 (not $x18)))
 (let (($x226 (=> $x89 $x354)))
 (let (($x166 (= $x226 true)))
 (let (($x434 (= $x166 true)))
 (let (($x288 (= $x434 true)))
 (let (($x147 (= (_ bv0 32) ?x128)))
 (let (($x199 (not $x147)))
 (let (($x322 (=> $x199 $x354)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x36 (concat ?x93 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x163 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x163 (_ bv3 32))))
 (let ((?x207 (concat (select input.dst.llvm-mem ?x124) (concat ?x15 ?x36))))
 (let (($x117 (= (bvand ?x207 (_ bv4294967280 32)) ?x207)))
 (let (($x38 (= (bvand ?x163 (_ bv4294967292 32)) ?x163)))
 (let (($x221 (and $x38 $x117)))
 (let (($x211 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x163 (bvsub ?x163 (_ bv8 32))) (bvult ?x163 (bvsub ?x163 (_ bv8 32))))))
 (let (($x318 (and (and (and $x211 $x193) $x38) $x221)))
 (let (($x105 (= true $x318)))
 (let (($x56 (=> $x147 $x105)))
 (let (($x215 (and $x56 $x322)))
 (let (($x306 (= true $x215)))
 (let (($x101 (or $x147 $x199)))
 (let (($x321 (and $x89 $x101)))
 (let (($x305 (=> $x321 $x306)))
 (let (($x330 (= $x305 true)))
 (let (($x245 (= $x330 true)))
 (let (($x164 (= $x245 true)))
 (let (($x228 (= input.dst.llvm-%t ?x185)))
 (let (($x8 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x471 (and $x8 $x228)))
 (let ((?x302 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x302)))
 (let ((?x173 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x184 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x173)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x198 $x184)))
 (let (($x192 (and $x55 $x194)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x176 $x192)))
 (let (($x298 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x175 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x298)))))))
 (let (($x50 (and (and (and $x175 true) $x44) $x471)))
 (let (($x396 (and $x226 $x50)))
 (let (($x307 (and $x305 $x396)))
 (let (($x229 (= $x307 true)))
 (let (($x472 (= $x229 true)))
 (let (($x227 (= $x472 true)))
 (let (($x213 (= $x18 true)))
 (let (($x297 (= $x213 true)))
 (let (($x108 (= $x297 true)))
 (let (($x204 (= $x8 true)))
 (let (($x169 (= $x204 true)))
 (let (($x393 (= $x169 true)))
 (let (($x183 (and $x175 $x44)))
 (let (($x140 (= $x183 true)))
 (let (($x197 (= $x140 true)))
 (let (($x190 (= $x197 true)))
 (let (($x200 (and $x190 $x393)))
 (let (($x206 (and $x200 $x393)))
 (let (($x201 (and $x206 $x108)))
 (let (($x170 (and $x201 $x227)))
 (let (($x154 (and $x170 $x164)))
 (let (($x37 (and $x154 $x288)))
 (let (($x246 (and $x37 $x286)))
 (let (($x248 (and $x246 $x234)))
 (let (($x370 (and $x248 $x234)))
 (let (($x296 (and $x370 $x328)))
 (let (($x267 (and $x296 $x241)))
 (let (($x152 (and $x182 $x153)))
 (let (($x87 (and $x152 $x267)))
 (let (($x159 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x165 (and $x159 $x87)))
 (let (($x270 (and $x162 $x165)))
 (let (($x338 (and $x162 $x270)))
 (let (($x95 (bvugt ?x163 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x35 (=> (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x95)))))))
 (let (($x94 (and $x89 $x147)))
 (let (($x148 (=> (and $x94 (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x177 $x95)))))))
 (let (($x20 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x47 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x20)))))))
 (let (($x46 (=> (and $x89 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x20)))))))
 (let (($x75 (and $x46 $x148)))
 (let (($x433 (and $x75 $x338)))
 (let (($x122 (=> $x433 $x256)))
 (not $x122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6124X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x325 (concat ?x365 (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x371 (concat ?x367 (concat ?x255 ?x325))))
 (let (($x457 (= ?x371 ?x371)))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x432 (concat ?x292 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x268 (concat ?x331 (concat ?x257 ?x432))))
 (let (($x278 (= (_ bv0 32) ?x268)))
 (let ((?x282 (ite $x278 (_ bv0 32) (_ bv1 32))))
 (let (($x355 (bvuge ?x282 (_ bv1 32))))
 (let (($x113 (=> $x355 $x457)))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x402 (concat ?x168 (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv4 32))))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6124X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x129 (concat ?x312 (concat ?x326 ?x402))))
 (let (($x276 (= ?x129 ?x129)))
 (let (($x430 (=> $x355 $x276)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6124X))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv2 32))) ?x263)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6124X (_ bv3 32))) ?x22)))
 (let (($x65 (= ?x254 ?x254)))
 (let (($x116 (=> $x355 $x65)))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x313 (concat ?x346 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x372 (concat ?x275 (concat ?x171 ?x313))))
 (let (($x265 (= (_ bv0 32) ?x372)))
 (let ((?x239 (ite $x265 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (= ?x239 (_ bv0 32))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x268 (_ bv4 32))))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv2 32))) ?x90)))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv3 32))) ?x336)))
 (let (($x243 (= (_ bv0 32) ?x375)))
 (let ((?x374 (ite $x243 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (= ?x374 (_ bv0 32))))
 (let (($x357 (= $x231 $x133)))
 (let (($x72 (=> $x355 $x357)))
 (let (($x334 (bvuge ?x239 (_ bv1 32))))
 (let (($x74 (bvuge ?x374 (_ bv1 32))))
 (let (($x9 (= $x74 $x334)))
 (let (($x253 (=> $x355 $x9)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x361 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (= ?x361 (_ bv0 32))))
 (let (($x269 (= ?x282 (_ bv0 32))))
 (let (($x247 (= $x269 $x403)))
 (let (($x250 (bvuge ?x361 (_ bv1 32))))
 (let (($x238 (= $x355 $x250)))
 (let (($x348 (= ?x268 input.dst.llvm-%t)))
 (let (($x162 (= false false)))
 (let (($x399 (and $x355 $x231)))
 (let (($x285 (=> $x399 $x162)))
 (let (($x329 (=> $x269 $x162)))
 (let (($x39 (and (and (and (and (and (and $x329 $x285) $x348) $x238) $x247) $x253) $x72)))
 (let (($x431 (and (and (and $x39 $x116) $x430) $x113)))
 (let (($x404 (not true)))
 (let (($x352 (or $x404 $x431)))
 (let (($x289 (= true true)))
 (let (($x281 (and $x289 $x352)))
 (let (($x256 (= $x281 true)))
 (let (($x232 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x233 (= $x146 $x232)))
 (let (($x16 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x261 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x351 (= $x261 $x16)))
 (let (($x236 (and $x351 $x233)))
 (let (($x241 (= $x236 true)))
 (let (($x259 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x300 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x339 (= $x300 $x259)))
 (let (($x6 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x153 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x150 (= $x153 $x6)))
 (let (($x260 (and $x150 $x339)))
 (let (($x328 (= $x260 true)))
 (let (($x182 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x405 (= $x182 $x250)))
 (let (($x360 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x235 (= $x360 $x403)))
 (let (($x237 (and $x235 $x405)))
 (let (($x234 (= $x237 true)))
 (let ((?x394 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x185 (concat ?x344 (concat ?x5 (concat ?x359 ?x394)))))
 (let (($x317 (= ?x185 input.dst.llvm-%t)))
 (let (($x324 (= $x317 true)))
 (let (($x286 (= $x324 true)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x29 (concat ?x104 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x92 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x107 (bvadd ?x92 (_ bv3 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem ?x107) (concat ?x80 ?x29))))
 (let (($x332 (= (bvand ?x128 (_ bv4294967280 32)) ?x128)))
 (let (($x51 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x225 (and $x51 $x332)))
 (let (($x54 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x193 (and true $x54)))
 (let (($x67 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x92 (bvsub ?x92 (_ bv4 32))) (bvult ?x92 (bvsub ?x92 (_ bv4 32))))))
 (let (($x212 (and (and (and $x67 $x193) $x51) $x225)))
 (let (($x354 (= true $x212)))
 (let (($x89 (not $x18)))
 (let (($x226 (=> $x89 $x354)))
 (let (($x166 (= $x226 true)))
 (let (($x434 (= $x166 true)))
 (let (($x288 (= $x434 true)))
 (let (($x147 (= (_ bv0 32) ?x128)))
 (let (($x199 (not $x147)))
 (let (($x322 (=> $x199 $x354)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x36 (concat ?x93 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x163 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x124 (bvadd ?x163 (_ bv3 32))))
 (let ((?x207 (concat (select input.dst.llvm-mem ?x124) (concat ?x15 ?x36))))
 (let (($x117 (= (bvand ?x207 (_ bv4294967280 32)) ?x207)))
 (let (($x38 (= (bvand ?x163 (_ bv4294967292 32)) ?x163)))
 (let (($x221 (and $x38 $x117)))
 (let (($x211 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x163 (bvsub ?x163 (_ bv8 32))) (bvult ?x163 (bvsub ?x163 (_ bv8 32))))))
 (let (($x318 (and (and (and $x211 $x193) $x38) $x221)))
 (let (($x105 (= true $x318)))
 (let (($x56 (=> $x147 $x105)))
 (let (($x215 (and $x56 $x322)))
 (let (($x306 (= true $x215)))
 (let (($x101 (or $x147 $x199)))
 (let (($x321 (and $x89 $x101)))
 (let (($x305 (=> $x321 $x306)))
 (let (($x330 (= $x305 true)))
 (let (($x245 (= $x330 true)))
 (let (($x164 (= $x245 true)))
 (let (($x228 (= input.dst.llvm-%t ?x185)))
 (let (($x8 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x471 (and $x8 $x228)))
 (let ((?x302 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x302)))
 (let ((?x173 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x184 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x173)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x198 $x184)))
 (let (($x192 (and $x55 $x194)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x176 $x192)))
 (let (($x298 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x175 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x298)))))))
 (let (($x50 (and (and (and $x175 true) $x44) $x471)))
 (let (($x396 (and $x226 $x50)))
 (let (($x307 (and $x305 $x396)))
 (let (($x229 (= $x307 true)))
 (let (($x472 (= $x229 true)))
 (let (($x227 (= $x472 true)))
 (let (($x213 (= $x18 true)))
 (let (($x297 (= $x213 true)))
 (let (($x108 (= $x297 true)))
 (let (($x204 (= $x8 true)))
 (let (($x169 (= $x204 true)))
 (let (($x393 (= $x169 true)))
 (let (($x183 (and $x175 $x44)))
 (let (($x140 (= $x183 true)))
 (let (($x197 (= $x140 true)))
 (let (($x190 (= $x197 true)))
 (let (($x200 (and $x190 $x393)))
 (let (($x206 (and $x200 $x393)))
 (let (($x201 (and $x206 $x108)))
 (let (($x170 (and $x201 $x227)))
 (let (($x154 (and $x170 $x164)))
 (let (($x37 (and $x154 $x288)))
 (let (($x246 (and $x37 $x286)))
 (let (($x248 (and $x246 $x234)))
 (let (($x370 (and $x248 $x234)))
 (let (($x296 (and $x370 $x328)))
 (let (($x267 (and $x296 $x241)))
 (let (($x152 (and $x182 $x153)))
 (let (($x87 (and $x152 $x267)))
 (let (($x159 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x165 (and $x159 $x87)))
 (let (($x270 (and $x162 $x165)))
 (let (($x338 (and $x162 $x270)))
 (let (($x95 (bvugt ?x163 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x124)))
 (let (($x35 (=> (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x95)))))))
 (let (($x94 (and $x89 $x147)))
 (let (($x148 (=> (and $x94 (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x177 $x95)))))))
 (let (($x20 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x47 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x20)))))))
 (let (($x46 (=> (and $x89 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x20)))))))
 (let (($x75 (and $x46 $x148)))
 (let (($x433 (and $x75 $x338)))
 (let (($x122 (=> $x433 $x256)))
 (not $x122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6158X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x66 (concat ?x397 (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv8 32))))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x346 (concat ?x109 ?x66))))
 (let (($x313 (= ?x242 ?x242)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x403 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x403 (_ bv1 32))))
 (let (($x345 (=> $x237 $x313)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x374 (concat ?x243 (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv4 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x436 (concat ?x348 (concat ?x399 ?x374))))
 (let (($x238 (= ?x436 ?x436)))
 (let (($x311 (=> $x237 $x238)))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6158X))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv2 32))) ?x355)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv3 32))) ?x252)))
 (let (($x240 (= ?x271 ?x271)))
 (let (($x356 (=> $x237 $x240)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x104 (concat ?x69 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x10 (bvadd ?x60 (_ bv3 32))))
 (let ((?x94 (concat (select input.dst.llvm-mem ?x10) (concat ?x81 ?x104))))
 (let (($x158 (= (_ bv0 32) ?x94)))
 (let ((?x368 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x340 (bvuge ?x368 (_ bv1 32))))
 (let (($x268 (= $x237 $x340)))
 (let (($x157 (= false false)))
 (let (($x235 (= ?x403 (_ bv0 32))))
 (let (($x432 (=> $x235 $x157)))
 (let (($x239 (and (and (and (= input.dst.llvm-%t ?x94) (= $x235 (= ?x368 (_ bv0 32)))) $x432) $x268)))
 (let (($x253 (and (and (and $x239 $x356) $x311) $x345)))
 (let (($x272 (not true)))
 (let (($x435 (or $x272 $x253)))
 (let (($x331 (= true true)))
 (let (($x133 (and $x331 $x435)))
 (let (($x357 (= $x133 true)))
 (let (($x267 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x241 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x87 (= $x241 $x267)))
 (let (($x233 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x236 (= $x146 $x233)))
 (let (($x165 (and $x236 $x87)))
 (let (($x270 (= $x165 true)))
 (let (($x296 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x328 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x363 (= $x328 $x296)))
 (let (($x339 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x260 (= $x300 $x339)))
 (let (($x261 (and $x260 $x363)))
 (let (($x353 (= $x261 true)))
 (let (($x405 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x234 (= $x405 $x237)))
 (let (($x153 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x250 (= $x153 $x235)))
 (let (($x248 (and $x250 $x234)))
 (let (($x370 (= $x248 true)))
 (let ((?x131 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x323 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x185 (concat ?x323 (concat ?x359 (concat ?x132 ?x131)))))
 (let (($x286 (= ?x185 input.dst.llvm-%t)))
 (let (($x246 (= $x286 true)))
 (let (($x360 (= $x246 true)))
 (let (($x290 (= (bvand ?x94 (_ bv4294967280 32)) ?x94)))
 (let (($x51 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x332 (and $x51 $x290)))
 (let (($x193 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x304 (and true $x193)))
 (let (($x214 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv4 32))) (bvult ?x60 (bvsub ?x60 (_ bv4 32))))))
 (let (($x354 (and (and (and $x214 $x304) $x51) $x332)))
 (let (($x322 (= true $x354)))
 (let (($x89 (not $x18)))
 (let (($x291 (=> $x89 $x322)))
 (let (($x288 (= $x291 true)))
 (let (($x37 (= $x288 true)))
 (let (($x317 (= $x37 true)))
 (let (($x213 (not $x158)))
 (let (($x215 (=> $x213 $x322)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x15 (concat ?x205 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x295 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x295 (_ bv3 32))))
 (let ((?x99 (concat (select input.dst.llvm-mem ?x45) (concat ?x93 ?x15))))
 (let (($x303 (= (bvand ?x99 (_ bv4294967280 32)) ?x99)))
 (let (($x38 (= (bvand ?x295 (_ bv4294967292 32)) ?x295)))
 (let (($x117 (and $x38 $x303)))
 (let (($x189 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x295 (bvsub ?x295 (_ bv8 32))) (bvult ?x295 (bvsub ?x295 (_ bv8 32))))))
 (let (($x105 (and (and (and $x189 $x304) $x38) $x117)))
 (let (($x56 (= true $x105)))
 (let (($x366 (=> $x158 $x56)))
 (let (($x306 (and $x366 $x215)))
 (let (($x305 (= true $x306)))
 (let (($x321 (or $x158 $x213)))
 (let (($x218 (and $x89 $x321)))
 (let (($x226 (=> $x218 $x305)))
 (let (($x164 (= $x226 true)))
 (let (($x154 (= $x164 true)))
 (let (($x166 (= $x154 true)))
 (let (($x228 (= input.dst.llvm-%t ?x185)))
 (let (($x8 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x471 (and $x8 $x228)))
 (let ((?x302 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x302)))
 (let ((?x173 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x184 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x173)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x198 $x184)))
 (let (($x192 (and $x55 $x194)))
 (let (($x299 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x299 $x192)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x176 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x178)))))))
 (let (($x307 (and (and (and $x176 true) $x44) $x471)))
 (let (($x229 (and $x291 $x307)))
 (let (($x472 (and $x226 $x229)))
 (let (($x227 (= $x472 true)))
 (let (($x170 (= $x227 true)))
 (let (($x330 (= $x170 true)))
 (let (($x297 (and $x89 $x213)))
 (let (($x108 (= $x297 true)))
 (let (($x201 (= $x108 true)))
 (let (($x199 (= $x201 true)))
 (let (($x204 (= $x8 true)))
 (let (($x169 (= $x204 true)))
 (let (($x393 (= $x169 true)))
 (let (($x183 (and $x176 $x44)))
 (let (($x140 (= $x183 true)))
 (let (($x197 (= $x140 true)))
 (let (($x190 (= $x197 true)))
 (let (($x200 (and $x190 $x393)))
 (let (($x206 (and $x200 $x393)))
 (let (($x101 (and $x206 $x199)))
 (let (($x245 (and $x101 $x330)))
 (let (($x434 (and $x245 $x166)))
 (let (($x324 (and $x434 $x317)))
 (let (($x361 (and $x324 $x360)))
 (let (($x230 (and $x361 $x370)))
 (let (($x6 (and $x230 $x370)))
 (let (($x16 (and $x6 $x353)))
 (let (($x338 (and $x16 $x270)))
 (let (($x433 (and $x153 $x338)))
 (let (($x182 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x289 (and $x182 $x433)))
 (let (($x404 (and $x157 $x289)))
 (let (($x274 (and $x157 $x404)))
 (let (($x142 (bvugt ?x295 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x392 (=> (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x163 (and $x89 $x158)))
 (let (($x145 (=> (and $x163 (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x68 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x10)))
 (let (($x114 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x68)))))))
 (let (($x73 (=> (and $x89 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x98 $x68)))))))
 (let (($x124 (and $x73 $x145)))
 (let (($x249 (and $x124 $x274)))
 (let (($x72 (=> $x249 $x357)))
 (not $x72))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6158X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x66 (concat ?x397 (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv8 32))))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x346 (concat ?x109 ?x66))))
 (let (($x313 (= ?x242 ?x242)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x403 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x403 (_ bv1 32))))
 (let (($x345 (=> $x237 $x313)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x374 (concat ?x243 (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv4 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6158X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x436 (concat ?x348 (concat ?x399 ?x374))))
 (let (($x238 (= ?x436 ?x436)))
 (let (($x311 (=> $x237 $x238)))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6158X))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv2 32))) ?x355)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6158X (_ bv3 32))) ?x252)))
 (let (($x240 (= ?x271 ?x271)))
 (let (($x356 (=> $x237 $x240)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x104 (concat ?x69 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x10 (bvadd ?x60 (_ bv3 32))))
 (let ((?x94 (concat (select input.dst.llvm-mem ?x10) (concat ?x81 ?x104))))
 (let (($x158 (= (_ bv0 32) ?x94)))
 (let ((?x368 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x340 (bvuge ?x368 (_ bv1 32))))
 (let (($x268 (= $x237 $x340)))
 (let (($x157 (= false false)))
 (let (($x235 (= ?x403 (_ bv0 32))))
 (let (($x432 (=> $x235 $x157)))
 (let (($x239 (and (and (and (= input.dst.llvm-%t ?x94) (= $x235 (= ?x368 (_ bv0 32)))) $x432) $x268)))
 (let (($x253 (and (and (and $x239 $x356) $x311) $x345)))
 (let (($x272 (not true)))
 (let (($x435 (or $x272 $x253)))
 (let (($x331 (= true true)))
 (let (($x133 (and $x331 $x435)))
 (let (($x357 (= $x133 true)))
 (let (($x267 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x241 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x87 (= $x241 $x267)))
 (let (($x233 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x236 (= $x146 $x233)))
 (let (($x165 (and $x236 $x87)))
 (let (($x270 (= $x165 true)))
 (let (($x296 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x328 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x363 (= $x328 $x296)))
 (let (($x339 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x260 (= $x300 $x339)))
 (let (($x261 (and $x260 $x363)))
 (let (($x353 (= $x261 true)))
 (let (($x405 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x234 (= $x405 $x237)))
 (let (($x153 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x250 (= $x153 $x235)))
 (let (($x248 (and $x250 $x234)))
 (let (($x370 (= $x248 true)))
 (let ((?x131 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x323 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x185 (concat ?x323 (concat ?x359 (concat ?x132 ?x131)))))
 (let (($x286 (= ?x185 input.dst.llvm-%t)))
 (let (($x246 (= $x286 true)))
 (let (($x360 (= $x246 true)))
 (let (($x290 (= (bvand ?x94 (_ bv4294967280 32)) ?x94)))
 (let (($x51 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x332 (and $x51 $x290)))
 (let (($x193 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x304 (and true $x193)))
 (let (($x214 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv4 32))) (bvult ?x60 (bvsub ?x60 (_ bv4 32))))))
 (let (($x354 (and (and (and $x214 $x304) $x51) $x332)))
 (let (($x322 (= true $x354)))
 (let (($x89 (not $x18)))
 (let (($x291 (=> $x89 $x322)))
 (let (($x288 (= $x291 true)))
 (let (($x37 (= $x288 true)))
 (let (($x317 (= $x37 true)))
 (let (($x213 (not $x158)))
 (let (($x215 (=> $x213 $x322)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x15 (concat ?x205 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x295 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x295 (_ bv3 32))))
 (let ((?x99 (concat (select input.dst.llvm-mem ?x45) (concat ?x93 ?x15))))
 (let (($x303 (= (bvand ?x99 (_ bv4294967280 32)) ?x99)))
 (let (($x38 (= (bvand ?x295 (_ bv4294967292 32)) ?x295)))
 (let (($x117 (and $x38 $x303)))
 (let (($x189 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x295 (bvsub ?x295 (_ bv8 32))) (bvult ?x295 (bvsub ?x295 (_ bv8 32))))))
 (let (($x105 (and (and (and $x189 $x304) $x38) $x117)))
 (let (($x56 (= true $x105)))
 (let (($x366 (=> $x158 $x56)))
 (let (($x306 (and $x366 $x215)))
 (let (($x305 (= true $x306)))
 (let (($x321 (or $x158 $x213)))
 (let (($x218 (and $x89 $x321)))
 (let (($x226 (=> $x218 $x305)))
 (let (($x164 (= $x226 true)))
 (let (($x154 (= $x164 true)))
 (let (($x166 (= $x154 true)))
 (let (($x228 (= input.dst.llvm-%t ?x185)))
 (let (($x8 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x471 (and $x8 $x228)))
 (let ((?x302 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x302)))
 (let ((?x173 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x184 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x173)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x198 $x184)))
 (let (($x192 (and $x55 $x194)))
 (let (($x299 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x299 $x192)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x176 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x178)))))))
 (let (($x307 (and (and (and $x176 true) $x44) $x471)))
 (let (($x229 (and $x291 $x307)))
 (let (($x472 (and $x226 $x229)))
 (let (($x227 (= $x472 true)))
 (let (($x170 (= $x227 true)))
 (let (($x330 (= $x170 true)))
 (let (($x297 (and $x89 $x213)))
 (let (($x108 (= $x297 true)))
 (let (($x201 (= $x108 true)))
 (let (($x199 (= $x201 true)))
 (let (($x204 (= $x8 true)))
 (let (($x169 (= $x204 true)))
 (let (($x393 (= $x169 true)))
 (let (($x183 (and $x176 $x44)))
 (let (($x140 (= $x183 true)))
 (let (($x197 (= $x140 true)))
 (let (($x190 (= $x197 true)))
 (let (($x200 (and $x190 $x393)))
 (let (($x206 (and $x200 $x393)))
 (let (($x101 (and $x206 $x199)))
 (let (($x245 (and $x101 $x330)))
 (let (($x434 (and $x245 $x166)))
 (let (($x324 (and $x434 $x317)))
 (let (($x361 (and $x324 $x360)))
 (let (($x230 (and $x361 $x370)))
 (let (($x6 (and $x230 $x370)))
 (let (($x16 (and $x6 $x353)))
 (let (($x338 (and $x16 $x270)))
 (let (($x433 (and $x153 $x338)))
 (let (($x182 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x289 (and $x182 $x433)))
 (let (($x404 (and $x157 $x289)))
 (let (($x274 (and $x157 $x404)))
 (let (($x142 (bvugt ?x295 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x392 (=> (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x163 (and $x89 $x158)))
 (let (($x145 (=> (and $x163 (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x68 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x10)))
 (let (($x114 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x68)))))))
 (let (($x73 (=> (and $x89 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x98 $x68)))))))
 (let (($x124 (and $x73 $x145)))
 (let (($x249 (and $x124 $x274)))
 (let (($x72 (=> $x249 $x357)))
 (not $x72))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6191X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x275 (concat ?x346 (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv8 32))))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x171 (concat ?x66 (concat ?x74 ?x275))))
 (let (($x242 (= ?x171 ?x171)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x405 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x370 (bvuge ?x405 (_ bv1 32))))
 (let (($x313 (=> $x370 $x242)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x399 (concat ?x231 (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv4 32))))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x436 (concat ?x285 (concat ?x243 ?x399))))
 (let (($x238 (= ?x436 ?x436)))
 (let (($x311 (=> $x370 $x238)))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6191X))))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv2 32))) ?x269)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv3 32))) ?x355)))
 (let (($x356 (= ?x240 ?x240)))
 (let (($x334 (=> $x370 $x356)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x78 (concat ?x205 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x95 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x95 (_ bv3 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem ?x26) (concat ?x139 ?x78))))
 (let (($x432 (= (_ bv0 32) ?x303)))
 (let ((?x265 (ite $x432 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x265 (_ bv1 32))))
 (let (($x278 (= $x370 $x239)))
 (let (($x340 (= ?x265 (_ bv0 32))))
 (let (($x237 (= ?x405 (_ bv0 32))))
 (let (($x268 (= $x237 $x340)))
 (let (($x253 (and (and (=> $x237 (= false false)) (= input.dst.llvm-%t ?x303)) $x268)))
 (let (($x72 (and (and (and (and $x253 $x278) $x334) $x311) $x313)))
 (let (($x292 (not true)))
 (let (($x39 (or $x292 $x72)))
 (let (($x368 (= true true)))
 (let (($x7 (and $x368 $x39)))
 (let (($x12 (= $x7 true)))
 (let (($x270 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x338 (= $x165 $x270)))
 (let (($x267 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x87 (= $x236 $x267)))
 (let (($x433 (and $x87 $x338)))
 (let (($x289 (= $x433 true)))
 (let (($x353 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x16 (= $x261 $x353)))
 (let (($x296 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x260 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x260 $x296)))
 (let (($x351 (and $x363 $x16)))
 (let (($x146 (= $x351 true)))
 (let (($x248 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x230 (= $x248 $x370)))
 (let (($x174 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x234 (= $x174 $x237)))
 (let (($x6 (and $x234 $x230)))
 (let (($x150 (= $x6 true)))
 (let ((?x359 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x471 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x307 (concat ?x471 (concat ?x394 (concat ?x132 ?x359)))))
 (let (($x153 (= ?x307 input.dst.llvm-%t)))
 (let (($x403 (= $x153 true)))
 (let (($x235 (= $x403 true)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x23 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x134 (bvadd ?x23 (_ bv3 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem ?x134) (concat ?x128 ?x69))))
 (let (($x354 (= (bvand ?x163 (_ bv4294967280 32)) ?x163)))
 (let (($x290 (= (bvand ?x23 (_ bv4294967292 32)) ?x23)))
 (let (($x322 (and $x290 $x354)))
 (let (($x187 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x38 (and true $x187)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x23 (bvsub ?x23 (_ bv4 32))) (bvult ?x23 (bvsub ?x23 (_ bv4 32))))))
 (let (($x305 (and (and (and $x212 $x38) $x290) $x322)))
 (let (($x226 (= true $x305)))
 (let (($x89 (not $x18)))
 (let (($x323 (=> $x89 $x226)))
 (let (($x246 (= $x323 true)))
 (let (($x360 (= $x246 true)))
 (let (($x361 (= $x360 true)))
 (let (($x137 (= (_ bv0 32) ?x163)))
 (let (($x209 (not $x137)))
 (let (($x291 (=> $x209 $x226)))
 (let (($x105 (= (bvand ?x303 (_ bv4294967280 32)) ?x303)))
 (let (($x216 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x56 (and $x216 $x105)))
 (let (($x54 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv8 32))) (bvult ?x95 (bvsub ?x95 (_ bv8 32))))))
 (let (($x220 (and (and (and $x54 $x38) $x216) $x56)))
 (let (($x40 (= true $x220)))
 (let (($x67 (=> $x137 $x40)))
 (let (($x50 (and $x67 $x291)))
 (let (($x396 (= true $x50)))
 (let (($x42 (or $x137 $x209)))
 (let (($x211 (and $x89 $x42)))
 (let (($x315 (=> $x211 $x396)))
 (let (($x37 (= $x315 true)))
 (let (($x317 (= $x37 true)))
 (let (($x324 (= $x317 true)))
 (let (($x229 (= input.dst.llvm-%t ?x307)))
 (let (($x206 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x472 (and $x206 $x229)))
 (let ((?x140 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x197 (= (_ bv0 32) ?x140)))
 (let ((?x192 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x192)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (and $x194 $x44)))
 (let (($x190 (and $x183 $x197)))
 (let (($x319 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x319 $x190)))
 (let (($x301 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x302 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x301)))))))
 (let (($x330 (and (and (and $x302 true) $x202) $x472)))
 (let (($x245 (and $x323 $x330)))
 (let (($x164 (and $x315 $x245)))
 (let (($x154 (= $x164 true)))
 (let (($x166 (= $x154 true)))
 (let (($x434 (= $x166 true)))
 (let (($x295 (and $x89 $x137)))
 (let (($x101 (= $x295 true)))
 (let (($x321 (= $x101 true)))
 (let (($x218 (= $x321 true)))
 (let (($x213 (= $x206 true)))
 (let (($x297 (= $x213 true)))
 (let (($x108 (= $x297 true)))
 (let (($x195 (and $x302 $x202)))
 (let (($x8 (= $x195 true)))
 (let (($x204 (= $x8 true)))
 (let (($x169 (= $x204 true)))
 (let (($x201 (and $x169 $x108)))
 (let (($x199 (and $x201 $x108)))
 (let (($x208 (and $x199 $x218)))
 (let (($x288 (and $x208 $x434)))
 (let (($x286 (and $x288 $x324)))
 (let (($x28 (and $x286 $x361)))
 (let (($x250 (and $x28 $x235)))
 (let (($x300 (and $x250 $x150)))
 (let (($x259 (and $x300 $x150)))
 (let (($x232 (and $x259 $x146)))
 (let (($x404 (and $x232 $x289)))
 (let (($x274 (and $x174 $x404)))
 (let (($x156 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x249 (and $x156 $x274)))
 (let (($x179 (= false false)))
 (let (($x331 (and $x179 $x249)))
 (let (($x272 (and $x179 $x331)))
 (let (($x148 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x159 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x162 (=> (and $x295 (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x46 (bvugt ?x23 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x134)))
 (let (($x13 (=> (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x107 (=> (and $x89 (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x45 (and $x107 $x162)))
 (let (($x257 (and $x45 $x272)))
 (let (($x152 (=> $x257 $x12)))
 (not $x152)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6191X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x275 (concat ?x346 (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv8 32))))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x171 (concat ?x66 (concat ?x74 ?x275))))
 (let (($x242 (= ?x171 ?x171)))
 (let (($x18 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x405 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x370 (bvuge ?x405 (_ bv1 32))))
 (let (($x313 (=> $x370 $x242)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x399 (concat ?x231 (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv4 32))))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6191X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x436 (concat ?x285 (concat ?x243 ?x399))))
 (let (($x238 (= ?x436 ?x436)))
 (let (($x311 (=> $x370 $x238)))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6191X))))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv2 32))) ?x269)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6191X (_ bv3 32))) ?x355)))
 (let (($x356 (= ?x240 ?x240)))
 (let (($x334 (=> $x370 $x356)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x78 (concat ?x205 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x95 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x26 (bvadd ?x95 (_ bv3 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem ?x26) (concat ?x139 ?x78))))
 (let (($x432 (= (_ bv0 32) ?x303)))
 (let ((?x265 (ite $x432 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x265 (_ bv1 32))))
 (let (($x278 (= $x370 $x239)))
 (let (($x340 (= ?x265 (_ bv0 32))))
 (let (($x237 (= ?x405 (_ bv0 32))))
 (let (($x268 (= $x237 $x340)))
 (let (($x253 (and (and (=> $x237 (= false false)) (= input.dst.llvm-%t ?x303)) $x268)))
 (let (($x72 (and (and (and (and $x253 $x278) $x334) $x311) $x313)))
 (let (($x292 (not true)))
 (let (($x39 (or $x292 $x72)))
 (let (($x368 (= true true)))
 (let (($x7 (and $x368 $x39)))
 (let (($x12 (= $x7 true)))
 (let (($x270 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x338 (= $x165 $x270)))
 (let (($x267 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x87 (= $x236 $x267)))
 (let (($x433 (and $x87 $x338)))
 (let (($x289 (= $x433 true)))
 (let (($x353 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x16 (= $x261 $x353)))
 (let (($x296 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x260 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x260 $x296)))
 (let (($x351 (and $x363 $x16)))
 (let (($x146 (= $x351 true)))
 (let (($x248 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x230 (= $x248 $x370)))
 (let (($x174 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x234 (= $x174 $x237)))
 (let (($x6 (and $x234 $x230)))
 (let (($x150 (= $x6 true)))
 (let ((?x359 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x471 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x307 (concat ?x471 (concat ?x394 (concat ?x132 ?x359)))))
 (let (($x153 (= ?x307 input.dst.llvm-%t)))
 (let (($x403 (= $x153 true)))
 (let (($x235 (= $x403 true)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x23 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x134 (bvadd ?x23 (_ bv3 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem ?x134) (concat ?x128 ?x69))))
 (let (($x354 (= (bvand ?x163 (_ bv4294967280 32)) ?x163)))
 (let (($x290 (= (bvand ?x23 (_ bv4294967292 32)) ?x23)))
 (let (($x322 (and $x290 $x354)))
 (let (($x187 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x38 (and true $x187)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x23 (bvsub ?x23 (_ bv4 32))) (bvult ?x23 (bvsub ?x23 (_ bv4 32))))))
 (let (($x305 (and (and (and $x212 $x38) $x290) $x322)))
 (let (($x226 (= true $x305)))
 (let (($x89 (not $x18)))
 (let (($x323 (=> $x89 $x226)))
 (let (($x246 (= $x323 true)))
 (let (($x360 (= $x246 true)))
 (let (($x361 (= $x360 true)))
 (let (($x137 (= (_ bv0 32) ?x163)))
 (let (($x209 (not $x137)))
 (let (($x291 (=> $x209 $x226)))
 (let (($x105 (= (bvand ?x303 (_ bv4294967280 32)) ?x303)))
 (let (($x216 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x56 (and $x216 $x105)))
 (let (($x54 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv8 32))) (bvult ?x95 (bvsub ?x95 (_ bv8 32))))))
 (let (($x220 (and (and (and $x54 $x38) $x216) $x56)))
 (let (($x40 (= true $x220)))
 (let (($x67 (=> $x137 $x40)))
 (let (($x50 (and $x67 $x291)))
 (let (($x396 (= true $x50)))
 (let (($x42 (or $x137 $x209)))
 (let (($x211 (and $x89 $x42)))
 (let (($x315 (=> $x211 $x396)))
 (let (($x37 (= $x315 true)))
 (let (($x317 (= $x37 true)))
 (let (($x324 (= $x317 true)))
 (let (($x229 (= input.dst.llvm-%t ?x307)))
 (let (($x206 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x472 (and $x206 $x229)))
 (let ((?x140 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x197 (= (_ bv0 32) ?x140)))
 (let ((?x192 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x192)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (and $x194 $x44)))
 (let (($x190 (and $x183 $x197)))
 (let (($x319 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x319 $x190)))
 (let (($x301 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x302 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x301)))))))
 (let (($x330 (and (and (and $x302 true) $x202) $x472)))
 (let (($x245 (and $x323 $x330)))
 (let (($x164 (and $x315 $x245)))
 (let (($x154 (= $x164 true)))
 (let (($x166 (= $x154 true)))
 (let (($x434 (= $x166 true)))
 (let (($x295 (and $x89 $x137)))
 (let (($x101 (= $x295 true)))
 (let (($x321 (= $x101 true)))
 (let (($x218 (= $x321 true)))
 (let (($x213 (= $x206 true)))
 (let (($x297 (= $x213 true)))
 (let (($x108 (= $x297 true)))
 (let (($x195 (and $x302 $x202)))
 (let (($x8 (= $x195 true)))
 (let (($x204 (= $x8 true)))
 (let (($x169 (= $x204 true)))
 (let (($x201 (and $x169 $x108)))
 (let (($x199 (and $x201 $x108)))
 (let (($x208 (and $x199 $x218)))
 (let (($x288 (and $x208 $x434)))
 (let (($x286 (and $x288 $x324)))
 (let (($x28 (and $x286 $x361)))
 (let (($x250 (and $x28 $x235)))
 (let (($x300 (and $x250 $x150)))
 (let (($x259 (and $x300 $x150)))
 (let (($x232 (and $x259 $x146)))
 (let (($x404 (and $x232 $x289)))
 (let (($x274 (and $x174 $x404)))
 (let (($x156 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x249 (and $x156 $x274)))
 (let (($x179 (= false false)))
 (let (($x331 (and $x179 $x249)))
 (let (($x272 (and $x179 $x331)))
 (let (($x148 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x159 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x162 (=> (and $x295 (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x46 (bvugt ?x23 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x134)))
 (let (($x13 (=> (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x107 (=> (and $x89 (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x45 (and $x107 $x162)))
 (let (($x257 (and $x45 $x272)))
 (let (($x152 (=> $x257 $x12)))
 (not $x152)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2172844/query
