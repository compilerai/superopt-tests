argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop5.proof
argv[5] = --spec-iospecs=loop5.iospecs
argv[6] = loop5.spec
argv[7] = loop5.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2888422
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop5.c
argv[10] = -o
argv[11] = par_tmpdir/loop5.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop5.spec.etfg
argv[10] = par_tmpdir/loop5.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop5.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000112s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 120 time spent: 0:0:0 [0.000211s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 643 time spent: 0:0:0 [0.002380s total; 0.000004 per start]
expr_simplify_solver: num_starts 58 time spent: 0:0:0 [0.006711s total; 0.000116 per start]
expr_simplify_syntactic: num_starts 58 time spent: 0:0:0 [0.002058s total; 0.000035 per start]
expr_simplify_using_lhs_set_helper: num_starts 77 time spent: 0:0:0 [0.010650s total; 0.000138 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 174 time spent: 0:0:0 [0.010469s total; 0.000060 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 50 time spent: 0:0:0 [0.000233s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000007s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 39 time spent: 0:0:0 [0.000516s total; 0.000013 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 46 time spent: 0:0:0 [0.000045s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000673s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000105s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1468 time spent: 0:0:0 [0.012063s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1468 time spent: 0:0:0 [0.000963s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000009s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.042196s total; 0.000649 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.013586s total; 0.000209 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005501s total; 0.000064 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000080s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.003973s total; 0.000031 per start]
compute_simplified_loc_exprs_for_edge: num_starts 383 time spent: 0:0:0 [0.014951s total; 0.000039 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000052s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005124s total; 0.000183 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000375s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.009076s total; 0.000140 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000089s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 7e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.9e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 1.9e-05s (num_starts 31; 0.0000s/start)
expr_is_hidden_reg.: 2.1e-05s (num_starts 22; 0.0000s/start)
add_extra_node_at_start_pc.: 2.7e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.7e-05s (num_starts 26; 0.0000s/start)
context_constructor.solver.: 4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.1e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_specvars.: 7.5e-05s (num_starts 1; 0.0001s/start)
main.3.: 7.5e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 8.4e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9e-05s (num_starts 10; 0.0000s/start)
propagate_sprels.: 9.1e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000101s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000113s (num_starts 5; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000122s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000137s (num_starts 33; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000158s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000162s (num_starts 1; 0.0002s/start)
expr_represents_llvm_undef.: 0.000172s (num_starts 28; 0.0000s/start)
determinize_value_expr_map.: 0.000184s (num_starts 232; 0.0000s/start)
populate_locid2expr_map.: 0.000204s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000271s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000286s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000299s (num_starts 1; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000305s (num_starts 65; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000369s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000376s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000395s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000407s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00043s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000444s (num_starts 45; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000525s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000591s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.00082s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000908s (num_starts 3; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001061s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001193s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.001274s (num_starts 85; 0.0000s/start)
graph_visit_exprs.: 0.001333s (num_starts 4; 0.0003s/start)
query:convert_from_z3.: 0.001339s (num_starts 28; 0.0000s/start)
compute_z3_expr.: 0.001352s (num_starts 28; 0.0000s/start)
compute_lr_status_for_expr.: 0.001382s (num_starts 36; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001424s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001478s (num_starts 31; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001541s (num_starts 120; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00184s (num_starts 1; 0.0018s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002213s (num_starts 1; 0.0022s/start)
query:convert_to_z3.: 0.002531s (num_starts 28; 0.0001s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.003176s (num_starts 1; 0.0032s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003214s (num_starts 65; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003543s (num_starts 68; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.003585s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.003852s (num_starts 2; 0.0019s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003858s (num_starts 65; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.003935s (num_starts 1; 0.0039s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.003969s (num_starts 1; 0.0040s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004109s (num_starts 1; 0.0041s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004207s (num_starts 2; 0.0021s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004252s (num_starts 1; 0.0043s/start)
tfg::populate_loc_definedness.: 0.004419s (num_starts 2; 0.0022s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004425s (num_starts 643; 0.0000s/start)
graph_to_stream.: 0.004604s (num_starts 1; 0.0046s/start)
query:simplify-z3.: 0.004891s (num_starts 66; 0.0001s/start)
populate_simplified_assets.: 0.005198s (num_starts 6; 0.0009s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005382s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.005499s (num_starts 2; 0.0027s/start)
graph_identify_back_edges.: 0.00552s (num_starts 5; 0.0011s/start)
graph_identify_natural_loops.: 0.005743s (num_starts 5; 0.0011s/start)
populate_dominator_and_postdominator_relations.: 0.005904s (num_starts 2; 0.0030s/start)
populate_transitive_closure.: 0.006081s (num_starts 1; 0.0061s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.006337s (num_starts 1; 0.0063s/start)
create_sp_version_relations_lattice_at_pc.: 0.006498s (num_starts 85; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.006822s (num_starts 1; 0.0068s/start)
avail_exprs_create_submap.: 0.0074s (num_starts 195; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.008605s (num_starts 3; 0.0029s/start)
compute_regions.: 0.008921s (num_starts 5; 0.0018s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.00957s (num_starts 1; 0.0096s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.009574s (num_starts 1; 0.0096s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.009578s (num_starts 1; 0.0096s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.009582s (num_starts 1; 0.0096s/start)
tfg_constructor.src.spec.foo.: 0.009586s (num_starts 1; 0.0096s/start)
tfg_preprocess.dst.llvm.foo.: 0.009926s (num_starts 1; 0.0099s/start)
tfg::tfg_preprocess.: 0.009928s (num_starts 1; 0.0099s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.010715s (num_starts 77; 0.0001s/start)
find_dominators.: 0.010792s (num_starts 9; 0.0012s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011293s (num_starts 65; 0.0002s/start)
populate_loc_liveness.: 0.012242s (num_starts 2; 0.0061s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013684s (num_starts 65; 0.0002s/start)
get_tfg.: 0.013755s (num_starts 1; 0.0138s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.013795s (num_starts 643; 0.0000s/start)
get_function_tfg_map.foo.: 0.013801s (num_starts 1; 0.0138s/start)
get_function_tfg_map.: 0.013804s (num_starts 1; 0.0138s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.013821s (num_starts 3; 0.0046s/start)
main.2.: 0.01385s (num_starts 1; 0.0138s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.014566s (num_starts 643; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.017818s (num_starts 643; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.034098s (num_starts 1; 0.0341s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.042268s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.042642s (num_starts 1; 0.0426s/start)
ftmap_run_pointsto_analysis.: 0.095602s (num_starts 1; 0.0956s/start)
parse_consts_db.: 6.70397s (num_starts 1; 6.7040s/start)
main.: 6.88487s (num_starts 1; 6.8849s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file loop5.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 5 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1.B2: Propagated 3 out of 5 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A1.B2: Added the 3 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 10 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 7 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 5 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 5 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:23 : foo.A1.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 24 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Propagated 7 out of 24 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : foo.A1.B2.C1: Added the 7 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:24 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 24 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 4 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:24 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:24 : foo.A1.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A1.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce29      2.:z3.ce149      3.:z3.ce110
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3.ce3      1.:z3.ce149      2.:z3.ce220      3.:z3.ce289      4.:z3.ce345      5.:z3.ce414      6.:z3.ce470      7.:z3.ce608
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3.ce29
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3.ce149      2.:z3.ce289      3.:z3.ce345      4.:z3.ce539
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3.ce29
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3.ce3      1.:z3.ce149      2.:z3.ce220      3.:z3.ce289      4.:z3.ce345      5.:z3.ce414      6.:z3.ce470      7.:z3.ce608
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce29
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 24 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 4 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 3.02s, query:smt.: 0.797402s (num_starts 30; 0.0266s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.81674s (num_starts 65; 0.0279s/start)ftmap_run_pointsto_analysis.: 0.106883s (num_starts 2; 0.0534s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_tfg_pred_eqclass.: 2e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 3e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 1e-05s (num_starts 9; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1.1e-05s (num_starts 1; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.2e-05s (num_starts 4; 0.0000s/start)
remove_complex_bv_exprs.: 1.2e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.3e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.4e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.6e-05s (num_starts 3; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 2.3e-05s (num_starts 19; 0.0000s/start)
ce_perform_memory_fuzzing.: 2.6e-05s (num_starts 24; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.7e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.7e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 2.8e-05s (num_starts 19; 0.0000s/start)
prove_trivial.: 3e-05s (num_starts 30; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.1e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.3e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.5e-05s (num_starts 2; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.6e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.8e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.8e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.9e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 5.8e-05s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 7.1e-05s (num_starts 1; 0.0001s/start)
expr_is_hidden_reg.: 8.9e-05s (num_starts 95; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000106s (num_starts 67; 0.0000s/start)
lr_status_meet.: 0.000108s (num_starts 164; 0.0000s/start)
expr_is_callee_save_const.: 0.000113s (num_starts 107; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000113s (num_starts 16; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000119s (num_starts 2; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000123s (num_starts 23; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000127s (num_starts 3; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000132s (num_starts 65; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000148s (num_starts 40; 0.0000s/start)
populate_locid2expr_map.: 0.00017s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00017s (num_starts 1; 0.0002s/start)
compute_bv_bool_eqclass.: 0.00018s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.00018s (num_starts 22; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000196s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000197s (num_starts 40; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000203s (num_starts 37; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000209s (num_starts 79; 0.0000s/start)
compute_sprel_relations.: 0.000216s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000222s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000229s (num_starts 18; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000232s (num_starts 37; 0.0000s/start)
propagate_sprels.: 0.000233s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000244s (num_starts 37; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000253s (num_starts 22; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000274s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000282s (num_starts 9; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000283s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000287s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::meet.: 0.000296s (num_starts 528; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000317s (num_starts 31; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000347s (num_starts 5; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000356s (num_starts 29; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000393s (num_starts 2; 0.0002s/start)
collect_assumes_around_edge.: 0.000443s (num_starts 3; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000445s (num_starts 45; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000449s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00045s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000452s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000452s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000453s (num_starts 1; 0.0005s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000455s (num_starts 94; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000456s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000474s (num_starts 1; 0.0005s/start)
identify_address_taken_local_variables.: 0.000476s (num_starts 1; 0.0005s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000482s (num_starts 94; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000488s (num_starts 2; 0.0002s/start)
parse_yices_model.: 0.000542s (num_starts 1; 0.0005s/start)
set_result_and_counter_example.: 0.00055s (num_starts 30; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000588s (num_starts 40; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000594s (num_starts 8; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000596s (num_starts 1; 0.0006s/start)
construct_linear_combination_exprs.: 0.000625s (num_starts 28; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000637s (num_starts 3; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000645s (num_starts 50; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000655s (num_starts 5; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000687s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000718s (num_starts 1; 0.0007s/start)
pth_collect_preds_using_atom_func.: 0.000724s (num_starts 65; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000728s (num_starts 1; 0.0007s/start)
proof_query_is_trivial.: 0.000738s (num_starts 67; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000748s (num_starts 2; 0.0004s/start)
graph_with_guessing_sync_preds.: 0.000753s (num_starts 65; 0.0000s/start)
expr_represents_llvm_undef.: 0.000773s (num_starts 111; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000789s (num_starts 5; 0.0002s/start)
populate_simplified_to_state.: 0.000801s (num_starts 3; 0.0003s/start)
tfg_edge_composition_get_assumes.: 0.000809s (num_starts 65; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000813s (num_starts 5; 0.0002s/start)
create_closure_matrix.: 0.000827s (num_starts 82; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000827s (num_starts 62; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000886s (num_starts 1; 0.0009s/start)
removeMostPromising.: 0.000896s (num_starts 10; 0.0001s/start)
parse_cvc4_model.: 0.000921s (num_starts 1; 0.0009s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001021s (num_starts 2; 0.0005s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001036s (num_starts 27; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001111s (num_starts 37; 0.0000s/start)
ldr_decomposition.: 0.001142s (num_starts 23; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001145s (num_starts 62; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001218s (num_starts 700; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001351s (num_starts 2; 0.0007s/start)
corr_graph_enumerate_correlations.: 0.001402s (num_starts 4; 0.0004s/start)
tfg::populate_loc_definedness.before_solve.: 0.001415s (num_starts 3; 0.0005s/start)
bv_const_ref_map2expr_map.: 0.001426s (num_starts 28; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001598s (num_starts 34; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001647s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001649s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001651s (num_starts 1; 0.0017s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001672s (num_starts 2; 0.0008s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001726s (num_starts 46; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001727s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001755s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001758s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned;-trivial.: 0.001761s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001766s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001775s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned.: 0.00178s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001795s (num_starts 2; 0.0009s/start)
tfg::populate_loc_definedness.: 0.001852s (num_starts 3; 0.0006s/start)
populate_simplified_assets.: 0.001863s (num_starts 6; 0.0003s/start)
generate_aliasing_constraints_from_expr.: 0.001989s (num_starts 803; 0.0000s/start)
graph_visit_exprs.: 0.002083s (num_starts 3; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.00233s (num_starts 111; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002434s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002439s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.002443s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002449s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.00246s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.002469s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002485s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002497s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002501s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.002508s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002511s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002641s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002645s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.002649s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002651s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002664s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.002674s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002694s (num_starts 3; 0.0009s/start)
graph_visit_exprs_and_keys.: 0.002744s (num_starts 2; 0.0014s/start)
get_sprel_map_pair_at_pc.: 0.002747s (num_starts 37; 0.0001s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.002786s (num_starts 1; 0.0028s/start)
populate_locs_potentially_modified_on_edge.: 0.003009s (num_starts 3; 0.0010s/start)
compute_ssa_vars_renaming_map.: 0.003049s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.003116s (num_starts 2; 0.0016s/start)
graph_identify_back_edges.: 0.003239s (num_starts 21; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003439s (num_starts 65; 0.0001s/start)
graph_identify_natural_loops.: 0.003473s (num_starts 21; 0.0002s/start)
find_dominators.: 0.003504s (num_starts 25; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003522s (num_starts 235; 0.0000s/start)
populate_branch_affecting_locs.: 0.003929s (num_starts 3; 0.0013s/start)
create_sp_version_relations_lattice_at_pc.: 0.004307s (num_starts 82; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.004308s (num_starts 34; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004369s (num_starts 29; 0.0002s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004474s (num_starts 65; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.004702s (num_starts 130; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.004887s (num_starts 3; 0.0016s/start)
compute_expr_eqclasses_at_pc.: 0.00507s (num_starts 1; 0.0051s/start)
expr_substitute_using_available_exprs_submap.: 0.005146s (num_starts 169; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.00538s (num_starts 4; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.005392s (num_starts 4; 0.0013s/start)
tfg_suffixpath_get_expr_helper.: 0.00544s (num_starts 20; 0.0003s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.005528s (num_starts 3; 0.0018s/start)
compute_vars_reaching_definitions.: 0.005662s (num_starts 2; 0.0028s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005687s (num_starts 230; 0.0000s/start)
cg_add_node.: 0.005837s (num_starts 3; 0.0019s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.006178s (num_starts 37; 0.0002s/start)
populate_transitive_closure.: 0.006288s (num_starts 27; 0.0002s/start)
predicate_canonicalized.: 0.006399s (num_starts 28; 0.0002s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006813s (num_starts 37; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.006844s (num_starts 20; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.006896s (num_starts 20; 0.0003s/start)
collect_assumes_around_path_helper.: 0.007024s (num_starts 94; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.007166s (num_starts 23; 0.0003s/start)
compute_lr_status_for_expr.: 0.007245s (num_starts 182; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.007343s (num_starts 94; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.007489s (num_starts 2; 0.0037s/start)
bv_linear_solve.: 0.00765s (num_starts 23; 0.0003s/start)
create_new_corr_graph_edge.: 0.007664s (num_starts 3; 0.0026s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007808s (num_starts 164; 0.0000s/start)
query:bv_solve.: 0.007808s (num_starts 23; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.008066s (num_starts 164; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008152s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008158s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008173s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.008185s (num_starts 3; 0.0027s/start)
collect_aliasing_constraints_around_path_helper.: 0.008299s (num_starts 106; 0.0001s/start)
compute_regions.: 0.008311s (num_starts 21; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.008457s (num_starts 6; 0.0014s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.008617s (num_starts 18; 0.0005s/start)
collect_aliasing_constraints_around_path.: 0.008823s (num_starts 66; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.009067s (num_starts 3; 0.0030s/start)
lhs_set_sort.: 0.009467s (num_starts 37; 0.0003s/start)
bv_solve_returning_intermediate_structures.: 0.009578s (num_starts 23; 0.0004s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.009666s (num_starts 62; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.009781s (num_starts 4; 0.0024s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00979s (num_starts 4; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.009876s (num_starts 4; 0.0025s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.010004s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.010006s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.01001s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.010012s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.010016s (num_starts 2; 0.0050s/start)
gen_pred_from_coeff_row.simplify.: 0.010437s (num_starts 28; 0.0004s/start)
populate_loc_liveness.: 0.010504s (num_starts 3; 0.0035s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.01058s (num_starts 62; 0.0002s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.010913s (num_starts 62; 0.0002s/start)
bvsolve_cache_query.miss1.: 0.010991s (num_starts 23; 0.0005s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.01129s (num_starts 184; 0.0001s/start)
bvsolve_cache_query.: 0.011303s (num_starts 23; 0.0005s/start)
collect_inductive_preds_around_path.: 0.011325s (num_starts 65; 0.0002s/start)
get_next_potential_correlations.: 0.011832s (num_starts 3; 0.0039s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.01326s (num_starts 4; 0.0033s/start)
solve_for_bv_points.: 0.013856s (num_starts 23; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.013946s (num_starts 947; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.014557s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.014559s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.014562s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.014565s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.014567s (num_starts 1; 0.0146s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.014617s (num_starts 1; 0.0146s/start)
avail_exprs_create_submap.: 0.014685s (num_starts 186; 0.0001s/start)
query:convert_from_z3.: 0.014946s (num_starts 258; 0.0001s/start)
do_ssa_transformation.: 0.015212s (num_starts 2; 0.0076s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.015284s (num_starts 6; 0.0025s/start)
compute_new_lr_status_on_locs.: 0.015423s (num_starts 62; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016209s (num_starts 1; 0.0162s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016215s (num_starts 1; 0.0162s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016219s (num_starts 1; 0.0162s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016223s (num_starts 1; 0.0162s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.016225s (num_starts 1; 0.0162s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.016234s (num_starts 1; 0.0162s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.016691s (num_starts 2; 0.0083s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.016701s (num_starts 2; 0.0084s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.01702s (num_starts 23; 0.0007s/start)
counter_example_satisfies_preds.: 0.0174s (num_starts 512; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.017741s (num_starts 17; 0.0010s/start)
gen_pred_from_coeff_row.: 0.019908s (num_starts 28; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.020014s (num_starts 4; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.020023s (num_starts 4; 0.0050s/start)
compute_preds_for_bv_points.: 0.020151s (num_starts 5; 0.0040s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.020204s (num_starts 9; 0.0022s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.020483s (num_starts 84; 0.0002s/start)
graph_to_stream.: 0.021536s (num_starts 4; 0.0054s/start)
tfg_relax_pointsto_vals_on_edge.: 0.021735s (num_starts 17; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.023116s (num_starts 6; 0.0039s/start)
tfg_postprocess_after_pointsto_analysis.: 0.023124s (num_starts 2; 0.0116s/start)
get_unrolled_paths_from.: 0.02366s (num_starts 15; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024368s (num_starts 1; 0.0244s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02437s (num_starts 1; 0.0244s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.024451s (num_starts 987; 0.0000s/start)
query:convert_to_z3.: 0.025358s (num_starts 258; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.025654s (num_starts 947; 0.0000s/start)
put_smtlib_string_in_file.: 0.028022s (num_starts 60; 0.0005s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.02919s (num_starts 207; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.029924s (num_starts 62; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032639s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032645s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.032654s (num_starts 1; 0.0327s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.03312s (num_starts 24; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.034316s (num_starts 2; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.034394s (num_starts 3; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.034403s (num_starts 3; 0.0115s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.034408s (num_starts 947; 0.0000s/start)
apply_mask_and_overlay_array_constant.: 0.034579s (num_starts 24; 0.0014s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.035332s (num_starts 45; 0.0008s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.036031s (num_starts 37; 0.0010s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.036402s (num_starts 103; 0.0004s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.036586s (num_starts 82; 0.0004s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.037509s (num_starts 85; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.038165s (num_starts 8; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.038188s (num_starts 8; 0.0048s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.041312s (num_starts 37; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046911s (num_starts 1; 0.0469s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046917s (num_starts 1; 0.0469s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.046926s (num_starts 1; 0.0469s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.04693s (num_starts 1; 0.0469s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.047148s (num_starts 1; 0.0471s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.049827s (num_starts 485; 0.0001s/start)
graph_ec_apply_trans_funs_helper.0.: 0.054176s (num_starts 166; 0.0003s/start)
guarded_predicate_set_and.: 0.055303s (num_starts 37; 0.0015s/start)
graph_ec_apply_trans_funs_helper.: 0.055493s (num_starts 171; 0.0003s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.055968s (num_starts 171; 0.0003s/start)
query:simplify-z3.: 0.056119s (num_starts 524; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.056571s (num_starts 171; 0.0003s/start)
computeWP_for_pred_across_ec.: 0.05718s (num_starts 171; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.058113s (num_starts 12; 0.0048s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.063313s (num_starts 1; 0.0633s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.063318s (num_starts 1; 0.0633s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.063326s (num_starts 1; 0.0633s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.063331s (num_starts 1; 0.0633s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.063337s (num_starts 1; 0.0633s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.066616s (num_starts 18; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067766s (num_starts 2; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067774s (num_starts 2; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.067791s (num_starts 2; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.067801s (num_starts 2; 0.0339s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.067843s (num_starts 16; 0.0042s/start)
edge_composition_apply_trans_funs_on_pred.: 0.068838s (num_starts 65; 0.0011s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.069227s (num_starts 82; 0.0008s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.072856s (num_starts 45; 0.0016s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.076024s (num_starts 3; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076948s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076951s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.076963s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.076969s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07742s (num_starts 2; 0.0387s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077432s (num_starts 2; 0.0387s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.077913s (num_starts 2; 0.0390s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.077921s (num_starts 2; 0.0390s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.07793s (num_starts 2; 0.0390s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.077939s (num_starts 2; 0.0390s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.077948s (num_starts 2; 0.0390s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079171s (num_starts 1; 0.0792s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079179s (num_starts 1; 0.0792s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079184s (num_starts 1; 0.0792s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079515s (num_starts 2; 0.0398s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079534s (num_starts 2; 0.0398s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.079607s (num_starts 2; 0.0398s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.080577s (num_starts 4; 0.0201s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.081715s (num_starts 4; 0.0204s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.081729s (num_starts 4; 0.0204s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.081751s (num_starts 4; 0.0204s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08709s (num_starts 1; 0.0871s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087093s (num_starts 1; 0.0871s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.087105s (num_starts 1; 0.0871s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.087108s (num_starts 1; 0.0871s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.089458s (num_starts 6; 0.0149s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092101s (num_starts 3; 0.0307s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092119s (num_starts 3; 0.0307s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.093913s (num_starts 3; 0.0313s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097862s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097862s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097863s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097863s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.09787s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.097874s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.097881s (num_starts 1; 0.0979s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.098367s (num_starts 2; 0.0492s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.100629s (num_starts 8; 0.0126s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101135s (num_starts 1; 0.1011s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101139s (num_starts 1; 0.1011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101142s (num_starts 1; 0.1011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101144s (num_starts 1; 0.1011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.101157s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed.: 0.101162s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.10117s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.102222s (num_starts 5; 0.0204s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.102239s (num_starts 5; 0.0204s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.103642s (num_starts 4; 0.0259s/start)
ftmap_run_pointsto_analysis.: 0.106883s (num_starts 2; 0.0534s/start)
tfg_run_pointsto_analysis.: 0.107188s (num_starts 2; 0.0536s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.111708s (num_starts 2; 0.0559s/start)
decide_hoare_triple_helper;-trivial.: 0.112396s (num_starts 37; 0.0030s/start)
tfg_populate_structs_after_ssa_construction.: 0.121287s (num_starts 2; 0.0606s/start)
check_node_stability_after_CE_addition.: 0.125925s (num_starts 44; 0.0029s/start)
compute_z3_expr.: 0.12857s (num_starts 288; 0.0004s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.133068s (num_starts 326; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135263s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135274s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135282s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135291s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.135314s (num_starts 2; 0.0677s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned.: 0.135323s (num_starts 2; 0.0677s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.135343s (num_starts 2; 0.0677s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.137124s (num_starts 4; 0.0343s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.139412s (num_starts 2; 0.0697s/start)
propagate_nodece_across_edge.: 0.156301s (num_starts 12; 0.0130s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160049s (num_starts 4; 0.0400s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160086s (num_starts 4; 0.0400s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160115s (num_starts 4; 0.0400s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161859s (num_starts 3; 0.0540s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16187s (num_starts 3; 0.0540s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164029s (num_starts 2; 0.0820s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.164093s (num_starts 2; 0.0820s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.167311s (num_starts 7; 0.0239s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.167335s (num_starts 7; 0.0239s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.178438s (num_starts 1; 0.1784s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180931s (num_starts 2; 0.0905s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180943s (num_starts 2; 0.0905s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180946s (num_starts 2; 0.0905s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.18097s (num_starts 2; 0.0905s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.180982s (num_starts 2; 0.0905s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.180998s (num_starts 2; 0.0905s/start)
parse_z3_model.: 0.181731s (num_starts 25; 0.0073s/start)
read_counter_examples_from_channel.: 0.185763s (num_starts 13; 0.0143s/start)
check_equivalence_proof.: 0.187459s (num_starts 1; 0.1875s/start)
check_wfconds_on_edge.: 0.187934s (num_starts 7; 0.0268s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.195575s (num_starts 3; 0.0652s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.198368s (num_starts 12; 0.0165s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.198413s (num_starts 12; 0.0165s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.200362s (num_starts 3; 0.0668s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.218541s (num_starts 16; 0.0137s/start)
ce_reconcile_sorts.: 0.220223s (num_starts 27; 0.0082s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.239232s (num_starts 5; 0.0478s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.248018s (num_starts 11; 0.0225s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.260111s (num_starts 3; 0.0867s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.261894s (num_starts 3; 0.0873s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.261965s (num_starts 3; 0.0873s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.26273s (num_starts 6; 0.0438s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.272317s (num_starts 6; 0.0454s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.275734s (num_starts 45; 0.0061s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.276067s (num_starts 45; 0.0061s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.2826s (num_starts 8; 0.0353s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.291583s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.29159s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.291591s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.291597s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.291628s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned.: 0.291652s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.291673s (num_starts 3; 0.0972s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.294348s (num_starts 6; 0.0491s/start)
dst_edge_composition_proves_false.: 0.296853s (num_starts 3; 0.0990s/start)
decide_hoare_triple.: 0.305176s (num_starts 5; 0.0610s/start)
get_next_dst_edge_composition_to_correlate.: 0.307915s (num_starts 4; 0.0770s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.31772s (num_starts 17; 0.0187s/start)
check_preds_on_edge_compositions.: 0.327075s (num_starts 10; 0.0327s/start)
corr_graph::add_edge().: 0.330934s (num_starts 3; 0.1103s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.339591s (num_starts 3; 0.1132s/start)
corr_graph_add_correlation.: 0.339704s (num_starts 3; 0.1132s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.339764s (num_starts 3; 0.1133s/start)
counter_example_translate_on_edge_composition_helper.: 0.380224s (num_starts 432; 0.0009s/start)
counter_example_falsifies_preds.: 0.383558s (num_starts 89; 0.0043s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.397876s (num_starts 8; 0.0497s/start)
counter_example_evaluate_preds.: 0.399309s (num_starts 601; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.399323s (num_starts 9; 0.0444s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.41644s (num_starts 25; 0.0167s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.466474s (num_starts 27; 0.0173s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.486645s (num_starts 18; 0.0270s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.502127s (num_starts 24; 0.0209s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.502552s (num_starts 46; 0.0109s/start)
query:smt.: 0.797402s (num_starts 30; 0.0266s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.868918s (num_starts 12; 0.0724s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.937713s (num_starts 28; 0.0335s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.978729s (num_starts 9; 0.1087s/start)
spawn_smt_query.: 0.98357s (num_starts 30; 0.0328s/start)
solver_provable.: 1.34365s (num_starts 37; 0.0363s/start)
expr_is_provable.: 1.35743s (num_starts 37; 0.0367s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.35822s (num_starts 37; 0.0367s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.36047s (num_starts 37; 0.0368s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.36166s (num_starts 37; 0.0368s/start)
solver_satisfiable-cache-miss.: 1.37261s (num_starts 30; 0.0458s/start)
solver_satisfiable.: 1.37287s (num_starts 38; 0.0361s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.4253s (num_starts 37; 0.0385s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.43992s (num_starts 37; 0.0389s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.44065s (num_starts 37; 0.0389s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.63355s (num_starts 37; 0.0442s/start)
prove.: 1.63391s (num_starts 37; 0.0442s/start)
prove_spawn_and_join_helper.: 1.63413s (num_starts 37; 0.0442s/start)
prove_spawn_and_join.: 1.69356s (num_starts 37; 0.0458s/start)
prove_wrapper.proof_query_not_trivial.: 1.69875s (num_starts 37; 0.0459s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.70165s (num_starts 28; 0.0608s/start)
prove_wrapper.: 1.71368s (num_starts 67; 0.0256s/start)
decide_hoare_triple_check_ub.: 1.78779s (num_starts 65; 0.0275s/start)
decide_hoare_triple_helper.: 1.81674s (num_starts 65; 0.0279s/start)
update_invariant_state_for_edges.: 1.88752s (num_starts 3; 0.6292s/start)
cg_check_new_cg_ec.: 1.88758s (num_starts 3; 0.6292s/start)
correl_entry_apply.: 1.88776s (num_starts 3; 0.6293s/start)
expandProductCFG.: 2.20811s (num_starts 4; 0.5520s/start)
decide_hoare_triple_with_alias_cons.: 2.31992s (num_starts 65; 0.0357s/start)
bestFirstSearch.: 2.58482s (num_starts 1; 2.5848s/start)
Time taken for equivalence check.: 2.77381s (num_starts 1; 2.7738s/start)

counters:
# of paths enumerated.: 11
# of paths expanded.: 3
# of queries to linear solver.: 23
# of smt-solver-queries.: 30
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 7
smt-queries-cache-hits.: 8
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 25
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 14
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 24
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 16
src-nodes.: 14
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 2.23
final-CG-time-to-total-time-ratio.: 0.86
query-time-to-total-time-ratio.: 0.28

Context stats:
exprs: count: 143018
sorts: count: 151
num_proof_queries: 37
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	5309
	        hit ratio:	0.952533
m_simplify_solver:
	----------- total:	1022
	        hit ratio:	0.738748
m_z3_solver_substitution:
	----------- total:	266
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	267
	        hit ratio:	0
m_expr_size:
	----------- total:	5858
	        hit ratio:	0.938716
m_expr_evaluates_to_constant_visitor:
	----------- total:	4254
	        hit ratio:	0.59826

z3_solver expr_query_cache entry size: 30
	----------- total:	38
	             hits:	8
	        hit ratio:	0.210526
histogram (time taken by solver in ms):
[ 7.8770,  9.4216) (avg.  8.5795)        : 2
[ 9.4216, 11.2690) (avg.  0.0000)        : 0
[11.2690, 13.4787) (avg. 12.9535)        : 2
[13.4787, 16.1217) (avg. 14.3370)        : 2
[16.1217, 19.2830) (avg. 17.4203)        : 3
[19.2830, 23.0641) (avg. 20.8540)        : 3
[23.0641, 27.5867) (avg. 26.0448)        : 6
[27.5867, 32.9961) (avg. 28.9750)        : 2
[32.9961, 39.4662) (avg. 36.7575)        : 6
[39.4662, 47.2050) (avg. 43.9233)        : 4
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 0)                          : 0
[3, 5) (avg. 4)                          : 29
[5, 6) (avg. 0)                          : 0
[6, 7) (avg. 0)                          : 0
[7, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 12) (avg. 0)                        : 0
[12, 13) (avg. 0)                        : 0
[13, 14) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 17,  37) (avg.  17)                    : 1
[ 37,  56) (avg.   0)                    : 0
[ 56,  76) (avg.   0)                    : 0
[ 76,  95) (avg.   0)                    : 0
[ 95, 114) (avg. 110)                    : 9
[114, 134) (avg. 122)                    : 3
[134, 153) (avg. 144)                    : 6
[153, 173) (avg. 166)                    : 3
[173, 192) (avg. 186)                    : 3
[192, 211) (avg. 200)                    : 5
Top 10 highest time taking queries:
1. [0.046s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.2
2. [0.046s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
3. [0.042s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
4. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
6. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
7. [0.038s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
8. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
9. [0.035s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
10. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_.0

<MSG>0:24 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 130 time spent: 0:0:0 [0.002712s total; 0.000021 per start]
tfg_computeWP: num_starts 375 time spent: 0:0:0 [0.047973s total; 0.000128 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1594 time spent: 0:0:0 [0.003344s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1733 time spent: 0:0:0 [0.003356s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 742 time spent: 0:0:0 [0.001414s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 27 time spent: 0:0:0 [0.365711s total; 0.013545 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.314659s total; 0.052443 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 440 time spent: 0:0:0 [0.298505s total; 0.000678 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 88 time spent: 0:0:0 [0.407819s total; 0.004634 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 400 time spent: 0:0:0 [0.252010s total; 0.000630 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1626 time spent: 0:0:0 [0.638847s total; 0.000393 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 400 time spent: 0:0:0 [0.014711s total; 0.000037 per start]
tfg_graph_get_vars_written_on_edge: num_starts 400 time spent: 0:0:0 [0.010956s total; 0.000027 per start]
cg_with_rank_add_CE_at_pc: num_starts 44 time spent: 0:0:0 [0.208985s total; 0.004750 per start]
graph_with_ce_add_CE_at_pc: num_starts 30 time spent: 0:0:0 [0.000913s total; 0.000030 per start]
graph_with_guessing_add_CE_at_pc: num_starts 44 time spent: 0:0:0 [0.207963s total; 0.004726 per start]
point_set_add_point_using_CE: num_starts 207 time spent: 0:0:0 [0.024661s total; 0.000119 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 207 time spent: 0:0:0 [0.025174s total; 0.000122 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.080830s total; 0.003109 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.054774s total; 0.002107 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2372 time spent: 0:0:0 [0.022274s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 368 time spent: 0:0:0 [0.009249s total; 0.000025 per start]
expr_simplify_solver: num_starts 1065 time spent: 0:0:0 [0.088257s total; 0.000083 per start]
expr_simplify_syntactic: num_starts 1065 time spent: 0:0:0 [0.025330s total; 0.000024 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010603s total; 0.002651 per start]
expr_simplify_using_lhs_set_helper: num_starts 392 time spent: 0:0:0 [0.143195s total; 0.000365 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2065 time spent: 0:0:0 [0.140823s total; 0.000068 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1020 time spent: 0:0:0 [0.004586s total; 0.000004 per start]
expr_simplify_eq: num_starts 240 time spent: 0:0:0 [0.001973s total; 0.000008 per start]
expr_simplify_or: num_starts 26 time spent: 0:0:0 [0.000037s total; 0.000001 per start]
expr_simplify_and: num_starts 52 time spent: 0:0:0 [0.000479s total; 0.000009 per start]
expr_simplify_andnot1: num_starts 21 time spent: 0:0:0 [0.000323s total; 0.000015 per start]
expr_simplify_not: num_starts 13 time spent: 0:0:0 [0.000055s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 299 time spent: 0:0:0 [0.008496s total; 0.000028 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010514s total; 0.002629 per start]
get_arithmetic_addsub_atoms: num_starts 1406 time spent: 0:0:0 [0.001099s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 302 time spent: 0:0:0 [0.003059s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 1194 time spent: 0:0:0 [0.000765s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 5662 time spent: 0:0:0 [0.144080s total; 0.000025 per start]
expr_do_simplify_helper_cache: num_starts 5662 time spent: 0:0:0 [0.005504s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 1328 time spent: 0:0:0 [0.647742s total; 0.000488 per start]
array_constant_equals: num_starts 379 time spent: 0:0:0 [0.000706s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 45 time spent: 0:0:0 [0.072809s total; 0.001618 per start]
alias_val_xfer_and_meet: num_starts 45 time spent: 0:0:0 [0.035250s total; 0.000783 per start]
get_sprel_map_from_avail_exprs: num_starts 67 time spent: 0:0:0 [0.006163s total; 0.000092 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000089s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 124 time spent: 0:0:0 [0.014629s total; 0.000118 per start]
compute_simplified_loc_exprs_for_edge: num_starts 330 time spent: 0:0:0 [0.040157s total; 0.000122 per start]
compute_locs_definitely_written_on_edge: num_starts 124 time spent: 0:0:0 [0.000195s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 35 time spent: 0:0:0 [0.006155s total; 0.000176 per start]
edge_update_memlabel_map_for_mlvars: num_starts 62 time spent: 0:0:0 [0.001241s total; 0.000020 per start]
add_new_locs_based_on_edge: num_starts 45 time spent: 0:0:0 [0.023922s total; 0.000532 per start]
expand_locset_to_include_slots_for_memmask: num_starts 77 time spent: 0:0:0 [0.000167s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:30 [30.232311s total; 30.232311 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 3.02s.
ftmap_run_pointsto_analysis.: 0.106883s (num_starts 2; 0.0534s/start)s.
EQ Time after pointsto analysis: 2.91618s.
EQ Time after pointsto analysis and smt_query: 1.2025s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.1912s.
Equivalence proof found. The programs are equivalent.
