argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --smt-query-timeout=5
argv[5] = --axpred-solver-max-depth=4
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=loop5.proof
argv[9] = --spec-iospecs=loop5.iospecs
argv[10] = loop5.spec
argv[11] = loop5.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.460664
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop5.c
argv[10] = -o
argv[11] = par_tmpdir/loop5.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/loop5.spec.etfg
argv[11] = par_tmpdir/loop5.c.bc
argv[12] = -o
argv[13] = par_tmpdir/loop5.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000121s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 120 time spent: 0:0:0 [0.000196s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 643 time spent: 0:0:0 [0.002219s total; 0.000003 per start]
expr_simplify_solver: num_starts 58 time spent: 0:0:0 [0.005211s total; 0.000090 per start]
expr_simplify_syntactic: num_starts 58 time spent: 0:0:0 [0.001882s total; 0.000032 per start]
expr_simplify_using_lhs_set_helper: num_starts 77 time spent: 0:0:0 [0.016317s total; 0.000212 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 174 time spent: 0:0:0 [0.016137s total; 0.000093 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 50 time spent: 0:0:0 [0.000211s total; 0.000004 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000006s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 39 time spent: 0:0:0 [0.000485s total; 0.000012 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 46 time spent: 0:0:0 [0.000042s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000644s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000116s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1468 time spent: 0:0:0 [0.017726s total; 0.000012 per start]
expr_do_simplify_helper_cache: num_starts 1468 time spent: 0:0:0 [0.000965s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000006s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.041728s total; 0.000642 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.012932s total; 0.000199 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005130s total; 0.000060 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000081s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.004866s total; 0.000037 per start]
compute_simplified_loc_exprs_for_edge: num_starts 383 time spent: 0:0:0 [0.023955s total; 0.000063 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000044s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.004766s total; 0.000170 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000363s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.007893s total; 0.000121 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000089s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 5e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.4e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.8e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.8e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 2.1e-05s (num_starts 31; 0.0000s/start)
context_constructor.solver.: 2.4e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.5e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.8e-05s (num_starts 26; 0.0000s/start)
context_constructor.: 3.1e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.5e-05s (num_starts 2; 0.0000s/start)
compute_sprel_relations.: 7e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 7.3e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 7.8e-05s (num_starts 1; 0.0001s/start)
main.3.: 7.9e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.7e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 8.9e-05s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.7e-05s (num_starts 5; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000113s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000127s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000156s (num_starts 1; 0.0002s/start)
determinize_value_expr_map.: 0.000158s (num_starts 231; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000165s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000168s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000184s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000273s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000282s (num_starts 65; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000293s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000297s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000317s (num_starts 1; 0.0003s/start)
compute_z3_expr.: 0.000352s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000362s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000395s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00042s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000428s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000431s (num_starts 45; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000495s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000574s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000809s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000848s (num_starts 3; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000973s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001192s (num_starts 51; 0.0000s/start)
query:convert_from_z3.: 0.001204s (num_starts 28; 0.0000s/start)
create_closure_matrix.: 0.001214s (num_starts 85; 0.0000s/start)
graph_visit_exprs.: 0.00126s (num_starts 4; 0.0003s/start)
query:convert_to_z3.: 0.001322s (num_starts 28; 0.0000s/start)
compute_lr_status_for_expr.: 0.001339s (num_starts 36; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001404s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001462s (num_starts 31; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001503s (num_starts 120; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001887s (num_starts 1; 0.0019s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002043s (num_starts 1; 0.0020s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003201s (num_starts 65; 0.0000s/start)
query:simplify-z3.: 0.003478s (num_starts 66; 0.0001s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.003526s (num_starts 1; 0.0035s/start)
tfg::populate_loc_definedness.before_solve.: 0.00385s (num_starts 2; 0.0019s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.003901s (num_starts 1; 0.0039s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00404s (num_starts 1; 0.0040s/start)
compute_new_lr_status_on_locs.: 0.004055s (num_starts 65; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004088s (num_starts 68; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004151s (num_starts 2; 0.0021s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004184s (num_starts 1; 0.0042s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.004211s (num_starts 1; 0.0042s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004337s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004346s (num_starts 2; 0.0022s/start)
graph_to_stream.: 0.004382s (num_starts 1; 0.0044s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005463s (num_starts 65; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.005645s (num_starts 2; 0.0028s/start)
populate_branch_affecting_locs.: 0.005658s (num_starts 2; 0.0028s/start)
populate_simplified_assets.: 0.005675s (num_starts 6; 0.0009s/start)
populate_transitive_closure.: 0.005807s (num_starts 1; 0.0058s/start)
graph_identify_back_edges.: 0.006012s (num_starts 6; 0.0010s/start)
create_sp_version_relations_lattice_at_pc.: 0.006089s (num_starts 85; 0.0001s/start)
graph_identify_natural_loops.: 0.00627s (num_starts 6; 0.0010s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.006489s (num_starts 1; 0.0065s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.006665s (num_starts 1; 0.0067s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007113s (num_starts 643; 0.0000s/start)
avail_exprs_create_submap.: 0.007491s (num_starts 195; 0.0000s/start)
compute_regions.: 0.009904s (num_starts 6; 0.0017s/start)
tfg_preprocess.dst.llvm.foo.: 0.010967s (num_starts 1; 0.0110s/start)
tfg::tfg_preprocess.: 0.010969s (num_starts 1; 0.0110s/start)
find_dominators.: 0.010988s (num_starts 10; 0.0011s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011815s (num_starts 65; 0.0002s/start)
populate_loc_liveness.: 0.012403s (num_starts 2; 0.0062s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013046s (num_starts 65; 0.0002s/start)
main.2.: 0.013521s (num_starts 1; 0.0135s/start)
get_tfg.: 0.01461s (num_starts 1; 0.0146s/start)
get_function_tfg_map.foo.: 0.014637s (num_starts 1; 0.0146s/start)
get_function_tfg_map.: 0.01464s (num_starts 1; 0.0146s/start)
populate_locs_potentially_modified_on_edge.: 0.016015s (num_starts 3; 0.0053s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.016386s (num_starts 77; 0.0002s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.016977s (num_starts 1; 0.0170s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.016979s (num_starts 1; 0.0170s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.016984s (num_starts 1; 0.0170s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.01699s (num_starts 1; 0.0170s/start)
tfg_constructor.src.spec.foo.: 0.016994s (num_starts 1; 0.0170s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.019777s (num_starts 643; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.020705s (num_starts 643; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.0217s (num_starts 3; 0.0072s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.02378s (num_starts 643; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.034469s (num_starts 1; 0.0345s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.041817s (num_starts 65; 0.0006s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.042865s (num_starts 1; 0.0429s/start)
ftmap_run_pointsto_analysis.: 0.095195s (num_starts 1; 0.0952s/start)
parse_consts_db.: 6.62937s (num_starts 1; 6.6294s/start)
main.: 6.81716s (num_starts 1; 6.8172s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file loop5.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 3 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A2: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A2: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%7%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L2%7%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%7%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L2%7%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L2%7%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3


<MSG>0:21 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%7%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L2%7%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%7%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L2%7%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L2%7%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3


<MSG>0:21 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%7%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%7%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:22 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%7%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%7%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A2: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 5 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2.B2: Propagated 3 out of 5 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2.B2: Added the 3 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 3)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 3)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce143
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%7%bbentry, 3)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%7%bbentry, 3)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce143
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 3)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 3)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce143
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:22 : Added correlation to the product-TFG foo.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 10 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 3)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 3)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce143
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%7%bbentry, 3)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%7%bbentry, 3)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce143
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 3)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 3)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce143
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:22 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 6 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 7 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 7 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 7 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27


<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 27 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Propagated 6 out of 27 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : foo.A2.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : Added correlation to the product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 27 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : foo.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce27      2.:z3.ce104      3.:z3.ce143
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    7 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce265      3.:z3.ce332      4.:z3v487.ce333      5.:z3.ce416      6.:z3.ce550
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce143      2.:z3.ce211      3.:z3.ce265      4.:z3.ce332      5.:z3.ce416      6.:z3.ce483      7.:z3.ce617
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 27 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 2.78s, query:smt.: 0.767961s (num_starts 29; 0.0265s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.65977s (num_starts 65; 0.0255s/start)ftmap_run_pointsto_analysis.: 0.127411s (num_starts 2; 0.0637s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 3e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 8e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 1e-05s (num_starts 9; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1.1e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.2e-05s (num_starts 19; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.2e-05s (num_starts 5; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.2e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.3e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.4e-05s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 1.4e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.5e-05s (num_starts 19; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 2.5e-05s (num_starts 22; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.8e-05s (num_starts 1; 0.0000s/start)
prove_trivial.: 3e-05s (num_starts 30; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 3e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.1e-05s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 3.3e-05s (num_starts 24; 0.0000s/start)
get_intersected_lr_status.: 3.3e-05s (num_starts 2; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.3e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.6e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.2e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 5.7e-05s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 7.3e-05s (num_starts 1; 0.0001s/start)
expr_is_hidden_reg.: 8.1e-05s (num_starts 95; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.0001s (num_starts 16; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000106s (num_starts 67; 0.0000s/start)
lr_status_meet.: 0.00011s (num_starts 164; 0.0000s/start)
expr_is_callee_save_const.: 0.000111s (num_starts 107; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000118s (num_starts 65; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000127s (num_starts 23; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000141s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000151s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000164s (num_starts 1; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000173s (num_starts 1; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000174s (num_starts 40; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000175s (num_starts 40; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00019s (num_starts 37; 0.0000s/start)
populate_locid2expr_map.: 0.000205s (num_starts 2; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.000206s (num_starts 35; 0.0000s/start)
proof_query_is_trivial_helper.: 0.00021s (num_starts 79; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.00022s (num_starts 22; 0.0000s/start)
compute_sprel_relations.: 0.000221s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000229s (num_starts 1; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000235s (num_starts 35; 0.0000s/start)
propagate_sprels.: 0.000238s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000239s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000265s (num_starts 9; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000274s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::meet.: 0.000282s (num_starts 528; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000283s (num_starts 1; 0.0003s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000284s (num_starts 18; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000287s (num_starts 22; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000288s (num_starts 31; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000309s (num_starts 2; 0.0002s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.00031s (num_starts 6; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000393s (num_starts 29; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000416s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000417s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000419s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00042s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000421s (num_starts 1; 0.0004s/start)
collect_assumes_around_edge.: 0.000422s (num_starts 3; 0.0001s/start)
identify_address_taken_local_variables.: 0.000422s (num_starts 1; 0.0004s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000423s (num_starts 94; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000424s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000439s (num_starts 1; 0.0004s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000452s (num_starts 45; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000463s (num_starts 94; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000484s (num_starts 2; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000496s (num_starts 2; 0.0002s/start)
set_result_and_counter_example.: 0.000541s (num_starts 29; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000569s (num_starts 1; 0.0006s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000611s (num_starts 40; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000612s (num_starts 50; 0.0000s/start)
construct_linear_combination_exprs.: 0.000625s (num_starts 28; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000636s (num_starts 8; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000641s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000671s (num_starts 1; 0.0007s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000673s (num_starts 3; 0.0002s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000691s (num_starts 5; 0.0001s/start)
expr_represents_llvm_undef.: 0.000695s (num_starts 111; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000703s (num_starts 65; 0.0000s/start)
proof_query_is_trivial.: 0.000703s (num_starts 67; 0.0000s/start)
parse_yices_model.: 0.000719s (num_starts 1; 0.0007s/start)
populate_simplified_to_state.: 0.000739s (num_starts 3; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.000798s (num_starts 1; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.0008s (num_starts 2; 0.0004s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000808s (num_starts 62; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000831s (num_starts 5; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000856s (num_starts 5; 0.0002s/start)
create_closure_matrix.: 0.000904s (num_starts 82; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000936s (num_starts 1; 0.0009s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000968s (num_starts 2; 0.0005s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001002s (num_starts 27; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001021s (num_starts 35; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001061s (num_starts 62; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.001126s (num_starts 65; 0.0000s/start)
parse_cvc4_model.: 0.001138s (num_starts 1; 0.0011s/start)
ldr_decomposition.: 0.001161s (num_starts 23; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001193s (num_starts 700; 0.0000s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001252s (num_starts 23; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.001269s (num_starts 65; 0.0000s/start)
removeMostPromising.: 0.001289s (num_starts 10; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.001341s (num_starts 5; 0.0003s/start)
bv_const_ref_map2expr_map.: 0.001368s (num_starts 28; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.001573s (num_starts 3; 0.0005s/start)
graph_locs_add_all_specvars.: 0.001738s (num_starts 2; 0.0009s/start)
populate_simplified_assets.: 0.001741s (num_starts 6; 0.0003s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001792s (num_starts 2; 0.0009s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001893s (num_starts 3; 0.0006s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001998s (num_starts 34; 0.0001s/start)
tfg::populate_loc_definedness.: 0.001998s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002035s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.002039s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned;-trivial.: 0.002043s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002048s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002058s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned.: 0.002066s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002083s (num_starts 2; 0.0010s/start)
generate_aliasing_constraints_from_expr.: 0.002126s (num_starts 803; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.002128s (num_starts 111; 0.0000s/start)
graph_visit_exprs.: 0.002259s (num_starts 3; 0.0008s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.002495s (num_starts 3; 0.0008s/start)
get_sprel_map_pair_at_pc.: 0.002756s (num_starts 37; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002827s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002831s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002833s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002837s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-trivial.: 0.00284s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-trivial.: 0.002843s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002848s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.00285s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002863s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.002872s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002882s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002892s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003002s (num_starts 3; 0.0010s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.003007s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.003009s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.003014s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003021s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003035s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.003045s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003066s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.003215s (num_starts 2; 0.0016s/start)
populate_locs_potentially_modified_on_edge.: 0.00339s (num_starts 3; 0.0011s/start)
graph_visit_exprs_and_keys.: 0.003465s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003913s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003915s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00392s (num_starts 1; 0.0039s/start)
compute_ssa_vars_renaming_map.: 0.003922s (num_starts 2; 0.0020s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003947s (num_starts 235; 0.0000s/start)
graph_identify_back_edges.: 0.004132s (num_starts 21; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.004153s (num_starts 82; 0.0001s/start)
populate_branch_affecting_locs.: 0.0042s (num_starts 3; 0.0014s/start)
graph_identify_natural_loops.: 0.004414s (num_starts 21; 0.0002s/start)
find_dominators.: 0.00442s (num_starts 25; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004671s (num_starts 65; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004681s (num_starts 65; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004942s (num_starts 29; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.005143s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.005152s (num_starts 4; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.005162s (num_starts 4; 0.0013s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005277s (num_starts 130; 0.0000s/start)
compute_expr_eqclasses_at_pc.: 0.005321s (num_starts 1; 0.0053s/start)
expr_substitute_using_available_exprs_submap.: 0.005353s (num_starts 169; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.005382s (num_starts 20; 0.0003s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.005385s (num_starts 66; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005467s (num_starts 35; 0.0002s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.005599s (num_starts 34; 0.0002s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005747s (num_starts 230; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.005767s (num_starts 3; 0.0019s/start)
predicate_canonicalized.: 0.005826s (num_starts 28; 0.0002s/start)
cg_add_node.: 0.006004s (num_starts 3; 0.0020s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006033s (num_starts 35; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.006724s (num_starts 20; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.006787s (num_starts 20; 0.0003s/start)
ldr_decompose_and_linear_solve.: 0.007018s (num_starts 23; 0.0003s/start)
collect_assumes_around_path_helper.: 0.00719s (num_starts 94; 0.0001s/start)
populate_transitive_closure.: 0.007257s (num_starts 27; 0.0003s/start)
compute_lr_status_for_expr.: 0.007351s (num_starts 182; 0.0000s/start)
compute_vars_reaching_definitions.: 0.007416s (num_starts 2; 0.0037s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.007485s (num_starts 2; 0.0037s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007488s (num_starts 2; 0.0037s/start)
bv_linear_solve.: 0.007489s (num_starts 23; 0.0003s/start)
graph_with_paths::collect_assumes_around_path.: 0.007491s (num_starts 94; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.007492s (num_starts 2; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.007495s (num_starts 2; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007497s (num_starts 2; 0.0037s/start)
query:bv_solve.: 0.007635s (num_starts 23; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007684s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007686s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.0077s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.007713s (num_starts 3; 0.0026s/start)
create_new_corr_graph_edge.new_node.: 0.007769s (num_starts 2; 0.0039s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007863s (num_starts 164; 0.0000s/start)
create_new_corr_graph_edge.: 0.007938s (num_starts 3; 0.0026s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.008138s (num_starts 164; 0.0000s/start)
collect_aliasing_constraints_around_path_helper.: 0.008172s (num_starts 106; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.008329s (num_starts 6; 0.0014s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.008349s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008351s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.008353s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.008355s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008358s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.008501s (num_starts 18; 0.0005s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.008525s (num_starts 3; 0.0028s/start)
collect_aliasing_constraints_around_path.: 0.008677s (num_starts 66; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.008817s (num_starts 45; 0.0002s/start)
lhs_set_sort.: 0.009116s (num_starts 37; 0.0002s/start)
bv_solve_returning_intermediate_structures.: 0.009309s (num_starts 23; 0.0004s/start)
gen_pred_from_coeff_row.simplify.: 0.009548s (num_starts 28; 0.0003s/start)
compute_regions.: 0.010421s (num_starts 21; 0.0005s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.010456s (num_starts 62; 0.0002s/start)
bvsolve_cache_query.miss1.: 0.010703s (num_starts 23; 0.0005s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.010773s (num_starts 161; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.010872s (num_starts 62; 0.0002s/start)
populate_loc_liveness.: 0.010879s (num_starts 3; 0.0036s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.010903s (num_starts 62; 0.0002s/start)
get_next_potential_correlations.: 0.010931s (num_starts 3; 0.0036s/start)
bvsolve_cache_query.: 0.011012s (num_starts 23; 0.0005s/start)
collect_inductive_preds_around_path.: 0.011068s (num_starts 65; 0.0002s/start)
counter_example_falsifies_preds.: 0.011442s (num_starts 94; 0.0001s/start)
query:convert_from_z3.: 0.011458s (num_starts 207; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011575s (num_starts 4; 0.0029s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011585s (num_starts 4; 0.0029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.01168s (num_starts 4; 0.0029s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.012548s (num_starts 4; 0.0031s/start)
query:convert_to_z3.: 0.012866s (num_starts 207; 0.0001s/start)
solve_for_bv_points.: 0.013529s (num_starts 23; 0.0006s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.014333s (num_starts 1; 0.0143s/start)
avail_exprs_create_submap.: 0.014722s (num_starts 186; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.016107s (num_starts 6; 0.0027s/start)
compute_new_lr_status_on_locs.: 0.016384s (num_starts 62; 0.0003s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.016693s (num_starts 23; 0.0007s/start)
counter_example_satisfies_preds.: 0.016865s (num_starts 534; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.017181s (num_starts 947; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01815s (num_starts 1; 0.0181s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018152s (num_starts 1; 0.0182s/start)
gen_pred_from_coeff_row.: 0.018436s (num_starts 28; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.018588s (num_starts 4; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.018598s (num_starts 4; 0.0046s/start)
compute_preds_for_bv_points.: 0.018686s (num_starts 5; 0.0037s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.018726s (num_starts 9; 0.0021s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.018985s (num_starts 17; 0.0011s/start)
graph_to_stream.: 0.019021s (num_starts 4; 0.0048s/start)
do_ssa_transformation.: 0.019601s (num_starts 2; 0.0098s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.019886s (num_starts 84; 0.0002s/start)
tfg_relax_pointsto_vals_on_edge.: 0.020586s (num_starts 17; 0.0012s/start)
get_unrolled_paths_from.: 0.021744s (num_starts 15; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.021796s (num_starts 6; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.022907s (num_starts 8; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.02292s (num_starts 8; 0.0029s/start)
tfg_postprocess_after_pointsto_analysis.: 0.024161s (num_starts 2; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.025656s (num_starts 3; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.025666s (num_starts 3; 0.0086s/start)
put_smtlib_string_in_file.: 0.025727s (num_starts 58; 0.0004s/start)
counter_example_evaluate_preds.: 0.026795s (num_starts 628; 0.0000s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.028443s (num_starts 184; 0.0002s/start)
compute_z3_expr.: 0.030412s (num_starts 236; 0.0001s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030764s (num_starts 1; 0.0308s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030768s (num_starts 1; 0.0308s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030773s (num_starts 1; 0.0308s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030779s (num_starts 1; 0.0308s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030782s (num_starts 1; 0.0308s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.031049s (num_starts 62; 0.0005s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.031828s (num_starts 24; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032603s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03261s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032617s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032621s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.032626s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.032635s (num_starts 1; 0.0326s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.033059s (num_starts 2; 0.0165s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.033068s (num_starts 2; 0.0165s/start)
apply_mask_and_overlay_array_constant.: 0.033587s (num_starts 24; 0.0014s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.033973s (num_starts 82; 0.0004s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.035273s (num_starts 92; 0.0004s/start)
guarded_predicate_set_and.: 0.035749s (num_starts 35; 0.0010s/start)
query:simplify-z3.: 0.036574s (num_starts 422; 0.0001s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.038538s (num_starts 987; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.039146s (num_starts 2; 0.0196s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.039153s (num_starts 2; 0.0196s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.03916s (num_starts 2; 0.0196s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.039167s (num_starts 2; 0.0196s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.039167s (num_starts 37; 0.0011s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.039173s (num_starts 2; 0.0196s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.04s (num_starts 947; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.041456s (num_starts 12; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.041794s (num_starts 1; 0.0418s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0418s (num_starts 1; 0.0418s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.041811s (num_starts 1; 0.0418s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.043802s (num_starts 37; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044704s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04471s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.044719s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.044722s (num_starts 1; 0.0447s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.044966s (num_starts 1; 0.0450s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.045748s (num_starts 2; 0.0229s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.048893s (num_starts 947; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.049366s (num_starts 438; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.049817s (num_starts 18; 0.0028s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.050776s (num_starts 45; 0.0011s/start)
graph_ec_apply_trans_funs_helper.0.: 0.051004s (num_starts 166; 0.0003s/start)
graph_ec_apply_trans_funs_helper.: 0.052307s (num_starts 171; 0.0003s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.052755s (num_starts 171; 0.0003s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.052994s (num_starts 16; 0.0033s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.053344s (num_starts 171; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053817s (num_starts 2; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053824s (num_starts 2; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.053839s (num_starts 2; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.053847s (num_starts 2; 0.0269s/start)
computeWP_for_pred_across_ec.: 0.053913s (num_starts 171; 0.0003s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.060593s (num_starts 3; 0.0202s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.064671s (num_starts 2; 0.0323s/start)
edge_composition_apply_trans_funs_on_pred.: 0.064675s (num_starts 65; 0.0010s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.065346s (num_starts 82; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071946s (num_starts 3; 0.0240s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071956s (num_starts 3; 0.0240s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073063s (num_starts 1; 0.0731s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073066s (num_starts 1; 0.0731s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.073074s (num_starts 1; 0.0731s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.073078s (num_starts 1; 0.0731s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.079529s (num_starts 5; 0.0159s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.079544s (num_starts 5; 0.0159s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080193s (num_starts 1; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080201s (num_starts 1; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080204s (num_starts 1; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082781s (num_starts 2; 0.0414s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082796s (num_starts 2; 0.0414s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.083075s (num_starts 4; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed.: 0.083092s (num_starts 4; 0.0208s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.083119s (num_starts 4; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085781s (num_starts 1; 0.0858s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085785s (num_starts 1; 0.0858s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.085799s (num_starts 1; 0.0858s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.085802s (num_starts 1; 0.0858s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.086047s (num_starts 4; 0.0215s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086472s (num_starts 2; 0.0432s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086484s (num_starts 2; 0.0432s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.086559s (num_starts 2; 0.0433s/start)
decide_hoare_triple_helper;-trivial.: 0.089933s (num_starts 37; 0.0024s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.090786s (num_starts 45; 0.0020s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.096764s (num_starts 3; 0.0323s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.098216s (num_starts 6; 0.0164s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100145s (num_starts 1; 0.1001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100146s (num_starts 1; 0.1001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100146s (num_starts 1; 0.1001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100147s (num_starts 1; 0.1001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.100153s (num_starts 1; 0.1002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.100158s (num_starts 1; 0.1002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.100165s (num_starts 1; 0.1002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.100615s (num_starts 2; 0.0503s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.104685s (num_starts 8; 0.0131s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.114425s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.114433s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.114442s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.114449s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.114466s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned.: 0.114476s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.114493s (num_starts 2; 0.0572s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.116561s (num_starts 4; 0.0291s/start)
check_wfconds_on_edge.: 0.125502s (num_starts 7; 0.0179s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.127142s (num_starts 4; 0.0318s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.127167s (num_starts 4; 0.0318s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.12718s (num_starts 4; 0.0318s/start)
ftmap_run_pointsto_analysis.: 0.127411s (num_starts 2; 0.0637s/start)
tfg_run_pointsto_analysis.: 0.127769s (num_starts 2; 0.0639s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.141568s (num_starts 3; 0.0472s/start)
tfg_populate_structs_after_ssa_construction.: 0.142898s (num_starts 2; 0.0714s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.144067s (num_starts 326; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149879s (num_starts 3; 0.0500s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149891s (num_starts 3; 0.0500s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.150143s (num_starts 12; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.150178s (num_starts 12; 0.0125s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.151581s (num_starts 3; 0.0505s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.155103s (num_starts 7; 0.0222s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.155129s (num_starts 7; 0.0222s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158833s (num_starts 2; 0.0794s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.158893s (num_starts 2; 0.0794s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.166217s (num_starts 2; 0.0831s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.166649s (num_starts 1; 0.1666s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.168865s (num_starts 16; 0.0106s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.172704s (num_starts 2; 0.0864s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.17271s (num_starts 2; 0.0864s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.172713s (num_starts 2; 0.0864s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.172734s (num_starts 2; 0.0864s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed.: 0.172744s (num_starts 2; 0.0864s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.17276s (num_starts 2; 0.0864s/start)
parse_z3_model.: 0.177194s (num_starts 25; 0.0071s/start)
read_counter_examples_from_channel.: 0.181479s (num_starts 13; 0.0140s/start)
ce_reconcile_sorts_and_values.: 0.195902s (num_starts 27; 0.0073s/start)
propagate_nodece_across_edge.: 0.208572s (num_starts 13; 0.0160s/start)
check_equivalence_proof.: 0.212269s (num_starts 1; 0.2123s/start)
corr_graph::add_edge().: 0.223398s (num_starts 3; 0.0745s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.232303s (num_starts 3; 0.0774s/start)
corr_graph_add_correlation.: 0.232409s (num_starts 3; 0.0775s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.232608s (num_starts 5; 0.0465s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.234931s (num_starts 3; 0.0783s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.241286s (num_starts 11; 0.0219s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.252902s (num_starts 3; 0.0843s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.255858s (num_starts 6; 0.0426s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.258982s (num_starts 3; 0.0863s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.259048s (num_starts 3; 0.0863s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.263358s (num_starts 6; 0.0439s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.271104s (num_starts 8; 0.0339s/start)
dst_edge_composition_proves_false.: 0.271175s (num_starts 3; 0.0904s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.271558s (num_starts 17; 0.0160s/start)
get_next_dst_edge_composition_to_correlate.: 0.280953s (num_starts 4; 0.0702s/start)
check_preds_on_edge_compositions.: 0.281663s (num_starts 10; 0.0282s/start)
decide_hoare_triple.: 0.296368s (num_starts 5; 0.0593s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.358322s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.358332s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.358343s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.358371s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.35842s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned.: 0.358432s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.358456s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.35978s (num_starts 9; 0.0400s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.361502s (num_starts 7; 0.0516s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.399232s (num_starts 8; 0.0499s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.410072s (num_starts 27; 0.0152s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.419111s (num_starts 25; 0.0168s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.474341s (num_starts 18; 0.0264s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.490632s (num_starts 24; 0.0204s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.491052s (num_starts 46; 0.0107s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.523254s (num_starts 45; 0.0116s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.523572s (num_starts 45; 0.0116s/start)
counter_example_translate_on_edge_composition_helper.: 0.565321s (num_starts 458; 0.0012s/start)
query:smt.: 0.767961s (num_starts 29; 0.0265s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.772564s (num_starts 12; 0.0644s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.826356s (num_starts 28; 0.0295s/start)
spawn_smt_query.: 0.949819s (num_starts 29; 0.0328s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.978752s (num_starts 9; 0.1088s/start)
solver_provable.: 1.29954s (num_starts 35; 0.0371s/start)
expr_is_provable.: 1.31181s (num_starts 35; 0.0375s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.31253s (num_starts 35; 0.0375s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.31463s (num_starts 35; 0.0376s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.31569s (num_starts 35; 0.0376s/start)
solver_satisfiable-cache-miss.: 1.33033s (num_starts 29; 0.0459s/start)
solver_satisfiable.: 1.33059s (num_starts 36; 0.0370s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.35894s (num_starts 35; 0.0388s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.37042s (num_starts 37; 0.0370s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.37121s (num_starts 37; 0.0371s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.4743s (num_starts 37; 0.0398s/start)
prove.: 1.47463s (num_starts 37; 0.0399s/start)
prove_spawn_and_join_helper.: 1.47484s (num_starts 37; 0.0399s/start)
prove_spawn_and_join.: 1.53572s (num_starts 37; 0.0415s/start)
prove_wrapper.proof_query_not_trivial.: 1.5411s (num_starts 37; 0.0417s/start)
prove_wrapper.: 1.56178s (num_starts 67; 0.0233s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.5673s (num_starts 28; 0.0560s/start)
decide_hoare_triple_check_ub.: 1.63156s (num_starts 65; 0.0251s/start)
decide_hoare_triple_helper.: 1.65977s (num_starts 65; 0.0255s/start)
update_invariant_state_for_edges.: 1.7197s (num_starts 3; 0.5732s/start)
cg_check_new_cg_ec.: 1.72198s (num_starts 3; 0.5740s/start)
correl_entry_apply.: 1.72209s (num_starts 3; 0.5740s/start)
expandProductCFG.: 2.01463s (num_starts 4; 0.5037s/start)
decide_hoare_triple_with_alias_cons.: 2.15142s (num_starts 65; 0.0331s/start)
bestFirstSearch.: 2.2905s (num_starts 1; 2.2905s/start)
Time taken for equivalence check.: 2.50417s (num_starts 1; 2.5042s/start)

counters:
# of paths enumerated.: 12
# of paths expanded.: 3
# of queries to linear solver.: 23
# of smt-solver-queries.: 29
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 3
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 7
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 25
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 17
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 27
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 16
src-nodes.: 14
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.95
final-CG-time-to-total-time-ratio.: 0.85
query-time-to-total-time-ratio.: 0.29

Context stats:
exprs: count: 145502
sorts: count: 148
num_proof_queries: 37
num_proof_queries_answered_by_syntactic_check: 2
cache_stats:
m_simplify:
	----------- total:	5127
	        hit ratio:	0.950848
m_simplify_solver:
	----------- total:	821
	        hit ratio:	0.73447
m_z3_solver_substitution:
	----------- total:	215
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	218
	        hit ratio:	0
m_expr_size:
	----------- total:	5460
	        hit ratio:	0.943223
m_expr_evaluates_to_constant_visitor:
	----------- total:	12707
	        hit ratio:	0.458566

z3_solver expr_query_cache entry size: 29
	----------- total:	36
	             hits:	7
	        hit ratio:	0.194444
histogram (time taken by solver in ms):
[ 9.5840, 11.2153) (avg. 10.0757)        : 3
[11.2153, 13.1242) (avg. 12.0555)        : 2
[13.1242, 15.3580) (avg. 13.9703)        : 3
[15.3580, 17.9720) (avg.  0.0000)        : 0
[17.9720, 21.0310) (avg.  0.0000)        : 0
[21.0310, 24.6106) (avg. 22.6245)        : 2
[24.6106, 28.7995) (avg. 26.5882)        : 6
[28.7995, 33.7013) (avg. 31.5562)        : 4
[33.7013, 39.4375) (avg. 35.9624)        : 7
[39.4375, 46.1500) (avg. 44.3100)        : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 0)                          : 0
[3, 5) (avg. 4)                          : 28
[5, 6) (avg. 0)                          : 0
[6, 7) (avg. 0)                          : 0
[7, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 12) (avg. 0)                        : 0
[12, 13) (avg. 0)                        : 0
[13, 14) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 40,  56) (avg.  40)                    : 1
[ 56,  71) (avg.   0)                    : 0
[ 71,  86) (avg.   0)                    : 0
[ 86, 101) (avg.   0)                    : 0
[101, 116) (avg. 115)                    : 3
[116, 131) (avg. 122)                    : 11
[131, 146) (avg. 138)                    : 3
[146, 161) (avg. 153)                    : 3
[161, 176) (avg. 169)                    : 2
[176, 191) (avg. 180)                    : 6
Top 10 highest time taking queries:
1. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.043s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
3. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.2
4. [0.037s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
5. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
6. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
7. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%7%bbentry_Lfor.cond%.0
8. [0.035s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.3
9. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
10. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_.0

<MSG>0:24 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 130 time spent: 0:0:0 [0.003662s total; 0.000028 per start]
tfg_computeWP: num_starts 375 time spent: 0:0:0 [0.045274s total; 0.000121 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1453 time spent: 0:0:0 [0.002821s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1599 time spent: 0:0:0 [0.002934s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 588 time spent: 0:0:0 [0.001139s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 27 time spent: 0:0:0 [0.298365s total; 0.011051 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.195590s total; 0.032598 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 460 time spent: 0:0:0 [0.544079s total; 0.001183 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 94 time spent: 0:0:0 [0.032701s total; 0.000348 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 413 time spent: 0:0:0 [0.503225s total; 0.001218 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1704 time spent: 0:0:0 [0.512430s total; 0.000301 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 413 time spent: 0:0:0 [0.014144s total; 0.000034 per start]
tfg_graph_get_vars_written_on_edge: num_starts 413 time spent: 0:0:0 [0.011014s total; 0.000027 per start]
cg_with_rank_add_CE_at_pc: num_starts 45 time spent: 0:0:0 [0.089350s total; 0.001986 per start]
graph_with_ce_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.001023s total; 0.000032 per start]
graph_with_guessing_add_CE_at_pc: num_starts 45 time spent: 0:0:0 [0.088227s total; 0.001961 per start]
point_set_add_point_using_CE: num_starts 184 time spent: 0:0:0 [0.025040s total; 0.000136 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 184 time spent: 0:0:0 [0.025556s total; 0.000139 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.078046s total; 0.003002 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.051721s total; 0.001989 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2376 time spent: 0:0:0 [0.022481s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 368 time spent: 0:0:0 [0.011280s total; 0.000031 per start]
expr_simplify_solver: num_starts 864 time spent: 0:0:0 [0.060417s total; 0.000070 per start]
expr_simplify_syntactic: num_starts 864 time spent: 0:0:0 [0.023620s total; 0.000027 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010822s total; 0.002706 per start]
expr_simplify_using_lhs_set_helper: num_starts 392 time spent: 0:0:0 [0.165046s total; 0.000421 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1831 time spent: 0:0:0 [0.162842s total; 0.000089 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 742 time spent: 0:0:0 [0.003323s total; 0.000004 per start]
expr_simplify_eq: num_starts 153 time spent: 0:0:0 [0.001608s total; 0.000011 per start]
expr_simplify_or: num_starts 17 time spent: 0:0:0 [0.000026s total; 0.000002 per start]
expr_simplify_and: num_starts 46 time spent: 0:0:0 [0.000308s total; 0.000007 per start]
expr_simplify_andnot1: num_starts 8 time spent: 0:0:0 [0.000105s total; 0.000013 per start]
expr_simplify_not: num_starts 20 time spent: 0:0:0 [0.000077s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 250 time spent: 0:0:0 [0.005598s total; 0.000022 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010730s total; 0.002682 per start]
get_arithmetic_addsub_atoms: num_starts 1098 time spent: 0:0:0 [0.000874s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 302 time spent: 0:0:0 [0.002941s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 1192 time spent: 0:0:0 [0.000765s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 5480 time spent: 0:0:0 [0.166426s total; 0.000030 per start]
expr_do_simplify_helper_cache: num_starts 5480 time spent: 0:0:0 [0.005262s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 1375 time spent: 0:0:0 [0.523394s total; 0.000381 per start]
array_constant_equals: num_starts 486 time spent: 0:0:0 [0.000801s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 45 time spent: 0:0:0 [0.090714s total; 0.002016 per start]
alias_val_xfer_and_meet: num_starts 45 time spent: 0:0:0 [0.050669s total; 0.001126 per start]
get_sprel_map_from_avail_exprs: num_starts 67 time spent: 0:0:0 [0.006192s total; 0.000092 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000093s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 124 time spent: 0:0:0 [0.016220s total; 0.000131 per start]
compute_simplified_loc_exprs_for_edge: num_starts 330 time spent: 0:0:0 [0.054595s total; 0.000165 per start]
compute_locs_definitely_written_on_edge: num_starts 124 time spent: 0:0:0 [0.000203s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 35 time spent: 0:0:0 [0.005865s total; 0.000168 per start]
edge_update_memlabel_map_for_mlvars: num_starts 62 time spent: 0:0:0 [0.001155s total; 0.000019 per start]
add_new_locs_based_on_edge: num_starts 45 time spent: 0:0:0 [0.038106s total; 0.000847 per start]
expand_locset_to_include_slots_for_memmask: num_starts 77 time spent: 0:0:0 [0.000161s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:30 [30.033293s total; 30.033293 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.78s.
ftmap_run_pointsto_analysis.: 0.127411s (num_starts 2; 0.0637s/start)s.
EQ Time after pointsto analysis: 2.65706s.
EQ Time after pointsto analysis and smt_query: 1.09529s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.08427s.
Equivalence proof found. The programs are equivalent.
