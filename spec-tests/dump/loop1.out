argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop1.proof
argv[5] = --spec-iospecs=loop1.iospecs
argv[6] = loop1.spec
argv[7] = loop1.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2888383
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop1.c
argv[10] = -o
argv[11] = par_tmpdir/loop1.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop1.spec.etfg
argv[10] = par_tmpdir/loop1.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop1.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000113s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 89 time spent: 0:0:0 [0.000146s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 591 time spent: 0:0:0 [0.002115s total; 0.000004 per start]
expr_simplify_solver: num_starts 38 time spent: 0:0:0 [0.005235s total; 0.000138 per start]
expr_simplify_syntactic: num_starts 38 time spent: 0:0:0 [0.001979s total; 0.000052 per start]
expr_simplify_using_lhs_set_helper: num_starts 50 time spent: 0:0:0 [0.008229s total; 0.000165 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 108 time spent: 0:0:0 [0.008126s total; 0.000075 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000212s total; 0.000004 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000007s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 22 time spent: 0:0:0 [0.000345s total; 0.000016 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000044s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000665s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000115s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1355 time spent: 0:0:0 [0.009426s total; 0.000007 per start]
expr_do_simplify_helper_cache: num_starts 1355 time spent: 0:0:0 [0.000845s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000012s total; 0.000004 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.041261s total; 0.000635 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.013291s total; 0.000204 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005292s total; 0.000062 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000078s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.003905s total; 0.000030 per start]
compute_simplified_loc_exprs_for_edge: num_starts 352 time spent: 0:0:0 [0.011678s total; 0.000033 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000051s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005151s total; 0.000184 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000364s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.008882s total; 0.000137 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000089s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 6e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.8e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 1.9e-05s (num_starts 31; 0.0000s/start)
add_assumes_to_start_edge.: 2.1e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.9e-05s (num_starts 26; 0.0000s/start)
add_extra_node_at_start_pc.: 3.2e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.6e-05s (num_starts 2; 0.0000s/start)
compute_sprel_relations.: 7.9e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 8.1e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.2e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.4e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.2e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 9.5e-05s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000102s (num_starts 5; 0.0000s/start)
determinize_value_expr_map.: 0.000105s (num_starts 139; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000122s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000141s (num_starts 33; 0.0000s/start)
populate_locid2expr_map.: 0.000163s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000168s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000171s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000173s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000257s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00029s (num_starts 65; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000297s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000338s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000358s (num_starts 1; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.00038s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000405s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00042s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000433s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000434s (num_starts 45; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000517s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000595s (num_starts 65; 0.0000s/start)
populate_simplified_to_state.: 0.000622s (num_starts 3; 0.0002s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.00066s (num_starts 1; 0.0007s/start)
populate_exit_return_values_for_llvm_method.: 0.000866s (num_starts 1; 0.0009s/start)
populate_transitive_closure.: 0.000973s (num_starts 1; 0.0010s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001037s (num_starts 552; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001094s (num_starts 1; 0.0011s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001131s (num_starts 1; 0.0011s/start)
compute_z3_expr.: 0.00117s (num_starts 22; 0.0001s/start)
query:convert_from_z3.: 0.001197s (num_starts 22; 0.0001s/start)
tfg::collect_assumes_around_edge.: 0.001212s (num_starts 89; 0.0000s/start)
create_closure_matrix.: 0.001252s (num_starts 85; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001263s (num_starts 51; 0.0000s/start)
compute_lr_status_for_expr.: 0.001332s (num_starts 36; 0.0000s/start)
graph_visit_exprs.: 0.001346s (num_starts 4; 0.0003s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001391s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001444s (num_starts 31; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001889s (num_starts 1; 0.0019s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002083s (num_starts 1; 0.0021s/start)
query:convert_to_z3.: 0.002117s (num_starts 22; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.00252s (num_starts 2; 0.0013s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.002776s (num_starts 1; 0.0028s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003107s (num_starts 65; 0.0000s/start)
populate_simplified_assets.: 0.003267s (num_starts 6; 0.0005s/start)
compute_new_lr_status_on_locs.: 0.003492s (num_starts 65; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003547s (num_starts 591; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003577s (num_starts 68; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.003754s (num_starts 1; 0.0038s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.003757s (num_starts 1; 0.0038s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.003762s (num_starts 1; 0.0038s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.003766s (num_starts 1; 0.0038s/start)
tfg_constructor.src.spec.foo.: 0.00377s (num_starts 1; 0.0038s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003864s (num_starts 65; 0.0001s/start)
graph_identify_back_edges.: 0.003949s (num_starts 5; 0.0008s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.003968s (num_starts 1; 0.0040s/start)
tfg::populate_loc_definedness.before_solve.: 0.004001s (num_starts 2; 0.0020s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00411s (num_starts 1; 0.0041s/start)
graph_identify_natural_loops.: 0.004144s (num_starts 5; 0.0008s/start)
query:simplify-z3.: 0.004181s (num_starts 44; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004254s (num_starts 1; 0.0043s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004309s (num_starts 2; 0.0022s/start)
graph_to_stream.: 0.004486s (num_starts 1; 0.0045s/start)
tfg::populate_loc_definedness.: 0.004518s (num_starts 2; 0.0023s/start)
populate_locs_potentially_modified_on_edge.: 0.004987s (num_starts 3; 0.0017s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005387s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.005698s (num_starts 2; 0.0028s/start)
find_dominators.: 0.005981s (num_starts 9; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.006229s (num_starts 85; 0.0001s/start)
compute_regions.: 0.006841s (num_starts 5; 0.0014s/start)
avail_exprs_create_submap.: 0.007319s (num_starts 195; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.008271s (num_starts 3; 0.0028s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.008297s (num_starts 50; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.010335s (num_starts 1; 0.0103s/start)
tfg::tfg_preprocess.: 0.010338s (num_starts 1; 0.0103s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.010747s (num_starts 591; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011122s (num_starts 65; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.011496s (num_starts 591; 0.0000s/start)
populate_loc_liveness.: 0.012366s (num_starts 2; 0.0062s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013401s (num_starts 65; 0.0002s/start)
main.2.: 0.013819s (num_starts 1; 0.0138s/start)
get_tfg.: 0.014158s (num_starts 1; 0.0142s/start)
get_function_tfg_map.foo.: 0.014191s (num_starts 1; 0.0142s/start)
get_function_tfg_map.: 0.014193s (num_starts 1; 0.0142s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.014421s (num_starts 591; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.034586s (num_starts 1; 0.0346s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.041337s (num_starts 65; 0.0006s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.043101s (num_starts 1; 0.0431s/start)
ftmap_run_pointsto_analysis.: 0.095309s (num_starts 1; 0.0953s/start)
parse_consts_db.: 6.62909s (num_starts 1; 6.6291s/start)
main.: 6.77405s (num_starts 1; 6.7740s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file loop1.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: foo...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 3 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1.B2: Propagated 5 out of 7 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1.B2: Added the 5 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : foo.A1.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Propagated 6 out of 20 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : foo.A1.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : foo.A1.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3v487.ce226      3.:z3.ce302
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3v487.ce226      3.:z3.ce302
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40
    eqclass 7:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 1.19s, query:smt.: 0.30114s (num_starts 23; 0.0131s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.769974s (num_starts 56; 0.0137s/start)ftmap_run_pointsto_analysis.: 0.072956s (num_starts 2; 0.0365s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 4e-06s (num_starts 1; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 6e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 6e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.2e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 1.3e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.4e-05s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.4e-05s (num_starts 4; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.4e-05s (num_starts 13; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1.4e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.6e-05s (num_starts 19; 0.0000s/start)
remove_complex_bv_exprs.: 1.7e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.7e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.8e-05s (num_starts 19; 0.0000s/start)
ce_perform_memory_fuzzing.: 1.8e-05s (num_starts 18; 0.0000s/start)
prove_trivial.: 2.3e-05s (num_starts 27; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 2.8e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 2.9e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 3.1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.1e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.5e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.5e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 3.8e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.3e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 4.5e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 6e-05s (num_starts 18; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 8.3e-05s (num_starts 56; 0.0000s/start)
expr_is_hidden_reg.: 8.7e-05s (num_starts 81; 0.0000s/start)
lr_status_meet.: 9.1e-05s (num_starts 111; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 9.5e-05s (num_starts 1; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000101s (num_starts 16; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000102s (num_starts 56; 0.0000s/start)
expr_is_callee_save_const.: 0.000109s (num_starts 93; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000112s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000117s (num_starts 3; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.00012s (num_starts 16; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000133s (num_starts 29; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000144s (num_starts 12; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000144s (num_starts 208; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000148s (num_starts 29; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000159s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000161s (num_starts 68; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000174s (num_starts 5; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000183s (num_starts 29; 0.0000s/start)
populate_locid2expr_map.: 0.000188s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000188s (num_starts 8; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000194s (num_starts 40; 0.0000s/start)
compute_sprel_relations.: 0.000197s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000213s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000214s (num_starts 12; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000229s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000247s (num_starts 40; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000258s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000263s (num_starts 23; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000266s (num_starts 1; 0.0003s/start)
compute_bv_bool_eqclass.: 0.00027s (num_starts 1; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000278s (num_starts 18; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000315s (num_starts 24; 0.0000s/start)
set_result_and_counter_example.: 0.000325s (num_starts 23; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000375s (num_starts 9; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000399s (num_starts 85; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000402s (num_starts 2; 0.0002s/start)
collect_assumes_around_edge.: 0.000405s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000409s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000415s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000417s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000417s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000419s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00042s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000423s (num_starts 1; 0.0004s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000423s (num_starts 85; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000425s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00044s (num_starts 1; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.000486s (num_starts 30; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000496s (num_starts 8; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.00053s (num_starts 2; 0.0003s/start)
proof_query_is_trivial.: 0.000548s (num_starts 56; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000588s (num_starts 2; 0.0003s/start)
graph_with_guessing_sync_preds.: 0.00059s (num_starts 56; 0.0000s/start)
create_closure_matrix.: 0.000597s (num_starts 53; 0.0000s/start)
identify_address_taken_local_variables.: 0.000611s (num_starts 1; 0.0006s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000615s (num_starts 215; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000669s (num_starts 44; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000682s (num_starts 41; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000721s (num_starts 20; 0.0000s/start)
populate_simplified_to_state.: 0.000728s (num_starts 3; 0.0002s/start)
ldr_decomposition.: 0.000743s (num_starts 16; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000758s (num_starts 44; 0.0000s/start)
removeMostPromising.: 0.000765s (num_starts 10; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000778s (num_starts 40; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.00079s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000794s (num_starts 1; 0.0008s/start)
tfg_suffixpath_get_expr_helper.: 0.000807s (num_starts 12; 0.0001s/start)
expr_represents_llvm_undef.: 0.000818s (num_starts 97; 0.0000s/start)
construct_linear_combination_exprs.: 0.000876s (num_starts 28; 0.0000s/start)
graph_locs_add_all_specvars.: 0.00089s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000905s (num_starts 1; 0.0009s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000923s (num_starts 29; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000949s (num_starts 1; 0.0009s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000957s (num_starts 5; 0.0002s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000968s (num_starts 18; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001011s (num_starts 41; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001018s (num_starts 412; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.00106s (num_starts 1; 0.0011s/start)
tfg::populate_loc_definedness.before_solve.: 0.001101s (num_starts 3; 0.0004s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001151s (num_starts 5; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001184s (num_starts 5; 0.0002s/start)
corr_graph_enumerate_correlations.: 0.001247s (num_starts 4; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001289s (num_starts 1; 0.0013s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001369s (num_starts 2; 0.0007s/start)
graph_visit_exprs.: 0.001375s (num_starts 3; 0.0005s/start)
get_sprel_map_pair_at_pc.: 0.00144s (num_starts 29; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001453s (num_starts 3; 0.0005s/start)
populate_simplified_assets.: 0.001527s (num_starts 6; 0.0003s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001531s (num_starts 32; 0.0000s/start)
tfg::populate_loc_definedness.: 0.001551s (num_starts 3; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001636s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001637s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00164s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.001712s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.001717s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.001721s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.001723s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001728s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001729s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.001731s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.001731s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001732s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.001735s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned;-trivial.: 0.001736s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.001737s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001739s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001739s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.001744s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.001746s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001747s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.00175s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.001754s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned.: 0.001754s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.001766s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001767s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.001804s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.001808s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.00181s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.001814s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.001822s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.001829s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.001836s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.001842s (num_starts 2; 0.0009s/start)
compute_ssa_vars_renaming_map.: 0.001861s (num_starts 2; 0.0009s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.00191s (num_starts 18; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.001934s (num_starts 28; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.00202s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.002051s (num_starts 2; 0.0010s/start)
find_dominators.: 0.002097s (num_starts 25; 0.0001s/start)
graph_identify_back_edges.: 0.002126s (num_starts 21; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.002292s (num_starts 97; 0.0000s/start)
graph_identify_natural_loops.: 0.002339s (num_starts 21; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002405s (num_starts 3; 0.0008s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.00243s (num_starts 2; 0.0012s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.00248s (num_starts 156; 0.0000s/start)
populate_branch_affecting_locs.: 0.002543s (num_starts 3; 0.0008s/start)
expr_substitute_using_available_exprs_submap.: 0.00267s (num_starts 112; 0.0000s/start)
compute_vars_reaching_definitions.: 0.002739s (num_starts 2; 0.0014s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.00288s (num_starts 29; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.0029s (num_starts 29; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003066s (num_starts 44; 0.0001s/start)
populate_transitive_closure.: 0.00315s (num_starts 27; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.00315s (num_starts 56; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003182s (num_starts 120; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.00342s (num_starts 100; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.003429s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.003435s (num_starts 4; 0.0009s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003779s (num_starts 21; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.003879s (num_starts 20; 0.0002s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.003939s (num_starts 1; 0.0039s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.003949s (num_starts 3; 0.0013s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.003959s (num_starts 20; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.00412s (num_starts 53; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004207s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004212s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00422s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.004228s (num_starts 3; 0.0014s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.004299s (num_starts 2; 0.0021s/start)
compute_expr_eqclasses_at_pc.: 0.004325s (num_starts 1; 0.0043s/start)
get_next_potential_correlations.: 0.004713s (num_starts 3; 0.0016s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.004806s (num_starts 3; 0.0016s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.004823s (num_starts 3; 0.0016s/start)
cg_add_node.: 0.005055s (num_starts 3; 0.0017s/start)
collect_aliasing_constraints_around_path_helper.: 0.005077s (num_starts 106; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.00518s (num_starts 1; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005183s (num_starts 1; 0.0052s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.005186s (num_starts 1; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.005189s (num_starts 1; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005194s (num_starts 1; 0.0052s/start)
collect_assumes_around_path_helper.: 0.005298s (num_starts 85; 0.0001s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.00532s (num_starts 18; 0.0003s/start)
lhs_set_sort.: 0.00538s (num_starts 29; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.005457s (num_starts 6; 0.0009s/start)
collect_aliasing_constraints_around_path.: 0.005512s (num_starts 66; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.005572s (num_starts 85; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005826s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005836s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.0059s (num_starts 4; 0.0015s/start)
ldr_decompose_and_linear_solve.: 0.005957s (num_starts 16; 0.0004s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.006001s (num_starts 41; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.006018s (num_starts 37; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.006052s (num_starts 74; 0.0001s/start)
compute_regions.: 0.00616s (num_starts 21; 0.0003s/start)
bv_linear_solve.: 0.006315s (num_starts 16; 0.0004s/start)
compute_lr_status_for_expr.: 0.006322s (num_starts 119; 0.0001s/start)
query:bv_solve.: 0.006433s (num_starts 16; 0.0004s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.006798s (num_starts 640; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.006801s (num_starts 111; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006836s (num_starts 41; 0.0002s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007013s (num_starts 111; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007051s (num_starts 41; 0.0002s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.007192s (num_starts 112; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.007436s (num_starts 2; 0.0037s/start)
bv_solve_returning_intermediate_structures.: 0.007584s (num_starts 16; 0.0005s/start)
create_new_corr_graph_edge.: 0.007594s (num_starts 3; 0.0025s/start)
counter_example_falsifies_preds.: 0.007919s (num_starts 67; 0.0001s/start)
counter_example_satisfies_preds.: 0.007958s (num_starts 301; 0.0000s/start)
collect_inductive_preds_around_path.: 0.008127s (num_starts 56; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008676s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00868s (num_starts 1; 0.0087s/start)
predicate_canonicalized.: 0.008704s (num_starts 28; 0.0003s/start)
bvsolve_cache_query.miss1.: 0.008713s (num_starts 16; 0.0005s/start)
bvsolve_cache_query.: 0.00885s (num_starts 16; 0.0006s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.00894s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.008947s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.00895s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.008955s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.008961s (num_starts 2; 0.0045s/start)
do_ssa_transformation.: 0.009092s (num_starts 2; 0.0045s/start)
avail_exprs_create_submap.: 0.009157s (num_starts 123; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009338s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009342s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009347s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009348s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.009351s (num_starts 1; 0.0094s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.009363s (num_starts 1; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.009788s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.009796s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010459s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010463s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.010468s (num_starts 1; 0.0105s/start)
solve_for_bv_points.: 0.010708s (num_starts 16; 0.0007s/start)
populate_loc_liveness.: 0.011499s (num_starts 3; 0.0038s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.011783s (num_starts 4; 0.0029s/start)
propagate_nodece_across_edge.: 0.011877s (num_starts 9; 0.0013s/start)
compute_new_lr_status_on_locs.: 0.012119s (num_starts 41; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.01212s (num_starts 2; 0.0061s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.0124s (num_starts 14; 0.0009s/start)
query:convert_from_z3.: 0.01268s (num_starts 141; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.012945s (num_starts 16; 0.0008s/start)
put_smtlib_string_in_file.: 0.013265s (num_starts 46; 0.0003s/start)
graph_to_stream.: 0.013864s (num_starts 4; 0.0035s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.01392s (num_starts 73; 0.0002s/start)
gen_pred_from_coeff_row.simplify.: 0.013935s (num_starts 28; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.014129s (num_starts 4; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.014143s (num_starts 4; 0.0035s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.014285s (num_starts 73; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.014446s (num_starts 8; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.014465s (num_starts 8; 0.0018s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.014872s (num_starts 34; 0.0004s/start)
counter_example_evaluate_preds.: 0.014944s (num_starts 368; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.0151s (num_starts 34; 0.0004s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.015517s (num_starts 680; 0.0000s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.015544s (num_starts 336; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.016168s (num_starts 6; 0.0027s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.016243s (num_starts 6; 0.0027s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.016523s (num_starts 640; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016536s (num_starts 1; 0.0165s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016537s (num_starts 1; 0.0165s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016538s (num_starts 1; 0.0165s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016538s (num_starts 1; 0.0165s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016538s (num_starts 1; 0.0165s/start)
get_unrolled_paths_from.: 0.017427s (num_starts 15; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.017652s (num_starts 3; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.017665s (num_starts 3; 0.0059s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.018973s (num_starts 41; 0.0005s/start)
parse_z3_model.: 0.019357s (num_starts 7; 0.0028s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.019752s (num_starts 1; 0.0198s/start)
tfg_relax_pointsto_vals_on_edge.: 0.020012s (num_starts 17; 0.0012s/start)
query:convert_to_z3.: 0.020175s (num_starts 141; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020452s (num_starts 2; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020459s (num_starts 2; 0.0102s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.020732s (num_starts 128; 0.0002s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.021305s (num_starts 24; 0.0009s/start)
tfg_postprocess_after_pointsto_analysis.: 0.021596s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.02174s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.021753s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.021766s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.021778s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.021791s (num_starts 2; 0.0109s/start)
parse_cvc4_model.: 0.022489s (num_starts 7; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.02253s (num_starts 4; 0.0056s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.02264s (num_starts 640; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023534s (num_starts 2; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023538s (num_starts 2; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.023546s (num_starts 2; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.023555s (num_starts 2; 0.0118s/start)
parse_yices_model.: 0.023969s (num_starts 7; 0.0034s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.025255s (num_starts 68; 0.0004s/start)
graph_ec_apply_trans_funs_helper.0.: 0.025871s (num_starts 146; 0.0002s/start)
gen_pred_from_coeff_row.: 0.026873s (num_starts 28; 0.0010s/start)
compute_preds_for_bv_points.: 0.027205s (num_starts 5; 0.0054s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.02725s (num_starts 9; 0.0030s/start)
graph_ec_apply_trans_funs_helper.: 0.027363s (num_starts 151; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.027743s (num_starts 151; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027748s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027751s (num_starts 1; 0.0278s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.027757s (num_starts 1; 0.0278s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.027761s (num_starts 1; 0.0278s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.027998s (num_starts 1; 0.0280s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.028253s (num_starts 151; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.028511s (num_starts 12; 0.0024s/start)
computeWP_for_pred_across_ec.: 0.028746s (num_starts 151; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.029988s (num_starts 12; 0.0025s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.030993s (num_starts 20; 0.0015s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.031176s (num_starts 3; 0.0104s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.03165s (num_starts 29; 0.0011s/start)
apply_mask_and_overlay_array_constant.: 0.032146s (num_starts 20; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032199s (num_starts 3; 0.0107s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032204s (num_starts 3; 0.0107s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.033786s (num_starts 29; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.034005s (num_starts 18; 0.0019s/start)
compute_z3_expr.: 0.034277s (num_starts 164; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.034305s (num_starts 16; 0.0021s/start)
edge_composition_apply_trans_funs_on_pred.: 0.036328s (num_starts 56; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.036703s (num_starts 8; 0.0046s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.037267s (num_starts 73; 0.0005s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.037918s (num_starts 2; 0.0190s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038198s (num_starts 2; 0.0191s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038201s (num_starts 2; 0.0191s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.038252s (num_starts 2; 0.0191s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.041239s (num_starts 5; 0.0082s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.041258s (num_starts 5; 0.0083s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.042321s (num_starts 24; 0.0018s/start)
counter_example_translate_on_edge_composition_helper.: 0.043505s (num_starts 326; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.044133s (num_starts 6; 0.0074s/start)
guarded_predicate_set_and.: 0.044592s (num_starts 29; 0.0015s/start)
query:simplify-z3.: 0.044875s (num_starts 282; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.046357s (num_starts 18; 0.0026s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.046533s (num_starts 37; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057518s (num_starts 4; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057548s (num_starts 4; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057563s (num_starts 4; 0.0144s/start)
decide_hoare_triple_helper;-trivial.: 0.062692s (num_starts 34; 0.0018s/start)
read_counter_examples_from_channel.: 0.067182s (num_starts 7; 0.0096s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067344s (num_starts 1; 0.0673s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067347s (num_starts 1; 0.0673s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.067355s (num_starts 1; 0.0674s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.067359s (num_starts 1; 0.0674s/start)
check_wfconds_on_edge.: 0.069287s (num_starts 7; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.072066s (num_starts 12; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.072098s (num_starts 12; 0.0060s/start)
ftmap_run_pointsto_analysis.: 0.072956s (num_starts 2; 0.0365s/start)
tfg_run_pointsto_analysis.: 0.073217s (num_starts 2; 0.0366s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.073581s (num_starts 3; 0.0245s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075841s (num_starts 1; 0.0758s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075846s (num_starts 1; 0.0758s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07585s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075853s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.075863s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.075866s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.075872s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.07763s (num_starts 3; 0.0259s/start)
tfg_populate_structs_after_ssa_construction.: 0.080127s (num_starts 2; 0.0401s/start)
check_equivalence_proof.: 0.08312s (num_starts 1; 0.0831s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083783s (num_starts 1; 0.0838s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083785s (num_starts 1; 0.0838s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.0838s (num_starts 1; 0.0838s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.083805s (num_starts 1; 0.0838s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.086331s (num_starts 16; 0.0054s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.091291s (num_starts 2; 0.0456s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.093906s (num_starts 3; 0.0313s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094551s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094553s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094558s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094564s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.094575s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned.: 0.094585s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.094599s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.096352s (num_starts 4; 0.0241s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098412s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098415s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09842s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098421s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.098428s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.098432s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.098438s (num_starts 1; 0.0984s/start)
corr_graph::add_edge().: 0.098449s (num_starts 3; 0.0328s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.098479s (num_starts 189; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.09889s (num_starts 2; 0.0494s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.104508s (num_starts 6; 0.0174s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.106968s (num_starts 3; 0.0357s/start)
corr_graph_add_correlation.: 0.10709s (num_starts 3; 0.0357s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.107165s (num_starts 3; 0.0357s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.110281s (num_starts 3; 0.0368s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.11029s (num_starts 3; 0.0368s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.113762s (num_starts 7; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.113781s (num_starts 7; 0.0163s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.114031s (num_starts 17; 0.0067s/start)
check_preds_on_edge_compositions.: 0.121925s (num_starts 10; 0.0122s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.1307s (num_starts 5; 0.0261s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.132s (num_starts 1; 0.1320s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.136386s (num_starts 11; 0.0124s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.151116s (num_starts 2; 0.0756s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.151179s (num_starts 2; 0.0756s/start)
ce_reconcile_sorts.: 0.157595s (num_starts 21; 0.0075s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.168875s (num_starts 7; 0.0241s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.181831s (num_starts 21; 0.0087s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.188248s (num_starts 9; 0.0209s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192635s (num_starts 6; 0.0321s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.201834s (num_starts 8; 0.0252s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.222655s (num_starts 27; 0.0082s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.227884s (num_starts 7; 0.0326s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.249537s (num_starts 3; 0.0832s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.249607s (num_starts 3; 0.0832s/start)
dst_edge_composition_proves_false.: 0.262699s (num_starts 3; 0.0876s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.262776s (num_starts 23; 0.0114s/start)
decide_hoare_triple.: 0.264028s (num_starts 5; 0.0528s/start)
get_next_dst_edge_composition_to_correlate.: 0.273113s (num_starts 4; 0.0683s/start)
query:smt.: 0.30114s (num_starts 23; 0.0131s/start)
spawn_smt_query.: 0.3686s (num_starts 23; 0.0160s/start)
update_invariant_state_for_edges.: 0.514246s (num_starts 3; 0.1714s/start)
cg_check_new_cg_ec.: 0.514302s (num_starts 3; 0.1714s/start)
correl_entry_apply.: 0.514455s (num_starts 3; 0.1715s/start)
solver_provable.: 0.536917s (num_starts 29; 0.0185s/start)
expr_is_provable.: 0.543156s (num_starts 29; 0.0187s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.543621s (num_starts 29; 0.0187s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.545523s (num_starts 29; 0.0188s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.54644s (num_starts 29; 0.0188s/start)
solver_satisfiable-cache-miss.: 0.573083s (num_starts 23; 0.0249s/start)
solver_satisfiable.: 0.573262s (num_starts 30; 0.0191s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.593902s (num_starts 29; 0.0205s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.598174s (num_starts 29; 0.0206s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.598768s (num_starts 29; 0.0206s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.65619s (num_starts 29; 0.0226s/start)
prove.: 0.656403s (num_starts 29; 0.0226s/start)
prove_spawn_and_join_helper.: 0.65656s (num_starts 29; 0.0226s/start)
prove_spawn_and_join.: 0.700155s (num_starts 29; 0.0241s/start)
prove_wrapper.proof_query_not_trivial.: 0.703202s (num_starts 29; 0.0242s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.705396s (num_starts 22; 0.0321s/start)
prove_wrapper.: 0.709027s (num_starts 56; 0.0127s/start)
decide_hoare_triple_check_ub.: 0.74894s (num_starts 56; 0.0134s/start)
decide_hoare_triple_helper.: 0.769974s (num_starts 56; 0.0137s/start)
expandProductCFG.: 0.792787s (num_starts 4; 0.1982s/start)
decide_hoare_triple_with_alias_cons.: 0.816885s (num_starts 56; 0.0146s/start)
bestFirstSearch.: 0.945372s (num_starts 1; 0.9454s/start)
Time taken for equivalence check.: 1.03012s (num_starts 1; 1.0301s/start)

counters:
# of paths enumerated.: 11
# of paths expanded.: 3
# of queries to linear solver.: 16
# of smt-solver-queries.: 23
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 2
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 7
smt-queries-yices-sat.: 7
smt-queries-z3-sat.: 7
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 7
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 20
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.62
final-CG-time-to-total-time-ratio.: 0.66
query-time-to-total-time-ratio.: 0.30

Context stats:
exprs: count: 141114
sorts: count: 145
num_proof_queries: 29
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3218
	        hit ratio:	0.959291
m_simplify_solver:
	----------- total:	449
	        hit ratio:	0.685969
m_z3_solver_substitution:
	----------- total:	141
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	141
	        hit ratio:	0
m_expr_size:
	----------- total:	1890
	        hit ratio:	0.895238
m_expr_evaluates_to_constant_visitor:
	----------- total:	1702
	        hit ratio:	0.641011

z3_solver expr_query_cache entry size: 23
	----------- total:	30
	             hits:	7
	        hit ratio:	0.233333
histogram (time taken by solver in ms):
[ 3.1730,  4.1224) (avg.  3.5694)        : 5
[ 4.1224,  5.3558) (avg.  4.5020)        : 9
[ 5.3558,  6.9583) (avg.  5.5830)        : 2
[ 6.9583,  9.0403) (avg.  0.0000)        : 0
[ 9.0403, 11.7452) (avg.  0.0000)        : 0
[11.7452, 15.2594) (avg.  0.0000)        : 0
[15.2594, 19.8251) (avg.  0.0000)        : 0
[19.8251, 25.7569) (avg. 21.4730)        : 1
[25.7569, 33.4635) (avg. 32.0780)        : 3
[33.4635, 43.4760) (avg. 37.8953)        : 3
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 17,  28) (avg.  17)                    : 1
[ 28,  38) (avg.   0)                    : 0
[ 38,  48) (avg.   0)                    : 0
[ 48,  59) (avg.  56)                    : 5
[ 59,  69) (avg.  64)                    : 6
[ 69,  79) (avg.  74)                    : 4
[ 79,  90) (avg.  87)                    : 2
[ 90, 100) (avg.  95)                    : 4
[100, 110) (avg.   0)                    : 0
[110, 120) (avg. 110)                    : 1
Top 10 highest time taking queries:
1. [0.042s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_.0
2. [0.037s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
3. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.033s] SOLVER_RES_TRUE memlabel_assertions_sat.0
5. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%7%bbentry_Lfor.cond%.0
6. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
7. [0.021s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%7%bbent.0
8. [0.006s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
9. [0.006s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.8.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
10. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.abstract-memlabel-asserts-houdini-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:22 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 88 time spent: 0:0:0 [0.002386s total; 0.000027 per start]
tfg_computeWP: num_starts 197 time spent: 0:0:0 [0.022529s total; 0.000114 per start]
tfg_get_simplified_to_state_for_edge: num_starts 774 time spent: 0:0:0 [0.001514s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 859 time spent: 0:0:0 [0.001553s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 353 time spent: 0:0:0 [0.000719s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 21 time spent: 0:0:0 [0.089298s total; 0.004252 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.094425s total; 0.015737 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 248 time spent: 0:0:0 [0.032610s total; 0.000131 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 67 time spent: 0:0:0 [0.022641s total; 0.000338 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 214 time spent: 0:0:0 [0.018086s total; 0.000085 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 909 time spent: 0:0:0 [0.020171s total; 0.000022 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 214 time spent: 0:0:0 [0.006065s total; 0.000028 per start]
tfg_graph_get_vars_written_on_edge: num_starts 214 time spent: 0:0:0 [0.004981s total; 0.000023 per start]
cg_with_rank_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.077174s total; 0.002086 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000647s total; 0.000026 per start]
graph_with_guessing_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.076349s total; 0.002063 per start]
point_set_add_point_using_CE: num_starts 128 time spent: 0:0:0 [0.017408s total; 0.000136 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 128 time spent: 0:0:0 [0.017759s total; 0.000139 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 20 time spent: 0:0:0 [0.069468s total; 0.003473 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 20 time spent: 0:0:0 [0.051153s total; 0.002558 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1649 time spent: 0:0:0 [0.015839s total; 0.000010 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 256 time spent: 0:0:0 [0.007267s total; 0.000028 per start]
expr_simplify_solver: num_starts 474 time spent: 0:0:0 [0.064460s total; 0.000136 per start]
expr_simplify_syntactic: num_starts 474 time spent: 0:0:0 [0.026848s total; 0.000057 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.014721s total; 0.003680 per start]
expr_simplify_using_lhs_set_helper: num_starts 229 time spent: 0:0:0 [0.104898s total; 0.000458 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 917 time spent: 0:0:0 [0.103591s total; 0.000113 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 611 time spent: 0:0:0 [0.003503s total; 0.000006 per start]
expr_simplify_eq: num_starts 126 time spent: 0:0:0 [0.001711s total; 0.000014 per start]
expr_simplify_or: num_starts 13 time spent: 0:0:0 [0.000021s total; 0.000002 per start]
expr_simplify_and: num_starts 28 time spent: 0:0:0 [0.000229s total; 0.000008 per start]
expr_simplify_not: num_starts 20 time spent: 0:0:0 [0.000088s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 156 time spent: 0:0:0 [0.004665s total; 0.000030 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.014595s total; 0.003649 per start]
get_arithmetic_addsub_atoms: num_starts 861 time spent: 0:0:0 [0.000830s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 219 time spent: 0:0:0 [0.002945s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 250 time spent: 0:0:0 [0.000250s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3458 time spent: 0:0:0 [0.106808s total; 0.000031 per start]
expr_do_simplify_helper_cache: num_starts 3458 time spent: 0:0:0 [0.003563s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 791 time spent: 0:0:0 [0.027272s total; 0.000034 per start]
array_constant_equals: num_starts 268 time spent: 0:0:0 [0.000498s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.042286s total; 0.001762 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.021243s total; 0.000885 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.002898s total; 0.000076 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000062s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 82 time spent: 0:0:0 [0.010256s total; 0.000125 per start]
compute_simplified_loc_exprs_for_edge: num_starts 218 time spent: 0:0:0 [0.027183s total; 0.000125 per start]
compute_locs_definitely_written_on_edge: num_starts 82 time spent: 0:0:0 [0.000173s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 27 time spent: 0:0:0 [0.007450s total; 0.000276 per start]
edge_update_memlabel_map_for_mlvars: num_starts 41 time spent: 0:0:0 [0.001084s total; 0.000026 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.013459s total; 0.000561 per start]
expand_locset_to_include_slots_for_memmask: num_starts 49 time spent: 0:0:0 [0.000140s total; 0.000003 per start]
total: num_starts 1 time spent: 0:0:28 [28.056221s total; 28.056221 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 1.20s.
ftmap_run_pointsto_analysis.: 0.072956s (num_starts 2; 0.0365s/start)s.
EQ Time after pointsto analysis: 1.12492s.
EQ Time after pointsto analysis and smt_query: 0.415891s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.407041s.
Equivalence proof found. The programs are equivalent.
