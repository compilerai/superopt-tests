argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --smt-query-timeout=5
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=loop1.proof
argv[9] = --spec-iospecs=loop1.iospecs
argv[10] = loop1.spec
argv[11] = loop1.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.4087242
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop1.c
argv[10] = -o
argv[11] = par_tmpdir/loop1.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/loop1.spec.etfg
argv[11] = par_tmpdir/loop1.c.bc
argv[12] = -o
argv[13] = par_tmpdir/loop1.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000125s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 89 time spent: 0:0:0 [0.000154s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 591 time spent: 0:0:0 [0.002352s total; 0.000004 per start]
expr_simplify_solver: num_starts 38 time spent: 0:0:0 [0.004384s total; 0.000115 per start]
expr_simplify_syntactic: num_starts 38 time spent: 0:0:0 [0.002031s total; 0.000053 per start]
expr_simplify_using_lhs_set_helper: num_starts 50 time spent: 0:0:0 [0.007559s total; 0.000151 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 108 time spent: 0:0:0 [0.007441s total; 0.000069 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000238s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000008s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 22 time spent: 0:0:0 [0.000358s total; 0.000016 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000040s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000698s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000117s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1355 time spent: 0:0:0 [0.008838s total; 0.000007 per start]
expr_do_simplify_helper_cache: num_starts 1355 time spent: 0:0:0 [0.000895s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000007s total; 0.000002 per start]
sort_dfa_canonical: num_starts 141566 time spent: 0:0:1 [1.241719s total; 0.000009 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.045528s total; 0.000700 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.014189s total; 0.000218 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005508s total; 0.000064 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000088s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.005333s total; 0.000041 per start]
compute_simplified_loc_exprs_for_edge: num_starts 352 time spent: 0:0:0 [0.015083s total; 0.000043 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000050s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005215s total; 0.000186 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000397s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.008695s total; 0.000134 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000093s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 8e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 1.8e-05s (num_starts 31; 0.0000s/start)
add_assumes_to_start_edge.: 2e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2e-05s (num_starts 22; 0.0000s/start)
expr_is_callee_save_const.: 2.9e-05s (num_starts 26; 0.0000s/start)
add_extra_node_at_start_pc.: 3.2e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.5e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.7e-05s (num_starts 2; 0.0000s/start)
compute_sprel_relations.: 7.7e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 7.7e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 7.8e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.4e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.7e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.7e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000101s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000105s (num_starts 5; 0.0000s/start)
determinize_value_expr_map.: 0.00012s (num_starts 138; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000124s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000139s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000166s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000174s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000179s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000196s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000277s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000307s (num_starts 65; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000315s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.00034s (num_starts 1; 0.0003s/start)
compute_z3_expr.: 0.000346s (num_starts 22; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000362s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000398s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000416s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000429s (num_starts 759; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000455s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000468s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000535s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000618s (num_starts 65; 0.0000s/start)
populate_simplified_to_state.: 0.000672s (num_starts 3; 0.0002s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000728s (num_starts 1; 0.0007s/start)
populate_exit_return_values_for_llvm_method.: 0.000888s (num_starts 1; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00106s (num_starts 552; 0.0000s/start)
populate_transitive_closure.: 0.001062s (num_starts 1; 0.0011s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001191s (num_starts 1; 0.0012s/start)
query:convert_from_z3.: 0.001191s (num_starts 22; 0.0001s/start)
query:convert_to_z3.: 0.001198s (num_starts 22; 0.0001s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001208s (num_starts 1; 0.0012s/start)
tfg::collect_assumes_around_edge.: 0.001215s (num_starts 89; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001247s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.001306s (num_starts 85; 0.0000s/start)
compute_lr_status_for_expr.: 0.001468s (num_starts 36; 0.0000s/start)
graph_visit_exprs.: 0.001469s (num_starts 4; 0.0004s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001534s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001596s (num_starts 31; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002048s (num_starts 1; 0.0020s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002261s (num_starts 1; 0.0023s/start)
populate_dominator_and_postdominator_relations.: 0.002775s (num_starts 2; 0.0014s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.003086s (num_starts 1; 0.0031s/start)
query:simplify-z3.: 0.00327s (num_starts 44; 0.0001s/start)
populate_simplified_assets.: 0.00347s (num_starts 6; 0.0006s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003475s (num_starts 65; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.004012s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.004017s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.004022s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.004027s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.: 0.004031s (num_starts 1; 0.0040s/start)
tfg::populate_loc_definedness.before_solve.: 0.004143s (num_starts 2; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004147s (num_starts 591; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.004186s (num_starts 1; 0.0042s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004336s (num_starts 1; 0.0043s/start)
compute_new_lr_status_on_locs.: 0.004434s (num_starts 65; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004436s (num_starts 68; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004474s (num_starts 2; 0.0022s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004491s (num_starts 1; 0.0045s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.00468s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004685s (num_starts 2; 0.0023s/start)
graph_identify_back_edges.: 0.004901s (num_starts 6; 0.0008s/start)
graph_to_stream.: 0.005083s (num_starts 1; 0.0051s/start)
graph_identify_natural_loops.: 0.005149s (num_starts 6; 0.0009s/start)
populate_locs_potentially_modified_on_edge.: 0.005908s (num_starts 3; 0.0020s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005996s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.006067s (num_starts 2; 0.0030s/start)
create_sp_version_relations_lattice_at_pc.: 0.006705s (num_starts 85; 0.0001s/start)
find_dominators.: 0.007124s (num_starts 10; 0.0007s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.007611s (num_starts 50; 0.0002s/start)
avail_exprs_create_submap.: 0.008224s (num_starts 195; 0.0000s/start)
compute_regions.: 0.008459s (num_starts 6; 0.0014s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.009389s (num_starts 3; 0.0031s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.010865s (num_starts 591; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.011776s (num_starts 591; 0.0000s/start)
tfg_preprocess.dst.llvm.foo.: 0.012055s (num_starts 1; 0.0121s/start)
tfg::tfg_preprocess.: 0.012057s (num_starts 1; 0.0121s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.012908s (num_starts 65; 0.0002s/start)
populate_loc_liveness.: 0.013456s (num_starts 2; 0.0067s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.014315s (num_starts 65; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.014979s (num_starts 591; 0.0000s/start)
get_tfg.: 0.015766s (num_starts 1; 0.0158s/start)
get_function_tfg_map.foo.: 0.015797s (num_starts 1; 0.0158s/start)
get_function_tfg_map.: 0.0158s (num_starts 1; 0.0158s/start)
main.2.: 0.015998s (num_starts 1; 0.0160s/start)
tfg_postprocess_after_pointsto_analysis.: 0.037441s (num_starts 1; 0.0374s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.045636s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.046509s (num_starts 1; 0.0465s/start)
ftmap_run_pointsto_analysis.: 0.103557s (num_starts 1; 0.1036s/start)
parse_consts_db.: 7.36598s (num_starts 1; 7.3660s/start)
main.: 7.52462s (num_starts 1; 7.5246s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file loop1.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: foo...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%6%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%6%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%6%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%9%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%9%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%9%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo: Found 3 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%6%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%6%bbentry ending at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%6%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%6%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%6%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%6%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L3%6%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting select expressions at toPC L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding node L3%6%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:22 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2: Added the 3 propagated CEs at PC L3%6%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%6%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L3%6%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L3%6%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%n
      2.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      3.: 0                     ==  input.spec-%var-r-0.L3%6%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L3%6%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%6%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L3%6%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L3%6%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L3%6%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:22 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%6%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry, A (line 3 at column 21))
                L3%6%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%6%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%n
      2.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      3.: 0                     ==  input.spec-%var-r-0.L3%6%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L3%6%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%6%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L3%6%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L3%6%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L3%6%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:22 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      3.: 0                     ==  input.spec-%var-r-0.L3%6%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%6%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:22 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      3.: 0                     ==  input.spec-%var-r-0.L3%6%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%6%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A2: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L3%6%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L3%6%bbentry=>L3%6%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L3%6%bbentry=>L3%6%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L3%6%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%6%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry, A (line 3 at column 21))
                L3%6%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%6%bbentry=>L3%6%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L3%6%bbentry --> L3%6%bbentry ending at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L3%6%bbentry --> L3%6%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L3%6%bbentry --> L3%6%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L3%6%bbentry --> L3%6%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%6%bbentry_Lfor.cond%1%bbentry and toPC L3%6%bbentry_Lfor.cond%1%bbentry, src path L3%6%bbentry --> L3%6%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Getting alloca-ptrs on edge L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Found no alloca-ptrs on edge L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Adding edge L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2.B2: Added the 5 propagated CEs at PC L3%6%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2.B2: Computing CG regions after the addition of the edge L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%6%bbentry_Lfor.cond%1%bbentry and toPC L3%6%bbentry_Lfor.cond%1%bbentry, src path L3%6%bbentry --> L3%6%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L3%6%bbentry --> L3%6%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:22 : Added correlation to the product-TFG foo.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%6%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry => C L3%6%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry, A (line 3 at column 21))
                L3%6%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%6%bbentry=>L3%6%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L3%6%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:22 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%6%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%6%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37


<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%6%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%6%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%6%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry => C L3%6%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry, A (line 3 at column 21))
                L3%6%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%6%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%6%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%6%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%6%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%6%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%6%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%6%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding edge L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagated 6 out of 20 counter-examples across edge L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A2.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%6%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%6%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%6%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%6%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry => C L3%6%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%6%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry, A (line 3 at column 21))
                L3%6%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%6%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%6%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%6%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (7 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%6%bbentry ; 4-->input.spec-%var-n-0.L3%6%bbentry ; 5-->input.spec-%var-r-0.L3%6%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%6%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%6%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce149      3.:cvc4.ce101
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%6%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37      3.:yices.ce38
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce149      2.:cvc4.ce216      3.:z3.ce289
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce36      2.:z3v487.ce37

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%6%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry => C L3%6%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%6%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%6%bbentry_Lfor.cond%1%bbentry (C L3%6%bbentry, A (line 3 at column 21))
                L3%6%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 0.99s, query:smt.: 0.261076s (num_starts 23; 0.0114s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.6234s (num_starts 56; 0.0111s/start)ftmap_run_pointsto_analysis.: 0.05698s (num_starts 2; 0.0285s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 2e-06s (num_starts 1; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 4e-06s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 6e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.2e-05s (num_starts 13; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.3e-05s (num_starts 5; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.3e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.4e-05s (num_starts 19; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.4e-05s (num_starts 1; 0.0000s/start)
remove_complex_bv_exprs.: 1.4e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1.5e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.6e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.6e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 1.7e-05s (num_starts 27; 0.0000s/start)
ce_perform_memory_fuzzing.: 2e-05s (num_starts 18; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.5e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.8e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.8e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 3e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.4e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L3%6%bbentry_Lfor.cond%1%bbentry.: 4.1e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 4.3e-05s (num_starts 18; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%6%bbentry_Lfor.cond%1%bbentry.: 4.7e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 6.7e-05s (num_starts 81; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 7.1e-05s (num_starts 1; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 7.4e-05s (num_starts 56; 0.0000s/start)
lr_status_meet.: 7.5e-05s (num_starts 111; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 8.4e-05s (num_starts 16; 0.0000s/start)
expr_is_callee_save_const.: 9.2e-05s (num_starts 93; 0.0000s/start)
collect_dst_to_src_submap_preds.: 9.3e-05s (num_starts 56; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.4e-05s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry.: 9.6e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 9.9e-05s (num_starts 2; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000105s (num_starts 208; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000106s (num_starts 16; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000106s (num_starts 12; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000112s (num_starts 29; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000115s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000129s (num_starts 6; 0.0000s/start)
proof_query_is_trivial_helper.: 0.00014s (num_starts 68; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000142s (num_starts 29; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000142s (num_starts 29; 0.0000s/start)
compute_sprel_relations.: 0.000147s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.00015s (num_starts 8; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000151s (num_starts 40; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000156s (num_starts 12; 0.0000s/start)
propagate_sprels.: 0.000159s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000168s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000172s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000185s (num_starts 40; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000203s (num_starts 1; 0.0002s/start)
def_analysis::xfer_and_meet.: 0.000206s (num_starts 18; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000208s (num_starts 23; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000214s (num_starts 1; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.00024s (num_starts 24; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000248s (num_starts 1; 0.0002s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.00029s (num_starts 9; 0.0000s/start)
set_result_and_counter_example.: 0.0003s (num_starts 23; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000303s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000303s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000305s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000306s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000307s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00031s (num_starts 1; 0.0003s/start)
populate_dominator_and_postdominator_relations.: 0.000318s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00032s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000325s (num_starts 1; 0.0003s/start)
collect_assumes_around_edge.: 0.000341s (num_starts 3; 0.0001s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000341s (num_starts 85; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000346s (num_starts 85; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000346s (num_starts 1; 0.0003s/start)
tfg::collect_assumes_around_edge.: 0.000381s (num_starts 30; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.0004s (num_starts 8; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000416s (num_starts 2; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000434s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000475s (num_starts 53; 0.0000s/start)
identify_address_taken_local_variables.: 0.000479s (num_starts 1; 0.0005s/start)
graph_with_guessing_sync_preds.: 0.00048s (num_starts 56; 0.0000s/start)
proof_query_is_trivial.: 0.000495s (num_starts 56; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000501s (num_starts 215; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000567s (num_starts 44; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000569s (num_starts 41; 0.0000s/start)
populate_simplified_to_state.: 0.000573s (num_starts 3; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000598s (num_starts 40; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000607s (num_starts 12; 0.0001s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000612s (num_starts 20; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000621s (num_starts 1; 0.0006s/start)
tfg_edge_composition_get_assumes.: 0.000633s (num_starts 44; 0.0000s/start)
construct_linear_combination_exprs.: 0.000651s (num_starts 28; 0.0000s/start)
expr_represents_llvm_undef.: 0.000654s (num_starts 97; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000657s (num_starts 2; 0.0003s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000696s (num_starts 3; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000718s (num_starts 1; 0.0007s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000744s (num_starts 29; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00075s (num_starts 1; 0.0008s/start)
ldr_decomposition.: 0.000752s (num_starts 16; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000764s (num_starts 5; 0.0002s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000793s (num_starts 18; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00082s (num_starts 41; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000842s (num_starts 1; 0.0008s/start)
tfg::populate_loc_definedness.before_solve.: 0.000874s (num_starts 3; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000912s (num_starts 5; 0.0002s/start)
generate_aliasing_constraints_from_expr.: 0.000926s (num_starts 412; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000936s (num_starts 5; 0.0002s/start)
removeMostPromising.: 0.000946s (num_starts 10; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001022s (num_starts 1; 0.0010s/start)
corr_graph_enumerate_correlations.: 0.001062s (num_starts 5; 0.0002s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001096s (num_starts 16; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001109s (num_starts 2; 0.0006s/start)
graph_visit_exprs.: 0.001132s (num_starts 3; 0.0004s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001182s (num_starts 3; 0.0004s/start)
populate_simplified_assets.: 0.001207s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001259s (num_starts 3; 0.0004s/start)
get_sprel_map_pair_at_pc.: 0.001269s (num_starts 29; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.001379s (num_starts 28; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001394s (num_starts 18; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001488s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001489s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001492s (num_starts 1; 0.0015s/start)
graph_visit_exprs_and_keys.: 0.001553s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.001568s (num_starts 2; 0.0008s/start)
compute_ssa_vars_renaming_map.: 0.001647s (num_starts 2; 0.0008s/start)
find_dominators.: 0.00168s (num_starts 25; 0.0001s/start)
graph_identify_back_edges.: 0.001717s (num_starts 21; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001726s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.00173s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-trivial.: 0.001733s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001736s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.001744s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.001744s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.001749s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed.: 0.001751s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-trivial.: 0.001752s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001753s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.001757s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001757s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned;-trivial.: 0.001759s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001762s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.001764s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.001765s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.00177s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001771s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned.: 0.001777s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.001777s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.001782s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001791s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.001792s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.001795s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.001798s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.0018s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.001809s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.001815s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.001823s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.001828s (num_starts 2; 0.0009s/start)
expr_linear_relation_holds::visit.var.: 0.001892s (num_starts 97; 0.0000s/start)
graph_identify_natural_loops.: 0.001898s (num_starts 21; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001932s (num_starts 2; 0.0010s/start)
populate_locs_potentially_modified_on_edge.: 0.002007s (num_starts 3; 0.0007s/start)
populate_branch_affecting_locs.: 0.002057s (num_starts 3; 0.0007s/start)
compute_vars_reaching_definitions.: 0.002063s (num_starts 2; 0.0010s/start)
expr_substitute_using_available_exprs_submap.: 0.002147s (num_starts 112; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.002207s (num_starts 156; 0.0000s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.002263s (num_starts 29; 0.0001s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.002305s (num_starts 3; 0.0008s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.002351s (num_starts 44; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.002491s (num_starts 29; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.002729s (num_starts 120; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.00274s (num_starts 56; 0.0000s/start)
populate_transitive_closure.: 0.002769s (num_starts 27; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.002785s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002789s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.00279s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.002793s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002795s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.002974s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.002979s (num_starts 4; 0.0007s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.002984s (num_starts 100; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.003137s (num_starts 20; 0.0002s/start)
compute_expr_eqclasses_at_pc.: 0.003175s (num_starts 1; 0.0032s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.003184s (num_starts 20; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.003227s (num_starts 3; 0.0011s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003269s (num_starts 21; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.003368s (num_starts 53; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.003589s (num_starts 3; 0.0012s/start)
cg_add_node.: 0.003749s (num_starts 3; 0.0012s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.003977s (num_starts 1; 0.0040s/start)
get_next_potential_correlations.: 0.004027s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.004082s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004087s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.004089s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.004092s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004096s (num_starts 2; 0.0020s/start)
collect_aliasing_constraints_around_path_helper.: 0.004145s (num_starts 106; 0.0000s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.004277s (num_starts 2; 0.0021s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.004287s (num_starts 18; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.004519s (num_starts 6; 0.0008s/start)
collect_aliasing_constraints_around_path.: 0.004522s (num_starts 66; 0.0001s/start)
collect_assumes_around_path_helper.: 0.004578s (num_starts 85; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004725s (num_starts 3; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004729s (num_starts 3; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.004738s (num_starts 3; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.004747s (num_starts 3; 0.0016s/start)
graph_with_paths::collect_assumes_around_path.: 0.004795s (num_starts 85; 0.0001s/start)
compute_regions.: 0.004905s (num_starts 21; 0.0002s/start)
lhs_set_sort.: 0.005099s (num_starts 29; 0.0002s/start)
ldr_decompose_and_linear_solve.: 0.00525s (num_starts 16; 0.0003s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.005265s (num_starts 41; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.005293s (num_starts 74; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%6%bbentry_Lfor.cond%1%bbentry.: 0.005412s (num_starts 3; 0.0018s/start)
compute_lr_status_for_expr.: 0.005468s (num_starts 119; 0.0000s/start)
bv_linear_solve.: 0.005553s (num_starts 16; 0.0003s/start)
query:convert_to_z3.: 0.005604s (num_starts 108; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.00564s (num_starts 2; 0.0028s/start)
query:bv_solve.: 0.005643s (num_starts 16; 0.0004s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005688s (num_starts 640; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005728s (num_starts 96; 0.0001s/start)
create_new_corr_graph_edge.: 0.005766s (num_starts 3; 0.0019s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.005875s (num_starts 111; 0.0001s/start)
predicate_canonicalized.: 0.005984s (num_starts 28; 0.0002s/start)
check_node_stability_after_CE_addition.: 0.006042s (num_starts 37; 0.0002s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006084s (num_starts 111; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.00619s (num_starts 41; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006195s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006204s (num_starts 4; 0.0016s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.006254s (num_starts 41; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.006268s (num_starts 4; 0.0016s/start)
query:convert_from_z3.: 0.006495s (num_starts 108; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.006723s (num_starts 16; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007116s (num_starts 1; 0.0071s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007118s (num_starts 1; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007121s (num_starts 1; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007123s (num_starts 1; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.007125s (num_starts 1; 0.0071s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.007134s (num_starts 1; 0.0071s/start)
do_ssa_transformation.: 0.007164s (num_starts 2; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.007443s (num_starts 2; 0.0037s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.007448s (num_starts 2; 0.0037s/start)
bvsolve_cache_query.miss1.: 0.007735s (num_starts 16; 0.0005s/start)
bvsolve_cache_query.: 0.007865s (num_starts 16; 0.0005s/start)
counter_example_falsifies_preds.: 0.007989s (num_starts 67; 0.0001s/start)
counter_example_satisfies_preds.: 0.008049s (num_starts 301; 0.0000s/start)
collect_inductive_preds_around_path.: 0.008242s (num_starts 56; 0.0001s/start)
avail_exprs_create_submap.: 0.008328s (num_starts 123; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008351s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008352s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00841s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008411s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008415s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009003s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009006s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009008s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00901s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009013s (num_starts 1; 0.0090s/start)
gen_pred_from_coeff_row.simplify.: 0.009058s (num_starts 28; 0.0003s/start)
populate_loc_liveness.: 0.009345s (num_starts 3; 0.0031s/start)
solve_for_bv_points.: 0.009602s (num_starts 16; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.009917s (num_starts 2; 0.0050s/start)
graph_to_stream.: 0.010047s (num_starts 4; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.010157s (num_starts 4; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear.: 0.01017s (num_starts 4; 0.0025s/start)
compute_new_lr_status_on_locs.: 0.010945s (num_starts 41; 0.0003s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.010945s (num_starts 4; 0.0027s/start)
compute_z3_expr.: 0.01125s (num_starts 131; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.011408s (num_starts 307; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.011508s (num_starts 14; 0.0008s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.011558s (num_starts 680; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.01164s (num_starts 16; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.011713s (num_starts 6; 0.0020s/start)
propagate_nodece_across_edge.: 0.011727s (num_starts 9; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.011813s (num_starts 2; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.011819s (num_starts 2; 0.0059s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.011825s (num_starts 2; 0.0059s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.011832s (num_starts 2; 0.0059s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.011837s (num_starts 2; 0.0059s/start)
put_smtlib_string_in_file.: 0.012192s (num_starts 46; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.012312s (num_starts 6; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.012456s (num_starts 3; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.012465s (num_starts 3; 0.0042s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.012509s (num_starts 640; 0.0000s/start)
parse_z3_model.: 0.013123s (num_starts 7; 0.0019s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.013396s (num_starts 73; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.013473s (num_starts 73; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.014667s (num_starts 8; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.014687s (num_starts 8; 0.0018s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.014895s (num_starts 34; 0.0004s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.015104s (num_starts 34; 0.0004s/start)
counter_example_evaluate_preds.: 0.015196s (num_starts 368; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.015586s (num_starts 24; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015622s (num_starts 2; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015628s (num_starts 2; 0.0078s/start)
parse_cvc4_model.: 0.01603s (num_starts 7; 0.0023s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.01614s (num_starts 1; 0.0161s/start)
get_unrolled_paths_from.: 0.016462s (num_starts 15; 0.0011s/start)
parse_yices_model.: 0.016546s (num_starts 7; 0.0024s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017031s (num_starts 41; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017128s (num_starts 1; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01713s (num_starts 1; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.017136s (num_starts 1; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.017138s (num_starts 1; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear.: 0.017212s (num_starts 4; 0.0043s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.017344s (num_starts 1; 0.0173s/start)
tfg_postprocess_after_pointsto_analysis.: 0.01756s (num_starts 2; 0.0088s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.017614s (num_starts 640; 0.0000s/start)
guarded_predicate_set_and.: 0.017782s (num_starts 29; 0.0006s/start)
query:simplify-z3.: 0.017851s (num_starts 216; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.017927s (num_starts 112; 0.0002s/start)
gen_pred_from_coeff_row.: 0.018119s (num_starts 28; 0.0006s/start)
compute_preds_for_bv_points.: 0.018385s (num_starts 5; 0.0037s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.018423s (num_starts 9; 0.0020s/start)
tfg_relax_pointsto_vals_on_edge.: 0.02027s (num_starts 17; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020883s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020885s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.020893s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.020899s (num_starts 2; 0.0104s/start)
check_wfconds_on_edge.L3%6%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.024709s (num_starts 2; 0.0124s/start)
graph_ec_apply_trans_funs_helper.0.: 0.024758s (num_starts 146; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.02477s (num_starts 12; 0.0021s/start)
check_wfconds_on_edge.L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry.: 0.024952s (num_starts 3; 0.0083s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.025158s (num_starts 68; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02553s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025533s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.025571s (num_starts 2; 0.0128s/start)
graph_ec_apply_trans_funs_helper.: 0.026005s (num_starts 151; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.026342s (num_starts 151; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.026763s (num_starts 151; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.027193s (num_starts 151; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.027404s (num_starts 8; 0.0034s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029224s (num_starts 3; 0.0097s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029229s (num_starts 3; 0.0097s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.029297s (num_starts 20; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.029322s (num_starts 18; 0.0016s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.029354s (num_starts 29; 0.0010s/start)
apply_mask_and_overlay_array_constant.: 0.030836s (num_starts 20; 0.0015s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.03093s (num_starts 16; 0.0019s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.031086s (num_starts 29; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.03182s (num_starts 6; 0.0053s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.032225s (num_starts 24; 0.0013s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.033379s (num_starts 5; 0.0067s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.033393s (num_starts 5; 0.0067s/start)
edge_composition_apply_trans_funs_on_pred.: 0.034649s (num_starts 56; 0.0006s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.03516s (num_starts 73; 0.0005s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%6%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.037546s (num_starts 12; 0.0031s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043732s (num_starts 4; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043759s (num_starts 4; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043771s (num_starts 4; 0.0109s/start)
counter_example_translate_on_edge_composition_helper.: 0.043783s (num_starts 326; 0.0001s/start)
read_counter_examples_from_channel.: 0.046678s (num_starts 7; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.048459s (num_starts 1; 0.0485s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.048462s (num_starts 1; 0.0485s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.048469s (num_starts 1; 0.0485s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.048473s (num_starts 1; 0.0485s/start)
check_wfconds_on_edge.: 0.049821s (num_starts 7; 0.0071s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.049973s (num_starts 18; 0.0028s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.050135s (num_starts 37; 0.0014s/start)
decide_hoare_triple_helper;-trivial.: 0.050867s (num_starts 34; 0.0015s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.056392s (num_starts 176; 0.0003s/start)
ftmap_run_pointsto_analysis.: 0.05698s (num_starts 2; 0.0285s/start)
tfg_run_pointsto_analysis.: 0.057188s (num_starts 2; 0.0286s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear.: 0.058498s (num_starts 12; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.05853s (num_starts 12; 0.0049s/start)
check_equivalence_proof.: 0.059373s (num_starts 1; 0.0594s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%6%bbentry_Lfor.cond%1%bbentry.: 0.06001s (num_starts 3; 0.0200s/start)
tfg_populate_structs_after_ssa_construction.: 0.062579s (num_starts 2; 0.0313s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);linear.: 0.068786s (num_starts 16; 0.0043s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069175s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069179s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069182s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069185s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.069195s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed.: 0.0692s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.069207s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069928s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069929s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069929s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069929s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.069935s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.06994s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.069948s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.070279s (num_starts 2; 0.0351s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.070962s (num_starts 3; 0.0237s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.071331s (num_starts 2; 0.0357s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074933s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074936s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.074947s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.074951s (num_starts 1; 0.0750s/start)
corr_graph::add_edge().: 0.081335s (num_starts 3; 0.0271s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.084284s (num_starts 17; 0.0050s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087243s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087252s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08726s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087265s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.087282s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned.: 0.08729s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.087303s (num_starts 2; 0.0437s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.08793s (num_starts 3; 0.0293s/start)
corr_graph_add_correlation.: 0.088032s (num_starts 3; 0.0293s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.089081s (num_starts 4; 0.0223s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09011s (num_starts 3; 0.0300s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090119s (num_starts 3; 0.0300s/start)
check_preds_on_edge_compositions.: 0.090221s (num_starts 10; 0.0090s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.090364s (num_starts 3; 0.0301s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear.: 0.093131s (num_starts 7; 0.0133s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.093145s (num_starts 7; 0.0133s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L3%6%bbentry_Lfor.cond%1%bbentry.: 0.095659s (num_starts 6; 0.0159s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%6%bbentry_Lfor.cond%1%bbentry.: 0.096313s (num_starts 3; 0.0321s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.105706s (num_starts 5; 0.0211s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.106988s (num_starts 1; 0.1070s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);linear.: 0.110412s (num_starts 11; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.123384s (num_starts 2; 0.0617s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.12344s (num_starts 2; 0.0617s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.131217s (num_starts 7; 0.0187s/start)
ce_reconcile_sorts_and_values.: 0.141256s (num_starts 21; 0.0067s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%6%bbentry_Lfor.cond%1%bbentry).: 0.14321s (num_starts 21; 0.0068s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149463s (num_starts 9; 0.0166s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159712s (num_starts 6; 0.0266s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.163991s (num_starts 8; 0.0205s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.179145s (num_starts 27; 0.0066s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.193321s (num_starts 3; 0.0644s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.193379s (num_starts 3; 0.0645s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.200123s (num_starts 7; 0.0286s/start)
decide_hoare_triple.: 0.205345s (num_starts 5; 0.0411s/start)
dst_edge_composition_proves_false.: 0.207755s (num_starts 3; 0.0693s/start)
get_next_dst_edge_composition_to_correlate.: 0.218679s (num_starts 4; 0.0547s/start)
decide_hoare_triple_helper;per-path;L3%6%bbentry_Lfor.cond%1%bbentry;(L3%6%bbentry_Lfor.cond%1%bbentry=>L3%6%bbentry_Lfor.cond%1%bbentry).: 0.231633s (num_starts 23; 0.0101s/start)
query:smt.: 0.261076s (num_starts 23; 0.0114s/start)
spawn_smt_query.: 0.30799s (num_starts 23; 0.0134s/start)
update_invariant_state_for_edges.: 0.449305s (num_starts 3; 0.1498s/start)
cg_check_new_cg_ec.: 0.451918s (num_starts 3; 0.1506s/start)
correl_entry_apply.: 0.452062s (num_starts 3; 0.1507s/start)
solver_provable.: 0.469536s (num_starts 29; 0.0162s/start)
expr_is_provable.: 0.474751s (num_starts 29; 0.0164s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.475162s (num_starts 29; 0.0164s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.476703s (num_starts 29; 0.0164s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.477479s (num_starts 29; 0.0165s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.497636s (num_starts 29; 0.0172s/start)
solver_satisfiable-cache-miss.: 0.498654s (num_starts 23; 0.0217s/start)
solver_satisfiable.: 0.498817s (num_starts 30; 0.0166s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.501483s (num_starts 29; 0.0173s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.501954s (num_starts 29; 0.0173s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.517966s (num_starts 29; 0.0179s/start)
prove.: 0.518159s (num_starts 29; 0.0179s/start)
prove_spawn_and_join_helper.: 0.518286s (num_starts 29; 0.0179s/start)
prove_spawn_and_join.: 0.558887s (num_starts 29; 0.0193s/start)
prove_wrapper.proof_query_not_trivial.: 0.561763s (num_starts 29; 0.0194s/start)
prove_wrapper.: 0.565888s (num_starts 56; 0.0101s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.570866s (num_starts 22; 0.0259s/start)
decide_hoare_triple_check_ub.: 0.603834s (num_starts 56; 0.0108s/start)
decide_hoare_triple_helper.: 0.6234s (num_starts 56; 0.0111s/start)
decide_hoare_triple_with_alias_cons.: 0.673882s (num_starts 56; 0.0120s/start)
expandProductCFG.: 0.675352s (num_starts 4; 0.1688s/start)
bestFirstSearch.: 0.804563s (num_starts 1; 0.8046s/start)
Time taken for equivalence check.: 0.865158s (num_starts 1; 0.8652s/start)

counters:
# of paths enumerated.: 12
# of paths expanded.: 3
# of queries to linear solver.: 16
# of smt-solver-queries.: 23
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 3
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%6%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%6%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%6%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%6%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%6%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%6%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L3%6%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L3%6%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%6%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%6%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L3%6%bbentry_Lfor.cond%1%bbentry.iters.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L3%6%bbentry_Lfor.cond%1%bbentry.prove_queries.: 2
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 7
smt-queries-yices-sat.: 7
smt-queries-z3-sat.: 7
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%6%bbentry_Lfor.cond%1%bbentry.: 7
final-CG-counterexamples-total-at-L3%6%bbentry_Lfor.cond%1%bbentry.: 20
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.54
final-CG-time-to-total-time-ratio.: 0.67
query-time-to-total-time-ratio.: 0.31

Context stats:
exprs: count: 140957
sorts: count: 142
num_proof_queries: 29
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3172
	        hit ratio:	0.962799
m_simplify_solver:
	----------- total:	372
	        hit ratio:	0.709677
m_z3_solver_substitution:
	----------- total:	108
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	108
	        hit ratio:	0
m_expr_size:
	----------- total:	1732
	        hit ratio:	0.907044
m_expr_evaluates_to_constant_visitor:
	----------- total:	1422
	        hit ratio:	0.668073
m_sort_dfa_canonicalize:
	----------- total:	14506
	        hit ratio:	0.999448
m_expr_convert_to_iexpr:
	----------- total:	23
	        hit ratio:	0

z3_solver expr_query_cache entry size: 23
	----------- total:	30
	             hits:	7
	        hit ratio:	0.233333
histogram (time taken by solver in ms):
[ 2.9380,  3.8137) (avg.  3.3880)        : 9
[ 3.8137,  4.9504) (avg.  4.3211)        : 7
[ 4.9504,  6.4259) (avg.  0.0000)        : 0
[ 6.4259,  8.3411) (avg.  0.0000)        : 0
[ 8.3411, 10.8272) (avg.  0.0000)        : 0
[10.8272, 14.0544) (avg.  0.0000)        : 0
[14.0544, 18.2433) (avg. 16.3380)        : 2
[18.2433, 23.6809) (avg.  0.0000)        : 0
[23.6809, 30.7391) (avg. 24.4980)        : 1
[30.7391, 39.9010) (avg. 35.7528)        : 4
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 47) (avg. 40)                       : 1
[47, 54) (avg.  0)                       : 0
[54, 61) (avg.  0)                       : 0
[61, 68) (avg. 66)                       : 6
[68, 74) (avg. 72)                       : 5
[74, 81) (avg. 76)                       : 2
[81, 88) (avg. 84)                       : 4
[88, 95) (avg. 92)                       : 4
[95, 102) (avg. 98)                      : 1
[102, 108) (avg.  0)                     : 0
Top 10 highest time taking queries:
1. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL3%6%bbentry_Lfor.cond%1%bbentry.cond_.0
2. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%6%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL3%6%bbent.0
3. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL3%6%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
4. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.024s] SOLVER_RES_TRUE memlabel_assertions_sat.0
6. [0.017s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
7. [0.016s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%6%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL3%6%bbentry_Lfor.cond%.0
8. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-unsigned.from_pcL3%6%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
9. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.wfcond.from_pcL3%6%bbentry_Lfor.cond%1%bbentry.to_pcL3%6%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond.fr.0
10. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.wfcond.from_pcL3%6%bbentry_Lfor.cond%1%bbentry.to_pcL3%6%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond.fr.1

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 88 time spent: 0:0:0 [0.001837s total; 0.000021 per start]
tfg_computeWP: num_starts 197 time spent: 0:0:0 [0.021813s total; 0.000111 per start]
tfg_get_simplified_to_state_for_edge: num_starts 728 time spent: 0:0:0 [0.001225s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 813 time spent: 0:0:0 [0.001259s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 307 time spent: 0:0:0 [0.000526s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 21 time spent: 0:0:0 [0.077325s total; 0.003682 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.078238s total; 0.013040 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 248 time spent: 0:0:0 [0.032828s total; 0.000132 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 67 time spent: 0:0:0 [0.022809s total; 0.000340 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 214 time spent: 0:0:0 [0.018150s total; 0.000085 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 909 time spent: 0:0:0 [0.020262s total; 0.000022 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 214 time spent: 0:0:0 [0.006053s total; 0.000028 per start]
tfg_graph_get_vars_written_on_edge: num_starts 214 time spent: 0:0:0 [0.004855s total; 0.000023 per start]
cg_with_rank_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.065360s total; 0.001766 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000601s total; 0.000024 per start]
graph_with_guessing_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.064625s total; 0.001747 per start]
point_set_add_point_using_CE: num_starts 112 time spent: 0:0:0 [0.017968s total; 0.000160 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 112 time spent: 0:0:0 [0.018285s total; 0.000163 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 20 time spent: 0:0:0 [0.057791s total; 0.002890 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 20 time spent: 0:0:0 [0.039044s total; 0.001952 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1649 time spent: 0:0:0 [0.015219s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 256 time spent: 0:0:0 [0.008678s total; 0.000034 per start]
expr_simplify_solver: num_starts 397 time spent: 0:0:0 [0.028547s total; 0.000072 per start]
expr_simplify_syntactic: num_starts 397 time spent: 0:0:0 [0.021937s total; 0.000055 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010795s total; 0.002699 per start]
expr_simplify_using_lhs_set_helper: num_starts 216 time spent: 0:0:0 [0.060296s total; 0.000279 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 837 time spent: 0:0:0 [0.059336s total; 0.000071 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 448 time spent: 0:0:0 [0.002027s total; 0.000005 per start]
expr_simplify_eq: num_starts 52 time spent: 0:0:0 [0.000819s total; 0.000016 per start]
expr_simplify_or: num_starts 13 time spent: 0:0:0 [0.000024s total; 0.000002 per start]
expr_simplify_and: num_starts 33 time spent: 0:0:0 [0.000186s total; 0.000006 per start]
expr_simplify_not: num_starts 19 time spent: 0:0:0 [0.000066s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 123 time spent: 0:0:0 [0.002526s total; 0.000021 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010695s total; 0.002674 per start]
get_arithmetic_addsub_atoms: num_starts 716 time spent: 0:0:0 [0.000613s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 219 time spent: 0:0:0 [0.002515s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 250 time spent: 0:0:0 [0.000188s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3412 time spent: 0:0:0 [0.060905s total; 0.000018 per start]
expr_do_simplify_helper_cache: num_starts 3412 time spent: 0:0:0 [0.002779s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 791 time spent: 0:0:0 [0.028781s total; 0.000036 per start]
array_constant_equals: num_starts 377 time spent: 0:0:0 [0.000527s total; 0.000001 per start]
sort_dfa_canonical: num_starts 156046 time spent: 0:0:1 [1.237463s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 23 time spent: 0:0:0 [0.018390s total; 0.000800 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.032192s total; 0.001341 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.015530s total; 0.000647 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.002261s total; 0.000060 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000049s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 82 time spent: 0:0:0 [0.009564s total; 0.000117 per start]
compute_simplified_loc_exprs_for_edge: num_starts 218 time spent: 0:0:0 [0.023018s total; 0.000106 per start]
compute_locs_definitely_written_on_edge: num_starts 82 time spent: 0:0:0 [0.000143s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 27 time spent: 0:0:0 [0.005774s total; 0.000214 per start]
edge_update_memlabel_map_for_mlvars: num_starts 41 time spent: 0:0:0 [0.000887s total; 0.000022 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.009256s total; 0.000386 per start]
expand_locset_to_include_slots_for_memmask: num_starts 49 time spent: 0:0:0 [0.000120s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:30 [30.583137s total; 30.583137 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 1.00s.
ftmap_run_pointsto_analysis.: 0.05698s (num_starts 2; 0.0285s/start)s.
EQ Time after pointsto analysis: 0.938495s.
EQ Time after pointsto analysis and smt_query: 0.372607s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.364742s.
Equivalence proof found. The programs are equivalent.
