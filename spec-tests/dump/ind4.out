argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind4.proof
argv[9] = --spec-iospecs=ind4.iospecs
argv[10] = ind4.spec
argv[11] = ind4.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.2676137
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind4.c
argv[10] = -o
argv[11] = par_tmpdir/ind4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind4.spec.etfg
argv[11] = par_tmpdir/ind4.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind4.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 108 time spent: 0:0:0 [0.000182s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 105 time spent: 0:0:0 [0.000178s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 971 time spent: 0:0:0 [0.006280s total; 0.000006 per start]
expr_simplify_solver: num_starts 79 time spent: 0:0:0 [0.008960s total; 0.000113 per start]
expr_simplify_syntactic: num_starts 79 time spent: 0:0:0 [0.023279s total; 0.000295 per start]
expr_simplify_select_on_store: num_starts 8 time spent: 0:0:0 [0.020718s total; 0.002590 per start]
expr_simplify_using_lhs_set_helper: num_starts 83 time spent: 0:0:0 [0.037505s total; 0.000452 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 260 time spent: 0:0:0 [0.037267s total; 0.000143 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 67 time spent: 0:0:0 [0.000327s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000043s total; 0.000014 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 51 time spent: 0:0:0 [0.000901s total; 0.000018 per start]
expr_simplify_memalloc_using_memlabel: num_starts 5 time spent: 0:0:0 [0.000015s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.020483s total; 0.002560 per start]
get_arithmetic_addsub_atoms: num_starts 63 time spent: 0:0:0 [0.000066s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 135 time spent: 0:0:0 [0.001519s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 1225 time spent: 0:0:0 [0.000751s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2233 time spent: 0:0:0 [0.039665s total; 0.000018 per start]
expr_do_simplify_helper_cache: num_starts 2233 time spent: 0:0:0 [0.001558s total; 0.000001 per start]
array_constant_equals: num_starts 19 time spent: 0:0:0 [0.000044s total; 0.000002 per start]
sort_dfa_canonical: num_starts 143947 time spent: 0:0:1 [1.171842s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 6 time spent: 0:0:0 [0.001909s total; 0.000318 per start]
combo_dfa_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.116889s total; 0.001461 per start]
alias_val_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.035994s total; 0.000450 per start]
get_sprel_map_from_avail_exprs: num_starts 106 time spent: 0:0:0 [0.013659s total; 0.000129 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000124s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 160 time spent: 0:0:0 [0.009975s total; 0.000062 per start]
compute_simplified_loc_exprs_for_edge: num_starts 453 time spent: 0:0:0 [0.046399s total; 0.000102 per start]
compute_locs_definitely_written_on_edge: num_starts 160 time spent: 0:0:0 [0.000094s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 49 time spent: 0:0:0 [0.008228s total; 0.000168 per start]
edge_update_memlabel_map_for_mlvars: num_starts 80 time spent: 0:0:0 [0.001326s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 80 time spent: 0:0:0 [0.025193s total; 0.000315 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000242s total; 0.000003 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 7e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 2.1e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 2.4e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.6e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.9e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.5e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4.6e-05s (num_starts 53; 0.0000s/start)
lr_status_meet.: 5.3e-05s (num_starts 61; 0.0000s/start)
expr_is_callee_save_const.: 5.6e-05s (num_starts 57; 0.0000s/start)
main.3.: 7.9e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9.7e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 0.000134s (num_starts 154; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000169s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000172s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000195s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000209s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000209s (num_starts 41; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000218s (num_starts 12; 0.0000s/start)
propagate_sprels.: 0.000219s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000232s (num_starts 23; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000239s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000269s (num_starts 2; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000277s (num_starts 5; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000281s (num_starts 41; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000311s (num_starts 1; 0.0003s/start)
expr_represents_llvm_undef.: 0.000326s (num_starts 59; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000398s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000553s (num_starts 1; 0.0006s/start)
compute_z3_expr.: 0.000607s (num_starts 48; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000636s (num_starts 80; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000651s (num_starts 82; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00067s (num_starts 1193; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000804s (num_starts 1; 0.0008s/start)
graph_locs_add_all_llvmvars.: 0.000822s (num_starts 1; 0.0008s/start)
canonicalize_llvm_nextpcs.: 0.000879s (num_starts 1; 0.0009s/start)
populate_simplified_to_state.: 0.000966s (num_starts 3; 0.0003s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001051s (num_starts 80; 0.0000s/start)
populate_transitive_closure.: 0.001074s (num_starts 1; 0.0011s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001188s (num_starts 1; 0.0012s/start)
expr_linear_relation_holds::visit.var.: 0.00121s (num_starts 59; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001227s (num_starts 80; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.001261s (num_starts 1; 0.0013s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001445s (num_starts 1; 0.0014s/start)
tfg::collect_assumes_around_edge.: 0.001579s (num_starts 105; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001611s (num_starts 1; 0.0016s/start)
expr_substitute_using_available_exprs_submap.: 0.001876s (num_starts 67; 0.0000s/start)
create_closure_matrix.: 0.002044s (num_starts 105; 0.0000s/start)
query:convert_from_z3.: 0.002103s (num_starts 48; 0.0000s/start)
query:convert_to_z3.: 0.002379s (num_starts 48; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002658s (num_starts 1; 0.0027s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002787s (num_starts 1; 0.0028s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.0028s (num_starts 67; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00332s (num_starts 61; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.003365s (num_starts 2; 0.0017s/start)
compute_lr_status_for_expr.: 0.003366s (num_starts 78; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.00343s (num_starts 61; 0.0001s/start)
graph_visit_exprs.: 0.003666s (num_starts 4; 0.0009s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.0042s (num_starts 1; 0.0042s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004579s (num_starts 1815; 0.0000s/start)
populate_simplified_assets.: 0.006067s (num_starts 6; 0.0010s/start)
query:simplify-z3.: 0.006107s (num_starts 99; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.006187s (num_starts 1; 0.0062s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.006191s (num_starts 1; 0.0062s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.006197s (num_starts 1; 0.0062s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.0062s (num_starts 1; 0.0062s/start)
tfg_constructor.src.spec.foo.: 0.006205s (num_starts 1; 0.0062s/start)
tfg::populate_loc_definedness.before_solve.: 0.006491s (num_starts 2; 0.0032s/start)
graph_identify_back_edges.: 0.006547s (num_starts 6; 0.0011s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.006869s (num_starts 971; 0.0000s/start)
graph_identify_natural_loops.: 0.006879s (num_starts 6; 0.0011s/start)
tfg::populate_loc_definedness.before_initialize.: 0.006912s (num_starts 2; 0.0035s/start)
tfg::populate_loc_definedness.: 0.007201s (num_starts 2; 0.0036s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.007697s (num_starts 1; 0.0077s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.007857s (num_starts 1; 0.0079s/start)
graph_to_stream.: 0.00803s (num_starts 1; 0.0080s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.008098s (num_starts 1; 0.0081s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.008156s (num_starts 80; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.00862s (num_starts 80; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.0088s (num_starts 105; 0.0001s/start)
find_dominators.: 0.009188s (num_starts 10; 0.0009s/start)
populate_branch_affecting_locs.: 0.010864s (num_starts 2; 0.0054s/start)
compute_regions.: 0.011059s (num_starts 6; 0.0018s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.015485s (num_starts 80; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.016624s (num_starts 3; 0.0055s/start)
tfg_preprocess.dst.llvm.foo.: 0.018818s (num_starts 1; 0.0188s/start)
tfg::tfg_preprocess.: 0.01882s (num_starts 1; 0.0188s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.021022s (num_starts 108; 0.0002s/start)
main.2.: 0.02209s (num_starts 1; 0.0221s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.022706s (num_starts 3; 0.0076s/start)
get_tfg.: 0.024615s (num_starts 1; 0.0246s/start)
get_function_tfg_map.foo.: 0.024647s (num_starts 1; 0.0246s/start)
get_function_tfg_map.: 0.024649s (num_starts 1; 0.0246s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.026401s (num_starts 80; 0.0003s/start)
populate_loc_liveness.: 0.035209s (num_starts 2; 0.0176s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.036147s (num_starts 80; 0.0005s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.03759s (num_starts 83; 0.0005s/start)
avail_exprs_create_submap.: 0.038436s (num_starts 240; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.044486s (num_starts 971; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.045932s (num_starts 971; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.048169s (num_starts 80; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.053655s (num_starts 971; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.08243s (num_starts 1; 0.0824s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.097889s (num_starts 1; 0.0979s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.117021s (num_starts 80; 0.0015s/start)
ftmap_run_pointsto_analysis.: 0.232832s (num_starts 1; 0.2328s/start)
parse_consts_db.: 6.77829s (num_starts 1; 6.7783s/start)
main.: 7.08431s (num_starts 1; 7.0843s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file ind4.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 3 correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting select expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding node L3%5%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A2: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    5 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:21 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    5 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:21 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:23 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:23 : foo.A2 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:23 : Chosen product-TFG foo.A2 will be explored later...</MSG>
<MSG>0:23 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A3 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A3...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A3...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L3%8%bbentry ending at L3%8%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: Computing loop hoisting select expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: Computing loop hoisting non-linear expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: Adding node L3%8%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:23 : foo.A3: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: Adding edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A3: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A3: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A3: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
142043 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( sum(0, unit, prod(2147483648, ind(0, Indxform11, lambda(Lambda22, Lambda22), lambda(Lambda23, sum(0, unit, prod(1573078159, Indxform11)))))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
140495 : sum_is(140273, 140279) : BOOL             : false
142044 : or(142043, 140495) : BOOL                 : false

ce =
=counter_example_begin yices.ce8 addb46f46ca29ad5886f5ecc1e6859
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
4 : Indxform11 : BV:32
5 : Lambda22 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda23 : BV:32
8 : 1573078159 { 0x5dc3448f +1.52552974e60 } : BV:32
9 : prod(8, 4) : PROD[BV:32,BV:32]
10 : sum(1, 2, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(7, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 4, 6, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(3, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sum(1, 2, 13) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
15 : sym_const(14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=counter_example.random_seed
52945785
=counter_example_end


failcond-expr = or(not(true), sum_is(input.spec-%var-l-1, 1)):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_is(3, 4) : BOOL
6 : or(2, 5) : BOOL
</MSG>
<MSG>0:23 : foo.A3: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A3: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A3: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A3: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Failed correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
142043 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( sum(0, unit, prod(2147483648, ind(0, Indxform11, lambda(Lambda22, Lambda22), lambda(Lambda23, sum(0, unit, prod(1573078159, Indxform11)))))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
140495 : sum_is(140273, 140279) : BOOL             : false
142044 : or(142043, 140495) : BOOL                 : false

ce =
=counter_example_begin yices.ce8 addb46f46ca29ad5886f5ecc1e6859
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
4 : Indxform11 : BV:32
5 : Lambda22 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda23 : BV:32
8 : 1573078159 { 0x5dc3448f +1.52552974e60 } : BV:32
9 : prod(8, 4) : PROD[BV:32,BV:32]
10 : sum(1, 2, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(7, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 4, 6, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(3, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sum(1, 2, 13) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
15 : sym_const(14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=counter_example.random_seed
52945785
=counter_example_end


</MSG>
<MSG>0:23 : Discovered that the correlation was useless for the product-TFG foo.A3 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Adding node L0%0%d_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:23 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : foo.A1: Added the 3 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:23 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:23 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:23 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial1-prove3...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:z3v487.ce177
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:23 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:z3v487.ce177
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:23 : foo.A1 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1 (d:1, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG foo.A1: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1: Found 1 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1 created 1 possibilities in group foo.A1.B...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B1: Adding edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A1.B1: Propagated 5 out of 7 counter-examples across edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : foo.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:24 : foo.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:z3v487.ce177
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:24 : Added correlation to the product-TFG foo.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:z3v487.ce177
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:24 : foo.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:24 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:25 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:25 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce329      2.:cvc4.ce330      3.:z3v487.ce153      4.:z3v487.ce177      5.:z3v487.ce288
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce329      2.:cvc4.ce330      3.:z3v487.ce153      4.:z3v487.ce177      5.:z3v487.ce288
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce329      2.:cvc4.ce330      3.:z3v487.ce153      4.:z3v487.ce177      5.:z3v487.ce288
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce153      2.:cvc4.ce154
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A1.B1 (d:2, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : foo.A1.B1 (d:2, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:26 : Chosen product-TFG foo.A1.B1 will be explored later...</MSG>
<MSG>0:26 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG foo.A2 (d:1, s:0, sp: 3) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:26 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG foo.A2: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Considering 2 paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Found 2 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : product-TFG foo.A2: Found 2 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:27 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : foo.A2.B2: Added the 5 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:27 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:27 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:27 : foo.A2.B2: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : Added correlation to the product-TFG foo.A2.B2 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:27 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 9 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:29 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:29 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 9 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : foo.A2.B2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:30 : foo.A2.B2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:30 : product-TFG foo.A2.B2: Enumerating correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Attempting correlation of src pathset L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : product-TFG foo.A2.B2: Found 1 correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:30 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:30 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:30 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:30 : Creating ssa-path for the src-tfg path L3%5%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:30 : Adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:30 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:30 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:30 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Propagated 12 out of 18 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:30 : foo.A2.B2.C1: Added the 12 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:30 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:30 : Done adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:30 : Added correlation to the product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:30 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 7 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:30 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:30 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:30 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:30 : foo.A2.B2.C1 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:30 : foo.A2.B2.C1 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:30 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:30 : Checking equivalence proof...</MSG>
<MSG>0:30 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    9 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:z3v487.ce60      3.:z3v487.ce541      4.:cvc4.ce480      5.:z3v487.ce479      6.:cvc4.ce600      7.:z3v487.ce599      8.:z3v487.ce661
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce33      2.:cvc4.ce34
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 7 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 9.55s, query:smt.: 3.76409s (num_starts 88; 0.0428s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 8.29101s (num_starts 91; 0.0911s/start)ftmap_run_pointsto_analysis.: 0.182819s (num_starts 2; 0.0914s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 7e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 7e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 9e-06s (num_starts 9; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.1e-05s (num_starts 6; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1.3e-05s (num_starts 6; 0.0000s/start)
prove_trivial.: 1.5e-05s (num_starts 21; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.6e-05s (num_starts 6; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.6e-05s (num_starts 16; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2.1e-05s (num_starts 30; 0.0000s/start)
get_intersected_lr_status.: 3.2e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.2e-05s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 3.3e-05s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry.: 4.3e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 4.4e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 4.9e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 5.6e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 5.7e-05s (num_starts 18; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.5e-05s (num_starts 3; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 9e-05s (num_starts 23; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000105s (num_starts 11; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000107s (num_starts 48; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.00011s (num_starts 91; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry.: 0.000124s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000124s (num_starts 260; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000127s (num_starts 1; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000143s (num_starts 91; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000151s (num_starts 3; 0.0001s/start)
ce_perform_memory_fuzzing.: 0.000153s (num_starts 167; 0.0000s/start)
get_lr_status_for_loc_ids.: 0.000154s (num_starts 48; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.000158s (num_starts 3; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000158s (num_starts 3; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000174s (num_starts 7; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000177s (num_starts 3; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000198s (num_starts 13; 0.0000s/start)
populate_locid2expr_map.: 0.000201s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000207s (num_starts 103; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000212s (num_starts 18; 0.0000s/start)
lr_status_meet.: 0.000214s (num_starts 265; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00023s (num_starts 70; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000237s (num_starts 3; 0.0001s/start)
expr_is_hidden_reg.: 0.000244s (num_starts 290; 0.0000s/start)
compute_sprel_relations.: 0.000245s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000248s (num_starts 12; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000255s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000258s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.00026s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.000295s (num_starts 302; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000345s (num_starts 12; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000346s (num_starts 2; 0.0002s/start)
graph_locs_add_all_local_vars.: 0.000356s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000381s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000382s (num_starts 1; 0.0004s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000383s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000383s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000384s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000386s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000389s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000404s (num_starts 1; 0.0004s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000434s (num_starts 9; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000463s (num_starts 30; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000486s (num_starts 126; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000501s (num_starts 126; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000507s (num_starts 4; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00051s (num_starts 56; 0.0000s/start)
create_closure_matrix.: 0.000547s (num_starts 61; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000556s (num_starts 12; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000608s (num_starts 4; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000626s (num_starts 4; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.00064s (num_starts 58; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000651s (num_starts 1; 0.0007s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000686s (num_starts 12; 0.0001s/start)
get_sprel_map_pair.: 0.000712s (num_starts 72; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000754s (num_starts 3; 0.0003s/start)
graph_with_guessing_sync_preds.: 0.000762s (num_starts 91; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000788s (num_starts 1; 0.0008s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000805s (num_starts 24; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000824s (num_starts 2; 0.0004s/start)
populate_simplified_to_state.: 0.00084s (num_starts 3; 0.0003s/start)
graph_locs_add_all_specvars.: 0.000845s (num_starts 2; 0.0004s/start)
tfg::populate_loc_definedness.before_solve.: 0.00085s (num_starts 3; 0.0003s/start)
proof_query_is_trivial.: 0.000855s (num_starts 91; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000863s (num_starts 1; 0.0009s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000904s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.000907s (num_starts 1; 0.0009s/start)
removeMostPromising.: 0.000933s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001018s (num_starts 1; 0.0010s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.001034s (num_starts 118; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001157s (num_starts 18; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001181s (num_starts 336; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001205s (num_starts 3; 0.0004s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001222s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001283s (num_starts 3; 0.0004s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.001353s (num_starts 52; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.00137s (num_starts 15; 0.0001s/start)
ldr_decomposition.: 0.001404s (num_starts 48; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001413s (num_starts 4; 0.0004s/start)
expr_represents_llvm_undef.: 0.001426s (num_starts 306; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.001436s (num_starts 61; 0.0000s/start)
identify_address_taken_local_variables.: 0.001439s (num_starts 1; 0.0014s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001451s (num_starts 57; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001528s (num_starts 6; 0.0003s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001671s (num_starts 18; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001725s (num_starts 11; 0.0002s/start)
set_result_and_counter_example.: 0.001755s (num_starts 88; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001794s (num_starts 58; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001807s (num_starts 2; 0.0009s/start)
find_dominators.: 0.001877s (num_starts 32; 0.0001s/start)
collect_assumes_around_edge.: 0.001885s (num_starts 6; 0.0003s/start)
graph_identify_back_edges.: 0.00196s (num_starts 28; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.002074s (num_starts 2; 0.0010s/start)
graph_identify_natural_loops.: 0.002176s (num_starts 28; 0.0001s/start)
get_unrolled_loop_paths_from.: 0.002192s (num_starts 3; 0.0007s/start)
construct_linear_combination_exprs.: 0.002195s (num_starts 61; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002225s (num_starts 4; 0.0006s/start)
compute_vars_reaching_definitions.: 0.002318s (num_starts 2; 0.0012s/start)
populate_simplified_assets.: 0.002598s (num_starts 6; 0.0004s/start)
populate_branch_affecting_locs.: 0.002714s (num_starts 3; 0.0009s/start)
pth_collect_preds_using_atom_func.: 0.002937s (num_starts 52; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.002942s (num_starts 56; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.003072s (num_starts 118; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.003077s (num_starts 56; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003109s (num_starts 4; 0.0008s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.003197s (num_starts 58; 0.0001s/start)
graph_visit_exprs.: 0.003252s (num_starts 3; 0.0011s/start)
populate_transitive_closure.: 0.003282s (num_starts 37; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003349s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003349s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003352s (num_starts 1; 0.0034s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003364s (num_starts 81; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.003369s (num_starts 70; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.003512s (num_starts 56; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.003561s (num_starts 2; 0.0018s/start)
tfg_edge_composition_get_assumes.: 0.003744s (num_starts 52; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.003864s (num_starts 663; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.004089s (num_starts 72; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.004242s (num_starts 55; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.004411s (num_starts 61; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.004435s (num_starts 3; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.004615s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.004618s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.00462s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.004622s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.004625s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.00463s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.004668s (num_starts 1; 0.0047s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.004759s (num_starts 1; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.004763s (num_starts 1; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.004766s (num_starts 1; 0.0048s/start)
aliasing_constraints.convert_to_expr.: 0.004897s (num_starts 118; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005439s (num_starts 1; 0.0054s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005439s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005442s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005446s (num_starts 1; 0.0054s/start)
compute_regions.: 0.005548s (num_starts 28; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005713s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005715s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005716s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00572s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.005723s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.005729s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.005813s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.005817s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-trivial.: 0.005818s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.00582s (num_starts 1; 0.0058s/start)
get_next_potential_correlations.: 0.00582s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.005827s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.00583s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.005835s (num_starts 1; 0.0058s/start)
predicate_canonicalized.: 0.005913s (num_starts 61; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.0061s (num_starts 48; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.006109s (num_starts 95; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.006194s (num_starts 306; 0.0000s/start)
bv_linear_solve.: 0.006832s (num_starts 48; 0.0001s/start)
propagate_nodece_across_edge.: 0.006879s (num_starts 16; 0.0004s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.007047s (num_starts 3; 0.0023s/start)
query:bv_solve.: 0.007103s (num_starts 48; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.00734s (num_starts 214; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.007537s (num_starts 5; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.007544s (num_starts 5; 0.0015s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.007655s (num_starts 5; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007848s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007859s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00786s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007869s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.007882s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007899s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.008431s (num_starts 6; 0.0014s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.008529s (num_starts 3; 0.0028s/start)
gen_pred_from_coeff_row.simplify.: 0.008534s (num_starts 61; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.008562s (num_starts 147; 0.0001s/start)
collect_assumes_around_path_helper.: 0.009034s (num_starts 126; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.009063s (num_starts 48; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.009232s (num_starts 1; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-trivial.: 0.009236s (num_starts 1; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.00924s (num_starts 1; 0.0092s/start)
graph_with_paths::collect_assumes_around_path.: 0.009372s (num_starts 126; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.009492s (num_starts 1; 0.0095s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-trivial.: 0.009496s (num_starts 1; 0.0095s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.009499s (num_starts 1; 0.0095s/start)
do_ssa_transformation.: 0.010127s (num_starts 2; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.010303s (num_starts 3; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-trivial.: 0.010314s (num_starts 3; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.01032s (num_starts 3; 0.0034s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.01045s (num_starts 1; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.010452s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.010459s (num_starts 1; 0.0105s/start)
bvsolve_cache_query.miss1.: 0.010576s (num_starts 48; 0.0002s/start)
tfg::get_aliasing_constraints_for_edge.: 0.010593s (num_starts 139; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010991s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010998s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.011008s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.011019s (num_starts 3; 0.0037s/start)
bvsolve_cache_query.: 0.01107s (num_starts 48; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.011395s (num_starts 52; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.011619s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-trivial.: 0.013594s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.013595s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.013598s (num_starts 1; 0.0136s/start)
solve_for_bv_points.: 0.013636s (num_starts 48; 0.0003s/start)
expr_substitute_using_available_exprs_submap.: 0.01373s (num_starts 245; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014325s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.014405s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.015123s (num_starts 2; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015654s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015657s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.015661s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015877s (num_starts 1; 0.0159s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015879s (num_starts 1; 0.0159s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.015882s (num_starts 1; 0.0159s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.016197s (num_starts 48; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017142s (num_starts 1; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017148s (num_starts 1; 0.0171s/start)
lhs_set_sort.: 0.017482s (num_starts 70; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017913s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017914s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.018062s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-trivial.: 0.018291s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.018299s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.018608s (num_starts 8; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.019246s (num_starts 2; 0.0096s/start)
get_unrolled_paths_from.: 0.019398s (num_starts 20; 0.0010s/start)
graph_to_stream.: 0.019735s (num_starts 4; 0.0049s/start)
gen_pred_from_coeff_row.: 0.019984s (num_starts 61; 0.0003s/start)
compute_preds_for_bv_points.: 0.020292s (num_starts 25; 0.0008s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.020444s (num_starts 34; 0.0006s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.02065s (num_starts 52; 0.0004s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-trivial.: 0.020745s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.02075s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.02075s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.020754s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.020759s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020862s (num_starts 1; 0.0209s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020864s (num_starts 1; 0.0209s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020992s (num_starts 1; 0.0210s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020995s (num_starts 1; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020998s (num_starts 1; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021001s (num_starts 1; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.021006s (num_starts 1; 0.0210s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.021016s (num_starts 1; 0.0210s/start)
query:convert_to_z3.: 0.021089s (num_starts 316; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.021405s (num_starts 2; 0.0107s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.021413s (num_starts 2; 0.0107s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.021708s (num_starts 118; 0.0002s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.021969s (num_starts 265; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.022333s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.022344s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.022348s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.022366s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.022376s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.022392s (num_starts 4; 0.0056s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.022395s (num_starts 265; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.022434s (num_starts 118; 0.0002s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.022659s (num_starts 192; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.022686s (num_starts 2; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.022691s (num_starts 2; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.022936s (num_starts 4; 0.0057s/start)
compute_lr_status_for_expr.: 0.023538s (num_starts 350; 0.0001s/start)
query:convert_from_z3.: 0.0241s (num_starts 316; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.024296s (num_starts 24; 0.0010s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024348s (num_starts 1; 0.0243s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024352s (num_starts 1; 0.0244s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.024358s (num_starts 24; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024365s (num_starts 1; 0.0244s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.025797s (num_starts 22; 0.0012s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.025966s (num_starts 23; 0.0011s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.026151s (num_starts 922; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.026561s (num_starts 110; 0.0002s/start)
check_node_stability_after_CE_addition.: 0.026635s (num_starts 76; 0.0004s/start)
compute_expr_eqclasses_at_pc.: 0.026648s (num_starts 3; 0.0089s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.027262s (num_starts 5; 0.0055s/start)
cg_add_node.: 0.02743s (num_starts 5; 0.0055s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.027815s (num_starts 3; 0.0093s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.02799s (num_starts 52; 0.0005s/start)
collect_aliasing_constraints_around_path_helper.: 0.028497s (num_starts 132; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.028578s (num_starts 1; 0.0286s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.028581s (num_starts 1; 0.0286s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.028587s (num_starts 1; 0.0286s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.028591s (num_starts 1; 0.0286s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.028688s (num_starts 52; 0.0006s/start)
collect_aliasing_constraints_around_path.: 0.029027s (num_starts 84; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.02921s (num_starts 2; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.029216s (num_starts 2; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned.: 0.029265s (num_starts 2; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.030112s (num_starts 3; 0.0100s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.030156s (num_starts 21; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-trivial.: 0.030288s (num_starts 2; 0.0151s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.030296s (num_starts 2; 0.0151s/start)
create_new_corr_graph_edge.new_node.: 0.030548s (num_starts 4; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.030715s (num_starts 2; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.030722s (num_starts 2; 0.0154s/start)
create_new_corr_graph_edge.: 0.030836s (num_starts 6; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031136s (num_starts 1; 0.0311s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031139s (num_starts 1; 0.0311s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031141s (num_starts 1; 0.0311s/start)
populate_loc_liveness.: 0.031405s (num_starts 3; 0.0105s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.033343s (num_starts 9; 0.0037s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03356s (num_starts 2; 0.0168s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033768s (num_starts 1; 0.0338s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033771s (num_starts 1; 0.0338s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.034833s (num_starts 2; 0.0174s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.034851s (num_starts 2; 0.0174s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.034859s (num_starts 2; 0.0174s/start)
counter_example_satisfies_preds.: 0.036512s (num_starts 491; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.036857s (num_starts 8; 0.0046s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.038377s (num_starts 3; 0.0128s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.03846s (num_starts 7; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.039224s (num_starts 2; 0.0196s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.039229s (num_starts 2; 0.0196s/start)
compute_new_lr_status_on_locs.: 0.039948s (num_starts 52; 0.0008s/start)
avail_exprs_create_submap.: 0.040427s (num_starts 156; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lwhile.cond%1%bbentry.inductive-invariants.: 0.040505s (num_starts 9; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.041632s (num_starts 3; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.041642s (num_starts 3; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.042402s (num_starts 1; 0.0424s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.043708s (num_starts 8; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.04387s (num_starts 3; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044261s (num_starts 2; 0.0221s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044263s (num_starts 2; 0.0221s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.044268s (num_starts 2; 0.0221s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.044276s (num_starts 2; 0.0221s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.045174s (num_starts 1; 0.0452s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.045476s (num_starts 3; 0.0152s/start)
tfg_postprocess_after_pointsto_analysis.: 0.046353s (num_starts 2; 0.0232s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.047076s (num_starts 2; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.047291s (num_starts 4; 0.0118s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.047515s (num_starts 1480; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.049635s (num_starts 2; 0.0248s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.049639s (num_starts 2; 0.0248s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053366s (num_starts 2; 0.0267s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05337s (num_starts 2; 0.0267s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053383s (num_starts 2; 0.0267s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053387s (num_starts 2; 0.0267s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053725s (num_starts 2; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053733s (num_starts 2; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053737s (num_starts 2; 0.0269s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.055138s (num_starts 3; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058092s (num_starts 2; 0.0290s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.058098s (num_starts 2; 0.0290s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.059904s (num_starts 4; 0.0150s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.060376s (num_starts 110; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.061447s (num_starts 3; 0.0205s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned.: 0.061458s (num_starts 3; 0.0205s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.061695s (num_starts 3; 0.0206s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.062136s (num_starts 3; 0.0207s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.062487s (num_starts 6; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.062987s (num_starts 3; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned.: 0.062997s (num_starts 3; 0.0210s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.063017s (num_starts 3; 0.0210s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.063661s (num_starts 3; 0.0212s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.064303s (num_starts 8; 0.0080s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065112s (num_starts 3; 0.0217s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065116s (num_starts 3; 0.0217s/start)
query:simplify-z3.: 0.066726s (num_starts 660; 0.0001s/start)
counter_example_falsifies_preds.: 0.071455s (num_starts 81; 0.0009s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.071469s (num_starts 2; 0.0357s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.075088s (num_starts 4; 0.0188s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.076173s (num_starts 52; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.081991s (num_starts 3; 0.0273s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.081998s (num_starts 3; 0.0273s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.082011s (num_starts 3; 0.0273s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.082554s (num_starts 24; 0.0034s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.083136s (num_starts 11; 0.0076s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.085931s (num_starts 5; 0.0172s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.085947s (num_starts 5; 0.0172s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.08739s (num_starts 1538; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.088016s (num_starts 1480; 0.0001s/start)
graph_ec_apply_trans_funs_helper.0.: 0.092517s (num_starts 399; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.09405s (num_starts 403; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.094162s (num_starts 392; 0.0002s/start)
collect_inductive_preds_around_path.: 0.094197s (num_starts 91; 0.0010s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.094837s (num_starts 403; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.095045s (num_starts 392; 0.0002s/start)
tfg_relax_pointsto_vals_on_edge.: 0.096922s (num_starts 28; 0.0035s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.100177s (num_starts 15; 0.0067s/start)
compute_z3_expr.: 0.101155s (num_starts 404; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.103848s (num_starts 110; 0.0009s/start)
edge_composition_apply_trans_funs_on_pred.: 0.104165s (num_starts 91; 0.0011s/start)
counter_example_evaluate_preds.: 0.106671s (num_starts 572; 0.0002s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.107879s (num_starts 108; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.108426s (num_starts 4; 0.0271s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.108437s (num_starts 4; 0.0271s/start)
put_smtlib_string_in_file.: 0.113909s (num_starts 176; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.118431s (num_starts 5; 0.0237s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry).: 0.120626s (num_starts 10; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.124844s (num_starts 4; 0.0312s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.125097s (num_starts 1480; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.125589s (num_starts 24; 0.0052s/start)
check_wfconds_on_edge.: 0.1336s (num_starts 11; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.140029s (num_starts 6; 0.0233s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.140732s (num_starts 3; 0.0469s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.140739s (num_starts 3; 0.0469s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.140973s (num_starts 15; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.159061s (num_starts 6; 0.0265s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown.: 0.159084s (num_starts 6; 0.0265s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.164789s (num_starts 3; 0.0549s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166472s (num_starts 6; 0.0277s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.178163s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.178165s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.178167s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.178169s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.178176s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate.: 0.178181s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.178188s (num_starts 1; 0.1782s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.181075s (num_starts 11; 0.0165s/start)
ftmap_run_pointsto_analysis.: 0.182819s (num_starts 2; 0.0914s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183111s (num_starts 4; 0.0458s/start)
tfg_run_pointsto_analysis.: 0.183215s (num_starts 2; 0.0916s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.184017s (num_starts 2; 0.0920s/start)
tfg_populate_structs_after_ssa_construction.: 0.18988s (num_starts 2; 0.0949s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.196757s (num_starts 1; 0.1968s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.196759s (num_starts 1; 0.1968s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.196768s (num_starts 1; 0.1968s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.196771s (num_starts 1; 0.1968s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.201818s (num_starts 2; 0.1009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.206211s (num_starts 8; 0.0258s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.211797s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.211799s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.211801s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.211802s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.211808s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.211811s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.211817s (num_starts 1; 0.2118s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.212229s (num_starts 2; 0.1061s/start)
parse_cvc4_model.: 0.223068s (num_starts 45; 0.0050s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.246213s (num_starts 70; 0.0035s/start)
corr_graph::add_edge().: 0.253666s (num_starts 6; 0.0423s/start)
decide_hoare_triple_helper;-trivial.: 0.267912s (num_starts 42; 0.0064s/start)
check_equivalence_proof.: 0.277976s (num_starts 1; 0.2780s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.286252s (num_starts 6; 0.0477s/start)
corr_graph_add_correlation.: 0.286465s (num_starts 6; 0.0477s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.287571s (num_starts 70; 0.0041s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.294225s (num_starts 6; 0.0490s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.303645s (num_starts 235; 0.0013s/start)
apply_mask_and_overlay_array_constant.: 0.31855s (num_starts 235; 0.0014s/start)
guarded_predicate_set_and.: 0.321805s (num_starts 118; 0.0027s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%bbentry_Lwhile.cond%1%bbentry.inductive-invariants.: 0.323736s (num_starts 18; 0.0180s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.32675s (num_starts 19; 0.0172s/start)
check_preds_on_edge_compositions.: 0.342929s (num_starts 14; 0.0245s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.345282s (num_starts 53; 0.0065s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.345845s (num_starts 76; 0.0046s/start)
parse_z3_model.: 0.35145s (num_starts 46; 0.0076s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.394694s (num_starts 48; 0.0082s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.395195s (num_starts 70; 0.0056s/start)
parse_yices_model.: 0.421054s (num_starts 46; 0.0092s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.427341s (num_starts 13; 0.0329s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.441929s (num_starts 1; 0.4419s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.441929s (num_starts 1; 0.4419s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.44194s (num_starts 1; 0.4419s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.441945s (num_starts 1; 0.4419s/start)
counter_example_translate_on_edge_composition_helper.: 0.477088s (num_starts 469; 0.0010s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.62932s (num_starts 1; 0.6293s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.629326s (num_starts 1; 0.6293s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.629333s (num_starts 1; 0.6293s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.629336s (num_starts 1; 0.6293s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.629348s (num_starts 1; 0.6293s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.629354s (num_starts 1; 0.6294s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.62936s (num_starts 1; 0.6294s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon).: 0.629365s (num_starts 1; 0.6294s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.638676s (num_starts 2; 0.3193s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.638731s (num_starts 2; 0.3194s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.660151s (num_starts 1; 0.6602s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.660153s (num_starts 1; 0.6602s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.660158s (num_starts 1; 0.6602s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.660161s (num_starts 1; 0.6602s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.670493s (num_starts 4; 0.1676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown.: 0.670505s (num_starts 4; 0.1676s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.670528s (num_starts 4; 0.1676s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.674286s (num_starts 3; 0.2248s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.678929s (num_starts 320; 0.0021s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.724768s (num_starts 6; 0.1208s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon).: 0.745728s (num_starts 8; 0.0932s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.78903s (num_starts 3; 0.2630s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.789035s (num_starts 3; 0.2630s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.796614s (num_starts 8; 0.0996s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.796634s (num_starts 8; 0.0996s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.806146s (num_starts 4; 0.2015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.814756s (num_starts 10; 0.0815s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.814765s (num_starts 2; 0.4074s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.814769s (num_starts 2; 0.4074s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-all-proof-path-optimizations.: 0.814781s (num_starts 2; 0.4074s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.814786s (num_starts 2; 0.4074s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.8426s (num_starts 3; 0.2809s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.923249s (num_starts 6; 0.1539s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown.: 0.923266s (num_starts 6; 0.1539s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.981411s (num_starts 8; 0.1227s/start)
read_counter_examples_from_channel.: 1.00476s (num_starts 46; 0.0218s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 1.20651s (num_starts 3; 0.4022s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.23394s (num_starts 15; 0.0823s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.43363s (num_starts 4; 0.3584s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.43366s (num_starts 4; 0.3584s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.43368s (num_starts 4; 0.3584s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 1.44321s (num_starts 5; 0.2886s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear.: 1.44322s (num_starts 5; 0.2886s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 1.44325s (num_starts 5; 0.2887s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.47981s (num_starts 4; 0.3700s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.4799s (num_starts 4; 0.3700s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.: 1.48497s (num_starts 3; 0.4950s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.48733s (num_starts 6; 0.2479s/start)
ce_reconcile_sorts_and_values.: 1.4922s (num_starts 137; 0.0109s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 1.50351s (num_starts 4; 0.3759s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 1.50367s (num_starts 4; 0.3759s/start)
decide_hoare_triple.: 1.51293s (num_starts 6; 0.2522s/start)
dst_edge_composition_proves_false.: 1.52719s (num_starts 4; 0.3818s/start)
get_next_dst_edge_composition_to_correlate.: 1.53895s (num_starts 5; 0.3078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.93554s (num_starts 8; 0.2419s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.9356s (num_starts 8; 0.2419s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.93562s (num_starts 8; 0.2420s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 1.96642s (num_starts 10; 0.1966s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 1.96646s (num_starts 10; 0.1966s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.97494s (num_starts 25; 0.0790s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 1.99575s (num_starts 12; 0.1663s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 2.06794s (num_starts 25; 0.0827s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.14974s (num_starts 13; 0.1654s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry).: 2.18475s (num_starts 15; 0.1457s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 2.28837s (num_starts 3; 0.7628s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 2.29155s (num_starts 28; 0.0818s/start)
query:smt.: 3.76409s (num_starts 88; 0.0428s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.17537s (num_starts 16; 0.2610s/start)
decide_hoare_triple_helper;per-query-type;linear.: 4.27606s (num_starts 31; 0.1379s/start)
spawn_smt_query.: 4.7701s (num_starts 88; 0.0542s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.51633s (num_starts 45; 0.1448s/start)
solver_provable.: 6.71936s (num_starts 118; 0.0569s/start)
solver_satisfiable-cache-miss.: 6.74859s (num_starts 88; 0.0767s/start)
solver_satisfiable.: 6.74985s (num_starts 119; 0.0567s/start)
expr_is_provable.: 6.76795s (num_starts 118; 0.0574s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 6.77066s (num_starts 118; 0.0574s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 6.77695s (num_starts 118; 0.0574s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 6.78467s (num_starts 118; 0.0575s/start)
update_invariant_state_for_edges.: 7.06688s (num_starts 6; 1.1778s/start)
cg_check_new_cg_ec.: 7.07521s (num_starts 6; 1.1792s/start)
correl_entry_apply.: 7.07545s (num_starts 6; 1.1792s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 7.11166s (num_starts 118; 0.0603s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 7.12381s (num_starts 118; 0.0604s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 7.12602s (num_starts 118; 0.0604s/start)
is_expr_equal_using_lhs_set_and_precond.: 7.51844s (num_starts 70; 0.1074s/start)
prove.: 7.51891s (num_starts 70; 0.1074s/start)
prove_spawn_and_join_helper.: 7.51921s (num_starts 70; 0.1074s/start)
prove_spawn_and_join.: 7.99623s (num_starts 70; 0.1142s/start)
prove_wrapper.proof_query_not_trivial.: 8.00374s (num_starts 70; 0.1143s/start)
prove_wrapper.: 8.06741s (num_starts 91; 0.0887s/start)
decide_hoare_triple_check_ub.: 8.17695s (num_starts 91; 0.0899s/start)
decide_hoare_triple_helper.: 8.29101s (num_starts 91; 0.0911s/start)
expandProductCFG.: 8.62083s (num_starts 7; 1.2315s/start)
decide_hoare_triple_with_alias_cons.: 8.68694s (num_starts 91; 0.0955s/start)
bestFirstSearch.: 8.98017s (num_starts 1; 8.9802s/start)
Time taken for equivalence check.: 9.26209s (num_starts 1; 9.2621s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 16
# of paths expanded.: 6
# of queries to linear solver.: 48
# of smt-solver-queries.: 88
L0%0%d=>Lwhile.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lwhile.cond%1%bbentry-src_to_pcs.: 3
Lwhile.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lwhile.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_ecs.: 2
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_to_pcs.: 1
num-backtrackings.: 2
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 10
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 8
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 11
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 31
smt-queries-cvc4-sat.: 45
smt-queries-yices-sat.: 46
smt-queries-z3-sat.: 46
total-correlation-possibilities.: 8
total-correlation-possibilities-mod-lsprels.: 8
total-correlations-explored.: 7

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 9
final-CG-counterexamples-total-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 18
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 6
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.89
final-CG-time-to-total-time-ratio.: 0.54
query-time-to-total-time-ratio.: 0.41

Context stats:
exprs: count: 151228
sorts: count: 8234
num_proof_queries: 70
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7887
	        hit ratio:	0.977178
m_simplify_solver:
	----------- total:	1731
	        hit ratio:	0.801271
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	154
	        hit ratio:	0.714286
m_z3_solver_substitution:
	----------- total:	344
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	344
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	40
	        hit ratio:	0.975
m_expr_size:
	----------- total:	5885
	        hit ratio:	0.923534
m_contains_only_constants_or_sp_versions:
	----------- total:	12
	        hit ratio:	0.833333
m_expr_evaluates_to_constant_visitor:
	----------- total:	14728
	        hit ratio:	0.699212
m_sort_dfa_canonicalize:
	----------- total:	95953
	        hit ratio:	0.957677
m_expr_convert_to_iexpr:
	----------- total:	3937
	        hit ratio:	0.660147

z3_solver expr_query_cache entry size: 88
	----------- total:	119
	             hits:	31
	        hit ratio:	0.260504
histogram (time taken by solver in ms):
[  4.4950,   6.5547) (avg.   5.7114)     : 15
[  6.5547,   9.5583) (avg.   7.9093)     : 19
[  9.5583,  13.9382) (avg.  10.8824)     : 8
[ 13.9382,  20.3251) (avg.   0.0000)     : 0
[ 20.3251,  29.6386) (avg.  27.6410)     : 2
[ 29.6386,  43.2199) (avg.  39.1484)     : 8
[ 43.2199,  63.0245) (avg.  52.7647)     : 16
[ 63.0245,  91.9042) (avg.  71.4372)     : 10
[ 91.9042, 134.0174) (avg. 106.4770)     : 4
[134.0174, 195.4280) (avg. 181.1715)     : 6
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  87) (avg.  40)                    : 1
[ 87, 134) (avg. 117)                    : 15
[134, 181) (avg. 156)                    : 15
[181, 228) (avg. 200)                    : 14
[228, 275) (avg. 249)                    : 21
[275, 322) (avg. 294)                    : 12
[322, 369) (avg. 339)                    : 9
[369, 416) (avg.   0)                    : 0
[416, 463) (avg.   0)                    : 0
[463, 509) (avg. 499)                    : 1
Top 10 highest time taking queries:
1. [0.194s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.192s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
3. [0.180s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-25-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
4. [0.176s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
5. [0.173s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
6. [0.172s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-25-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
7. [0.133s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
8. [0.103s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.2
9. [0.095s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-10-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
10. [0.095s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0

<MSG>0:30 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 111 time spent: 0:0:0 [0.002615s total; 0.000024 per start]
tfg_computeWP: num_starts 468 time spent: 0:0:0 [0.085059s total; 0.000182 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1322 time spent: 0:0:0 [0.002163s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1173 time spent: 0:0:0 [0.001906s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 494 time spent: 0:0:0 [0.000914s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 53 time spent: 0:0:0 [0.110122s total; 0.002078 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.247611s total; 0.020634 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 381 time spent: 0:0:0 [0.442437s total; 0.001161 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 122 time spent: 0:0:0 [0.105969s total; 0.000869 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 351 time spent: 0:0:0 [0.391145s total; 0.001114 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 2072 time spent: 0:0:0 [0.474451s total; 0.000229 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 351 time spent: 0:0:0 [0.032297s total; 0.000092 per start]
tfg_graph_get_vars_written_on_edge: num_starts 351 time spent: 0:0:0 [0.011991s total; 0.000034 per start]
cg_with_rank_add_CE_at_pc: num_starts 76 time spent: 0:0:0 [0.102737s total; 0.001352 per start]
graph_with_ce_add_CE_at_pc: num_starts 40 time spent: 0:0:0 [0.000920s total; 0.000023 per start]
graph_with_guessing_add_CE_at_pc: num_starts 76 time spent: 0:0:0 [0.101855s total; 0.001340 per start]
point_set_add_point_using_CE: num_starts 144 time spent: 0:0:0 [0.027040s total; 0.000188 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 144 time spent: 0:0:0 [0.027512s total; 0.000191 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 53 time spent: 0:0:0 [0.073869s total; 0.001394 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 53 time spent: 0:0:0 [0.045472s total; 0.000858 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2760 time spent: 0:0:0 [0.158765s total; 0.000058 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 171 time spent: 0:0:0 [0.015820s total; 0.000093 per start]
expr_simplify_solver: num_starts 1791 time spent: 0:0:0 [0.163216s total; 0.000091 per start]
expr_simplify_syntactic: num_starts 1843 time spent: 0:0:0 [0.462642s total; 0.000251 per start]
expr_simplify_select_on_store: num_starts 160 time spent: 0:0:0 [0.428665s total; 0.002679 per start]
expr_simplify_using_lhs_set_helper: num_starts 384 time spent: 0:0:0 [0.714615s total; 0.001861 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 3324 time spent: 0:0:0 [0.710633s total; 0.000214 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 2291 time spent: 0:0:0 [0.010825s total; 0.000005 per start]
expr_simplify_eq: num_starts 584 time spent: 0:0:0 [0.006368s total; 0.000011 per start]
expr_simplify_or: num_starts 16 time spent: 0:0:0 [0.000021s total; 0.000001 per start]
expr_simplify_and: num_starts 141 time spent: 0:0:0 [0.000877s total; 0.000006 per start]
expr_simplify_not: num_starts 34 time spent: 0:0:0 [0.000123s total; 0.000004 per start]
expr_simplify_implies: num_starts 112 time spent: 0:0:0 [0.001063s total; 0.000009 per start]
expr_simplify_ite: num_starts 66 time spent: 0:0:0 [0.003336s total; 0.000051 per start]
canonicalize_expr_tree: num_starts 379 time spent: 0:0:0 [0.039856s total; 0.000105 per start]
expr_simplify_memalloc_using_memlabel: num_starts 151 time spent: 0:0:0 [0.000448s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 160 time spent: 0:0:0 [0.424407s total; 0.002653 per start]
get_arithmetic_addsub_atoms: num_starts 3265 time spent: 0:0:0 [0.001721s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 788 time spent: 0:0:0 [0.008208s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 405 time spent: 0:0:0 [0.000311s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 8213 time spent: 0:0:0 [0.555016s total; 0.000068 per start]
expr_do_simplify_helper_cache: num_starts 8213 time spent: 0:0:0 [0.007653s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 22 time spent: 0:0:0 [0.000011s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 22 time spent: 0:0:0 [0.000085s total; 0.000004 per start]
evaluate_expr_and_check_bounds: num_starts 1295 time spent: 0:0:0 [0.489907s total; 0.000378 per start]
array_constant_equals: num_starts 27659 time spent: 0:0:0 [0.031817s total; 0.000001 per start]
sort_dfa_canonical: num_starts 238721 time spent: 0:0:1 [1.587339s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 3946 time spent: 0:0:0 [0.616533s total; 0.000156 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.125550s total; 0.005231 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.082486s total; 0.003437 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.003237s total; 0.000092 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000044s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 104 time spent: 0:0:0 [0.035776s total; 0.000344 per start]
compute_simplified_loc_exprs_for_edge: num_starts 260 time spent: 0:0:0 [0.114436s total; 0.000440 per start]
compute_locs_definitely_written_on_edge: num_starts 104 time spent: 0:0:0 [0.000299s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.006846s total; 0.000221 per start]
edge_update_memlabel_map_for_mlvars: num_starts 52 time spent: 0:0:0 [0.011495s total; 0.000221 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.062444s total; 0.002602 per start]
expand_locset_to_include_slots_for_memmask: num_starts 55 time spent: 0:0:0 [0.000229s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:37 [37.233811s total; 37.233811 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 9.56s.
ftmap_run_pointsto_analysis.: 0.182819s (num_starts 2; 0.0914s/start)s.
EQ Time after pointsto analysis: 9.38013s.
EQ Time after pointsto analysis and smt_query: 1.31272s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.30165s.
Equivalence proof found. The programs are equivalent.
