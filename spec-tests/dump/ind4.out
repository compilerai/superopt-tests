argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=10
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind4.proof
argv[9] = --spec-iospecs=ind4.iospecs
argv[10] = ind4.spec
argv[11] = ind4.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.3791896
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind4.c
argv[10] = -o
argv[11] = par_tmpdir/ind4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind4.spec.etfg
argv[11] = par_tmpdir/ind4.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind4.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 108 time spent: 0:0:0 [0.000214s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 105 time spent: 0:0:0 [0.000194s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 971 time spent: 0:0:0 [0.006590s total; 0.000007 per start]
expr_simplify_solver: num_starts 79 time spent: 0:0:0 [0.009336s total; 0.000118 per start]
expr_simplify_syntactic: num_starts 79 time spent: 0:0:0 [0.025720s total; 0.000326 per start]
expr_simplify_select_on_store: num_starts 8 time spent: 0:0:0 [0.022946s total; 0.002868 per start]
expr_simplify_using_lhs_set_helper: num_starts 83 time spent: 0:0:0 [0.040476s total; 0.000488 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 260 time spent: 0:0:0 [0.040195s total; 0.000155 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 67 time spent: 0:0:0 [0.000365s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000058s total; 0.000019 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000012s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 51 time spent: 0:0:0 [0.000996s total; 0.000020 per start]
expr_simplify_memalloc_using_memlabel: num_starts 5 time spent: 0:0:0 [0.000014s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.022692s total; 0.002837 per start]
get_arithmetic_addsub_atoms: num_starts 63 time spent: 0:0:0 [0.000077s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 135 time spent: 0:0:0 [0.001625s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 1225 time spent: 0:0:0 [0.000786s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2233 time spent: 0:0:0 [0.042724s total; 0.000019 per start]
expr_do_simplify_helper_cache: num_starts 2233 time spent: 0:0:0 [0.001641s total; 0.000001 per start]
array_constant_equals: num_starts 19 time spent: 0:0:0 [0.000045s total; 0.000002 per start]
sort_dfa_canonical: num_starts 143949 time spent: 0:0:1 [1.256530s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 6 time spent: 0:0:0 [0.001774s total; 0.000296 per start]
combo_dfa_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.124271s total; 0.001553 per start]
alias_val_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.037920s total; 0.000474 per start]
get_sprel_map_from_avail_exprs: num_starts 106 time spent: 0:0:0 [0.014452s total; 0.000136 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000134s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 160 time spent: 0:0:0 [0.010684s total; 0.000067 per start]
compute_simplified_loc_exprs_for_edge: num_starts 453 time spent: 0:0:0 [0.049391s total; 0.000109 per start]
compute_locs_definitely_written_on_edge: num_starts 160 time spent: 0:0:0 [0.000094s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 49 time spent: 0:0:0 [0.006918s total; 0.000141 per start]
edge_update_memlabel_map_for_mlvars: num_starts 80 time spent: 0:0:0 [0.001385s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 80 time spent: 0:0:0 [0.026549s total; 0.000332 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000262s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 0s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 7e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 2.1e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 2.3e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.7e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 3.3e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.3e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.1e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4.8e-05s (num_starts 53; 0.0000s/start)
lr_status_meet.: 5.6e-05s (num_starts 61; 0.0000s/start)
expr_is_callee_save_const.: 6.4e-05s (num_starts 57; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9.8e-05s (num_starts 2; 0.0000s/start)
main.3.: 0.000108s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.000133s (num_starts 154; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000151s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000153s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000189s (num_starts 12; 0.0000s/start)
populate_locid2expr_map.: 0.000198s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000199s (num_starts 41; 0.0000s/start)
compute_sprel_relations.: 0.000216s (num_starts 1; 0.0002s/start)
propagate_sprels.: 0.000225s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000232s (num_starts 23; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000233s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000236s (num_starts 41; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000269s (num_starts 1; 0.0003s/start)
tfg::populate_loc_definedness.post_dfa.: 0.00028s (num_starts 2; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000287s (num_starts 5; 0.0001s/start)
expr_represents_llvm_undef.: 0.000351s (num_starts 59; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000412s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00058s (num_starts 1; 0.0006s/start)
compute_z3_expr.: 0.000613s (num_starts 48; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00067s (num_starts 80; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000684s (num_starts 1193; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000685s (num_starts 82; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000718s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000868s (num_starts 1; 0.0009s/start)
canonicalize_llvm_nextpcs.: 0.000887s (num_starts 1; 0.0009s/start)
populate_simplified_to_state.: 0.001015s (num_starts 3; 0.0003s/start)
populate_transitive_closure.: 0.001101s (num_starts 1; 0.0011s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001136s (num_starts 80; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.001218s (num_starts 1; 0.0012s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001225s (num_starts 1; 0.0012s/start)
expr_linear_relation_holds::visit.var.: 0.001268s (num_starts 59; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001282s (num_starts 80; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001438s (num_starts 1; 0.0014s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001554s (num_starts 1; 0.0016s/start)
tfg::collect_assumes_around_edge.: 0.001609s (num_starts 105; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.001919s (num_starts 67; 0.0000s/start)
query:convert_from_z3.: 0.002133s (num_starts 48; 0.0000s/start)
create_closure_matrix.: 0.002181s (num_starts 105; 0.0000s/start)
query:convert_to_z3.: 0.002477s (num_starts 48; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.00274s (num_starts 67; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002823s (num_starts 1; 0.0028s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.003102s (num_starts 1; 0.0031s/start)
populate_dominator_and_postdominator_relations.: 0.00335s (num_starts 2; 0.0017s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.003534s (num_starts 61; 0.0001s/start)
compute_lr_status_for_expr.: 0.003553s (num_starts 78; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003651s (num_starts 61; 0.0001s/start)
graph_visit_exprs.: 0.003688s (num_starts 4; 0.0009s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.004312s (num_starts 1; 0.0043s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004852s (num_starts 1815; 0.0000s/start)
query:simplify-z3.: 0.006263s (num_starts 99; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.006375s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.00638s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.006385s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.00639s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.foo.: 0.006393s (num_starts 1; 0.0064s/start)
tfg::populate_loc_definedness.before_solve.: 0.006838s (num_starts 2; 0.0034s/start)
graph_identify_back_edges.: 0.006915s (num_starts 6; 0.0012s/start)
populate_simplified_assets.: 0.006935s (num_starts 6; 0.0012s/start)
graph_identify_natural_loops.: 0.00728s (num_starts 6; 0.0012s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007297s (num_starts 971; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.007302s (num_starts 2; 0.0037s/start)
tfg::populate_loc_definedness.: 0.0076s (num_starts 2; 0.0038s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.007854s (num_starts 1; 0.0079s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.008034s (num_starts 1; 0.0080s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.008301s (num_starts 1; 0.0083s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.008745s (num_starts 80; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.009091s (num_starts 80; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.009156s (num_starts 105; 0.0001s/start)
find_dominators.: 0.009524s (num_starts 10; 0.0010s/start)
graph_to_stream.: 0.010101s (num_starts 1; 0.0101s/start)
compute_regions.: 0.011516s (num_starts 6; 0.0019s/start)
populate_branch_affecting_locs.: 0.01206s (num_starts 2; 0.0060s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.016527s (num_starts 80; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.016653s (num_starts 3; 0.0056s/start)
tfg_preprocess.dst.llvm.foo.: 0.019019s (num_starts 1; 0.0190s/start)
tfg::tfg_preprocess.: 0.019021s (num_starts 1; 0.0190s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.023526s (num_starts 108; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.023603s (num_starts 3; 0.0079s/start)
get_tfg.: 0.025178s (num_starts 1; 0.0252s/start)
get_function_tfg_map.foo.: 0.025209s (num_starts 1; 0.0252s/start)
get_function_tfg_map.: 0.025212s (num_starts 1; 0.0252s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.028564s (num_starts 80; 0.0004s/start)
main.2.: 0.032406s (num_starts 1; 0.0324s/start)
populate_loc_liveness.: 0.036866s (num_starts 2; 0.0184s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.038081s (num_starts 80; 0.0005s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.040577s (num_starts 83; 0.0005s/start)
avail_exprs_create_submap.: 0.041488s (num_starts 240; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.04788s (num_starts 971; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.049405s (num_starts 971; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.051764s (num_starts 80; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.057537s (num_starts 971; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.087722s (num_starts 1; 0.0877s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.103568s (num_starts 1; 0.1036s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.124416s (num_starts 80; 0.0016s/start)
ftmap_run_pointsto_analysis.: 0.246089s (num_starts 1; 0.2461s/start)
parse_consts_db.: 7.28s (num_starts 1; 7.2800s/start)
main.: 7.61131s (num_starts 1; 7.6113s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file ind4.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: foo...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG foo: Enumerating correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG foo: Found 3 correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Computing loop hoisting select expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Adding node L3%5%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:23 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : foo.A2: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:23 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    5 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:23 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    5 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:23 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:24 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:24 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:24 : foo.A2 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:24 : Chosen product-TFG foo.A2 will be explored later...</MSG>
<MSG>0:24 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A3 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A3...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A3...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L3%8%bbentry ending at L3%8%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Computing loop hoisting select expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Computing loop hoisting non-linear expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Adding node L3%8%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:24 : foo.A3: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Adding edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A3: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A3: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A3: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
142175 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( sum(0, unit, prod(2147483648, sum(0, unit, prod(2147483648, ind(0, Indxform11, lambda(Lambda22, Lambda22), lambda(Lambda23, sum(2147483648, unit, prod(1573078159, Indxform11)))))))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
142170 : sum_is(140273, 140279) : BOOL             : false
142176 : or(142175, 142170) : BOOL                 : false

ce =
=counter_example_begin yices.ce8 eca18f7f976248428165aa7a49834fae
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
4 : Indxform11 : BV:32
5 : Lambda22 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda23 : BV:32
8 : 1573078159 { 0x5dc3448f +1.52552974e60 } : BV:32
9 : prod(8, 4) : PROD[BV:32,BV:32]
10 : sum(3, 2, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(7, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 4, 6, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(3, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sum(1, 2, 13) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
15 : prod(3, 14) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
16 : sum(1, 2, 15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
17 : sym_const(16) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.1.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=counter_example.random_seed
52945785
=counter_example_end


failcond-expr = or(not(true), sum_is(input.spec-%var-l-1, 1)):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_is(3, 4) : BOOL
6 : or(2, 5) : BOOL
</MSG>
<MSG>0:24 : foo.A3: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A3: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A3: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Failed correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
142175 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( sum(0, unit, prod(2147483648, sum(0, unit, prod(2147483648, ind(0, Indxform11, lambda(Lambda22, Lambda22), lambda(Lambda23, sum(2147483648, unit, prod(1573078159, Indxform11)))))))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
142170 : sum_is(140273, 140279) : BOOL             : false
142176 : or(142175, 142170) : BOOL                 : false

ce =
=counter_example_begin yices.ce8 eca18f7f976248428165aa7a49834fae
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
4 : Indxform11 : BV:32
5 : Lambda22 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda23 : BV:32
8 : 1573078159 { 0x5dc3448f +1.52552974e60 } : BV:32
9 : prod(8, 4) : PROD[BV:32,BV:32]
10 : sum(3, 2, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(7, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 4, 6, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(3, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sum(1, 2, 13) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
15 : prod(3, 14) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
16 : sum(1, 2, 15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
17 : sym_const(16) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.1.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=counter_example.random_seed
52945785
=counter_example_end


</MSG>
<MSG>0:24 : Discovered that the correlation was useless for the product-TFG foo.A3 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Adding node L0%0%d_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:24 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : foo.A1: Added the 3 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:24 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:24 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:24 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial1-prove3...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce153
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:24 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:24 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce153
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:24 : foo.A1 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A1 (d:1, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG foo.A1: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : product-TFG foo.A1: Found 1 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : product-TFG foo.A1 created 1 possibilities in group foo.A1.B...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1.B1: Adding edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : foo.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : foo.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : foo.A1.B1: Propagated 4 out of 6 counter-examples across edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : foo.A1.B1: Added the 4 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:25 : foo.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : foo.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : foo.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce153
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:25 : Added correlation to the product-TFG foo.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce153
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:25 : foo.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:25 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:25 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce241      2.:z3v487.ce132      3.:cvc4.ce153      4.:z3v487.ce276      5.:cvc4.ce277
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:26 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce241      2.:z3v487.ce132      3.:cvc4.ce153      4.:z3v487.ce276      5.:cvc4.ce277
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:26 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce241      2.:z3v487.ce132      3.:cvc4.ce153      4.:z3v487.ce276      5.:cvc4.ce277
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce132      2.:cvc4.ce133
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:26 : foo.A1.B1 (d:2, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : foo.A1.B1 (d:2, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:26 : Chosen product-TFG foo.A1.B1 will be explored later...</MSG>
<MSG>0:26 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG foo.A2 (d:1, s:0, sp: 3) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:26 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:26 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:26 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:27 : foo.A2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG foo.A2: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Considering 2 paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Found 2 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : product-TFG foo.A2: Found 2 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:27 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : foo.A2.B2: Added the 5 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:27 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:27 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:27 : foo.A2.B2: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:27 : Added correlation to the product-TFG foo.A2.B2 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:27 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:27 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 7 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:29 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:29 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 7 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:30 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6


<MSG>0:30 : foo.A2.B2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:30 : foo.A2.B2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:30 : product-TFG foo.A2.B2: Enumerating correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Attempting correlation of src pathset L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : product-TFG foo.A2.B2: Found 1 correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:30 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 17 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:30 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:30 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:30 : Creating ssa-path for the src-tfg path L3%5%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:30 : Adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:30 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:30 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:30 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Propagated 10 out of 17 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:30 : foo.A2.B2.C1: Added the 10 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:30 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:30 : Done adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:30 : Added correlation to the product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:30 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 17 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 4 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:30 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:30 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:30 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:30 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:30 : foo.A2.B2.C1 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:30 : foo.A2.B2.C1 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:30 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:30 : Checking equivalence proof...</MSG>
<MSG>0:30 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    7 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce473      4.:cvc4.ce415      5.:z3v487.ce414      6.:z3v487.ce512
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 17 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 4 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 8.40s, query:smt.: 3.06705s (num_starts 60; 0.0511s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 6.82389s (num_starts 90; 0.0758s/start)ftmap_run_pointsto_analysis.: 0.188835s (num_starts 2; 0.0944s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 9e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-05s (num_starts 6; 0.0000s/start)
prune_dst_memslots.: 1.1e-05s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 1.4e-05s (num_starts 8; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.7e-05s (num_starts 6; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.8e-05s (num_starts 6; 0.0000s/start)
prove_trivial.: 1.9e-05s (num_starts 21; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 2e-05s (num_starts 15; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3.1e-05s (num_starts 30; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.5e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.6e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 4.2e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 5.2e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.3e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 6e-05s (num_starts 2; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry.: 6.6e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 6.6e-05s (num_starts 18; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.3e-05s (num_starts 3; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 0.000102s (num_starts 22; 0.0000s/start)
ce_perform_memory_fuzzing.: 0.000113s (num_starts 98; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry.: 0.000117s (num_starts 2; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000118s (num_starts 90; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000123s (num_starts 43; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000128s (num_starts 260; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000129s (num_starts 1; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000138s (num_starts 11; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000162s (num_starts 90; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000163s (num_starts 3; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.000164s (num_starts 3; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000164s (num_starts 7; 0.0000s/start)
get_lr_status_for_loc_ids.: 0.00018s (num_starts 48; 0.0000s/start)
populate_locid2expr_map.: 0.000184s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000202s (num_starts 3; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000209s (num_starts 13; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000219s (num_starts 18; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000225s (num_starts 3; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000227s (num_starts 102; 0.0000s/start)
lr_status_meet.: 0.000241s (num_starts 265; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000244s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000251s (num_starts 69; 0.0000s/start)
compute_sprel_relations.: 0.000252s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000266s (num_starts 2; 0.0001s/start)
expr_is_hidden_reg.: 0.00027s (num_starts 290; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000279s (num_starts 12; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000289s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000312s (num_starts 3; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000327s (num_starts 12; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000337s (num_starts 2; 0.0002s/start)
graph_locs_add_all_local_vars.: 0.000339s (num_starts 2; 0.0002s/start)
expr_is_callee_save_const.: 0.000342s (num_starts 302; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000375s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000376s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000378s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000379s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000382s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000384s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000398s (num_starts 1; 0.0004s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000462s (num_starts 1; 0.0005s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000465s (num_starts 9; 0.0001s/start)
tfg::collect_assumes_around_edge.: 0.000469s (num_starts 30; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000552s (num_starts 125; 0.0000s/start)
create_closure_matrix.: 0.000558s (num_starts 61; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000559s (num_starts 125; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00057s (num_starts 56; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000584s (num_starts 12; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000652s (num_starts 1; 0.0007s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000666s (num_starts 4; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000736s (num_starts 84; 0.0000s/start)
get_sprel_map_pair.: 0.000769s (num_starts 72; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000789s (num_starts 4; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000795s (num_starts 24; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000799s (num_starts 2; 0.0004s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000804s (num_starts 58; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.00081s (num_starts 4; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000838s (num_starts 2; 0.0004s/start)
populate_simplified_to_state.: 0.00084s (num_starts 3; 0.0003s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.00085s (num_starts 12; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000852s (num_starts 1; 0.0009s/start)
tfg::populate_loc_definedness.before_solve.: 0.000882s (num_starts 3; 0.0003s/start)
graph_with_guessing_sync_preds.: 0.000898s (num_starts 90; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000942s (num_starts 1; 0.0009s/start)
proof_query_is_trivial.: 0.00096s (num_starts 90; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000981s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000983s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.000989s (num_starts 1; 0.0010s/start)
removeMostPromising.: 0.001084s (num_starts 19; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001151s (num_starts 18; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001215s (num_starts 336; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001235s (num_starts 1; 0.0012s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001257s (num_starts 3; 0.0004s/start)
ldr_decomposition.: 0.001276s (num_starts 43; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001339s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001339s (num_starts 3; 0.0004s/start)
set_result_and_counter_example.: 0.001353s (num_starts 60; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.00144s (num_starts 52; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001483s (num_starts 6; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.001506s (num_starts 52; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.00158s (num_starts 52; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001653s (num_starts 18; 0.0001s/start)
expr_represents_llvm_undef.: 0.001666s (num_starts 306; 0.0000s/start)
identify_address_taken_local_variables.: 0.001786s (num_starts 1; 0.0018s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001839s (num_starts 11; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001934s (num_starts 15; 0.0001s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001986s (num_starts 4; 0.0005s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002006s (num_starts 2; 0.0010s/start)
find_dominators.: 0.002007s (num_starts 32; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.002026s (num_starts 2; 0.0010s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002052s (num_starts 58; 0.0000s/start)
construct_linear_combination_exprs.: 0.002104s (num_starts 52; 0.0000s/start)
collect_assumes_around_edge.: 0.002106s (num_starts 6; 0.0004s/start)
graph_identify_back_edges.: 0.002225s (num_starts 28; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.002359s (num_starts 84; 0.0000s/start)
compute_vars_reaching_definitions.: 0.00236s (num_starts 2; 0.0012s/start)
graph_identify_natural_loops.: 0.002477s (num_starts 28; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002573s (num_starts 4; 0.0006s/start)
populate_simplified_assets.: 0.002667s (num_starts 6; 0.0004s/start)
populate_branch_affecting_locs.: 0.002997s (num_starts 3; 0.0010s/start)
get_unrolled_loop_paths_from.: 0.003119s (num_starts 3; 0.0010s/start)
pth_collect_preds_using_atom_func.: 0.003123s (num_starts 52; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.003262s (num_starts 56; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00332s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00332s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003323s (num_starts 1; 0.0033s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.003452s (num_starts 56; 0.0001s/start)
graph_visit_exprs.: 0.003516s (num_starts 3; 0.0012s/start)
graph_visit_exprs_and_keys.: 0.00357s (num_starts 2; 0.0018s/start)
populate_transitive_closure.: 0.003593s (num_starts 37; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003699s (num_starts 81; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.003703s (num_starts 84; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.00379s (num_starts 58; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.003907s (num_starts 69; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.004025s (num_starts 56; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.004054s (num_starts 52; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.004317s (num_starts 4; 0.0011s/start)
generate_aliasing_constraints_from_expr.: 0.004385s (num_starts 663; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.004469s (num_starts 72; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.004699s (num_starts 61; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.004787s (num_starts 1; 0.0048s/start)
populate_locs_potentially_modified_on_edge.: 0.004992s (num_starts 3; 0.0017s/start)
predicate_canonicalized.: 0.005823s (num_starts 52; 0.0001s/start)
get_next_potential_correlations.: 0.005849s (num_starts 4; 0.0015s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005978s (num_starts 129; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.005997s (num_starts 43; 0.0001s/start)
compute_regions.: 0.006135s (num_starts 28; 0.0002s/start)
bv_linear_solve.: 0.006676s (num_starts 43; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.006889s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.006895s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.006898s (num_starts 1; 0.0069s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.006941s (num_starts 124; 0.0001s/start)
query:bv_solve.: 0.00698s (num_starts 43; 0.0002s/start)
expr_linear_relation_holds::visit.var.: 0.007239s (num_starts 306; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.007301s (num_starts 94; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.007358s (num_starts 52; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007388s (num_starts 1; 0.0074s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007392s (num_starts 1; 0.0074s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007396s (num_starts 1; 0.0074s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.007675s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007982s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007991s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007995s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008003s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.008012s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00803s (num_starts 3; 0.0027s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.008512s (num_starts 213; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.008666s (num_starts 5; 0.0017s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.008677s (num_starts 3; 0.0029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.008735s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.008741s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.008745s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.00875s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.008754s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.008762s (num_starts 1; 0.0088s/start)
bv_solve_returning_intermediate_structures.: 0.008949s (num_starts 43; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.009562s (num_starts 5; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.009572s (num_starts 5; 0.0019s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.009873s (num_starts 146; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010005s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.01001s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010012s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.010016s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.01002s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.010029s (num_starts 1; 0.0100s/start)
do_ssa_transformation.: 0.010152s (num_starts 2; 0.0051s/start)
bvsolve_cache_query.miss1.: 0.010464s (num_starts 43; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.010526s (num_starts 6; 0.0018s/start)
collect_assumes_around_path_helper.: 0.010754s (num_starts 125; 0.0001s/start)
bvsolve_cache_query.: 0.010936s (num_starts 43; 0.0003s/start)
graph_with_paths::collect_assumes_around_path.: 0.011158s (num_starts 125; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.011164s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-trivial.: 0.011168s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.011171s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.011303s (num_starts 3; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-trivial.: 0.011316s (num_starts 3; 0.0038s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.011318s (num_starts 1; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-trivial.: 0.011322s (num_starts 1; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.011324s (num_starts 3; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.011325s (num_starts 1; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011777s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011784s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.011793s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.011806s (num_starts 3; 0.0039s/start)
tfg::get_aliasing_constraints_for_edge.: 0.011862s (num_starts 139; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.01239s (num_starts 52; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.012454s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.012458s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-trivial.: 0.012462s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.012464s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.012475s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.012481s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.012488s (num_starts 1; 0.0125s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.012584s (num_starts 3; 0.0042s/start)
solve_for_bv_points.: 0.013469s (num_starts 43; 0.0003s/start)
expr_substitute_using_available_exprs_submap.: 0.013793s (num_starts 245; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.01459s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.014596s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.014607s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.015082s (num_starts 4; 0.0038s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.015164s (num_starts 4; 0.0038s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.01604s (num_starts 43; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-trivial.: 0.016294s (num_starts 1; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.016297s (num_starts 1; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.0163s (num_starts 1; 0.0163s/start)
gen_pred_from_coeff_row.: 0.018623s (num_starts 52; 0.0004s/start)
lhs_set_sort.: 0.018919s (num_starts 69; 0.0003s/start)
compute_preds_for_bv_points.: 0.018928s (num_starts 22; 0.0009s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.019104s (num_starts 31; 0.0006s/start)
query:convert_to_z3.: 0.019137s (num_starts 275; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019239s (num_starts 1; 0.0192s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019245s (num_starts 1; 0.0192s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.019252s (num_starts 1; 0.0193s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.019388s (num_starts 2; 0.0097s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019575s (num_starts 1; 0.0196s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019578s (num_starts 1; 0.0196s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.020387s (num_starts 84; 0.0002s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.020514s (num_starts 84; 0.0002s/start)
query:convert_from_z3.: 0.020542s (num_starts 275; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020606s (num_starts 1; 0.0206s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020607s (num_starts 1; 0.0206s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.020612s (num_starts 1; 0.0206s/start)
get_unrolled_paths_from.: 0.020645s (num_starts 20; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-trivial.: 0.021127s (num_starts 3; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.02114s (num_starts 3; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021702s (num_starts 1; 0.0217s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021709s (num_starts 1; 0.0217s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.022708s (num_starts 2; 0.0114s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.023154s (num_starts 172; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.023182s (num_starts 52; 0.0004s/start)
graph_to_stream.: 0.023824s (num_starts 4; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.023947s (num_starts 2; 0.0120s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.024782s (num_starts 8; 0.0031s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.025056s (num_starts 265; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.025538s (num_starts 265; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025883s (num_starts 1; 0.0259s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025885s (num_starts 1; 0.0259s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.025888s (num_starts 4; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.026483s (num_starts 2; 0.0132s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.026488s (num_starts 2; 0.0132s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.026656s (num_starts 24; 0.0011s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.026723s (num_starts 24; 0.0011s/start)
compute_lr_status_for_expr.: 0.026761s (num_starts 350; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026896s (num_starts 1; 0.0269s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026898s (num_starts 1; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026907s (num_starts 1; 0.0269s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.027266s (num_starts 712; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.027577s (num_starts 22; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028095s (num_starts 1; 0.0281s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028115s (num_starts 1; 0.0281s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02812s (num_starts 1; 0.0281s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02814s (num_starts 1; 0.0281s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.028145s (num_starts 1; 0.0281s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.028155s (num_starts 1; 0.0282s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.028539s (num_starts 2; 0.0143s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.028546s (num_starts 2; 0.0143s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.02866s (num_starts 23; 0.0012s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.028975s (num_starts 109; 0.0003s/start)
check_node_stability_after_CE_addition.: 0.029072s (num_starts 69; 0.0004s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.029934s (num_starts 52; 0.0006s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.03016s (num_starts 52; 0.0006s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-trivial.: 0.03028s (num_starts 2; 0.0151s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.030287s (num_starts 2; 0.0151s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.030288s (num_starts 2; 0.0151s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.030294s (num_starts 2; 0.0151s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.030302s (num_starts 2; 0.0152s/start)
collect_aliasing_constraints_around_path_helper.: 0.032011s (num_starts 132; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.032161s (num_starts 4; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.032177s (num_starts 4; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.032185s (num_starts 4; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.032214s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.032228s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.032253s (num_starts 4; 0.0081s/start)
collect_aliasing_constraints_around_path.: 0.032704s (num_starts 84; 0.0004s/start)
populate_loc_liveness.: 0.033492s (num_starts 3; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-trivial.: 0.034257s (num_starts 2; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.034265s (num_starts 2; 0.0171s/start)
counter_example_satisfies_preds.: 0.034861s (num_starts 432; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned.: 0.035562s (num_starts 2; 0.0178s/start)
compute_expr_eqclasses_at_pc.: 0.035853s (num_starts 3; 0.0120s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.035874s (num_starts 3; 0.0120s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.036327s (num_starts 2; 0.0182s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.036334s (num_starts 2; 0.0182s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.036611s (num_starts 5; 0.0073s/start)
cg_add_node.: 0.036821s (num_starts 5; 0.0074s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03717s (num_starts 1; 0.0372s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.037175s (num_starts 1; 0.0372s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.03731s (num_starts 3; 0.0124s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lwhile.cond%1%bbentry.inductive-invariants.: 0.038739s (num_starts 8; 0.0048s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038798s (num_starts 2; 0.0194s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.040472s (num_starts 9; 0.0045s/start)
create_new_corr_graph_edge.new_node.: 0.041172s (num_starts 4; 0.0103s/start)
create_new_corr_graph_edge.: 0.041491s (num_starts 6; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.041521s (num_starts 2; 0.0208s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.041544s (num_starts 2; 0.0208s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.041552s (num_starts 2; 0.0208s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.041744s (num_starts 8; 0.0052s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.041894s (num_starts 21; 0.0020s/start)
avail_exprs_create_submap.: 0.043584s (num_starts 156; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.044578s (num_starts 2; 0.0223s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.044584s (num_starts 2; 0.0223s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044667s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044668s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044676s (num_starts 1; 0.0447s/start)
compute_new_lr_status_on_locs.: 0.045058s (num_starts 52; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.045768s (num_starts 3; 0.0153s/start)
propagate_nodece_across_edge.: 0.04737s (num_starts 14; 0.0034s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.048555s (num_starts 1; 0.0486s/start)
tfg_postprocess_after_pointsto_analysis.: 0.04963s (num_starts 2; 0.0248s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.04985s (num_starts 1480; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.050533s (num_starts 3; 0.0168s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.051808s (num_starts 8; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052919s (num_starts 2; 0.0265s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052922s (num_starts 2; 0.0265s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.052931s (num_starts 2; 0.0265s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.052941s (num_starts 2; 0.0265s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.055286s (num_starts 3; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.056199s (num_starts 3; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.056213s (num_starts 3; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05774s (num_starts 1; 0.0577s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057769s (num_starts 2; 0.0289s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057774s (num_starts 2; 0.0289s/start)
query:simplify-z3.: 0.058741s (num_starts 577; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.059055s (num_starts 4; 0.0148s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.062536s (num_starts 2; 0.0313s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.06257s (num_starts 3; 0.0209s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.062581s (num_starts 3; 0.0209s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.06334s (num_starts 7; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.063683s (num_starts 2; 0.0318s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.063691s (num_starts 2; 0.0318s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.065228s (num_starts 3; 0.0217s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.068593s (num_starts 109; 0.0006s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.070913s (num_starts 8; 0.0089s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.077491s (num_starts 6; 0.0129s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.077625s (num_starts 3; 0.0259s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078445s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078454s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078467s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078476s (num_starts 2; 0.0392s/start)
counter_example_falsifies_preds.: 0.078565s (num_starts 69; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078791s (num_starts 3; 0.0263s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078796s (num_starts 3; 0.0263s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.078944s (num_starts 3; 0.0263s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned.: 0.078972s (num_starts 3; 0.0263s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.079674s (num_starts 3; 0.0266s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079748s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079761s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079765s (num_starts 2; 0.0399s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.081158s (num_starts 52; 0.0016s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.08443s (num_starts 24; 0.0035s/start)
compute_z3_expr.: 0.085392s (num_starts 335; 0.0003s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.087889s (num_starts 2; 0.0439s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.091102s (num_starts 3; 0.0304s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned.: 0.091115s (num_starts 3; 0.0304s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.091134s (num_starts 3; 0.0304s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.091547s (num_starts 1538; 0.0001s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.091877s (num_starts 3; 0.0306s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.09218s (num_starts 1480; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.095301s (num_starts 4; 0.0238s/start)
collect_inductive_preds_around_path.: 0.097984s (num_starts 90; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.098417s (num_starts 11; 0.0089s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.098867s (num_starts 5; 0.0198s/start)
put_smtlib_string_in_file.: 0.099984s (num_starts 120; 0.0008s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.101713s (num_starts 99; 0.0010s/start)
graph_ec_apply_trans_funs_helper.0.: 0.10375s (num_starts 397; 0.0003s/start)
graph_ec_apply_trans_funs_helper.: 0.105567s (num_starts 401; 0.0003s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.105803s (num_starts 390; 0.0003s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.106427s (num_starts 401; 0.0003s/start)
computeWP_for_pred_across_ec.: 0.106805s (num_starts 390; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.109176s (num_starts 5; 0.0218s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.109195s (num_starts 5; 0.0218s/start)
tfg_relax_pointsto_vals_on_edge.: 0.110288s (num_starts 28; 0.0039s/start)
counter_example_evaluate_preds.: 0.112091s (num_starts 501; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.11704s (num_starts 109; 0.0011s/start)
edge_composition_apply_trans_funs_on_pred.: 0.117274s (num_starts 90; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.123065s (num_starts 4; 0.0308s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.123079s (num_starts 4; 0.0308s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.127867s (num_starts 24; 0.0053s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.132687s (num_starts 1480; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.146074s (num_starts 1; 0.1461s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.146078s (num_starts 1; 0.1461s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.146085s (num_starts 1; 0.1461s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.146088s (num_starts 1; 0.1461s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.148307s (num_starts 4; 0.0371s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.152753s (num_starts 16; 0.0095s/start)
parse_cvc4_model.: 0.153979s (num_starts 29; 0.0053s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163229s (num_starts 5; 0.0326s/start)
check_wfconds_on_edge.: 0.165989s (num_starts 11; 0.0151s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.167775s (num_starts 6; 0.0280s/start)
parse_z3_model.: 0.183417s (num_starts 25; 0.0073s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186701s (num_starts 6; 0.0311s/start)
ftmap_run_pointsto_analysis.: 0.188835s (num_starts 2; 0.0944s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.188951s (num_starts 3; 0.0630s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.188964s (num_starts 3; 0.0630s/start)
tfg_run_pointsto_analysis.: 0.189247s (num_starts 2; 0.0946s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.190314s (num_starts 16; 0.0119s/start)
tfg_populate_structs_after_ssa_construction.: 0.196687s (num_starts 2; 0.0983s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.208777s (num_starts 2; 0.1044s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209132s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209134s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.209146s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.209152s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.210137s (num_starts 6; 0.0350s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown.: 0.210161s (num_starts 6; 0.0350s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.216612s (num_starts 148; 0.0015s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.217152s (num_starts 3; 0.0724s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.222448s (num_starts 1; 0.2224s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.22245s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.222453s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.222454s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.222467s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate.: 0.222474s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.222485s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.224585s (num_starts 3; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.224595s (num_starts 3; 0.0749s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.224616s (num_starts 3; 0.0749s/start)
apply_mask_and_overlay_array_constant.: 0.227494s (num_starts 148; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.234963s (num_starts 2; 0.1175s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.240931s (num_starts 11; 0.0219s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.241133s (num_starts 1; 0.2411s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.241136s (num_starts 1; 0.2411s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.241143s (num_starts 1; 0.2411s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.241145s (num_starts 1; 0.2411s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.246648s (num_starts 4; 0.0617s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.252483s (num_starts 4; 0.0631s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown.: 0.252495s (num_starts 4; 0.0631s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.252519s (num_starts 4; 0.0631s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.256548s (num_starts 3; 0.0855s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.265231s (num_starts 1; 0.2652s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.265233s (num_starts 1; 0.2652s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.265236s (num_starts 1; 0.2652s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.265238s (num_starts 1; 0.2652s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.265245s (num_starts 1; 0.2652s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.265247s (num_starts 1; 0.2652s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.265253s (num_starts 1; 0.2653s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.26566s (num_starts 2; 0.1328s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.271282s (num_starts 69; 0.0039s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.272758s (num_starts 8; 0.0341s/start)
guarded_predicate_set_and.: 0.273067s (num_starts 84; 0.0033s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.273828s (num_starts 2; 0.1369s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.273833s (num_starts 2; 0.1369s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-all-proof-path-optimizations.: 0.273841s (num_starts 2; 0.1369s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.273848s (num_starts 2; 0.1369s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry).: 0.288189s (num_starts 10; 0.0288s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.314091s (num_starts 1; 0.3141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.314091s (num_starts 1; 0.3141s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.314102s (num_starts 1; 0.3141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.314109s (num_starts 1; 0.3141s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.314424s (num_starts 69; 0.0046s/start)
parse_yices_model.: 0.321548s (num_starts 29; 0.0111s/start)
check_equivalence_proof.: 0.34535s (num_starts 1; 0.3453s/start)
corr_graph::add_edge().: 0.352726s (num_starts 6; 0.0588s/start)
decide_hoare_triple_helper;-trivial.: 0.367246s (num_starts 43; 0.0085s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.396298s (num_starts 6; 0.0660s/start)
corr_graph_add_correlation.: 0.39654s (num_starts 6; 0.0661s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.396965s (num_starts 6; 0.0662s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown.: 0.396983s (num_starts 6; 0.0662s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.401201s (num_starts 19; 0.0211s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.405328s (num_starts 6; 0.0676s/start)
check_preds_on_edge_compositions.: 0.420043s (num_starts 14; 0.0300s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%bbentry_Lwhile.cond%1%bbentry.inductive-invariants.: 0.459162s (num_starts 14; 0.0328s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.460735s (num_starts 8; 0.0576s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.523212s (num_starts 2; 0.2616s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.523278s (num_starts 2; 0.2616s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.528816s (num_starts 3; 0.1763s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.52882s (num_starts 3; 0.1763s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.538428s (num_starts 8; 0.0673s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.538447s (num_starts 8; 0.0673s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.538743s (num_starts 13; 0.0414s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.540108s (num_starts 43; 0.0126s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.540636s (num_starts 69; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.550495s (num_starts 4; 0.1376s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.560753s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.560755s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.560762s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.560765s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.560775s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.56078s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.560788s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon).: 0.560794s (num_starts 1; 0.5608s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.56121s (num_starts 10; 0.0561s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.582422s (num_starts 46; 0.0127s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.583059s (num_starts 68; 0.0086s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.60224s (num_starts 3; 0.2007s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.630085s (num_starts 6; 0.1050s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon).: 0.660671s (num_starts 8; 0.0826s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.660737s (num_starts 300; 0.0022s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 0.661057s (num_starts 4; 0.1653s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 0.661248s (num_starts 4; 0.1653s/start)
read_counter_examples_from_channel.: 0.664855s (num_starts 29; 0.0229s/start)
counter_example_translate_on_edge_composition_helper.: 0.706585s (num_starts 413; 0.0017s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.880664s (num_starts 3; 0.2936s/start)
ce_reconcile_sorts_and_values.: 1.02403s (num_starts 83; 0.0123s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.05616s (num_starts 15; 0.0704s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.16526s (num_starts 4; 0.2913s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.16529s (num_starts 4; 0.2913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.1653s (num_starts 4; 0.2913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 1.17651s (num_starts 5; 0.2353s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear.: 1.17653s (num_starts 5; 0.2353s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 1.17656s (num_starts 5; 0.2353s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.: 1.21672s (num_starts 3; 0.4056s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.24499s (num_starts 6; 0.2075s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.25209s (num_starts 25; 0.0501s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.34921s (num_starts 4; 0.3373s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.34931s (num_starts 4; 0.3373s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 1.35551s (num_starts 25; 0.0542s/start)
decide_hoare_triple.: 1.39162s (num_starts 6; 0.2319s/start)
dst_edge_composition_proves_false.: 1.40742s (num_starts 4; 0.3519s/start)
get_next_dst_edge_composition_to_correlate.: 1.41909s (num_starts 5; 0.2838s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry).: 1.5283s (num_starts 15; 0.1019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.63609s (num_starts 6; 0.2727s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.63613s (num_starts 6; 0.2727s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.63615s (num_starts 6; 0.2727s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 1.69879s (num_starts 9; 0.1888s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 1.69882s (num_starts 9; 0.1888s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 1.73523s (num_starts 11; 0.1577s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.92736s (num_starts 11; 0.1752s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 2.11856s (num_starts 27; 0.0785s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 2.1536s (num_starts 3; 0.7179s/start)
query:smt.: 3.06705s (num_starts 60; 0.0511s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.35188s (num_starts 14; 0.2394s/start)
decide_hoare_triple_helper;per-query-type;linear.: 3.50516s (num_starts 30; 0.1168s/start)
spawn_smt_query.: 3.73274s (num_starts 60; 0.0622s/start)
solver_provable.: 5.1398s (num_starts 84; 0.0612s/start)
solver_satisfiable-cache-miss.: 5.17292s (num_starts 60; 0.0862s/start)
solver_satisfiable.: 5.17396s (num_starts 85; 0.0609s/start)
expr_is_provable.: 5.18433s (num_starts 84; 0.0617s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 5.18645s (num_starts 84; 0.0617s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 5.19142s (num_starts 84; 0.0618s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 5.19743s (num_starts 84; 0.0619s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 5.47482s (num_starts 84; 0.0652s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 5.4847s (num_starts 84; 0.0653s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 5.48646s (num_starts 84; 0.0653s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.79186s (num_starts 43; 0.1347s/start)
update_invariant_state_for_edges.: 5.82443s (num_starts 6; 0.9707s/start)
cg_check_new_cg_ec.: 5.83346s (num_starts 6; 0.9722s/start)
correl_entry_apply.: 5.83374s (num_starts 6; 0.9723s/start)
is_expr_equal_using_lhs_set_and_precond.: 5.98191s (num_starts 69; 0.0867s/start)
prove.: 5.98243s (num_starts 69; 0.0867s/start)
prove_spawn_and_join_helper.: 5.9828s (num_starts 69; 0.0867s/start)
prove_spawn_and_join.: 6.50424s (num_starts 69; 0.0943s/start)
prove_wrapper.proof_query_not_trivial.: 6.51304s (num_starts 69; 0.0944s/start)
prove_wrapper.: 6.57927s (num_starts 90; 0.0731s/start)
decide_hoare_triple_check_ub.: 6.7027s (num_starts 90; 0.0745s/start)
decide_hoare_triple_helper.: 6.82389s (num_starts 90; 0.0758s/start)
expandProductCFG.: 7.25933s (num_starts 7; 1.0370s/start)
decide_hoare_triple_with_alias_cons.: 7.36537s (num_starts 90; 0.0818s/start)
bestFirstSearch.: 7.7368s (num_starts 1; 7.7368s/start)
Time taken for equivalence check.: 8.08623s (num_starts 1; 8.0862s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 16
# of paths expanded.: 6
# of queries to linear solver.: 43
# of smt-solver-queries.: 60
L0%0%d=>Lwhile.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lwhile.cond%1%bbentry-src_to_pcs.: 3
Lwhile.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lwhile.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_ecs.: 2
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_to_pcs.: 1
num-backtrackings.: 2
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 9
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 8
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 11
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 25
smt-queries-cvc4-sat.: 29
smt-queries-yices-sat.: 29
smt-queries-z3-sat.: 25
total-correlation-possibilities.: 8
total-correlation-possibilities-mod-lsprels.: 8
total-correlations-explored.: 7

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 8
final-CG-counterexamples-total-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 17
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 6
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.22
final-CG-time-to-total-time-ratio.: 0.55
query-time-to-total-time-ratio.: 0.39

Context stats:
exprs: count: 150053
sorts: count: 6660
num_proof_queries: 69
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7130
	        hit ratio:	0.977279
m_simplify_solver:
	----------- total:	1488
	        hit ratio:	0.797043
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	134
	        hit ratio:	0.731343
m_z3_solver_substitution:
	----------- total:	302
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	302
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	32
	        hit ratio:	0.96875
m_expr_size:
	----------- total:	5395
	        hit ratio:	0.924745
m_contains_only_constants_or_sp_versions:
	----------- total:	12
	        hit ratio:	0.833333
m_expr_evaluates_to_constant_visitor:
	----------- total:	11399
	        hit ratio:	0.740942
m_sort_dfa_canonicalize:
	----------- total:	87810
	        hit ratio:	0.962726
m_expr_convert_to_iexpr:
	----------- total:	3505
	        hit ratio:	0.645934

z3_solver expr_query_cache entry size: 60
	----------- total:	85
	             hits:	25
	        hit ratio:	0.294118
histogram (time taken by solver in ms):
[  3.4990,   5.2481) (avg.   4.3812)     : 5
[  5.2481,   7.8715) (avg.   6.5177)     : 13
[  7.8715,  11.8063) (avg.   9.6010)     : 9
[ 11.8063,  17.7081) (avg.  14.2167)     : 4
[ 17.7081,  26.5601) (avg.   0.0000)     : 0
[ 26.5601,  39.8370) (avg.  33.1520)     : 3
[ 39.8370,  59.7507) (avg.  46.2600)     : 11
[ 59.7507,  89.6190) (avg.  65.5073)     : 3
[ 89.6190, 134.4179) (avg.  99.4260)     : 1
[134.4179, 201.6110) (avg. 173.8269)     : 11
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  89) (avg.  40)                    : 1
[ 89, 138) (avg.   0)                    : 0
[138, 186) (avg. 156)                    : 14
[186, 235) (avg. 214)                    : 12
[235, 283) (avg. 267)                    : 10
[283, 332) (avg. 305)                    : 13
[332, 381) (avg.   0)                    : 0
[381, 429) (avg. 407)                    : 6
[429, 478) (avg.   0)                    : 0
[478, 526) (avg. 516)                    : 4
Top 10 highest time taking queries:
1. [0.201s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.193s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-23-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
3. [0.189s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-23-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
4. [0.188s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
5. [0.182s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-18-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
6. [0.181s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
7. [0.180s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-25-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
8. [0.171s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-25-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
9. [0.148s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-18-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
10. [0.142s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0

<MSG>0:30 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 111 time spent: 0:0:0 [0.002892s total; 0.000026 per start]
tfg_computeWP: num_starts 462 time spent: 0:0:0 [0.095498s total; 0.000207 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1229 time spent: 0:0:0 [0.002296s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1085 time spent: 0:0:0 [0.001999s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 453 time spent: 0:0:0 [0.000798s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 48 time spent: 0:0:0 [0.155522s total; 0.003240 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.345071s total; 0.028756 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 334 time spent: 0:0:0 [0.673711s total; 0.002017 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 110 time spent: 0:0:0 [0.114222s total; 0.001038 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 305 time spent: 0:0:0 [0.624159s total; 0.002046 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1820 time spent: 0:0:0 [0.712169s total; 0.000391 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 305 time spent: 0:0:0 [0.030530s total; 0.000100 per start]
tfg_graph_get_vars_written_on_edge: num_starts 305 time spent: 0:0:0 [0.012661s total; 0.000042 per start]
cg_with_rank_add_CE_at_pc: num_starts 69 time spent: 0:0:0 [0.107620s total; 0.001560 per start]
graph_with_ce_add_CE_at_pc: num_starts 35 time spent: 0:0:0 [0.000872s total; 0.000025 per start]
graph_with_guessing_add_CE_at_pc: num_starts 69 time spent: 0:0:0 [0.106732s total; 0.001547 per start]
point_set_add_point_using_CE: num_starts 129 time spent: 0:0:0 [0.029893s total; 0.000232 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 129 time spent: 0:0:0 [0.030374s total; 0.000235 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 49 time spent: 0:0:0 [0.076328s total; 0.001558 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 49 time spent: 0:0:0 [0.044964s total; 0.000918 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2723 time spent: 0:0:0 [0.169885s total; 0.000062 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 152 time spent: 0:0:0 [0.017615s total; 0.000116 per start]
expr_simplify_solver: num_starts 1548 time spent: 0:0:0 [0.139746s total; 0.000090 per start]
expr_simplify_syntactic: num_starts 1600 time spent: 0:0:0 [0.457885s total; 0.000286 per start]
expr_simplify_select_on_store: num_starts 154 time spent: 0:0:0 [0.426874s total; 0.002772 per start]
expr_simplify_using_lhs_set_helper: num_starts 364 time spent: 0:0:0 [0.678641s total; 0.001864 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 3032 time spent: 0:0:0 [0.674917s total; 0.000223 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1918 time spent: 0:0:0 [0.009082s total; 0.000005 per start]
expr_simplify_eq: num_starts 451 time spent: 0:0:0 [0.005545s total; 0.000012 per start]
expr_simplify_or: num_starts 16 time spent: 0:0:0 [0.000041s total; 0.000003 per start]
expr_simplify_and: num_starts 122 time spent: 0:0:0 [0.000856s total; 0.000007 per start]
expr_simplify_not: num_starts 29 time spent: 0:0:0 [0.000129s total; 0.000004 per start]
expr_simplify_implies: num_starts 92 time spent: 0:0:0 [0.000948s total; 0.000010 per start]
expr_simplify_ite: num_starts 58 time spent: 0:0:0 [0.003202s total; 0.000055 per start]
canonicalize_expr_tree: num_starts 337 time spent: 0:0:0 [0.035288s total; 0.000105 per start]
expr_simplify_memalloc_using_memlabel: num_starts 145 time spent: 0:0:0 [0.000461s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 154 time spent: 0:0:0 [0.422586s total; 0.002744 per start]
get_arithmetic_addsub_atoms: num_starts 2653 time spent: 0:0:0 [0.001491s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 788 time spent: 0:0:0 [0.009471s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 405 time spent: 0:0:0 [0.000303s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 7456 time spent: 0:0:0 [0.502812s total; 0.000067 per start]
expr_do_simplify_helper_cache: num_starts 7456 time spent: 0:0:0 [0.007362s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 18 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 18 time spent: 0:0:0 [0.000066s total; 0.000004 per start]
evaluate_expr_and_check_bounds: num_starts 1127 time spent: 0:0:0 [0.729455s total; 0.000647 per start]
array_constant_equals: num_starts 14908 time spent: 0:0:0 [0.019744s total; 0.000001 per start]
sort_dfa_canonical: num_starts 230576 time spent: 0:0:1 [1.608386s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 3514 time spent: 0:0:0 [0.680999s total; 0.000194 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.127830s total; 0.005326 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.084369s total; 0.003515 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.003403s total; 0.000097 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000046s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 104 time spent: 0:0:0 [0.039423s total; 0.000379 per start]
compute_simplified_loc_exprs_for_edge: num_starts 260 time spent: 0:0:0 [0.102970s total; 0.000396 per start]
compute_locs_definitely_written_on_edge: num_starts 104 time spent: 0:0:0 [0.000327s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.007360s total; 0.000237 per start]
edge_update_memlabel_map_for_mlvars: num_starts 52 time spent: 0:0:0 [0.012496s total; 0.000240 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.063634s total; 0.002651 per start]
expand_locset_to_include_slots_for_memmask: num_starts 55 time spent: 0:0:0 [0.000250s total; 0.000005 per start]
total: num_starts 1 time spent: 0:0:38 [38.078516s total; 38.078516 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 8.41s.
ftmap_run_pointsto_analysis.: 0.188835s (num_starts 2; 0.0944s/start)s.
EQ Time after pointsto analysis: 8.21688s.
EQ Time after pointsto analysis and smt_query: 1.63761s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.62668s.
Equivalence proof found. The programs are equivalent.
