argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind4.proof
argv[9] = --spec-iospecs=ind4.iospecs
argv[10] = ind4.spec
argv[11] = ind4.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.552028
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind4.c
argv[10] = -o
argv[11] = par_tmpdir/ind4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind4.spec.etfg
argv[11] = par_tmpdir/ind4.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind4.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 108 time spent: 0:0:0 [0.000198s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 105 time spent: 0:0:0 [0.000167s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 971 time spent: 0:0:0 [0.006173s total; 0.000006 per start]
expr_simplify_solver: num_starts 79 time spent: 0:0:0 [0.008617s total; 0.000109 per start]
expr_simplify_syntactic: num_starts 79 time spent: 0:0:0 [0.023768s total; 0.000301 per start]
expr_simplify_select_on_store: num_starts 8 time spent: 0:0:0 [0.021161s total; 0.002645 per start]
expr_simplify_using_lhs_set_helper: num_starts 83 time spent: 0:0:0 [0.037504s total; 0.000452 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 260 time spent: 0:0:0 [0.037293s total; 0.000143 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 67 time spent: 0:0:0 [0.000350s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000046s total; 0.000015 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000012s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 51 time spent: 0:0:0 [0.000891s total; 0.000017 per start]
expr_simplify_memalloc_using_memlabel: num_starts 5 time spent: 0:0:0 [0.000016s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.020930s total; 0.002616 per start]
get_arithmetic_addsub_atoms: num_starts 63 time spent: 0:0:0 [0.000066s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 135 time spent: 0:0:0 [0.001536s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 1225 time spent: 0:0:0 [0.000738s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2233 time spent: 0:0:0 [0.039486s total; 0.000018 per start]
expr_do_simplify_helper_cache: num_starts 2233 time spent: 0:0:0 [0.001414s total; 0.000001 per start]
array_constant_equals: num_starts 19 time spent: 0:0:0 [0.000041s total; 0.000002 per start]
sort_dfa_canonical: num_starts 143947 time spent: 0:0:1 [1.212770s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 6 time spent: 0:0:0 [0.001849s total; 0.000308 per start]
combo_dfa_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.114716s total; 0.001434 per start]
alias_val_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.035547s total; 0.000444 per start]
get_sprel_map_from_avail_exprs: num_starts 106 time spent: 0:0:0 [0.013369s total; 0.000126 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000123s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 160 time spent: 0:0:0 [0.009746s total; 0.000061 per start]
compute_simplified_loc_exprs_for_edge: num_starts 453 time spent: 0:0:0 [0.045903s total; 0.000101 per start]
compute_locs_definitely_written_on_edge: num_starts 160 time spent: 0:0:0 [0.000091s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 49 time spent: 0:0:0 [0.006434s total; 0.000131 per start]
edge_update_memlabel_map_for_mlvars: num_starts 80 time spent: 0:0:0 [0.001288s total; 0.000016 per start]
add_new_locs_based_on_edge: num_starts 80 time spent: 0:0:0 [0.025066s total; 0.000313 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000264s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 7e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.8e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.6e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.8e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4.6e-05s (num_starts 53; 0.0000s/start)
context_constructor.solver.: 4.7e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 4.8e-05s (num_starts 61; 0.0000s/start)
context_constructor.: 5.8e-05s (num_starts 1; 0.0001s/start)
expr_is_callee_save_const.: 5.8e-05s (num_starts 57; 0.0000s/start)
main.3.: 9.2e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9.5e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 0.000127s (num_starts 154; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000136s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000139s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 0.000171s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000174s (num_starts 41; 0.0000s/start)
propagate_sprels.: 0.000181s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000182s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000186s (num_starts 12; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000195s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000214s (num_starts 23; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000224s (num_starts 41; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.00025s (num_starts 1; 0.0003s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000267s (num_starts 5; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000269s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000321s (num_starts 59; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000364s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000512s (num_starts 1; 0.0005s/start)
compute_z3_expr.: 0.000564s (num_starts 48; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000612s (num_starts 80; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000621s (num_starts 1193; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000646s (num_starts 1; 0.0006s/start)
def_analysis::xfer_and_meet.: 0.000678s (num_starts 82; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000731s (num_starts 1; 0.0007s/start)
canonicalize_llvm_nextpcs.: 0.000824s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000883s (num_starts 3; 0.0003s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001077s (num_starts 80; 0.0000s/start)
populate_transitive_closure.: 0.001085s (num_starts 1; 0.0011s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001131s (num_starts 1; 0.0011s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001192s (num_starts 80; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.001218s (num_starts 59; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.001278s (num_starts 1; 0.0013s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00136s (num_starts 1; 0.0014s/start)
tfg::collect_assumes_around_edge.: 0.001522s (num_starts 105; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001531s (num_starts 1; 0.0015s/start)
expr_substitute_using_available_exprs_submap.: 0.001808s (num_starts 67; 0.0000s/start)
create_closure_matrix.: 0.001978s (num_starts 105; 0.0000s/start)
query:convert_from_z3.: 0.001983s (num_starts 48; 0.0000s/start)
query:convert_to_z3.: 0.002305s (num_starts 48; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.002571s (num_starts 67; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002578s (num_starts 1; 0.0026s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.003083s (num_starts 1; 0.0031s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.003249s (num_starts 61; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.003261s (num_starts 2; 0.0016s/start)
compute_lr_status_for_expr.: 0.003282s (num_starts 78; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003352s (num_starts 61; 0.0001s/start)
graph_visit_exprs.: 0.003454s (num_starts 4; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004381s (num_starts 1815; 0.0000s/start)
populate_simplified_assets.: 0.005761s (num_starts 6; 0.0010s/start)
query:simplify-z3.: 0.005837s (num_starts 99; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.00594s (num_starts 1; 0.0059s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.005988s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.005992s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.005998s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.006002s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.: 0.006006s (num_starts 1; 0.0060s/start)
graph_identify_back_edges.: 0.006095s (num_starts 6; 0.0010s/start)
graph_identify_natural_loops.: 0.006405s (num_starts 6; 0.0011s/start)
tfg::populate_loc_definedness.before_solve.: 0.006427s (num_starts 2; 0.0032s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.006698s (num_starts 971; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.006847s (num_starts 2; 0.0034s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.00715s (num_starts 1; 0.0072s/start)
tfg::populate_loc_definedness.: 0.007155s (num_starts 2; 0.0036s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.007341s (num_starts 1; 0.0073s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.007559s (num_starts 1; 0.0076s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.008039s (num_starts 80; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.008382s (num_starts 80; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.008471s (num_starts 105; 0.0001s/start)
find_dominators.: 0.008715s (num_starts 10; 0.0009s/start)
graph_to_stream.: 0.008794s (num_starts 1; 0.0088s/start)
compute_regions.: 0.010301s (num_starts 6; 0.0017s/start)
populate_branch_affecting_locs.: 0.011299s (num_starts 2; 0.0056s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.015127s (num_starts 80; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.015605s (num_starts 3; 0.0052s/start)
tfg_preprocess.dst.llvm.foo.: 0.017945s (num_starts 1; 0.0179s/start)
tfg::tfg_preprocess.: 0.017948s (num_starts 1; 0.0179s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.021378s (num_starts 3; 0.0071s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.021957s (num_starts 108; 0.0002s/start)
get_tfg.: 0.023703s (num_starts 1; 0.0237s/start)
get_function_tfg_map.foo.: 0.023735s (num_starts 1; 0.0237s/start)
get_function_tfg_map.: 0.023738s (num_starts 1; 0.0237s/start)
main.2.: 0.024676s (num_starts 1; 0.0247s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.025893s (num_starts 80; 0.0003s/start)
populate_loc_liveness.: 0.034636s (num_starts 2; 0.0173s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.03569s (num_starts 80; 0.0004s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.0376s (num_starts 83; 0.0005s/start)
avail_exprs_create_submap.: 0.037674s (num_starts 240; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.044285s (num_starts 971; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.045734s (num_starts 971; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.047122s (num_starts 80; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.053306s (num_starts 971; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.080125s (num_starts 1; 0.0801s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.09504s (num_starts 1; 0.0950s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.11484s (num_starts 80; 0.0014s/start)
ftmap_run_pointsto_analysis.: 0.226501s (num_starts 1; 0.2265s/start)
parse_consts_db.: 7.00927s (num_starts 1; 7.0093s/start)
main.: 7.31234s (num_starts 1; 7.3123s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file ind4.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 3 correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting select expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding node L3%5%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A2: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    5 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:21 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    5 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:21 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:24 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:24 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:24 : foo.A2 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:24 : Chosen product-TFG foo.A2 will be explored later...</MSG>
<MSG>0:24 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A3 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A3...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A3...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L3%8%bbentry ending at L3%8%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Computing loop hoisting select expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Computing loop hoisting non-linear expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Adding node L3%8%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:24 : foo.A3: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Adding edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A3: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A3: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A3: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
140746 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( ind(0, Indxform23, lambda(Lambda46, Lambda46), lambda(Lambda47, sum(0, unit, prod(479472280, Indxform23)))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
140495 : sum_is(140273, 140279) : BOOL             : false
141946 : or(140746, 140495) : BOOL                 : false

ce =
=counter_example_begin yices.ce14 408a466f1da6ddee5bd9f6593a54d956
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : Indxform23 : BV:32
3 : Lambda46 : BV:32
4 : lambda(3, 3) : FUNCTION[BV:32 -> BV:32]
5 : Lambda47 : BV:32
6 : unit : UNIT
7 : 479472280 { 0x1c942a98 +1.15754985e186 } : BV:32
8 : prod(7, 2) : PROD[BV:32,BV:32]
9 : sum(1, 6, 8) : SUM[UNIT,PROD[BV:32,BV:32]]
10 : lambda(5, 9) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
11 : ind(1, 2, 4, 10) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
12 : sym_const(11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=counter_example.random_seed
1478800819
=counter_example_end


failcond-expr = or(not(true), sum_is(input.spec-%var-l-1, 1)):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_is(3, 4) : BOOL
6 : or(2, 5) : BOOL
</MSG>
<MSG>0:24 : foo.A3: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A3: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A3: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A3: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Failed correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
140746 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( ind(0, Indxform23, lambda(Lambda46, Lambda46), lambda(Lambda47, sum(0, unit, prod(479472280, Indxform23)))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
140495 : sum_is(140273, 140279) : BOOL             : false
141946 : or(140746, 140495) : BOOL                 : false

ce =
=counter_example_begin yices.ce14 408a466f1da6ddee5bd9f6593a54d956
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : Indxform23 : BV:32
3 : Lambda46 : BV:32
4 : lambda(3, 3) : FUNCTION[BV:32 -> BV:32]
5 : Lambda47 : BV:32
6 : unit : UNIT
7 : 479472280 { 0x1c942a98 +1.15754985e186 } : BV:32
8 : prod(7, 2) : PROD[BV:32,BV:32]
9 : sum(1, 6, 8) : SUM[UNIT,PROD[BV:32,BV:32]]
10 : lambda(5, 9) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
11 : ind(1, 2, 4, 10) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
12 : sym_const(11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=counter_example.random_seed
1478800819
=counter_example_end


</MSG>
<MSG>0:24 : Discovered that the correlation was useless for the product-TFG foo.A3 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Adding node L0%0%d_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:24 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : foo.A1: Added the 3 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:24 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:24 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:24 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce180
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce180      2.:z3v487.ce181      3.:yices.ce182
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:25 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:25 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce180
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce180      2.:z3v487.ce181      3.:yices.ce182
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:25 : foo.A1 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : foo.A1 (d:1, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG foo.A1: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1: Found 1 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1 created 1 possibilities in group foo.A1.B...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : Adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Adding edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : foo.A1.B1: Propagated 5 out of 7 counter-examples across edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : foo.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:26 : foo.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : foo.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : foo.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce180      2.:z3v487.ce278
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce180      2.:z3v487.ce181      3.:yices.ce182
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:26 : Added correlation to the product-TFG foo.A1.B1 (d:2, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG foo.A2 (d:1, s:0, sp: 3) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:26 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:26 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:26 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:26 : foo.A2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG foo.A2: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Considering 2 paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Found 2 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : product-TFG foo.A2: Found 2 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:27 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:27 : foo.A2.B2: Added the 5 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:27 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:27 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:27 : foo.A2.B2: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:27 : Added correlation to the product-TFG foo.A2.B2 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:27 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:27 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:27 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:28 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:28 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:28 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12


<MSG>0:28 : foo.A2.B2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:28 : foo.A2.B2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:28 : product-TFG foo.A2.B2: Enumerating correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : product-TFG foo.A2.B2: Found 1 correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:28 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:28 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:28 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:28 : Creating ssa-path for the src-tfg path L3%5%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:28 : Adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:28 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:28 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:28 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:28 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:28 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Propagated 7 out of 13 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:29 : foo.A2.B2.C1: Added the 7 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:29 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:29 : Done adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : Added correlation to the product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:29 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:29 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:29 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:29 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : foo.A2.B2.C1 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:29 : foo.A2.B2.C1 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:29 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:29 : Checking equivalence proof...</MSG>
<MSG>0:29 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce12      1.:cvc4.ce48      2.:cvc4.ce443
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce12      1.:yices.ce50      2.:cvc4.ce48      3.:z3v487.ce49
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce12

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 8.18s, query:smt.: 2.4855s (num_starts 113; 0.0220s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 7.32782s (num_starts 71; 0.1032s/start)ftmap_run_pointsto_analysis.: 0.174972s (num_starts 2; 0.0875s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 1e-06s (num_starts 4; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 8e-06s (num_starts 3; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 8e-06s (num_starts 9; 0.0000s/start)
prune_dst_memslots.: 9e-06s (num_starts 3; 0.0000s/start)
prove_trivial.: 1.1e-05s (num_starts 15; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1.1e-05s (num_starts 6; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.4e-05s (num_starts 24; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.4e-05s (num_starts 6; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.7e-05s (num_starts 6; 0.0000s/start)
get_intersected_lr_status.: 3.1e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.2e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 3.9e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 3.9e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 4.5e-05s (num_starts 2; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 5e-05s (num_starts 14; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.1e-05s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry.: 6.1e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 6.2e-05s (num_starts 18; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 6.7e-05s (num_starts 27; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 8.9e-05s (num_starts 71; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.5e-05s (num_starts 3; 0.0000s/start)
get_lr_status_for_loc_ids.: 0.000103s (num_starts 34; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000112s (num_starts 260; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000121s (num_starts 1; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000133s (num_starts 71; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000135s (num_starts 11; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.000144s (num_starts 3; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000145s (num_starts 7; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000154s (num_starts 3; 0.0001s/start)
lr_status_meet.: 0.000157s (num_starts 223; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000169s (num_starts 83; 0.0000s/start)
expr_is_hidden_reg.: 0.00017s (num_starts 220; 0.0000s/start)
populate_locid2expr_map.: 0.000173s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000181s (num_starts 13; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000199s (num_starts 3; 0.0001s/start)
expr_is_callee_save_const.: 0.0002s (num_starts 232; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000205s (num_starts 56; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00021s (num_starts 18; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000222s (num_starts 3; 0.0001s/start)
compute_sprel_relations.: 0.000225s (num_starts 2; 0.0001s/start)
ce_perform_memory_fuzzing.: 0.000229s (num_starts 216; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000233s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000239s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000244s (num_starts 12; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000252s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lwhile.cond%1%bbentry.inductive-invariants.: 0.000307s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00031s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00031s (num_starts 1; 0.0003s/start)
populate_dominator_and_postdominator_relations.: 0.000311s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000313s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000313s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000314s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000316s (num_starts 1; 0.0003s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000319s (num_starts 3; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000325s (num_starts 12; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000328s (num_starts 1; 0.0003s/start)
graph_locs_add_all_local_vars.: 0.000336s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00041s (num_starts 48; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000427s (num_starts 106; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000431s (num_starts 106; 0.0000s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000441s (num_starts 1; 0.0004s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000448s (num_starts 9; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000463s (num_starts 30; 0.0000s/start)
create_closure_matrix.: 0.000481s (num_starts 55; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000538s (num_starts 10; 0.0001s/start)
tfg_suffixpath_get_expr_helper.: 0.000541s (num_starts 12; 0.0000s/start)
ldr_decomposition.: 0.000558s (num_starts 27; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.000576s (num_starts 20; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000618s (num_starts 4; 0.0002s/start)
get_sprel_map_pair.: 0.00064s (num_starts 60; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000644s (num_starts 58; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000664s (num_starts 1; 0.0007s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000691s (num_starts 24; 0.0000s/start)
construct_linear_combination_exprs.: 0.000708s (num_starts 20; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000717s (num_starts 71; 0.0000s/start)
proof_query_is_trivial.: 0.000718s (num_starts 71; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000741s (num_starts 4; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000761s (num_starts 4; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000769s (num_starts 2; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000782s (num_starts 2; 0.0004s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000801s (num_starts 33; 0.0000s/start)
populate_simplified_to_state.: 0.000803s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000827s (num_starts 1; 0.0008s/start)
tfg::populate_loc_definedness.before_solve.: 0.00085s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.000884s (num_starts 1; 0.0009s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000907s (num_starts 1; 0.0009s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000925s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00095s (num_starts 1; 0.0009s/start)
removeMostPromising.: 0.000987s (num_starts 17; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001009s (num_starts 5; 0.0002s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001017s (num_starts 1; 0.0010s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001057s (num_starts 336; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001082s (num_starts 18; 0.0001s/start)
expr_represents_llvm_undef.: 0.001085s (num_starts 236; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.001093s (num_starts 46; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.00123s (num_starts 3; 0.0004s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001307s (num_starts 15; 0.0001s/start)
tfg::populate_loc_definedness.: 0.001309s (num_starts 3; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.001312s (num_starts 6; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.001331s (num_starts 149; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001345s (num_starts 4; 0.0003s/start)
identify_address_taken_local_variables.: 0.001424s (num_starts 1; 0.0014s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001567s (num_starts 11; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001577s (num_starts 18; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001622s (num_starts 58; 0.0000s/start)
collect_assumes_around_edge.: 0.001725s (num_starts 6; 0.0003s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00179s (num_starts 2; 0.0009s/start)
find_dominators.: 0.001798s (num_starts 31; 0.0001s/start)
graph_identify_back_edges.: 0.001899s (num_starts 27; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.001907s (num_starts 2; 0.0010s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002083s (num_starts 4; 0.0005s/start)
graph_identify_natural_loops.: 0.002097s (num_starts 27; 0.0001s/start)
compute_vars_reaching_definitions.: 0.002174s (num_starts 2; 0.0011s/start)
predicate_canonicalized.: 0.002225s (num_starts 20; 0.0001s/start)
set_result_and_counter_example.: 0.002234s (num_starts 113; 0.0000s/start)
gen_pred_from_coeff_row.simplify.: 0.002435s (num_starts 20; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.002517s (num_starts 48; 0.0001s/start)
populate_simplified_assets.: 0.002592s (num_starts 6; 0.0004s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.002624s (num_starts 48; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.002764s (num_starts 52; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.002805s (num_starts 56; 0.0001s/start)
populate_branch_affecting_locs.: 0.002862s (num_starts 3; 0.0010s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.003011s (num_starts 58; 0.0001s/start)
graph_visit_exprs.: 0.003014s (num_starts 3; 0.0010s/start)
get_unrolled_loop_paths_from.: 0.003022s (num_starts 3; 0.0010s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.003035s (num_starts 48; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.003052s (num_starts 27; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.003123s (num_starts 56; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003179s (num_starts 81; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.003195s (num_starts 2; 0.0016s/start)
populate_transitive_closure.: 0.00322s (num_starts 37; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.00331s (num_starts 595; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003337s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003338s (num_starts 1; 0.0033s/start)
bv_linear_solve.: 0.003341s (num_starts 27; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003341s (num_starts 1; 0.0033s/start)
propagate_nodece_across_edge.: 0.003409s (num_starts 9; 0.0004s/start)
query:bv_solve.: 0.003506s (num_starts 27; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.00355s (num_starts 52; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.003642s (num_starts 81; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.003673s (num_starts 55; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.003899s (num_starts 149; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.004152s (num_starts 4; 0.0010s/start)
aliasing_constraints.convert_to_expr.: 0.004273s (num_starts 149; 0.0000s/start)
bv_solve_returning_intermediate_structures.: 0.004382s (num_starts 27; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.004496s (num_starts 3; 0.0015s/start)
expr_linear_relation_holds::visit.var.: 0.004499s (num_starts 236; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.004882s (num_starts 1; 0.0049s/start)
get_next_potential_correlations.: 0.005044s (num_starts 4; 0.0013s/start)
bvsolve_cache_query.miss1.: 0.005103s (num_starts 27; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005135s (num_starts 1; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.005138s (num_starts 1; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005141s (num_starts 1; 0.0051s/start)
compute_regions.: 0.005261s (num_starts 27; 0.0002s/start)
bvsolve_cache_query.: 0.005291s (num_starts 27; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.005938s (num_starts 111; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005945s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005948s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005951s (num_starts 1; 0.0060s/start)
pth_collect_simplified_preds_using_atom_func.: 0.006208s (num_starts 75; 0.0001s/start)
solve_for_bv_points.: 0.006473s (num_starts 27; 0.0002s/start)
gen_pred_from_coeff_row.: 0.006695s (num_starts 20; 0.0003s/start)
compute_preds_for_bv_points.: 0.006819s (num_starts 9; 0.0008s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.006881s (num_starts 15; 0.0005s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.0071s (num_starts 3; 0.0024s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.007459s (num_starts 194; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.00763s (num_starts 27; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.007807s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.007813s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.007816s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.007821s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.007825s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.007833s (num_starts 1; 0.0078s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.008059s (num_starts 5; 0.0016s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.008072s (num_starts 46; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.008084s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.008085s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-trivial.: 0.008087s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.008088s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.008094s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.008098s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.008104s (num_starts 1; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.008238s (num_starts 5; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.008246s (num_starts 5; 0.0016s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.00853s (num_starts 127; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00855s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008552s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008554s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008559s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.008563s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008573s (num_starts 1; 0.0086s/start)
collect_assumes_around_path_helper.: 0.008928s (num_starts 106; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.009071s (num_starts 129; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.00909s (num_starts 6; 0.0015s/start)
graph_with_paths::collect_assumes_around_path.: 0.009246s (num_starts 106; 0.0001s/start)
do_ssa_transformation.: 0.009347s (num_starts 2; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011141s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011149s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.011158s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.011169s (num_starts 3; 0.0037s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.011445s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.011447s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.011456s (num_starts 1; 0.0115s/start)
expr_substitute_using_available_exprs_submap.: 0.011601s (num_starts 209; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.011883s (num_starts 3; 0.0040s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.01189s (num_starts 108; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.012373s (num_starts 50; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013053s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013055s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013418s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013421s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.013424s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01361s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013615s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.01362s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013898s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013901s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.013946s (num_starts 2; 0.0070s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014462s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.014545s (num_starts 4; 0.0036s/start)
query:convert_to_z3.: 0.014635s (num_starts 205; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.014743s (num_starts 149; 0.0001s/start)
lhs_set_sort.: 0.014929s (num_starts 56; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.015316s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-trivial.: 0.015316s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.01532s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.016333s (num_starts 2; 0.0082s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.016759s (num_starts 46; 0.0004s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.01677s (num_starts 223; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.016775s (num_starts 2; 0.0084s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.017092s (num_starts 223; 0.0001s/start)
query:convert_from_z3.: 0.01734s (num_starts 205; 0.0001s/start)
compute_lr_status_for_expr.: 0.017718s (num_starts 292; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017852s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017856s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017859s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017863s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.017867s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.017875s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-trivial.: 0.018049s (num_starts 3; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.018056s (num_starts 3; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.018191s (num_starts 2; 0.0091s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.018198s (num_starts 2; 0.0091s/start)
counter_example_satisfies_preds.: 0.018304s (num_starts 290; 0.0001s/start)
get_unrolled_paths_from.: 0.018431s (num_starts 20; 0.0009s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.018613s (num_starts 149; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.019049s (num_starts 2; 0.0095s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.019055s (num_starts 2; 0.0095s/start)
graph_to_stream.: 0.019594s (num_starts 4; 0.0049s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.020151s (num_starts 8; 0.0025s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020821s (num_starts 1; 0.0208s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020822s (num_starts 1; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020824s (num_starts 1; 0.0208s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.020971s (num_starts 22; 0.0010s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.021034s (num_starts 22; 0.0010s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.022438s (num_starts 21; 0.0011s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.022567s (num_starts 46; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.022907s (num_starts 4; 0.0057s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.023271s (num_starts 46; 0.0005s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.024568s (num_starts 950; 0.0000s/start)
collect_aliasing_constraints_around_path_helper.: 0.024743s (num_starts 120; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.025192s (num_starts 76; 0.0003s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.025828s (num_starts 22; 0.0012s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.026103s (num_starts 90; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.026113s (num_starts 3; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.026129s (num_starts 3; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.026136s (num_starts 3; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.026157s (num_starts 3; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.026168s (num_starts 3; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.026187s (num_starts 3; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027498s (num_starts 2; 0.0137s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.02751s (num_starts 3; 0.0092s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.027549s (num_starts 15; 0.0018s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-trivial.: 0.027557s (num_starts 2; 0.0138s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.027565s (num_starts 2; 0.0138s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.027567s (num_starts 2; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.027573s (num_starts 2; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.027579s (num_starts 2; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned.: 0.028949s (num_starts 2; 0.0145s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.028968s (num_starts 6; 0.0048s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029152s (num_starts 1; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029158s (num_starts 1; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029163s (num_starts 1; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029244s (num_starts 1; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029246s (num_starts 1; 0.0292s/start)
compute_new_lr_status_on_locs.: 0.030741s (num_starts 46; 0.0007s/start)
populate_loc_liveness.: 0.031103s (num_starts 3; 0.0104s/start)
avail_exprs_create_submap.: 0.032223s (num_starts 138; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.032287s (num_starts 2; 0.0161s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.032311s (num_starts 2; 0.0162s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.03232s (num_starts 2; 0.0162s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.032698s (num_starts 3; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.032928s (num_starts 2; 0.0165s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.032934s (num_starts 2; 0.0165s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.033802s (num_starts 3; 0.0113s/start)
counter_example_falsifies_preds.: 0.034115s (num_starts 48; 0.0007s/start)
compute_expr_eqclasses_at_pc.: 0.034362s (num_starts 3; 0.0115s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.034367s (num_starts 5; 0.0069s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.035086s (num_starts 5; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.035203s (num_starts 2; 0.0176s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.035209s (num_starts 2; 0.0176s/start)
cg_add_node.: 0.035268s (num_starts 5; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-trivial.: 0.036248s (num_starts 2; 0.0181s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.036254s (num_starts 2; 0.0181s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.037245s (num_starts 6; 0.0062s/start)
create_new_corr_graph_edge.new_node.: 0.039452s (num_starts 4; 0.0099s/start)
create_new_corr_graph_edge.: 0.03977s (num_starts 6; 0.0066s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.042652s (num_starts 2; 0.0213s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.042657s (num_starts 2; 0.0213s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.043031s (num_starts 1308; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.044401s (num_starts 3; 0.0148s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.045058s (num_starts 1; 0.0451s/start)
tfg_postprocess_after_pointsto_analysis.: 0.046349s (num_starts 2; 0.0232s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.046611s (num_starts 90; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046738s (num_starts 1; 0.0467s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.046894s (num_starts 4; 0.0117s/start)
query:simplify-z3.: 0.048466s (num_starts 435; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.048657s (num_starts 3; 0.0162s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.050538s (num_starts 6; 0.0084s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.051545s (num_starts 3; 0.0172s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.051616s (num_starts 70; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.051628s (num_starts 2; 0.0258s/start)
counter_example_evaluate_preds.: 0.051666s (num_starts 338; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056657s (num_starts 3; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057439s (num_starts 2; 0.0287s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.057447s (num_starts 2; 0.0287s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058676s (num_starts 2; 0.0293s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058679s (num_starts 2; 0.0293s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05869s (num_starts 2; 0.0293s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058698s (num_starts 2; 0.0293s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.061125s (num_starts 46; 0.0013s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.064498s (num_starts 5; 0.0129s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.065428s (num_starts 3; 0.0218s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned.: 0.065442s (num_starts 3; 0.0218s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.066174s (num_starts 3; 0.0221s/start)
tfg_relax_pointsto_vals_on_edge.: 0.067677s (num_starts 22; 0.0031s/start)
collect_inductive_preds_around_path.: 0.069254s (num_starts 71; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.07175s (num_starts 8; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.074069s (num_starts 3; 0.0247s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.074088s (num_starts 3; 0.0247s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%bbentry_Lwhile.cond%1%bbentry.inductive-invariants.: 0.075452s (num_starts 9; 0.0084s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.07742s (num_starts 24; 0.0032s/start)
graph_ec_apply_trans_funs_helper.0.: 0.077558s (num_starts 335; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.079039s (num_starts 339; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.07909s (num_starts 328; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.07973s (num_starts 339; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.079868s (num_starts 328; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.080795s (num_starts 4; 0.0202s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.080838s (num_starts 1366; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.08131s (num_starts 1308; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.085596s (num_starts 71; 0.0012s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.085852s (num_starts 90; 0.0010s/start)
put_smtlib_string_in_file.: 0.09606s (num_starts 226; 0.0004s/start)
compute_z3_expr.: 0.096742s (num_starts 318; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.103479s (num_starts 27; 0.0038s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.103739s (num_starts 50; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.105679s (num_starts 1; 0.1057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.105681s (num_starts 1; 0.1057s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.106945s (num_starts 5; 0.0214s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.11204s (num_starts 1308; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112754s (num_starts 4; 0.0282s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112769s (num_starts 4; 0.0282s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.118124s (num_starts 24; 0.0049s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.121299s (num_starts 8; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.124984s (num_starts 4; 0.0312s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.133271s (num_starts 3; 0.0444s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.133282s (num_starts 3; 0.0444s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.141386s (num_starts 6; 0.0236s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.14219s (num_starts 14; 0.0102s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.147831s (num_starts 31; 0.0048s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.148183s (num_starts 45; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.157283s (num_starts 3; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.157295s (num_starts 3; 0.0524s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.157718s (num_starts 2; 0.0789s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.170135s (num_starts 6; 0.0284s/start)
ftmap_run_pointsto_analysis.: 0.174972s (num_starts 2; 0.0875s/start)
tfg_run_pointsto_analysis.: 0.175339s (num_starts 2; 0.0877s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.175375s (num_starts 6; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown.: 0.175399s (num_starts 6; 0.0292s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.181461s (num_starts 3; 0.0605s/start)
tfg_populate_structs_after_ssa_construction.: 0.181938s (num_starts 2; 0.0910s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.192935s (num_starts 2; 0.0965s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.195798s (num_starts 16; 0.0122s/start)
corr_graph::add_edge().: 0.202775s (num_starts 6; 0.0338s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.203996s (num_starts 4; 0.0510s/start)
counter_example_translate_on_edge_composition_helper.: 0.205911s (num_starts 280; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.206619s (num_starts 2; 0.1033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.206622s (num_starts 2; 0.1033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.206631s (num_starts 2; 0.1033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.206641s (num_starts 2; 0.1033s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.213644s (num_starts 56; 0.0038s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.227084s (num_starts 8; 0.0284s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.228549s (num_starts 3; 0.0762s/start)
guarded_predicate_set_and.: 0.239328s (num_starts 149; 0.0016s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.244332s (num_starts 6; 0.0407s/start)
corr_graph_add_correlation.: 0.244548s (num_starts 6; 0.0408s/start)
parse_z3_model.: 0.252375s (num_starts 61; 0.0041s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.252568s (num_starts 56; 0.0045s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.252738s (num_starts 6; 0.0421s/start)
parse_cvc4_model.: 0.266443s (num_starts 61; 0.0044s/start)
check_equivalence_proof.: 0.28302s (num_starts 1; 0.2830s/start)
decide_hoare_triple_helper;-trivial.: 0.307211s (num_starts 34; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.312282s (num_starts 3; 0.1041s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.312287s (num_starts 3; 0.1041s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.322628s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.322628s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.322631s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.322634s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.322639s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.322641s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.322645s (num_starts 1; 0.3226s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.322981s (num_starts 2; 0.1615s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.334407s (num_starts 1; 0.3344s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.33441s (num_starts 1; 0.3344s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.334418s (num_starts 1; 0.3344s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.334422s (num_starts 1; 0.3344s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.339941s (num_starts 5; 0.0680s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.339958s (num_starts 5; 0.0680s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.341459s (num_starts 232; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.349514s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.349517s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.34952s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.349524s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.349535s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate.: 0.34954s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.349549s (num_starts 1; 0.3495s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.357646s (num_starts 2; 0.1788s/start)
parse_yices_model.: 0.357781s (num_starts 61; 0.0059s/start)
apply_mask_and_overlay_array_constant.: 0.359378s (num_starts 232; 0.0015s/start)
check_wfconds_on_edge.: 0.38656s (num_starts 9; 0.0430s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.453663s (num_starts 13; 0.0349s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.54061s (num_starts 265; 0.0020s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.579473s (num_starts 19; 0.0305s/start)
check_preds_on_edge_compositions.: 0.59716s (num_starts 12; 0.0498s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.618459s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.618462s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.618467s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.618468s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.618477s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.61848s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.618487s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon).: 0.61849s (num_starts 1; 0.6185s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.621317s (num_starts 2; 0.3107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.621326s (num_starts 2; 0.3107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.629605s (num_starts 7; 0.0899s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.629623s (num_starts 7; 0.0899s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.634346s (num_starts 3; 0.2114s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.643617s (num_starts 9; 0.0715s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.674325s (num_starts 3; 0.2248s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.679245s (num_starts 1; 0.6792s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.679246s (num_starts 1; 0.6792s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.679255s (num_starts 1; 0.6793s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.679259s (num_starts 1; 0.6793s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.699922s (num_starts 1; 0.6999s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.699942s (num_starts 1; 0.6999s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.699948s (num_starts 1; 0.6999s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.699951s (num_starts 1; 0.7000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.758666s (num_starts 3; 0.2529s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.758677s (num_starts 3; 0.2529s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.758696s (num_starts 3; 0.2529s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.806066s (num_starts 4; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.806091s (num_starts 4; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.806109s (num_starts 4; 0.2015s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry).: 0.809431s (num_starts 9; 0.0899s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.880237s (num_starts 7; 0.1257s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.880255s (num_starts 7; 0.1258s/start)
read_counter_examples_from_channel.: 0.887841s (num_starts 61; 0.0146s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.913249s (num_starts 9; 0.1015s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.952561s (num_starts 3; 0.3175s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.01364s (num_starts 2; 0.5068s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 1.0137s (num_starts 2; 0.5068s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.03918s (num_starts 9; 0.1155s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.22408s (num_starts 14; 0.0874s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 1.23576s (num_starts 25; 0.0494s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.34376s (num_starts 6; 0.2240s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon).: 1.37156s (num_starts 8; 0.1714s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.44044s (num_starts 7; 0.2058s/start)
decide_hoare_triple_helper;per-query-type;linear.: 1.583s (num_starts 21; 0.0754s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 1.6888s (num_starts 2; 0.8444s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 1.68881s (num_starts 2; 0.8444s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-all-proof-path-optimizations.: 1.68883s (num_starts 2; 0.8444s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 1.68884s (num_starts 2; 0.8444s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 1.80164s (num_starts 6; 0.3003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown.: 1.80166s (num_starts 6; 0.3003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 1.85917s (num_starts 8; 0.2324s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.95474s (num_starts 4; 0.4887s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.95482s (num_starts 4; 0.4887s/start)
decide_hoare_triple.: 1.98301s (num_starts 6; 0.3305s/start)
dst_edge_composition_proves_false.: 1.99823s (num_starts 4; 0.4996s/start)
get_next_dst_edge_composition_to_correlate.: 2.00863s (num_starts 5; 0.4017s/start)
ce_reconcile_sorts_and_values.: 2.19716s (num_starts 183; 0.0120s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 2.38877s (num_starts 3; 0.7963s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 2.38893s (num_starts 3; 0.7963s/start)
query:smt.: 2.4855s (num_starts 113; 0.0220s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 2.87719s (num_starts 21; 0.1370s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 2.93376s (num_starts 24; 0.1222s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 2.93986s (num_starts 3; 0.9800s/start)
spawn_smt_query.: 3.37493s (num_starts 113; 0.0299s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.62903s (num_starts 34; 0.1361s/start)
update_invariant_state_for_edges.: 5.2946s (num_starts 5; 1.0589s/start)
cg_check_new_cg_ec.: 5.30141s (num_starts 5; 1.0603s/start)
correl_entry_apply.: 5.30161s (num_starts 5; 1.0603s/start)
solver_provable.: 5.9571s (num_starts 149; 0.0400s/start)
solver_satisfiable-cache-miss.: 5.98608s (num_starts 113; 0.0530s/start)
solver_satisfiable.: 5.98769s (num_starts 150; 0.0399s/start)
expr_is_provable.: 5.99403s (num_starts 149; 0.0402s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 5.9975s (num_starts 149; 0.0403s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 6.0057s (num_starts 149; 0.0403s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 6.01365s (num_starts 149; 0.0404s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 6.25997s (num_starts 149; 0.0420s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 6.27551s (num_starts 149; 0.0421s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 6.27842s (num_starts 149; 0.0421s/start)
is_expr_equal_using_lhs_set_and_precond.: 6.67777s (num_starts 56; 0.1192s/start)
prove.: 6.67819s (num_starts 56; 0.1193s/start)
prove_spawn_and_join_helper.: 6.67847s (num_starts 56; 0.1193s/start)
prove_spawn_and_join.: 7.09937s (num_starts 56; 0.1268s/start)
prove_wrapper.proof_query_not_trivial.: 7.10615s (num_starts 56; 0.1269s/start)
prove_wrapper.: 7.15041s (num_starts 71; 0.1007s/start)
decide_hoare_triple_check_ub.: 7.24048s (num_starts 71; 0.1020s/start)
expandProductCFG.: 7.31583s (num_starts 6; 1.2193s/start)
decide_hoare_triple_helper.: 7.32782s (num_starts 71; 0.1032s/start)
decide_hoare_triple_with_alias_cons.: 7.43207s (num_starts 71; 0.1047s/start)
bestFirstSearch.: 7.63284s (num_starts 1; 7.6328s/start)
Time taken for equivalence check.: 7.91951s (num_starts 1; 7.9195s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 16
# of paths expanded.: 5
# of queries to linear solver.: 27
# of smt-solver-queries.: 113
L0%0%d=>Lwhile.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lwhile.cond%1%bbentry-src_to_pcs.: 3
Lwhile.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lwhile.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_ecs.: 2
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_to_pcs.: 1
num-backtrackings.: 2
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 7
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 8
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 11
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 37
smt-queries-cvc4-sat.: 61
smt-queries-yices-sat.: 61
smt-queries-z3-sat.: 61
total-correlation-possibilities.: 8
total-correlation-possibilities-mod-lsprels.: 8
total-correlations-explored.: 6

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 4
final-CG-counterexamples-total-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 13
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 6
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.65
final-CG-time-to-total-time-ratio.: 0.61
query-time-to-total-time-ratio.: 0.32

Context stats:
exprs: count: 151116
sorts: count: 7754
num_proof_queries: 56
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7246
	        hit ratio:	0.978885
m_simplify_solver:
	----------- total:	1503
	        hit ratio:	0.846973
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	148
	        hit ratio:	0.837838
m_z3_solver_substitution:
	----------- total:	230
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	230
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	44
	        hit ratio:	0.977273
m_expr_size:
	----------- total:	5419
	        hit ratio:	0.938734
m_contains_only_constants_or_sp_versions:
	----------- total:	12
	        hit ratio:	0.833333
m_expr_evaluates_to_constant_visitor:
	----------- total:	9607
	        hit ratio:	0.671281
m_sort_dfa_canonicalize:
	----------- total:	74728
	        hit ratio:	0.948921
m_expr_convert_to_iexpr:
	----------- total:	3467
	        hit ratio:	0.5985

z3_solver expr_query_cache entry size: 113
	----------- total:	150
	             hits:	37
	        hit ratio:	0.246667
histogram (time taken by solver in ms):
[ 2.8310,  3.8606) (avg.  3.5134)        : 9
[ 3.8606,  5.2646) (avg.  4.5220)        : 28
[ 5.2646,  7.1792) (avg.  5.8020)        : 10
[ 7.1792,  9.7901) (avg.  8.8528)        : 5
[ 9.7901, 13.3505) (avg.  0.0000)        : 0
[13.3505, 18.2058) (avg. 17.2400)        : 2
[18.2058, 24.8269) (avg. 22.3326)        : 5
[24.8269, 33.8559) (avg. 29.5083)        : 23
[33.8559, 46.1685) (avg. 39.1062)        : 17
[46.1685, 62.9590) (avg. 52.4299)        : 14
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  71) (avg.  61)                    : 20
[ 71, 101) (avg.  83)                    : 19
[101, 131) (avg. 117)                    : 32
[131, 161) (avg. 138)                    : 7
[161, 191) (avg. 173)                    : 14
[191, 222) (avg. 205)                    : 11
[222, 252) (avg. 242)                    : 6
[252, 282) (avg.   0)                    : 0
[282, 312) (avg.   0)                    : 0
[312, 342) (avg. 332)                    : 4
Top 10 highest time taking queries:
1. [0.062s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
2. [0.059s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
3. [0.058s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
4. [0.054s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%bbentry_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL3%5%b.0
5. [0.054s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.2
6. [0.052s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.5
7. [0.052s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%bbentry_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL3%5%b.0
8. [0.050s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.5
9. [0.050s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
10. [0.050s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0

<MSG>0:29 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 111 time spent: 0:0:0 [0.002470s total; 0.000022 per start]
tfg_computeWP: num_starts 378 time spent: 0:0:0 [0.071383s total; 0.000189 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1014 time spent: 0:0:0 [0.001748s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 930 time spent: 0:0:0 [0.001564s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 434 time spent: 0:0:0 [0.000792s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 32 time spent: 0:0:0 [0.056298s total; 0.001759 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.196745s total; 0.016395 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 226 time spent: 0:0:0 [0.193123s total; 0.000855 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 74 time spent: 0:0:0 [0.054861s total; 0.000741 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 203 time spent: 0:0:0 [0.166083s total; 0.000818 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1172 time spent: 0:0:0 [0.204660s total; 0.000175 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 203 time spent: 0:0:0 [0.015981s total; 0.000079 per start]
tfg_graph_get_vars_written_on_edge: num_starts 203 time spent: 0:0:0 [0.006775s total; 0.000033 per start]
cg_with_rank_add_CE_at_pc: num_starts 50 time spent: 0:0:0 [0.052596s total; 0.001052 per start]
graph_with_ce_add_CE_at_pc: num_starts 28 time spent: 0:0:0 [0.000512s total; 0.000018 per start]
graph_with_guessing_add_CE_at_pc: num_starts 50 time spent: 0:0:0 [0.051987s total; 0.001040 per start]
point_set_add_point_using_CE: num_starts 81 time spent: 0:0:0 [0.016850s total; 0.000208 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 81 time spent: 0:0:0 [0.017124s total; 0.000211 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.038819s total; 0.001213 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.021151s total; 0.000661 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2289 time spent: 0:0:0 [0.124475s total; 0.000054 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 96 time spent: 0:0:0 [0.010038s total; 0.000105 per start]
expr_simplify_solver: num_starts 1563 time spent: 0:0:0 [0.109196s total; 0.000070 per start]
expr_simplify_syntactic: num_starts 1611 time spent: 0:0:0 [0.374744s total; 0.000233 per start]
expr_simplify_select_on_store: num_starts 126 time spent: 0:0:0 [0.346407s total; 0.002749 per start]
expr_simplify_using_lhs_set_helper: num_starts 329 time spent: 0:0:0 [0.557578s total; 0.001695 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2873 time spent: 0:0:0 [0.554218s total; 0.000193 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1715 time spent: 0:0:0 [0.007939s total; 0.000005 per start]
expr_simplify_eq: num_starts 558 time spent: 0:0:0 [0.006484s total; 0.000012 per start]
expr_simplify_or: num_starts 16 time spent: 0:0:0 [0.000021s total; 0.000001 per start]
expr_simplify_and: num_starts 143 time spent: 0:0:0 [0.000831s total; 0.000006 per start]
expr_simplify_not: num_starts 37 time spent: 0:0:0 [0.000133s total; 0.000004 per start]
expr_simplify_implies: num_starts 87 time spent: 0:0:0 [0.000884s total; 0.000010 per start]
expr_simplify_ite: num_starts 68 time spent: 0:0:0 [0.003757s total; 0.000055 per start]
canonicalize_expr_tree: num_starts 265 time spent: 0:0:0 [0.024939s total; 0.000094 per start]
expr_simplify_memalloc_using_memlabel: num_starts 117 time spent: 0:0:0 [0.000377s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 126 time spent: 0:0:0 [0.342887s total; 0.002721 per start]
get_arithmetic_addsub_atoms: num_starts 3184 time spent: 0:0:0 [0.001513s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 606 time spent: 0:0:0 [0.005939s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 405 time spent: 0:0:0 [0.000321s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 7572 time spent: 0:0:0 [0.414668s total; 0.000055 per start]
expr_do_simplify_helper_cache: num_starts 7572 time spent: 0:0:0 [0.006597s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 12 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 12 time spent: 0:0:0 [0.000041s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 715 time spent: 0:0:0 [0.214505s total; 0.000300 per start]
array_constant_equals: num_starts 13484 time spent: 0:0:0 [0.017532s total; 0.000001 per start]
sort_dfa_canonical: num_starts 217496 time spent: 0:0:1 [1.571002s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 3476 time spent: 0:0:0 [0.489455s total; 0.000141 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.118093s total; 0.004921 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.077365s total; 0.003224 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.002987s total; 0.000085 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000038s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 92 time spent: 0:0:0 [0.028521s total; 0.000310 per start]
compute_simplified_loc_exprs_for_edge: num_starts 242 time spent: 0:0:0 [0.084544s total; 0.000349 per start]
compute_locs_definitely_written_on_edge: num_starts 92 time spent: 0:0:0 [0.000244s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.006653s total; 0.000215 per start]
edge_update_memlabel_map_for_mlvars: num_starts 46 time spent: 0:0:0 [0.008150s total; 0.000177 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.059017s total; 0.002459 per start]
expand_locset_to_include_slots_for_memmask: num_starts 55 time spent: 0:0:0 [0.000248s total; 0.000005 per start]
total: num_starts 1 time spent: 0:0:35 [35.745694s total; 35.745694 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 8.19s.
ftmap_run_pointsto_analysis.: 0.174972s (num_starts 2; 0.0875s/start)s.
EQ Time after pointsto analysis: 8.01829s.
EQ Time after pointsto analysis and smt_query: 0.867872s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.862581s.
Equivalence proof found. The programs are equivalent.
