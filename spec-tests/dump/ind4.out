argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --smt-query-timeout=5
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind4.proof
argv[9] = --spec-iospecs=ind4.iospecs
argv[10] = ind4.spec
argv[11] = ind4.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.4087433
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind4.c
argv[10] = -o
argv[11] = par_tmpdir/ind4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind4.spec.etfg
argv[11] = par_tmpdir/ind4.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind4.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 108 time spent: 0:0:0 [0.000205s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 105 time spent: 0:0:0 [0.000187s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 971 time spent: 0:0:0 [0.006592s total; 0.000007 per start]
expr_simplify_solver: num_starts 79 time spent: 0:0:0 [0.008990s total; 0.000114 per start]
expr_simplify_syntactic: num_starts 79 time spent: 0:0:0 [0.024567s total; 0.000311 per start]
expr_simplify_select_on_store: num_starts 8 time spent: 0:0:0 [0.021947s total; 0.002743 per start]
expr_simplify_using_lhs_set_helper: num_starts 83 time spent: 0:0:0 [0.038694s total; 0.000466 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 260 time spent: 0:0:0 [0.038443s total; 0.000148 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 67 time spent: 0:0:0 [0.000349s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000045s total; 0.000015 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000012s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 51 time spent: 0:0:0 [0.000944s total; 0.000019 per start]
expr_simplify_memalloc_using_memlabel: num_starts 5 time spent: 0:0:0 [0.000014s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.021704s total; 0.002713 per start]
get_arithmetic_addsub_atoms: num_starts 63 time spent: 0:0:0 [0.000071s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 135 time spent: 0:0:0 [0.001601s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 1225 time spent: 0:0:0 [0.000788s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2233 time spent: 0:0:0 [0.040890s total; 0.000018 per start]
expr_do_simplify_helper_cache: num_starts 2233 time spent: 0:0:0 [0.001593s total; 0.000001 per start]
array_constant_equals: num_starts 19 time spent: 0:0:0 [0.000039s total; 0.000002 per start]
sort_dfa_canonical: num_starts 143949 time spent: 0:0:1 [1.244195s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 6 time spent: 0:0:0 [0.001613s total; 0.000269 per start]
combo_dfa_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.123033s total; 0.001538 per start]
alias_val_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.037476s total; 0.000468 per start]
get_sprel_map_from_avail_exprs: num_starts 106 time spent: 0:0:0 [0.014182s total; 0.000134 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000140s total; 0.000006 per start]
populate_gen_and_kill_sets_for_edge: num_starts 160 time spent: 0:0:0 [0.010574s total; 0.000066 per start]
compute_simplified_loc_exprs_for_edge: num_starts 453 time spent: 0:0:0 [0.047940s total; 0.000106 per start]
compute_locs_definitely_written_on_edge: num_starts 160 time spent: 0:0:0 [0.000090s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 49 time spent: 0:0:0 [0.006643s total; 0.000136 per start]
edge_update_memlabel_map_for_mlvars: num_starts 80 time spent: 0:0:0 [0.001367s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 80 time spent: 0:0:0 [0.026073s total; 0.000326 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000250s total; 0.000003 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 6e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.9e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 2.4e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.9e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 3.1e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4.4e-05s (num_starts 53; 0.0000s/start)
lr_status_meet.: 5e-05s (num_starts 61; 0.0000s/start)
context_constructor.solver.: 5.5e-05s (num_starts 1; 0.0001s/start)
context_constructor.: 6.4e-05s (num_starts 1; 0.0001s/start)
expr_is_callee_save_const.: 6.8e-05s (num_starts 57; 0.0000s/start)
main.3.: 9.1e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000101s (num_starts 2; 0.0001s/start)
determinize_value_expr_map.: 0.000133s (num_starts 154; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000161s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000163s (num_starts 1; 0.0002s/start)
compute_sprel_relations.: 0.000187s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000193s (num_starts 12; 0.0000s/start)
propagate_sprels.: 0.000197s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000208s (num_starts 41; 0.0000s/start)
populate_locid2expr_map.: 0.000223s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000237s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000238s (num_starts 23; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000264s (num_starts 41; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000283s (num_starts 5; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000286s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000292s (num_starts 1; 0.0003s/start)
expr_represents_llvm_undef.: 0.000346s (num_starts 59; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000387s (num_starts 1; 0.0004s/start)
compute_z3_expr.: 0.000602s (num_starts 48; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000618s (num_starts 1; 0.0006s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000669s (num_starts 80; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000678s (num_starts 82; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000684s (num_starts 1193; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000783s (num_starts 1; 0.0008s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000825s (num_starts 1; 0.0008s/start)
canonicalize_llvm_nextpcs.: 0.000835s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000973s (num_starts 3; 0.0003s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001113s (num_starts 80; 0.0000s/start)
populate_transitive_closure.: 0.001114s (num_starts 1; 0.0011s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001193s (num_starts 1; 0.0012s/start)
populate_exit_return_values_for_llvm_method.: 0.001246s (num_starts 1; 0.0012s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001257s (num_starts 80; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.001271s (num_starts 59; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001341s (num_starts 1; 0.0013s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001577s (num_starts 1; 0.0016s/start)
tfg::collect_assumes_around_edge.: 0.001589s (num_starts 105; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.001869s (num_starts 67; 0.0000s/start)
create_closure_matrix.: 0.00207s (num_starts 105; 0.0000s/start)
query:convert_from_z3.: 0.002081s (num_starts 48; 0.0000s/start)
query:convert_to_z3.: 0.002433s (num_starts 48; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.002758s (num_starts 67; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002786s (num_starts 1; 0.0028s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.003177s (num_starts 1; 0.0032s/start)
populate_dominator_and_postdominator_relations.: 0.003399s (num_starts 2; 0.0017s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.0035s (num_starts 61; 0.0001s/start)
compute_lr_status_for_expr.: 0.003511s (num_starts 78; 0.0000s/start)
graph_visit_exprs.: 0.003523s (num_starts 4; 0.0009s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003614s (num_starts 61; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.004307s (num_starts 1; 0.0043s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004734s (num_starts 1815; 0.0000s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.005992s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.005996s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.006001s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.006005s (num_starts 1; 0.0060s/start)
tfg_constructor.src.spec.foo.: 0.006009s (num_starts 1; 0.0060s/start)
query:simplify-z3.: 0.00608s (num_starts 99; 0.0001s/start)
graph_identify_back_edges.: 0.006653s (num_starts 6; 0.0011s/start)
tfg::populate_loc_definedness.before_solve.: 0.006704s (num_starts 2; 0.0034s/start)
populate_simplified_assets.: 0.00684s (num_starts 6; 0.0011s/start)
graph_identify_natural_loops.: 0.007003s (num_starts 6; 0.0012s/start)
tfg::populate_loc_definedness.before_initialize.: 0.007145s (num_starts 2; 0.0036s/start)
tfg::populate_loc_definedness.: 0.007435s (num_starts 2; 0.0037s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007453s (num_starts 971; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.007801s (num_starts 1; 0.0078s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00796s (num_starts 1; 0.0080s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.008208s (num_starts 1; 0.0082s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.008606s (num_starts 80; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.008979s (num_starts 105; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.009123s (num_starts 80; 0.0001s/start)
find_dominators.: 0.009339s (num_starts 10; 0.0009s/start)
graph_to_stream.: 0.009439s (num_starts 1; 0.0094s/start)
compute_regions.: 0.011264s (num_starts 6; 0.0019s/start)
populate_branch_affecting_locs.: 0.011563s (num_starts 2; 0.0058s/start)
populate_locs_potentially_modified_on_edge.: 0.016201s (num_starts 3; 0.0054s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.016395s (num_starts 80; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.018913s (num_starts 1; 0.0189s/start)
tfg::tfg_preprocess.: 0.018914s (num_starts 1; 0.0189s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.022423s (num_starts 108; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.023054s (num_starts 3; 0.0077s/start)
get_tfg.: 0.024965s (num_starts 1; 0.0250s/start)
get_function_tfg_map.foo.: 0.024994s (num_starts 1; 0.0250s/start)
get_function_tfg_map.: 0.024997s (num_starts 1; 0.0250s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.02852s (num_starts 80; 0.0004s/start)
main.2.: 0.028957s (num_starts 1; 0.0290s/start)
populate_loc_liveness.: 0.035489s (num_starts 2; 0.0177s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.037635s (num_starts 80; 0.0005s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.038788s (num_starts 83; 0.0005s/start)
avail_exprs_create_submap.: 0.041375s (num_starts 240; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.046183s (num_starts 971; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.047692s (num_starts 971; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.051528s (num_starts 80; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.055762s (num_starts 971; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.083903s (num_starts 1; 0.0839s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.099777s (num_starts 1; 0.0998s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.123179s (num_starts 80; 0.0015s/start)
ftmap_run_pointsto_analysis.: 0.241215s (num_starts 1; 0.2412s/start)
parse_consts_db.: 7.41132s (num_starts 1; 7.4113s/start)
main.: 7.7335s (num_starts 1; 7.7335s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:08 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:15 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:23 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:23 : Reading in SPEC-LLVM I/O specification from file ind4.iospecs...</MSG>
<MSG>0:23 : Computing equivalence for function: foo...</MSG>
<MSG>0:23 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:23 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : product-TFG foo: Enumerating correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG foo: Found 3 correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Computing loop hoisting select expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Adding node L3%5%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:24 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:24 : foo.A2: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:24 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    7 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      5.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      6.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:24 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    7 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      5.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      6.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:24 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial0-prove7...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:25 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:25 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:25 : foo.A2 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : foo.A2 (d:1, s:0, sp: 4): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:25 : Chosen product-TFG foo.A2 will be explored later...</MSG>
<MSG>0:25 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG foo.A3 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A3...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A3...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L3%8%bbentry ending at L3%8%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Computing loop hoisting select expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Computing loop hoisting non-linear expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Adding node L3%8%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:25 : foo.A3: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Adding edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : foo.A3: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : foo.A3: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : foo.A3: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
141718 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( sum(0, unit, prod(2147483648, sum(0, unit, prod(2147483648, ind(0, Indxform11, lambda(Lambda22, Lambda22), lambda(Lambda23, sum(2147483648, unit, prod(1573078159, Indxform11)))))))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
142333 : sum_is(140273, 140279) : BOOL             : false
142337 : or(141718, 142333) : BOOL                 : false

ce =
=counter_example_begin yices.ce8 eca18f7f976248428165aa7a49834fae
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
4 : Indxform11 : BV:32
5 : Lambda22 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda23 : BV:32
8 : 1573078159 { 0x5dc3448f +1.52552974e60 } : BV:32
9 : prod(8, 4) : PROD[BV:32,BV:32]
10 : sum(3, 2, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(7, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 4, 6, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(3, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sum(1, 2, 13) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
15 : prod(3, 14) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
16 : sum(1, 2, 15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
17 : sym_const(16) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.1.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=counter_example.random_seed
52945785
=counter_example_end


failcond-expr = or(not(true), sum_is(input.spec-%var-l-1, 1)):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_is(3, 4) : BOOL
6 : or(2, 5) : BOOL
</MSG>
<MSG>0:25 : foo.A3: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : foo.A3: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : foo.A3: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Failed correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
141718 : not(140275) : BOOL                        : false
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( sum(0, unit, prod(2147483648, sum(0, unit, prod(2147483648, ind(0, Indxform11, lambda(Lambda22, Lambda22), lambda(Lambda23, sum(2147483648, unit, prod(1573078159, Indxform11)))))))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
142333 : sum_is(140273, 140279) : BOOL             : false
142337 : or(141718, 142333) : BOOL                 : false

ce =
=counter_example_begin yices.ce8 eca18f7f976248428165aa7a49834fae
=input.spec-%var-l-1
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
4 : Indxform11 : BV:32
5 : Lambda22 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda23 : BV:32
8 : 1573078159 { 0x5dc3448f +1.52552974e60 } : BV:32
9 : prod(8, 4) : PROD[BV:32,BV:32]
10 : sum(3, 2, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(7, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 4, 6, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(3, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sum(1, 2, 13) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
15 : prod(3, 14) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
16 : sum(1, 2, 15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
17 : sym_const(16) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.1.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-l-1.2.1.2.0
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=counter_example.random_seed
52945785
=counter_example_end


</MSG>
<MSG>0:25 : Discovered that the correlation was useless for the product-TFG foo.A3 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Adding node L0%0%d_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:25 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : foo.A1: Added the 3 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:25 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:25 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:25 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:25 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial1-prove3...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:25 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:25 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:25 : foo.A1 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : foo.A1 (d:1, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG foo.A1: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1: Found 1 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1 created 1 possibilities in group foo.A1.B...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : Adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Adding edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : foo.A1.B1: Propagated 4 out of 6 counter-examples across edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : foo.A1.B1: Added the 4 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:26 : foo.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : foo.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : foo.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : Added correlation to the product-TFG foo.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:26 : foo.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156      3.:z3v487.ce245      4.:z3v487.ce280      5.:cvc4.ce281
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:27 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156      3.:z3v487.ce245      4.:z3v487.ce280      5.:cvc4.ce281
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:27 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce156      3.:z3v487.ce245      4.:z3v487.ce280      5.:cvc4.ce281
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce135      2.:cvc4.ce136
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A1.B1 (d:2, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : foo.A1.B1 (d:2, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:27 : Chosen product-TFG foo.A1.B1 will be explored later...</MSG>
<MSG>0:27 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG foo.A2 (d:1, s:0, sp: 4) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:27 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:27 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:27 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:27 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:27 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:27 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:27 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:27 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:27 : foo.A2 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : foo.A2 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:28 : product-TFG foo.A2: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Considering 2 paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Found 2 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : product-TFG foo.A2: Found 2 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:28 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 4) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:28 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:28 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:28 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:28 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:28 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:28 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : foo.A2.B2: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : foo.A2.B2: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : foo.A2.B2: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:28 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:28 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:28 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:28 : foo.A2.B2: Added the 5 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:28 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:28 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:28 : foo.A2.B2: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:28 : Added correlation to the product-TFG foo.A2.B2 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:28 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 4) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:28 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:28 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:28 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:28 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:28 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 5 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:29 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:30 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 5 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:30 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:30 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : foo.A2.B2 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:30 : foo.A2.B2 (d:1, s:0, sp: 5): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:30 : Chosen product-TFG foo.A2.B2 will be explored later...</MSG>
<MSG>0:30 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:30 : Chose (for CE propagation) product-TFG foo.A2.B1 (d:1, s:0, sp: 4) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:30 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B1...</MSG>
<MSG>0:30 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B1...</MSG>
<MSG>0:30 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:30 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:30 : Adding new edge to the product-TFG foo.A2.B1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:30 : foo.A2.B1: Propagated 5 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:30 : foo.A2.B1: Added the 5 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:30 : foo.A2.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:30 : foo.A2.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:30 : foo.A2.B1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : Done adding new edge to the product-TFG foo.A2.B1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : Added correlation to the product-TFG foo.A2.B1 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:30 : Chose (after CE propagation) product-TFG foo.A2.B1 (d:1, s:0, sp: 4) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 0 delta {0,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:30 : foo.A2.B1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:30 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:30 : foo.A2.B1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:30 : foo.A2.B1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:30 : foo.A2.B1: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:30 : foo.A2.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:30 : foo.A2.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:30 : foo.A2.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:30 : foo.A2.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 5 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:z3v487.ce526      4.:cvc4.ce527
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:31 : foo.A2.B1: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:31 : foo.A2.B1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 5 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:31 : foo.A2.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:z3v487.ce526      4.:cvc4.ce527
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:31 : foo.A2.B1: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:31 : foo.A2.B1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 4)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:z3v487.ce526      4.:cvc4.ce527
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:31 : foo.A2.B1 (d:2, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:31 : foo.A2.B1 (d:2, s:0, sp: 6): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:31 : Chosen product-TFG foo.A2.B1 will be explored later...</MSG>
<MSG>0:31 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:31 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 5) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 11 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:31 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:31 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:31 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 5 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:31 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6


<MSG>0:31 : foo.A2.B2 (d:1, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:31 : foo.A2.B2 (d:1, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:31 : product-TFG foo.A2.B2: Enumerating correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:31 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:31 : Attempting correlation of src pathset L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:31 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:31 : product-TFG foo.A2.B2: Found 1 correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:31 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:31 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 5) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 14 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:31 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:31 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:31 : Creating ssa-path for the src-tfg path L3%5%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:31 : Adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:31 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:31 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:31 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:31 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Propagated 8 out of 14 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:31 : foo.A2.B2.C1: Added the 8 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:31 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:31 : Done adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:31 : Added correlation to the product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 5) and created a correlation entry...</MSG>
<MSG>0:31 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 5) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 14 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:31 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:31 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:31 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:31 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:32 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:32 : foo.A2.B2.C1 (d:1, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:32 : foo.A2.B2.C1 (d:1, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:32 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:32 : Checking equivalence proof...</MSG>
<MSG>0:32 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce54      3.:cvc4.ce417      4.:z3v487.ce416
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce6      1.:z3v487.ce30      2.:cvc4.ce31
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce6

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 14 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 8.96s, query:smt.: 3.62772s (num_starts 71; 0.0511s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 7.65364s (num_starts 117; 0.0654s/start)ftmap_run_pointsto_analysis.: 0.194267s (num_starts 2; 0.0971s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 5e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 8e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 8e-06s (num_starts 8; 0.0000s/start)
prune_dst_memslots.: 1.1e-05s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1.4e-05s (num_starts 7; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.5e-05s (num_starts 6; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.6e-05s (num_starts 7; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.6e-05s (num_starts 16; 0.0000s/start)
prove_trivial.: 2.3e-05s (num_starts 32; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3.1e-05s (num_starts 39; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.3e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.7e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 4.3e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 4.4e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 4.9e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.4e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 5.9e-05s (num_starts 18; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry.: 7.3e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 9.7e-05s (num_starts 3; 0.0000s/start)
ce_perform_memory_fuzzing.: 0.000106s (num_starts 103; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry.: 0.000108s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.00011s (num_starts 1; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000112s (num_starts 44; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 0.000116s (num_starts 30; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000139s (num_starts 11; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000142s (num_starts 117; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000147s (num_starts 260; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000152s (num_starts 7; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.000153s (num_starts 3; 0.0001s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000163s (num_starts 3; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000182s (num_starts 117; 0.0000s/start)
populate_locid2expr_map.: 0.000192s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00021s (num_starts 3; 0.0001s/start)
get_lr_status_for_loc_ids.: 0.000218s (num_starts 69; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000219s (num_starts 13; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000235s (num_starts 3; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000238s (num_starts 18; 0.0000s/start)
compute_sprel_relations.: 0.000267s (num_starts 2; 0.0001s/start)
graph_locs_add_all_indvars.: 0.000272s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000275s (num_starts 12; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000277s (num_starts 131; 0.0000s/start)
propagate_sprels.: 0.000282s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000288s (num_starts 2; 0.0001s/start)
expr_is_hidden_reg.: 0.000305s (num_starts 395; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00031s (num_starts 85; 0.0000s/start)
lr_status_meet.: 0.000311s (num_starts 328; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000313s (num_starts 3; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000358s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000381s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000382s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000382s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000383s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000384s (num_starts 1; 0.0004s/start)
graph_locs_add_local_vars_for_edge.: 0.000384s (num_starts 12; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000387s (num_starts 1; 0.0004s/start)
expr_is_callee_save_const.: 0.000388s (num_starts 407; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000398s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000403s (num_starts 1; 0.0004s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000407s (num_starts 9; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000483s (num_starts 30; 0.0000s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000506s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000584s (num_starts 1; 0.0006s/start)
tfg_suffixpath_get_expr_helper.: 0.000597s (num_starts 12; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000614s (num_starts 68; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000615s (num_starts 4; 0.0002s/start)
create_closure_matrix.: 0.000625s (num_starts 70; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000667s (num_starts 156; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000694s (num_starts 156; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000731s (num_starts 4; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000742s (num_starts 58; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000752s (num_starts 4; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000757s (num_starts 1; 0.0008s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000764s (num_starts 99; 0.0000s/start)
populate_simplified_to_state.: 0.000815s (num_starts 3; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000822s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000834s (num_starts 1; 0.0008s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000841s (num_starts 24; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000873s (num_starts 1; 0.0009s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.00092s (num_starts 3; 0.0003s/start)
graph_locs_add_all_specvars.: 0.000953s (num_starts 2; 0.0005s/start)
tfg::populate_loc_definedness.before_solve.: 0.000965s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.000984s (num_starts 1; 0.0010s/start)
get_sprel_map_pair.: 0.001002s (num_starts 96; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.001008s (num_starts 15; 0.0001s/start)
graph_with_guessing_sync_preds.: 0.001084s (num_starts 117; 0.0000s/start)
proof_query_is_trivial.: 0.00109s (num_starts 117; 0.0000s/start)
ldr_decomposition.: 0.001103s (num_starts 44; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00114s (num_starts 1; 0.0011s/start)
removeMostPromising.: 0.001142s (num_starts 24; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.001192s (num_starts 47; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001286s (num_starts 336; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001303s (num_starts 15; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001341s (num_starts 3; 0.0004s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001343s (num_starts 4; 0.0003s/start)
set_result_and_counter_example.: 0.00139s (num_starts 71; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001405s (num_starts 57; 0.0000s/start)
tfg::populate_loc_definedness.: 0.001428s (num_starts 3; 0.0005s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.00144s (num_starts 18; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.001535s (num_starts 6; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.001616s (num_starts 61; 0.0000s/start)
identify_address_taken_local_variables.: 0.001637s (num_starts 1; 0.0016s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001662s (num_starts 8; 0.0002s/start)
construct_linear_combination_exprs.: 0.001677s (num_starts 47; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001833s (num_starts 58; 0.0000s/start)
expr_represents_llvm_undef.: 0.001839s (num_starts 411; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001931s (num_starts 2; 0.0010s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002248s (num_starts 18; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002334s (num_starts 4; 0.0006s/start)
find_dominators.: 0.002391s (num_starts 35; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.00244s (num_starts 13; 0.0002s/start)
collect_assumes_around_edge.: 0.002506s (num_starts 7; 0.0004s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.002561s (num_starts 99; 0.0000s/start)
populate_simplified_assets.: 0.002563s (num_starts 6; 0.0004s/start)
graph_identify_back_edges.: 0.002635s (num_starts 31; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.002642s (num_starts 2; 0.0013s/start)
graph_identify_natural_loops.: 0.002925s (num_starts 31; 0.0001s/start)
populate_branch_affecting_locs.: 0.003127s (num_starts 3; 0.0010s/start)
compute_vars_reaching_definitions.: 0.003167s (num_starts 2; 0.0016s/start)
get_unrolled_loop_paths_from.: 0.003212s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003364s (num_starts 1; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003366s (num_starts 1; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003368s (num_starts 1; 0.0034s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.003432s (num_starts 58; 0.0001s/start)
populate_transitive_closure.: 0.003941s (num_starts 38; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.004009s (num_starts 2; 0.0020s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.004034s (num_starts 72; 0.0001s/start)
graph_visit_exprs.: 0.004151s (num_starts 3; 0.0014s/start)
pth_collect_preds_using_atom_func.: 0.004177s (num_starts 52; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.004185s (num_starts 72; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.004199s (num_starts 99; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.004351s (num_starts 4; 0.0011s/start)
get_sprel_map_pair_at_pc.: 0.004617s (num_starts 85; 0.0001s/start)
predicate_canonicalized.: 0.004618s (num_starts 47; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.00484s (num_starts 72; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.004842s (num_starts 1; 0.0048s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004872s (num_starts 81; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.005143s (num_starts 70; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.005152s (num_starts 784; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.00523s (num_starts 3; 0.0017s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00527s (num_starts 96; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.005353s (num_starts 52; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.005404s (num_starts 44; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.005432s (num_starts 47; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005465s (num_starts 132; 0.0000s/start)
propagate_nodece_across_edge.: 0.005532s (num_starts 16; 0.0003s/start)
get_next_potential_correlations.: 0.005778s (num_starts 4; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005857s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005869s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.005873s (num_starts 1; 0.0059s/start)
bv_linear_solve.: 0.005997s (num_starts 44; 0.0001s/start)
query:bv_solve.: 0.006268s (num_starts 44; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006687s (num_starts 1; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006691s (num_starts 1; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006694s (num_starts 1; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007087s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007091s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007092s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007099s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.0071s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007105s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;abstract-memlabel-asserts-houdini-guess.: 0.00711s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007112s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.007119s (num_starts 3; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007136s (num_starts 3; 0.0024s/start)
compute_regions.: 0.007324s (num_starts 31; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.007738s (num_starts 3; 0.0026s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.007807s (num_starts 3; 0.0026s/start)
bv_solve_returning_intermediate_structures.: 0.007999s (num_starts 44; 0.0002s/start)
pth_collect_simplified_preds_using_atom_func.: 0.008098s (num_starts 121; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.008199s (num_starts 411; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.008529s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.008532s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-trivial.: 0.008534s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.008535s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.008544s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.008548s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.008555s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.008601s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.008606s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.008608s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.008612s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.008618s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.008625s (num_starts 1; 0.0086s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.008785s (num_starts 140; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.008962s (num_starts 5; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.008971s (num_starts 5; 0.0018s/start)
bvsolve_cache_query.miss1.: 0.009359s (num_starts 44; 0.0002s/start)
bvsolve_cache_query.: 0.009728s (num_starts 44; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.009814s (num_starts 242; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.009922s (num_starts 6; 0.0017s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010046s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010052s (num_starts 1; 0.0101s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010053s (num_starts 1; 0.0101s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.01006s (num_starts 1; 0.0101s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.010065s (num_starts 1; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.010073s (num_starts 1; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.01018s (num_starts 1; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-trivial.: 0.010185s (num_starts 1; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.010202s (num_starts 1; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;ub-unsigned;-trivial.: 0.010413s (num_starts 1; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.010416s (num_starts 1; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;pred-type-unknown;-trivial.: 0.010672s (num_starts 3; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.010679s (num_starts 3; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.010756s (num_starts 1; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-trivial.: 0.010759s (num_starts 1; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.010761s (num_starts 1; 0.0108s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.01107s (num_starts 6; 0.0018s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.011563s (num_starts 173; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-trivial.: 0.011781s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.011783s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.011869s (num_starts 3; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-trivial.: 0.01188s (num_starts 3; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.011885s (num_starts 3; 0.0040s/start)
solve_for_bv_points.: 0.012047s (num_starts 44; 0.0003s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.012088s (num_starts 1; 0.0121s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.01209s (num_starts 1; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.012096s (num_starts 1; 0.0121s/start)
collect_assumes_around_path_helper.: 0.012178s (num_starts 156; 0.0001s/start)
do_ssa_transformation.: 0.012555s (num_starts 2; 0.0063s/start)
graph_with_paths::collect_assumes_around_path.: 0.012645s (num_starts 156; 0.0001s/start)
query:convert_to_z3.: 0.012973s (num_starts 267; 0.0000s/start)
tfg::get_aliasing_constraints_for_edge.: 0.01404s (num_starts 162; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014299s (num_starts 4; 0.0036s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.014299s (num_starts 44; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014305s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.014318s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.014331s (num_starts 4; 0.0036s/start)
gen_pred_from_coeff_row.: 0.014512s (num_starts 47; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.01453s (num_starts 61; 0.0002s/start)
query:convert_from_z3.: 0.014657s (num_starts 267; 0.0001s/start)
compute_preds_for_bv_points.: 0.014776s (num_starts 21; 0.0007s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.014915s (num_starts 34; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-trivial.: 0.01661s (num_starts 1; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.016611s (num_starts 1; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.016614s (num_starts 1; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.016935s (num_starts 2; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017013s (num_starts 1; 0.0170s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017014s (num_starts 1; 0.0170s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.01702s (num_starts 1; 0.0170s/start)
expr_substitute_using_available_exprs_submap.: 0.017045s (num_starts 299; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.017701s (num_starts 69; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017885s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017888s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.017893s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;linear;-trivial.: 0.01805s (num_starts 4; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.018058s (num_starts 4; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.020402s (num_starts 2; 0.0102s/start)
get_unrolled_paths_from.: 0.020436s (num_starts 20; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020774s (num_starts 1; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020779s (num_starts 1; 0.0208s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.020782s (num_starts 176; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.021124s (num_starts 99; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021389s (num_starts 1; 0.0214s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021393s (num_starts 1; 0.0214s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.022385s (num_starts 2; 0.0112s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.022458s (num_starts 8; 0.0028s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.022712s (num_starts 99; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.022911s (num_starts 7; 0.0033s/start)
graph_to_stream.: 0.022957s (num_starts 4; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-trivial.: 0.023907s (num_starts 4; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.023918s (num_starts 4; 0.0060s/start)
lhs_set_sort.: 0.024244s (num_starts 85; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.024724s (num_starts 8; 0.0031s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.024869s (num_starts 8; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02537s (num_starts 1; 0.0254s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025373s (num_starts 1; 0.0254s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.025513s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.025516s (num_starts 2; 0.0128s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.026448s (num_starts 61; 0.0004s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.026489s (num_starts 22; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.026646s (num_starts 2; 0.0133s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.026668s (num_starts 2; 0.0133s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02773s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027735s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027742s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027745s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.02775s (num_starts 1; 0.0278s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.027758s (num_starts 1; 0.0278s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.028147s (num_starts 2; 0.0141s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.028154s (num_starts 2; 0.0141s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028727s (num_starts 1; 0.0287s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028732s (num_starts 1; 0.0287s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028744s (num_starts 1; 0.0287s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.029452s (num_starts 328; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.029973s (num_starts 328; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lwhile.cond%1%bbentry.inductive-invariants.: 0.030538s (num_starts 8; 0.0038s/start)
counter_example_satisfies_preds.: 0.030664s (num_starts 404; 0.0001s/start)
compute_lr_status_for_expr.: 0.03142s (num_starts 437; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.031535s (num_starts 867; 0.0000s/start)
populate_loc_liveness.: 0.031917s (num_starts 3; 0.0106s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.032498s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.032517s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.032524s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.032554s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.032573s (num_starts 4; 0.0081s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.032597s (num_starts 4; 0.0081s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.033752s (num_starts 28; 0.0012s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.033834s (num_starts 28; 0.0012s/start)
compute_expr_eqclasses_at_pc.: 0.034154s (num_starts 3; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-trivial.: 0.034456s (num_starts 2; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.034463s (num_starts 2; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned.: 0.034518s (num_starts 2; 0.0173s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.034888s (num_starts 137; 0.0003s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.034909s (num_starts 5; 0.0070s/start)
cg_add_node.: 0.035106s (num_starts 5; 0.0070s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.035257s (num_starts 61; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.035642s (num_starts 1; 0.0356s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.035644s (num_starts 1; 0.0356s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.035957s (num_starts 3; 0.0120s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.036016s (num_starts 61; 0.0006s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.036039s (num_starts 27; 0.0013s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-trivial.: 0.037274s (num_starts 3; 0.0124s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.037284s (num_starts 3; 0.0124s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.037286s (num_starts 3; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.037487s (num_starts 2; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.037495s (num_starts 2; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.038461s (num_starts 3; 0.0128s/start)
collect_aliasing_constraints_around_path_helper.: 0.038576s (num_starts 155; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038643s (num_starts 2; 0.0193s/start)
collect_aliasing_constraints_around_path.: 0.039307s (num_starts 99; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.039382s (num_starts 8; 0.0049s/start)
create_new_corr_graph_edge.new_node.: 0.039509s (num_starts 4; 0.0099s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.039808s (num_starts 21; 0.0019s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.039878s (num_starts 8; 0.0050s/start)
create_new_corr_graph_edge.: 0.03989s (num_starts 7; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.040846s (num_starts 2; 0.0204s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.040866s (num_starts 2; 0.0204s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.040873s (num_starts 2; 0.0204s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.042346s (num_starts 2; 0.0212s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.042352s (num_starts 2; 0.0212s/start)
query:simplify-z3.: 0.04245s (num_starts 562; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.044586s (num_starts 3; 0.0149s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.044931s (num_starts 1; 0.0449s/start)
tfg_postprocess_after_pointsto_analysis.: 0.048153s (num_starts 2; 0.0241s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.048569s (num_starts 13; 0.0037s/start)
counter_example_falsifies_preds.: 0.050085s (num_starts 51; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.0509s (num_starts 3; 0.0170s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.050909s (num_starts 3; 0.0170s/start)
avail_exprs_create_submap.: 0.051017s (num_starts 183; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052641s (num_starts 2; 0.0263s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052646s (num_starts 2; 0.0263s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.052664s (num_starts 1750; 0.0000s/start)
compute_new_lr_status_on_locs.: 0.053078s (num_starts 61; 0.0009s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.053112s (num_starts 3; 0.0177s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055127s (num_starts 1; 0.0551s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057085s (num_starts 2; 0.0285s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057091s (num_starts 2; 0.0285s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.059401s (num_starts 3; 0.0198s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.059659s (num_starts 7; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.059895s (num_starts 4; 0.0150s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.059977s (num_starts 2; 0.0300s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.060854s (num_starts 2; 0.0304s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.060863s (num_starts 2; 0.0304s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.061451s (num_starts 4; 0.0154s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.063364s (num_starts 12; 0.0053s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06664s (num_starts 2; 0.0333s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066655s (num_starts 2; 0.0333s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066662s (num_starts 2; 0.0333s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06779s (num_starts 2; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0678s (num_starts 2; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.068888s (num_starts 3; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.068902s (num_starts 3; 0.0230s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070717s (num_starts 2; 0.0354s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070727s (num_starts 2; 0.0354s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070745s (num_starts 2; 0.0354s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070752s (num_starts 2; 0.0354s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.074828s (num_starts 4; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.074846s (num_starts 4; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.076876s (num_starts 3; 0.0256s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned.: 0.076887s (num_starts 3; 0.0256s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.076906s (num_starts 3; 0.0256s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.077558s (num_starts 3; 0.0259s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.078225s (num_starts 3; 0.0261s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;ub-unsigned.: 0.078236s (num_starts 3; 0.0261s/start)
counter_example_evaluate_preds.: 0.079698s (num_starts 455; 0.0002s/start)
compute_z3_expr.: 0.081137s (num_starts 338; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081768s (num_starts 2; 0.0409s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081777s (num_starts 2; 0.0409s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082441s (num_starts 3; 0.0275s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082448s (num_starts 3; 0.0275s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.083531s (num_starts 2; 0.0418s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.086011s (num_starts 24; 0.0036s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.086117s (num_starts 7; 0.0123s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.091356s (num_starts 100; 0.0009s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.093472s (num_starts 1808; 0.0001s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.093625s (num_starts 6; 0.0156s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.094602s (num_starts 1750; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.094811s (num_starts 137; 0.0007s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.095815s (num_starts 61; 0.0016s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.099784s (num_starts 11; 0.0091s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.101434s (num_starts 15; 0.0068s/start)
put_smtlib_string_in_file.: 0.114446s (num_starts 142; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.116257s (num_starts 4; 0.0291s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned.: 0.116273s (num_starts 4; 0.0291s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.119838s (num_starts 6; 0.0200s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.119858s (num_starts 6; 0.0200s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.130302s (num_starts 10; 0.0130s/start)
tfg_relax_pointsto_vals_on_edge.: 0.132944s (num_starts 37; 0.0036s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.134342s (num_starts 24; 0.0056s/start)
collect_inductive_preds_around_path.: 0.137001s (num_starts 117; 0.0012s/start)
graph_ec_apply_trans_funs_helper.0.: 0.137444s (num_starts 503; 0.0003s/start)
graph_ec_apply_trans_funs_helper.: 0.139511s (num_starts 507; 0.0003s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.139573s (num_starts 494; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.139823s (num_starts 1; 0.1398s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.139825s (num_starts 1; 0.1398s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.139833s (num_starts 1; 0.1398s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.139836s (num_starts 1; 0.1398s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.140582s (num_starts 507; 0.0003s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.140736s (num_starts 1750; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.140793s (num_starts 494; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.144704s (num_starts 4; 0.0362s/start)
parse_cvc4_model.: 0.149311s (num_starts 31; 0.0048s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149529s (num_starts 4; 0.0374s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%bbentry_Lwhile.cond%1%bbentry.inductive-invariants.: 0.151066s (num_starts 12; 0.0126s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.154298s (num_starts 137; 0.0011s/start)
edge_composition_apply_trans_funs_on_pred.: 0.154978s (num_starts 117; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.161712s (num_starts 6; 0.0270s/start)
check_wfconds_on_edge.: 0.17763s (num_starts 14; 0.0127s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.183519s (num_starts 21; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18352s (num_starts 6; 0.0306s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183541s (num_starts 6; 0.0306s/start)
ftmap_run_pointsto_analysis.: 0.194267s (num_starts 2; 0.0971s/start)
tfg_run_pointsto_analysis.: 0.194675s (num_starts 2; 0.0973s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.196058s (num_starts 7; 0.0280s/start)
parse_z3_model.: 0.198555s (num_starts 26; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.201546s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.201548s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.20156s (num_starts 1; 0.2016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.201565s (num_starts 1; 0.2016s/start)
tfg_populate_structs_after_ssa_construction.: 0.202298s (num_starts 2; 0.1011s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.204116s (num_starts 151; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.210608s (num_starts 3; 0.0702s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.21062s (num_starts 3; 0.0702s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.210638s (num_starts 3; 0.0702s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.211181s (num_starts 8; 0.0264s/start)
apply_mask_and_overlay_array_constant.: 0.21433s (num_starts 151; 0.0014s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.217248s (num_starts 2; 0.1086s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.22168s (num_starts 41; 0.0054s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.222144s (num_starts 95; 0.0023s/start)
guarded_predicate_set_and.: 0.228325s (num_starts 99; 0.0023s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.228426s (num_starts 1; 0.2284s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.228432s (num_starts 1; 0.2284s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.228435s (num_starts 1; 0.2284s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.228439s (num_starts 1; 0.2284s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.228452s (num_starts 1; 0.2285s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate.: 0.228456s (num_starts 1; 0.2285s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.228463s (num_starts 1; 0.2285s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.237012s (num_starts 2; 0.1185s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.24431s (num_starts 8; 0.0305s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.25484s (num_starts 8; 0.0319s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.255769s (num_starts 30; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.255994s (num_starts 4; 0.0640s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.256007s (num_starts 4; 0.0640s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268082s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268084s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268088s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268089s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.268096s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.268099s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.268105s (num_starts 1; 0.2681s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.268516s (num_starts 2; 0.1343s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry).: 0.27053s (num_starts 10; 0.0271s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.276626s (num_starts 1; 0.2766s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.276628s (num_starts 1; 0.2766s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.276632s (num_starts 1; 0.2766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.276634s (num_starts 1; 0.2766s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-all-proof-path-optimizations.: 0.28771s (num_starts 1; 0.2877s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.287715s (num_starts 1; 0.2877s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.288532s (num_starts 4; 0.0721s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown.: 0.288547s (num_starts 4; 0.0721s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.288573s (num_starts 4; 0.0721s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.292778s (num_starts 3; 0.0976s/start)
parse_yices_model.: 0.293226s (num_starts 31; 0.0095s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.303681s (num_starts 36; 0.0084s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.304238s (num_starts 66; 0.0046s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.31108s (num_starts 5; 0.0622s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.311936s (num_starts 85; 0.0037s/start)
check_equivalence_proof.: 0.326342s (num_starts 1; 0.3263s/start)
corr_graph::add_edge().: 0.3397s (num_starts 7; 0.0485s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.341253s (num_starts 15; 0.0228s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.367183s (num_starts 85; 0.0043s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.381983s (num_starts 7; 0.0546s/start)
corr_graph_add_correlation.: 0.382266s (num_starts 7; 0.0546s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.393463s (num_starts 7; 0.0562s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.401809s (num_starts 20; 0.0201s/start)
counter_example_translate_on_edge_composition_helper.: 0.405227s (num_starts 355; 0.0011s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.407191s (num_starts 3; 0.1357s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.4072s (num_starts 3; 0.1357s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-all-proof-path-optimizations.: 0.407216s (num_starts 3; 0.1357s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.407223s (num_starts 3; 0.1357s/start)
check_preds_on_edge_compositions.: 0.421996s (num_starts 17; 0.0248s/start)
decide_hoare_triple_helper;-trivial.: 0.429807s (num_starts 58; 0.0074s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.491953s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.49196s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.49197s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.491975s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.491986s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.491991s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.491998s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon).: 0.492003s (num_starts 1; 0.4920s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.502967s (num_starts 1; 0.5030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.502969s (num_starts 1; 0.5030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.502979s (num_starts 1; 0.5030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.502983s (num_starts 1; 0.5030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.540504s (num_starts 2; 0.2703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.540511s (num_starts 2; 0.2703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.542517s (num_starts 3; 0.1808s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.542532s (num_starts 3; 0.1808s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.551211s (num_starts 5; 0.1102s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;pred-type-unknown.: 0.551232s (num_starts 5; 0.1102s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.553413s (num_starts 3; 0.1845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.55342s (num_starts 3; 0.1845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.560624s (num_starts 7; 0.0801s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;linear.: 0.560644s (num_starts 7; 0.0801s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.562431s (num_starts 8; 0.0703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.562451s (num_starts 8; 0.0703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.56768s (num_starts 9; 0.0631s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown.: 0.56771s (num_starts 9; 0.0631s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.574776s (num_starts 4; 0.1437s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.584894s (num_starts 10; 0.0585s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.590826s (num_starts 9; 0.0656s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown.: 0.590854s (num_starts 9; 0.0657s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.626001s (num_starts 3; 0.2087s/start)
read_counter_examples_from_channel.: 0.647773s (num_starts 31; 0.0209s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.651783s (num_starts 11; 0.0593s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.654906s (num_starts 16; 0.0409s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.68326s (num_starts 322; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.704503s (num_starts 2; 0.3523s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.704564s (num_starts 2; 0.3523s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.714027s (num_starts 5; 0.1428s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.714047s (num_starts 5; 0.1428s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.788942s (num_starts 9; 0.0877s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.788967s (num_starts 9; 0.0877s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.814652s (num_starts 6; 0.1358s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.828182s (num_starts 3; 0.2761s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.828193s (num_starts 3; 0.2761s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon).: 0.852218s (num_starts 9; 0.0947s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.968725s (num_starts 4; 0.2422s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.968753s (num_starts 4; 0.2422s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.968767s (num_starts 4; 0.2422s/start)
ce_reconcile_sorts_and_values.: 0.968995s (num_starts 88; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.979561s (num_starts 5; 0.1959s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear.: 0.979574s (num_starts 5; 0.1959s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.979601s (num_starts 5; 0.1959s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.: 1.01111s (num_starts 3; 0.3370s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.03533s (num_starts 6; 0.1726s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 1.0638s (num_starts 3; 0.3546s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 1.1326s (num_starts 7; 0.1618s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.13873s (num_starts 17; 0.0670s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 1.17903s (num_starts 16; 0.0737s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.25648s (num_starts 8; 0.1571s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry).: 1.35227s (num_starts 15; 0.0902s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 1.38721s (num_starts 18; 0.0771s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.46456s (num_starts 4; 0.3661s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.46466s (num_starts 4; 0.3662s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 1.49696s (num_starts 7; 0.2139s/start)
decide_hoare_triple.: 1.50516s (num_starts 6; 0.2509s/start)
dst_edge_composition_proves_false.: 1.51365s (num_starts 4; 0.3784s/start)
get_next_dst_edge_composition_to_correlate.: 1.52532s (num_starts 5; 0.3051s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 1.56921s (num_starts 28; 0.0560s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 1.65187s (num_starts 8; 0.2065s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 1.65226s (num_starts 8; 0.2065s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.71702s (num_starts 17; 0.1010s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 2.37079s (num_starts 36; 0.0659s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.80004s (num_starts 16; 0.1750s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 2.80246s (num_starts 50; 0.0560s/start)
decide_hoare_triple_helper;per-query-type;linear.: 2.9842s (num_starts 37; 0.0807s/start)
query:smt.: 3.62772s (num_starts 71; 0.0511s/start)
spawn_smt_query.: 4.2765s (num_starts 71; 0.0602s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.56723s (num_starts 51; 0.1092s/start)
solver_provable.: 5.6637s (num_starts 99; 0.0572s/start)
solver_satisfiable-cache-miss.: 5.69557s (num_starts 71; 0.0802s/start)
solver_satisfiable.: 5.69664s (num_starts 100; 0.0570s/start)
expr_is_provable.: 5.71091s (num_starts 99; 0.0577s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 5.71303s (num_starts 99; 0.0577s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 5.71829s (num_starts 99; 0.0578s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 5.72497s (num_starts 99; 0.0578s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 5.95769s (num_starts 99; 0.0602s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 5.96759s (num_starts 99; 0.0603s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 5.96944s (num_starts 99; 0.0603s/start)
update_invariant_state_for_edges.: 6.29461s (num_starts 8; 0.7868s/start)
cg_check_new_cg_ec.: 6.30912s (num_starts 8; 0.7886s/start)
correl_entry_apply.: 6.30949s (num_starts 8; 0.7887s/start)
is_expr_equal_using_lhs_set_and_precond.: 6.58452s (num_starts 85; 0.0775s/start)
prove.: 6.58515s (num_starts 85; 0.0775s/start)
prove_spawn_and_join_helper.: 6.58557s (num_starts 85; 0.0775s/start)
prove_spawn_and_join.: 7.24107s (num_starts 85; 0.0852s/start)
prove_wrapper.proof_query_not_trivial.: 7.25127s (num_starts 85; 0.0853s/start)
prove_wrapper.: 7.32707s (num_starts 117; 0.0626s/start)
decide_hoare_triple_check_ub.: 7.48929s (num_starts 117; 0.0640s/start)
decide_hoare_triple_helper.: 7.65364s (num_starts 117; 0.0654s/start)
expandProductCFG.: 7.8413s (num_starts 9; 0.8713s/start)
decide_hoare_triple_with_alias_cons.: 7.87672s (num_starts 117; 0.0673s/start)
bestFirstSearch.: 8.30908s (num_starts 1; 8.3091s/start)
Time taken for equivalence check.: 8.63979s (num_starts 1; 8.6398s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 16
# of paths expanded.: 8
# of queries to linear solver.: 44
# of smt-solver-queries.: 71
L0%0%d=>Lwhile.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lwhile.cond%1%bbentry-src_to_pcs.: 3
Lwhile.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lwhile.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_ecs.: 2
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_to_pcs.: 1
num-backtrackings.: 4
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 9
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 13
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 9
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 14
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 10
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 7
smt-queries-cache-hits.: 29
smt-queries-cvc4-sat.: 31
smt-queries-yices-sat.: 31
smt-queries-z3-sat.: 26
total-correlation-possibilities.: 8
total-correlation-possibilities-mod-lsprels.: 8
total-correlations-explored.: 9

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 5
final-CG-counterexamples-total-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 14
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 6
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 3.63
final-CG-time-to-total-time-ratio.: 0.44
query-time-to-total-time-ratio.: 0.43

Context stats:
exprs: count: 149032
sorts: count: 7035
num_proof_queries: 85
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	8607
	        hit ratio:	0.98234
m_simplify_solver:
	----------- total:	1507
	        hit ratio:	0.804247
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	146
	        hit ratio:	0.753425
m_z3_solver_substitution:
	----------- total:	295
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	295
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	30
	        hit ratio:	0.966667
m_expr_size:
	----------- total:	5465
	        hit ratio:	0.928454
m_contains_only_constants_or_sp_versions:
	----------- total:	12
	        hit ratio:	0.833333
m_expr_evaluates_to_constant_visitor:
	----------- total:	10354
	        hit ratio:	0.72967
m_sort_dfa_canonicalize:
	----------- total:	102153
	        hit ratio:	0.966129
m_expr_convert_to_iexpr:
	----------- total:	3748
	        hit ratio:	0.740662

z3_solver expr_query_cache entry size: 71
	----------- total:	100
	             hits:	29
	        hit ratio:	0.29
histogram (time taken by solver in ms):
[  4.8080,   7.0113) (avg.   5.5614)     : 13
[  7.0113,  10.2244) (avg.   8.3505)     : 15
[ 10.2244,  14.9098) (avg.  11.7603)     : 12
[ 14.9098,  21.7424) (avg.   0.0000)     : 0
[ 21.7424,  31.7062) (avg.  28.6080)     : 1
[ 31.7062,  46.2359) (avg.  41.4980)     : 6
[ 46.2359,  67.4241) (avg.  51.9133)     : 7
[ 67.4241,  98.3221) (avg.  71.4220)     : 1
[ 98.3221, 143.3795) (avg. 133.0756)     : 7
[143.3795, 209.0850) (avg. 182.7031)     : 9
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  99) (avg.  40)                    : 1
[ 99, 157) (avg. 154)                    : 9
[157, 215) (avg. 197)                    : 16
[215, 273) (avg. 233)                    : 10
[273, 331) (avg. 295)                    : 16
[331, 389) (avg. 344)                    : 8
[389, 447) (avg. 415)                    : 4
[447, 505) (avg.   0)                    : 0
[505, 563) (avg. 518)                    : 6
[563, 621) (avg. 611)                    : 1
Top 10 highest time taking queries:
1. [0.208s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.1
2. [0.194s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
3. [0.189s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%bbentry_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL3%5%b.0
4. [0.187s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
5. [0.183s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
6. [0.183s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.1
7. [0.180s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
8. [0.174s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.8
9. [0.146s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%bbentry_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL3%5%b.0
10. [0.143s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0

<MSG>0:32 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 111 time spent: 0:0:0 [0.003806s total; 0.000034 per start]
tfg_computeWP: num_starts 602 time spent: 0:0:0 [0.127238s total; 0.000211 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1444 time spent: 0:0:0 [0.002501s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1205 time spent: 0:0:0 [0.001970s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 540 time spent: 0:0:0 [0.000992s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 47 time spent: 0:0:0 [0.093332s total; 0.001986 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 14 time spent: 0:0:0 [0.331750s total; 0.023696 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 305 time spent: 0:0:0 [0.386380s total; 0.001267 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 116 time spent: 0:0:0 [0.077104s total; 0.000665 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 274 time spent: 0:0:0 [0.343896s total; 0.001255 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1727 time spent: 0:0:0 [0.404055s total; 0.000234 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 274 time spent: 0:0:0 [0.026705s total; 0.000097 per start]
tfg_graph_get_vars_written_on_edge: num_starts 274 time spent: 0:0:0 [0.010695s total; 0.000039 per start]
cg_with_rank_add_CE_at_pc: num_starts 69 time spent: 0:0:0 [0.087332s total; 0.001266 per start]
graph_with_ce_add_CE_at_pc: num_starts 35 time spent: 0:0:0 [0.000749s total; 0.000021 per start]
graph_with_guessing_add_CE_at_pc: num_starts 69 time spent: 0:0:0 [0.086508s total; 0.001254 per start]
point_set_add_point_using_CE: num_starts 132 time spent: 0:0:0 [0.027406s total; 0.000208 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 132 time spent: 0:0:0 [0.027860s total; 0.000211 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 49 time spent: 0:0:0 [0.067632s total; 0.001380 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 49 time spent: 0:0:0 [0.038919s total; 0.000794 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3349 time spent: 0:0:0 [0.220229s total; 0.000066 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 156 time spent: 0:0:0 [0.016176s total; 0.000104 per start]
expr_simplify_solver: num_starts 1567 time spent: 0:0:0 [0.118186s total; 0.000075 per start]
expr_simplify_syntactic: num_starts 1635 time spent: 0:0:0 [0.501405s total; 0.000307 per start]
expr_simplify_select_on_store: num_starts 181 time spent: 0:0:0 [0.472795s total; 0.002612 per start]
expr_simplify_using_lhs_set_helper: num_starts 386 time spent: 0:0:0 [0.705459s total; 0.001828 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 3247 time spent: 0:0:0 [0.701706s total; 0.000216 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1881 time spent: 0:0:0 [0.007956s total; 0.000004 per start]
expr_simplify_eq: num_starts 446 time spent: 0:0:0 [0.004879s total; 0.000011 per start]
expr_simplify_or: num_starts 17 time spent: 0:0:0 [0.000033s total; 0.000002 per start]
expr_simplify_and: num_starts 115 time spent: 0:0:0 [0.000724s total; 0.000006 per start]
expr_simplify_not: num_starts 25 time spent: 0:0:0 [0.000091s total; 0.000004 per start]
expr_simplify_implies: num_starts 85 time spent: 0:0:0 [0.000721s total; 0.000008 per start]
expr_simplify_ite: num_starts 64 time spent: 0:0:0 [0.003233s total; 0.000051 per start]
canonicalize_expr_tree: num_starts 330 time spent: 0:0:0 [0.034622s total; 0.000105 per start]
expr_simplify_memalloc_using_memlabel: num_starts 172 time spent: 0:0:0 [0.000502s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 181 time spent: 0:0:0 [0.467995s total; 0.002586 per start]
get_arithmetic_addsub_atoms: num_starts 2743 time spent: 0:0:0 [0.001452s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 1061 time spent: 0:0:0 [0.010885s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 405 time spent: 0:0:0 [0.000341s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 8933 time spent: 0:0:0 [0.455034s total; 0.000051 per start]
expr_do_simplify_helper_cache: num_starts 8933 time spent: 0:0:0 [0.008329s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 18 time spent: 0:0:0 [0.000004s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 18 time spent: 0:0:0 [0.000055s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 1064 time spent: 0:0:0 [0.419952s total; 0.000395 per start]
array_constant_equals: num_starts 21779 time spent: 0:0:0 [0.025947s total; 0.000001 per start]
sort_dfa_canonical: num_starts 244919 time spent: 0:0:1 [1.620656s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 3757 time spent: 0:0:0 [0.501709s total; 0.000134 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.134298s total; 0.005596 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.085939s total; 0.003581 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.003561s total; 0.000102 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000047s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 122 time spent: 0:0:0 [0.045614s total; 0.000374 per start]
compute_simplified_loc_exprs_for_edge: num_starts 287 time spent: 0:0:0 [0.116071s total; 0.000404 per start]
compute_locs_definitely_written_on_edge: num_starts 122 time spent: 0:0:0 [0.000378s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.006891s total; 0.000222 per start]
edge_update_memlabel_map_for_mlvars: num_starts 61 time spent: 0:0:0 [0.014645s total; 0.000240 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.063358s total; 0.002640 per start]
expand_locset_to_include_slots_for_memmask: num_starts 55 time spent: 0:0:0 [0.000236s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:38 [38.829402s total; 38.829402 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 8.97s.
ftmap_run_pointsto_analysis.: 0.194267s (num_starts 2; 0.0971s/start)s.
EQ Time after pointsto analysis: 8.77165s.
EQ Time after pointsto analysis and smt_query: 1.44458s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.43485s.
Equivalence proof found. The programs are equivalent.
