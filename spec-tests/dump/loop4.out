argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop4.proof
argv[5] = --spec-iospecs=loop4.iospecs
argv[6] = loop4.spec
argv[7] = loop4.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2888413
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop4.c
argv[10] = -o
argv[11] = par_tmpdir/loop4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop4.spec.etfg
argv[10] = par_tmpdir/loop4.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop4.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000124s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 121 time spent: 0:0:0 [0.000193s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 645 time spent: 0:0:0 [0.002432s total; 0.000004 per start]
expr_simplify_solver: num_starts 58 time spent: 0:0:0 [0.006694s total; 0.000115 per start]
expr_simplify_syntactic: num_starts 58 time spent: 0:0:0 [0.001970s total; 0.000034 per start]
expr_simplify_using_lhs_set_helper: num_starts 76 time spent: 0:0:0 [0.010800s total; 0.000142 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 172 time spent: 0:0:0 [0.010626s total; 0.000062 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000235s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000008s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 40 time spent: 0:0:0 [0.000530s total; 0.000013 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000045s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000662s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000133s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1469 time spent: 0:0:0 [0.012220s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1469 time spent: 0:0:0 [0.000969s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.042309s total; 0.000651 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.013640s total; 0.000210 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005525s total; 0.000064 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000081s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.003973s total; 0.000031 per start]
compute_simplified_loc_exprs_for_edge: num_starts 384 time spent: 0:0:0 [0.015448s total; 0.000040 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000047s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005232s total; 0.000187 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000372s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.009100s total; 0.000140 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000095s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 9e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.4e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.7e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 1.7e-05s (num_starts 31; 0.0000s/start)
add_assumes_to_start_edge.: 1.8e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.6e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.7e-05s (num_starts 26; 0.0000s/start)
context_constructor.solver.: 3.9e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.7e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.6e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_specvars.: 7e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 7.4e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.1e-05s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.3e-05s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.3e-05s (num_starts 10; 0.0000s/start)
main.3.: 9.4e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000101s (num_starts 33; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000122s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000126s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000151s (num_starts 1; 0.0002s/start)
expr_represents_llvm_undef.: 0.000168s (num_starts 28; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000168s (num_starts 2; 0.0001s/start)
determinize_value_expr_map.: 0.00021s (num_starts 235; 0.0000s/start)
populate_locid2expr_map.: 0.000243s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000291s (num_starts 65; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000299s (num_starts 1; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000305s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000321s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000344s (num_starts 1; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000401s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000412s (num_starts 1; 0.0004s/start)
sp_version_relations_val_t::meet.: 0.000423s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000482s (num_starts 1; 0.0005s/start)
expr_substitute_using_available_exprs_submap.: 0.000494s (num_starts 45; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000516s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000601s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000828s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.001039s (num_starts 3; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001058s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001262s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.00128s (num_starts 85; 0.0000s/start)
query:convert_from_z3.: 0.001312s (num_starts 27; 0.0000s/start)
compute_z3_expr.: 0.001331s (num_starts 27; 0.0000s/start)
compute_lr_status_for_expr.: 0.001349s (num_starts 36; 0.0000s/start)
graph_visit_exprs.: 0.001377s (num_starts 4; 0.0003s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001416s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001467s (num_starts 31; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.00154s (num_starts 121; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001975s (num_starts 1; 0.0020s/start)
query:convert_to_z3.: 0.002536s (num_starts 27; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003273s (num_starts 65; 0.0001s/start)
graph_with_locs_constructor.src.spec.foo.: 0.003371s (num_starts 1; 0.0034s/start)
compute_new_lr_status_on_locs.: 0.0036s (num_starts 65; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003609s (num_starts 68; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003914s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.003971s (num_starts 2; 0.0020s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.00418s (num_starts 1; 0.0042s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004285s (num_starts 2; 0.0021s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004342s (num_starts 1; 0.0043s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004343s (num_starts 645; 0.0000s/start)
tfg::populate_loc_definedness.: 0.004494s (num_starts 2; 0.0022s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004496s (num_starts 1; 0.0045s/start)
query:simplify-z3.: 0.004857s (num_starts 65; 0.0001s/start)
populate_transitive_closure.: 0.005336s (num_starts 1; 0.0053s/start)
graph_to_stream.: 0.005399s (num_starts 1; 0.0054s/start)
populate_simplified_assets.: 0.00541s (num_starts 6; 0.0009s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005454s (num_starts 65; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.00556s (num_starts 2; 0.0028s/start)
graph_identify_back_edges.: 0.005723s (num_starts 5; 0.0011s/start)
populate_branch_affecting_locs.: 0.005777s (num_starts 2; 0.0029s/start)
graph_identify_natural_loops.: 0.00592s (num_starts 5; 0.0012s/start)
create_sp_version_relations_lattice_at_pc.: 0.006322s (num_starts 85; 0.0001s/start)
avail_exprs_create_submap.: 0.007449s (num_starts 195; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.007554s (num_starts 1; 0.0076s/start)
compute_regions.: 0.009077s (num_starts 5; 0.0018s/start)
populate_locs_potentially_modified_on_edge.: 0.009153s (num_starts 3; 0.0031s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.009267s (num_starts 1; 0.0093s/start)
tfg_preprocess.dst.llvm.foo.: 0.009827s (num_starts 1; 0.0098s/start)
tfg::tfg_preprocess.: 0.009829s (num_starts 1; 0.0098s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.010093s (num_starts 1; 0.0101s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.010098s (num_starts 1; 0.0101s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.010104s (num_starts 1; 0.0101s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.01011s (num_starts 1; 0.0101s/start)
tfg_constructor.src.spec.foo.: 0.010112s (num_starts 1; 0.0101s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.010263s (num_starts 1; 0.0103s/start)
find_dominators.: 0.01062s (num_starts 9; 0.0012s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.010876s (num_starts 76; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011429s (num_starts 65; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.011969s (num_starts 1; 0.0120s/start)
populate_loc_liveness.: 0.012565s (num_starts 2; 0.0063s/start)
get_tfg.: 0.013678s (num_starts 1; 0.0137s/start)
get_function_tfg_map.foo.: 0.013709s (num_starts 1; 0.0137s/start)
get_function_tfg_map.: 0.013712s (num_starts 1; 0.0137s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013736s (num_starts 65; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.014072s (num_starts 645; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.014581s (num_starts 3; 0.0049s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.014869s (num_starts 645; 0.0000s/start)
main.2.: 0.016544s (num_starts 1; 0.0165s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.018176s (num_starts 645; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.035351s (num_starts 1; 0.0354s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.04239s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.044388s (num_starts 1; 0.0444s/start)
ftmap_run_pointsto_analysis.: 0.097572s (num_starts 1; 0.0976s/start)
parse_consts_db.: 6.60839s (num_starts 1; 6.6084s/start)
main.: 6.81578s (num_starts 1; 6.8158s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file loop4.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%31%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%31%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%31%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%34%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%34%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%34%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%31%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%31%bbentry ending at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%31%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 2 propagated CEs at PC L2%31%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%31%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 2 paths to src pc L2%31%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%31%bbentry=>L2%31%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%31%bbentry=>L2%31%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 2 feasible correlations for paths to src pc L2%31%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 5 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>L2%31%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%31%bbentry --> L2%31%bbentry ending at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Getting alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Found no alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Adding edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1.B2: Propagated 3 out of 5 counter-examples across edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1.B2: Added the 3 propagated CEs at PC L2%31%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1.B2: Computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 10 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>L2%31%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%31%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%31%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : foo.A1.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%31%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%31%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Adding edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Propagated 5 out of 18 counter-examples across edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : foo.A1.B2.C1: Added the 5 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%31%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%31%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:23 : foo.A1.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce29      2.:z3.ce102      3.:z3.ce133
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce133      2.:z3v487.ce196      3.:z3.ce310
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3.ce29
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce133      2.:z3.ce253
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3.ce29
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce133      2.:z3v487.ce196      3.:z3.ce310
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce29
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%31%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 2.37s, query:smt.: 0.676978s (num_starts 26; 0.0260s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.65053s (num_starts 61; 0.0271s/start)ftmap_run_pointsto_analysis.: 0.081392s (num_starts 2; 0.0407s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 3e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 3e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 4e-06s (num_starts 5; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 5e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-05s (num_starts 19; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1e-05s (num_starts 1; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.1e-05s (num_starts 13; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.2e-05s (num_starts 4; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.2e-05s (num_starts 1; 0.0000s/start)
remove_complex_bv_exprs.: 1.3e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.4e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.4e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 2.3e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.6e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.8e-05s (num_starts 1; 0.0000s/start)
prove_trivial.: 2.9e-05s (num_starts 30; 0.0000s/start)
ce_perform_memory_fuzzing.: 3.1e-05s (num_starts 16; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 3.2e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 3.3e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 3.6e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 4.5e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.4e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 6.4e-05s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 6.8e-05s (num_starts 1; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 7.1e-05s (num_starts 15; 0.0000s/start)
expr_is_hidden_reg.: 7.2e-05s (num_starts 93; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 8.4e-05s (num_starts 16; 0.0000s/start)
lr_status_meet.: 8.8e-05s (num_starts 138; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 9.5e-05s (num_starts 63; 0.0000s/start)
expr_is_callee_save_const.: 0.00011s (num_starts 105; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000123s (num_starts 61; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000138s (num_starts 3; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000142s (num_starts 1; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000151s (num_starts 1; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000151s (num_starts 44; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000153s (num_starts 33; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry.: 0.000162s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000167s (num_starts 44; 0.0000s/start)
populate_locid2expr_map.: 0.000169s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000174s (num_starts 75; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000178s (num_starts 33; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000182s (num_starts 1; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000184s (num_starts 33; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000186s (num_starts 22; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000188s (num_starts 5; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000191s (num_starts 16; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000202s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000214s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000228s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000237s (num_starts 463; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000241s (num_starts 9; 0.0000s/start)
parse_yices_model.: 0.000256s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000258s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00026s (num_starts 1; 0.0003s/start)
graph_locs_add_local_vars_for_edge.: 0.000261s (num_starts 22; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000271s (num_starts 30; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000277s (num_starts 2; 0.0001s/start)
collect_assumes_around_edge.: 0.000328s (num_starts 3; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000342s (num_starts 37; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000387s (num_starts 30; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000406s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000407s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000409s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000409s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000411s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000413s (num_starts 1; 0.0004s/start)
set_result_and_counter_example.: 0.000418s (num_starts 26; 0.0000s/start)
identify_address_taken_local_variables.: 0.000419s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000429s (num_starts 1; 0.0004s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000439s (num_starts 90; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000451s (num_starts 2; 0.0002s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000463s (num_starts 90; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000492s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000512s (num_starts 1; 0.0005s/start)
parse_cvc4_model.: 0.000536s (num_starts 1; 0.0005s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.00056s (num_starts 44; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000561s (num_starts 19; 0.0000s/start)
ldr_decomposition.: 0.000561s (num_starts 15; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000577s (num_starts 50; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000589s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000616s (num_starts 1; 0.0006s/start)
proof_query_is_trivial.: 0.000621s (num_starts 63; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000622s (num_starts 3; 0.0002s/start)
construct_linear_combination_exprs.: 0.000624s (num_starts 28; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000629s (num_starts 8; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.00064s (num_starts 2; 0.0003s/start)
graph_with_guessing_sync_preds.: 0.000699s (num_starts 61; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.0007s (num_starts 54; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000709s (num_starts 66; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000719s (num_starts 5; 0.0001s/start)
expr_represents_llvm_undef.: 0.000748s (num_starts 109; 0.0000s/start)
create_closure_matrix.: 0.000753s (num_starts 72; 0.0000s/start)
populate_simplified_to_state.: 0.000762s (num_starts 3; 0.0003s/start)
removeMostPromising.: 0.000773s (num_starts 10; 0.0001s/start)
get_unrolled_loop_paths_from.: 0.000781s (num_starts 1; 0.0008s/start)
tfg_edge_composition_get_assumes.: 0.000799s (num_starts 66; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.00081s (num_starts 33; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000878s (num_starts 5; 0.0002s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000901s (num_starts 519; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000904s (num_starts 5; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00091s (num_starts 54; 0.0000s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000963s (num_starts 30; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000985s (num_starts 2; 0.0005s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000991s (num_starts 1; 0.0010s/start)
corr_graph_enumerate_correlations.: 0.001042s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.before_solve.: 0.001315s (num_starts 3; 0.0004s/start)
generate_aliasing_constraints_from_expr.: 0.001327s (num_starts 620; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001357s (num_starts 2; 0.0007s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001366s (num_starts 30; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.001387s (num_starts 28; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001615s (num_starts 3; 0.0005s/start)
graph_visit_exprs.: 0.001675s (num_starts 3; 0.0006s/start)
tfg::populate_loc_definedness.: 0.001718s (num_starts 3; 0.0006s/start)
populate_simplified_assets.: 0.001733s (num_starts 6; 0.0003s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001828s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001979s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.001983s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.00199s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001995s (num_starts 3; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.002147s (num_starts 109; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.00216s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.002163s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned;-trivial.: 0.002167s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002172s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002181s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned.: 0.002188s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002205s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002297s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.0023s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.002301s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002304s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002311s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.002319s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002327s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002334s (num_starts 3; 0.0008s/start)
compute_ssa_vars_renaming_map.: 0.002511s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002648s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.002652s (num_starts 1; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002652s (num_starts 1; 0.0027s/start)
populate_locs_potentially_modified_on_edge.: 0.002697s (num_starts 3; 0.0009s/start)
graph_visit_exprs_and_keys.: 0.002776s (num_starts 2; 0.0014s/start)
populate_branch_affecting_locs.: 0.002887s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002936s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002942s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.002945s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002949s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002961s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.002972s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.002983s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002993s (num_starts 3; 0.0010s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.003062s (num_starts 1; 0.0031s/start)
get_sprel_map_pair_at_pc.: 0.00308s (num_starts 33; 0.0001s/start)
graph_identify_back_edges.: 0.003138s (num_starts 21; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.003151s (num_starts 139; 0.0000s/start)
graph_identify_natural_loops.: 0.003303s (num_starts 21; 0.0002s/start)
find_dominators.: 0.003339s (num_starts 25; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003382s (num_starts 66; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.00343s (num_starts 225; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.003499s (num_starts 30; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.003766s (num_starts 72; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.00387s (num_starts 2; 0.0019s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004088s (num_starts 29; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.004264s (num_starts 15; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.004264s (num_starts 190; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004271s (num_starts 61; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.004381s (num_starts 32; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.004445s (num_starts 3; 0.0015s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.004507s (num_starts 127; 0.0000s/start)
compute_vars_reaching_definitions.: 0.004511s (num_starts 2; 0.0023s/start)
bv_linear_solve.: 0.004545s (num_starts 15; 0.0003s/start)
query:bv_solve.: 0.004624s (num_starts 15; 0.0003s/start)
compute_expr_eqclasses_at_pc.: 0.004868s (num_starts 1; 0.0049s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.005159s (num_starts 20; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.00521s (num_starts 20; 0.0003s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.005248s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00536s (num_starts 3; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005364s (num_starts 3; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.005375s (num_starts 3; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.005386s (num_starts 3; 0.0018s/start)
cg_add_node.: 0.005447s (num_starts 3; 0.0018s/start)
bv_solve_returning_intermediate_structures.: 0.005516s (num_starts 15; 0.0004s/start)
populate_transitive_closure.: 0.005582s (num_starts 27; 0.0002s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.00561s (num_starts 120; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.00568s (num_starts 20; 0.0003s/start)
predicate_canonicalized.: 0.005728s (num_starts 28; 0.0002s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.00595s (num_starts 33; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.006102s (num_starts 3; 0.0020s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006236s (num_starts 33; 0.0002s/start)
compute_lr_status_for_expr.: 0.006254s (num_starts 154; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.006267s (num_starts 4; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.006278s (num_starts 4; 0.0016s/start)
lhs_set_sort.: 0.006316s (num_starts 33; 0.0002s/start)
bvsolve_cache_query.miss1.: 0.00633s (num_starts 15; 0.0004s/start)
bvsolve_cache_query.: 0.006441s (num_starts 15; 0.0004s/start)
collect_aliasing_constraints_around_path_helper.: 0.006453s (num_starts 106; 0.0001s/start)
collect_assumes_around_path_helper.: 0.006646s (num_starts 90; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.006718s (num_starts 138; 0.0000s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.006834s (num_starts 18; 0.0004s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006921s (num_starts 138; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.006947s (num_starts 90; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.006995s (num_starts 66; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007143s (num_starts 833; 0.0000s/start)
create_new_corr_graph_edge.new_node.: 0.007241s (num_starts 2; 0.0036s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.007253s (num_starts 54; 0.0001s/start)
create_new_corr_graph_edge.: 0.007368s (num_starts 3; 0.0025s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.007555s (num_starts 54; 0.0001s/start)
compute_regions.: 0.007759s (num_starts 21; 0.0004s/start)
solve_for_bv_points.: 0.007839s (num_starts 15; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007989s (num_starts 4; 0.0020s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008s (num_starts 4; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008082s (num_starts 4; 0.0020s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008187s (num_starts 54; 0.0002s/start)
collect_inductive_preds_around_path.: 0.008923s (num_starts 61; 0.0001s/start)
counter_example_satisfies_preds.: 0.008964s (num_starts 330; 0.0000s/start)
gen_pred_from_coeff_row.simplify.: 0.009121s (num_starts 28; 0.0003s/start)
get_next_potential_correlations.: 0.009392s (num_starts 3; 0.0031s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.009496s (num_starts 15; 0.0006s/start)
populate_loc_liveness.: 0.009872s (num_starts 3; 0.0033s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.010099s (num_starts 6; 0.0017s/start)
propagate_nodece_across_edge.: 0.010847s (num_starts 8; 0.0014s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.010921s (num_starts 4; 0.0027s/start)
avail_exprs_create_submap.: 0.011038s (num_starts 162; 0.0001s/start)
query:convert_from_z3.: 0.011472s (num_starts 197; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.012502s (num_starts 54; 0.0002s/start)
do_ssa_transformation.: 0.013361s (num_starts 2; 0.0067s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.01397s (num_starts 100; 0.0001s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.014029s (num_starts 1; 0.0140s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.014795s (num_starts 6; 0.0025s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.015606s (num_starts 135; 0.0001s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.016263s (num_starts 877; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.017126s (num_starts 80; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.017256s (num_starts 833; 0.0000s/start)
gen_pred_from_coeff_row.: 0.017893s (num_starts 28; 0.0006s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.017902s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017907s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017912s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017915s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017919s (num_starts 2; 0.0090s/start)
tfg_relax_pointsto_vals_on_edge.: 0.018069s (num_starts 17; 0.0011s/start)
compute_preds_for_bv_points.: 0.018137s (num_starts 5; 0.0036s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.01817s (num_starts 9; 0.0020s/start)
query:convert_to_z3.: 0.018332s (num_starts 197; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.019401s (num_starts 17; 0.0011s/start)
get_unrolled_paths_from.: 0.019448s (num_starts 15; 0.0013s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.019643s (num_starts 61; 0.0003s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.019955s (num_starts 16; 0.0012s/start)
tfg_postprocess_after_pointsto_analysis.: 0.020834s (num_starts 2; 0.0104s/start)
apply_mask_and_overlay_array_constant.: 0.020935s (num_starts 16; 0.0013s/start)
graph_to_stream.: 0.021326s (num_starts 4; 0.0053s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.021815s (num_starts 54; 0.0004s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.022725s (num_starts 78; 0.0003s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.023633s (num_starts 37; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.023705s (num_starts 833; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.025255s (num_starts 4; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.025264s (num_starts 4; 0.0063s/start)
put_smtlib_string_in_file.: 0.025844s (num_starts 52; 0.0005s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.027232s (num_starts 1; 0.0272s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.027235s (num_starts 1; 0.0272s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.027238s (num_starts 1; 0.0272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.02724s (num_starts 1; 0.0272s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.027243s (num_starts 1; 0.0272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.029113s (num_starts 6; 0.0049s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.029287s (num_starts 33; 0.0009s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%31%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.031449s (num_starts 10; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.031633s (num_starts 8; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.031651s (num_starts 8; 0.0040s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.032198s (num_starts 33; 0.0010s/start)
guarded_predicate_set_and.: 0.034044s (num_starts 33; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034132s (num_starts 1; 0.0341s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034141s (num_starts 1; 0.0341s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034148s (num_starts 1; 0.0341s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034164s (num_starts 1; 0.0342s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.034169s (num_starts 1; 0.0342s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.034182s (num_starts 1; 0.0342s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.034594s (num_starts 2; 0.0173s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.034604s (num_starts 2; 0.0173s/start)
graph_ec_apply_trans_funs_helper.0.: 0.037173s (num_starts 158; 0.0002s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.037706s (num_starts 389; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.038505s (num_starts 163; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.03893s (num_starts 163; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.039506s (num_starts 163; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.040078s (num_starts 163; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040781s (num_starts 1; 0.0408s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040785s (num_starts 1; 0.0408s/start)
query:simplify-z3.: 0.04117s (num_starts 408; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.046349s (num_starts 16; 0.0029s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.046553s (num_starts 42; 0.0011s/start)
edge_composition_apply_trans_funs_on_pred.: 0.049654s (num_starts 61; 0.0008s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.050396s (num_starts 78; 0.0006s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.051061s (num_starts 37; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051273s (num_starts 1; 0.0513s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051278s (num_starts 1; 0.0513s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.051288s (num_starts 1; 0.0513s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052437s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052447s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.052458s (num_starts 1; 0.0525s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.052462s (num_starts 1; 0.0525s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.05268s (num_starts 1; 0.0527s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.053958s (num_starts 2; 0.0270s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.056839s (num_starts 12; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.058715s (num_starts 3; 0.0196s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.058724s (num_starts 3; 0.0196s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.064776s (num_starts 16; 0.0040s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.066977s (num_starts 18; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07138s (num_starts 2; 0.0357s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071388s (num_starts 2; 0.0357s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.071396s (num_starts 2; 0.0357s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.071402s (num_starts 2; 0.0357s/start)
ftmap_run_pointsto_analysis.: 0.081392s (num_starts 2; 0.0407s/start)
tfg_run_pointsto_analysis.: 0.081656s (num_starts 2; 0.0408s/start)
check_wfconds_on_edge.L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry.: 0.08185s (num_starts 3; 0.0273s/start)
tfg_populate_structs_after_ssa_construction.: 0.095199s (num_starts 2; 0.0476s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.095968s (num_starts 3; 0.0320s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096164s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096168s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.096175s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.096179s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096225s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096233s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096233s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096235s (num_starts 1; 0.0962s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096235s (num_starts 1; 0.0962s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.097638s (num_starts 266; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097677s (num_starts 1; 0.0977s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097684s (num_starts 1; 0.0977s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097689s (num_starts 1; 0.0977s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.099701s (num_starts 4; 0.0249s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.099709s (num_starts 4; 0.0249s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.099726s (num_starts 4; 0.0249s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101175s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101177s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.101189s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.101193s (num_starts 1; 0.1012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101601s (num_starts 2; 0.0508s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101634s (num_starts 2; 0.0508s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103674s (num_starts 2; 0.0518s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103695s (num_starts 2; 0.0518s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.103779s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.10554s (num_starts 4; 0.0264s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.111312s (num_starts 2; 0.0557s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.11145s (num_starts 3; 0.0371s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.111839s (num_starts 6; 0.0186s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112129s (num_starts 3; 0.0374s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.11215s (num_starts 3; 0.0374s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.11875s (num_starts 1; 0.1187s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.118752s (num_starts 1; 0.1188s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.118754s (num_starts 1; 0.1188s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.118755s (num_starts 1; 0.1188s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.118762s (num_starts 1; 0.1188s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.118766s (num_starts 1; 0.1188s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.118773s (num_starts 1; 0.1188s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.119211s (num_starts 2; 0.0596s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.123484s (num_starts 2; 0.0617s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.123492s (num_starts 2; 0.0617s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.123499s (num_starts 2; 0.0617s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.123507s (num_starts 2; 0.0618s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.123516s (num_starts 2; 0.0618s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.130141s (num_starts 5; 0.0260s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.130156s (num_starts 5; 0.0260s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.13084s (num_starts 8; 0.0164s/start)
decide_hoare_triple_helper;-trivial.: 0.131488s (num_starts 37; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133795s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133803s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133811s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133819s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.133836s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned.: 0.133845s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.133861s (num_starts 2; 0.0669s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.13605s (num_starts 4; 0.0340s/start)
counter_example_falsifies_preds.: 0.148914s (num_starts 59; 0.0025s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.151777s (num_starts 4; 0.0379s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.151813s (num_starts 4; 0.0380s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.151833s (num_starts 4; 0.0380s/start)
parse_z3_model.: 0.152273s (num_starts 17; 0.0090s/start)
read_counter_examples_from_channel.: 0.155017s (num_starts 9; 0.0172s/start)
counter_example_evaluate_preds.: 0.157034s (num_starts 389; 0.0004s/start)
compute_z3_expr.: 0.158972s (num_starts 223; 0.0007s/start)
ce_reconcile_sorts.: 0.164311s (num_starts 19; 0.0086s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.168791s (num_starts 31; 0.0054s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.168967s (num_starts 31; 0.0055s/start)
check_wfconds_on_edge.L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.177698s (num_starts 2; 0.0888s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18217s (num_starts 2; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.182176s (num_starts 2; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18218s (num_starts 2; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.182198s (num_starts 2; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.182207s (num_starts 2; 0.0911s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.182219s (num_starts 2; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.183535s (num_starts 12; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.183569s (num_starts 12; 0.0153s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.185216s (num_starts 3; 0.0617s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186439s (num_starts 3; 0.0621s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186451s (num_starts 3; 0.0622s/start)
counter_example_translate_on_edge_composition_helper.: 0.191795s (num_starts 292; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.192778s (num_starts 7; 0.0275s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.192803s (num_starts 7; 0.0275s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.197329s (num_starts 2; 0.0987s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.197383s (num_starts 2; 0.0987s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.203861s (num_starts 1; 0.2039s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.208931s (num_starts 16; 0.0131s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.250937s (num_starts 9; 0.0279s/start)
check_wfconds_on_edge.: 0.259797s (num_starts 7; 0.0371s/start)
check_equivalence_proof.: 0.277238s (num_starts 1; 0.2772s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.279854s (num_starts 3; 0.0933s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.281931s (num_starts 6; 0.0470s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.287984s (num_starts 5; 0.0576s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.298466s (num_starts 11; 0.0271s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.316086s (num_starts 3; 0.1054s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.316149s (num_starts 3; 0.1054s/start)
dst_edge_composition_proves_false.: 0.326717s (num_starts 3; 0.1089s/start)
get_next_dst_edge_composition_to_correlate.: 0.335493s (num_starts 4; 0.0839s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.343569s (num_starts 6; 0.0573s/start)
decide_hoare_triple.: 0.354414s (num_starts 5; 0.0709s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.361749s (num_starts 8; 0.0452s/start)
corr_graph::add_edge().: 0.374959s (num_starts 3; 0.1250s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.383113s (num_starts 3; 0.1277s/start)
corr_graph_add_correlation.: 0.383201s (num_starts 3; 0.1277s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.383247s (num_starts 3; 0.1277s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.439801s (num_starts 9; 0.0489s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.441049s (num_starts 17; 0.0259s/start)
check_preds_on_edge_compositions.: 0.450266s (num_starts 10; 0.0450s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.467712s (num_starts 8; 0.0585s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.489289s (num_starts 8; 0.0612s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.507304s (num_starts 27; 0.0188s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry).: 0.509598s (num_starts 25; 0.0204s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry).: 0.533176s (num_starts 24; 0.0222s/start)
query:smt.: 0.676978s (num_starts 26; 0.0260s/start)
spawn_smt_query.: 0.832286s (num_starts 26; 0.0320s/start)
update_invariant_state_for_edges.: 1.13806s (num_starts 3; 0.3794s/start)
cg_check_new_cg_ec.: 1.13811s (num_starts 3; 0.3794s/start)
correl_entry_apply.: 1.13826s (num_starts 3; 0.3794s/start)
solver_provable.: 1.18204s (num_starts 33; 0.0358s/start)
expr_is_provable.: 1.1948s (num_starts 33; 0.0362s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.1954s (num_starts 33; 0.0362s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.19708s (num_starts 33; 0.0363s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.19791s (num_starts 33; 0.0363s/start)
solver_satisfiable-cache-miss.: 1.19829s (num_starts 26; 0.0461s/start)
solver_satisfiable.: 1.19851s (num_starts 34; 0.0353s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.2383s (num_starts 33; 0.0375s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.24467s (num_starts 33; 0.0377s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.24524s (num_starts 33; 0.0377s/start)
expandProductCFG.: 1.48362s (num_starts 4; 0.3709s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.5131s (num_starts 33; 0.0459s/start)
prove.: 1.51338s (num_starts 33; 0.0459s/start)
prove_spawn_and_join_helper.: 1.51357s (num_starts 33; 0.0459s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.5166s (num_starts 24; 0.0632s/start)
prove_spawn_and_join.: 1.5577s (num_starts 33; 0.0472s/start)
prove_wrapper.proof_query_not_trivial.: 1.56275s (num_starts 33; 0.0474s/start)
prove_wrapper.: 1.57155s (num_starts 63; 0.0249s/start)
decide_hoare_triple_check_ub.: 1.6256s (num_starts 61; 0.0266s/start)
decide_hoare_triple_helper.: 1.65053s (num_starts 61; 0.0271s/start)
decide_hoare_triple_with_alias_cons.: 1.69755s (num_starts 61; 0.0278s/start)
bestFirstSearch.: 1.88967s (num_starts 1; 1.8897s/start)
Time taken for equivalence check.: 2.1683s (num_starts 1; 2.1683s/start)

counters:
# of paths enumerated.: 11
# of paths expanded.: 3
# of queries to linear solver.: 15
# of smt-solver-queries.: 26
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 8
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 17
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%31%bbentry_Lfor.cond%1%bbentry.: 8
final-CG-counterexamples-total-at-L2%31%bbentry_Lfor.cond%1%bbentry.: 18
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 16
src-nodes.: 14
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.52
final-CG-time-to-total-time-ratio.: 0.81
query-time-to-total-time-ratio.: 0.30

Context stats:
exprs: count: 142704
sorts: count: 156
num_proof_queries: 33
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	4364
	        hit ratio:	0.95417
m_simplify_solver:
	----------- total:	766
	        hit ratio:	0.721932
m_z3_solver_substitution:
	----------- total:	211
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	213
	        hit ratio:	0
m_expr_size:
	----------- total:	5749
	        hit ratio:	0.948165
m_expr_evaluates_to_constant_visitor:
	----------- total:	3432
	        hit ratio:	0.574883

z3_solver expr_query_cache entry size: 26
	----------- total:	34
	             hits:	8
	        hit ratio:	0.235294
histogram (time taken by solver in ms):
[13.0280, 14.7180) (avg. 13.0280)        : 1
[14.7180, 16.6271) (avg. 15.8293)        : 6
[16.6271, 18.7840) (avg. 17.0560)        : 3
[18.7840, 21.2206) (avg. 19.8350)        : 1
[21.2206, 23.9733) (avg.  0.0000)        : 0
[23.9733, 27.0830) (avg. 25.2940)        : 1
[27.0830, 30.5962) (avg. 28.2190)        : 3
[30.5962, 34.5650) (avg. 31.7336)        : 7
[34.5650, 39.0487) (avg. 39.0240)        : 1
[39.0487, 44.1140) (avg. 42.1853)        : 3
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  0)                       : 0
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  0)                       : 0
[ 9, 11) (avg.  0)                       : 0
[11, 13) (avg. 11)                       : 25
[13, 15) (avg.  0)                       : 0
[15, 17) (avg.  0)                       : 0
[17, 19) (avg.  0)                       : 0
[19, 21) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 17,  38) (avg.  17)                    : 1
[ 38,  58) (avg.   0)                    : 0
[ 58,  79) (avg.   0)                    : 0
[ 79,  99) (avg.   0)                    : 0
[ 99, 119) (avg.   0)                    : 0
[119, 140) (avg. 137)                    : 7
[140, 160) (avg. 149)                    : 5
[160, 181) (avg. 170)                    : 7
[181, 201) (avg. 186)                    : 5
[201, 221) (avg. 211)                    : 1
Top 10 highest time taking queries:
1. [0.043s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
2. [0.042s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%31%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%31%bbentry_Lfor.con.0
3. [0.042s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
5. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%31%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
6. [0.032s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.4.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
7. [0.032s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
8. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%31%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%31%bbe.0
9. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%31%bbentry_Lfor.cond%1%bbentry.cond.0
10. [0.031s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.abstract-memlabel-asserts-houdini-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 132 time spent: 0:0:0 [0.002651s total; 0.000020 per start]
tfg_computeWP: num_starts 247 time spent: 0:0:0 [0.032664s total; 0.000132 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1136 time spent: 0:0:0 [0.002115s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1329 time spent: 0:0:0 [0.002299s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 601 time spent: 0:0:0 [0.001043s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.067244s total; 0.003539 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.364590s total; 0.060765 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 302 time spent: 0:0:0 [0.180513s total; 0.000598 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 60 time spent: 0:0:0 [0.240917s total; 0.004015 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 252 time spent: 0:0:0 [0.145076s total; 0.000576 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1046 time spent: 0:0:0 [0.307556s total; 0.000294 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 252 time spent: 0:0:0 [0.007488s total; 0.000030 per start]
tfg_graph_get_vars_written_on_edge: num_starts 252 time spent: 0:0:0 [0.005531s total; 0.000022 per start]
cg_with_rank_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.056191s total; 0.001756 per start]
graph_with_ce_add_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.000449s total; 0.000020 per start]
graph_with_guessing_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.055629s total; 0.001738 per start]
point_set_add_point_using_CE: num_starts 135 time spent: 0:0:0 [0.013468s total; 0.000100 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 135 time spent: 0:0:0 [0.013751s total; 0.000102 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.050635s total; 0.002813 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.036426s total; 0.002024 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1932 time spent: 0:0:0 [0.016722s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 240 time spent: 0:0:0 [0.005250s total; 0.000022 per start]
expr_simplify_solver: num_starts 811 time spent: 0:0:0 [0.066479s total; 0.000082 per start]
expr_simplify_syntactic: num_starts 811 time spent: 0:0:0 [0.020995s total; 0.000026 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010319s total; 0.002580 per start]
expr_simplify_using_lhs_set_helper: num_starts 332 time spent: 0:0:0 [0.107183s total; 0.000323 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1570 time spent: 0:0:0 [0.105483s total; 0.000067 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 790 time spent: 0:0:0 [0.003321s total; 0.000004 per start]
expr_simplify_eq: num_starts 157 time spent: 0:0:0 [0.001614s total; 0.000010 per start]
expr_simplify_or: num_starts 37 time spent: 0:0:0 [0.000043s total; 0.000001 per start]
expr_simplify_and: num_starts 71 time spent: 0:0:0 [0.000412s total; 0.000006 per start]
expr_simplify_not: num_starts 20 time spent: 0:0:0 [0.000073s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 246 time spent: 0:0:0 [0.006560s total; 0.000027 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010230s total; 0.002557 per start]
get_arithmetic_addsub_atoms: num_starts 1023 time spent: 0:0:0 [0.000742s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 266 time spent: 0:0:0 [0.002756s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 635 time spent: 0:0:0 [0.000395s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4718 time spent: 0:0:0 [0.109091s total; 0.000023 per start]
expr_do_simplify_helper_cache: num_starts 4718 time spent: 0:0:0 [0.004251s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 861 time spent: 0:0:0 [0.312613s total; 0.000363 per start]
array_constant_equals: num_starts 381 time spent: 0:0:0 [0.000626s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 37 time spent: 0:0:0 [0.051030s total; 0.001379 per start]
alias_val_xfer_and_meet: num_starts 37 time spent: 0:0:0 [0.023571s total; 0.000637 per start]
get_sprel_map_from_avail_exprs: num_starts 57 time spent: 0:0:0 [0.004638s total; 0.000081 per start]
update_memlabels_for_memslot_locs: num_starts 18 time spent: 0:0:0 [0.000074s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 108 time spent: 0:0:0 [0.011056s total; 0.000102 per start]
compute_simplified_loc_exprs_for_edge: num_starts 307 time spent: 0:0:0 [0.034685s total; 0.000113 per start]
compute_locs_definitely_written_on_edge: num_starts 108 time spent: 0:0:0 [0.000160s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 33 time spent: 0:0:0 [0.005739s total; 0.000174 per start]
edge_update_memlabel_map_for_mlvars: num_starts 54 time spent: 0:0:0 [0.000998s total; 0.000018 per start]
add_new_locs_based_on_edge: num_starts 37 time spent: 0:0:0 [0.014786s total; 0.000400 per start]
expand_locset_to_include_slots_for_memmask: num_starts 66 time spent: 0:0:0 [0.000143s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:29 [29.637062s total; 29.637062 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.37s.
ftmap_run_pointsto_analysis.: 0.081392s (num_starts 2; 0.0407s/start)s.
EQ Time after pointsto analysis: 2.29239s.
EQ Time after pointsto analysis and smt_query: 0.720843s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.714402s.
Equivalence proof found. The programs are equivalent.
