argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --smt-query-timeout=5
argv[5] = --axpred-solver-max-depth=4
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=loop4.proof
argv[9] = --spec-iospecs=loop4.iospecs
argv[10] = loop4.spec
argv[11] = loop4.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.460653
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop4.c
argv[10] = -o
argv[11] = par_tmpdir/loop4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/loop4.spec.etfg
argv[11] = par_tmpdir/loop4.c.bc
argv[12] = -o
argv[13] = par_tmpdir/loop4.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000116s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 121 time spent: 0:0:0 [0.000278s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 645 time spent: 0:0:0 [0.002609s total; 0.000004 per start]
expr_simplify_solver: num_starts 58 time spent: 0:0:0 [0.006356s total; 0.000110 per start]
expr_simplify_syntactic: num_starts 58 time spent: 0:0:0 [0.001940s total; 0.000033 per start]
expr_simplify_using_lhs_set_helper: num_starts 76 time spent: 0:0:0 [0.027102s total; 0.000357 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 172 time spent: 0:0:0 [0.026903s total; 0.000156 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000219s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000010s total; 0.000005 per start]
canonicalize_expr_tree: num_starts 40 time spent: 0:0:0 [0.000603s total; 0.000015 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000042s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000723s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000131s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1469 time spent: 0:0:0 [0.028725s total; 0.000020 per start]
expr_do_simplify_helper_cache: num_starts 1469 time spent: 0:0:0 [0.001086s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.046379s total; 0.000714 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.014528s total; 0.000224 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005621s total; 0.000065 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000084s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.005458s total; 0.000042 per start]
compute_simplified_loc_exprs_for_edge: num_starts 384 time spent: 0:0:0 [0.035159s total; 0.000092 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000050s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005040s total; 0.000180 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000417s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.008888s total; 0.000137 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000095s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 9e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.4e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.9e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 1.9e-05s (num_starts 31; 0.0000s/start)
expr_is_hidden_reg.: 2e-05s (num_starts 22; 0.0000s/start)
add_extra_node_at_start_pc.: 2.7e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.7e-05s (num_starts 26; 0.0000s/start)
context_constructor.solver.: 3.4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.1e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.8e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_specvars.: 7.7e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 8e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.7e-05s (num_starts 1; 0.0001s/start)
main.3.: 9e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.4e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 9.5e-05s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000105s (num_starts 5; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000121s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000143s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000169s (num_starts 1; 0.0002s/start)
expr_represents_llvm_undef.: 0.000185s (num_starts 28; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000185s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.0002s (num_starts 2; 0.0001s/start)
determinize_value_expr_map.: 0.000206s (num_starts 234; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000289s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00031s (num_starts 65; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000339s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000341s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.00035s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000402s (num_starts 1; 0.0004s/start)
compute_z3_expr.: 0.000417s (num_starts 27; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000419s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000469s (num_starts 759; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000481s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000528s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000551s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000632s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000916s (num_starts 1; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001064s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001301s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.001344s (num_starts 85; 0.0000s/start)
graph_visit_exprs.: 0.001406s (num_starts 4; 0.0004s/start)
query:convert_from_z3.: 0.001422s (num_starts 27; 0.0001s/start)
compute_lr_status_for_expr.: 0.001477s (num_starts 36; 0.0000s/start)
populate_simplified_to_state.: 0.001518s (num_starts 3; 0.0005s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001558s (num_starts 31; 0.0001s/start)
query:convert_to_z3.: 0.001611s (num_starts 27; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001616s (num_starts 31; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00203s (num_starts 1; 0.0020s/start)
tfg::collect_assumes_around_edge.: 0.002135s (num_starts 121; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002265s (num_starts 1; 0.0023s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003556s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.0041s (num_starts 2; 0.0021s/start)
query:simplify-z3.: 0.004233s (num_starts 65; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.004291s (num_starts 1; 0.0043s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004386s (num_starts 68; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004437s (num_starts 2; 0.0022s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004449s (num_starts 1; 0.0044s/start)
compute_new_lr_status_on_locs.: 0.00453s (num_starts 65; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004606s (num_starts 1; 0.0046s/start)
tfg::populate_loc_definedness.: 0.004647s (num_starts 2; 0.0023s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004798s (num_starts 65; 0.0001s/start)
graph_to_stream.: 0.00563s (num_starts 1; 0.0056s/start)
populate_dominator_and_postdominator_relations.: 0.005868s (num_starts 2; 0.0029s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005937s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.00615s (num_starts 2; 0.0031s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.006611s (num_starts 1; 0.0066s/start)
create_sp_version_relations_lattice_at_pc.: 0.006723s (num_starts 85; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.007346s (num_starts 1; 0.0073s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.007636s (num_starts 1; 0.0076s/start)
graph_identify_back_edges.: 0.008017s (num_starts 6; 0.0013s/start)
avail_exprs_create_submap.: 0.00819s (num_starts 195; 0.0000s/start)
graph_identify_natural_loops.: 0.008271s (num_starts 6; 0.0014s/start)
populate_transitive_closure.: 0.008507s (num_starts 1; 0.0085s/start)
populate_simplified_assets.: 0.009185s (num_starts 6; 0.0015s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.010224s (num_starts 1; 0.0102s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.010541s (num_starts 645; 0.0000s/start)
tfg_preprocess.dst.llvm.foo.: 0.011876s (num_starts 1; 0.0119s/start)
tfg::tfg_preprocess.: 0.011879s (num_starts 1; 0.0119s/start)
compute_regions.: 0.012617s (num_starts 6; 0.0021s/start)
find_dominators.: 0.013049s (num_starts 10; 0.0013s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.013072s (num_starts 65; 0.0002s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.014653s (num_starts 65; 0.0002s/start)
populate_loc_liveness.: 0.015466s (num_starts 2; 0.0077s/start)
get_tfg.: 0.015891s (num_starts 1; 0.0159s/start)
get_function_tfg_map.foo.: 0.015926s (num_starts 1; 0.0159s/start)
get_function_tfg_map.: 0.015929s (num_starts 1; 0.0159s/start)
main.2.: 0.017273s (num_starts 1; 0.0173s/start)
populate_locs_potentially_modified_on_edge.: 0.02668s (num_starts 3; 0.0089s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.027194s (num_starts 76; 0.0004s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.030654s (num_starts 1; 0.0307s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.03066s (num_starts 1; 0.0307s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.030666s (num_starts 1; 0.0307s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.030673s (num_starts 1; 0.0307s/start)
tfg_constructor.src.spec.foo.: 0.030677s (num_starts 1; 0.0307s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.031356s (num_starts 645; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.032373s (num_starts 645; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.03588s (num_starts 3; 0.0120s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.035976s (num_starts 645; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.039597s (num_starts 1; 0.0396s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.046475s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.048882s (num_starts 1; 0.0489s/start)
ftmap_run_pointsto_analysis.: 0.106917s (num_starts 1; 0.1069s/start)
parse_consts_db.: 6.8295s (num_starts 1; 6.8295s/start)
main.: 7.06524s (num_starts 1; 7.0652s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file loop4.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L2%31%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L2%31%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L2%31%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L2%34%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L2%34%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L2%34%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo: Found 3 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%31%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L2%31%bbentry ending at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting select expressions at toPC L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting non-linear expressions at toPC L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding node L2%31%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:22 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2: Added the 2 propagated CEs at PC L2%31%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L2%31%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%31%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L2%31%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%31%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L2%31%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L2%31%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:22 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%31%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%31%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L2%31%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%31%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L2%31%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L2%31%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:22 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%31%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%31%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:22 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%31%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%31%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A2: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L2%31%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%31%bbentry=>L2%31%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%31%bbentry=>L2%31%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L2%31%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 5 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>L2%31%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%31%bbentry --> L2%31%bbentry ending at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Getting alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Found no alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Adding edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2.B2: Propagated 3 out of 5 counter-examples across edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2.B2: Added the 3 propagated CEs at PC L2%31%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2.B2: Computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Done computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC L2%31%bbentry_Lfor.cond%1%bbentry, src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%31%bbentry --> L2%31%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce127
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce127
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce127
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:22 : Added correlation to the product-TFG foo.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 10 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>L2%31%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L2%31%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce127
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L2%31%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce127
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce127
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:22 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L2%31%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L2%31%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27


<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L2%31%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%31%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L2%31%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Getting alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Found no alloca-ptrs on edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagated 5 out of 18 counter-examples across edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A2.B2.C1: Added the 5 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L2%31%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L2%31%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%31%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%31%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L2%31%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : foo.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%31%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%31%bbentry ; 4-->input.spec-%var-n-0.L2%31%bbentry ; 5-->input.spec-%var-r-0.L2%31%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%31%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%31%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce96      3.:z3.ce127
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%31%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce242
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce127      2.:z3.ce187      3.:z3.ce297
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce27

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%31%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry => C L2%31%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%31%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%31%bbentry_Lfor.cond%1%bbentry (C L2%31%bbentry, A (line 3 at column 21))
                L2%31%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 2.54s, query:smt.: 0.711905s (num_starts 25; 0.0285s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.63928s (num_starts 61; 0.0269s/start)ftmap_run_pointsto_analysis.: 0.121895s (num_starts 2; 0.0609s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 3e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 3e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 5; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.2e-05s (num_starts 1; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.3e-05s (num_starts 13; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.3e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.4e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.4e-05s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.4e-05s (num_starts 5; 0.0000s/start)
remove_complex_bv_exprs.: 1.4e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.5e-05s (num_starts 19; 0.0000s/start)
ce_perform_memory_fuzzing.: 1.9e-05s (num_starts 16; 0.0000s/start)
prove_trivial.: 2.2e-05s (num_starts 30; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.5e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.7e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.8e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 2.9e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 3e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.8e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 6.1e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 6.2e-05s (num_starts 28; 0.0000s/start)
expr_is_hidden_reg.: 7.6e-05s (num_starts 93; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 7.7e-05s (num_starts 15; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 8.2e-05s (num_starts 1; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 9e-05s (num_starts 63; 0.0000s/start)
lr_status_meet.: 9.1e-05s (num_starts 138; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000102s (num_starts 61; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000103s (num_starts 16; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry.: 0.000105s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.000125s (num_starts 105; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000146s (num_starts 1; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000156s (num_starts 1; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000157s (num_starts 44; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000158s (num_starts 33; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000167s (num_starts 3; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.00017s (num_starts 31; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000173s (num_starts 31; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000179s (num_starts 75; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000187s (num_starts 44; 0.0000s/start)
populate_locid2expr_map.: 0.000218s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.00022s (num_starts 22; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000223s (num_starts 6; 0.0000s/start)
compute_sprel_relations.: 0.000226s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000235s (num_starts 16; 0.0000s/start)
propagate_sprels.: 0.000241s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000244s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000246s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::meet.: 0.000274s (num_starts 463; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000283s (num_starts 9; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00032s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000339s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000339s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00034s (num_starts 30; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000341s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000341s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000342s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000344s (num_starts 1; 0.0003s/start)
graph_locs_add_local_vars_for_edge.: 0.000351s (num_starts 22; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000353s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000357s (num_starts 1; 0.0004s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000365s (num_starts 90; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000372s (num_starts 2; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.00039s (num_starts 37; 0.0000s/start)
set_result_and_counter_example.: 0.000395s (num_starts 25; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000398s (num_starts 90; 0.0000s/start)
collect_assumes_around_edge.: 0.00041s (num_starts 3; 0.0001s/start)
parse_yices_model.: 0.000445s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000446s (num_starts 30; 0.0000s/start)
identify_address_taken_local_variables.: 0.00045s (num_starts 1; 0.0004s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000452s (num_starts 2; 0.0002s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.00049s (num_starts 8; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000522s (num_starts 2; 0.0003s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000546s (num_starts 19; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000598s (num_starts 44; 0.0000s/start)
proof_query_is_trivial.: 0.000606s (num_starts 63; 0.0000s/start)
construct_linear_combination_exprs.: 0.000607s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000619s (num_starts 1; 0.0006s/start)
graph_with_guessing_sync_preds.: 0.000621s (num_starts 61; 0.0000s/start)
ldr_decomposition.: 0.000635s (num_starts 15; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000651s (num_starts 50; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000661s (num_starts 5; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000664s (num_starts 3; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000707s (num_starts 1; 0.0007s/start)
expr_represents_llvm_undef.: 0.000738s (num_starts 109; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000739s (num_starts 1; 0.0007s/start)
get_unrolled_loop_paths_from.: 0.000754s (num_starts 1; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.000765s (num_starts 2; 0.0004s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000774s (num_starts 15; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000792s (num_starts 5; 0.0002s/start)
populate_simplified_to_state.: 0.000803s (num_starts 3; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000815s (num_starts 5; 0.0002s/start)
create_closure_matrix.: 0.000838s (num_starts 72; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000845s (num_starts 31; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000858s (num_starts 54; 0.0000s/start)
parse_cvc4_model.: 0.000884s (num_starts 1; 0.0009s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000893s (num_starts 1; 0.0009s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000933s (num_starts 54; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000955s (num_starts 519; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001078s (num_starts 2; 0.0005s/start)
pth_collect_preds_using_atom_func.: 0.001178s (num_starts 66; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001222s (num_starts 5; 0.0002s/start)
tfg_edge_composition_get_assumes.: 0.001313s (num_starts 66; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001328s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001331s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned;-trivial.: 0.001333s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001336s (num_starts 2; 0.0007s/start)
bv_const_ref_map2expr_map.: 0.001341s (num_starts 28; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001342s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned.: 0.001348s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001355s (num_starts 2; 0.0007s/start)
removeMostPromising.: 0.001359s (num_starts 10; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.001412s (num_starts 620; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001438s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001439s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001442s (num_starts 1; 0.0014s/start)
tfg::populate_loc_definedness.before_solve.: 0.001543s (num_starts 3; 0.0005s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001707s (num_starts 2; 0.0009s/start)
graph_locs_add_all_specvars.: 0.001747s (num_starts 2; 0.0009s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001778s (num_starts 30; 0.0001s/start)
populate_simplified_assets.: 0.001873s (num_starts 6; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001909s (num_starts 3; 0.0006s/start)
tfg::populate_loc_definedness.: 0.002021s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002134s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002138s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-trivial.: 0.002141s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002145s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002165s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002169s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-trivial.: 0.002173s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002178s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002187s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.002193s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002199s (num_starts 3; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.0022s (num_starts 109; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002205s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002296s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002301s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.002304s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002309s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002318s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.002326s (num_starts 3; 0.0008s/start)
graph_visit_exprs.: 0.002332s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.002334s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.00234s (num_starts 3; 0.0008s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.002441s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.002953s (num_starts 2; 0.0015s/start)
get_sprel_map_pair_at_pc.: 0.00305s (num_starts 33; 0.0001s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.003141s (num_starts 1; 0.0031s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003149s (num_starts 225; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.003332s (num_starts 2; 0.0017s/start)
populate_branch_affecting_locs.: 0.003385s (num_starts 3; 0.0011s/start)
expr_substitute_using_available_exprs_submap.: 0.003552s (num_starts 139; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.003571s (num_starts 2; 0.0018s/start)
populate_locs_potentially_modified_on_edge.: 0.003577s (num_starts 3; 0.0012s/start)
pth_collect_simplified_preds_using_atom_func.: 0.003671s (num_starts 61; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.003916s (num_starts 72; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.004203s (num_starts 190; 0.0000s/start)
graph_identify_back_edges.: 0.00425s (num_starts 21; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.00438s (num_starts 127; 0.0000s/start)
graph_identify_natural_loops.: 0.004464s (num_starts 21; 0.0002s/start)
find_dominators.: 0.004485s (num_starts 25; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.004591s (num_starts 4; 0.0011s/start)
ldr_decompose_and_linear_solve.: 0.004595s (num_starts 15; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.004602s (num_starts 4; 0.0012s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004821s (num_starts 66; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.004845s (num_starts 30; 0.0002s/start)
bv_linear_solve.: 0.004878s (num_starts 15; 0.0003s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.00488s (num_starts 29; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.004953s (num_starts 20; 0.0002s/start)
compute_expr_eqclasses_at_pc.: 0.004956s (num_starts 1; 0.0050s/start)
query:bv_solve.: 0.004958s (num_starts 15; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.005003s (num_starts 20; 0.0003s/start)
check_node_stability_after_CE_addition.: 0.005098s (num_starts 32; 0.0002s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.00539s (num_starts 3; 0.0018s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.005465s (num_starts 3; 0.0018s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.005505s (num_starts 67; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005527s (num_starts 105; 0.0001s/start)
cg_add_node.: 0.005634s (num_starts 3; 0.0019s/start)
predicate_canonicalized.: 0.005717s (num_starts 28; 0.0002s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005809s (num_starts 31; 0.0002s/start)
collect_assumes_around_path_helper.: 0.005846s (num_starts 90; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.005887s (num_starts 15; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006053s (num_starts 3; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006056s (num_starts 3; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.006068s (num_starts 3; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.006082s (num_starts 3; 0.0020s/start)
graph_with_paths::collect_assumes_around_path.: 0.00611s (num_starts 90; 0.0001s/start)
tfg_suffixpath_get_expr_helper.: 0.006143s (num_starts 20; 0.0003s/start)
collect_aliasing_constraints_around_path_helper.: 0.006166s (num_starts 106; 0.0001s/start)
compute_vars_reaching_definitions.: 0.00629s (num_starts 2; 0.0031s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006336s (num_starts 31; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.006395s (num_starts 18; 0.0004s/start)
collect_aliasing_constraints_around_path.: 0.006574s (num_starts 66; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.006741s (num_starts 15; 0.0004s/start)
compute_lr_status_for_expr.: 0.006836s (num_starts 154; 0.0000s/start)
lhs_set_sort.: 0.00685s (num_starts 33; 0.0002s/start)
bvsolve_cache_query.: 0.006863s (num_starts 15; 0.0005s/start)
counter_example_falsifies_preds.: 0.006917s (num_starts 59; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.006918s (num_starts 3; 0.0023s/start)
populate_transitive_closure.: 0.007157s (num_starts 27; 0.0003s/start)
create_new_corr_graph_edge.new_node.: 0.007303s (num_starts 2; 0.0037s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007315s (num_starts 138; 0.0001s/start)
create_new_corr_graph_edge.: 0.00745s (num_starts 3; 0.0025s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007466s (num_starts 4; 0.0019s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007478s (num_starts 4; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.007511s (num_starts 6; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007557s (num_starts 4; 0.0019s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007563s (num_starts 138; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.008264s (num_starts 54; 0.0002s/start)
solve_for_bv_points.: 0.008372s (num_starts 15; 0.0006s/start)
query:convert_to_z3.: 0.008695s (num_starts 158; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.008766s (num_starts 28; 0.0003s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.009216s (num_starts 54; 0.0002s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.009348s (num_starts 54; 0.0002s/start)
query:convert_from_z3.: 0.00935s (num_starts 158; 0.0001s/start)
collect_inductive_preds_around_path.: 0.009609s (num_starts 61; 0.0002s/start)
get_next_potential_correlations.: 0.010081s (num_starts 3; 0.0034s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.010162s (num_starts 15; 0.0007s/start)
compute_regions.: 0.010334s (num_starts 21; 0.0005s/start)
counter_example_satisfies_preds.: 0.010401s (num_starts 330; 0.0000s/start)
populate_loc_liveness.: 0.011192s (num_starts 3; 0.0037s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.012161s (num_starts 4; 0.0030s/start)
avail_exprs_create_submap.: 0.012603s (num_starts 162; 0.0001s/start)
propagate_nodece_across_edge.: 0.012854s (num_starts 8; 0.0016s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.012914s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.012918s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.01292s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.012924s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.012926s (num_starts 2; 0.0065s/start)
compute_new_lr_status_on_locs.: 0.014531s (num_starts 54; 0.0003s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.015153s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.015155s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.015157s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.015158s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.015161s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.015401s (num_starts 17; 0.0009s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.01567s (num_starts 1; 0.0157s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.015733s (num_starts 6; 0.0026s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.016217s (num_starts 80; 0.0002s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.016244s (num_starts 120; 0.0001s/start)
counter_example_evaluate_preds.: 0.016391s (num_starts 389; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.017364s (num_starts 4; 0.0043s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.017373s (num_starts 4; 0.0043s/start)
gen_pred_from_coeff_row.: 0.017448s (num_starts 28; 0.0006s/start)
compute_preds_for_bv_points.: 0.017703s (num_starts 5; 0.0035s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.017753s (num_starts 9; 0.0020s/start)
do_ssa_transformation.: 0.018107s (num_starts 2; 0.0091s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.018675s (num_starts 833; 0.0000s/start)
tfg_relax_pointsto_vals_on_edge.: 0.020201s (num_starts 17; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.020305s (num_starts 6; 0.0034s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.020484s (num_starts 78; 0.0003s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.020765s (num_starts 16; 0.0013s/start)
graph_to_stream.: 0.020949s (num_starts 4; 0.0052s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.021861s (num_starts 61; 0.0004s/start)
apply_mask_and_overlay_array_constant.: 0.021867s (num_starts 16; 0.0014s/start)
get_unrolled_paths_from.: 0.022098s (num_starts 15; 0.0015s/start)
tfg_postprocess_after_pointsto_analysis.: 0.024064s (num_starts 2; 0.0120s/start)
guarded_predicate_set_and.: 0.024433s (num_starts 31; 0.0008s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.025374s (num_starts 54; 0.0005s/start)
put_smtlib_string_in_file.: 0.025612s (num_starts 50; 0.0005s/start)
compute_z3_expr.: 0.026586s (num_starts 183; 0.0001s/start)
query:simplify-z3.: 0.027395s (num_starts 330; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.028239s (num_starts 8; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.028253s (num_starts 8; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030301s (num_starts 1; 0.0303s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030304s (num_starts 1; 0.0303s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.031915s (num_starts 33; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03209s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032096s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032102s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032106s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.032111s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.03212s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.032463s (num_starts 2; 0.0162s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.032471s (num_starts 2; 0.0162s/start)
graph_ec_apply_trans_funs_helper.0.: 0.034226s (num_starts 158; 0.0002s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.034617s (num_starts 33; 0.0010s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%31%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.035323s (num_starts 10; 0.0035s/start)
graph_ec_apply_trans_funs_helper.: 0.035436s (num_starts 163; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.035819s (num_starts 163; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.036331s (num_starts 163; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.036839s (num_starts 163; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.04324s (num_starts 3; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.04325s (num_starts 3; 0.0144s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.045397s (num_starts 877; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.045552s (num_starts 12; 0.0038s/start)
edge_composition_apply_trans_funs_on_pred.: 0.046122s (num_starts 61; 0.0008s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.046618s (num_starts 78; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.046709s (num_starts 833; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04944s (num_starts 1; 0.0494s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.049447s (num_starts 1; 0.0494s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.049456s (num_starts 1; 0.0495s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.050909s (num_starts 2; 0.0255s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.051166s (num_starts 16; 0.0032s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.051379s (num_starts 42; 0.0012s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.052982s (num_starts 16; 0.0033s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.053096s (num_starts 18; 0.0029s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.053801s (num_starts 833; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.05403s (num_starts 37; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055621s (num_starts 1; 0.0556s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05563s (num_starts 1; 0.0556s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.055638s (num_starts 1; 0.0556s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.055642s (num_starts 1; 0.0556s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.055874s (num_starts 1; 0.0559s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.066577s (num_starts 344; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067585s (num_starts 1; 0.0676s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067593s (num_starts 1; 0.0676s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067598s (num_starts 1; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067605s (num_starts 1; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067612s (num_starts 1; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072055s (num_starts 2; 0.0360s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072066s (num_starts 2; 0.0360s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.072077s (num_starts 2; 0.0360s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.072083s (num_starts 2; 0.0360s/start)
check_wfconds_on_edge.L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry.: 0.080922s (num_starts 3; 0.0270s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.082783s (num_starts 2; 0.0414s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.08279s (num_starts 2; 0.0414s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.082798s (num_starts 2; 0.0414s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.082805s (num_starts 2; 0.0414s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.082812s (num_starts 2; 0.0414s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.085962s (num_starts 37; 0.0023s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088249s (num_starts 1; 0.0882s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088258s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088261s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.090425s (num_starts 4; 0.0226s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed.: 0.090437s (num_starts 4; 0.0226s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.090455s (num_starts 4; 0.0226s/start)
decide_hoare_triple_helper;-trivial.: 0.098297s (num_starts 37; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099444s (num_starts 1; 0.0994s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099447s (num_starts 1; 0.0994s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.099455s (num_starts 1; 0.0995s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.099459s (num_starts 1; 0.0995s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100607s (num_starts 1; 0.1006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100609s (num_starts 1; 0.1006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.100623s (num_starts 1; 0.1006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.100626s (num_starts 1; 0.1006s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.10083s (num_starts 3; 0.0336s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100902s (num_starts 2; 0.0505s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100914s (num_starts 2; 0.0505s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102335s (num_starts 3; 0.0341s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102347s (num_starts 3; 0.0341s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.103897s (num_starts 4; 0.0260s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.105036s (num_starts 2; 0.0525s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.105048s (num_starts 2; 0.0525s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.10512s (num_starts 2; 0.0526s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.112657s (num_starts 6; 0.0188s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.112733s (num_starts 3; 0.0376s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.11535s (num_starts 5; 0.0231s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.115364s (num_starts 5; 0.0231s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.1213s (num_starts 8; 0.0152s/start)
ftmap_run_pointsto_analysis.: 0.121895s (num_starts 2; 0.0609s/start)
tfg_run_pointsto_analysis.: 0.122216s (num_starts 2; 0.0611s/start)
check_wfconds_on_edge.L2%31%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.123085s (num_starts 2; 0.0615s/start)
tfg_populate_structs_after_ssa_construction.: 0.137901s (num_starts 2; 0.0690s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146613s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146614s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146617s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146618s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.146626s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.14663s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.146637s (num_starts 1; 0.1466s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.147003s (num_starts 2; 0.0735s/start)
parse_z3_model.: 0.147216s (num_starts 17; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149402s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.14941s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149418s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149424s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.149441s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned.: 0.149452s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.149467s (num_starts 2; 0.0747s/start)
read_counter_examples_from_channel.: 0.150073s (num_starts 9; 0.0167s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.150813s (num_starts 4; 0.0377s/start)
ce_reconcile_sorts_and_values.: 0.151378s (num_starts 19; 0.0080s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.155342s (num_starts 260; 0.0006s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.159697s (num_starts 2; 0.0798s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16714s (num_starts 4; 0.0418s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.167191s (num_starts 4; 0.0418s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.167213s (num_starts 4; 0.0418s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.185798s (num_starts 3; 0.0619s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.185808s (num_starts 3; 0.0619s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.190451s (num_starts 7; 0.0272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.190473s (num_starts 7; 0.0272s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192617s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192621s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192627s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.192647s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed.: 0.192654s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.192671s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.19552s (num_starts 12; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.195557s (num_starts 12; 0.0163s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.197342s (num_starts 3; 0.0658s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.20004s (num_starts 2; 0.1000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.200098s (num_starts 2; 0.1000s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.201727s (num_starts 1; 0.2017s/start)
check_wfconds_on_edge.: 0.204188s (num_starts 7; 0.0292s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.21303s (num_starts 16; 0.0133s/start)
check_equivalence_proof.: 0.243006s (num_starts 1; 0.2430s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.: 0.263772s (num_starts 9; 0.0293s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.280873s (num_starts 3; 0.0936s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.283111s (num_starts 6; 0.0472s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.286661s (num_starts 5; 0.0573s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);linear.: 0.294469s (num_starts 11; 0.0268s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.334445s (num_starts 6; 0.0557s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.346658s (num_starts 3; 0.1156s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.346726s (num_starts 3; 0.1156s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.347609s (num_starts 8; 0.0435s/start)
dst_edge_composition_proves_false.: 0.358655s (num_starts 3; 0.1196s/start)
get_next_dst_edge_composition_to_correlate.: 0.36955s (num_starts 4; 0.0924s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.372385s (num_starts 17; 0.0219s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.376931s (num_starts 31; 0.0122s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.377126s (num_starts 31; 0.0122s/start)
check_preds_on_edge_compositions.: 0.380524s (num_starts 10; 0.0381s/start)
decide_hoare_triple.: 0.383034s (num_starts 5; 0.0766s/start)
counter_example_translate_on_edge_composition_helper.: 0.402481s (num_starts 292; 0.0014s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.453848s (num_starts 9; 0.0504s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.479906s (num_starts 8; 0.0600s/start)
corr_graph::add_edge().: 0.48013s (num_starts 3; 0.1600s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.48847s (num_starts 3; 0.1628s/start)
corr_graph_add_correlation.: 0.488567s (num_starts 3; 0.1629s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.491035s (num_starts 3; 0.1637s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%31%bbentry_Lfor.cond%1%bbentry).: 0.496028s (num_starts 25; 0.0198s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.507415s (num_starts 27; 0.0188s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.509129s (num_starts 8; 0.0636s/start)
decide_hoare_triple_helper;per-path;L2%31%bbentry_Lfor.cond%1%bbentry;(L2%31%bbentry_Lfor.cond%1%bbentry=>L2%31%bbentry_Lfor.cond%1%bbentry).: 0.562809s (num_starts 24; 0.0235s/start)
query:smt.: 0.711905s (num_starts 25; 0.0285s/start)
spawn_smt_query.: 0.862273s (num_starts 25; 0.0345s/start)
update_invariant_state_for_edges.: 1.13531s (num_starts 3; 0.3784s/start)
cg_check_new_cg_ec.: 1.13781s (num_starts 3; 0.3793s/start)
correl_entry_apply.: 1.13793s (num_starts 3; 0.3793s/start)
solver_provable.: 1.2395s (num_starts 31; 0.0400s/start)
expr_is_provable.: 1.25223s (num_starts 31; 0.0404s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.25278s (num_starts 31; 0.0404s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.25454s (num_starts 31; 0.0405s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.25541s (num_starts 31; 0.0405s/start)
solver_satisfiable-cache-miss.: 1.25794s (num_starts 25; 0.0503s/start)
solver_satisfiable.: 1.25813s (num_starts 32; 0.0393s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.28639s (num_starts 31; 0.0415s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.29557s (num_starts 33; 0.0393s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.29622s (num_starts 33; 0.0393s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.49629s (num_starts 33; 0.0453s/start)
prove.: 1.49656s (num_starts 33; 0.0454s/start)
prove_spawn_and_join_helper.: 1.49671s (num_starts 33; 0.0454s/start)
expandProductCFG.: 1.51825s (num_starts 4; 0.3796s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.53876s (num_starts 24; 0.0641s/start)
prove_spawn_and_join.: 1.54393s (num_starts 33; 0.0468s/start)
prove_wrapper.proof_query_not_trivial.: 1.5492s (num_starts 33; 0.0469s/start)
prove_wrapper.: 1.5648s (num_starts 63; 0.0248s/start)
decide_hoare_triple_check_ub.: 1.61521s (num_starts 61; 0.0265s/start)
decide_hoare_triple_helper.: 1.63928s (num_starts 61; 0.0269s/start)
decide_hoare_triple_with_alias_cons.: 1.69109s (num_starts 61; 0.0277s/start)
bestFirstSearch.: 2.03747s (num_starts 1; 2.0375s/start)
Time taken for equivalence check.: 2.2822s (num_starts 1; 2.2822s/start)

counters:
# of paths enumerated.: 12
# of paths expanded.: 3
# of queries to linear solver.: 15
# of smt-solver-queries.: 25
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 3
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%31%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 17
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%31%bbentry_Lfor.cond%1%bbentry.: 8
final-CG-counterexamples-total-at-L2%31%bbentry_Lfor.cond%1%bbentry.: 18
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 16
src-nodes.: 14
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.63
final-CG-time-to-total-time-ratio.: 0.80
query-time-to-total-time-ratio.: 0.30

Context stats:
exprs: count: 144173
sorts: count: 153
num_proof_queries: 33
num_proof_queries_answered_by_syntactic_check: 2
cache_stats:
m_simplify:
	----------- total:	4242
	        hit ratio:	0.954267
m_simplify_solver:
	----------- total:	630
	        hit ratio:	0.720635
m_z3_solver_substitution:
	----------- total:	172
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	176
	        hit ratio:	0
m_expr_size:
	----------- total:	5487
	        hit ratio:	0.952251
m_expr_evaluates_to_constant_visitor:
	----------- total:	8365
	        hit ratio:	0.454871

z3_solver expr_query_cache entry size: 25
	----------- total:	32
	             hits:	7
	        hit ratio:	0.21875
histogram (time taken by solver in ms):
[13.4400, 15.1979) (avg. 13.4400)        : 1
[15.1979, 17.1858) (avg. 15.6407)        : 3
[17.1858, 19.4336) (avg. 18.0763)        : 3
[19.4336, 21.9755) (avg. 19.7735)        : 2
[21.9755, 24.8498) (avg.  0.0000)        : 0
[24.8498, 28.1001) (avg. 26.9103)        : 3
[28.1001, 31.7756) (avg. 29.8985)        : 4
[31.7756, 35.9317) (avg. 33.0365)        : 2
[35.9317, 40.6315) (avg. 38.8607)        : 3
[40.6315, 45.9460) (avg. 43.6172)        : 4
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  0)                       : 0
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  0)                       : 0
[ 9, 11) (avg.  0)                       : 0
[11, 13) (avg. 11)                       : 24
[13, 15) (avg.  0)                       : 0
[15, 17) (avg.  0)                       : 0
[17, 19) (avg.  0)                       : 0
[19, 21) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 40,  58) (avg.  40)                    : 1
[ 58,  75) (avg.   0)                    : 0
[ 75,  92) (avg.   0)                    : 0
[ 92, 109) (avg.   0)                    : 0
[109, 126) (avg.   0)                    : 0
[126, 144) (avg. 143)                    : 3
[144, 161) (avg. 151)                    : 10
[161, 178) (avg. 170)                    : 5
[178, 195) (avg. 184)                    : 5
[195, 212) (avg. 202)                    : 1
Top 10 highest time taking queries:
1. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%31%bbentry_Lfor.cond%1%bbentry.cond.0
2. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%31%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%31%bbentry_Lfor.con.0
3. [0.044s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%31%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
4. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%31%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%31%bbe.0
5. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
6. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.037s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
8. [0.034s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.032s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
10. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%31%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0

<MSG>0:24 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 132 time spent: 0:0:0 [0.003771s total; 0.000029 per start]
tfg_computeWP: num_starts 247 time spent: 0:0:0 [0.030144s total; 0.000122 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1050 time spent: 0:0:0 [0.001976s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1243 time spent: 0:0:0 [0.002148s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 515 time spent: 0:0:0 [0.000984s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.072608s total; 0.003821 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.433118s total; 0.072186 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 302 time spent: 0:0:0 [0.389858s total; 0.001291 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 60 time spent: 0:0:0 [0.201980s total; 0.003366 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 252 time spent: 0:0:0 [0.351068s total; 0.001393 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1046 time spent: 0:0:0 [0.371561s total; 0.000355 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 252 time spent: 0:0:0 [0.008532s total; 0.000034 per start]
tfg_graph_get_vars_written_on_edge: num_starts 252 time spent: 0:0:0 [0.005895s total; 0.000023 per start]
cg_with_rank_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.059535s total; 0.001860 per start]
graph_with_ce_add_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.000469s total; 0.000021 per start]
graph_with_guessing_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.058879s total; 0.001840 per start]
point_set_add_point_using_CE: num_starts 120 time spent: 0:0:0 [0.015751s total; 0.000131 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 120 time spent: 0:0:0 [0.016065s total; 0.000134 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.053139s total; 0.002952 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.036634s total; 0.002035 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1932 time spent: 0:0:0 [0.018084s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 240 time spent: 0:0:0 [0.007190s total; 0.000030 per start]
expr_simplify_solver: num_starts 675 time spent: 0:0:0 [0.047597s total; 0.000071 per start]
expr_simplify_syntactic: num_starts 675 time spent: 0:0:0 [0.021304s total; 0.000032 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010762s total; 0.002691 per start]
expr_simplify_using_lhs_set_helper: num_starts 326 time spent: 0:0:0 [0.185715s total; 0.000570 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1395 time spent: 0:0:0 [0.184041s total; 0.000132 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 620 time spent: 0:0:0 [0.002812s total; 0.000005 per start]
expr_simplify_eq: num_starts 106 time spent: 0:0:0 [0.001365s total; 0.000013 per start]
expr_simplify_or: num_starts 24 time spent: 0:0:0 [0.000030s total; 0.000001 per start]
expr_simplify_and: num_starts 59 time spent: 0:0:0 [0.000350s total; 0.000006 per start]
expr_simplify_not: num_starts 20 time spent: 0:0:0 [0.000068s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 209 time spent: 0:0:0 [0.004886s total; 0.000023 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010651s total; 0.002663 per start]
get_arithmetic_addsub_atoms: num_starts 891 time spent: 0:0:0 [0.000673s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 266 time spent: 0:0:0 [0.002966s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 633 time spent: 0:0:0 [0.000449s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4596 time spent: 0:0:0 [0.187624s total; 0.000041 per start]
expr_do_simplify_helper_cache: num_starts 4596 time spent: 0:0:0 [0.004212s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 861 time spent: 0:0:0 [0.378557s total; 0.000440 per start]
array_constant_equals: num_starts 349 time spent: 0:0:0 [0.000625s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 37 time spent: 0:0:0 [0.085900s total; 0.002322 per start]
alias_val_xfer_and_meet: num_starts 37 time spent: 0:0:0 [0.053948s total; 0.001458 per start]
get_sprel_map_from_avail_exprs: num_starts 57 time spent: 0:0:0 [0.005140s total; 0.000090 per start]
update_memlabels_for_memslot_locs: num_starts 18 time spent: 0:0:0 [0.000090s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 108 time spent: 0:0:0 [0.013677s total; 0.000127 per start]
compute_simplified_loc_exprs_for_edge: num_starts 307 time spent: 0:0:0 [0.060296s total; 0.000196 per start]
compute_locs_definitely_written_on_edge: num_starts 108 time spent: 0:0:0 [0.000177s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 33 time spent: 0:0:0 [0.006178s total; 0.000187 per start]
edge_update_memlabel_map_for_mlvars: num_starts 54 time spent: 0:0:0 [0.001013s total; 0.000019 per start]
add_new_locs_based_on_edge: num_starts 37 time spent: 0:0:0 [0.043496s total; 0.001176 per start]
expand_locset_to_include_slots_for_memmask: num_starts 66 time spent: 0:0:0 [0.000154s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:30 [30.835002s total; 30.835002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.55s.
ftmap_run_pointsto_analysis.: 0.121895s (num_starts 2; 0.0609s/start)s.
EQ Time after pointsto analysis: 2.42849s.
EQ Time after pointsto analysis and smt_query: 0.863691s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.856828s.
Equivalence proof found. The programs are equivalent.
