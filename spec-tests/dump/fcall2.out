argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=fcall2.proof
argv[5] = --spec-iospecs=fcall2.iospecs
argv[6] = fcall2.spec
argv[7] = fcall2.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2710140
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/repos/superopt-project/superopt-tests/spec-tests/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/fcall2.spec.etfg
argv[10] = par_tmpdir/fcall2.c.bc
argv[11] = -o
argv[12] = par_tmpdir/fcall2.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000069s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000085s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.002676s total; 0.000007 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.010474s total; 0.000102 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.054781s total; 0.000532 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.004728s total; 0.002364 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000694s total; 0.000077 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.068169s total; 0.000960 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.067850s total; 0.000166 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000176s total; 0.000004 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000038s total; 0.000013 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000008s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.000965s total; 0.000018 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000022s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.004672s total; 0.002336 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000019s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000026s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.000998s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000124s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.069199s total; 0.000074 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000611s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000114s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.046836s total; 0.001801 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.034580s total; 0.001330 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001631s total; 0.000043 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000030s total; 0.000003 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002228s total; 0.000045 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.055066s total; 0.000291 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000026s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.017641s total; 0.000588 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000387s total; 0.000015 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.010059s total; 0.000402 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000170s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 0s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 3e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 5e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 1.4e-05s (num_starts 20; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 2.2e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 2.6e-05s (num_starts 32; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.3e-05s (num_starts 4; 0.0000s/start)
add_extra_node_at_start_pc.: 3.5e-05s (num_starts 2; 0.0000s/start)
tfg_get_write_memlabels.: 3.5e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.9e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 3.9e-05s (num_starts 44; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 4e-05s (num_starts 1; 0.0000s/start)
tfg_get_read_memlabels.: 4.6e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.9e-05s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.1e-05s (num_starts 8; 0.0000s/start)
graph_visit_exprs_const.const.: 6.9e-05s (num_starts 2; 0.0000s/start)
main.3.: 8.4e-05s (num_starts 1; 0.0001s/start)
get_summary_for_calling_functions.: 8.7e-05s (num_starts 1; 0.0001s/start)
compute_reachable_memlabels_map.: 9.2e-05s (num_starts 1; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 9.3e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 9.4e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 9.6e-05s (num_starts 115; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000104s (num_starts 4; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000111s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000112s (num_starts 23; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000126s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.00013s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000131s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000138s (num_starts 277; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000139s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000142s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000147s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000158s (num_starts 23; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000162s (num_starts 6; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000165s (num_starts 25; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000176s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000208s (num_starts 49; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000229s (num_starts 1; 0.0002s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000231s (num_starts 1; 0.0002s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000237s (num_starts 23; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00024s (num_starts 48; 0.0000s/start)
populate_locid2expr_map.: 0.00026s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000285s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000303s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000323s (num_starts 2; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.000357s (num_starts 1; 0.0004s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00036s (num_starts 25; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000375s (num_starts 2; 0.0002s/start)
populate_transitive_closure.: 0.000392s (num_starts 2; 0.0002s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000442s (num_starts 1; 0.0004s/start)
create_closure_matrix.: 0.000451s (num_starts 34; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000479s (num_starts 17; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.000492s (num_starts 1; 0.0005s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00052s (num_starts 143; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.00053s (num_starts 2; 0.0003s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.000531s (num_starts 1; 0.0005s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000717s (num_starts 1; 0.0007s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.00072s (num_starts 1; 0.0007s/start)
tfg_preprocess.dst.llvm.update_val.: 0.000796s (num_starts 1; 0.0008s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000804s (num_starts 2; 0.0004s/start)
expr_linear_relation_holds::visit.var.: 0.000825s (num_starts 49; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000835s (num_starts 2; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.000857s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000992s (num_starts 2; 0.0005s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001154s (num_starts 2; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001233s (num_starts 2; 0.0006s/start)
populate_dominator_and_postdominator_relations.: 0.001323s (num_starts 4; 0.0003s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001363s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.001366s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.00137s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001373s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.update_val.: 0.001377s (num_starts 1; 0.0014s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001454s (num_starts 1; 0.0015s/start)
graph_visit_exprs.: 0.001467s (num_starts 8; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.001748s (num_starts 4; 0.0004s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001861s (num_starts 25; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001868s (num_starts 26; 0.0001s/start)
compute_z3_expr.: 0.001899s (num_starts 52; 0.0000s/start)
query:convert_from_z3.: 0.001942s (num_starts 52; 0.0000s/start)
get_function_tfg_map.update_val.: 0.001996s (num_starts 1; 0.0020s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002086s (num_starts 4; 0.0005s/start)
graph_identify_back_edges.: 0.002092s (num_starts 10; 0.0002s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.002108s (num_starts 1; 0.0021s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.002111s (num_starts 1; 0.0021s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.002118s (num_starts 1; 0.0021s/start)
graph_identify_natural_loops.: 0.002119s (num_starts 10; 0.0002s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.002122s (num_starts 1; 0.0021s/start)
tfg_constructor.src.spec.opt_map.: 0.002125s (num_starts 1; 0.0021s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002154s (num_starts 1; 0.0022s/start)
tfg::populate_loc_definedness.: 0.002242s (num_starts 4; 0.0006s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.00236s (num_starts 25; 0.0001s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.002362s (num_starts 1; 0.0024s/start)
populate_branch_affecting_locs.: 0.002661s (num_starts 4; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.002774s (num_starts 34; 0.0001s/start)
find_dominators.: 0.003127s (num_starts 18; 0.0002s/start)
avail_exprs_create_submap.: 0.003441s (num_starts 75; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003835s (num_starts 404; 0.0000s/start)
query:convert_to_z3.: 0.003861s (num_starts 52; 0.0001s/start)
compute_regions.: 0.003934s (num_starts 10; 0.0004s/start)
graph_to_stream.: 0.00456s (num_starts 2; 0.0023s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.005098s (num_starts 1; 0.0051s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005584s (num_starts 26; 0.0002s/start)
tfg::tfg_preprocess.: 0.005899s (num_starts 2; 0.0029s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.006504s (num_starts 20; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006534s (num_starts 20; 0.0003s/start)
compute_lr_status_for_expr.: 0.006655s (num_starts 29; 0.0002s/start)
query:simplify-z3.: 0.007101s (num_starts 106; 0.0001s/start)
main.2.: 0.008614s (num_starts 1; 0.0086s/start)
get_function_tfg_map.opt_map.: 0.00917s (num_starts 1; 0.0092s/start)
populate_simplified_to_state.: 0.010401s (num_starts 6; 0.0017s/start)
get_tfg.: 0.011113s (num_starts 2; 0.0056s/start)
get_function_tfg_map.: 0.011173s (num_starts 2; 0.0056s/start)
populate_locs_potentially_modified_on_edge.: 0.012499s (num_starts 6; 0.0021s/start)
populate_simplified_assets.: 0.012686s (num_starts 12; 0.0011s/start)
compute_new_lr_status_on_locs.: 0.023921s (num_starts 25; 0.0010s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.025211s (num_starts 6; 0.0042s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.026568s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.027049s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.030285s (num_starts 404; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.03422s (num_starts 48; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.034622s (num_starts 26; 0.0013s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.036306s (num_starts 24; 0.0015s/start)
populate_loc_liveness.: 0.044507s (num_starts 4; 0.0111s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.068264s (num_starts 71; 0.0010s/start)
tfg_postprocess_after_pointsto_analysis.: 0.075017s (num_starts 2; 0.0375s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.078962s (num_starts 2; 0.0395s/start)
ftmap_run_pointsto_analysis.: 0.1317s (num_starts 1; 0.1317s/start)
parse_consts_db.: 5.99414s (num_starts 1; 5.9941s/start)
main.: 6.16642s (num_starts 1; 6.1664s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:19 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:19 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:19 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:19 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:19 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:19 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:19 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:19 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:20 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map: Found 1 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map created 1 possibilities in group opt_map.A...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG opt_map.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L0%0%d --> L2%5%fcallStart ending at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Adding new edge to the product-TFG opt_map.A1 for fromPC L0%0%d_L0%0%d and toPC L2%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Updating dst fcall edge using src fcall edge for toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Computing loop hoisting select expressions at toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Computing loop hoisting non-linear expressions at toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Adding node L2%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:20 : opt_map.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Adding edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : opt_map.A1: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:20 : opt_map.A1: Added the 1 propagated CEs at PC L2%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:20 : opt_map.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : opt_map.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : opt_map.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG opt_map.A1 for fromPC L0%0%d_L0%0%d and toPC L2%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Added correlation to the product-TFG opt_map.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}]
<MSG>0:20 : opt_map.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:20 : opt_map.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
<MSG>0:20 : opt_map.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:20 : opt_map.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:20 : product-TFG opt_map.A1: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : product-TFG opt_map.A1: Found 1 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : product-TFG opt_map.A1 created 1 possibilities in group opt_map.A1.B...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG opt_map.A1.B1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1.B1...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1.B1...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L2%5%fcallStart --> L2%5%fcallEnd ending at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:20 : Adding new edge to the product-TFG opt_map.A1.B1 for fromPC L2%5%fcallStart_Lif.then%2%fcallStart and toPC L2%5%fcallEnd_Lif.then%2%fcallEnd, src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Computing loop hoisting select expressions at toPC L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Computing loop hoisting non-linear expressions at toPC L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Adding node L2%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:20 : opt_map.A1.B1: Getting alloca-ptrs on edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Found no alloca-ptrs on edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Adding edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : opt_map.A1.B1: Propagated 7 out of 7 counter-examples across edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:20 : opt_map.A1.B1: Added the 7 propagated CEs at PC L2%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:20 : opt_map.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : opt_map.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : opt_map.A1.B1: Computing CG regions after the addition of the edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Done computing CG regions after the addition of the edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG opt_map.A1.B1 for fromPC L2%5%fcallStart_Lif.then%2%fcallStart and toPC L2%5%fcallEnd_Lif.then%2%fcallEnd, src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:20 : Added correlation to the product-TFG opt_map.A1.B1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map.A1.B1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}]
<MSG>0:20 : opt_map.A1.B1: Updating invariants over the newly added edges in edge composition L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A1.B1: Relaxing dst graph's memlabels for edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:20 : opt_map.A1.B1: Done relaxing dst graph's memlabels for edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:20 : opt_map.A1.B1: Checking well-formedness assertions on outgoing edges from L2%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:20 : opt_map.A1.B1: Relaxing invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:20 : opt_map.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:20 : opt_map.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:20 : opt_map.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 6 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:20 : opt_map.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:20 : opt_map.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing memlabels and invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : opt_map.A1.B1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A1.B1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A1.B1: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : product-TFG opt_map.A1.B1: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : product-TFG opt_map.A1.B1 created 1 possibilities in group opt_map.A1.B1.C...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A1.B1.C1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1.B1.C1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1.B1.C1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A1.B1.C1 for fromPC L2%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Getting alloca-ptrs on edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Found no alloca-ptrs on edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Adding edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Propagated 0 out of 9 counter-examples across edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Computing CG regions after the addition of the edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Done computing CG regions after the addition of the edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A1.B1.C1 for fromPC L2%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Added correlation to the product-TFG opt_map.A1.B1.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A1.B1.C1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:21 : opt_map.A1.B1.C1: Updating invariants over the newly added edges in edge composition L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L2%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A1.B1.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG opt_map.A1.B1.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG opt_map.A1.B1.C1 created 1 possibilities in group opt_map.A1.B1.C1.D...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1.B1.C1.D1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1.B1.C1.D1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A1.B1.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A1.B1.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Added correlation to the product-TFG opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:21 : opt_map.A1.B1.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:21 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (5 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:cvc4.ce25      2.:z3v487.ce26      3.:cvc4.ce67
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 10-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 4:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:cvc4.ce25      2.:z3v487.ce26      3.:cvc4.ce67      4.:cvc4.ce235      5.:z3v487.ce236
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 2.12s, query:smt.: 0.581445s (num_starts 35; 0.0166s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.52879s (num_starts 51; 0.0300s/start)ftmap_run_pointsto_analysis.: 0.13389s (num_starts 2; 0.0669s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 3e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
prune_dst_memslots.: 5e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 6e-06s (num_starts 10; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 9e-06s (num_starts 4; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 1e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.4e-05s (num_starts 20; 0.0000s/start)
get_intersected_lr_status.: 2.1e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 2.2e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.6e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 2.8e-05s (num_starts 3; 0.0000s/start)
ce_perform_memory_fuzzing.: 3e-05s (num_starts 36; 0.0000s/start)
determinize_value_expr_map.: 3.1e-05s (num_starts 22; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3.8e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.9e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 4.8e-05s (num_starts 78; 0.0000s/start)
sp_version_relations_val_t::meet.: 5.2e-05s (num_starts 133; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 5.3e-05s (num_starts 2; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5.5e-05s (num_starts 51; 0.0000s/start)
get_lr_status_for_loc_ids.: 6.3e-05s (num_starts 21; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6.9e-05s (num_starts 51; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 7.5e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.1e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 8.5e-05s (num_starts 108; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 9.3e-05s (num_starts 4; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 9.5e-05s (num_starts 32; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000106s (num_starts 15; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000108s (num_starts 16; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000114s (num_starts 61; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000115s (num_starts 8; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000117s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.000127s (num_starts 132; 0.0000s/start)
compute_sprel_relations.: 0.000129s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000133s (num_starts 41; 0.0000s/start)
propagate_sprels.: 0.000141s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000148s (num_starts 15; 0.0000s/start)
get_sprel_map_pair.: 0.000153s (num_starts 43; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000161s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000173s (num_starts 23; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000202s (num_starts 12; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000211s (num_starts 41; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000212s (num_starts 1; 0.0002s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000228s (num_starts 10; 0.0000s/start)
populate_locid2expr_map.: 0.000228s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000235s (num_starts 17; 0.0000s/start)
removeMostPromising.: 0.000236s (num_starts 13; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.00024s (num_starts 3; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000261s (num_starts 4; 0.0001s/start)
create_closure_matrix.: 0.000283s (num_starts 45; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000295s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.0003s (num_starts 1; 0.0003s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000339s (num_starts 2; 0.0002s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000347s (num_starts 2; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000355s (num_starts 2; 0.0002s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000373s (num_starts 95; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000374s (num_starts 35; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000377s (num_starts 1; 0.0004s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000379s (num_starts 97; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.00038s (num_starts 2; 0.0002s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000393s (num_starts 17; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000396s (num_starts 84; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000403s (num_starts 1; 0.0004s/start)
set_result_and_counter_example.: 0.000431s (num_starts 35; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00045s (num_starts 6; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000453s (num_starts 2; 0.0002s/start)
proof_query_is_trivial.: 0.00047s (num_starts 51; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000488s (num_starts 1; 0.0005s/start)
tfg::collect_assumes_around_edge.: 0.00049s (num_starts 37; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.0005s (num_starts 51; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000509s (num_starts 95; 0.0000s/start)
expr_represents_llvm_undef.: 0.000532s (num_starts 140; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000551s (num_starts 21; 0.0000s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.00056s (num_starts 6; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000563s (num_starts 17; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000588s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000591s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000593s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000603s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000635s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000642s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000645s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000654s (num_starts 1; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000695s (num_starts 4; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.000715s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.00074s (num_starts 1; 0.0007s/start)
tfg_edge_composition_get_assumes.: 0.000747s (num_starts 21; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000749s (num_starts 16; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000806s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;linear;-trivial.: 0.000829s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000831s (num_starts 1; 0.0008s/start)
get_unrolled_loop_paths_from.: 0.000843s (num_starts 3; 0.0003s/start)
graph_visit_exprs.: 0.000847s (num_starts 3; 0.0003s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000857s (num_starts 49; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000885s (num_starts 4; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000889s (num_starts 29; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00089s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000892s (num_starts 1; 0.0009s/start)
compute_ssa_vars_renaming_map.: 0.000894s (num_starts 2; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000895s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.000899s (num_starts 1; 0.0009s/start)
collect_assumes_around_edge.: 0.000944s (num_starts 4; 0.0002s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000952s (num_starts 41; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000955s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000955s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000959s (num_starts 1; 0.0010s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.00096s (num_starts 34; 0.0000s/start)
identify_address_taken_local_variables.: 0.00096s (num_starts 2; 0.0005s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000978s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000982s (num_starts 3; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001008s (num_starts 6; 0.0002s/start)
compute_vars_reaching_definitions.: 0.001025s (num_starts 2; 0.0005s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.001026s (num_starts 44; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.001056s (num_starts 2; 0.0005s/start)
tfg::populate_loc_definedness.: 0.001064s (num_starts 3; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.001065s (num_starts 4; 0.0003s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.001073s (num_starts 1; 0.0011s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001113s (num_starts 18; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001122s (num_starts 44; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001142s (num_starts 18; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001218s (num_starts 35; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001228s (num_starts 2; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00123s (num_starts 2; 0.0006s/start)
ldr_decomposition.: 0.001376s (num_starts 32; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.00138s (num_starts 41; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.001407s (num_starts 41; 0.0000s/start)
populate_branch_affecting_locs.: 0.001429s (num_starts 3; 0.0005s/start)
populate_transitive_closure.: 0.001442s (num_starts 15; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001443s (num_starts 3; 0.0005s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001465s (num_starts 18; 0.0001s/start)
construct_linear_combination_exprs.: 0.001475s (num_starts 43; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.001558s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;pred-type-unknown;-trivial.: 0.001578s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001581s (num_starts 2; 0.0008s/start)
propagate_nodece_across_edge.: 0.001634s (num_starts 3; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001635s (num_starts 2; 0.0008s/start)
bv_const_ref_map2expr_map.: 0.001637s (num_starts 43; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.001639s (num_starts 2; 0.0008s/start)
generate_aliasing_constraints_from_expr.: 0.001672s (num_starts 353; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001727s (num_starts 84; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001838s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001841s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001874s (num_starts 2; 0.0009s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.001892s (num_starts 68; 0.0000s/start)
check_node_stability_after_CE_addition.: 0.001944s (num_starts 47; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002041s (num_starts 4; 0.0005s/start)
populate_locs_potentially_modified_on_edge.: 0.002042s (num_starts 3; 0.0007s/start)
tfg_suffixpath_get_expr_helper.: 0.002072s (num_starts 22; 0.0001s/start)
find_dominators.: 0.002114s (num_starts 28; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002138s (num_starts 3; 0.0007s/start)
graph_identify_back_edges.: 0.002163s (num_starts 24; 0.0001s/start)
graph_identify_natural_loops.: 0.00221s (num_starts 24; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.00245s (num_starts 112; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.002544s (num_starts 45; 0.0001s/start)
cg_src_dst_tfg_copy.: 0.002597s (num_starts 1; 0.0026s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.002707s (num_starts 1; 0.0027s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002782s (num_starts 84; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.002974s (num_starts 149; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.003199s (num_starts 4; 0.0008s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003245s (num_starts 3; 0.0011s/start)
expr_substitute_using_available_exprs_submap.: 0.003471s (num_starts 78; 0.0000s/start)
get_next_potential_correlations.: 0.00362s (num_starts 4; 0.0009s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003713s (num_starts 203; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003803s (num_starts 41; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004326s (num_starts 35; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004417s (num_starts 92; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004475s (num_starts 504; 0.0000s/start)
do_ssa_transformation.: 0.004572s (num_starts 2; 0.0023s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.004604s (num_starts 113; 0.0000s/start)
tfg::get_aliasing_constraints_for_edge.: 0.004683s (num_starts 142; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.005014s (num_starts 1; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00502s (num_starts 1; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.005024s (num_starts 1; 0.0050s/start)
compute_regions.: 0.005153s (num_starts 24; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.005645s (num_starts 2; 0.0028s/start)
ldr_decompose_and_linear_solve.: 0.005682s (num_starts 32; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005884s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005889s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.005891s (num_starts 1; 0.0059s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.006107s (num_starts 41; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.006141s (num_starts 35; 0.0002s/start)
lhs_set_sort.: 0.006151s (num_starts 41; 0.0002s/start)
bv_linear_solve.: 0.006174s (num_starts 32; 0.0002s/start)
query:bv_solve.: 0.006334s (num_starts 32; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.006469s (num_starts 2; 0.0032s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.006584s (num_starts 8; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;linear;-trivial.: 0.006939s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.006943s (num_starts 1; 0.0069s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.00697s (num_starts 35; 0.0002s/start)
collect_inductive_preds_around_path.: 0.007046s (num_starts 51; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.007061s (num_starts 75; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.007505s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007508s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007516s (num_starts 2; 0.0038s/start)
counter_example_falsifies_preds.: 0.00753s (num_starts 48; 0.0002s/start)
populate_simplified_to_state.: 0.007971s (num_starts 3; 0.0027s/start)
collect_assumes_around_path_helper.: 0.008026s (num_starts 95; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.008163s (num_starts 32; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.008175s (num_starts 1; 0.0082s/start)
counter_example_satisfies_preds.: 0.008251s (num_starts 238; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.008256s (num_starts 95; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.008532s (num_starts 75; 0.0001s/start)
avail_exprs_create_submap.: 0.008712s (num_starts 105; 0.0001s/start)
populate_simplified_assets.: 0.008811s (num_starts 6; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;linear;-trivial.: 0.008907s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.008966s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.00897s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008976s (num_starts 1; 0.0090s/start)
bvsolve_cache_query.miss1.: 0.009436s (num_starts 32; 0.0003s/start)
bvsolve_cache_query.: 0.009755s (num_starts 32; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010533s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010535s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010536s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010539s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.010541s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.010552s (num_starts 1; 0.0106s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.010742s (num_starts 26; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.010806s (num_starts 26; 0.0004s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.010866s (num_starts 3; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011324s (num_starts 1; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011333s (num_starts 1; 0.0113s/start)
get_unrolled_paths_from.: 0.011478s (num_starts 25; 0.0005s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.011525s (num_starts 434; 0.0000s/start)
graph_to_stream.: 0.011719s (num_starts 4; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;outgoing_edges_cover_all_possibilities..: 0.01179s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.011802s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.011947s (num_starts 25; 0.0005s/start)
solve_for_bv_points.: 0.012081s (num_starts 32; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01247s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012474s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.012478s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012521s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012522s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.012524s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;-dst-edgecond-implies-src-edgecond.: 0.012527s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012552s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012554s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012621s (num_starts 1; 0.0126s/start)
collect_aliasing_constraints_around_path_helper.: 0.012624s (num_starts 135; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012624s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012628s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012632s (num_starts 1; 0.0126s/start)
collect_aliasing_constraints_around_path.: 0.012965s (num_starts 83; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013022s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013025s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013029s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013033s (num_starts 1; 0.0130s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.01321s (num_starts 1; 0.0132s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.013393s (num_starts 2; 0.0067s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.013397s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;linear.: 0.013399s (num_starts 2; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.013402s (num_starts 3; 0.0045s/start)
predicate_canonicalized.: 0.013545s (num_starts 43; 0.0003s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.013625s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014149s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014151s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.014154s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014243s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014248s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01425s (num_starts 1; 0.0143s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.014253s (num_starts 1; 0.0143s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;-dst-edgecond-implies-src-edgecond.: 0.014257s (num_starts 1; 0.0143s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014272s (num_starts 1; 0.0143s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.014818s (num_starts 32; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.015017s (num_starts 2; 0.0075s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.015093s (num_starts 2; 0.0075s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.015099s (num_starts 2; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.015123s (num_starts 2; 0.0076s/start)
counter_example_evaluate_preds.: 0.01517s (num_starts 286; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;pred-type-unknown;-trivial.: 0.015624s (num_starts 4; 0.0039s/start)
compute_expr_eqclasses_at_pc.: 0.016111s (num_starts 2; 0.0081s/start)
query:convert_from_z3.: 0.016563s (num_starts 243; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.016587s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.016665s (num_starts 4; 0.0042s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017024s (num_starts 35; 0.0005s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.01719s (num_starts 6; 0.0029s/start)
graph_ec_apply_trans_funs_helper.0.: 0.01737s (num_starts 214; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.01752s (num_starts 2; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017525s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.017531s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017535s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.017539s (num_starts 1; 0.0175s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.017826s (num_starts 144; 0.0001s/start)
check_wfconds_on_edge.L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd.: 0.018566s (num_starts 2; 0.0093s/start)
graph_ec_apply_trans_funs_helper.: 0.018706s (num_starts 220; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.018848s (num_starts 3; 0.0063s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart.: 0.019074s (num_starts 2; 0.0095s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.019102s (num_starts 220; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.019383s (num_starts 216; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.019671s (num_starts 51; 0.0004s/start)
computeWP_for_pred_across_ec.: 0.019923s (num_starts 216; 0.0001s/start)
cg_add_node.: 0.020099s (num_starts 4; 0.0050s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.020164s (num_starts 2; 0.0101s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.021023s (num_starts 75; 0.0003s/start)
put_smtlib_string_in_file.: 0.021971s (num_starts 70; 0.0003s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.022224s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023018s (num_starts 1; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02302s (num_starts 1; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.023024s (num_starts 1; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;pred-type-unknown.: 0.023032s (num_starts 1; 0.0230s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.023058s (num_starts 504; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023848s (num_starts 2; 0.0119s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.024047s (num_starts 588; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.024764s (num_starts 4; 0.0062s/start)
query:convert_to_z3.: 0.024845s (num_starts 243; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025633s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025639s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.025673s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.025678s (num_starts 2; 0.0128s/start)
create_new_corr_graph_edge.new_node.: 0.026049s (num_starts 3; 0.0087s/start)
create_new_corr_graph_edge.: 0.026637s (num_starts 4; 0.0067s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026813s (num_starts 2; 0.0134s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.028163s (num_starts 504; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.028441s (num_starts 4; 0.0071s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.029837s (num_starts 38; 0.0008s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.030083s (num_starts 38; 0.0008s/start)
gen_pred_from_coeff_row.simplify.: 0.030262s (num_starts 43; 0.0007s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.031268s (num_starts 22; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.03142s (num_starts 4; 0.0079s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03171s (num_starts 1; 0.0317s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031713s (num_starts 1; 0.0317s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031719s (num_starts 1; 0.0317s/start)
populate_loc_liveness.: 0.036318s (num_starts 3; 0.0121s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038097s (num_starts 3; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03826s (num_starts 1; 0.0383s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038261s (num_starts 1; 0.0383s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.038264s (num_starts 1; 0.0383s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;abstract-memlabel-asserts-houdini-guess.: 0.03827s (num_starts 1; 0.0383s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.038464s (num_starts 1; 0.0385s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040526s (num_starts 2; 0.0203s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04053s (num_starts 2; 0.0203s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.04058s (num_starts 2; 0.0203s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.040588s (num_starts 2; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.040702s (num_starts 2; 0.0204s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.040721s (num_starts 2; 0.0204s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.040728s (num_starts 2; 0.0204s/start)
tfg_relax_pointsto_vals_on_edge.: 0.044341s (num_starts 18; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044864s (num_starts 3; 0.0150s/start)
gen_pred_from_coeff_row.: 0.048415s (num_starts 43; 0.0011s/start)
compute_preds_for_bv_points.: 0.049256s (num_starts 12; 0.0041s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.049311s (num_starts 14; 0.0035s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.05032s (num_starts 1; 0.0503s/start)
decide_hoare_triple_helper;-trivial.: 0.050887s (num_starts 17; 0.0030s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.050965s (num_starts 41; 0.0012s/start)
tfg_postprocess_after_pointsto_analysis.: 0.051156s (num_starts 2; 0.0256s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.051569s (num_starts 6; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052404s (num_starts 2; 0.0262s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052406s (num_starts 2; 0.0262s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.052441s (num_starts 2; 0.0262s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.053055s (num_starts 4; 0.0133s/start)
query:simplify-z3.: 0.053463s (num_starts 516; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.054304s (num_starts 4; 0.0136s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.057501s (num_starts 21; 0.0027s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.057561s (num_starts 41; 0.0014s/start)
compute_lr_status_for_expr.: 0.058503s (num_starts 87; 0.0007s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.058547s (num_starts 78; 0.0008s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.05866s (num_starts 78; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059125s (num_starts 4; 0.0148s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.060014s (num_starts 2; 0.0300s/start)
compute_z3_expr.: 0.062154s (num_starts 278; 0.0002s/start)
check_wfconds_on_edge.L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.063985s (num_starts 2; 0.0320s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066771s (num_starts 3; 0.0223s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.066802s (num_starts 17; 0.0039s/start)
guarded_predicate_set_and.: 0.067895s (num_starts 41; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;linear.: 0.068091s (num_starts 6; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068609s (num_starts 1; 0.0686s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068617s (num_starts 1; 0.0686s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068621s (num_starts 1; 0.0686s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.068631s (num_starts 1; 0.0686s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;false-predicate.: 0.068634s (num_starts 1; 0.0686s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.068641s (num_starts 1; 0.0686s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069244s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069245s (num_starts 1; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.06925s (num_starts 1; 0.0693s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;dst_edge_composition_proves_false.: 0.069254s (num_starts 1; 0.0693s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.070047s (num_starts 12; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073651s (num_starts 1; 0.0737s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073655s (num_starts 1; 0.0737s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073656s (num_starts 1; 0.0737s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.073666s (num_starts 1; 0.0737s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;dst_edge_composition_proves_false.: 0.07367s (num_starts 1; 0.0737s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.073676s (num_starts 1; 0.0737s/start)
parse_z3_model.: 0.074087s (num_starts 13; 0.0057s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.07708s (num_starts 17; 0.0045s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.077997s (num_starts 66; 0.0012s/start)
evaluate_function_call.: 0.081607s (num_starts 16; 0.0051s/start)
apply_mask_and_overlay_array_constant.: 0.081617s (num_starts 66; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;pred-type-unknown.: 0.082467s (num_starts 7; 0.0118s/start)
compute_new_lr_status_on_locs.: 0.083453s (num_starts 35; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085628s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085634s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085637s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.085647s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;false-predicate.: 0.085649s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.085657s (num_starts 1; 0.0857s/start)
parse_cvc4_model.: 0.085752s (num_starts 13; 0.0066s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086119s (num_starts 2; 0.0431s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.091866s (num_starts 4; 0.0230s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.101072s (num_starts 47; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.109392s (num_starts 1; 0.1094s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.109395s (num_starts 1; 0.1094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.109397s (num_starts 1; 0.1094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.109404s (num_starts 1; 0.1094s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;dst_edge_composition_proves_false.: 0.109407s (num_starts 1; 0.1094s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.109415s (num_starts 1; 0.1094s/start)
parse_yices_model.: 0.11648s (num_starts 13; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.116957s (num_starts 1; 0.1170s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.116958s (num_starts 1; 0.1170s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.116964s (num_starts 1; 0.1170s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.116966s (num_starts 1; 0.1170s/start)
corr_graph::add_edge().: 0.121969s (num_starts 4; 0.0305s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.123631s (num_starts 2; 0.0618s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.127986s (num_starts 36; 0.0036s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.128237s (num_starts 24; 0.0053s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.1302s (num_starts 4; 0.0326s/start)
ftmap_run_pointsto_analysis.: 0.13389s (num_starts 2; 0.0669s/start)
tfg_run_pointsto_analysis.: 0.134105s (num_starts 2; 0.0671s/start)
counter_example_translate_on_edge_composition_helper.: 0.138241s (num_starts 255; 0.0005s/start)
tfg_populate_structs_after_ssa_construction.: 0.140451s (num_starts 2; 0.0702s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.146485s (num_starts 2; 0.0732s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.149572s (num_starts 4; 0.0374s/start)
corr_graph_add_correlation.: 0.149699s (num_starts 4; 0.0374s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.149773s (num_starts 4; 0.0374s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.154242s (num_starts 2; 0.0771s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.154289s (num_starts 2; 0.0771s/start)
check_wfconds_on_edge.: 0.161719s (num_starts 8; 0.0202s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186192s (num_starts 2; 0.0931s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.186231s (num_starts 2; 0.0931s/start)
check_equivalence_proof.: 0.188882s (num_starts 1; 0.1889s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.208049s (num_starts 2; 0.1040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.208065s (num_starts 2; 0.1040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.209671s (num_starts 4; 0.0524s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.211359s (num_starts 6; 0.0352s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.217334s (num_starts 3; 0.0724s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.21734s (num_starts 3; 0.0724s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.217357s (num_starts 3; 0.0725s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;pred-type-unknown.: 0.217366s (num_starts 3; 0.0725s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220532s (num_starts 3; 0.0735s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220565s (num_starts 5; 0.0441s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;pred-type-unknown.: 0.222164s (num_starts 5; 0.0444s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.225782s (num_starts 5; 0.0452s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.225794s (num_starts 5; 0.0452s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.228229s (num_starts 7; 0.0326s/start)
ce_reconcile_sorts.: 0.230372s (num_starts 39; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.232771s (num_starts 6; 0.0388s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;linear.: 0.232784s (num_starts 6; 0.0388s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.234854s (num_starts 4; 0.0587s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.234933s (num_starts 4; 0.0587s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.262164s (num_starts 1; 0.2622s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.268185s (num_starts 24; 0.0112s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.270598s (num_starts 8; 0.0338s/start)
read_counter_examples_from_channel.: 0.278834s (num_starts 13; 0.0214s/start)
check_preds_on_edge_compositions.: 0.282046s (num_starts 12; 0.0235s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.285899s (num_starts 10; 0.0286s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.293645s (num_starts 258; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.297431s (num_starts 10; 0.0297s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.303455s (num_starts 5; 0.0607s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd).: 0.310359s (num_starts 13; 0.0239s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.314308s (num_starts 14; 0.0225s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.331167s (num_starts 1; 0.3312s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.349008s (num_starts 1; 0.3490s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.369243s (num_starts 4; 0.0923s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.369312s (num_starts 4; 0.0923s/start)
decide_hoare_triple.: 0.388137s (num_starts 7; 0.0554s/start)
dst_edge_composition_proves_false.: 0.399105s (num_starts 4; 0.0998s/start)
get_next_dst_edge_composition_to_correlate.: 0.406933s (num_starts 5; 0.0814s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.527639s (num_starts 10; 0.0528s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.545075s (num_starts 16; 0.0341s/start)
query:smt.: 0.581445s (num_starts 35; 0.0166s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.669068s (num_starts 17; 0.0394s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart).: 0.684662s (num_starts 19; 0.0360s/start)
spawn_smt_query.: 0.860666s (num_starts 35; 0.0246s/start)
update_invariant_state_for_edges.: 1.14562s (num_starts 4; 0.2864s/start)
cg_check_new_cg_ec.: 1.14567s (num_starts 4; 0.2864s/start)
correl_entry_apply.: 1.14575s (num_starts 4; 0.2864s/start)
solver_provable.: 1.15973s (num_starts 41; 0.0283s/start)
expr_is_provable.: 1.17026s (num_starts 41; 0.0285s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.17092s (num_starts 41; 0.0286s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.17292s (num_starts 41; 0.0286s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.17529s (num_starts 41; 0.0287s/start)
solver_satisfiable-cache-miss.: 1.17983s (num_starts 35; 0.0337s/start)
solver_satisfiable.: 1.18005s (num_starts 42; 0.0281s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.24608s (num_starts 41; 0.0304s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.24975s (num_starts 41; 0.0305s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.25038s (num_starts 41; 0.0305s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.35582s (num_starts 41; 0.0331s/start)
prove.: 1.35605s (num_starts 41; 0.0331s/start)
prove_spawn_and_join_helper.: 1.35622s (num_starts 41; 0.0331s/start)
prove_spawn_and_join.: 1.46239s (num_starts 41; 0.0357s/start)
prove_wrapper.proof_query_not_trivial.: 1.46583s (num_starts 41; 0.0358s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.47631s (num_starts 34; 0.0434s/start)
prove_wrapper.: 1.48699s (num_starts 51; 0.0292s/start)
decide_hoare_triple_check_ub.: 1.50921s (num_starts 51; 0.0296s/start)
decide_hoare_triple_helper.: 1.52879s (num_starts 51; 0.0300s/start)
expandProductCFG.: 1.55663s (num_starts 5; 0.3113s/start)
decide_hoare_triple_with_alias_cons.: 1.65739s (num_starts 51; 0.0325s/start)
bestFirstSearch.: 1.73895s (num_starts 1; 1.7389s/start)
Time taken for equivalence check.: 1.93085s (num_starts 1; 1.9308s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 9
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 4
# of paths expanded.: 4
# of queries to linear solver.: 32
# of smt-solver-queries.: 35
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 3
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 13
smt-queries-yices-sat.: 13
smt-queries-z3-sat.: 13
total-correlation-possibilities.: 5
total-correlation-possibilities-mod-lsprels.: 5
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L2%5%fcallStart_Lif.then%2%fcallStart.: 3
final-CG-counterexamples-total-at-L2%5%fcallEnd_Lif.then%2%fcallEnd.: 9
final-CG-counterexamples-total-at-L2%5%fcallStart_Lif.then%2%fcallStart.: 7
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 12
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.30
final-CG-time-to-total-time-ratio.: 0.74
query-time-to-total-time-ratio.: 0.31

Context stats:
exprs: count: 142357
sorts: count: 156
num_proof_queries: 41
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3487
	        hit ratio:	0.949527
m_simplify_solver:
	----------- total:	877
	        hit ratio:	0.688712
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	64
	        hit ratio:	0.8125
m_z3_solver_substitution:
	----------- total:	273
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	273
	        hit ratio:	0
m_expr_size:
	----------- total:	1933
	        hit ratio:	0.826694
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	4967
	        hit ratio:	0.603785

z3_solver expr_query_cache entry size: 35
	----------- total:	42
	             hits:	7
	        hit ratio:	0.166667
histogram (time taken by solver in ms):
[ 4.4360,  5.6434) (avg.  5.2225)        : 15
[ 5.6434,  7.1795) (avg.  6.3860)        : 7
[ 7.1795,  9.1337) (avg.  0.0000)        : 0
[ 9.1337, 11.6198) (avg.  0.0000)        : 0
[11.6198, 14.7826) (avg.  0.0000)        : 0
[14.7826, 18.8063) (avg. 18.1840)        : 1
[18.8063, 23.9252) (avg.  0.0000)        : 0
[23.9252, 30.4374) (avg. 28.3375)        : 4
[30.4374, 38.7222) (avg. 32.4470)        : 2
[38.7222, 49.2620) (avg. 43.6087)        : 6
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 17,  31) (avg.  17)                    : 1
[ 31,  44) (avg.   0)                    : 0
[ 44,  58) (avg.   0)                    : 0
[ 58,  71) (avg.   0)                    : 0
[ 71,  85) (avg.   0)                    : 0
[ 85,  98) (avg.  94)                    : 4
[ 98, 112) (avg. 105)                    : 18
[112, 125) (avg. 116)                    : 8
[125, 139) (avg. 132)                    : 3
[139, 152) (avg. 142)                    : 1
Top 10 highest time taking queries:
1. [0.048s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-10-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0
4. [0.044s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.1
5. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL2%5%fcallEnd_Lif.then.0
6. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
9. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.028s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL2%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:21 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:21 : Computing equivalence for function: update_val...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:22 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:22 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.17s, query:smt.: 0.051483s (num_starts 3; 0.0172s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.109609s (num_starts 4; 0.0274s/start)ftmap_run_pointsto_analysis.: 0.014049s (num_starts 2; 0.0070s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::meet.: 1e-06s (num_starts 9; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-06s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 2e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 2e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 4; 0.0000s/start)
ce_perform_memory_fuzzing.: 3e-06s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5e-06s (num_starts 4; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 6e-06s (num_starts 3; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 7e-06s (num_starts 1; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7e-06s (num_starts 4; 0.0000s/start)
proof_query_is_trivial_helper.: 7e-06s (num_starts 4; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 9e-06s (num_starts 1; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 1.1e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 1.1e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 1.2e-05s (num_starts 2; 0.0000s/start)
lr_status_meet.: 1.2e-05s (num_starts 21; 0.0000s/start)
expr_is_hidden_reg.: 1.3e-05s (num_starts 13; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.4e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 1.5e-05s (num_starts 3; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 1.6e-05s (num_starts 7; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 1.9e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 1.9e-05s (num_starts 13; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 1.9e-05s (num_starts 3; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2e-05s (num_starts 2; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 2e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.1e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.1e-05s (num_starts 25; 0.0000s/start)
def_analysis::xfer_and_meet.: 2.5e-05s (num_starts 3; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.7e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 2.8e-05s (num_starts 3; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 2.9e-05s (num_starts 13; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.3e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_exvregs.: 3.5e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 4e-05s (num_starts 6; 0.0000s/start)
graph_with_guessing_sync_preds.: 4e-05s (num_starts 4; 0.0000s/start)
proof_query_is_trivial.: 4.1e-05s (num_starts 4; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 4.5e-05s (num_starts 7; 0.0000s/start)
set_result_and_counter_example.: 4.8e-05s (num_starts 3; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 5.7e-05s (num_starts 2; 0.0000s/start)
pth_collect_preds_using_atom_func.: 5.8e-05s (num_starts 5; 0.0000s/start)
removeMostPromising.: 5.9e-05s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 6e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_local_vars.: 6.1e-05s (num_starts 2; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 6.3e-05s (num_starts 2; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 6.7e-05s (num_starts 3; 0.0000s/start)
tfg_edge_composition_get_assumes.: 6.8e-05s (num_starts 5; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 7e-05s (num_starts 18; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 7.1e-05s (num_starts 4; 0.0000s/start)
get_sprel_map_pair_at_pc.: 7.9e-05s (num_starts 3; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 7.9e-05s (num_starts 4; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 8.4e-05s (num_starts 2; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.8e-05s (num_starts 11; 0.0000s/start)
compute_sprel_relations.: 9.1e-05s (num_starts 2; 0.0000s/start)
tfg::collect_assumes_around_edge.: 9.1e-05s (num_starts 5; 0.0000s/start)
collect_inductive_preds_around_path.: 9.4e-05s (num_starts 4; 0.0000s/start)
collect_assumes_around_edge.: 9.9e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.0001s (num_starts 2; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.000102s (num_starts 51; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000108s (num_starts 2; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000108s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000119s (num_starts 3; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000121s (num_starts 7; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000122s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000122s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000128s (num_starts 1; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000133s (num_starts 4; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000134s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000134s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000142s (num_starts 1; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000146s (num_starts 1; 0.0001s/start)
populate_branch_affecting_locs.: 0.000147s (num_starts 3; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.00015s (num_starts 3; 0.0000s/start)
populate_simplified_to_state.: 0.00015s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000153s (num_starts 1; 0.0002s/start)
identify_address_taken_local_variables.: 0.000154s (num_starts 1; 0.0002s/start)
check_node_stability_after_CE_addition.: 0.000165s (num_starts 6; 0.0000s/start)
expr_represents_llvm_undef.: 0.000173s (num_starts 29; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000178s (num_starts 16; 0.0000s/start)
counter_example_falsifies_preds.: 0.000185s (num_starts 3; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000188s (num_starts 2; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.000188s (num_starts 1; 0.0002s/start)
populate_transitive_closure.: 0.000202s (num_starts 11; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000226s (num_starts 4; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.00023s (num_starts 6; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000231s (num_starts 21; 0.0000s/start)
graph_visit_exprs.: 0.000233s (num_starts 3; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.000233s (num_starts 2; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.000239s (num_starts 2; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000244s (num_starts 3; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00025s (num_starts 5; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000253s (num_starts 3; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000253s (num_starts 11; 0.0000s/start)
tfg::get_aliasing_constraints_for_edge.: 0.000266s (num_starts 9; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000269s (num_starts 3; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000275s (num_starts 3; 0.0001s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.00028s (num_starts 1; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000289s (num_starts 4; 0.0001s/start)
populate_simplified_assets.: 0.000289s (num_starts 6; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000298s (num_starts 4; 0.0001s/start)
tfg::populate_loc_definedness.: 0.000304s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000305s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00031s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000311s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000313s (num_starts 1; 0.0003s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000314s (num_starts 8; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000315s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000327s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000328s (num_starts 1; 0.0003s/start)
find_dominators.: 0.000328s (num_starts 19; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.000332s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000334s (num_starts 1; 0.0003s/start)
lhs_set_sort.: 0.000336s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000337s (num_starts 1; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000358s (num_starts 6; 0.0001s/start)
graph_identify_back_edges.: 0.00036s (num_starts 15; 0.0000s/start)
counter_example_satisfies_preds.: 0.000382s (num_starts 18; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000384s (num_starts 6; 0.0001s/start)
graph_identify_natural_loops.: 0.000386s (num_starts 15; 0.0000s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.00041s (num_starts 5; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.000428s (num_starts 3; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.000431s (num_starts 22; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.00045s (num_starts 3; 0.0001s/start)
get_next_potential_correlations.: 0.000453s (num_starts 1; 0.0005s/start)
collect_aliasing_constraints_around_path.: 0.000474s (num_starts 14; 0.0000s/start)
collect_assumes_around_path_helper.: 0.000515s (num_starts 13; 0.0000s/start)
counter_example_evaluate_preds.: 0.000523s (num_starts 21; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000531s (num_starts 29; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.000547s (num_starts 13; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.000591s (num_starts 12; 0.0000s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000594s (num_starts 4; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.00062s (num_starts 12; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.000631s (num_starts 1; 0.0006s/start)
create_sp_version_relations_lattice_at_pc.: 0.000631s (num_starts 6; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000645s (num_starts 12; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000673s (num_starts 4; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000677s (num_starts 12; 0.0001s/start)
cg_add_node.: 0.000681s (num_starts 2; 0.0003s/start)
create_new_corr_graph_edge.: 0.000686s (num_starts 1; 0.0007s/start)
computeWP_for_pred_across_ec.: 0.000711s (num_starts 12; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000714s (num_starts 117; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000727s (num_starts 3; 0.0002s/start)
get_unrolled_paths_from.: 0.000782s (num_starts 6; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000815s (num_starts 32; 0.0000s/start)
avail_exprs_create_submap.: 0.000822s (num_starts 12; 0.0001s/start)
compute_regions.: 0.000874s (num_starts 15; 0.0001s/start)
put_smtlib_string_in_file.: 0.000877s (num_starts 6; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.000972s (num_starts 4; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.000985s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.000989s (num_starts 2; 0.0005s/start)
edge_composition_apply_trans_funs_on_pred.: 0.00102s (num_starts 4; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001033s (num_starts 6; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001104s (num_starts 6; 0.0002s/start)
compute_lr_status_for_expr.: 0.001385s (num_starts 25; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001414s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001443s (num_starts 21; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001639s (num_starts 1; 0.0016s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.00203s (num_starts 4; 0.0005s/start)
compute_new_lr_status_on_locs.: 0.002056s (num_starts 4; 0.0005s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.002936s (num_starts 6; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.00302s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003022s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.003024s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.003026s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003028s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;-trivial.: 0.003406s (num_starts 2; 0.0017s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.003685s (num_starts 3; 0.0012s/start)
query:convert_from_z3.: 0.003762s (num_starts 37; 0.0001s/start)
apply_mask_and_overlay_array_constant.: 0.003802s (num_starts 3; 0.0013s/start)
parse_z3_model.: 0.003908s (num_starts 2; 0.0020s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.003918s (num_starts 2; 0.0020s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.00392s (num_starts 124; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.004061s (num_starts 117; 0.0000s/start)
counter_example_translate_on_edge_composition_helper.: 0.004087s (num_starts 21; 0.0002s/start)
tfg_relax_pointsto_vals_on_edge.: 0.004115s (num_starts 2; 0.0021s/start)
parse_yices_model.: 0.004204s (num_starts 2; 0.0021s/start)
graph_to_stream.: 0.004265s (num_starts 4; 0.0011s/start)
check_equivalence_proof.: 0.004316s (num_starts 1; 0.0043s/start)
compute_z3_expr.: 0.004408s (num_starts 40; 0.0001s/start)
query:convert_to_z3.: 0.004683s (num_starts 37; 0.0001s/start)
populate_loc_liveness.: 0.004877s (num_starts 3; 0.0016s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.005061s (num_starts 117; 0.0000s/start)
parse_cvc4_model.: 0.00514s (num_starts 2; 0.0026s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.005301s (num_starts 2; 0.0027s/start)
corr_graph::add_edge().: 0.005718s (num_starts 1; 0.0057s/start)
tfg_postprocess_after_pointsto_analysis.: 0.006547s (num_starts 2; 0.0033s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.006593s (num_starts 1; 0.0066s/start)
corr_graph_add_correlation.: 0.006623s (num_starts 1; 0.0066s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.00664s (num_starts 1; 0.0066s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.006646s (num_starts 1; 0.0066s/start)
guarded_predicate_set_and.: 0.011607s (num_starts 3; 0.0039s/start)
query:simplify-z3.: 0.011845s (num_starts 74; 0.0002s/start)
read_counter_examples_from_channel.: 0.0136s (num_starts 2; 0.0068s/start)
ftmap_run_pointsto_analysis.: 0.014049s (num_starts 2; 0.0070s/start)
tfg_run_pointsto_analysis.: 0.014185s (num_starts 2; 0.0071s/start)
tfg_populate_structs_after_ssa_construction.: 0.015296s (num_starts 2; 0.0076s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.016776s (num_starts 3; 0.0056s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.01687s (num_starts 3; 0.0056s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.017525s (num_starts 2; 0.0088s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019455s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019461s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019465s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01947s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019474s (num_starts 1; 0.0195s/start)
ce_reconcile_sorts.: 0.021127s (num_starts 6; 0.0035s/start)
update_invariant_state_for_edges.: 0.021854s (num_starts 1; 0.0219s/start)
cg_check_new_cg_ec.: 0.02187s (num_starts 1; 0.0219s/start)
correl_entry_apply.: 0.021904s (num_starts 1; 0.0219s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.022513s (num_starts 2; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.022517s (num_starts 2; 0.0113s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.022522s (num_starts 2; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.022528s (num_starts 2; 0.0113s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.022534s (num_starts 2; 0.0113s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.022697s (num_starts 2; 0.0113s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.023325s (num_starts 2; 0.0117s/start)
check_wfconds_on_edge.: 0.023341s (num_starts 2; 0.0117s/start)
check_preds_on_edge_compositions.: 0.023437s (num_starts 3; 0.0078s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.033847s (num_starts 36; 0.0009s/start)
query:smt.: 0.051483s (num_starts 3; 0.0172s/start)
spawn_smt_query.: 0.065125s (num_starts 3; 0.0217s/start)
solver_provable.: 0.071995s (num_starts 3; 0.0240s/start)
expr_is_provable.: 0.072438s (num_starts 3; 0.0241s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.072488s (num_starts 3; 0.0242s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.072634s (num_starts 3; 0.0242s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.072707s (num_starts 3; 0.0242s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.084499s (num_starts 3; 0.0282s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.084688s (num_starts 3; 0.0282s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.084733s (num_starts 3; 0.0282s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086537s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086538s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086539s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08654s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08654s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.086546s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.08655s (num_starts 1; 0.0866s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.086553s (num_starts 1; 0.0866s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.086557s (num_starts 1; 0.0866s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.086902s (num_starts 2; 0.0435s/start)
decide_hoare_triple.: 0.087464s (num_starts 2; 0.0437s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.089036s (num_starts 3; 0.0297s/start)
prove.: 0.089053s (num_starts 3; 0.0297s/start)
prove_spawn_and_join_helper.: 0.089067s (num_starts 3; 0.0297s/start)
solver_satisfiable-cache-miss.: 0.089105s (num_starts 3; 0.0297s/start)
solver_satisfiable.: 0.089128s (num_starts 4; 0.0223s/start)
dst_edge_composition_proves_false.: 0.089753s (num_starts 1; 0.0898s/start)
get_next_dst_edge_composition_to_correlate.: 0.090204s (num_starts 2; 0.0451s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.106065s (num_starts 2; 0.0530s/start)
prove_spawn_and_join.: 0.106592s (num_starts 3; 0.0355s/start)
prove_wrapper.proof_query_not_trivial.: 0.106816s (num_starts 3; 0.0356s/start)
prove_wrapper.: 0.107384s (num_starts 4; 0.0268s/start)
decide_hoare_triple_check_ub.: 0.108628s (num_starts 4; 0.0272s/start)
decide_hoare_triple_helper.: 0.109609s (num_starts 4; 0.0274s/start)
decide_hoare_triple_with_alias_cons.: 0.109914s (num_starts 4; 0.0275s/start)
expandProductCFG.: 0.112641s (num_starts 2; 0.0563s/start)
bestFirstSearch.: 0.138818s (num_starts 1; 0.1388s/start)
Time taken for equivalence check.: 0.143402s (num_starts 1; 0.1434s/start)

counters:
# of paths enumerated.: 1
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.21
query-time-to-total-time-ratio.: 0.37

Context stats:
exprs: count: 141004
sorts: count: 156
num_proof_queries: 44
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	403
	        hit ratio:	0.925558
m_simplify_solver:
	----------- total:	104
	        hit ratio:	0.644231
m_z3_solver_substitution:
	----------- total:	37
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	37
	        hit ratio:	0
m_expr_size:
	----------- total:	269
	        hit ratio:	0.776952
m_expr_evaluates_to_constant_visitor:
	----------- total:	402
	        hit ratio:	0.554726

z3_solver expr_query_cache entry size: 3
	----------- total:	46
	             hits:	1
	        hit ratio:	0.0217391
histogram (time taken by solver in ms):
[ 3.5600,  4.4573) (avg.  3.5600)        : 1
[ 4.4573,  5.5807) (avg.  0.0000)        : 0
[ 5.5807,  6.9873) (avg.  0.0000)        : 0
[ 6.9873,  8.7485) (avg.  0.0000)        : 0
[ 8.7485, 10.9535) (avg.  0.0000)        : 0
[10.9535, 13.7143) (avg.  0.0000)        : 0
[13.7143, 17.1709) (avg. 15.1970)        : 1
[17.1709, 21.4988) (avg.  0.0000)        : 0
[21.4988, 26.9175) (avg.  0.0000)        : 0
[26.9175, 33.7020) (avg. 32.7020)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[17, 23) (avg. 17)                       : 1
[23, 28) (avg.  0)                       : 0
[28, 33) (avg.  0)                       : 0
[33, 38) (avg.  0)                       : 0
[38, 43) (avg.  0)                       : 0
[43, 49) (avg.  0)                       : 0
[49, 54) (avg.  0)                       : 0
[54, 59) (avg.  0)                       : 0
[59, 64) (avg. 59)                       : 2
[64, 69) (avg.  0)                       : 0

<MSG>0:22 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.000829s total; 0.000015 per start]
tfg_computeWP: num_starts 244 time spent: 0:0:0 [0.014481s total; 0.000059 per start]
tfg_get_simplified_to_state_for_edge: num_starts 932 time spent: 0:0:0 [0.001293s total; 0.000001 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1018 time spent: 0:0:0 [0.001371s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 628 time spent: 0:0:0 [0.000894s total; 0.000001 per start]
add_nodeces_at_pc_and_propagate: num_starts 44 time spent: 0:0:0 [0.093765s total; 0.002131 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.119960s total; 0.011996 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 194 time spent: 0:0:0 [0.129825s total; 0.000669 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 48 time spent: 0:0:0 [0.017598s total; 0.000367 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 185 time spent: 0:0:0 [0.115787s total; 0.000626 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 795 time spent: 0:0:0 [0.122536s total; 0.000154 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 191 time spent: 0:0:0 [0.006821s total; 0.000036 per start]
tfg_graph_get_vars_written_on_edge: num_starts 185 time spent: 0:0:0 [0.002854s total; 0.000015 per start]
cg_with_rank_add_CE_at_pc: num_starts 53 time spent: 0:0:0 [0.091905s total; 0.001734 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000382s total; 0.000015 per start]
graph_with_guessing_add_CE_at_pc: num_starts 53 time spent: 0:0:0 [0.091828s total; 0.001733 per start]
point_set_add_point_using_CE: num_starts 112 time spent: 0:0:0 [0.018544s total; 0.000166 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 112 time spent: 0:0:0 [0.018814s total; 0.000168 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 38 time spent: 0:0:0 [0.089062s total; 0.002344 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 38 time spent: 0:0:0 [0.069669s total; 0.001833 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1554 time spent: 0:0:0 [0.018584s total; 0.000012 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 196 time spent: 0:0:0 [0.010491s total; 0.000054 per start]
expr_simplify_solver: num_starts 1032 time spent: 0:0:0 [0.112888s total; 0.000109 per start]
expr_simplify_syntactic: num_starts 1032 time spent: 0:0:0 [0.238156s total; 0.000231 per start]
expr_simplify_select_on_store: num_starts 53 time spent: 0:0:0 [0.140972s total; 0.002660 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001406s total; 0.000094 per start]
expr_simplify_using_lhs_set_helper: num_starts 337 time spent: 0:0:0 [0.375791s total; 0.001115 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2268 time spent: 0:0:0 [0.373603s total; 0.000165 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1429 time spent: 0:0:0 [0.005244s total; 0.000004 per start]
expr_simplify_eq: num_starts 274 time spent: 0:0:0 [0.003036s total; 0.000011 per start]
expr_simplify_or: num_starts 18 time spent: 0:0:0 [0.000026s total; 0.000001 per start]
expr_simplify_and: num_starts 86 time spent: 0:0:0 [0.000464s total; 0.000005 per start]
expr_simplify_not: num_starts 23 time spent: 0:0:0 [0.000093s total; 0.000004 per start]
expr_simplify_implies: num_starts 15 time spent: 0:0:0 [0.000127s total; 0.000008 per start]
expr_simplify_ite: num_starts 29 time spent: 0:0:0 [0.001318s total; 0.000045 per start]
canonicalize_expr_tree: num_starts 340 time spent: 0:0:0 [0.014089s total; 0.000041 per start]
expr_simplify_memalloc_using_memlabel: num_starts 14 time spent: 0:0:0 [0.000044s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 56 time spent: 0:0:0 [0.139526s total; 0.002492 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000081s total; 0.000081 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000073s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000008s total; 0.000008 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000005s total; 0.000005 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 1682 time spent: 0:0:0 [0.001100s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.004247s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 281 time spent: 0:0:0 [0.000269s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4091 time spent: 0:0:0 [0.339110s total; 0.000083 per start]
expr_do_simplify_helper_cache: num_starts 4091 time spent: 0:0:0 [0.003239s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 6 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 6 time spent: 0:0:0 [0.000022s total; 0.000004 per start]
evaluate_expr_and_check_bounds: num_starts 596 time spent: 0:0:0 [0.132890s total; 0.000223 per start]
array_constant_equals: num_starts 8772 time spent: 0:0:0 [0.010002s total; 0.000001 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.082360s total; 0.004335 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.070682s total; 0.003720 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.001304s total; 0.000037 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000038s total; 0.000003 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.008107s total; 0.000104 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.093342s total; 0.000444 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000107s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.020333s total; 0.000508 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001408s total; 0.000036 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.012863s total; 0.000677 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000222s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:27 [27.426724s total; 27.426724 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.31s.
ftmap_run_pointsto_analysis.: 0.014049s (num_starts 2; 0.0070s/start)s.
EQ Time after pointsto analysis: 2.29375s.
EQ Time after pointsto analysis and smt_query: 2.18637s.
EQ Time after pointsto analysis and smt_query and bv-solve: 2.18637s.
Equivalence proof found. The programs are equivalent.
