argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=fcall2.proof
argv[5] = --spec-iospecs=fcall2.iospecs
argv[6] = fcall2.spec
argv[7] = fcall2.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2889906
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/fcall2.spec.etfg
argv[10] = par_tmpdir/fcall2.c.bc
argv[11] = -o
argv[12] = par_tmpdir/fcall2.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000064s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000083s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.002737s total; 0.000007 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.010853s total; 0.000105 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.055434s total; 0.000538 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.005151s total; 0.002576 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000703s total; 0.000078 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.069253s total; 0.000975 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.068910s total; 0.000169 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000187s total; 0.000004 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000045s total; 0.000015 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000009s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.000956s total; 0.000018 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000022s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.005086s total; 0.002543 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000020s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000030s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.001065s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000137s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.070215s total; 0.000075 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000545s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000117s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.048543s total; 0.001867 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.035752s total; 0.001375 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001702s total; 0.000045 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000031s total; 0.000003 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002277s total; 0.000046 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.055629s total; 0.000294 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000030s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.017527s total; 0.000584 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000384s total; 0.000015 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.010628s total; 0.000425 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000158s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 3e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 6e-06s (num_starts 1; 0.0000s/start)
lr_status_meet.: 1e-05s (num_starts 20; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.2e-05s (num_starts 4; 0.0000s/start)
get_intersected_lr_status.: 1.9e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 2.5e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 2.9e-05s (num_starts 4; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.1e-05s (num_starts 1; 0.0000s/start)
tfg_get_write_memlabels.: 3.6e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 3.9e-05s (num_starts 2; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 4e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4.1e-05s (num_starts 32; 0.0000s/start)
context_constructor.solver.: 4.2e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 4.2e-05s (num_starts 44; 0.0000s/start)
tfg_get_read_memlabels.: 4.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.2e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.2e-05s (num_starts 8; 0.0000s/start)
graph_visit_exprs_const.const.: 7.1e-05s (num_starts 2; 0.0000s/start)
main.3.: 7.7e-05s (num_starts 1; 0.0001s/start)
get_summary_for_calling_functions.: 9e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 9.5e-05s (num_starts 4; 0.0000s/start)
graph_locs_add_all_specvars.: 9.6e-05s (num_starts 2; 0.0000s/start)
compute_reachable_memlabels_map.: 9.7e-05s (num_starts 1; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 9.7e-05s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 9.9e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 0.0001s (num_starts 115; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000128s (num_starts 23; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000129s (num_starts 277; 0.0000s/start)
compute_sprel_relations.: 0.000132s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000133s (num_starts 1; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000133s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000141s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000144s (num_starts 6; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000157s (num_starts 1; 0.0002s/start)
graph_locs_add_all_exvregs.: 0.000157s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000164s (num_starts 25; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000165s (num_starts 23; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000183s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000225s (num_starts 49; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000231s (num_starts 48; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000253s (num_starts 1; 0.0003s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000256s (num_starts 1; 0.0003s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000257s (num_starts 23; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000257s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000269s (num_starts 4; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000321s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000336s (num_starts 2; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000356s (num_starts 25; 0.0000s/start)
populate_transitive_closure.: 0.000357s (num_starts 2; 0.0002s/start)
canonicalize_llvm_nextpcs.: 0.000436s (num_starts 2; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.000437s (num_starts 1; 0.0004s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.000464s (num_starts 1; 0.0005s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000484s (num_starts 1; 0.0005s/start)
create_closure_matrix.: 0.00049s (num_starts 34; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000509s (num_starts 17; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.000525s (num_starts 1; 0.0005s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000542s (num_starts 143; 0.0000s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.000548s (num_starts 1; 0.0005s/start)
populate_exit_return_values_for_llvm_method.: 0.000634s (num_starts 2; 0.0003s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000718s (num_starts 1; 0.0007s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.000757s (num_starts 1; 0.0008s/start)
tfg::collect_assumes_around_edge.: 0.000835s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00084s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000859s (num_starts 2; 0.0004s/start)
expr_linear_relation_holds::visit.var.: 0.000868s (num_starts 49; 0.0000s/start)
tfg_preprocess.dst.llvm.update_val.: 0.000958s (num_starts 1; 0.0010s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001035s (num_starts 2; 0.0005s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001199s (num_starts 2; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001277s (num_starts 2; 0.0006s/start)
populate_dominator_and_postdominator_relations.: 0.001408s (num_starts 4; 0.0004s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001506s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.001509s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.001513s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001517s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.: 0.001521s (num_starts 1; 0.0015s/start)
graph_visit_exprs.: 0.001596s (num_starts 8; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001628s (num_starts 1; 0.0016s/start)
tfg::populate_loc_definedness.before_solve.: 0.001655s (num_starts 4; 0.0004s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001875s (num_starts 26; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001922s (num_starts 25; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001974s (num_starts 4; 0.0005s/start)
compute_z3_expr.: 0.001993s (num_starts 52; 0.0000s/start)
query:convert_from_z3.: 0.002032s (num_starts 52; 0.0000s/start)
graph_identify_back_edges.: 0.002097s (num_starts 10; 0.0002s/start)
tfg::populate_loc_definedness.: 0.00211s (num_starts 4; 0.0005s/start)
graph_identify_natural_loops.: 0.002123s (num_starts 10; 0.0002s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.002192s (num_starts 1; 0.0022s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.002196s (num_starts 1; 0.0022s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.002204s (num_starts 1; 0.0022s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.002209s (num_starts 1; 0.0022s/start)
tfg_constructor.src.spec.opt_map.: 0.002213s (num_starts 1; 0.0022s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002352s (num_starts 1; 0.0024s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.00237s (num_starts 25; 0.0001s/start)
get_function_tfg_map.update_val.: 0.002377s (num_starts 1; 0.0024s/start)
populate_branch_affecting_locs.: 0.002636s (num_starts 4; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.003043s (num_starts 34; 0.0001s/start)
find_dominators.: 0.003211s (num_starts 18; 0.0002s/start)
avail_exprs_create_submap.: 0.003469s (num_starts 75; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003849s (num_starts 404; 0.0000s/start)
compute_regions.: 0.003968s (num_starts 10; 0.0004s/start)
query:convert_to_z3.: 0.004022s (num_starts 52; 0.0001s/start)
graph_to_stream.: 0.005031s (num_starts 2; 0.0025s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.005277s (num_starts 1; 0.0053s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005716s (num_starts 26; 0.0002s/start)
tfg::tfg_preprocess.: 0.00624s (num_starts 2; 0.0031s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.006788s (num_starts 20; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006819s (num_starts 20; 0.0003s/start)
compute_lr_status_for_expr.: 0.006918s (num_starts 29; 0.0002s/start)
query:simplify-z3.: 0.007418s (num_starts 106; 0.0001s/start)
main.2.: 0.009528s (num_starts 1; 0.0095s/start)
get_function_tfg_map.opt_map.: 0.009692s (num_starts 1; 0.0097s/start)
populate_simplified_to_state.: 0.010569s (num_starts 6; 0.0018s/start)
get_tfg.: 0.012012s (num_starts 2; 0.0060s/start)
get_function_tfg_map.: 0.012074s (num_starts 2; 0.0060s/start)
populate_locs_potentially_modified_on_edge.: 0.012567s (num_starts 6; 0.0021s/start)
populate_simplified_assets.: 0.012805s (num_starts 12; 0.0011s/start)
compute_new_lr_status_on_locs.: 0.024516s (num_starts 25; 0.0010s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.025399s (num_starts 6; 0.0042s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.027645s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.028109s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.031395s (num_starts 404; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.034333s (num_starts 48; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.035801s (num_starts 26; 0.0014s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.037784s (num_starts 24; 0.0016s/start)
populate_loc_liveness.: 0.044347s (num_starts 4; 0.0111s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.069337s (num_starts 71; 0.0010s/start)
tfg_postprocess_after_pointsto_analysis.: 0.074705s (num_starts 2; 0.0374s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.078772s (num_starts 2; 0.0394s/start)
ftmap_run_pointsto_analysis.: 0.133593s (num_starts 1; 0.1336s/start)
parse_consts_db.: 6.08468s (num_starts 1; 6.0847s/start)
main.: 6.2599s (num_starts 1; 6.2599s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:20 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map: Found 1 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map created 1 possibilities in group opt_map.A...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG opt_map.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L0%0%d --> L2%5%fcallStart ending at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Adding new edge to the product-TFG opt_map.A1 for fromPC L0%0%d_L0%0%d and toPC L2%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Updating dst fcall edge using src fcall edge for toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Computing loop hoisting select expressions at toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Computing loop hoisting non-linear expressions at toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Adding node L2%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:20 : opt_map.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Adding edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : opt_map.A1: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:20 : opt_map.A1: Added the 1 propagated CEs at PC L2%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:20 : opt_map.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : opt_map.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : opt_map.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG opt_map.A1 for fromPC L0%0%d_L0%0%d and toPC L2%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Added correlation to the product-TFG opt_map.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}]
<MSG>0:20 : opt_map.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:20 : opt_map.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A1: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:21 : opt_map.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
<MSG>0:21 : opt_map.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:21 : opt_map.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : opt_map.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:21 : opt_map.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : opt_map.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A1: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : product-TFG opt_map.A1: Found 1 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : product-TFG opt_map.A1 created 1 possibilities in group opt_map.A1.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A1.B1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1.B1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1.B1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%5%fcallStart --> L2%5%fcallEnd ending at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A1.B1 for fromPC L2%5%fcallStart_Lif.then%2%fcallStart and toPC L2%5%fcallEnd_Lif.then%2%fcallEnd, src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Computing loop hoisting select expressions at toPC L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Computing loop hoisting non-linear expressions at toPC L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Adding node L2%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:21 : opt_map.A1.B1: Getting alloca-ptrs on edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Found no alloca-ptrs on edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Adding edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A1.B1: Propagated 8 out of 8 counter-examples across edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : opt_map.A1.B1: Added the 8 propagated CEs at PC L2%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:21 : opt_map.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A1.B1: Computing CG regions after the addition of the edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done computing CG regions after the addition of the edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A1.B1 for fromPC L2%5%fcallStart_Lif.then%2%fcallStart and toPC L2%5%fcallEnd_Lif.then%2%fcallEnd, src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : Added correlation to the product-TFG opt_map.A1.B1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A1.B1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}]
<MSG>0:21 : opt_map.A1.B1: Updating invariants over the newly added edges in edge composition L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing dst graph's memlabels for edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing dst graph's memlabels for edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:21 : opt_map.A1.B1: Checking well-formedness assertions on outgoing edges from L2%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 5 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:21 : opt_map.A1.B1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:21 : opt_map.A1.B1: Done relaxing memlabels and invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : opt_map.A1.B1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A1.B1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG opt_map.A1.B1: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:22 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:22 : product-TFG opt_map.A1.B1: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:22 : product-TFG opt_map.A1.B1 created 1 possibilities in group opt_map.A1.B1.C...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG opt_map.A1.B1.C1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1.B1.C1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1.B1.C1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:22 : Adding new edge to the product-TFG opt_map.A1.B1.C1 for fromPC L2%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Getting alloca-ptrs on edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Found no alloca-ptrs on edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Adding edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Propagated 0 out of 8 counter-examples across edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Computing CG regions after the addition of the edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Done computing CG regions after the addition of the edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG opt_map.A1.B1.C1 for fromPC L2%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:22 : Added correlation to the product-TFG opt_map.A1.B1.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map.A1.B1.C1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:22 : opt_map.A1.B1.C1: Updating invariants over the newly added edges in edge composition L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L2%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG opt_map.A1.B1.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map.A1.B1.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map.A1.B1.C1 created 1 possibilities in group opt_map.A1.B1.C1.D...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A1.B1.C1.D1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A1.B1.C1.D1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Adding new edge to the product-TFG opt_map.A1.B1.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG opt_map.A1.B1.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Added correlation to the product-TFG opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:22 : opt_map.A1.B1.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : opt_map.A1.B1.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:22 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (5 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce25      2.:z3v487.ce26      3.:z3v487.ce67      4.:cvc4.ce68
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 10-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 4:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce25      2.:z3v487.ce26      3.:z3v487.ce67      4.:cvc4.ce68
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 2.35s, query:smt.: 0.584912s (num_starts 35; 0.0167s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.6094s (num_starts 51; 0.0316s/start)ftmap_run_pointsto_analysis.: 0.14586s (num_starts 2; 0.0729s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 1e-06s (num_starts 2; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 3e-06s (num_starts 3; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 5e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 7e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 8e-06s (num_starts 10; 0.0000s/start)
prune_dst_memslots.: 8e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1e-05s (num_starts 4; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 1.1e-05s (num_starts 1; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.3e-05s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.6e-05s (num_starts 20; 0.0000s/start)
remove_complex_bv_exprs.: 2.7e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 3.1e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.3e-05s (num_starts 4; 0.0000s/start)
ce_perform_memory_fuzzing.: 3.4e-05s (num_starts 36; 0.0000s/start)
get_intersected_lr_status.: 3.4e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 3.8e-05s (num_starts 22; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3.8e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 5.6e-05s (num_starts 78; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5.6e-05s (num_starts 51; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 6.7e-05s (num_starts 2; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 6.8e-05s (num_starts 3; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.7e-05s (num_starts 21; 0.0000s/start)
collect_dst_to_src_submap_preds.: 8e-05s (num_starts 51; 0.0000s/start)
sp_version_relations_val_t::meet.: 8.3e-05s (num_starts 133; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.7e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 9.9e-05s (num_starts 108; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000106s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000116s (num_starts 16; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000117s (num_starts 8; 0.0000s/start)
proof_query_is_trivial_helper.: 0.00012s (num_starts 61; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000123s (num_starts 33; 0.0000s/start)
expr_is_callee_save_const.: 0.000133s (num_starts 132; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000137s (num_starts 41; 0.0000s/start)
compute_sprel_relations.: 0.000147s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000156s (num_starts 2; 0.0001s/start)
get_sprel_map_pair.: 0.000162s (num_starts 43; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000167s (num_starts 15; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000183s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.00019s (num_starts 23; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000206s (num_starts 1; 0.0002s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000209s (num_starts 12; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000224s (num_starts 41; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000237s (num_starts 15; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.00024s (num_starts 10; 0.0000s/start)
removeMostPromising.: 0.000251s (num_starts 13; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000256s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.000261s (num_starts 3; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000283s (num_starts 17; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000309s (num_starts 1; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000314s (num_starts 4; 0.0001s/start)
populate_locid2expr_map.: 0.000317s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000344s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00038s (num_starts 1; 0.0004s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000384s (num_starts 95; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000388s (num_starts 2; 0.0002s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000392s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000392s (num_starts 35; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000405s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000405s (num_starts 1; 0.0004s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000428s (num_starts 84; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000437s (num_starts 6; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000461s (num_starts 97; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000464s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000464s (num_starts 1; 0.0005s/start)
populate_dominator_and_postdominator_relations.: 0.000478s (num_starts 2; 0.0002s/start)
set_result_and_counter_example.: 0.000482s (num_starts 35; 0.0000s/start)
proof_query_is_trivial.: 0.0005s (num_starts 51; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000514s (num_starts 37; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000524s (num_starts 95; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000529s (num_starts 51; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000565s (num_starts 17; 0.0000s/start)
expr_represents_llvm_undef.: 0.00061s (num_starts 140; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000634s (num_starts 1; 0.0006s/start)
graph_locs_add_all_specvars.: 0.000645s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000649s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000652s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000652s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000654s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000656s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000664s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000666s (num_starts 1; 0.0007s/start)
tfg::populate_loc_definedness.before_solve.: 0.000819s (num_starts 3; 0.0003s/start)
pth_collect_preds_using_atom_func.: 0.00082s (num_starts 21; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000851s (num_starts 4; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000867s (num_starts 16; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000874s (num_starts 4; 0.0002s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000881s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000889s (num_starts 1; 0.0009s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000965s (num_starts 6; 0.0002s/start)
identify_address_taken_local_variables.: 0.000967s (num_starts 2; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;linear;-trivial.: 0.000971s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000973s (num_starts 1; 0.0010s/start)
get_unrolled_loop_paths_from.: 0.000984s (num_starts 3; 0.0003s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000997s (num_starts 6; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001022s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001024s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001029s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.001033s (num_starts 1; 0.0010s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.001057s (num_starts 44; 0.0000s/start)
collect_assumes_around_edge.: 0.001069s (num_starts 4; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001085s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001086s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001089s (num_starts 1; 0.0011s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001102s (num_starts 3; 0.0004s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001105s (num_starts 50; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.001129s (num_starts 21; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001152s (num_starts 44; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001168s (num_starts 35; 0.0000s/start)
graph_visit_exprs.: 0.001168s (num_starts 3; 0.0004s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001181s (num_starts 41; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001183s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001191s (num_starts 3; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.001215s (num_starts 4; 0.0003s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.001215s (num_starts 1; 0.0012s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001218s (num_starts 6; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001278s (num_starts 18; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001282s (num_starts 18; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001287s (num_starts 2; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001293s (num_starts 2; 0.0006s/start)
compute_ssa_vars_renaming_map.: 0.001311s (num_starts 2; 0.0007s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001319s (num_starts 35; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001348s (num_starts 29; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.00141s (num_starts 41; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001431s (num_starts 3; 0.0005s/start)
aliasing_constraints.convert_to_expr.: 0.001553s (num_starts 41; 0.0000s/start)
compute_vars_reaching_definitions.: 0.001583s (num_starts 2; 0.0008s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001608s (num_starts 18; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.00162s (num_starts 2; 0.0008s/start)
ldr_decomposition.: 0.001634s (num_starts 33; 0.0000s/start)
populate_branch_affecting_locs.: 0.001663s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;pred-type-unknown;-trivial.: 0.001684s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001686s (num_starts 2; 0.0008s/start)
construct_linear_combination_exprs.: 0.00174s (num_starts 45; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001835s (num_starts 353; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.001845s (num_starts 2; 0.0009s/start)
propagate_nodece_across_edge.: 0.00189s (num_starts 3; 0.0006s/start)
populate_transitive_closure.: 0.00191s (num_starts 15; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001926s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.001931s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002094s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002097s (num_starts 2; 0.0010s/start)
populate_locs_potentially_modified_on_edge.: 0.002137s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002142s (num_starts 2; 0.0011s/start)
bv_const_ref_map2expr_map.: 0.002186s (num_starts 45; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.002369s (num_starts 22; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002409s (num_starts 68; 0.0000s/start)
cg_src_dst_tfg_copy.: 0.002452s (num_starts 1; 0.0025s/start)
check_node_stability_after_CE_addition.: 0.002482s (num_starts 48; 0.0001s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.002561s (num_starts 1; 0.0026s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002604s (num_starts 3; 0.0009s/start)
find_dominators.: 0.002778s (num_starts 28; 0.0001s/start)
graph_identify_back_edges.: 0.002786s (num_starts 24; 0.0001s/start)
graph_identify_natural_loops.: 0.002843s (num_starts 24; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.00289s (num_starts 84; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.003032s (num_starts 45; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.003088s (num_starts 115; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.003321s (num_starts 4; 0.0008s/start)
expr_linear_relation_holds::visit.var.: 0.003351s (num_starts 149; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.003589s (num_starts 4; 0.0009s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003833s (num_starts 41; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003846s (num_starts 3; 0.0013s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.004038s (num_starts 84; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.00406s (num_starts 78; 0.0001s/start)
get_next_potential_correlations.: 0.00416s (num_starts 4; 0.0010s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004212s (num_starts 203; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.00479s (num_starts 92; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004837s (num_starts 504; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004959s (num_starts 35; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005123s (num_starts 142; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005179s (num_starts 113; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005529s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005532s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.005534s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.006015s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00602s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.006024s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.006175s (num_starts 2; 0.0031s/start)
lhs_set_sort.: 0.006295s (num_starts 41; 0.0002s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.006376s (num_starts 41; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.006646s (num_starts 2; 0.0033s/start)
compute_regions.: 0.006651s (num_starts 24; 0.0003s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.006735s (num_starts 35; 0.0002s/start)
do_ssa_transformation.: 0.006818s (num_starts 2; 0.0034s/start)
ldr_decompose_and_linear_solve.: 0.006963s (num_starts 33; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;linear;-trivial.: 0.007142s (num_starts 1; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.007147s (num_starts 1; 0.0071s/start)
bv_linear_solve.: 0.007511s (num_starts 33; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.007512s (num_starts 8; 0.0009s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.007625s (num_starts 75; 0.0001s/start)
query:bv_solve.: 0.007721s (num_starts 33; 0.0002s/start)
populate_simplified_to_state.: 0.007802s (num_starts 3; 0.0026s/start)
collect_inductive_preds_around_path.: 0.00783s (num_starts 51; 0.0002s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.008069s (num_starts 35; 0.0002s/start)
collect_assumes_around_path_helper.: 0.008591s (num_starts 95; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.00862s (num_starts 1; 0.0086s/start)
populate_simplified_assets.: 0.008693s (num_starts 6; 0.0014s/start)
graph_with_paths::collect_assumes_around_path.: 0.008813s (num_starts 95; 0.0001s/start)
counter_example_falsifies_preds.: 0.009058s (num_starts 49; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.009119s (num_starts 75; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;linear;-trivial.: 0.009501s (num_starts 2; 0.0048s/start)
avail_exprs_create_submap.: 0.009669s (num_starts 105; 0.0001s/start)
counter_example_satisfies_preds.: 0.009758s (num_starts 240; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.009843s (num_starts 1; 0.0098s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.009844s (num_starts 1; 0.0098s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.00985s (num_starts 1; 0.0098s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.009867s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.009872s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.009886s (num_starts 2; 0.0049s/start)
bv_solve_returning_intermediate_structures.: 0.009983s (num_starts 33; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010734s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010736s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010737s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010738s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.01074s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.010753s (num_starts 1; 0.0108s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.010843s (num_starts 3; 0.0036s/start)
bvsolve_cache_query.miss1.: 0.011566s (num_starts 33; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.011768s (num_starts 26; 0.0005s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.011833s (num_starts 26; 0.0005s/start)
bvsolve_cache_query.: 0.011991s (num_starts 33; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;outgoing_edges_cover_all_possibilities..: 0.012063s (num_starts 3; 0.0040s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.012074s (num_starts 3; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012211s (num_starts 1; 0.0122s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012212s (num_starts 1; 0.0122s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012648s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01265s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.012652s (num_starts 1; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;-dst-edgecond-implies-src-edgecond.: 0.012655s (num_starts 1; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013027s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01303s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013034s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013038s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.013042s (num_starts 25; 0.0005s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.013204s (num_starts 1; 0.0132s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.013233s (num_starts 434; 0.0000s/start)
graph_to_stream.: 0.01339s (num_starts 4; 0.0033s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013655s (num_starts 1; 0.0137s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013657s (num_starts 1; 0.0137s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.013662s (num_starts 1; 0.0137s/start)
collect_aliasing_constraints_around_path_helper.: 0.013915s (num_starts 135; 0.0001s/start)
get_unrolled_paths_from.: 0.014136s (num_starts 25; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014228s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014229s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01423s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.014233s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014236s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.014243s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.014248s (num_starts 1; 0.0142s/start)
collect_aliasing_constraints_around_path.: 0.014255s (num_starts 83; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0144s (num_starts 1; 0.0144s/start)
solve_for_bv_points.: 0.01502s (num_starts 33; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015086s (num_starts 1; 0.0151s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015089s (num_starts 1; 0.0151s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015284s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015287s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015288s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.01529s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;-dst-edgecond-implies-src-edgecond.: 0.015293s (num_starts 1; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.015296s (num_starts 2; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.015331s (num_starts 2; 0.0077s/start)
predicate_canonicalized.: 0.01539s (num_starts 45; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.015408s (num_starts 3; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.015413s (num_starts 3; 0.0051s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.015741s (num_starts 2; 0.0079s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.015747s (num_starts 2; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.016071s (num_starts 2; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;linear.: 0.016077s (num_starts 2; 0.0080s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.016389s (num_starts 1; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017172s (num_starts 1; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.017176s (num_starts 1; 0.0172s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.017601s (num_starts 4; 0.0044s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017689s (num_starts 1; 0.0177s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.017694s (num_starts 1; 0.0177s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;pred-type-unknown;-trivial.: 0.017788s (num_starts 4; 0.0044s/start)
counter_example_evaluate_preds.: 0.018027s (num_starts 289; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.018426s (num_starts 33; 0.0006s/start)
graph_ec_apply_trans_funs_helper.0.: 0.019134s (num_starts 214; 0.0001s/start)
query:convert_from_z3.: 0.019331s (num_starts 233; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.019397s (num_starts 35; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.019458s (num_starts 6; 0.0032s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.019706s (num_starts 2; 0.0099s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart.: 0.020673s (num_starts 2; 0.0103s/start)
graph_ec_apply_trans_funs_helper.: 0.020704s (num_starts 220; 0.0001s/start)
check_wfconds_on_edge.L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd.: 0.020796s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.020844s (num_starts 2; 0.0104s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.021146s (num_starts 220; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.021218s (num_starts 51; 0.0004s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.021405s (num_starts 216; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.021978s (num_starts 216; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.022105s (num_starts 3; 0.0074s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.022226s (num_starts 148; 0.0002s/start)
put_smtlib_string_in_file.: 0.022387s (num_starts 70; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.022588s (num_starts 75; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022607s (num_starts 1; 0.0226s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022609s (num_starts 1; 0.0226s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.022614s (num_starts 1; 0.0226s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;pred-type-unknown.: 0.022618s (num_starts 1; 0.0226s/start)
compute_expr_eqclasses_at_pc.: 0.023476s (num_starts 2; 0.0117s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.02391s (num_starts 504; 0.0000s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.023916s (num_starts 4; 0.0060s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.024036s (num_starts 4; 0.0060s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024849s (num_starts 2; 0.0124s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.02594s (num_starts 588; 0.0000s/start)
query:convert_to_z3.: 0.02652s (num_starts 233; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027241s (num_starts 2; 0.0136s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027249s (num_starts 2; 0.0136s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.027295s (num_starts 2; 0.0136s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.027301s (num_starts 2; 0.0137s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.027656s (num_starts 4; 0.0069s/start)
cg_add_node.: 0.028081s (num_starts 4; 0.0070s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029472s (num_starts 2; 0.0147s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.029702s (num_starts 504; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.030329s (num_starts 22; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.031398s (num_starts 4; 0.0078s/start)
gen_pred_from_coeff_row.simplify.: 0.031884s (num_starts 45; 0.0007s/start)
create_new_corr_graph_edge.new_node.: 0.034478s (num_starts 3; 0.0115s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.034798s (num_starts 4; 0.0087s/start)
create_new_corr_graph_edge.: 0.035208s (num_starts 4; 0.0088s/start)
populate_loc_liveness.: 0.03542s (num_starts 3; 0.0118s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.036264s (num_starts 1; 0.0363s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.036267s (num_starts 1; 0.0363s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.036276s (num_starts 1; 0.0363s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.039322s (num_starts 1; 0.0393s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.039326s (num_starts 1; 0.0393s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.039326s (num_starts 1; 0.0393s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;abstract-memlabel-asserts-houdini-guess.: 0.039335s (num_starts 1; 0.0393s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.03953s (num_starts 1; 0.0395s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040139s (num_starts 3; 0.0134s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040269s (num_starts 2; 0.0201s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040284s (num_starts 2; 0.0201s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.040326s (num_starts 2; 0.0202s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.040332s (num_starts 2; 0.0202s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.04183s (num_starts 39; 0.0011s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.04213s (num_starts 39; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.046135s (num_starts 2; 0.0231s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.046153s (num_starts 2; 0.0231s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.04616s (num_starts 2; 0.0231s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046356s (num_starts 3; 0.0155s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.048406s (num_starts 1; 0.0484s/start)
tfg_postprocess_after_pointsto_analysis.: 0.050637s (num_starts 2; 0.0253s/start)
tfg_relax_pointsto_vals_on_edge.: 0.051361s (num_starts 18; 0.0029s/start)
gen_pred_from_coeff_row.: 0.053037s (num_starts 45; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053547s (num_starts 2; 0.0268s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053551s (num_starts 2; 0.0268s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.053585s (num_starts 2; 0.0268s/start)
compute_preds_for_bv_points.: 0.053851s (num_starts 12; 0.0045s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.053917s (num_starts 14; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.054993s (num_starts 4; 0.0137s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.055626s (num_starts 6; 0.0093s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.055714s (num_starts 4; 0.0139s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.055732s (num_starts 41; 0.0014s/start)
decide_hoare_triple_helper;-trivial.: 0.056455s (num_starts 17; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059564s (num_starts 1; 0.0596s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059567s (num_starts 1; 0.0596s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.059573s (num_starts 1; 0.0596s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1;dst_edge_composition_proves_false.: 0.059578s (num_starts 1; 0.0596s/start)
query:simplify-z3.: 0.059617s (num_starts 496; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.060744s (num_starts 4; 0.0152s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.062702s (num_starts 41; 0.0015s/start)
check_wfconds_on_edge.L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.064318s (num_starts 2; 0.0322s/start)
compute_lr_status_for_expr.: 0.066614s (num_starts 87; 0.0008s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.066699s (num_starts 78; 0.0009s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.066854s (num_starts 78; 0.0009s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.068489s (num_starts 2; 0.0342s/start)
compute_z3_expr.: 0.069189s (num_starts 268; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;linear.: 0.070305s (num_starts 6; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07113s (num_starts 3; 0.0237s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.071939s (num_starts 21; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072921s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072922s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072934s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.072944s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;false-predicate.: 0.072947s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.07296s (num_starts 1; 0.0730s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.075907s (num_starts 17; 0.0045s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077028s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077032s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077033s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.07704s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;false-predicate.: 0.077044s (num_starts 1; 0.0770s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.077052s (num_starts 1; 0.0771s/start)
guarded_predicate_set_and.: 0.079156s (num_starts 41; 0.0019s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.081468s (num_starts 12; 0.0068s/start)
parse_z3_model.: 0.084238s (num_starts 13; 0.0065s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.085662s (num_starts 66; 0.0013s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.08785s (num_starts 17; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1.C1.D1;pred-type-unknown.: 0.088992s (num_starts 7; 0.0127s/start)
apply_mask_and_overlay_array_constant.: 0.090036s (num_starts 66; 0.0014s/start)
parse_cvc4_model.: 0.090363s (num_starts 13; 0.0070s/start)
compute_new_lr_status_on_locs.: 0.096168s (num_starts 35; 0.0027s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099748s (num_starts 1; 0.0997s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099753s (num_starts 1; 0.0998s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099756s (num_starts 1; 0.0998s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.09977s (num_starts 1; 0.0998s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;dst_edge_composition_proves_false.: 0.099775s (num_starts 1; 0.0998s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.099785s (num_starts 1; 0.0998s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.104343s (num_starts 1; 0.1043s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.104344s (num_starts 1; 0.1043s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.10435s (num_starts 1; 0.1043s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.104354s (num_starts 1; 0.1044s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.113401s (num_starts 2; 0.0567s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115848s (num_starts 1; 0.1158s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115853s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115856s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.115862s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;dst_edge_composition_proves_false.: 0.115866s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.115873s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.120175s (num_starts 4; 0.0300s/start)
parse_yices_model.: 0.121337s (num_starts 13; 0.0093s/start)
evaluate_function_call.: 0.126632s (num_starts 17; 0.0074s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.13113s (num_starts 2; 0.0656s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.1374s (num_starts 4; 0.0343s/start)
ftmap_run_pointsto_analysis.: 0.14586s (num_starts 2; 0.0729s/start)
tfg_run_pointsto_analysis.: 0.146152s (num_starts 2; 0.0731s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149948s (num_starts 2; 0.0750s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.149998s (num_starts 2; 0.0750s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.150462s (num_starts 48; 0.0031s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.153891s (num_starts 36; 0.0043s/start)
tfg_populate_structs_after_ssa_construction.: 0.154132s (num_starts 2; 0.0771s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.154217s (num_starts 24; 0.0064s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.163184s (num_starts 2; 0.0816s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163898s (num_starts 2; 0.0819s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.163944s (num_starts 2; 0.0820s/start)
check_wfconds_on_edge.: 0.174361s (num_starts 8; 0.0218s/start)
corr_graph::add_edge().: 0.178465s (num_starts 4; 0.0446s/start)
check_equivalence_proof.: 0.198996s (num_starts 1; 0.1990s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.199479s (num_starts 5; 0.0399s/start)
counter_example_translate_on_edge_composition_helper.: 0.201145s (num_starts 260; 0.0008s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.209533s (num_starts 7; 0.0299s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.214624s (num_starts 4; 0.0537s/start)
corr_graph_add_correlation.: 0.21478s (num_starts 4; 0.0537s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.214844s (num_starts 4; 0.0537s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220915s (num_starts 5; 0.0442s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.22093s (num_starts 5; 0.0442s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.228108s (num_starts 6; 0.0380s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;linear.: 0.22812s (num_starts 6; 0.0380s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.232593s (num_starts 3; 0.0775s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.232598s (num_starts 3; 0.0775s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.232617s (num_starts 3; 0.0775s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1;pred-type-unknown.: 0.232628s (num_starts 3; 0.0775s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.249748s (num_starts 4; 0.0624s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.249831s (num_starts 4; 0.0625s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.25229s (num_starts 2; 0.1261s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.252333s (num_starts 2; 0.1262s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A1.B1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.254047s (num_starts 4; 0.0635s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.25603s (num_starts 6; 0.0427s/start)
ce_reconcile_sorts.: 0.261643s (num_starts 39; 0.0067s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.261721s (num_starts 1; 0.2617s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.26597s (num_starts 3; 0.0887s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.267244s (num_starts 8; 0.0334s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A1.B1;pred-type-unknown.: 0.26773s (num_starts 5; 0.0535s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.283186s (num_starts 10; 0.0283s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.283717s (num_starts 24; 0.0118s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.296737s (num_starts 10; 0.0297s/start)
read_counter_examples_from_channel.: 0.29863s (num_starts 13; 0.0230s/start)
check_preds_on_edge_compositions.: 0.298946s (num_starts 12; 0.0249s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.314551s (num_starts 14; 0.0225s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.324502s (num_starts 257; 0.0013s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.347748s (num_starts 1; 0.3477s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.354658s (num_starts 5; 0.0709s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd).: 0.362571s (num_starts 13; 0.0279s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.379502s (num_starts 4; 0.0949s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.379589s (num_starts 4; 0.0949s/start)
decide_hoare_triple.: 0.399645s (num_starts 7; 0.0571s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.409087s (num_starts 1; 0.4091s/start)
dst_edge_composition_proves_false.: 0.416092s (num_starts 4; 0.1040s/start)
get_next_dst_edge_composition_to_correlate.: 0.426418s (num_starts 5; 0.0853s/start)
query:smt.: 0.584912s (num_starts 35; 0.0167s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.592279s (num_starts 10; 0.0592s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.612011s (num_starts 16; 0.0383s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.674765s (num_starts 17; 0.0397s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart).: 0.691013s (num_starts 19; 0.0364s/start)
spawn_smt_query.: 0.883928s (num_starts 35; 0.0253s/start)
solver_provable.: 1.20516s (num_starts 41; 0.0294s/start)
expr_is_provable.: 1.21603s (num_starts 41; 0.0297s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.21671s (num_starts 41; 0.0297s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.21927s (num_starts 41; 0.0297s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.22194s (num_starts 41; 0.0298s/start)
update_invariant_state_for_edges.: 1.23546s (num_starts 4; 0.3089s/start)
cg_check_new_cg_ec.: 1.23552s (num_starts 4; 0.3089s/start)
correl_entry_apply.: 1.23563s (num_starts 4; 0.3089s/start)
solver_satisfiable-cache-miss.: 1.23988s (num_starts 35; 0.0354s/start)
solver_satisfiable.: 1.24011s (num_starts 42; 0.0295s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.30471s (num_starts 41; 0.0318s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.30889s (num_starts 41; 0.0319s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.30972s (num_starts 41; 0.0319s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.42391s (num_starts 41; 0.0347s/start)
prove.: 1.4242s (num_starts 41; 0.0347s/start)
prove_spawn_and_join_helper.: 1.42436s (num_starts 41; 0.0347s/start)
prove_spawn_and_join.: 1.53768s (num_starts 41; 0.0375s/start)
prove_wrapper.proof_query_not_trivial.: 1.5413s (num_starts 41; 0.0376s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.5512s (num_starts 34; 0.0456s/start)
prove_wrapper.: 1.56423s (num_starts 51; 0.0307s/start)
decide_hoare_triple_check_ub.: 1.58825s (num_starts 51; 0.0311s/start)
decide_hoare_triple_helper.: 1.6094s (num_starts 51; 0.0316s/start)
expandProductCFG.: 1.6666s (num_starts 5; 0.3333s/start)
decide_hoare_triple_with_alias_cons.: 1.76402s (num_starts 51; 0.0346s/start)
bestFirstSearch.: 1.92826s (num_starts 1; 1.9283s/start)
Time taken for equivalence check.: 2.13038s (num_starts 1; 2.1304s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 8
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 4
# of paths expanded.: 4
# of queries to linear solver.: 33
# of smt-solver-queries.: 35
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 3
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 13
smt-queries-yices-sat.: 13
smt-queries-z3-sat.: 13
total-correlation-possibilities.: 5
total-correlation-possibilities-mod-lsprels.: 5
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L2%5%fcallStart_Lif.then%2%fcallStart.: 4
final-CG-counterexamples-total-at-L2%5%fcallEnd_Lif.then%2%fcallEnd.: 8
final-CG-counterexamples-total-at-L2%5%fcallStart_Lif.then%2%fcallStart.: 8
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 12
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.45
final-CG-time-to-total-time-ratio.: 0.75
query-time-to-total-time-ratio.: 0.28

Context stats:
exprs: count: 142295
sorts: count: 156
num_proof_queries: 41
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3497
	        hit ratio:	0.949957
m_simplify_solver:
	----------- total:	854
	        hit ratio:	0.692037
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	64
	        hit ratio:	0.8125
m_z3_solver_substitution:
	----------- total:	263
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	263
	        hit ratio:	0
m_expr_size:
	----------- total:	1887
	        hit ratio:	0.832538
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	4831
	        hit ratio:	0.602981

z3_solver expr_query_cache entry size: 35
	----------- total:	42
	             hits:	7
	        hit ratio:	0.166667
histogram (time taken by solver in ms):
[ 3.7830,  4.9067) (avg.  4.1710)        : 3
[ 4.9067,  6.3641) (avg.  5.4838)        : 15
[ 6.3641,  8.2544) (avg.  6.6848)        : 4
[ 8.2544, 10.7062) (avg.  0.0000)        : 0
[10.7062, 13.8862) (avg.  0.0000)        : 0
[13.8862, 18.0108) (avg.  0.0000)        : 0
[18.0108, 23.3606) (avg. 20.7460)        : 1
[23.3606, 30.2993) (avg. 28.3423)        : 3
[30.2993, 39.2991) (avg. 34.9584)        : 5
[39.2991, 50.9720) (avg. 45.6298)        : 4
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 17,  31) (avg.  17)                    : 1
[ 31,  44) (avg.   0)                    : 0
[ 44,  58) (avg.   0)                    : 0
[ 58,  71) (avg.   0)                    : 0
[ 71,  85) (avg.   0)                    : 0
[ 85,  98) (avg.  94)                    : 4
[ 98, 112) (avg. 105)                    : 18
[112, 125) (avg. 116)                    : 8
[125, 139) (avg. 132)                    : 3
[139, 152) (avg. 142)                    : 1
Top 10 highest time taking queries:
1. [0.050s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.047s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.1
3. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
4. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0
5. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
6. [0.038s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL2%5%fcallEnd_Lif.then.0
7. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0
8. [0.032s] SOLVER_RES_TRUE memlabel_assertions_sat.0
9. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-10-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.029s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL2%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:22 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:22 : Computing equivalence for function: update_val...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:22 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:22 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:22 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:22 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.19s, query:smt.: 0.056185s (num_starts 3; 0.0187s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.099989s (num_starts 4; 0.0250s/start)ftmap_run_pointsto_analysis.: 0.015696s (num_starts 2; 0.0078s/start)

Printing statistics:

timers:
compute_loop_hoisting_select_exprs_at_pcpair.: 0s (num_starts 1; 0.0000s/start)
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 2e-06s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 3e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 3; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 5e-06s (num_starts 3; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 6e-06s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::meet.: 6e-06s (num_starts 9; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7e-06s (num_starts 4; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 8e-06s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 1e-05s (num_starts 3; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.1e-05s (num_starts 1; 0.0000s/start)
determinize_value_expr_map.: 1.1e-05s (num_starts 3; 0.0000s/start)
proof_query_is_trivial_helper.: 1.1e-05s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.1e-05s (num_starts 1; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1.3e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 1.4e-05s (num_starts 13; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 2; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 1.7e-05s (num_starts 3; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 1.8e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 1.8e-05s (num_starts 1; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 1.9e-05s (num_starts 7; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 2e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.1e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 2.1e-05s (num_starts 21; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.2e-05s (num_starts 2; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 2.3e-05s (num_starts 13; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.5e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 2.8e-05s (num_starts 3; 0.0000s/start)
def_analysis::xfer_and_meet.: 2.9e-05s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 2.9e-05s (num_starts 25; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 3.2e-05s (num_starts 13; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.2e-05s (num_starts 2; 0.0000s/start)
graph_with_guessing_sync_preds.: 3.2e-05s (num_starts 4; 0.0000s/start)
graph_locs_add_all_exvregs.: 3.6e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 4.9e-05s (num_starts 6; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 5.4e-05s (num_starts 7; 0.0000s/start)
proof_query_is_trivial.: 5.6e-05s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 5.6e-05s (num_starts 1; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 6e-05s (num_starts 2; 0.0000s/start)
removeMostPromising.: 6.2e-05s (num_starts 4; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 6.3e-05s (num_starts 2; 0.0000s/start)
pth_collect_preds_using_atom_func.: 6.3e-05s (num_starts 5; 0.0000s/start)
graph_locs_add_all_local_vars.: 6.8e-05s (num_starts 2; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 7.1e-05s (num_starts 2; 0.0000s/start)
tfg_edge_composition_get_assumes.: 7.1e-05s (num_starts 5; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 7.3e-05s (num_starts 18; 0.0000s/start)
set_result_and_counter_example.: 7.8e-05s (num_starts 3; 0.0000s/start)
tfg::collect_assumes_around_edge.: 8.7e-05s (num_starts 5; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.6e-05s (num_starts 4; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 9.7e-05s (num_starts 3; 0.0000s/start)
collect_assumes_around_edge.: 0.0001s (num_starts 1; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000102s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000103s (num_starts 2; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.000103s (num_starts 3; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000107s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000111s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000112s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000112s (num_starts 11; 0.0000s/start)
collect_inductive_preds_around_path.: 0.000124s (num_starts 4; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.000125s (num_starts 51; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000129s (num_starts 1; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000131s (num_starts 1; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000139s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000141s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000142s (num_starts 3; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000146s (num_starts 7; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000154s (num_starts 2; 0.0001s/start)
populate_branch_affecting_locs.: 0.000156s (num_starts 3; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000157s (num_starts 6; 0.0000s/start)
populate_locid2expr_map.: 0.000165s (num_starts 2; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000166s (num_starts 3; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000175s (num_starts 2; 0.0001s/start)
identify_address_taken_local_variables.: 0.000184s (num_starts 1; 0.0002s/start)
populate_simplified_to_state.: 0.000192s (num_starts 3; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000193s (num_starts 2; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000193s (num_starts 4; 0.0000s/start)
populate_transitive_closure.: 0.000202s (num_starts 11; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000213s (num_starts 2; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.000217s (num_starts 1; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000227s (num_starts 16; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000234s (num_starts 3; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000234s (num_starts 3; 0.0001s/start)
counter_example_falsifies_preds.: 0.000237s (num_starts 3; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000248s (num_starts 3; 0.0001s/start)
expr_represents_llvm_undef.: 0.000254s (num_starts 29; 0.0000s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.00026s (num_starts 1; 0.0003s/start)
pth_collect_simplified_preds_using_atom_func.: 0.000278s (num_starts 6; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000289s (num_starts 4; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000293s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000294s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000295s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000296s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000298s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000299s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.000302s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000304s (num_starts 1; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000305s (num_starts 11; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000306s (num_starts 1; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.00031s (num_starts 9; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000311s (num_starts 21; 0.0000s/start)
graph_visit_exprs.: 0.000315s (num_starts 3; 0.0001s/start)
find_dominators.: 0.000317s (num_starts 19; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000323s (num_starts 4; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000328s (num_starts 5; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.000329s (num_starts 2; 0.0002s/start)
tfg::populate_loc_definedness.before_initialize.: 0.00033s (num_starts 3; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000332s (num_starts 4; 0.0001s/start)
populate_simplified_assets.: 0.000353s (num_starts 6; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000358s (num_starts 1; 0.0004s/start)
tfg::populate_loc_definedness.: 0.00036s (num_starts 3; 0.0001s/start)
graph_identify_back_edges.: 0.000363s (num_starts 15; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.000364s (num_starts 2; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000365s (num_starts 8; 0.0000s/start)
graph_identify_natural_loops.: 0.000383s (num_starts 15; 0.0000s/start)
lhs_set_sort.: 0.00039s (num_starts 3; 0.0001s/start)
counter_example_satisfies_preds.: 0.000415s (num_starts 18; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000447s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.000457s (num_starts 5; 0.0001s/start)
get_next_potential_correlations.: 0.000459s (num_starts 1; 0.0005s/start)
populate_locs_potentially_modified_on_edge.: 0.000486s (num_starts 3; 0.0002s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.000502s (num_starts 3; 0.0002s/start)
collect_aliasing_constraints_around_path_helper.: 0.000511s (num_starts 22; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000519s (num_starts 6; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.000564s (num_starts 14; 0.0000s/start)
counter_example_evaluate_preds.: 0.000602s (num_starts 21; 0.0000s/start)
collect_assumes_around_path_helper.: 0.000627s (num_starts 13; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.000656s (num_starts 13; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.000701s (num_starts 1; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.000722s (num_starts 29; 0.0000s/start)
cg_add_node.: 0.000738s (num_starts 2; 0.0004s/start)
create_new_corr_graph_edge.: 0.000757s (num_starts 1; 0.0008s/start)
graph_ec_apply_trans_funs_helper.0.: 0.00078s (num_starts 12; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.00079s (num_starts 4; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.000821s (num_starts 12; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.000834s (num_starts 6; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.00085s (num_starts 12; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000851s (num_starts 3; 0.0003s/start)
compute_regions.: 0.000856s (num_starts 15; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000889s (num_starts 12; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.0009s (num_starts 4; 0.0002s/start)
get_unrolled_paths_from.: 0.000922s (num_starts 6; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.00093s (num_starts 12; 0.0001s/start)
put_smtlib_string_in_file.: 0.000944s (num_starts 6; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000983s (num_starts 117; 0.0000s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.001026s (num_starts 32; 0.0000s/start)
avail_exprs_create_submap.: 0.001095s (num_starts 12; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.001152s (num_starts 6; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001185s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.001266s (num_starts 2; 0.0006s/start)
edge_composition_apply_trans_funs_on_pred.: 0.001309s (num_starts 4; 0.0003s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001344s (num_starts 4; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001419s (num_starts 6; 0.0002s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001687s (num_starts 1; 0.0017s/start)
compute_lr_status_for_expr.: 0.001876s (num_starts 25; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001914s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.00196s (num_starts 21; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002705s (num_starts 4; 0.0007s/start)
compute_new_lr_status_on_locs.: 0.002844s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.003201s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003203s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.003206s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.003208s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.00321s (num_starts 1; 0.0032s/start)
parse_yices_model.: 0.003211s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;-trivial.: 0.003551s (num_starts 2; 0.0018s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.003701s (num_starts 6; 0.0006s/start)
query:convert_from_z3.: 0.004173s (num_starts 37; 0.0001s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.004232s (num_starts 3; 0.0014s/start)
apply_mask_and_overlay_array_constant.: 0.004369s (num_starts 3; 0.0015s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.004487s (num_starts 2; 0.0022s/start)
check_equivalence_proof.: 0.004494s (num_starts 1; 0.0045s/start)
parse_z3_model.: 0.004591s (num_starts 2; 0.0023s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.004804s (num_starts 124; 0.0000s/start)
graph_to_stream.: 0.004848s (num_starts 4; 0.0012s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.00497s (num_starts 117; 0.0000s/start)
counter_example_translate_on_edge_composition_helper.: 0.005039s (num_starts 21; 0.0002s/start)
query:convert_to_z3.: 0.005217s (num_starts 37; 0.0001s/start)
populate_loc_liveness.: 0.00525s (num_starts 3; 0.0018s/start)
compute_z3_expr.: 0.005277s (num_starts 40; 0.0001s/start)
parse_cvc4_model.: 0.006035s (num_starts 2; 0.0030s/start)
tfg_relax_pointsto_vals_on_edge.: 0.006069s (num_starts 2; 0.0030s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.006085s (num_starts 2; 0.0030s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.006255s (num_starts 117; 0.0001s/start)
corr_graph::add_edge().: 0.006863s (num_starts 1; 0.0069s/start)
tfg_postprocess_after_pointsto_analysis.: 0.007194s (num_starts 2; 0.0036s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.007204s (num_starts 1; 0.0072s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.007804s (num_starts 1; 0.0078s/start)
corr_graph_add_correlation.: 0.007835s (num_starts 1; 0.0078s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.007851s (num_starts 1; 0.0079s/start)
guarded_predicate_set_and.: 0.013218s (num_starts 3; 0.0044s/start)
query:simplify-z3.: 0.013441s (num_starts 74; 0.0002s/start)
read_counter_examples_from_channel.: 0.014272s (num_starts 2; 0.0071s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.015366s (num_starts 3; 0.0051s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.01547s (num_starts 3; 0.0052s/start)
ftmap_run_pointsto_analysis.: 0.015696s (num_starts 2; 0.0078s/start)
tfg_run_pointsto_analysis.: 0.015825s (num_starts 2; 0.0079s/start)
tfg_populate_structs_after_ssa_construction.: 0.017037s (num_starts 2; 0.0085s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.019583s (num_starts 2; 0.0098s/start)
ce_reconcile_sorts.: 0.021549s (num_starts 6; 0.0036s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021805s (num_starts 1; 0.0218s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021807s (num_starts 1; 0.0218s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021808s (num_starts 1; 0.0218s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02181s (num_starts 1; 0.0218s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02181s (num_starts 1; 0.0218s/start)
update_invariant_state_for_edges.: 0.024285s (num_starts 1; 0.0243s/start)
cg_check_new_cg_ec.: 0.024298s (num_starts 1; 0.0243s/start)
correl_entry_apply.: 0.024313s (num_starts 1; 0.0243s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.025028s (num_starts 2; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.025034s (num_starts 2; 0.0125s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.025038s (num_starts 2; 0.0125s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.025043s (num_starts 2; 0.0125s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.025048s (num_starts 2; 0.0125s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.0252s (num_starts 2; 0.0126s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.025983s (num_starts 2; 0.0130s/start)
check_wfconds_on_edge.: 0.025998s (num_starts 2; 0.0130s/start)
check_preds_on_edge_compositions.: 0.026097s (num_starts 3; 0.0087s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.035495s (num_starts 36; 0.0010s/start)
query:smt.: 0.056185s (num_starts 3; 0.0187s/start)
solver_provable.: 0.060538s (num_starts 3; 0.0202s/start)
expr_is_provable.: 0.060999s (num_starts 3; 0.0203s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.061045s (num_starts 3; 0.0203s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.061236s (num_starts 3; 0.0204s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.061322s (num_starts 3; 0.0204s/start)
spawn_smt_query.: 0.070529s (num_starts 3; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07441s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074412s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074413s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.074415s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074415s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074417s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.074421s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.074425s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.074431s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.074747s (num_starts 2; 0.0374s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.074813s (num_starts 3; 0.0249s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.075036s (num_starts 3; 0.0250s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.07509s (num_starts 3; 0.0250s/start)
decide_hoare_triple.: 0.075332s (num_starts 2; 0.0377s/start)
dst_edge_composition_proves_false.: 0.079772s (num_starts 1; 0.0798s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.080057s (num_starts 3; 0.0267s/start)
prove.: 0.080078s (num_starts 3; 0.0267s/start)
prove_spawn_and_join_helper.: 0.08009s (num_starts 3; 0.0267s/start)
get_next_dst_edge_composition_to_correlate.: 0.080421s (num_starts 2; 0.0402s/start)
solver_satisfiable-cache-miss.: 0.095501s (num_starts 3; 0.0318s/start)
solver_satisfiable.: 0.095522s (num_starts 4; 0.0239s/start)
prove_spawn_and_join.: 0.09631s (num_starts 3; 0.0321s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096337s (num_starts 2; 0.0482s/start)
prove_wrapper.proof_query_not_trivial.: 0.096594s (num_starts 3; 0.0322s/start)
prove_wrapper.: 0.097262s (num_starts 4; 0.0243s/start)
decide_hoare_triple_check_ub.: 0.098839s (num_starts 4; 0.0247s/start)
decide_hoare_triple_helper.: 0.099989s (num_starts 4; 0.0250s/start)
decide_hoare_triple_with_alias_cons.: 0.100276s (num_starts 4; 0.0251s/start)
expandProductCFG.: 0.105274s (num_starts 2; 0.0526s/start)
bestFirstSearch.: 0.152252s (num_starts 1; 0.1523s/start)
Time taken for equivalence check.: 0.15699s (num_starts 1; 0.1570s/start)

counters:
# of paths enumerated.: 1
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.21
query-time-to-total-time-ratio.: 0.37

Context stats:
exprs: count: 140985
sorts: count: 156
num_proof_queries: 44
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	403
	        hit ratio:	0.925558
m_simplify_solver:
	----------- total:	104
	        hit ratio:	0.644231
m_z3_solver_substitution:
	----------- total:	37
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	37
	        hit ratio:	0
m_expr_size:
	----------- total:	269
	        hit ratio:	0.776952
m_expr_evaluates_to_constant_visitor:
	----------- total:	402
	        hit ratio:	0.554726

z3_solver expr_query_cache entry size: 3
	----------- total:	46
	             hits:	1
	        hit ratio:	0.0217391
histogram (time taken by solver in ms):
[ 3.9670,  4.8922) (avg.  3.9670)        : 1
[ 4.8922,  6.0331) (avg.  0.0000)        : 0
[ 6.0331,  7.4402) (avg.  0.0000)        : 0
[ 7.4402,  9.1754) (avg.  0.0000)        : 0
[ 9.1754, 11.3153) (avg.  0.0000)        : 0
[11.3153, 13.9542) (avg.  0.0000)        : 0
[13.9542, 17.2086) (avg.  0.0000)        : 0
[17.2086, 21.2220) (avg. 20.9120)        : 1
[21.2220, 26.1713) (avg.  0.0000)        : 0
[26.1713, 32.2750) (avg. 31.2750)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[17, 23) (avg. 17)                       : 1
[23, 28) (avg.  0)                       : 0
[28, 33) (avg.  0)                       : 0
[33, 38) (avg.  0)                       : 0
[38, 43) (avg.  0)                       : 0
[43, 49) (avg.  0)                       : 0
[49, 54) (avg.  0)                       : 0
[54, 59) (avg.  0)                       : 0
[59, 64) (avg. 59)                       : 2
[64, 69) (avg.  0)                       : 0

<MSG>0:22 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.001207s total; 0.000022 per start]
tfg_computeWP: num_starts 244 time spent: 0:0:0 [0.016105s total; 0.000066 per start]
tfg_get_simplified_to_state_for_edge: num_starts 934 time spent: 0:0:0 [0.001481s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1020 time spent: 0:0:0 [0.001533s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 628 time spent: 0:0:0 [0.000927s total; 0.000001 per start]
add_nodeces_at_pc_and_propagate: num_starts 44 time spent: 0:0:0 [0.108555s total; 0.002467 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.176445s total; 0.017645 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 196 time spent: 0:0:0 [0.191066s total; 0.000975 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 49 time spent: 0:0:0 [0.022642s total; 0.000462 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 187 time spent: 0:0:0 [0.174149s total; 0.000931 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 802 time spent: 0:0:0 [0.181062s total; 0.000226 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 193 time spent: 0:0:0 [0.008005s total; 0.000041 per start]
tfg_graph_get_vars_written_on_edge: num_starts 187 time spent: 0:0:0 [0.003852s total; 0.000021 per start]
cg_with_rank_add_CE_at_pc: num_starts 54 time spent: 0:0:0 [0.106379s total; 0.001970 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000444s total; 0.000018 per start]
graph_with_guessing_add_CE_at_pc: num_starts 54 time spent: 0:0:0 [0.106294s total; 0.001968 per start]
point_set_add_point_using_CE: num_starts 115 time spent: 0:0:0 [0.022113s total; 0.000192 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 115 time spent: 0:0:0 [0.022459s total; 0.000195 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 39 time spent: 0:0:0 [0.102906s total; 0.002639 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 39 time spent: 0:0:0 [0.079790s total; 0.002046 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1557 time spent: 0:0:0 [0.020763s total; 0.000013 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 199 time spent: 0:0:0 [0.012166s total; 0.000061 per start]
expr_simplify_solver: num_starts 1009 time spent: 0:0:0 [0.124645s total; 0.000124 per start]
expr_simplify_syntactic: num_starts 1009 time spent: 0:0:0 [0.256542s total; 0.000254 per start]
expr_simplify_select_on_store: num_starts 53 time spent: 0:0:0 [0.152466s total; 0.002877 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001341s total; 0.000089 per start]
expr_simplify_using_lhs_set_helper: num_starts 336 time spent: 0:0:0 [0.408195s total; 0.001215 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2232 time spent: 0:0:0 [0.405813s total; 0.000182 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1384 time spent: 0:0:0 [0.006139s total; 0.000004 per start]
expr_simplify_eq: num_starts 274 time spent: 0:0:0 [0.003316s total; 0.000012 per start]
expr_simplify_or: num_starts 18 time spent: 0:0:0 [0.000022s total; 0.000001 per start]
expr_simplify_and: num_starts 86 time spent: 0:0:0 [0.000499s total; 0.000006 per start]
expr_simplify_not: num_starts 23 time spent: 0:0:0 [0.000092s total; 0.000004 per start]
expr_simplify_implies: num_starts 15 time spent: 0:0:0 [0.000141s total; 0.000009 per start]
expr_simplify_ite: num_starts 29 time spent: 0:0:0 [0.001479s total; 0.000051 per start]
canonicalize_expr_tree: num_starts 330 time spent: 0:0:0 [0.014985s total; 0.000045 per start]
expr_simplify_memalloc_using_memlabel: num_starts 14 time spent: 0:0:0 [0.000046s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 56 time spent: 0:0:0 [0.150912s total; 0.002695 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000086s total; 0.000086 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000075s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000007s total; 0.000007 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 1658 time spent: 0:0:0 [0.001211s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.004973s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 281 time spent: 0:0:0 [0.000429s total; 0.000002 per start]
expr_do_simplify_helper: num_starts 4101 time spent: 0:0:0 [0.370558s total; 0.000090 per start]
expr_do_simplify_helper_cache: num_starts 4101 time spent: 0:0:0 [0.003839s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 6 time spent: 0:0:0 [0.000001s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 6 time spent: 0:0:0 [0.000022s total; 0.000004 per start]
evaluate_expr_and_check_bounds: num_starts 604 time spent: 0:0:0 [0.193047s total; 0.000320 per start]
array_constant_equals: num_starts 8976 time spent: 0:0:0 [0.011310s total; 0.000001 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.093918s total; 0.004943 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.080350s total; 0.004229 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.001561s total; 0.000045 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000048s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.009763s total; 0.000125 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.099172s total; 0.000472 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000128s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.020354s total; 0.000509 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001591s total; 0.000041 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.014428s total; 0.000759 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000230s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:28 [28.231706s total; 28.231706 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.56s.
ftmap_run_pointsto_analysis.: 0.015696s (num_starts 2; 0.0078s/start)s.
EQ Time after pointsto analysis: 2.54054s.
EQ Time after pointsto analysis and smt_query: 2.44327s.
EQ Time after pointsto analysis and smt_query and bv-solve: 2.44327s.
Equivalence proof found. The programs are equivalent.
