argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --smt-query-timeout=5
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall2.proof
argv[9] = --spec-iospecs=fcall2.iospecs
argv[10] = fcall2.spec
argv[11] = fcall2.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.4087496
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall2.spec.etfg
argv[11] = par_tmpdir/fcall2.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall2.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000077s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000113s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.003227s total; 0.000008 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.010136s total; 0.000098 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.058486s total; 0.000568 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.005418s total; 0.002709 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000736s total; 0.000082 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.072931s total; 0.001027 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.072557s total; 0.000178 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000206s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000043s total; 0.000014 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.001063s total; 0.000020 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000024s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.005351s total; 0.002675 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000019s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000040s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.001177s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000165s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.074052s total; 0.000079 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000679s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000114s total; 0.000002 per start]
sort_dfa_canonical: num_starts 142232 time spent: 0:0:1 [1.209798s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 5 time spent: 0:0:0 [0.000753s total; 0.000151 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.052229s total; 0.002009 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.037472s total; 0.001441 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001805s total; 0.000047 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000038s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002935s total; 0.000059 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.060611s total; 0.000321 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000028s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.019435s total; 0.000648 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000433s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.010692s total; 0.000428 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000190s total; 0.000005 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.opt_map.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 1e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 3e-06s (num_starts 2; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 7e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.1e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 1.6e-05s (num_starts 20; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 1.8e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.9e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 2.8e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 2.8e-05s (num_starts 32; 0.0000s/start)
context_constructor.solver.: 3.4e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.4e-05s (num_starts 4; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.7e-05s (num_starts 1; 0.0000s/start)
tfg_get_write_memlabels.: 3.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.1e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 4.5e-05s (num_starts 2; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 4.6e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 4.8e-05s (num_starts 44; 0.0000s/start)
tfg_get_read_memlabels.: 5.1e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.6e-05s (num_starts 8; 0.0000s/start)
graph_visit_exprs_const.const.: 7.7e-05s (num_starts 2; 0.0000s/start)
get_summary_for_calling_functions.: 9.6e-05s (num_starts 1; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.000103s (num_starts 1; 0.0001s/start)
compute_reachable_memlabels_map.: 0.000105s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.000105s (num_starts 113; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000106s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000108s (num_starts 2; 0.0001s/start)
main.3.: 0.000109s (num_starts 1; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000119s (num_starts 23; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00012s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000126s (num_starts 4; 0.0000s/start)
compute_sprel_relations.: 0.000133s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000134s (num_starts 277; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000137s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000145s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000163s (num_starts 6; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000166s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.00017s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000183s (num_starts 23; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.00019s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000201s (num_starts 25; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000202s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000246s (num_starts 49; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000254s (num_starts 1; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000256s (num_starts 48; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000274s (num_starts 1; 0.0003s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000279s (num_starts 23; 0.0000s/start)
populate_locid2expr_map.: 0.00033s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000336s (num_starts 2; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000354s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000395s (num_starts 2; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000403s (num_starts 25; 0.0000s/start)
populate_transitive_closure.: 0.000419s (num_starts 2; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.000439s (num_starts 1; 0.0004s/start)
canonicalize_llvm_nextpcs.: 0.00049s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000499s (num_starts 34; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000507s (num_starts 1; 0.0005s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.000529s (num_starts 1; 0.0005s/start)
expr_substitute_using_available_exprs_submap.: 0.000548s (num_starts 17; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000556s (num_starts 143; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.00059s (num_starts 1; 0.0006s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.00067s (num_starts 1; 0.0007s/start)
populate_exit_return_values_for_llvm_method.: 0.000699s (num_starts 2; 0.0003s/start)
compute_z3_expr.: 0.000705s (num_starts 52; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000816s (num_starts 1; 0.0008s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.000868s (num_starts 1; 0.0009s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000908s (num_starts 2; 0.0005s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000911s (num_starts 2; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000938s (num_starts 49; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001036s (num_starts 66; 0.0000s/start)
tfg_preprocess.dst.llvm.update_val.: 0.001123s (num_starts 1; 0.0011s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001304s (num_starts 2; 0.0007s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001476s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.00148s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.001485s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001489s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.: 0.001494s (num_starts 1; 0.0015s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001507s (num_starts 2; 0.0008s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001601s (num_starts 2; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.001718s (num_starts 4; 0.0004s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001811s (num_starts 1; 0.0018s/start)
graph_visit_exprs.: 0.001886s (num_starts 8; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.001965s (num_starts 4; 0.0005s/start)
query:convert_from_z3.: 0.002181s (num_starts 52; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.002188s (num_starts 25; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002282s (num_starts 26; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002396s (num_starts 4; 0.0006s/start)
tfg::populate_loc_definedness.: 0.002563s (num_starts 4; 0.0006s/start)
query:convert_to_z3.: 0.002626s (num_starts 52; 0.0001s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002638s (num_starts 1; 0.0026s/start)
get_function_tfg_map.update_val.: 0.00265s (num_starts 1; 0.0027s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002822s (num_starts 25; 0.0001s/start)
graph_identify_back_edges.: 0.003019s (num_starts 12; 0.0003s/start)
graph_identify_natural_loops.: 0.003059s (num_starts 12; 0.0003s/start)
populate_branch_affecting_locs.: 0.003127s (num_starts 4; 0.0008s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.003304s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.003308s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.003317s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.003323s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.: 0.003326s (num_starts 1; 0.0033s/start)
create_sp_version_relations_lattice_at_pc.: 0.003327s (num_starts 34; 0.0001s/start)
avail_exprs_create_submap.: 0.004115s (num_starts 75; 0.0001s/start)
find_dominators.: 0.004356s (num_starts 20; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004647s (num_starts 404; 0.0000s/start)
compute_regions.: 0.005611s (num_starts 12; 0.0005s/start)
query:simplify-z3.: 0.006329s (num_starts 106; 0.0001s/start)
graph_to_stream.: 0.006671s (num_starts 2; 0.0033s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006852s (num_starts 26; 0.0003s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.007119s (num_starts 1; 0.0071s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007673s (num_starts 20; 0.0004s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007713s (num_starts 20; 0.0004s/start)
compute_lr_status_for_expr.: 0.007835s (num_starts 29; 0.0003s/start)
tfg::tfg_preprocess.: 0.008249s (num_starts 2; 0.0041s/start)
populate_simplified_to_state.: 0.011309s (num_starts 6; 0.0019s/start)
get_function_tfg_map.opt_map.: 0.012206s (num_starts 1; 0.0122s/start)
main.2.: 0.012659s (num_starts 1; 0.0127s/start)
populate_simplified_assets.: 0.014396s (num_starts 12; 0.0012s/start)
get_tfg.: 0.014784s (num_starts 2; 0.0074s/start)
get_function_tfg_map.: 0.014863s (num_starts 2; 0.0074s/start)
populate_locs_potentially_modified_on_edge.: 0.014932s (num_starts 6; 0.0025s/start)
compute_new_lr_status_on_locs.: 0.026064s (num_starts 25; 0.0010s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.029349s (num_starts 6; 0.0049s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.029833s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.030486s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.034311s (num_starts 404; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.037132s (num_starts 48; 0.0008s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.037526s (num_starts 26; 0.0014s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.041181s (num_starts 24; 0.0017s/start)
populate_loc_liveness.: 0.048503s (num_starts 4; 0.0121s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.073023s (num_starts 71; 0.0010s/start)
tfg_postprocess_after_pointsto_analysis.: 0.083337s (num_starts 2; 0.0417s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.088171s (num_starts 2; 0.0441s/start)
ftmap_run_pointsto_analysis.: 0.147614s (num_starts 1; 0.1476s/start)
parse_consts_db.: 7.20867s (num_starts 1; 7.2087s/start)
main.: 7.40676s (num_starts 1; 7.4068s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map: Found 2 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map created 2 possibilities in group opt_map.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%fcallStart ending at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:22 : Adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Updating dst fcall edge using src fcall edge for toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Computing loop hoisting select expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Adding node L3%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:22 : opt_map.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Adding edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : opt_map.A2: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:22 : opt_map.A2: Added the 1 propagated CEs at PC L3%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:22 : opt_map.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : opt_map.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : opt_map.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:22 : Added correlation to the product-TFG opt_map.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:22 : opt_map.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:22 : opt_map.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:23 : opt_map.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : opt_map.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : product-TFG opt_map.A2: Found 2 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : product-TFG opt_map.A2 created 2 possibilities in group opt_map.A2.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%5%fcallStart --> L3%5%fcallEnd ending at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing loop hoisting select expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Adding node L3%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:23 : opt_map.A2.B2: Getting alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Found no alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Adding edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2: Propagated 8 out of 8 counter-examples across edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : opt_map.A2.B2: Added the 8 propagated CEs at PC L3%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    4 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    4 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 5 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht4-prove_trivial2-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2: Done relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2 created 1 possibilities in group opt_map.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Getting alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Found no alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Adding edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Propagated 0 out of 8 counter-examples across edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG opt_map.A2.B2.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG opt_map.A2.B2.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG opt_map.A2.B2.C1 created 1 possibilities in group opt_map.A2.B2.C1.D...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : Added correlation to the product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : opt_map.A2.B2.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 2.06s, query:smt.: 0.429831s (num_starts 33; 0.0130s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.33455s (num_starts 49; 0.0272s/start)ftmap_run_pointsto_analysis.: 0.150031s (num_starts 2; 0.0750s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 3e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 7e-06s (num_starts 10; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 8e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 9e-06s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.6e-05s (num_starts 20; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.6e-05s (num_starts 6; 0.0000s/start)
get_intersected_lr_status.: 2.5e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 2.6e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.3e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 3.8e-05s (num_starts 22; 0.0000s/start)
ce_perform_memory_fuzzing.: 4.2e-05s (num_starts 30; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 4.5e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 5.3e-05s (num_starts 78; 0.0000s/start)
sp_version_relations_val_t::meet.: 6e-05s (num_starts 133; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 6.3e-05s (num_starts 49; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7.2e-05s (num_starts 49; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 7.3e-05s (num_starts 2; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.4e-05s (num_starts 3; 0.0000s/start)
get_lr_status_for_loc_ids.: 8.7e-05s (num_starts 21; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.4e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 9.8e-05s (num_starts 108; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000115s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000118s (num_starts 59; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000118s (num_starts 16; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.00012s (num_starts 27; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.00012s (num_starts 15; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000134s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.000138s (num_starts 132; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000142s (num_starts 8; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000145s (num_starts 6; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000146s (num_starts 39; 0.0000s/start)
compute_sprel_relations.: 0.000158s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000167s (num_starts 2; 0.0001s/start)
get_sprel_map_pair.: 0.00017s (num_starts 43; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000171s (num_starts 15; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000185s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000189s (num_starts 23; 0.0000s/start)
populate_locid2expr_map.: 0.000238s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000247s (num_starts 39; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000257s (num_starts 10; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00026s (num_starts 1; 0.0003s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000276s (num_starts 12; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.000294s (num_starts 3; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000294s (num_starts 4; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.0003s (num_starts 17; 0.0000s/start)
create_closure_matrix.: 0.000333s (num_starts 44; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000357s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000376s (num_starts 1; 0.0004s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000399s (num_starts 2; 0.0002s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000417s (num_starts 17; 0.0000s/start)
compute_bv_bool_eqclass.: 0.00042s (num_starts 2; 0.0002s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000422s (num_starts 94; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000423s (num_starts 35; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000435s (num_starts 93; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000454s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000468s (num_starts 1; 0.0005s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000469s (num_starts 80; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000484s (num_starts 6; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000489s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000499s (num_starts 1; 0.0005s/start)
graph_locs_add_all_specvars.: 0.000512s (num_starts 2; 0.0003s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000514s (num_starts 14; 0.0000s/start)
proof_query_is_trivial.: 0.00052s (num_starts 49; 0.0000s/start)
set_result_and_counter_example.: 0.000528s (num_starts 33; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000539s (num_starts 37; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000545s (num_starts 1; 0.0005s/start)
graph_with_guessing_sync_preds.: 0.00056s (num_starts 49; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000581s (num_starts 93; 0.0000s/start)
expr_represents_llvm_undef.: 0.000599s (num_starts 140; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000626s (num_starts 1; 0.0006s/start)
pth_collect_preds_using_atom_func.: 0.000627s (num_starts 21; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000629s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000632s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000642s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000675s (num_starts 1; 0.0007s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000682s (num_starts 17; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000683s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000687s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000696s (num_starts 1; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000704s (num_starts 4; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000771s (num_starts 16; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000832s (num_starts 21; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000833s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-trivial.: 0.000873s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000876s (num_starts 1; 0.0009s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000898s (num_starts 6; 0.0001s/start)
removeMostPromising.: 0.000915s (num_starts 13; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000999s (num_starts 1; 0.0010s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001003s (num_starts 4; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00101s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001012s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001016s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.00102s (num_starts 1; 0.0010s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00103s (num_starts 29; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001031s (num_starts 39; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.001039s (num_starts 6; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.00105s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001084s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001085s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001088s (num_starts 1; 0.0011s/start)
compute_ssa_vars_renaming_map.: 0.001114s (num_starts 2; 0.0006s/start)
identify_address_taken_local_variables.: 0.001134s (num_starts 2; 0.0006s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001139s (num_starts 29; 0.0000s/start)
graph_visit_exprs.: 0.001152s (num_starts 3; 0.0004s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001164s (num_starts 3; 0.0004s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.001192s (num_starts 43; 0.0000s/start)
collect_assumes_around_edge.: 0.001194s (num_starts 4; 0.0003s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.001212s (num_starts 1; 0.0012s/start)
graph_visit_exprs_and_keys.: 0.001223s (num_starts 2; 0.0006s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001252s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001253s (num_starts 3; 0.0004s/start)
compute_vars_reaching_definitions.: 0.001274s (num_starts 2; 0.0006s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001278s (num_starts 18; 0.0001s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001289s (num_starts 6; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001293s (num_starts 18; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001297s (num_starts 43; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001305s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001309s (num_starts 2; 0.0007s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001331s (num_starts 35; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001487s (num_starts 6; 0.0002s/start)
propagate_nodece_across_edge.: 0.001536s (num_starts 3; 0.0005s/start)
populate_transitive_closure.: 0.001574s (num_starts 15; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.001602s (num_starts 39; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.001613s (num_starts 39; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001704s (num_starts 18; 0.0001s/start)
populate_branch_affecting_locs.: 0.001715s (num_starts 3; 0.0006s/start)
ldr_decomposition.: 0.001734s (num_starts 27; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001745s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.001857s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-trivial.: 0.001955s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.00196s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001981s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.001988s (num_starts 2; 0.0010s/start)
generate_aliasing_constraints_from_expr.: 0.002076s (num_starts 353; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002083s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002087s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002125s (num_starts 2; 0.0011s/start)
construct_linear_combination_exprs.: 0.002147s (num_starts 45; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.002254s (num_starts 67; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.002258s (num_starts 22; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.002346s (num_starts 42; 0.0001s/start)
graph_identify_back_edges.: 0.002422s (num_starts 24; 0.0001s/start)
find_dominators.: 0.002441s (num_starts 28; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002482s (num_starts 66; 0.0000s/start)
graph_identify_natural_loops.: 0.002488s (num_starts 24; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002512s (num_starts 80; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002528s (num_starts 3; 0.0008s/start)
bv_const_ref_map2expr_map.: 0.002546s (num_starts 45; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002628s (num_starts 3; 0.0009s/start)
cg_src_dst_tfg_copy.: 0.002886s (num_starts 1; 0.0029s/start)
create_sp_version_relations_lattice_at_pc.: 0.002901s (num_starts 44; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002964s (num_starts 4; 0.0007s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003019s (num_starts 1; 0.0030s/start)
expr_linear_relation_holds::visit.var.: 0.003435s (num_starts 149; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.003759s (num_starts 80; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.003833s (num_starts 1; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.003839s (num_starts 1; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.003844s (num_starts 1; 0.0038s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003895s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.003917s (num_starts 4; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004049s (num_starts 1; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004054s (num_starts 1; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.004057s (num_starts 1; 0.0041s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.004092s (num_starts 39; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.004135s (num_starts 78; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.004504s (num_starts 2; 0.0023s/start)
get_next_potential_correlations.: 0.004553s (num_starts 4; 0.0011s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004592s (num_starts 198; 0.0000s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.004671s (num_starts 2; 0.0023s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005252s (num_starts 35; 0.0002s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005293s (num_starts 39; 0.0001s/start)
do_ssa_transformation.: 0.005388s (num_starts 2; 0.0027s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005456s (num_starts 503; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.005466s (num_starts 89; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005656s (num_starts 142; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005658s (num_starts 110; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.005747s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005752s (num_starts 2; 0.0029s/start)
compute_regions.: 0.005762s (num_starts 24; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005762s (num_starts 2; 0.0029s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.006383s (num_starts 4; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.00699s (num_starts 1; 0.0070s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.00708s (num_starts 35; 0.0002s/start)
ldr_decompose_and_linear_solve.: 0.007192s (num_starts 27; 0.0003s/start)
lhs_set_sort.: 0.007281s (num_starts 39; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.007382s (num_starts 1; 0.0074s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.007384s (num_starts 1; 0.0074s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.00739s (num_starts 1; 0.0074s/start)
bv_linear_solve.: 0.007724s (num_starts 27; 0.0003s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.007839s (num_starts 8; 0.0010s/start)
query:bv_solve.: 0.007926s (num_starts 27; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-trivial.: 0.00798s (num_starts 2; 0.0040s/start)
collect_inductive_preds_around_path.: 0.008096s (num_starts 49; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.008127s (num_starts 73; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.008325s (num_starts 35; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-trivial.: 0.008502s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.008507s (num_starts 1; 0.0085s/start)
populate_simplified_to_state.: 0.008888s (num_starts 3; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009598s (num_starts 1; 0.0096s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009598s (num_starts 1; 0.0096s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009598s (num_starts 1; 0.0096s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009598s (num_starts 1; 0.0096s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.0096s (num_starts 1; 0.0096s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.009618s (num_starts 1; 0.0096s/start)
counter_example_falsifies_preds.: 0.00962s (num_starts 43; 0.0002s/start)
collect_assumes_around_path_helper.: 0.009649s (num_starts 93; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.009807s (num_starts 3; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.009812s (num_starts 3; 0.0033s/start)
populate_simplified_assets.: 0.009904s (num_starts 6; 0.0017s/start)
graph_with_paths::collect_assumes_around_path.: 0.009911s (num_starts 93; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.010127s (num_starts 27; 0.0004s/start)
counter_example_satisfies_preds.: 0.01013s (num_starts 210; 0.0000s/start)
avail_exprs_create_submap.: 0.01015s (num_starts 105; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010226s (num_starts 1; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010228s (num_starts 1; 0.0102s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.010243s (num_starts 73; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities..: 0.010933s (num_starts 3; 0.0036s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.010946s (num_starts 3; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011129s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01113s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.011134s (num_starts 1; 0.0111s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.011155s (num_starts 379; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011544s (num_starts 1; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011546s (num_starts 1; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011549s (num_starts 1; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond.: 0.011552s (num_starts 1; 0.0116s/start)
bvsolve_cache_query.miss1.: 0.01166s (num_starts 27; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011714s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011728s (num_starts 1; 0.0117s/start)
query:convert_to_z3.: 0.011731s (num_starts 190; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.011736s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011823s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011827s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011829s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011833s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.011838s (num_starts 1; 0.0118s/start)
bvsolve_cache_query.: 0.012024s (num_starts 27; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012192s (num_starts 1; 0.0122s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012194s (num_starts 1; 0.0122s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.012233s (num_starts 2; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012474s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012477s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012482s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012488s (num_starts 1; 0.0125s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.012549s (num_starts 3; 0.0042s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.012674s (num_starts 1; 0.0127s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.012679s (num_starts 26; 0.0005s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.012757s (num_starts 26; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012772s (num_starts 1; 0.0128s/start)
graph_to_stream.: 0.01291s (num_starts 4; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013052s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013054s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013061s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013067s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.013077s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear.: 0.013083s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-trivial.: 0.013202s (num_starts 4; 0.0033s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.013322s (num_starts 1; 0.0133s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.013779s (num_starts 2; 0.0069s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.01403s (num_starts 25; 0.0006s/start)
get_unrolled_paths_from.: 0.014366s (num_starts 25; 0.0006s/start)
collect_aliasing_constraints_around_path_helper.: 0.014771s (num_starts 135; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014837s (num_starts 1; 0.0148s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.014844s (num_starts 1; 0.0148s/start)
solve_for_bv_points.: 0.014866s (num_starts 27; 0.0006s/start)
collect_aliasing_constraints_around_path.: 0.015143s (num_starts 83; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.015145s (num_starts 6; 0.0025s/start)
query:convert_from_z3.: 0.015167s (num_starts 190; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.015462s (num_starts 2; 0.0077s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.01547s (num_starts 2; 0.0077s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015484s (num_starts 1; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.015493s (num_starts 1; 0.0155s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.015599s (num_starts 2; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.015914s (num_starts 2; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.016s (num_starts 3; 0.0053s/start)
check_wfconds_on_edge.L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0.016661s (num_starts 2; 0.0083s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.017337s (num_starts 4; 0.0043s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart.: 0.018105s (num_starts 2; 0.0091s/start)
predicate_canonicalized.: 0.018541s (num_starts 45; 0.0004s/start)
counter_example_evaluate_preds.: 0.018998s (num_starts 253; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019772s (num_starts 1; 0.0198s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019774s (num_starts 1; 0.0198s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.019781s (num_starts 1; 0.0198s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown.: 0.019786s (num_starts 1; 0.0198s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.020075s (num_starts 4; 0.0050s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.020396s (num_starts 35; 0.0006s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.020482s (num_starts 27; 0.0008s/start)
graph_ec_apply_trans_funs_helper.0.: 0.020534s (num_starts 210; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02176s (num_starts 2; 0.0109s/start)
graph_ec_apply_trans_funs_helper.: 0.02222s (num_starts 216; 0.0001s/start)
compute_expr_eqclasses_at_pc.: 0.022305s (num_starts 2; 0.0112s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.022683s (num_starts 216; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.022856s (num_starts 4; 0.0057s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.023004s (num_starts 212; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.023236s (num_starts 49; 0.0005s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.023431s (num_starts 94; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.023624s (num_starts 212; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.024684s (num_starts 4; 0.0062s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.024798s (num_starts 73; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024948s (num_starts 2; 0.0125s/start)
put_smtlib_string_in_file.: 0.025319s (num_starts 66; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025513s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025519s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.025565s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.025572s (num_starts 2; 0.0128s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.025954s (num_starts 503; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02643s (num_starts 1; 0.0264s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026433s (num_starts 1; 0.0264s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026442s (num_starts 1; 0.0264s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.02689s (num_starts 4; 0.0067s/start)
cg_add_node.: 0.027035s (num_starts 4; 0.0068s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.02745s (num_starts 583; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.02759s (num_starts 4; 0.0069s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.031934s (num_starts 503; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03215s (num_starts 1; 0.0321s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032158s (num_starts 1; 0.0322s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.032168s (num_starts 1; 0.0322s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess.: 0.032172s (num_starts 1; 0.0322s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.032427s (num_starts 1; 0.0324s/start)
compute_z3_expr.: 0.033024s (num_starts 223; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033589s (num_starts 3; 0.0112s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.033711s (num_starts 33; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.033842s (num_starts 2; 0.0169s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.033861s (num_starts 2; 0.0169s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.033868s (num_starts 2; 0.0169s/start)
create_new_corr_graph_edge.new_node.: 0.033959s (num_starts 3; 0.0113s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.033991s (num_starts 33; 0.0010s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.034077s (num_starts 22; 0.0015s/start)
gen_pred_from_coeff_row.simplify.: 0.034495s (num_starts 45; 0.0008s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034589s (num_starts 2; 0.0173s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034593s (num_starts 2; 0.0173s/start)
create_new_corr_graph_edge.: 0.034598s (num_starts 4; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.034646s (num_starts 2; 0.0173s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.034654s (num_starts 2; 0.0173s/start)
query:simplify-z3.: 0.037712s (num_starts 398; 0.0001s/start)
populate_loc_liveness.: 0.039764s (num_starts 3; 0.0133s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040328s (num_starts 3; 0.0134s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04326s (num_starts 2; 0.0216s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043269s (num_starts 2; 0.0216s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.043327s (num_starts 2; 0.0217s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.043487s (num_starts 6; 0.0072s/start)
guarded_predicate_set_and.: 0.04536s (num_starts 39; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.045439s (num_starts 4; 0.0114s/start)
decide_hoare_triple_helper;-trivial.: 0.046353s (num_starts 17; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.047345s (num_starts 4; 0.0118s/start)
parse_z3_model.: 0.049573s (num_starts 11; 0.0045s/start)
tfg_relax_pointsto_vals_on_edge.: 0.051448s (num_starts 18; 0.0029s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.051598s (num_starts 2; 0.0258s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053081s (num_starts 4; 0.0133s/start)
check_wfconds_on_edge.L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.054283s (num_starts 2; 0.0271s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.05546s (num_starts 9; 0.0062s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.055817s (num_starts 39; 0.0014s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.055935s (num_starts 1; 0.0559s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056748s (num_starts 3; 0.0189s/start)
tfg_postprocess_after_pointsto_analysis.: 0.056991s (num_starts 2; 0.0285s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.059665s (num_starts 39; 0.0015s/start)
gen_pred_from_coeff_row.: 0.05998s (num_starts 45; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear.: 0.061146s (num_starts 6; 0.0102s/start)
compute_preds_for_bv_points.: 0.06132s (num_starts 12; 0.0051s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.061413s (num_starts 14; 0.0044s/start)
parse_cvc4_model.: 0.063196s (num_starts 11; 0.0057s/start)
compute_lr_status_for_expr.: 0.065482s (num_starts 87; 0.0008s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.065554s (num_starts 78; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065686s (num_starts 1; 0.0657s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065691s (num_starts 1; 0.0657s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065694s (num_starts 1; 0.0657s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.065704s (num_starts 1; 0.0657s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate.: 0.065707s (num_starts 1; 0.0657s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.065715s (num_starts 1; 0.0657s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.065717s (num_starts 78; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066437s (num_starts 1; 0.0664s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066439s (num_starts 1; 0.0664s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.066446s (num_starts 1; 0.0664s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false.: 0.06645s (num_starts 1; 0.0664s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown.: 0.070041s (num_starts 7; 0.0100s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.074023s (num_starts 17; 0.0044s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.082009s (num_starts 18; 0.0046s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082099s (num_starts 1; 0.0821s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08211s (num_starts 1; 0.0821s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083871s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083874s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083877s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.083891s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false.: 0.083896s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.083905s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.084091s (num_starts 3; 0.0280s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.086118s (num_starts 5; 0.0172s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.08633s (num_starts 17; 0.0051s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.087418s (num_starts 49; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087539s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087541s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.087548s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.087551s (num_starts 1; 0.0876s/start)
apply_mask_and_overlay_array_constant.: 0.092069s (num_starts 49; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092168s (num_starts 1; 0.0922s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092172s (num_starts 1; 0.0922s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092174s (num_starts 1; 0.0922s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.092182s (num_starts 1; 0.0922s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false.: 0.092186s (num_starts 1; 0.0922s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.092194s (num_starts 1; 0.0922s/start)
compute_new_lr_status_on_locs.: 0.09312s (num_starts 35; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.093829s (num_starts 2; 0.0469s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095579s (num_starts 2; 0.0478s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown.: 0.095839s (num_starts 4; 0.0240s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.10022s (num_starts 4; 0.0251s/start)
evaluate_function_call.: 0.10111s (num_starts 14; 0.0072s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103984s (num_starts 2; 0.0520s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.108767s (num_starts 4; 0.0272s/start)
parse_yices_model.: 0.114645s (num_starts 11; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115872s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115884s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115888s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.115905s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate.: 0.115913s (num_starts 1; 0.1159s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.115924s (num_starts 1; 0.1159s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.125779s (num_starts 42; 0.0030s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.137986s (num_starts 30; 0.0046s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.138265s (num_starts 22; 0.0063s/start)
check_wfconds_on_edge.: 0.140736s (num_starts 8; 0.0176s/start)
ftmap_run_pointsto_analysis.: 0.150031s (num_starts 2; 0.0750s/start)
tfg_run_pointsto_analysis.: 0.150272s (num_starts 2; 0.0751s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.153972s (num_starts 2; 0.0770s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.154018s (num_starts 2; 0.0770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.154222s (num_starts 2; 0.0771s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.154229s (num_starts 2; 0.0771s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.154247s (num_starts 2; 0.0771s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown.: 0.154256s (num_starts 2; 0.0771s/start)
tfg_populate_structs_after_ssa_construction.: 0.157415s (num_starts 2; 0.0787s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.164562s (num_starts 2; 0.0823s/start)
counter_example_translate_on_edge_composition_helper.: 0.168446s (num_starts 224; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.169679s (num_starts 3; 0.0566s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.169781s (num_starts 3; 0.0566s/start)
check_equivalence_proof.: 0.171263s (num_starts 1; 0.1713s/start)
corr_graph::add_edge().: 0.171789s (num_starts 4; 0.0429s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.172715s (num_starts 4; 0.0432s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd).: 0.180883s (num_starts 12; 0.0151s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.181565s (num_starts 2; 0.0908s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.181628s (num_starts 2; 0.0908s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.185324s (num_starts 5; 0.0371s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.191257s (num_starts 7; 0.0273s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.205639s (num_starts 1; 0.2056s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.207465s (num_starts 4; 0.0519s/start)
corr_graph_add_correlation.: 0.207626s (num_starts 4; 0.0519s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.214052s (num_starts 4; 0.0535s/start)
read_counter_examples_from_channel.: 0.229117s (num_starts 11; 0.0208s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.234737s (num_starts 24; 0.0098s/start)
check_preds_on_edge_compositions.: 0.250322s (num_starts 12; 0.0209s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.271659s (num_starts 5; 0.0543s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.271672s (num_starts 5; 0.0543s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.280225s (num_starts 6; 0.0467s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear.: 0.280248s (num_starts 6; 0.0467s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.282544s (num_starts 244; 0.0012s/start)
ce_reconcile_sorts_and_values.: 0.28288s (num_starts 33; 0.0086s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.305519s (num_starts 1; 0.3055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.311918s (num_starts 8; 0.0390s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.324545s (num_starts 8; 0.0406s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.32768s (num_starts 10; 0.0328s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.328109s (num_starts 1; 0.3281s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.330017s (num_starts 4; 0.0825s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.330104s (num_starts 4; 0.0825s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.336897s (num_starts 10; 0.0337s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.33997s (num_starts 14; 0.0243s/start)
decide_hoare_triple.: 0.349739s (num_starts 7; 0.0500s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.354522s (num_starts 14; 0.0253s/start)
dst_edge_composition_proves_false.: 0.365454s (num_starts 4; 0.0914s/start)
get_next_dst_edge_composition_to_correlate.: 0.375685s (num_starts 5; 0.0751s/start)
query:smt.: 0.429831s (num_starts 33; 0.0130s/start)
spawn_smt_query.: 0.659366s (num_starts 33; 0.0200s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.666177s (num_starts 16; 0.0416s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart).: 0.682363s (num_starts 18; 0.0379s/start)
update_invariant_state_for_edges.: 1.02892s (num_starts 4; 0.2572s/start)
cg_check_new_cg_ec.: 1.03593s (num_starts 4; 0.2590s/start)
correl_entry_apply.: 1.03602s (num_starts 4; 0.2590s/start)
solver_provable.: 1.03903s (num_starts 39; 0.0266s/start)
expr_is_provable.: 1.04919s (num_starts 39; 0.0269s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.0499s (num_starts 39; 0.0269s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.05204s (num_starts 39; 0.0270s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.0547s (num_starts 39; 0.0270s/start)
solver_satisfiable-cache-miss.: 1.06076s (num_starts 33; 0.0321s/start)
solver_satisfiable.: 1.06102s (num_starts 40; 0.0265s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.10329s (num_starts 39; 0.0283s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.10764s (num_starts 39; 0.0284s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.10837s (num_starts 39; 0.0284s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.15802s (num_starts 39; 0.0297s/start)
prove.: 1.15829s (num_starts 39; 0.0297s/start)
prove_spawn_and_join_helper.: 1.15849s (num_starts 39; 0.0297s/start)
prove_spawn_and_join.: 1.26883s (num_starts 39; 0.0325s/start)
prove_wrapper.proof_query_not_trivial.: 1.27318s (num_starts 39; 0.0326s/start)
prove_wrapper.: 1.28523s (num_starts 49; 0.0262s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.28622s (num_starts 32; 0.0402s/start)
decide_hoare_triple_check_ub.: 1.31151s (num_starts 49; 0.0268s/start)
decide_hoare_triple_helper.: 1.33455s (num_starts 49; 0.0272s/start)
expandProductCFG.: 1.4169s (num_starts 5; 0.2834s/start)
decide_hoare_triple_with_alias_cons.: 1.47325s (num_starts 49; 0.0301s/start)
bestFirstSearch.: 1.67219s (num_starts 1; 1.6722s/start)
Time taken for equivalence check.: 1.84694s (num_starts 1; 1.8469s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 8
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 8
# of paths expanded.: 4
# of queries to linear solver.: 27
# of smt-solver-queries.: 33
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 2
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 2
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 2
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 11
smt-queries-yices-sat.: 11
smt-queries-z3-sat.: 11
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 4
final-CG-counterexamples-total-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 8
final-CG-counterexamples-total-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 8
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 12
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.24
final-CG-time-to-total-time-ratio.: 0.74
query-time-to-total-time-ratio.: 0.23

Context stats:
exprs: count: 142153
sorts: count: 151
num_proof_queries: 39
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3345
	        hit ratio:	0.950374
m_simplify_solver:
	----------- total:	763
	        hit ratio:	0.727392
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	52
	        hit ratio:	0.923077
m_z3_solver_substitution:
	----------- total:	208
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	208
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	4
	        hit ratio:	0.75
m_expr_size:
	----------- total:	1701
	        hit ratio:	0.8495
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	4128
	        hit ratio:	0.623304
m_sort_dfa_canonicalize:
	----------- total:	19848
	        hit ratio:	0.999244
m_expr_convert_to_iexpr:
	----------- total:	216
	        hit ratio:	0.657407

z3_solver expr_query_cache entry size: 33
	----------- total:	40
	             hits:	7
	        hit ratio:	0.175
histogram (time taken by solver in ms):
[ 2.5080,  3.3551) (avg.  2.7730)        : 2
[ 3.3551,  4.4883) (avg.  3.9352)        : 6
[ 4.4883,  6.0042) (avg.  5.0061)        : 13
[ 6.0042,  8.0321) (avg.  6.1370)        : 1
[ 8.0321, 10.7449) (avg.  0.0000)        : 0
[10.7449, 14.3740) (avg.  0.0000)        : 0
[14.3740, 19.2289) (avg. 17.6630)        : 1
[19.2289, 25.7234) (avg. 24.2413)        : 3
[25.7234, 34.4115) (avg. 29.2432)        : 4
[34.4115, 46.0340) (avg. 40.6047)        : 3
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  51) (avg.  40)                    : 1
[ 51,  61) (avg.   0)                    : 0
[ 61,  71) (avg.   0)                    : 0
[ 71,  81) (avg.   0)                    : 0
[ 81,  91) (avg.   0)                    : 0
[ 91, 101) (avg.  99)                    : 3
[101, 111) (avg. 107)                    : 12
[111, 121) (avg. 115)                    : 14
[121, 131) (avg. 126)                    : 1
[131, 141) (avg. 131)                    : 2
Top 10 highest time taking queries:
1. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.038s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-10-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.038s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.029s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0
6. [0.028s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.027s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0
8. [0.024s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallStart_Lif.then%2%fcallStart.dstToPC.Lif.then%2%fcallEnd.from_pcL3%5%.0
9. [0.024s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL3%5%fcallEnd_Lif.then.0
10. [0.024s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0

<MSG>0:24 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:24 : Computing equivalence for function: update_val...</MSG>
<MSG>0:24 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:24 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:24 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:24 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:24 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.19s, query:smt.: 0.060926s (num_starts 3; 0.0203s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.105968s (num_starts 4; 0.0265s/start)ftmap_run_pointsto_analysis.: 0.016508s (num_starts 2; 0.0083s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 2e-06s (num_starts 1; 0.0000s/start)
get_paths_with_matching_to_pc.: 2e-06s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 4e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 3; 0.0000s/start)
collect_dst_to_src_submap_preds.: 4e-06s (num_starts 4; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 4e-06s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 5e-06s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::meet.: 5e-06s (num_starts 9; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 6e-06s (num_starts 3; 0.0000s/start)
proof_query_is_trivial_helper.: 7e-06s (num_starts 4; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 9e-06s (num_starts 3; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 1.3e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 1.4e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 1.5e-05s (num_starts 13; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 1.5e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.6e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.7e-05s (num_starts 2; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 1.7e-05s (num_starts 13; 0.0000s/start)
lr_status_meet.: 1.9e-05s (num_starts 21; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2e-05s (num_starts 1; 0.0000s/start)
graph_with_guessing_sync_preds.: 2e-05s (num_starts 4; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 2e-05s (num_starts 3; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 2.1e-05s (num_starts 7; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.2e-05s (num_starts 1; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 2.3e-05s (num_starts 1; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.6e-05s (num_starts 2; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.7e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 2.9e-05s (num_starts 13; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.1e-05s (num_starts 1; 0.0000s/start)
proof_query_is_trivial.: 3.2e-05s (num_starts 4; 0.0000s/start)
def_analysis::xfer_and_meet.: 3.3e-05s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 3.3e-05s (num_starts 25; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.9e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 3.9e-05s (num_starts 3; 0.0000s/start)
graph_locs_add_all_exvregs.: 4.3e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 4.5e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 4.9e-05s (num_starts 6; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 5.6e-05s (num_starts 7; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 6.8e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 6.9e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 7e-05s (num_starts 2; 0.0000s/start)
get_sprel_map_pair_at_pc.: 7.4e-05s (num_starts 3; 0.0000s/start)
graph_locs_add_all_local_vars.: 7.4e-05s (num_starts 2; 0.0000s/start)
removeMostPromising.: 7.4e-05s (num_starts 4; 0.0000s/start)
pth_collect_preds_using_atom_func.: 7.7e-05s (num_starts 5; 0.0000s/start)
set_result_and_counter_example.: 7.8e-05s (num_starts 3; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 8.2e-05s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.4e-05s (num_starts 11; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 8.5e-05s (num_starts 18; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 8.7e-05s (num_starts 2; 0.0000s/start)
tfg_edge_composition_get_assumes.: 8.8e-05s (num_starts 5; 0.0000s/start)
tfg::collect_assumes_around_edge.: 9.4e-05s (num_starts 5; 0.0000s/start)
collect_inductive_preds_around_path.: 9.7e-05s (num_starts 4; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.9e-05s (num_starts 4; 0.0000s/start)
collect_assumes_around_edge.: 0.000103s (num_starts 1; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000107s (num_starts 2; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.000111s (num_starts 51; 0.0000s/start)
compute_sprel_relations.: 0.000113s (num_starts 2; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000122s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000126s (num_starts 2; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000128s (num_starts 1; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.00013s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000133s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000139s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000139s (num_starts 1; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000147s (num_starts 7; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000156s (num_starts 1; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000157s (num_starts 2; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000159s (num_starts 6; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000161s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000168s (num_starts 1; 0.0002s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000176s (num_starts 3; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000178s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000179s (num_starts 2; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000186s (num_starts 16; 0.0000s/start)
identify_address_taken_local_variables.: 0.00019s (num_starts 1; 0.0002s/start)
populate_simplified_to_state.: 0.000191s (num_starts 3; 0.0001s/start)
populate_branch_affecting_locs.: 0.000192s (num_starts 3; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.000194s (num_starts 1; 0.0002s/start)
counter_example_falsifies_preds.: 0.000206s (num_starts 3; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000221s (num_starts 3; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.000224s (num_starts 6; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000229s (num_starts 4; 0.0001s/start)
expr_represents_llvm_undef.: 0.000233s (num_starts 29; 0.0000s/start)
populate_transitive_closure.: 0.000242s (num_starts 11; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000266s (num_starts 11; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000279s (num_starts 3; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.000283s (num_starts 21; 0.0000s/start)
compute_vars_reaching_definitions.: 0.000284s (num_starts 2; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.000285s (num_starts 9; 0.0000s/start)
lhs_set_sort.: 0.000294s (num_starts 3; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000295s (num_starts 3; 0.0001s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000305s (num_starts 1; 0.0003s/start)
graph_visit_exprs_and_keys.: 0.000312s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000313s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000313s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000315s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000316s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000318s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00032s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.000323s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000325s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000328s (num_starts 1; 0.0003s/start)
graph_visit_exprs.: 0.000328s (num_starts 3; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000336s (num_starts 4; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000345s (num_starts 4; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000348s (num_starts 6; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000356s (num_starts 6; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000362s (num_starts 1; 0.0004s/start)
populate_simplified_assets.: 0.000375s (num_starts 6; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000381s (num_starts 5; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000382s (num_starts 3; 0.0001s/start)
find_dominators.: 0.000385s (num_starts 19; 0.0000s/start)
counter_example_satisfies_preds.: 0.000399s (num_starts 18; 0.0000s/start)
tfg::populate_loc_definedness.: 0.000418s (num_starts 3; 0.0001s/start)
graph_identify_back_edges.: 0.000422s (num_starts 15; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000429s (num_starts 8; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.000442s (num_starts 2; 0.0002s/start)
graph_identify_natural_loops.: 0.000455s (num_starts 15; 0.0000s/start)
get_next_potential_correlations.: 0.000456s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.00046s (num_starts 5; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.000462s (num_starts 22; 0.0000s/start)
create_new_corr_graph_edge.new_node.: 0.000488s (num_starts 1; 0.0005s/start)
collect_aliasing_constraints_around_path.: 0.000505s (num_starts 14; 0.0000s/start)
collect_assumes_around_path_helper.: 0.00051s (num_starts 13; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.000533s (num_starts 13; 0.0000s/start)
cg_add_node.: 0.000535s (num_starts 2; 0.0003s/start)
create_new_corr_graph_edge.: 0.000537s (num_starts 1; 0.0005s/start)
populate_locs_potentially_modified_on_edge.: 0.000551s (num_starts 3; 0.0002s/start)
counter_example_evaluate_preds.: 0.00056s (num_starts 21; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.000568s (num_starts 12; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.000577s (num_starts 3; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.000597s (num_starts 12; 0.0000s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000618s (num_starts 12; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000648s (num_starts 12; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.000673s (num_starts 12; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.000688s (num_starts 29; 0.0000s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000695s (num_starts 29; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.000778s (num_starts 6; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000855s (num_starts 4; 0.0002s/start)
get_unrolled_paths_from.: 0.000924s (num_starts 6; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000925s (num_starts 117; 0.0000s/start)
edge_composition_apply_trans_funs_on_pred.: 0.000935s (num_starts 4; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000936s (num_starts 3; 0.0003s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.000993s (num_starts 4; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.001026s (num_starts 6; 0.0002s/start)
compute_regions.: 0.001032s (num_starts 15; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001042s (num_starts 6; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001057s (num_starts 6; 0.0002s/start)
put_smtlib_string_in_file.: 0.001168s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.001433s (num_starts 2; 0.0007s/start)
query:convert_to_z3.: 0.001708s (num_starts 32; 0.0001s/start)
compute_lr_status_for_expr.: 0.001868s (num_starts 25; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001906s (num_starts 1; 0.0019s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001908s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001961s (num_starts 21; 0.0001s/start)
compute_z3_expr.: 0.001978s (num_starts 35; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.002202s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002203s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.002206s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.002208s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002212s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;-trivial.: 0.00257s (num_starts 2; 0.0013s/start)
query:convert_from_z3.: 0.00269s (num_starts 32; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002876s (num_starts 4; 0.0007s/start)
compute_new_lr_status_on_locs.: 0.002878s (num_starts 4; 0.0007s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.003002s (num_starts 6; 0.0005s/start)
avail_exprs_create_submap.: 0.003183s (num_starts 12; 0.0003s/start)
check_equivalence_proof.: 0.003535s (num_starts 1; 0.0035s/start)
counter_example_translate_on_edge_composition_helper.: 0.0042s (num_starts 21; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.004238s (num_starts 124; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.004262s (num_starts 2; 0.0021s/start)
parse_yices_model.: 0.004272s (num_starts 2; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.004431s (num_starts 117; 0.0000s/start)
parse_z3_model.: 0.004541s (num_starts 2; 0.0023s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004769s (num_starts 4; 0.0012s/start)
graph_to_stream.: 0.004882s (num_starts 4; 0.0012s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.005157s (num_starts 3; 0.0017s/start)
parse_cvc4_model.: 0.005265s (num_starts 2; 0.0026s/start)
apply_mask_and_overlay_array_constant.: 0.005425s (num_starts 3; 0.0018s/start)
populate_loc_liveness.: 0.005574s (num_starts 3; 0.0019s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.005664s (num_starts 117; 0.0000s/start)
corr_graph::add_edge().: 0.005792s (num_starts 1; 0.0058s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.006018s (num_starts 2; 0.0030s/start)
guarded_predicate_set_and.: 0.006505s (num_starts 3; 0.0022s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.006535s (num_starts 1; 0.0065s/start)
corr_graph_add_correlation.: 0.006571s (num_starts 1; 0.0066s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.006611s (num_starts 1; 0.0066s/start)
query:simplify-z3.: 0.0067s (num_starts 64; 0.0001s/start)
tfg_relax_pointsto_vals_on_edge.: 0.007459s (num_starts 2; 0.0037s/start)
tfg_postprocess_after_pointsto_analysis.: 0.007763s (num_starts 2; 0.0039s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.007792s (num_starts 1; 0.0078s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.01423s (num_starts 3; 0.0047s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.014322s (num_starts 3; 0.0048s/start)
read_counter_examples_from_channel.: 0.014397s (num_starts 2; 0.0072s/start)
ftmap_run_pointsto_analysis.: 0.016508s (num_starts 2; 0.0083s/start)
tfg_run_pointsto_analysis.: 0.01667s (num_starts 2; 0.0083s/start)
tfg_populate_structs_after_ssa_construction.: 0.01801s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018287s (num_starts 1; 0.0183s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01829s (num_starts 1; 0.0183s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018292s (num_starts 1; 0.0183s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018296s (num_starts 1; 0.0183s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018297s (num_starts 1; 0.0183s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.020518s (num_starts 2; 0.0103s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.020524s (num_starts 2; 0.0103s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.020528s (num_starts 2; 0.0103s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.020532s (num_starts 2; 0.0103s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.020538s (num_starts 2; 0.0103s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.020697s (num_starts 2; 0.0103s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.020721s (num_starts 2; 0.0104s/start)
update_invariant_state_for_edges.: 0.020967s (num_starts 1; 0.0210s/start)
cg_check_new_cg_ec.: 0.021016s (num_starts 1; 0.0210s/start)
correl_entry_apply.: 0.021033s (num_starts 1; 0.0210s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.021382s (num_starts 2; 0.0107s/start)
check_wfconds_on_edge.: 0.021396s (num_starts 2; 0.0107s/start)
check_preds_on_edge_compositions.: 0.021507s (num_starts 3; 0.0072s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.026402s (num_starts 34; 0.0008s/start)
ce_reconcile_sorts_and_values.: 0.027098s (num_starts 6; 0.0045s/start)
query:smt.: 0.060926s (num_starts 3; 0.0203s/start)
spawn_smt_query.: 0.075374s (num_starts 3; 0.0251s/start)
solver_provable.: 0.078299s (num_starts 3; 0.0261s/start)
expr_is_provable.: 0.078748s (num_starts 3; 0.0262s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.0788s (num_starts 3; 0.0263s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.078944s (num_starts 3; 0.0263s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.079018s (num_starts 3; 0.0263s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084923s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084926s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084927s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084929s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084929s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.084936s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.08494s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.084942s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.084945s (num_starts 1; 0.0849s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.08528s (num_starts 2; 0.0426s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.085719s (num_starts 3; 0.0286s/start)
decide_hoare_triple.: 0.085864s (num_starts 2; 0.0429s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.085933s (num_starts 3; 0.0286s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.085979s (num_starts 3; 0.0287s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.088221s (num_starts 3; 0.0294s/start)
prove.: 0.088239s (num_starts 3; 0.0294s/start)
prove_spawn_and_join_helper.: 0.088252s (num_starts 3; 0.0294s/start)
dst_edge_composition_proves_false.: 0.091165s (num_starts 1; 0.0912s/start)
get_next_dst_edge_composition_to_correlate.: 0.091788s (num_starts 2; 0.0459s/start)
prove_spawn_and_join.: 0.103175s (num_starts 3; 0.0344s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103279s (num_starts 2; 0.0516s/start)
prove_wrapper.proof_query_not_trivial.: 0.103405s (num_starts 3; 0.0345s/start)
prove_wrapper.: 0.103914s (num_starts 4; 0.0260s/start)
decide_hoare_triple_check_ub.: 0.105077s (num_starts 4; 0.0263s/start)
decide_hoare_triple_helper.: 0.105968s (num_starts 4; 0.0265s/start)
decide_hoare_triple_with_alias_cons.: 0.106301s (num_starts 4; 0.0266s/start)
solver_satisfiable-cache-miss.: 0.107263s (num_starts 3; 0.0358s/start)
solver_satisfiable.: 0.10729s (num_starts 4; 0.0268s/start)
expandProductCFG.: 0.113364s (num_starts 2; 0.0567s/start)
bestFirstSearch.: 0.152424s (num_starts 1; 0.1524s/start)
Time taken for equivalence check.: 0.156257s (num_starts 1; 0.1563s/start)

counters:
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.18
query-time-to-total-time-ratio.: 0.40

Context stats:
exprs: count: 140942
sorts: count: 149
num_proof_queries: 42
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	401
	        hit ratio:	0.930175
m_simplify_solver:
	----------- total:	99
	        hit ratio:	0.676768
m_z3_solver_substitution:
	----------- total:	32
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	32
	        hit ratio:	0
m_expr_size:
	----------- total:	255
	        hit ratio:	0.8
m_expr_evaluates_to_constant_visitor:
	----------- total:	371
	        hit ratio:	0.563342
m_sort_dfa_canonicalize:
	----------- total:	2016
	        hit ratio:	0.996528
m_expr_convert_to_iexpr:
	----------- total:	3
	        hit ratio:	0

z3_solver expr_query_cache entry size: 3
	----------- total:	44
	             hits:	1
	        hit ratio:	0.0227273
histogram (time taken by solver in ms):
[ 5.2460,  6.3091) (avg.  5.2460)        : 1
[ 6.3091,  7.5877) (avg.  0.0000)        : 0
[ 7.5877,  9.1253) (avg.  0.0000)        : 0
[ 9.1253, 10.9746) (avg.  0.0000)        : 0
[10.9746, 13.1986) (avg.  0.0000)        : 0
[13.1986, 15.8734) (avg.  0.0000)        : 0
[15.8734, 19.0901) (avg.  0.0000)        : 0
[19.0901, 22.9588) (avg.  0.0000)        : 0
[22.9588, 27.6115) (avg. 23.4440)        : 1
[27.6115, 33.2070) (avg. 32.2070)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 44) (avg. 40)                       : 1
[44, 48) (avg.  0)                       : 0
[48, 52) (avg.  0)                       : 0
[52, 56) (avg.  0)                       : 0
[56, 59) (avg.  0)                       : 0
[59, 63) (avg.  0)                       : 0
[63, 67) (avg. 65)                       : 1
[67, 71) (avg. 68)                       : 1
[71, 75) (avg.  0)                       : 0
[75, 78) (avg.  0)                       : 0

<MSG>0:24 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.001063s total; 0.000020 per start]
tfg_computeWP: num_starts 236 time spent: 0:0:0 [0.017198s total; 0.000073 per start]
tfg_get_simplified_to_state_for_edge: num_starts 818 time spent: 0:0:0 [0.001421s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 912 time spent: 0:0:0 [0.001467s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 541 time spent: 0:0:0 [0.000846s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 38 time spent: 0:0:0 [0.119822s total; 0.003153 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.169641s total; 0.016964 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 172 time spent: 0:0:0 [0.157365s total; 0.000915 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 43 time spent: 0:0:0 [0.021005s total; 0.000488 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 163 time spent: 0:0:0 [0.141678s total; 0.000869 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 712 time spent: 0:0:0 [0.148389s total; 0.000208 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 169 time spent: 0:0:0 [0.008406s total; 0.000050 per start]
tfg_graph_get_vars_written_on_edge: num_starts 163 time spent: 0:0:0 [0.003568s total; 0.000022 per start]
cg_with_rank_add_CE_at_pc: num_starts 48 time spent: 0:0:0 [0.117986s total; 0.002458 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000543s total; 0.000022 per start]
graph_with_guessing_add_CE_at_pc: num_starts 48 time spent: 0:0:0 [0.117865s total; 0.002456 per start]
point_set_add_point_using_CE: num_starts 67 time spent: 0:0:0 [0.026729s total; 0.000399 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 67 time spent: 0:0:0 [0.027012s total; 0.000403 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 33 time spent: 0:0:0 [0.114493s total; 0.003469 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 33 time spent: 0:0:0 [0.086867s total; 0.002632 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1495 time spent: 0:0:0 [0.022163s total; 0.000015 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 160 time spent: 0:0:0 [0.017278s total; 0.000108 per start]
expr_simplify_solver: num_starts 913 time spent: 0:0:0 [0.079205s total; 0.000087 per start]
expr_simplify_syntactic: num_starts 913 time spent: 0:0:0 [0.240066s total; 0.000263 per start]
expr_simplify_select_on_store: num_starts 47 time spent: 0:0:0 [0.141633s total; 0.003013 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001359s total; 0.000091 per start]
expr_simplify_using_lhs_set_helper: num_starts 321 time spent: 0:0:0 [0.348410s total; 0.001085 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2073 time spent: 0:0:0 [0.346110s total; 0.000167 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1054 time spent: 0:0:0 [0.005098s total; 0.000005 per start]
expr_simplify_eq: num_starts 206 time spent: 0:0:0 [0.002991s total; 0.000015 per start]
expr_simplify_or: num_starts 18 time spent: 0:0:0 [0.000037s total; 0.000002 per start]
expr_simplify_and: num_starts 91 time spent: 0:0:0 [0.000475s total; 0.000005 per start]
expr_simplify_not: num_starts 21 time spent: 0:0:0 [0.000088s total; 0.000004 per start]
expr_simplify_implies: num_starts 14 time spent: 0:0:0 [0.000128s total; 0.000009 per start]
expr_simplify_ite: num_starts 25 time spent: 0:0:0 [0.001267s total; 0.000051 per start]
canonicalize_expr_tree: num_starts 270 time spent: 0:0:0 [0.009677s total; 0.000036 per start]
expr_simplify_memalloc_using_memlabel: num_starts 30 time spent: 0:0:0 [0.000102s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 50 time spent: 0:0:0 [0.140322s total; 0.002806 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000075s total; 0.000075 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000071s total; 0.000005 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000008s total; 0.000008 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000005s total; 0.000005 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
get_arithmetic_addsub_atoms: num_starts 1522 time spent: 0:0:0 [0.001362s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.005209s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 279 time spent: 0:0:0 [0.000308s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3947 time spent: 0:0:0 [0.311758s total; 0.000079 per start]
expr_do_simplify_helper_cache: num_starts 3947 time spent: 0:0:0 [0.003748s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2 time spent: 0:0:0 [0.000001s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2 time spent: 0:0:0 [0.000011s total; 0.000005 per start]
evaluate_expr_and_check_bounds: num_starts 520 time spent: 0:0:0 [0.165516s total; 0.000318 per start]
array_constant_equals: num_starts 5537 time spent: 0:0:0 [0.007999s total; 0.000001 per start]
sort_dfa_canonical: num_starts 163489 time spent: 0:0:1 [1.292014s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 224 time spent: 0:0:0 [0.054539s total; 0.000243 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.092309s total; 0.004858 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.078217s total; 0.004117 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.001543s total; 0.000045 per start]
update_memlabels_for_memslot_locs: num_starts 11 time spent: 0:0:0 [0.000048s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.010087s total; 0.000129 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.094657s total; 0.000451 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000125s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.022701s total; 0.000568 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001580s total; 0.000041 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.014422s total; 0.000759 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000259s total; 0.000005 per start]
total: num_starts 1 time spent: 0:0:31 [31.728259s total; 31.728259 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.27s.
ftmap_run_pointsto_analysis.: 0.016508s (num_starts 2; 0.0083s/start)s.
EQ Time after pointsto analysis: 2.25004s.
EQ Time after pointsto analysis and smt_query: 2.14613s.
EQ Time after pointsto analysis and smt_query and bv-solve: 2.14613s.
Equivalence proof found. The programs are equivalent.
