argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=10
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall2.proof
argv[9] = --spec-iospecs=fcall2.iospecs
argv[10] = fcall2.spec
argv[11] = fcall2.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.3791964
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall2.spec.etfg
argv[11] = par_tmpdir/fcall2.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall2.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000072s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000102s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.003090s total; 0.000008 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.010125s total; 0.000098 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.058138s total; 0.000564 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.005106s total; 0.002553 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000793s total; 0.000088 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.072529s total; 0.001022 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.072175s total; 0.000177 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000225s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000045s total; 0.000015 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.001086s total; 0.000020 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000022s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.005043s total; 0.002521 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000021s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000029s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.001181s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000144s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.073622s total; 0.000079 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000608s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000120s total; 0.000002 per start]
sort_dfa_canonical: num_starts 142232 time spent: 0:0:1 [1.230294s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 5 time spent: 0:0:0 [0.000808s total; 0.000162 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.053071s total; 0.002041 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.038507s total; 0.001481 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001816s total; 0.000048 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000038s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002847s total; 0.000057 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.059767s total; 0.000316 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000027s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.018706s total; 0.000624 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000434s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.010965s total; 0.000439 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000164s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 1e-06s (num_starts 2; 0.0000s/start)
graph_with_execution_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 3e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 7e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 7e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.2e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 1.8e-05s (num_starts 20; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 2.6e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 2.9e-05s (num_starts 32; 0.0000s/start)
context_constructor.solver.: 3.3e-05s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.6e-05s (num_starts 1; 0.0000s/start)
tfg_get_write_memlabels.: 4.1e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.2e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.2e-05s (num_starts 4; 0.0000s/start)
expr_is_callee_save_const.: 4.7e-05s (num_starts 44; 0.0000s/start)
add_extra_node_at_start_pc.: 4.8e-05s (num_starts 2; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 4.8e-05s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.4e-05s (num_starts 8; 0.0000s/start)
tfg_get_read_memlabels.: 5.7e-05s (num_starts 1; 0.0001s/start)
graph_visit_exprs_const.const.: 8.5e-05s (num_starts 2; 0.0000s/start)
main.3.: 8.7e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 9.6e-05s (num_starts 113; 0.0000s/start)
get_summary_for_calling_functions.: 0.000106s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000114s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.000115s (num_starts 1; 0.0001s/start)
compute_reachable_memlabels_map.: 0.000119s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000119s (num_starts 4; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000121s (num_starts 2; 0.0001s/start)
graph_locs_add_all_indvars.: 0.000132s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000133s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000141s (num_starts 23; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000141s (num_starts 277; 0.0000s/start)
propagate_sprels.: 0.000143s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000153s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000156s (num_starts 6; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000162s (num_starts 1; 0.0002s/start)
graph_locs_add_all_exvregs.: 0.000164s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000172s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00018s (num_starts 25; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.00021s (num_starts 23; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000232s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000235s (num_starts 49; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000242s (num_starts 48; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000261s (num_starts 23; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000274s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000277s (num_starts 2; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000293s (num_starts 1; 0.0003s/start)
populate_locid2expr_map.: 0.000314s (num_starts 4; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000357s (num_starts 25; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.0004s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.00042s (num_starts 2; 0.0002s/start)
populate_transitive_closure.: 0.000432s (num_starts 2; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.000441s (num_starts 1; 0.0004s/start)
canonicalize_llvm_nextpcs.: 0.000488s (num_starts 2; 0.0002s/start)
expr_substitute_using_available_exprs_submap.: 0.000505s (num_starts 17; 0.0000s/start)
create_closure_matrix.: 0.000512s (num_starts 34; 0.0000s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.000526s (num_starts 1; 0.0005s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000572s (num_starts 1; 0.0006s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000584s (num_starts 143; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.000595s (num_starts 1; 0.0006s/start)
populate_exit_return_values_for_llvm_method.: 0.00063s (num_starts 2; 0.0003s/start)
compute_z3_expr.: 0.000688s (num_starts 52; 0.0000s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.000703s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000796s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000835s (num_starts 2; 0.0004s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000875s (num_starts 1; 0.0009s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.000888s (num_starts 1; 0.0009s/start)
expr_linear_relation_holds::visit.var.: 0.000937s (num_starts 49; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001002s (num_starts 66; 0.0000s/start)
tfg_preprocess.dst.llvm.update_val.: 0.00113s (num_starts 1; 0.0011s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001179s (num_starts 2; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001356s (num_starts 2; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001441s (num_starts 2; 0.0007s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001558s (num_starts 1; 0.0016s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.001563s (num_starts 1; 0.0016s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.001567s (num_starts 1; 0.0016s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001571s (num_starts 1; 0.0016s/start)
tfg_constructor.src.spec.update_val.: 0.001576s (num_starts 1; 0.0016s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001635s (num_starts 1; 0.0016s/start)
populate_dominator_and_postdominator_relations.: 0.001637s (num_starts 4; 0.0004s/start)
graph_visit_exprs.: 0.001868s (num_starts 8; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.001886s (num_starts 4; 0.0005s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.002143s (num_starts 25; 0.0001s/start)
query:convert_from_z3.: 0.002206s (num_starts 52; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002254s (num_starts 26; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002289s (num_starts 4; 0.0006s/start)
tfg::populate_loc_definedness.: 0.002444s (num_starts 4; 0.0006s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002546s (num_starts 1; 0.0025s/start)
query:convert_to_z3.: 0.002662s (num_starts 52; 0.0001s/start)
get_function_tfg_map.update_val.: 0.002726s (num_starts 1; 0.0027s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002836s (num_starts 25; 0.0001s/start)
populate_branch_affecting_locs.: 0.002855s (num_starts 4; 0.0007s/start)
graph_identify_back_edges.: 0.003013s (num_starts 12; 0.0003s/start)
graph_identify_natural_loops.: 0.003051s (num_starts 12; 0.0003s/start)
create_sp_version_relations_lattice_at_pc.: 0.003282s (num_starts 34; 0.0001s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.003326s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.003332s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.003341s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.003345s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.: 0.003348s (num_starts 1; 0.0033s/start)
avail_exprs_create_submap.: 0.00411s (num_starts 75; 0.0001s/start)
find_dominators.: 0.004269s (num_starts 20; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004562s (num_starts 404; 0.0000s/start)
compute_regions.: 0.005591s (num_starts 12; 0.0005s/start)
graph_to_stream.: 0.006072s (num_starts 2; 0.0030s/start)
query:simplify-z3.: 0.006371s (num_starts 106; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006732s (num_starts 26; 0.0003s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.007081s (num_starts 1; 0.0071s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007428s (num_starts 20; 0.0004s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007467s (num_starts 20; 0.0004s/start)
compute_lr_status_for_expr.: 0.007586s (num_starts 29; 0.0003s/start)
tfg::tfg_preprocess.: 0.008218s (num_starts 2; 0.0041s/start)
populate_simplified_to_state.: 0.011228s (num_starts 6; 0.0019s/start)
main.2.: 0.011999s (num_starts 1; 0.0120s/start)
get_function_tfg_map.opt_map.: 0.012012s (num_starts 1; 0.0120s/start)
populate_simplified_assets.: 0.014161s (num_starts 12; 0.0012s/start)
populate_locs_potentially_modified_on_edge.: 0.014437s (num_starts 6; 0.0024s/start)
get_tfg.: 0.014666s (num_starts 2; 0.0073s/start)
get_function_tfg_map.: 0.014744s (num_starts 2; 0.0074s/start)
compute_new_lr_status_on_locs.: 0.026828s (num_starts 25; 0.0011s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.028619s (num_starts 6; 0.0048s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.029443s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.030056s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.033763s (num_starts 404; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.035308s (num_starts 48; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.03856s (num_starts 26; 0.0015s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.041624s (num_starts 24; 0.0017s/start)
populate_loc_liveness.: 0.046163s (num_starts 4; 0.0115s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.072616s (num_starts 71; 0.0010s/start)
tfg_postprocess_after_pointsto_analysis.: 0.079556s (num_starts 2; 0.0398s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.083855s (num_starts 2; 0.0419s/start)
ftmap_run_pointsto_analysis.: 0.144513s (num_starts 1; 0.1445s/start)
parse_consts_db.: 7.2483s (num_starts 1; 7.2483s/start)
main.: 7.44257s (num_starts 1; 7.4426s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map: Found 2 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map created 2 possibilities in group opt_map.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%fcallStart ending at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:22 : Adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Updating dst fcall edge using src fcall edge for toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Computing loop hoisting select expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Adding node L3%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:22 : opt_map.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Adding edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : opt_map.A2: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:22 : opt_map.A2: Added the 1 propagated CEs at PC L3%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:22 : opt_map.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : opt_map.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : opt_map.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:22 : Added correlation to the product-TFG opt_map.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:22 : opt_map.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:22 : opt_map.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : product-TFG opt_map.A2: Found 2 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : product-TFG opt_map.A2 created 2 possibilities in group opt_map.A2.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%5%fcallStart --> L3%5%fcallEnd ending at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing loop hoisting select expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Adding node L3%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:23 : opt_map.A2.B2: Getting alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Found no alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Adding edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2: Propagated 8 out of 8 counter-examples across edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : opt_map.A2.B2: Added the 8 propagated CEs at PC L3%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 5 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2: Done relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2 created 1 possibilities in group opt_map.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Getting alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Found no alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Adding edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Propagated 0 out of 8 counter-examples across edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2.C1 created 1 possibilities in group opt_map.A2.B2.C1.D...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
      1.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:cvc4.ce63      2.:z3v487.ce25      3.:cvc4.ce24      4.:z3v487.ce64
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 1.86s, query:smt.: 0.419344s (num_starts 33; 0.0127s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.18153s (num_starts 47; 0.0251s/start)ftmap_run_pointsto_analysis.: 0.147118s (num_starts 2; 0.0736s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 3e-06s (num_starts 3; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 6e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 6e-06s (num_starts 8; 0.0000s/start)
prune_dst_memslots.: 6e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 9e-06s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.8e-05s (num_starts 20; 0.0000s/start)
get_paths_with_matching_to_pc.: 2.3e-05s (num_starts 6; 0.0000s/start)
get_intersected_lr_status.: 2.4e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 2.7e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 2.8e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3.2e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 3.3e-05s (num_starts 22; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-05s (num_starts 30; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 4.5e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 5.7e-05s (num_starts 78; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6.7e-05s (num_starts 47; 0.0000s/start)
sp_version_relations_val_t::meet.: 7e-05s (num_starts 148; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 7.1e-05s (num_starts 47; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 7.1e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.2e-05s (num_starts 21; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.3e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.4e-05s (num_starts 3; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 9e-05s (num_starts 27; 0.0000s/start)
expr_is_hidden_reg.: 9e-05s (num_starts 108; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000109s (num_starts 57; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000112s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000115s (num_starts 16; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.00012s (num_starts 15; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000126s (num_starts 8; 0.0000s/start)
expr_is_callee_save_const.: 0.00013s (num_starts 132; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000136s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000142s (num_starts 6; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000145s (num_starts 39; 0.0000s/start)
get_sprel_map_pair.: 0.000159s (num_starts 43; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000165s (num_starts 15; 0.0000s/start)
compute_sprel_relations.: 0.000169s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.00018s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.00018s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000182s (num_starts 23; 0.0000s/start)
populate_locid2expr_map.: 0.000228s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000231s (num_starts 1; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000235s (num_starts 39; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000246s (num_starts 10; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000272s (num_starts 12; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000278s (num_starts 17; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000288s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000343s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000349s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000364s (num_starts 46; 0.0000s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.00039s (num_starts 14; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000397s (num_starts 17; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000398s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000399s (num_starts 35; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000418s (num_starts 2; 0.0002s/start)
populate_dominator_and_postdominator_relations.: 0.000422s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000422s (num_starts 1; 0.0004s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000424s (num_starts 91; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.000432s (num_starts 3; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000452s (num_starts 80; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000452s (num_starts 1; 0.0005s/start)
proof_query_is_trivial.: 0.000484s (num_starts 47; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000488s (num_starts 2; 0.0002s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000501s (num_starts 6; 0.0001s/start)
set_result_and_counter_example.: 0.000512s (num_starts 33; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000547s (num_starts 47; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000552s (num_starts 1; 0.0006s/start)
graph_locs_add_all_specvars.: 0.000564s (num_starts 2; 0.0003s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000568s (num_starts 91; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000575s (num_starts 1; 0.0006s/start)
expr_represents_llvm_undef.: 0.000578s (num_starts 140; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000579s (num_starts 1; 0.0006s/start)
tfg::collect_assumes_around_edge.: 0.000579s (num_starts 37; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000581s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000591s (num_starts 1; 0.0006s/start)
pth_collect_preds_using_atom_func.: 0.000609s (num_starts 21; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.00066s (num_starts 17; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000665s (num_starts 4; 0.0002s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000699s (num_starts 149; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000722s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000729s (num_starts 1; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000732s (num_starts 16; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000733s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000742s (num_starts 1; 0.0007s/start)
tfg::populate_loc_definedness.before_solve.: 0.000787s (num_starts 3; 0.0003s/start)
tfg_edge_composition_get_assumes.: 0.000819s (num_starts 21; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000882s (num_starts 29; 0.0000s/start)
removeMostPromising.: 0.000894s (num_starts 13; 0.0001s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.0009s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.000953s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.000956s (num_starts 1; 0.0010s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000966s (num_starts 4; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-trivial.: 0.000993s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000996s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-trivial.: 0.000998s (num_starts 1; 0.0010s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000999s (num_starts 6; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001001s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001018s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001018s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001021s (num_starts 1; 0.0010s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001023s (num_starts 29; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001028s (num_starts 39; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.001034s (num_starts 2; 0.0005s/start)
get_unrolled_loop_paths_from.: 0.001036s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.001046s (num_starts 1; 0.0010s/start)
identify_address_taken_local_variables.: 0.001081s (num_starts 2; 0.0005s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001099s (num_starts 3; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001134s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001136s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00114s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001144s (num_starts 1; 0.0011s/start)
graph_visit_exprs_and_keys.: 0.001169s (num_starts 2; 0.0006s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.00118s (num_starts 41; 0.0000s/start)
tfg::populate_loc_definedness.: 0.001186s (num_starts 3; 0.0004s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001202s (num_starts 18; 0.0001s/start)
collect_assumes_around_edge.: 0.001205s (num_starts 4; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001225s (num_starts 6; 0.0002s/start)
compute_vars_reaching_definitions.: 0.001237s (num_starts 2; 0.0006s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001255s (num_starts 18; 0.0001s/start)
graph_visit_exprs.: 0.001257s (num_starts 3; 0.0004s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001259s (num_starts 6; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001289s (num_starts 41; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001301s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001304s (num_starts 2; 0.0007s/start)
ldr_decomposition.: 0.001338s (num_starts 27; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001359s (num_starts 35; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.001378s (num_starts 1; 0.0014s/start)
get_sprel_map_pair_at_pc.: 0.001466s (num_starts 39; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.001526s (num_starts 39; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001528s (num_starts 6; 0.0003s/start)
populate_transitive_closure.: 0.001555s (num_starts 15; 0.0001s/start)
propagate_nodece_across_edge.: 0.00156s (num_starts 3; 0.0005s/start)
construct_linear_combination_exprs.: 0.001627s (num_starts 45; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001627s (num_starts 18; 0.0001s/start)
populate_branch_affecting_locs.: 0.001662s (num_starts 3; 0.0006s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001673s (num_starts 3; 0.0006s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.001706s (num_starts 67; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001942s (num_starts 2; 0.0010s/start)
bv_const_ref_map2expr_map.: 0.001949s (num_starts 45; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001994s (num_starts 353; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.002025s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002142s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002147s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002183s (num_starts 2; 0.0011s/start)
check_node_stability_after_CE_addition.: 0.002218s (num_starts 42; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002263s (num_starts 66; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.002321s (num_starts 22; 0.0001s/start)
find_dominators.: 0.002337s (num_starts 28; 0.0001s/start)
graph_identify_back_edges.: 0.002342s (num_starts 24; 0.0001s/start)
graph_identify_natural_loops.: 0.002404s (num_starts 24; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002537s (num_starts 3; 0.0008s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002568s (num_starts 3; 0.0009s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002823s (num_starts 80; 0.0000s/start)
cg_src_dst_tfg_copy.: 0.002897s (num_starts 1; 0.0029s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003026s (num_starts 1; 0.0030s/start)
create_sp_version_relations_lattice_at_pc.: 0.003043s (num_starts 46; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.003195s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.003201s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.003204s (num_starts 1; 0.0032s/start)
expr_linear_relation_holds::visit.var.: 0.003242s (num_starts 149; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.003283s (num_starts 4; 0.0008s/start)
expr_substitute_using_available_exprs_submap.: 0.003702s (num_starts 82; 0.0000s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.003767s (num_starts 2; 0.0019s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003825s (num_starts 39; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003903s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.003927s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.003933s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.003937s (num_starts 1; 0.0039s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.004026s (num_starts 80; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004261s (num_starts 190; 0.0000s/start)
get_next_potential_correlations.: 0.004596s (num_starts 4; 0.0011s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.004644s (num_starts 2; 0.0023s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.004853s (num_starts 39; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.005049s (num_starts 85; 0.0001s/start)
do_ssa_transformation.: 0.005112s (num_starts 2; 0.0026s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005182s (num_starts 35; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005259s (num_starts 106; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.005344s (num_starts 27; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005454s (num_starts 505; 0.0000s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005518s (num_starts 142; 0.0000s/start)
compute_regions.: 0.00552s (num_starts 24; 0.0002s/start)
bv_linear_solve.: 0.005755s (num_starts 27; 0.0002s/start)
query:bv_solve.: 0.005906s (num_starts 27; 0.0002s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.006088s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.006094s (num_starts 6; 0.0010s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.006177s (num_starts 2; 0.0031s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.006182s (num_starts 2; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.006196s (num_starts 2; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-trivial.: 0.006229s (num_starts 1; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.006232s (num_starts 1; 0.0062s/start)
lhs_set_sort.: 0.006232s (num_starts 39; 0.0002s/start)
collect_inductive_preds_around_path.: 0.006993s (num_starts 47; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.007263s (num_starts 70; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.007329s (num_starts 1; 0.0073s/start)
bv_solve_returning_intermediate_structures.: 0.007588s (num_starts 27; 0.0003s/start)
counter_example_falsifies_preds.: 0.008127s (num_starts 43; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-trivial.: 0.008365s (num_starts 2; 0.0042s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.008561s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008563s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008571s (num_starts 1; 0.0086s/start)
counter_example_satisfies_preds.: 0.008581s (num_starts 210; 0.0000s/start)
populate_simplified_to_state.: 0.008719s (num_starts 3; 0.0029s/start)
bvsolve_cache_query.miss1.: 0.008762s (num_starts 27; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008944s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008946s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008948s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008949s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.008952s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.008967s (num_starts 1; 0.0090s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.00904s (num_starts 70; 0.0001s/start)
bvsolve_cache_query.: 0.009042s (num_starts 27; 0.0003s/start)
collect_assumes_around_path_helper.: 0.009255s (num_starts 91; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.009386s (num_starts 3; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.009392s (num_starts 3; 0.0031s/start)
graph_with_paths::collect_assumes_around_path.: 0.00951s (num_starts 91; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.009671s (num_starts 35; 0.0003s/start)
populate_simplified_assets.: 0.00972s (num_starts 6; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities..: 0.01028s (num_starts 3; 0.0034s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.010291s (num_starts 3; 0.0034s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.010572s (num_starts 370; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010672s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010675s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.01068s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.010684s (num_starts 1; 0.0107s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.010849s (num_starts 1; 0.0108s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.011043s (num_starts 35; 0.0003s/start)
solve_for_bv_points.: 0.011136s (num_starts 27; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011681s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011686s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011689s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011692s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.011696s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011817s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011819s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011821s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond.: 0.011825s (num_starts 1; 0.0118s/start)
query:convert_to_z3.: 0.011848s (num_starts 190; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011969s (num_starts 1; 0.0120s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012057s (num_starts 1; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012061s (num_starts 1; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012067s (num_starts 1; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012071s (num_starts 1; 0.0121s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.012241s (num_starts 26; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012269s (num_starts 1; 0.0123s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012271s (num_starts 1; 0.0123s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.012273s (num_starts 3; 0.0041s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.012311s (num_starts 26; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012513s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012515s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.012521s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01259s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012596s (num_starts 1; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.012602s (num_starts 1; 0.0126s/start)
get_unrolled_paths_from.: 0.012921s (num_starts 25; 0.0005s/start)
query:convert_from_z3.: 0.012968s (num_starts 190; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.013023s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013446s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-trivial.: 0.01345s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013451s (num_starts 1; 0.0135s/start)
predicate_canonicalized.: 0.013488s (num_starts 45; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.013528s (num_starts 2; 0.0068s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.013537s (num_starts 2; 0.0068s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.013551s (num_starts 2; 0.0068s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.01357s (num_starts 25; 0.0005s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.013599s (num_starts 27; 0.0005s/start)
graph_to_stream.: 0.013644s (num_starts 4; 0.0034s/start)
collect_aliasing_constraints_around_path_helper.: 0.014307s (num_starts 135; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.014439s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.014457s (num_starts 2; 0.0072s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear.: 0.014463s (num_starts 2; 0.0072s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014602s (num_starts 1; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.014607s (num_starts 1; 0.0146s/start)
collect_aliasing_constraints_around_path.: 0.014677s (num_starts 83; 0.0002s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.01478s (num_starts 1; 0.0148s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.014918s (num_starts 2; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015011s (num_starts 1; 0.0150s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.01502s (num_starts 1; 0.0150s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.015573s (num_starts 4; 0.0039s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.015862s (num_starts 94; 0.0002s/start)
avail_exprs_create_submap.: 0.015875s (num_starts 105; 0.0002s/start)
counter_example_evaluate_preds.: 0.01605s (num_starts 253; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.016557s (num_starts 2; 0.0083s/start)
check_wfconds_on_edge.L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0.017642s (num_starts 2; 0.0088s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart.: 0.017887s (num_starts 2; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.018477s (num_starts 3; 0.0062s/start)
graph_ec_apply_trans_funs_helper.0.: 0.018486s (num_starts 204; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018651s (num_starts 1; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018653s (num_starts 1; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.018659s (num_starts 1; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown.: 0.018664s (num_starts 1; 0.0187s/start)
graph_ec_apply_trans_funs_helper.: 0.020097s (num_starts 210; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.020519s (num_starts 210; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.020666s (num_starts 47; 0.0004s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.020809s (num_starts 206; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.021374s (num_starts 206; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.021701s (num_starts 4; 0.0054s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.022224s (num_starts 70; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022718s (num_starts 2; 0.0114s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022723s (num_starts 2; 0.0114s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.022764s (num_starts 2; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.02277s (num_starts 2; 0.0114s/start)
put_smtlib_string_in_file.: 0.023004s (num_starts 66; 0.0003s/start)
compute_expr_eqclasses_at_pc.: 0.023629s (num_starts 2; 0.0118s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024076s (num_starts 2; 0.0120s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.024199s (num_starts 4; 0.0060s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025397s (num_starts 2; 0.0127s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.025498s (num_starts 505; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.025498s (num_starts 45; 0.0006s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.025685s (num_starts 35; 0.0007s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.027251s (num_starts 4; 0.0068s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.027311s (num_starts 585; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.027514s (num_starts 4; 0.0069s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.028769s (num_starts 33; 0.0009s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.029007s (num_starts 33; 0.0009s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029099s (num_starts 1; 0.0291s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029104s (num_starts 1; 0.0291s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029119s (num_starts 1; 0.0291s/start)
cg_add_node.: 0.029367s (num_starts 4; 0.0073s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.030343s (num_starts 4; 0.0076s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.031381s (num_starts 505; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03364s (num_starts 2; 0.0168s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033645s (num_starts 2; 0.0168s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.0337s (num_starts 2; 0.0169s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.033708s (num_starts 2; 0.0169s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034461s (num_starts 1; 0.0345s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.034466s (num_starts 1; 0.0345s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.034473s (num_starts 1; 0.0345s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess.: 0.034478s (num_starts 1; 0.0345s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.034739s (num_starts 1; 0.0347s/start)
query:simplify-z3.: 0.034749s (num_starts 398; 0.0001s/start)
compute_z3_expr.: 0.03475s (num_starts 223; 0.0002s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.035109s (num_starts 22; 0.0016s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.035763s (num_starts 3; 0.0119s/start)
create_new_corr_graph_edge.new_node.: 0.036327s (num_starts 3; 0.0121s/start)
create_new_corr_graph_edge.: 0.036953s (num_starts 4; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.037703s (num_starts 2; 0.0189s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.037726s (num_starts 2; 0.0189s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.037736s (num_starts 2; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040467s (num_starts 3; 0.0135s/start)
populate_loc_liveness.: 0.040726s (num_starts 3; 0.0136s/start)
decide_hoare_triple_helper;-trivial.: 0.043438s (num_starts 15; 0.0029s/start)
guarded_predicate_set_and.: 0.044073s (num_starts 39; 0.0011s/start)
parse_z3_model.: 0.044085s (num_starts 11; 0.0040s/start)
gen_pred_from_coeff_row.: 0.044208s (num_starts 45; 0.0010s/start)
compute_preds_for_bv_points.: 0.045184s (num_starts 12; 0.0038s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.045243s (num_starts 6; 0.0075s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.045256s (num_starts 14; 0.0032s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04696s (num_starts 2; 0.0235s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046966s (num_starts 2; 0.0235s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.047017s (num_starts 2; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.047821s (num_starts 4; 0.0120s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.049189s (num_starts 4; 0.0123s/start)
check_wfconds_on_edge.L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.052313s (num_starts 2; 0.0262s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052425s (num_starts 4; 0.0131s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.053986s (num_starts 39; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055393s (num_starts 1; 0.0554s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.0554s (num_starts 1; 0.0554s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055404s (num_starts 1; 0.0554s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false.: 0.055418s (num_starts 1; 0.0554s/start)
tfg_relax_pointsto_vals_on_edge.: 0.055538s (num_starts 18; 0.0031s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.056661s (num_starts 1; 0.0567s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.056913s (num_starts 18; 0.0032s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.057566s (num_starts 39; 0.0015s/start)
tfg_postprocess_after_pointsto_analysis.: 0.057629s (num_starts 2; 0.0288s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.057633s (num_starts 9; 0.0064s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.058362s (num_starts 2; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058718s (num_starts 3; 0.0196s/start)
parse_cvc4_model.: 0.060136s (num_starts 11; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear.: 0.060866s (num_starts 6; 0.0101s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.060958s (num_starts 44; 0.0014s/start)
compute_lr_status_for_expr.: 0.062274s (num_starts 87; 0.0007s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.062334s (num_starts 78; 0.0008s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.062486s (num_starts 78; 0.0008s/start)
apply_mask_and_overlay_array_constant.: 0.064314s (num_starts 44; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064635s (num_starts 1; 0.0646s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064641s (num_starts 1; 0.0646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064645s (num_starts 1; 0.0646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.064657s (num_starts 1; 0.0647s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate.: 0.06466s (num_starts 1; 0.0647s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.064667s (num_starts 1; 0.0647s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.070008s (num_starts 17; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown.: 0.072251s (num_starts 6; 0.0120s/start)
parse_yices_model.: 0.073416s (num_starts 11; 0.0067s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074971s (num_starts 1; 0.0750s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074978s (num_starts 1; 0.0750s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075631s (num_starts 1; 0.0756s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075636s (num_starts 1; 0.0756s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075638s (num_starts 1; 0.0756s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.075647s (num_starts 1; 0.0756s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate.: 0.075651s (num_starts 1; 0.0757s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.075659s (num_starts 1; 0.0757s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.075996s (num_starts 2; 0.0380s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.076981s (num_starts 3; 0.0257s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.082859s (num_starts 17; 0.0049s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087506s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087515s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087519s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.08753s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false.: 0.087535s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.087544s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08757s (num_starts 2; 0.0438s/start)
evaluate_function_call.: 0.088598s (num_starts 14; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown.: 0.088607s (num_starts 3; 0.0295s/start)
compute_new_lr_status_on_locs.: 0.088977s (num_starts 35; 0.0025s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091026s (num_starts 1; 0.0910s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091033s (num_starts 1; 0.0910s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091037s (num_starts 1; 0.0910s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.091051s (num_starts 1; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false.: 0.091055s (num_starts 1; 0.0911s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.091062s (num_starts 1; 0.0911s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098388s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09839s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.098396s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.098399s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099177s (num_starts 2; 0.0496s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.10307s (num_starts 4; 0.0258s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103609s (num_starts 2; 0.0518s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103712s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103716s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.10373s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown.: 0.103736s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.10838s (num_starts 4; 0.0271s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.108474s (num_starts 42; 0.0026s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.115181s (num_starts 30; 0.0038s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.115425s (num_starts 21; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.118299s (num_starts 3; 0.0394s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.118368s (num_starts 3; 0.0395s/start)
corr_graph::add_edge().: 0.137955s (num_starts 4; 0.0345s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.140273s (num_starts 2; 0.0701s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.140319s (num_starts 2; 0.0702s/start)
counter_example_translate_on_edge_composition_helper.: 0.144115s (num_starts 224; 0.0006s/start)
check_wfconds_on_edge.: 0.146285s (num_starts 8; 0.0183s/start)
ftmap_run_pointsto_analysis.: 0.147118s (num_starts 2; 0.0736s/start)
tfg_run_pointsto_analysis.: 0.147363s (num_starts 2; 0.0737s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.153785s (num_starts 2; 0.0769s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.153831s (num_starts 2; 0.0769s/start)
tfg_populate_structs_after_ssa_construction.: 0.154558s (num_starts 2; 0.0773s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.161442s (num_starts 2; 0.0807s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164984s (num_starts 4; 0.0412s/start)
check_equivalence_proof.: 0.168554s (num_starts 1; 0.1686s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd).: 0.171376s (num_starts 10; 0.0171s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.176066s (num_starts 4; 0.0440s/start)
corr_graph_add_correlation.: 0.176235s (num_starts 4; 0.0441s/start)
read_counter_examples_from_channel.: 0.179596s (num_starts 11; 0.0163s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.18238s (num_starts 4; 0.0456s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186791s (num_starts 5; 0.0374s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.193169s (num_starts 7; 0.0276s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.198462s (num_starts 1; 0.1985s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.200395s (num_starts 1; 0.2004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.213685s (num_starts 5; 0.0427s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.213697s (num_starts 5; 0.0427s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.219964s (num_starts 6; 0.0367s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear.: 0.219981s (num_starts 6; 0.0367s/start)
ce_reconcile_sorts_and_values.: 0.233644s (num_starts 33; 0.0071s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.238404s (num_starts 23; 0.0104s/start)
check_preds_on_edge_compositions.: 0.253969s (num_starts 12; 0.0212s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.25411s (num_starts 8; 0.0318s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.256006s (num_starts 1; 0.2560s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.259983s (num_starts 243; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.26787s (num_starts 10; 0.0268s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268629s (num_starts 8; 0.0336s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.279532s (num_starts 10; 0.0280s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.283303s (num_starts 12; 0.0236s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.29535s (num_starts 14; 0.0211s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.332326s (num_starts 4; 0.0831s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.332423s (num_starts 4; 0.0831s/start)
decide_hoare_triple.: 0.350802s (num_starts 7; 0.0501s/start)
dst_edge_composition_proves_false.: 0.369365s (num_starts 4; 0.0923s/start)
get_next_dst_edge_composition_to_correlate.: 0.37815s (num_starts 5; 0.0756s/start)
query:smt.: 0.419344s (num_starts 33; 0.0127s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.517664s (num_starts 16; 0.0324s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart).: 0.531749s (num_starts 18; 0.0295s/start)
spawn_smt_query.: 0.599343s (num_starts 33; 0.0182s/start)
update_invariant_state_for_edges.: 0.852859s (num_starts 4; 0.2132s/start)
cg_check_new_cg_ec.: 0.858675s (num_starts 4; 0.2147s/start)
correl_entry_apply.: 0.858751s (num_starts 4; 0.2147s/start)
solver_provable.: 0.909458s (num_starts 39; 0.0233s/start)
expr_is_provable.: 0.918864s (num_starts 39; 0.0236s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.919538s (num_starts 39; 0.0236s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.921701s (num_starts 39; 0.0236s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.924233s (num_starts 39; 0.0237s/start)
solver_satisfiable-cache-miss.: 0.946336s (num_starts 33; 0.0287s/start)
solver_satisfiable.: 0.946564s (num_starts 40; 0.0237s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.971442s (num_starts 39; 0.0249s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.97568s (num_starts 39; 0.0250s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.976375s (num_starts 39; 0.0250s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.02086s (num_starts 39; 0.0262s/start)
prove.: 1.02113s (num_starts 39; 0.0262s/start)
prove_spawn_and_join_helper.: 1.02133s (num_starts 39; 0.0262s/start)
prove_spawn_and_join.: 1.12298s (num_starts 39; 0.0288s/start)
prove_wrapper.proof_query_not_trivial.: 1.12708s (num_starts 39; 0.0289s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.13631s (num_starts 32; 0.0355s/start)
prove_wrapper.: 1.13719s (num_starts 47; 0.0242s/start)
decide_hoare_triple_check_ub.: 1.16069s (num_starts 47; 0.0247s/start)
decide_hoare_triple_helper.: 1.18153s (num_starts 47; 0.0251s/start)
expandProductCFG.: 1.24215s (num_starts 5; 0.2484s/start)
decide_hoare_triple_with_alias_cons.: 1.29736s (num_starts 47; 0.0276s/start)
bestFirstSearch.: 1.4799s (num_starts 1; 1.4799s/start)
Time taken for equivalence check.: 1.65141s (num_starts 1; 1.6514s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 8
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 8
# of paths expanded.: 4
# of queries to linear solver.: 27
# of smt-solver-queries.: 33
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 2
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 2
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 2
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 11
smt-queries-yices-sat.: 11
smt-queries-z3-sat.: 11
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 4
final-CG-counterexamples-total-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 8
final-CG-counterexamples-total-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 8
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 11
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.03
final-CG-time-to-total-time-ratio.: 0.70
query-time-to-total-time-ratio.: 0.26

Context stats:
exprs: count: 142124
sorts: count: 151
num_proof_queries: 39
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3327
	        hit ratio:	0.950406
m_simplify_solver:
	----------- total:	762
	        hit ratio:	0.727034
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	52
	        hit ratio:	0.923077
m_z3_solver_substitution:
	----------- total:	208
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	208
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	4
	        hit ratio:	0.75
m_expr_size:
	----------- total:	1699
	        hit ratio:	0.849323
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	4058
	        hit ratio:	0.625678
m_sort_dfa_canonicalize:
	----------- total:	19790
	        hit ratio:	0.999242
m_expr_convert_to_iexpr:
	----------- total:	206
	        hit ratio:	0.640777

z3_solver expr_query_cache entry size: 33
	----------- total:	40
	             hits:	7
	        hit ratio:	0.175
histogram (time taken by solver in ms):
[ 2.7120,  3.5068) (avg.  3.0560)        : 2
[ 3.5068,  4.5346) (avg.  4.0677)        : 8
[ 4.5346,  5.8637) (avg.  5.3130)        : 10
[ 5.8637,  7.5822) (avg.  5.9270)        : 2
[ 7.5822,  9.8044) (avg.  0.0000)        : 0
[ 9.8044, 12.6779) (avg.  0.0000)        : 0
[12.6779, 16.3936) (avg.  0.0000)        : 0
[16.3936, 21.1983) (avg. 16.7570)        : 1
[21.1983, 27.4112) (avg. 24.2245)        : 2
[27.4112, 35.4450) (avg. 31.2695)        : 8
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  50) (avg.  40)                    : 1
[ 50,  60) (avg.   0)                    : 0
[ 60,  69) (avg.   0)                    : 0
[ 69,  79) (avg.   0)                    : 0
[ 79,  88) (avg.   0)                    : 0
[ 88,  98) (avg.  96)                    : 2
[ 98, 108) (avg. 105)                    : 11
[108, 117) (avg. 113)                    : 15
[117, 127) (avg. 120)                    : 4
[127, 136) (avg.   0)                    : 0
Top 10 highest time taking queries:
1. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallStart_Lif.then%2%fcallStart.dstToPC.Lif.then%2%fcallEnd.from_pcL3%5%.0
3. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.032s] SOLVER_RES_TRUE memlabel_assertions_sat.0
5. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0
6. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL3%5%fcallEnd_Lif.then.0
7. [0.029s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.027s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-10-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.026s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0
10. [0.023s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:24 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:24 : Computing equivalence for function: update_val...</MSG>
<MSG>0:24 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:24 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:24 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:24 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:24 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.18s, query:smt.: 0.051494s (num_starts 3; 0.0172s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.098112s (num_starts 4; 0.0245s/start)ftmap_run_pointsto_analysis.: 0.01591s (num_starts 2; 0.0080s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 3; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 5e-06s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::meet.: 5e-06s (num_starts 9; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6e-06s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 7e-06s (num_starts 1; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 7e-06s (num_starts 4; 0.0000s/start)
proof_query_is_trivial_helper.: 9e-06s (num_starts 4; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 1.2e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 1.3e-05s (num_starts 13; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1.3e-05s (num_starts 3; 0.0000s/start)
lr_status_meet.: 1.4e-05s (num_starts 21; 0.0000s/start)
determinize_value_expr_map.: 1.5e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.5e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.6e-05s (num_starts 2; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 2e-05s (num_starts 3; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 2e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.1e-05s (num_starts 1; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 2.1e-05s (num_starts 7; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 2.1e-05s (num_starts 13; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 2.3e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.4e-05s (num_starts 1; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.4e-05s (num_starts 2; 0.0000s/start)
graph_with_guessing_sync_preds.: 2.5e-05s (num_starts 4; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.6e-05s (num_starts 1; 0.0000s/start)
def_analysis::xfer_and_meet.: 2.8e-05s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 3.1e-05s (num_starts 25; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 3.2e-05s (num_starts 13; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 3.4e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.5e-05s (num_starts 1; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.7e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_exvregs.: 4.2e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 4.2e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 4.5e-05s (num_starts 6; 0.0000s/start)
proof_query_is_trivial.: 4.6e-05s (num_starts 4; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 5.3e-05s (num_starts 7; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 6.4e-05s (num_starts 2; 0.0000s/start)
removeMostPromising.: 6.5e-05s (num_starts 4; 0.0000s/start)
set_result_and_counter_example.: 6.8e-05s (num_starts 3; 0.0000s/start)
graph_locs_add_all_local_vars.: 6.9e-05s (num_starts 2; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 6.9e-05s (num_starts 1; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 7.4e-05s (num_starts 2; 0.0000s/start)
pth_collect_preds_using_atom_func.: 7.5e-05s (num_starts 5; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 7.8e-05s (num_starts 18; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 7.9e-05s (num_starts 4; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 8.3e-05s (num_starts 2; 0.0000s/start)
tfg_edge_composition_get_assumes.: 8.6e-05s (num_starts 5; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 9.1e-05s (num_starts 3; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.5e-05s (num_starts 4; 0.0000s/start)
tfg::collect_assumes_around_edge.: 9.6e-05s (num_starts 5; 0.0000s/start)
get_sprel_map_pair_at_pc.: 9.7e-05s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000103s (num_starts 11; 0.0000s/start)
compute_sprel_relations.: 0.000107s (num_starts 2; 0.0001s/start)
collect_assumes_around_edge.: 0.000108s (num_starts 1; 0.0001s/start)
collect_inductive_preds_around_path.: 0.00011s (num_starts 4; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000111s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000118s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000126s (num_starts 2; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000129s (num_starts 2; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.000134s (num_starts 51; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000139s (num_starts 1; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.00014s (num_starts 7; 0.0000s/start)
graph_locs_add_all_specvars.: 0.00014s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000142s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000147s (num_starts 3; 0.0000s/start)
check_node_stability_after_CE_addition.: 0.000156s (num_starts 6; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000158s (num_starts 1; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000164s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000169s (num_starts 1; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000176s (num_starts 2; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.000178s (num_starts 1; 0.0002s/start)
identify_address_taken_local_variables.: 0.000179s (num_starts 1; 0.0002s/start)
populate_branch_affecting_locs.: 0.000187s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000188s (num_starts 2; 0.0001s/start)
populate_simplified_to_state.: 0.000189s (num_starts 3; 0.0001s/start)
expr_represents_llvm_undef.: 0.000204s (num_starts 29; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000214s (num_starts 16; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000215s (num_starts 3; 0.0001s/start)
populate_transitive_closure.: 0.000234s (num_starts 11; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000235s (num_starts 3; 0.0001s/start)
counter_example_falsifies_preds.: 0.000236s (num_starts 3; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.000238s (num_starts 21; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.00025s (num_starts 3; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000255s (num_starts 2; 0.0001s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000259s (num_starts 1; 0.0003s/start)
pth_collect_simplified_preds_using_atom_func.: 0.000261s (num_starts 6; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000272s (num_starts 4; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000279s (num_starts 3; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.000288s (num_starts 2; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000301s (num_starts 11; 0.0000s/start)
graph_visit_exprs.: 0.000306s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000337s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00035s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00035s (num_starts 1; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.000351s (num_starts 9; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000352s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000353s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000354s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000356s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.00036s (num_starts 1; 0.0004s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00036s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000364s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000366s (num_starts 1; 0.0004s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000368s (num_starts 3; 0.0001s/start)
populate_simplified_assets.: 0.000374s (num_starts 6; 0.0001s/start)
get_next_potential_correlations.: 0.000377s (num_starts 1; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000382s (num_starts 4; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000392s (num_starts 4; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000399s (num_starts 8; 0.0000s/start)
find_dominators.: 0.000402s (num_starts 19; 0.0000s/start)
tfg::populate_loc_definedness.: 0.000403s (num_starts 3; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000412s (num_starts 6; 0.0001s/start)
lhs_set_sort.: 0.000429s (num_starts 3; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.000431s (num_starts 2; 0.0002s/start)
counter_example_satisfies_preds.: 0.00045s (num_starts 18; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000457s (num_starts 6; 0.0001s/start)
graph_identify_back_edges.: 0.000472s (num_starts 15; 0.0000s/start)
graph_identify_natural_loops.: 0.000501s (num_starts 15; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.000517s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.000522s (num_starts 5; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.000542s (num_starts 1; 0.0005s/start)
collect_aliasing_constraints_around_path_helper.: 0.000544s (num_starts 22; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.000572s (num_starts 3; 0.0002s/start)
cg_add_node.: 0.000589s (num_starts 2; 0.0003s/start)
collect_aliasing_constraints_around_path.: 0.000593s (num_starts 14; 0.0000s/start)
create_new_corr_graph_edge.: 0.000594s (num_starts 1; 0.0006s/start)
collect_assumes_around_path_helper.: 0.000602s (num_starts 13; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000605s (num_starts 29; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.000633s (num_starts 13; 0.0000s/start)
counter_example_evaluate_preds.: 0.000635s (num_starts 21; 0.0000s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000641s (num_starts 4; 0.0002s/start)
graph_ec_apply_trans_funs_helper.0.: 0.000693s (num_starts 12; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000725s (num_starts 4; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.00073s (num_starts 6; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.000733s (num_starts 12; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000759s (num_starts 12; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000793s (num_starts 12; 0.0001s/start)
get_unrolled_paths_from.: 0.000808s (num_starts 6; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.000829s (num_starts 12; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000851s (num_starts 29; 0.0000s/start)
avail_exprs_create_submap.: 0.000872s (num_starts 12; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000901s (num_starts 3; 0.0003s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000907s (num_starts 117; 0.0000s/start)
compute_regions.: 0.00105s (num_starts 15; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001107s (num_starts 4; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.001177s (num_starts 6; 0.0002s/start)
edge_composition_apply_trans_funs_on_pred.: 0.001199s (num_starts 4; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001212s (num_starts 6; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001319s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.001367s (num_starts 2; 0.0007s/start)
put_smtlib_string_in_file.: 0.001475s (num_starts 6; 0.0002s/start)
compute_lr_status_for_expr.: 0.001639s (num_starts 25; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001672s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001709s (num_starts 21; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001764s (num_starts 1; 0.0018s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002289s (num_starts 4; 0.0006s/start)
query:convert_to_z3.: 0.00241s (num_starts 32; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.002542s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.002615s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002618s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.002619s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.002622s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002625s (num_starts 1; 0.0026s/start)
compute_z3_expr.: 0.003006s (num_starts 35; 0.0001s/start)
decide_hoare_triple_helper;-trivial.: 0.003031s (num_starts 2; 0.0015s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.003323s (num_starts 6; 0.0006s/start)
query:convert_from_z3.: 0.003506s (num_starts 32; 0.0001s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.003863s (num_starts 3; 0.0013s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.003931s (num_starts 124; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.003961s (num_starts 2; 0.0020s/start)
parse_z3_model.: 0.004008s (num_starts 2; 0.0020s/start)
apply_mask_and_overlay_array_constant.: 0.004063s (num_starts 3; 0.0014s/start)
check_equivalence_proof.: 0.004088s (num_starts 1; 0.0041s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.004124s (num_starts 117; 0.0000s/start)
parse_yices_model.: 0.004583s (num_starts 2; 0.0023s/start)
parse_cvc4_model.: 0.004595s (num_starts 2; 0.0023s/start)
tfg_relax_pointsto_vals_on_edge.: 0.004648s (num_starts 2; 0.0023s/start)
graph_to_stream.: 0.004654s (num_starts 4; 0.0012s/start)
counter_example_translate_on_edge_composition_helper.: 0.004694s (num_starts 21; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.00527s (num_starts 117; 0.0000s/start)
populate_loc_liveness.: 0.00549s (num_starts 3; 0.0018s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.00569s (num_starts 2; 0.0028s/start)
corr_graph::add_edge().: 0.006441s (num_starts 1; 0.0064s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.007236s (num_starts 1; 0.0072s/start)
corr_graph_add_correlation.: 0.007269s (num_starts 1; 0.0073s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.007313s (num_starts 1; 0.0073s/start)
tfg_postprocess_after_pointsto_analysis.: 0.00761s (num_starts 2; 0.0038s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.007682s (num_starts 1; 0.0077s/start)
guarded_predicate_set_and.: 0.008325s (num_starts 3; 0.0028s/start)
query:simplify-z3.: 0.008986s (num_starts 64; 0.0001s/start)
read_counter_examples_from_channel.: 0.013558s (num_starts 2; 0.0068s/start)
ftmap_run_pointsto_analysis.: 0.01591s (num_starts 2; 0.0080s/start)
tfg_run_pointsto_analysis.: 0.016076s (num_starts 2; 0.0080s/start)
tfg_populate_structs_after_ssa_construction.: 0.017361s (num_starts 2; 0.0087s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.01957s (num_starts 3; 0.0065s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.019689s (num_starts 3; 0.0066s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.019966s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020275s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020277s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02028s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020283s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020285s (num_starts 1; 0.0203s/start)
ce_reconcile_sorts_and_values.: 0.022076s (num_starts 6; 0.0037s/start)
update_invariant_state_for_edges.: 0.022894s (num_starts 1; 0.0229s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.02292s (num_starts 2; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.022926s (num_starts 2; 0.0115s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.02293s (num_starts 2; 0.0115s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.022936s (num_starts 2; 0.0115s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.022942s (num_starts 2; 0.0115s/start)
cg_check_new_cg_ec.: 0.022954s (num_starts 1; 0.0230s/start)
correl_entry_apply.: 0.022974s (num_starts 1; 0.0230s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.023105s (num_starts 2; 0.0116s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.023897s (num_starts 2; 0.0119s/start)
check_wfconds_on_edge.: 0.023913s (num_starts 2; 0.0120s/start)
check_preds_on_edge_compositions.: 0.024031s (num_starts 3; 0.0080s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.033872s (num_starts 34; 0.0010s/start)
query:smt.: 0.051494s (num_starts 3; 0.0172s/start)
solver_provable.: 0.061117s (num_starts 3; 0.0204s/start)
expr_is_provable.: 0.061672s (num_starts 3; 0.0206s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.061726s (num_starts 3; 0.0206s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.061915s (num_starts 3; 0.0206s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.062011s (num_starts 3; 0.0207s/start)
spawn_smt_query.: 0.065103s (num_starts 3; 0.0217s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.070583s (num_starts 3; 0.0235s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.070839s (num_starts 3; 0.0236s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.070897s (num_starts 3; 0.0236s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.073866s (num_starts 3; 0.0246s/start)
prove.: 0.073887s (num_starts 3; 0.0246s/start)
prove_spawn_and_join_helper.: 0.0739s (num_starts 3; 0.0246s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07459s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07459s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07459s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07459s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074591s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.074596s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.0746s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.074604s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.074607s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.074982s (num_starts 2; 0.0375s/start)
decide_hoare_triple.: 0.075573s (num_starts 2; 0.0378s/start)
dst_edge_composition_proves_false.: 0.078257s (num_starts 1; 0.0783s/start)
get_next_dst_edge_composition_to_correlate.: 0.078824s (num_starts 2; 0.0394s/start)
solver_satisfiable-cache-miss.: 0.093162s (num_starts 3; 0.0311s/start)
solver_satisfiable.: 0.093187s (num_starts 4; 0.0233s/start)
prove_spawn_and_join.: 0.094463s (num_starts 3; 0.0315s/start)
prove_wrapper.proof_query_not_trivial.: 0.094771s (num_starts 3; 0.0316s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094962s (num_starts 2; 0.0475s/start)
prove_wrapper.: 0.095581s (num_starts 4; 0.0239s/start)
decide_hoare_triple_check_ub.: 0.097044s (num_starts 4; 0.0243s/start)
decide_hoare_triple_helper.: 0.098112s (num_starts 4; 0.0245s/start)
decide_hoare_triple_with_alias_cons.: 0.098398s (num_starts 4; 0.0246s/start)
expandProductCFG.: 0.102263s (num_starts 2; 0.0511s/start)
bestFirstSearch.: 0.144659s (num_starts 1; 0.1447s/start)
Time taken for equivalence check.: 0.149042s (num_starts 1; 0.1490s/start)

counters:
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.21
query-time-to-total-time-ratio.: 0.36

Context stats:
exprs: count: 140933
sorts: count: 149
num_proof_queries: 42
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	401
	        hit ratio:	0.930175
m_simplify_solver:
	----------- total:	99
	        hit ratio:	0.676768
m_z3_solver_substitution:
	----------- total:	32
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	32
	        hit ratio:	0
m_expr_size:
	----------- total:	255
	        hit ratio:	0.8
m_expr_evaluates_to_constant_visitor:
	----------- total:	371
	        hit ratio:	0.563342
m_sort_dfa_canonicalize:
	----------- total:	2016
	        hit ratio:	0.996528
m_expr_convert_to_iexpr:
	----------- total:	3
	        hit ratio:	0

z3_solver expr_query_cache entry size: 3
	----------- total:	44
	             hits:	1
	        hit ratio:	0.0227273
histogram (time taken by solver in ms):
[ 4.6890,  5.6197) (avg.  4.6890)        : 1
[ 5.6197,  6.7352) (avg.  0.0000)        : 0
[ 6.7352,  8.0721) (avg.  0.0000)        : 0
[ 8.0721,  9.6743) (avg.  0.0000)        : 0
[ 9.6743, 11.5946) (avg.  0.0000)        : 0
[11.5946, 13.8960) (avg.  0.0000)        : 0
[13.8960, 16.6542) (avg.  0.0000)        : 0
[16.6542, 19.9599) (avg. 19.1070)        : 1
[19.9599, 23.9217) (avg.  0.0000)        : 0
[23.9217, 28.6700) (avg. 27.6700)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 44) (avg. 40)                       : 1
[44, 48) (avg.  0)                       : 0
[48, 52) (avg.  0)                       : 0
[52, 56) (avg.  0)                       : 0
[56, 59) (avg.  0)                       : 0
[59, 63) (avg.  0)                       : 0
[63, 67) (avg. 65)                       : 1
[67, 71) (avg. 68)                       : 1
[71, 75) (avg.  0)                       : 0
[75, 78) (avg.  0)                       : 0

<MSG>0:24 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.001042s total; 0.000019 per start]
tfg_computeWP: num_starts 232 time spent: 0:0:0 [0.015612s total; 0.000067 per start]
tfg_get_simplified_to_state_for_edge: num_starts 812 time spent: 0:0:0 [0.001251s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 910 time spent: 0:0:0 [0.001385s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 533 time spent: 0:0:0 [0.000877s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 38 time spent: 0:0:0 [0.088465s total; 0.002328 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.136338s total; 0.013634 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 172 time spent: 0:0:0 [0.136583s total; 0.000794 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 43 time spent: 0:0:0 [0.019025s total; 0.000442 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 163 time spent: 0:0:0 [0.123400s total; 0.000757 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 712 time spent: 0:0:0 [0.128889s total; 0.000181 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 169 time spent: 0:0:0 [0.007005s total; 0.000041 per start]
tfg_graph_get_vars_written_on_edge: num_starts 163 time spent: 0:0:0 [0.003156s total; 0.000019 per start]
cg_with_rank_add_CE_at_pc: num_starts 48 time spent: 0:0:0 [0.086660s total; 0.001805 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000504s total; 0.000020 per start]
graph_with_guessing_add_CE_at_pc: num_starts 48 time spent: 0:0:0 [0.086550s total; 0.001803 per start]
point_set_add_point_using_CE: num_starts 67 time spent: 0:0:0 [0.019966s total; 0.000298 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 67 time spent: 0:0:0 [0.020180s total; 0.000301 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 33 time spent: 0:0:0 [0.083381s total; 0.002527 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 33 time spent: 0:0:0 [0.062700s total; 0.001900 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1443 time spent: 0:0:0 [0.019551s total; 0.000014 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 160 time spent: 0:0:0 [0.012955s total; 0.000081 per start]
expr_simplify_solver: num_starts 912 time spent: 0:0:0 [0.077642s total; 0.000085 per start]
expr_simplify_syntactic: num_starts 912 time spent: 0:0:0 [0.228080s total; 0.000250 per start]
expr_simplify_select_on_store: num_starts 47 time spent: 0:0:0 [0.137232s total; 0.002920 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001365s total; 0.000091 per start]
expr_simplify_using_lhs_set_helper: num_starts 320 time spent: 0:0:0 [0.333061s total; 0.001041 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2069 time spent: 0:0:0 [0.330897s total; 0.000160 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1054 time spent: 0:0:0 [0.004657s total; 0.000004 per start]
expr_simplify_eq: num_starts 206 time spent: 0:0:0 [0.003120s total; 0.000015 per start]
expr_simplify_or: num_starts 18 time spent: 0:0:0 [0.000026s total; 0.000001 per start]
expr_simplify_and: num_starts 91 time spent: 0:0:0 [0.000513s total; 0.000006 per start]
expr_simplify_not: num_starts 21 time spent: 0:0:0 [0.000077s total; 0.000004 per start]
expr_simplify_implies: num_starts 14 time spent: 0:0:0 [0.000129s total; 0.000009 per start]
expr_simplify_ite: num_starts 25 time spent: 0:0:0 [0.001306s total; 0.000052 per start]
canonicalize_expr_tree: num_starts 270 time spent: 0:0:0 [0.008874s total; 0.000033 per start]
expr_simplify_memalloc_using_memlabel: num_starts 30 time spent: 0:0:0 [0.000091s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 50 time spent: 0:0:0 [0.136002s total; 0.002720 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000083s total; 0.000083 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000053s total; 0.000004 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000009s total; 0.000009 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000005s total; 0.000005 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 1522 time spent: 0:0:0 [0.001095s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.004856s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 385 time spent: 0:0:0 [0.000361s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3929 time spent: 0:0:0 [0.301341s total; 0.000077 per start]
expr_do_simplify_helper_cache: num_starts 3929 time spent: 0:0:0 [0.003474s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2 time spent: 0:0:0 [0.000001s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2 time spent: 0:0:0 [0.000011s total; 0.000005 per start]
evaluate_expr_and_check_bounds: num_starts 520 time spent: 0:0:0 [0.141700s total; 0.000273 per start]
array_constant_equals: num_starts 5399 time spent: 0:0:0 [0.007166s total; 0.000001 per start]
sort_dfa_canonical: num_starts 163431 time spent: 0:0:1 [1.218404s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 214 time spent: 0:0:0 [0.051911s total; 0.000243 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.088517s total; 0.004659 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.073920s total; 0.003891 per start]
get_sprel_map_from_avail_exprs: num_starts 36 time spent: 0:0:0 [0.001837s total; 0.000051 per start]
update_memlabels_for_memslot_locs: num_starts 13 time spent: 0:0:0 [0.000051s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.009979s total; 0.000128 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.093904s total; 0.000447 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000118s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.022637s total; 0.000566 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001606s total; 0.000041 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.013282s total; 0.000699 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000248s total; 0.000005 per start]
total: num_starts 1 time spent: 0:0:31 [31.495148s total; 31.495148 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.06s.
ftmap_run_pointsto_analysis.: 0.01591s (num_starts 2; 0.0080s/start)s.
EQ Time after pointsto analysis: 2.04198s.
EQ Time after pointsto analysis and smt_query: 1.9464s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.9464s.
Equivalence proof found. The programs are equivalent.
