argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --smt-query-timeout=5
argv[5] = --axpred-solver-max-depth=4
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall2.proof
argv[9] = --spec-iospecs=fcall2.iospecs
argv[10] = fcall2.spec
argv[11] = fcall2.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.462303
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall2.spec.etfg
argv[11] = par_tmpdir/fcall2.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall2.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000065s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000098s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.002684s total; 0.000007 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.008831s total; 0.000086 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.052420s total; 0.000509 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.004696s total; 0.002348 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000698s total; 0.000078 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.065196s total; 0.000918 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.064890s total; 0.000159 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000168s total; 0.000004 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000041s total; 0.000014 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000007s total; 0.000002 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.000899s total; 0.000017 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000022s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.004640s total; 0.002320 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000024s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000024s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.001033s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000123s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.066231s total; 0.000071 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000610s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000110s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.046411s total; 0.001785 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.033754s total; 0.001298 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001615s total; 0.000042 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000035s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002524s total; 0.000050 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.054174s total; 0.000287 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000025s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.016840s total; 0.000561 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000385s total; 0.000015 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.009469s total; 0.000379 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000165s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 1e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
remove_function_name_from_symbols.: 3e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 8e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 9e-06s (num_starts 4; 0.0000s/start)
lr_status_meet.: 1.2e-05s (num_starts 20; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 2.4e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 2.5e-05s (num_starts 32; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.1e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 3.4e-05s (num_starts 44; 0.0000s/start)
tfg_get_write_memlabels.: 3.4e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.5e-05s (num_starts 4; 0.0000s/start)
add_extra_node_at_start_pc.: 3.6e-05s (num_starts 2; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 4.1e-05s (num_starts 1; 0.0000s/start)
tfg_get_read_memlabels.: 4.6e-05s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 4.7e-05s (num_starts 8; 0.0000s/start)
context_constructor.solver.: 4.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.8e-05s (num_starts 1; 0.0001s/start)
graph_visit_exprs_const.const.: 6.9e-05s (num_starts 2; 0.0000s/start)
main.3.: 8.4e-05s (num_starts 1; 0.0001s/start)
get_summary_for_calling_functions.: 8.8e-05s (num_starts 1; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 9.4e-05s (num_starts 1; 0.0001s/start)
compute_reachable_memlabels_map.: 9.5e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 9.5e-05s (num_starts 113; 0.0000s/start)
graph_locs_add_all_specvars.: 9.6e-05s (num_starts 2; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000104s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000107s (num_starts 23; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000115s (num_starts 4; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000123s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000124s (num_starts 277; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000134s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000136s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 0.000141s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000151s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000152s (num_starts 6; 0.0000s/start)
propagate_sprels.: 0.000153s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000163s (num_starts 25; 0.0000s/start)
expr_represents_llvm_undef.: 0.000202s (num_starts 49; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000215s (num_starts 23; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00023s (num_starts 48; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000239s (num_starts 1; 0.0002s/start)
graph_locs_add_all_local_vars.: 0.000239s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000246s (num_starts 23; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000247s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000247s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000265s (num_starts 4; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000321s (num_starts 2; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000326s (num_starts 25; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000353s (num_starts 25; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000373s (num_starts 2; 0.0002s/start)
populate_transitive_closure.: 0.000373s (num_starts 2; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.000394s (num_starts 1; 0.0004s/start)
create_closure_matrix.: 0.000445s (num_starts 34; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000467s (num_starts 17; 0.0000s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.000479s (num_starts 1; 0.0005s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000485s (num_starts 1; 0.0005s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000503s (num_starts 143; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.000557s (num_starts 1; 0.0006s/start)
populate_exit_return_values_for_llvm_method.: 0.000568s (num_starts 2; 0.0003s/start)
compute_z3_expr.: 0.000616s (num_starts 52; 0.0000s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.000636s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000728s (num_starts 2; 0.0004s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.000741s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00076s (num_starts 2; 0.0004s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000779s (num_starts 1; 0.0008s/start)
expr_linear_relation_holds::visit.var.: 0.000822s (num_starts 49; 0.0000s/start)
tfg_preprocess.dst.llvm.update_val.: 0.000926s (num_starts 1; 0.0009s/start)
tfg::collect_assumes_around_edge.: 0.000947s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001099s (num_starts 2; 0.0005s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001256s (num_starts 1; 0.0013s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.00126s (num_starts 1; 0.0013s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.001264s (num_starts 1; 0.0013s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001267s (num_starts 1; 0.0013s/start)
tfg_constructor.src.spec.update_val.: 0.00127s (num_starts 1; 0.0013s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001275s (num_starts 2; 0.0006s/start)
populate_dominator_and_postdominator_relations.: 0.001348s (num_starts 4; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001357s (num_starts 2; 0.0007s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001504s (num_starts 1; 0.0015s/start)
graph_visit_exprs.: 0.001577s (num_starts 8; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.001759s (num_starts 4; 0.0004s/start)
query:convert_from_z3.: 0.001834s (num_starts 52; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001896s (num_starts 25; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001986s (num_starts 26; 0.0001s/start)
get_function_tfg_map.update_val.: 0.002126s (num_starts 1; 0.0021s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002155s (num_starts 4; 0.0005s/start)
tfg::populate_loc_definedness.: 0.002302s (num_starts 4; 0.0006s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002349s (num_starts 1; 0.0023s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002385s (num_starts 25; 0.0001s/start)
query:convert_to_z3.: 0.002405s (num_starts 52; 0.0000s/start)
graph_identify_back_edges.: 0.002616s (num_starts 12; 0.0002s/start)
graph_identify_natural_loops.: 0.002641s (num_starts 12; 0.0002s/start)
populate_branch_affecting_locs.: 0.002727s (num_starts 4; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.002786s (num_starts 34; 0.0001s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.003117s (num_starts 1; 0.0031s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.003122s (num_starts 1; 0.0031s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.003129s (num_starts 1; 0.0031s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.003134s (num_starts 1; 0.0031s/start)
tfg_constructor.src.spec.opt_map.: 0.003139s (num_starts 1; 0.0031s/start)
avail_exprs_create_submap.: 0.003497s (num_starts 75; 0.0000s/start)
find_dominators.: 0.003629s (num_starts 20; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003804s (num_starts 404; 0.0000s/start)
compute_regions.: 0.004874s (num_starts 12; 0.0004s/start)
graph_to_stream.: 0.005526s (num_starts 2; 0.0028s/start)
query:simplify-z3.: 0.005542s (num_starts 106; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005852s (num_starts 26; 0.0002s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.006064s (num_starts 1; 0.0061s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00658s (num_starts 20; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006613s (num_starts 20; 0.0003s/start)
compute_lr_status_for_expr.: 0.006724s (num_starts 29; 0.0002s/start)
tfg::tfg_preprocess.: 0.006996s (num_starts 2; 0.0035s/start)
populate_simplified_to_state.: 0.010044s (num_starts 6; 0.0017s/start)
get_function_tfg_map.opt_map.: 0.010199s (num_starts 1; 0.0102s/start)
main.2.: 0.010842s (num_starts 1; 0.0108s/start)
get_tfg.: 0.012268s (num_starts 2; 0.0061s/start)
get_function_tfg_map.: 0.012331s (num_starts 2; 0.0062s/start)
populate_simplified_assets.: 0.01281s (num_starts 12; 0.0011s/start)
populate_locs_potentially_modified_on_edge.: 0.012936s (num_starts 6; 0.0022s/start)
compute_new_lr_status_on_locs.: 0.023651s (num_starts 25; 0.0009s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.025766s (num_starts 6; 0.0043s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.026125s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.026657s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.029901s (num_starts 404; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.032882s (num_starts 48; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.0338s (num_starts 26; 0.0013s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.03612s (num_starts 24; 0.0015s/start)
populate_loc_liveness.: 0.042559s (num_starts 4; 0.0106s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.065284s (num_starts 71; 0.0009s/start)
tfg_postprocess_after_pointsto_analysis.: 0.072886s (num_starts 2; 0.0364s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.076775s (num_starts 2; 0.0384s/start)
ftmap_run_pointsto_analysis.: 0.129361s (num_starts 1; 0.1294s/start)
parse_consts_db.: 6.18985s (num_starts 1; 6.1899s/start)
main.: 6.36325s (num_starts 1; 6.3632s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:06 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:19 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:19 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:19 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:19 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:19 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
opt_map:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:20 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map: Found 2 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map created 2 possibilities in group opt_map.A...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L0%0%d --> L2%5%fcallStart ending at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L2%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Updating dst fcall edge using src fcall edge for toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Computing loop hoisting select expressions at toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Computing loop hoisting non-linear expressions at toPC L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Adding node L2%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:20 : opt_map.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Adding edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : opt_map.A2: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:20 : opt_map.A2: Added the 1 propagated CEs at PC L2%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:20 : opt_map.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : opt_map.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : opt_map.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L2%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L0%0%d --> L2%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L2%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    4 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false)))  ==  true
      2.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:20 : Added correlation to the product-TFG opt_map.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%5%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L2%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    4 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false)))  ==  true
      2.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:20 : opt_map.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:20 : opt_map.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:21 : opt_map.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:21 : opt_map.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A2: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%5%fcallStart=>L2%5%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : product-TFG opt_map.A2: Found 2 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L2%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:21 : product-TFG opt_map.A2 created 2 possibilities in group opt_map.A2.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%5%fcallStart --> L2%5%fcallEnd ending at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A2.B2 for fromPC L2%5%fcallStart_Lif.then%2%fcallStart and toPC L2%5%fcallEnd_Lif.then%2%fcallEnd, src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Computing loop hoisting select expressions at toPC L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Computing loop hoisting non-linear expressions at toPC L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Adding node L2%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:21 : opt_map.A2.B2: Getting alloca-ptrs on edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Found no alloca-ptrs on edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Adding edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A2.B2: Propagated 7 out of 7 counter-examples across edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : opt_map.A2.B2: Added the 7 propagated CEs at PC L2%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:21 : opt_map.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A2.B2: Computing CG regions after the addition of the edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done computing CG regions after the addition of the edge L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A2.B2 for fromPC L2%5%fcallStart_Lif.then%2%fcallStart and toPC L2%5%fcallEnd_Lif.then%2%fcallEnd, src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%5%fcallStart --> L2%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    5 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false)))  ==  true
      2.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      3.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : Added correlation to the product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallStart=>L2%5%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    5 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false)))  ==  true
      2.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      3.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2.B2: Updating invariants over the newly added edges in edge composition L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:21 : opt_map.A2.B2: Checking well-formedness assertions on outgoing edges from L2%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 6 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2.B2: Done relaxing invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2 created 1 possibilities in group opt_map.A2.B2.C...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L2%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Getting alloca-ptrs on edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Found no alloca-ptrs on edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Adding edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Propagated 0 out of 9 counter-examples across edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Computing CG regions after the addition of the edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Done computing CG regions after the addition of the edge L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L2%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : Added correlation to the product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1: Updating invariants over the newly added edges in edge composition L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L2%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2.C1 created 1 possibilities in group opt_map.A2.B2.C1.D...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : Added correlation to the product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%0.Lif.then%2%fcallStart), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%0.Lif.then%2%fcallStart, 4, false))) ; 10-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L2%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L2%5%fcallStart ; 3-->input.dst.llvm-%opt ; 11-->input.spec-%tmpvar-3.L2%5%fcallEnd ; 12-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd ; 13-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L2%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L2%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:yices.ce221      5.:cvc4.ce219
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 15-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%call.Lif.then%2%fcallEnd), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%call.Lif.then%2%fcallEnd, 4, false))) ; 16-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false))) ; 
    2 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___opt_map__x__=L0%0%argnum0=/-local./*___y___update_val__x__=L0%0%argnum0=/-heap, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L2%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallStart => C L2%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L2%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L2%5%fcallStart_Lif.then%2%fcallStart (C L2%5%fcallStart, A (line 7 at column 23))
                L2%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L2%5%fcallEnd_Lif.then%2%fcallEnd (C L2%5%fcallEnd, A (line 7 at column 23))
                L2%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 2.21s, query:smt.: 0.586613s (num_starts 34; 0.0173s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.51843s (num_starts 51; 0.0298s/start)ftmap_run_pointsto_analysis.: 0.173664s (num_starts 2; 0.0868s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 4e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
prune_dst_memslots.: 5e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 4; 0.0000s/start)
prove_trivial.: 7e-06s (num_starts 10; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.5e-05s (num_starts 6; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.7e-05s (num_starts 20; 0.0000s/start)
remove_complex_bv_exprs.: 1.9e-05s (num_starts 2; 0.0000s/start)
get_intersected_lr_status.: 2.2e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.3e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 3.7e-05s (num_starts 22; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3.9e-05s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-05s (num_starts 36; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5.3e-05s (num_starts 51; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 5.5e-05s (num_starts 2; 0.0000s/start)
lr_status_meet.: 6.3e-05s (num_starts 78; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 7e-05s (num_starts 3; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7.3e-05s (num_starts 51; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.7e-05s (num_starts 21; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.7e-05s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::meet.: 9.2e-05s (num_starts 133; 0.0000s/start)
expr_is_hidden_reg.: 9.5e-05s (num_starts 108; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 9.8e-05s (num_starts 32; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000107s (num_starts 61; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000117s (num_starts 8; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000117s (num_starts 16; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000118s (num_starts 6; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000138s (num_starts 41; 0.0000s/start)
compute_sprel_relations.: 0.000139s (num_starts 2; 0.0001s/start)
get_sprel_map_pair.: 0.000143s (num_starts 43; 0.0000s/start)
expr_is_callee_save_const.: 0.000149s (num_starts 132; 0.0000s/start)
propagate_sprels.: 0.000149s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.00016s (num_starts 15; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000179s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000191s (num_starts 23; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000204s (num_starts 10; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000204s (num_starts 1; 0.0002s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000212s (num_starts 12; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00022s (num_starts 41; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000234s (num_starts 15; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000253s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.000291s (num_starts 3; 0.0001s/start)
populate_locid2expr_map.: 0.000309s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000311s (num_starts 1; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000318s (num_starts 4; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00032s (num_starts 2; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000335s (num_starts 2; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000349s (num_starts 17; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000363s (num_starts 2; 0.0002s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000366s (num_starts 95; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000382s (num_starts 1; 0.0004s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000393s (num_starts 80; 0.0000s/start)
create_closure_matrix.: 0.000396s (num_starts 44; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000407s (num_starts 1; 0.0004s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00041s (num_starts 35; 0.0000s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000414s (num_starts 17; 0.0000s/start)
set_result_and_counter_example.: 0.000426s (num_starts 34; 0.0000s/start)
proof_query_is_trivial.: 0.000438s (num_starts 51; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000448s (num_starts 2; 0.0002s/start)
graph_with_guessing_sync_preds.: 0.000451s (num_starts 51; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000458s (num_starts 95; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000462s (num_starts 1; 0.0005s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000463s (num_starts 6; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000498s (num_starts 2; 0.0002s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000507s (num_starts 94; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000514s (num_starts 37; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000549s (num_starts 17; 0.0000s/start)
expr_represents_llvm_undef.: 0.000553s (num_starts 140; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000561s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000566s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000569s (num_starts 1; 0.0006s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000569s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000578s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000578s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000583s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000585s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000593s (num_starts 1; 0.0006s/start)
graph_locs_add_all_specvars.: 0.000645s (num_starts 2; 0.0003s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000684s (num_starts 4; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000731s (num_starts 16; 0.0000s/start)
removeMostPromising.: 0.000757s (num_starts 13; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-trivial.: 0.000772s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000773s (num_starts 1; 0.0008s/start)
get_unrolled_loop_paths_from.: 0.000773s (num_starts 3; 0.0003s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000818s (num_starts 6; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000852s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000876s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000878s (num_starts 1; 0.0009s/start)
pth_collect_preds_using_atom_func.: 0.00088s (num_starts 21; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000881s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.000885s (num_starts 1; 0.0009s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000901s (num_starts 17; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000915s (num_starts 4; 0.0002s/start)
collect_assumes_around_edge.: 0.000944s (num_starts 4; 0.0002s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000945s (num_starts 41; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000959s (num_starts 34; 0.0000s/start)
identify_address_taken_local_variables.: 0.00096s (num_starts 2; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000972s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000975s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000978s (num_starts 1; 0.0010s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.00099s (num_starts 6; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.00102s (num_starts 6; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.001039s (num_starts 44; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.001064s (num_starts 1; 0.0011s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.001122s (num_starts 27; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001133s (num_starts 18; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001135s (num_starts 44; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001142s (num_starts 2; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001146s (num_starts 2; 0.0006s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001148s (num_starts 3; 0.0004s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001153s (num_starts 18; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.001179s (num_starts 21; 0.0001s/start)
graph_visit_exprs.: 0.001192s (num_starts 3; 0.0004s/start)
tfg::populate_loc_definedness.: 0.001233s (num_starts 3; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.001262s (num_starts 6; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.00127s (num_starts 41; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.001298s (num_starts 41; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00134s (num_starts 29; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.001346s (num_starts 2; 0.0007s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00136s (num_starts 35; 0.0000s/start)
construct_linear_combination_exprs.: 0.001445s (num_starts 45; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001445s (num_starts 18; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001467s (num_starts 3; 0.0005s/start)
ldr_decomposition.: 0.001518s (num_starts 32; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.001634s (num_starts 2; 0.0008s/start)
bv_const_ref_map2expr_map.: 0.001658s (num_starts 45; 0.0000s/start)
compute_vars_reaching_definitions.: 0.001658s (num_starts 2; 0.0008s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001695s (num_starts 80; 0.0000s/start)
propagate_nodece_across_edge.: 0.001699s (num_starts 3; 0.0006s/start)
generate_aliasing_constraints_from_expr.: 0.001754s (num_starts 353; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001784s (num_starts 2; 0.0009s/start)
populate_branch_affecting_locs.: 0.001786s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.00179s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00184s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001843s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-trivial.: 0.001871s (num_starts 2; 0.0009s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.001871s (num_starts 80; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001874s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001879s (num_starts 2; 0.0009s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001965s (num_starts 3; 0.0007s/start)
populate_transitive_closure.: 0.00197s (num_starts 15; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.001991s (num_starts 4; 0.0005s/start)
check_node_stability_after_CE_addition.: 0.002141s (num_starts 47; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.002273s (num_starts 22; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002328s (num_starts 3; 0.0008s/start)
cg_src_dst_tfg_copy.: 0.002401s (num_starts 1; 0.0024s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.002514s (num_starts 1; 0.0025s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002717s (num_starts 80; 0.0000s/start)
graph_identify_back_edges.: 0.002861s (num_starts 24; 0.0001s/start)
find_dominators.: 0.002913s (num_starts 28; 0.0001s/start)
graph_identify_natural_loops.: 0.002931s (num_starts 24; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002959s (num_starts 3; 0.0010s/start)
create_sp_version_relations_lattice_at_pc.: 0.003049s (num_starts 44; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.003304s (num_starts 149; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.003638s (num_starts 4; 0.0009s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003683s (num_starts 41; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.00388s (num_starts 78; 0.0000s/start)
get_next_potential_correlations.: 0.003898s (num_starts 4; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.003902s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.003906s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.00391s (num_starts 1; 0.0039s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003929s (num_starts 203; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004174s (num_starts 1; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004177s (num_starts 1; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.004179s (num_starts 1; 0.0042s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004341s (num_starts 92; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.004458s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.00475s (num_starts 2; 0.0024s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.004846s (num_starts 113; 0.0000s/start)
tfg::get_aliasing_constraints_for_edge.: 0.004904s (num_starts 142; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.005071s (num_starts 2; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.005076s (num_starts 2; 0.0025s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005136s (num_starts 503; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005392s (num_starts 35; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.00583s (num_starts 3; 0.0019s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005834s (num_starts 41; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.00594s (num_starts 32; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-trivial.: 0.006077s (num_starts 1; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.00608s (num_starts 1; 0.0061s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.006378s (num_starts 2; 0.0032s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.006381s (num_starts 2; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.006393s (num_starts 2; 0.0032s/start)
lhs_set_sort.: 0.006406s (num_starts 41; 0.0002s/start)
bv_linear_solve.: 0.006428s (num_starts 32; 0.0002s/start)
query:bv_solve.: 0.006592s (num_starts 32; 0.0002s/start)
compute_regions.: 0.006796s (num_starts 24; 0.0003s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.006935s (num_starts 35; 0.0002s/start)
do_ssa_transformation.: 0.007012s (num_starts 2; 0.0035s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.007052s (num_starts 75; 0.0001s/start)
collect_inductive_preds_around_path.: 0.007407s (num_starts 51; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.007471s (num_starts 1; 0.0075s/start)
populate_simplified_to_state.: 0.007711s (num_starts 3; 0.0026s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.007736s (num_starts 4; 0.0019s/start)
collect_assumes_around_path_helper.: 0.0078s (num_starts 95; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.007973s (num_starts 35; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.008004s (num_starts 95; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.008403s (num_starts 32; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.008415s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008416s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008422s (num_starts 1; 0.0084s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.008449s (num_starts 75; 0.0001s/start)
counter_example_satisfies_preds.: 0.008502s (num_starts 238; 0.0000s/start)
populate_simplified_assets.: 0.008625s (num_starts 6; 0.0014s/start)
counter_example_falsifies_preds.: 0.0095s (num_starts 48; 0.0002s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.009585s (num_starts 393; 0.0000s/start)
bvsolve_cache_query.miss1.: 0.009692s (num_starts 32; 0.0003s/start)
avail_exprs_create_submap.: 0.009889s (num_starts 105; 0.0001s/start)
bvsolve_cache_query.: 0.010008s (num_starts 32; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.010561s (num_starts 3; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.010564s (num_starts 3; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010717s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010718s (num_starts 1; 0.0107s/start)
query:convert_to_z3.: 0.010853s (num_starts 222; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.01091s (num_starts 26; 0.0004s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.010967s (num_starts 3; 0.0037s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.010969s (num_starts 26; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011202s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011203s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011205s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011205s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.011207s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.011219s (num_starts 1; 0.0112s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.011291s (num_starts 9; 0.0013s/start)
get_unrolled_paths_from.: 0.011463s (num_starts 25; 0.0005s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.012035s (num_starts 25; 0.0005s/start)
predicate_canonicalized.: 0.012116s (num_starts 45; 0.0003s/start)
graph_to_stream.: 0.012208s (num_starts 4; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities..: 0.012372s (num_starts 3; 0.0041s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.012382s (num_starts 3; 0.0041s/start)
solve_for_bv_points.: 0.012447s (num_starts 32; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012469s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012469s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012471s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012472s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.012473s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012474s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond.: 0.012475s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.012477s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.01248s (num_starts 1; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-trivial.: 0.012537s (num_starts 3; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012749s (num_starts 1; 0.0127s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012751s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012753s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012754s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.012757s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012758s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012761s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012823s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012826s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.01283s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.012834s (num_starts 1; 0.0128s/start)
collect_aliasing_constraints_around_path_helper.: 0.012843s (num_starts 135; 0.0001s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.012993s (num_starts 1; 0.0130s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013087s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013093s (num_starts 1; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013097s (num_starts 1; 0.0131s/start)
collect_aliasing_constraints_around_path.: 0.01313s (num_starts 83; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.01353s (num_starts 2; 0.0068s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.013534s (num_starts 2; 0.0068s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013766s (num_starts 1; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013766s (num_starts 1; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.01377s (num_starts 1; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.013877s (num_starts 2; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear.: 0.013882s (num_starts 2; 0.0069s/start)
query:convert_from_z3.: 0.013996s (num_starts 222; 0.0001s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.014086s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-trivial.: 0.014106s (num_starts 4; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.014757s (num_starts 2; 0.0074s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.015103s (num_starts 32; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015498s (num_starts 1; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.015502s (num_starts 1; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015728s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.015732s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.015964s (num_starts 6; 0.0027s/start)
compute_expr_eqclasses_at_pc.: 0.016023s (num_starts 2; 0.0080s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.016446s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.016675s (num_starts 2; 0.0083s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.016685s (num_starts 2; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.017118s (num_starts 3; 0.0057s/start)
graph_ec_apply_trans_funs_helper.0.: 0.017296s (num_starts 214; 0.0001s/start)
counter_example_evaluate_preds.: 0.017358s (num_starts 286; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.017559s (num_starts 112; 0.0002s/start)
check_wfconds_on_edge.L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd.: 0.017688s (num_starts 2; 0.0088s/start)
graph_ec_apply_trans_funs_helper.: 0.018644s (num_starts 220; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart.: 0.018774s (num_starts 2; 0.0094s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.018983s (num_starts 4; 0.0047s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.019048s (num_starts 220; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.019266s (num_starts 216; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.019371s (num_starts 5; 0.0039s/start)
edge_composition_apply_trans_funs_on_pred.: 0.019434s (num_starts 51; 0.0004s/start)
computeWP_for_pred_across_ec.: 0.019789s (num_starts 216; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.020055s (num_starts 35; 0.0006s/start)
cg_add_node.: 0.020207s (num_starts 4; 0.0051s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.020691s (num_starts 75; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.02131s (num_starts 4; 0.0053s/start)
gen_pred_from_coeff_row.simplify.: 0.022022s (num_starts 45; 0.0005s/start)
put_smtlib_string_in_file.: 0.022423s (num_starts 68; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023115s (num_starts 1; 0.0231s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023116s (num_starts 1; 0.0231s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.023122s (num_starts 1; 0.0231s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown.: 0.023126s (num_starts 1; 0.0231s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.023154s (num_starts 4; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023167s (num_starts 2; 0.0116s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025563s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025569s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.025603s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.025608s (num_starts 2; 0.0128s/start)
create_new_corr_graph_edge.new_node.: 0.025681s (num_starts 3; 0.0086s/start)
create_new_corr_graph_edge.: 0.026231s (num_starts 4; 0.0066s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.026949s (num_starts 503; 0.0001s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.027641s (num_starts 583; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.029626s (num_starts 4; 0.0074s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030408s (num_starts 1; 0.0304s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030409s (num_starts 1; 0.0304s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030417s (num_starts 1; 0.0304s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.030566s (num_starts 22; 0.0014s/start)
compute_z3_expr.: 0.030687s (num_starts 256; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.032383s (num_starts 38; 0.0009s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.032616s (num_starts 38; 0.0009s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.03285s (num_starts 503; 0.0001s/start)
query:simplify-z3.: 0.03547s (num_starts 471; 0.0001s/start)
populate_loc_liveness.: 0.035572s (num_starts 3; 0.0119s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.035655s (num_starts 3; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.037696s (num_starts 1; 0.0377s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.037697s (num_starts 1; 0.0377s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.0377s (num_starts 1; 0.0377s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess.: 0.037704s (num_starts 1; 0.0377s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.037882s (num_starts 1; 0.0379s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038598s (num_starts 2; 0.0193s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038604s (num_starts 2; 0.0193s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.038643s (num_starts 2; 0.0193s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.038649s (num_starts 2; 0.0193s/start)
gen_pred_from_coeff_row.: 0.038767s (num_starts 45; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.038849s (num_starts 2; 0.0194s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.038865s (num_starts 2; 0.0194s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.038874s (num_starts 2; 0.0194s/start)
compute_preds_for_bv_points.: 0.039452s (num_starts 12; 0.0033s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.039517s (num_starts 14; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040484s (num_starts 3; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040491s (num_starts 3; 0.0135s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.046285s (num_starts 6; 0.0077s/start)
tfg_relax_pointsto_vals_on_edge.: 0.047037s (num_starts 18; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.047978s (num_starts 4; 0.0120s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.048545s (num_starts 1; 0.0485s/start)
decide_hoare_triple_helper;-trivial.: 0.049439s (num_starts 18; 0.0027s/start)
tfg_postprocess_after_pointsto_analysis.: 0.05105s (num_starts 2; 0.0255s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051459s (num_starts 2; 0.0257s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051459s (num_starts 2; 0.0257s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.051492s (num_starts 2; 0.0257s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear.: 0.053071s (num_starts 6; 0.0088s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.053358s (num_starts 4; 0.0133s/start)
guarded_predicate_set_and.: 0.053873s (num_starts 41; 0.0013s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.055395s (num_starts 41; 0.0014s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.057193s (num_starts 2; 0.0286s/start)
check_wfconds_on_edge.L2%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.05833s (num_starts 2; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.061634s (num_starts 3; 0.0205s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.061694s (num_starts 21; 0.0029s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.062587s (num_starts 41; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067114s (num_starts 1; 0.0671s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067117s (num_starts 1; 0.0671s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067121s (num_starts 1; 0.0671s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.067129s (num_starts 1; 0.0671s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate.: 0.067132s (num_starts 1; 0.0671s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.067139s (num_starts 1; 0.0671s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.071286s (num_starts 12; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073622s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073626s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.073633s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false.: 0.073636s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075091s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075094s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075095s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.075103s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false.: 0.075107s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.075114s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown.: 0.075807s (num_starts 7; 0.0108s/start)
parse_z3_model.: 0.077017s (num_starts 13; 0.0059s/start)
compute_lr_status_for_expr.: 0.077296s (num_starts 87; 0.0009s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.077405s (num_starts 78; 0.0010s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.077568s (num_starts 78; 0.0010s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.079569s (num_starts 66; 0.0012s/start)
evaluate_function_call.: 0.081945s (num_starts 16; 0.0051s/start)
apply_mask_and_overlay_array_constant.: 0.083641s (num_starts 66; 0.0013s/start)
parse_cvc4_model.: 0.08537s (num_starts 13; 0.0066s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087841s (num_starts 2; 0.0439s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091734s (num_starts 1; 0.0917s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091739s (num_starts 1; 0.0917s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091741s (num_starts 1; 0.0917s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.09175s (num_starts 1; 0.0917s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate.: 0.091754s (num_starts 1; 0.0918s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.091761s (num_starts 1; 0.0918s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.092392s (num_starts 4; 0.0231s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.100961s (num_starts 17; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100976s (num_starts 1; 0.1010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100977s (num_starts 1; 0.1010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.100983s (num_starts 1; 0.1010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.100985s (num_starts 1; 0.1010s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.101907s (num_starts 47; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.10872s (num_starts 1; 0.1087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.108725s (num_starts 1; 0.1087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.108727s (num_starts 1; 0.1087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.108735s (num_starts 1; 0.1087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false.: 0.108738s (num_starts 1; 0.1087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.108747s (num_starts 1; 0.1087s/start)
compute_new_lr_status_on_locs.: 0.114272s (num_starts 35; 0.0033s/start)
corr_graph::add_edge().: 0.114595s (num_starts 4; 0.0286s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.115053s (num_starts 17; 0.0068s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.121185s (num_starts 2; 0.0606s/start)
parse_yices_model.: 0.121751s (num_starts 13; 0.0094s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.126032s (num_starts 4; 0.0315s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.133469s (num_starts 36; 0.0037s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.133725s (num_starts 24; 0.0056s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.141755s (num_starts 4; 0.0354s/start)
corr_graph_add_correlation.: 0.141894s (num_starts 4; 0.0355s/start)
counter_example_translate_on_edge_composition_helper.: 0.142728s (num_starts 255; 0.0006s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.149665s (num_starts 4; 0.0374s/start)
check_wfconds_on_edge.: 0.152067s (num_starts 8; 0.0190s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158851s (num_starts 2; 0.0794s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.158893s (num_starts 2; 0.0794s/start)
check_equivalence_proof.: 0.165408s (num_starts 1; 0.1654s/start)
ftmap_run_pointsto_analysis.: 0.173664s (num_starts 2; 0.0868s/start)
tfg_run_pointsto_analysis.: 0.17396s (num_starts 2; 0.0870s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174591s (num_starts 2; 0.0873s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.174633s (num_starts 2; 0.0873s/start)
tfg_populate_structs_after_ssa_construction.: 0.181992s (num_starts 2; 0.0910s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.191262s (num_starts 2; 0.0956s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.208947s (num_starts 5; 0.0418s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.215503s (num_starts 7; 0.0308s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.218525s (num_starts 2; 0.1093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.218545s (num_starts 2; 0.1093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.220448s (num_starts 4; 0.0551s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.222287s (num_starts 6; 0.0370s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.223614s (num_starts 5; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.223625s (num_starts 5; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.229736s (num_starts 6; 0.0383s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear.: 0.229749s (num_starts 6; 0.0383s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.23129s (num_starts 3; 0.0771s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.232117s (num_starts 3; 0.0774s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.232122s (num_starts 3; 0.0774s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.232142s (num_starts 3; 0.0774s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown.: 0.23215s (num_starts 3; 0.0774s/start)
ce_reconcile_sorts_and_values.: 0.232984s (num_starts 39; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown.: 0.233221s (num_starts 5; 0.0466s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.241287s (num_starts 24; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.247825s (num_starts 4; 0.0620s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.247908s (num_starts 4; 0.0620s/start)
check_preds_on_edge_compositions.: 0.255029s (num_starts 12; 0.0213s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.260088s (num_starts 1; 0.2601s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.264072s (num_starts 8; 0.0330s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.277173s (num_starts 9; 0.0308s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.27778s (num_starts 10; 0.0278s/start)
read_counter_examples_from_channel.: 0.286463s (num_starts 13; 0.0220s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.29477s (num_starts 257; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.296731s (num_starts 14; 0.0212s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.298712s (num_starts 4; 0.0747s/start)
decide_hoare_triple_helper;per-path;L2%5%fcallStart_Lif.then%2%fcallStart;(L2%5%fcallStart_Lif.then%2%fcallStart=>L2%5%fcallEnd_Lif.then%2%fcallEnd).: 0.310321s (num_starts 13; 0.0239s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.355004s (num_starts 1; 0.3550s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.358411s (num_starts 4; 0.0896s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.358483s (num_starts 4; 0.0896s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.: 0.359586s (num_starts 1; 0.3596s/start)
decide_hoare_triple.: 0.378096s (num_starts 7; 0.0540s/start)
dst_edge_composition_proves_false.: 0.390295s (num_starts 4; 0.0976s/start)
get_next_dst_edge_composition_to_correlate.: 0.39815s (num_starts 5; 0.0796s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.548134s (num_starts 10; 0.0548s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.56435s (num_starts 16; 0.0353s/start)
query:smt.: 0.586613s (num_starts 34; 0.0173s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.68061s (num_starts 17; 0.0400s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%5%fcallStart_Lif.then%2%fcallStart).: 0.694606s (num_starts 19; 0.0366s/start)
spawn_smt_query.: 0.873432s (num_starts 34; 0.0257s/start)
update_invariant_state_for_edges.: 1.17825s (num_starts 4; 0.2946s/start)
solver_provable.: 1.18529s (num_starts 41; 0.0289s/start)
cg_check_new_cg_ec.: 1.18585s (num_starts 4; 0.2965s/start)
correl_entry_apply.: 1.18593s (num_starts 4; 0.2965s/start)
expr_is_provable.: 1.19545s (num_starts 41; 0.0292s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.19606s (num_starts 41; 0.0292s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.198s (num_starts 41; 0.0292s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.20021s (num_starts 41; 0.0293s/start)
solver_satisfiable-cache-miss.: 1.22574s (num_starts 34; 0.0361s/start)
solver_satisfiable.: 1.22595s (num_starts 42; 0.0292s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.25687s (num_starts 41; 0.0307s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.26065s (num_starts 41; 0.0307s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.2613s (num_starts 41; 0.0308s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.34081s (num_starts 41; 0.0327s/start)
prove.: 1.34103s (num_starts 41; 0.0327s/start)
prove_spawn_and_join_helper.: 1.34119s (num_starts 41; 0.0327s/start)
prove_spawn_and_join.: 1.45236s (num_starts 41; 0.0354s/start)
prove_wrapper.proof_query_not_trivial.: 1.45575s (num_starts 41; 0.0355s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.46745s (num_starts 33; 0.0445s/start)
prove_wrapper.: 1.47697s (num_starts 51; 0.0290s/start)
decide_hoare_triple_check_ub.: 1.4989s (num_starts 51; 0.0294s/start)
decide_hoare_triple_helper.: 1.51843s (num_starts 51; 0.0298s/start)
expandProductCFG.: 1.58849s (num_starts 5; 0.3177s/start)
decide_hoare_triple_with_alias_cons.: 1.6525s (num_starts 51; 0.0324s/start)
bestFirstSearch.: 1.79721s (num_starts 1; 1.7972s/start)
Time taken for equivalence check.: 1.96601s (num_starts 1; 1.9660s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 9
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 8
# of paths expanded.: 4
# of queries to linear solver.: 32
# of smt-solver-queries.: 34
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 2
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 2
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 2
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 3
smt-queries-cache-hits.: 8
smt-queries-cvc4-sat.: 13
smt-queries-yices-sat.: 13
smt-queries-z3-sat.: 13
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L2%5%fcallStart_Lif.then%2%fcallStart.: 3
final-CG-counterexamples-total-at-L2%5%fcallEnd_Lif.then%2%fcallEnd.: 9
final-CG-counterexamples-total-at-L2%5%fcallStart_Lif.then%2%fcallStart.: 7
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 12
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.33
final-CG-time-to-total-time-ratio.: 0.74
query-time-to-total-time-ratio.: 0.30

Context stats:
exprs: count: 142376
sorts: count: 152
num_proof_queries: 41
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3417
	        hit ratio:	0.948785
m_simplify_solver:
	----------- total:	855
	        hit ratio:	0.708772
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	64
	        hit ratio:	0.8125
m_z3_solver_substitution:
	----------- total:	249
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	249
	        hit ratio:	0
m_expr_size:
	----------- total:	1887
	        hit ratio:	0.841017
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	5225
	        hit ratio:	0.609952

z3_solver expr_query_cache entry size: 34
	----------- total:	42
	             hits:	8
	        hit ratio:	0.190476
histogram (time taken by solver in ms):
[ 3.5790,  4.6756) (avg.  4.2515)        : 8
[ 4.6756,  6.1082) (avg.  5.4027)        : 11
[ 6.1082,  7.9798) (avg.  6.4820)        : 2
[ 7.9798, 10.4248) (avg.  0.0000)        : 0
[10.4248, 13.6189) (avg.  0.0000)        : 0
[13.6189, 17.7917) (avg.  0.0000)        : 0
[17.7917, 23.2431) (avg.  0.0000)        : 0
[23.2431, 30.3648) (avg. 27.9110)        : 3
[30.3648, 39.6686) (avg. 34.8217)        : 6
[39.6686, 51.8230) (avg. 46.8203)        : 4
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  52) (avg.  40)                    : 1
[ 52,  64) (avg.   0)                    : 0
[ 64,  75) (avg.   0)                    : 0
[ 75,  87) (avg.   0)                    : 0
[ 87,  98) (avg.   0)                    : 0
[ 98, 110) (avg. 105)                    : 6
[110, 122) (avg. 115)                    : 20
[122, 133) (avg. 128)                    : 4
[133, 145) (avg. 135)                    : 2
[145, 156) (avg. 146)                    : 1
Top 10 highest time taking queries:
1. [0.051s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
2. [0.046s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.1
4. [0.045s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.037s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL2%5%fcallEnd_Lif.then.0
6. [0.035s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.035s] SOLVER_RES_TRUE memlabel_assertions_sat.0
8. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-3-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0

<MSG>0:22 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:22 : Computing equivalence for function: update_val...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
update_val:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:22 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:22 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:22 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.19s, query:smt.: 0.074224s (num_starts 3; 0.0247s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.110075s (num_starts 4; 0.0275s/start)ftmap_run_pointsto_analysis.: 0.014154s (num_starts 2; 0.0071s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::meet.: 1e-06s (num_starts 9; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-06s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 2e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 2e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 3e-06s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 4e-06s (num_starts 4; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 4e-06s (num_starts 3; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 5e-06s (num_starts 1; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5e-06s (num_starts 4; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6e-06s (num_starts 4; 0.0000s/start)
proof_query_is_trivial_helper.: 8e-06s (num_starts 4; 0.0000s/start)
get_intersected_lr_status.: 1.1e-05s (num_starts 2; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1.1e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 1.2e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 1.2e-05s (num_starts 13; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 1.2e-05s (num_starts 3; 0.0000s/start)
lr_status_meet.: 1.3e-05s (num_starts 21; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.4e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 1.8e-05s (num_starts 13; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 1.8e-05s (num_starts 3; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 1.9e-05s (num_starts 1; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 2e-05s (num_starts 7; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.1e-05s (num_starts 1; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.1e-05s (num_starts 2; 0.0000s/start)
graph_with_guessing_sync_preds.: 2.1e-05s (num_starts 4; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.3e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.4e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.4e-05s (num_starts 25; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 2.5e-05s (num_starts 3; 0.0000s/start)
def_analysis::xfer_and_meet.: 2.6e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 2.7e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 3e-05s (num_starts 3; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 3.1e-05s (num_starts 13; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.4e-05s (num_starts 2; 0.0000s/start)
proof_query_is_trivial.: 3.7e-05s (num_starts 4; 0.0000s/start)
graph_locs_add_all_exvregs.: 3.8e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 4.3e-05s (num_starts 6; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 5.2e-05s (num_starts 7; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 5.8e-05s (num_starts 2; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 6e-05s (num_starts 1; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 6.2e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_local_vars.: 6.3e-05s (num_starts 2; 0.0000s/start)
removeMostPromising.: 6.3e-05s (num_starts 4; 0.0000s/start)
pth_collect_preds_using_atom_func.: 6.5e-05s (num_starts 5; 0.0000s/start)
set_result_and_counter_example.: 6.6e-05s (num_starts 3; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 6.7e-05s (num_starts 18; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 6.9e-05s (num_starts 3; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 7.1e-05s (num_starts 4; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 7.3e-05s (num_starts 2; 0.0000s/start)
tfg_edge_composition_get_assumes.: 7.6e-05s (num_starts 5; 0.0000s/start)
get_sprel_map_pair_at_pc.: 8.1e-05s (num_starts 3; 0.0000s/start)
tfg::collect_assumes_around_edge.: 8.3e-05s (num_starts 5; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.5e-05s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.6e-05s (num_starts 11; 0.0000s/start)
collect_assumes_around_edge.: 9.6e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 9.6e-05s (num_starts 2; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 9.7e-05s (num_starts 2; 0.0000s/start)
collect_inductive_preds_around_path.: 9.9e-05s (num_starts 4; 0.0000s/start)
propagate_sprels.: 0.000105s (num_starts 2; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000108s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000117s (num_starts 2; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.000119s (num_starts 51; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000125s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000125s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000131s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000132s (num_starts 1; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000135s (num_starts 7; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000135s (num_starts 1; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000136s (num_starts 2; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000138s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000142s (num_starts 1; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000157s (num_starts 6; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000159s (num_starts 2; 0.0001s/start)
populate_simplified_to_state.: 0.000161s (num_starts 3; 0.0001s/start)
populate_branch_affecting_locs.: 0.000163s (num_starts 3; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000176s (num_starts 3; 0.0001s/start)
identify_address_taken_local_variables.: 0.000176s (num_starts 1; 0.0002s/start)
corr_graph_enumerate_correlations.: 0.000178s (num_starts 1; 0.0002s/start)
expr_represents_llvm_undef.: 0.000184s (num_starts 29; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000185s (num_starts 16; 0.0000s/start)
compute_vars_reaching_definitions.: 0.000196s (num_starts 2; 0.0001s/start)
counter_example_falsifies_preds.: 0.000203s (num_starts 3; 0.0001s/start)
populate_transitive_closure.: 0.000208s (num_starts 11; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000218s (num_starts 4; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000221s (num_starts 3; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.000222s (num_starts 6; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000227s (num_starts 21; 0.0000s/start)
graph_visit_exprs.: 0.000243s (num_starts 3; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.000247s (num_starts 2; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.000254s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000256s (num_starts 3; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000257s (num_starts 11; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000267s (num_starts 5; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.00027s (num_starts 3; 0.0001s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.00028s (num_starts 1; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.000293s (num_starts 9; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00031s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000312s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000313s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000315s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000315s (num_starts 1; 0.0003s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000315s (num_starts 5; 0.0001s/start)
populate_simplified_assets.: 0.000316s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000317s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000318s (num_starts 1; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000319s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.000321s (num_starts 1; 0.0003s/start)
find_dominators.: 0.000323s (num_starts 19; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000325s (num_starts 1; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000326s (num_starts 4; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000328s (num_starts 1; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000337s (num_starts 4; 0.0001s/start)
lhs_set_sort.: 0.000337s (num_starts 3; 0.0001s/start)
tfg::populate_loc_definedness.: 0.000348s (num_starts 3; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000353s (num_starts 6; 0.0001s/start)
graph_identify_back_edges.: 0.000357s (num_starts 15; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000371s (num_starts 6; 0.0001s/start)
graph_identify_natural_loops.: 0.000385s (num_starts 15; 0.0000s/start)
counter_example_satisfies_preds.: 0.000397s (num_starts 18; 0.0000s/start)
get_next_potential_correlations.: 0.000405s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.000448s (num_starts 5; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.000456s (num_starts 3; 0.0002s/start)
collect_aliasing_constraints_around_path_helper.: 0.000476s (num_starts 22; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.000482s (num_starts 3; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.000516s (num_starts 14; 0.0000s/start)
collect_assumes_around_path_helper.: 0.00052s (num_starts 13; 0.0000s/start)
create_new_corr_graph_edge.new_node.: 0.000534s (num_starts 1; 0.0005s/start)
graph_with_paths::collect_assumes_around_path.: 0.000545s (num_starts 13; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000547s (num_starts 29; 0.0000s/start)
counter_example_evaluate_preds.: 0.000561s (num_starts 21; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.00057s (num_starts 12; 0.0000s/start)
cg_add_node.: 0.000571s (num_starts 2; 0.0003s/start)
create_new_corr_graph_edge.: 0.000587s (num_starts 1; 0.0006s/start)
graph_ec_apply_trans_funs_helper.: 0.000602s (num_starts 12; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000625s (num_starts 12; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000626s (num_starts 4; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.000637s (num_starts 6; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000656s (num_starts 12; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000682s (num_starts 4; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.000686s (num_starts 12; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000692s (num_starts 29; 0.0000s/start)
get_unrolled_paths_from.: 0.000759s (num_starts 6; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000772s (num_starts 117; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000782s (num_starts 3; 0.0003s/start)
avail_exprs_create_submap.: 0.000844s (num_starts 12; 0.0001s/start)
compute_regions.: 0.00086s (num_starts 15; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.000971s (num_starts 4; 0.0002s/start)
edge_composition_apply_trans_funs_on_pred.: 0.000975s (num_starts 4; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.00101s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.001039s (num_starts 2; 0.0005s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001039s (num_starts 6; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001076s (num_starts 6; 0.0002s/start)
put_smtlib_string_in_file.: 0.001095s (num_starts 6; 0.0002s/start)
compute_lr_status_for_expr.: 0.001516s (num_starts 25; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001545s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001584s (num_starts 21; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001841s (num_starts 1; 0.0018s/start)
query:convert_to_z3.: 0.001918s (num_starts 34; 0.0001s/start)
compute_z3_expr.: 0.002036s (num_starts 37; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002151s (num_starts 4; 0.0005s/start)
compute_new_lr_status_on_locs.: 0.002337s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.00278s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002782s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.002785s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.002787s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002789s (num_starts 1; 0.0028s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.002992s (num_starts 6; 0.0005s/start)
query:convert_from_z3.: 0.003107s (num_starts 34; 0.0001s/start)
decide_hoare_triple_helper;-trivial.: 0.003151s (num_starts 2; 0.0016s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.003545s (num_starts 124; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.003636s (num_starts 2; 0.0018s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.003698s (num_starts 117; 0.0000s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.003714s (num_starts 3; 0.0012s/start)
apply_mask_and_overlay_array_constant.: 0.003906s (num_starts 3; 0.0013s/start)
check_equivalence_proof.: 0.004112s (num_starts 1; 0.0041s/start)
graph_to_stream.: 0.004126s (num_starts 4; 0.0010s/start)
counter_example_translate_on_edge_composition_helper.: 0.004171s (num_starts 21; 0.0002s/start)
tfg_relax_pointsto_vals_on_edge.: 0.004295s (num_starts 2; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.004729s (num_starts 117; 0.0000s/start)
populate_loc_liveness.: 0.004903s (num_starts 3; 0.0016s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.00516s (num_starts 2; 0.0026s/start)
parse_yices_model.: 0.005562s (num_starts 2; 0.0028s/start)
corr_graph::add_edge().: 0.00571s (num_starts 1; 0.0057s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.006475s (num_starts 1; 0.0065s/start)
corr_graph_add_correlation.: 0.006506s (num_starts 1; 0.0065s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.006544s (num_starts 1; 0.0065s/start)
parse_z3_model.: 0.006549s (num_starts 2; 0.0033s/start)
tfg_postprocess_after_pointsto_analysis.: 0.006721s (num_starts 2; 0.0034s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.006769s (num_starts 1; 0.0068s/start)
parse_cvc4_model.: 0.006859s (num_starts 2; 0.0034s/start)
query:simplify-z3.: 0.007881s (num_starts 68; 0.0001s/start)
guarded_predicate_set_and.: 0.008653s (num_starts 3; 0.0029s/start)
ftmap_run_pointsto_analysis.: 0.014154s (num_starts 2; 0.0071s/start)
tfg_run_pointsto_analysis.: 0.014314s (num_starts 2; 0.0072s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.015233s (num_starts 3; 0.0051s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.015334s (num_starts 3; 0.0051s/start)
tfg_populate_structs_after_ssa_construction.: 0.015515s (num_starts 2; 0.0078s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.017783s (num_starts 2; 0.0089s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018864s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018866s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018869s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018869s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01887s (num_starts 1; 0.0189s/start)
ce_reconcile_sorts_and_values.: 0.018882s (num_starts 6; 0.0031s/start)
read_counter_examples_from_channel.: 0.019306s (num_starts 2; 0.0097s/start)
update_invariant_state_for_edges.: 0.021397s (num_starts 1; 0.0214s/start)
cg_check_new_cg_ec.: 0.021447s (num_starts 1; 0.0214s/start)
correl_entry_apply.: 0.021461s (num_starts 1; 0.0215s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.021667s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.021672s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.021678s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.021682s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.021687s (num_starts 2; 0.0108s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.021828s (num_starts 2; 0.0109s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.022509s (num_starts 2; 0.0113s/start)
check_wfconds_on_edge.: 0.022522s (num_starts 2; 0.0113s/start)
check_preds_on_edge_compositions.: 0.022641s (num_starts 3; 0.0075s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.028491s (num_starts 36; 0.0008s/start)
query:smt.: 0.074224s (num_starts 3; 0.0247s/start)
solver_provable.: 0.078119s (num_starts 3; 0.0260s/start)
expr_is_provable.: 0.078564s (num_starts 3; 0.0262s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.078609s (num_starts 3; 0.0262s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.078751s (num_starts 3; 0.0263s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.078838s (num_starts 3; 0.0263s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.087683s (num_starts 3; 0.0292s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087874s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087876s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087877s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087877s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087879s (num_starts 1; 0.0879s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.087884s (num_starts 3; 0.0293s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.087886s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.087889s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.087893s (num_starts 1; 0.0879s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.087895s (num_starts 1; 0.0879s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.087927s (num_starts 3; 0.0293s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.088231s (num_starts 2; 0.0441s/start)
decide_hoare_triple.: 0.088794s (num_starts 2; 0.0444s/start)
dst_edge_composition_proves_false.: 0.091058s (num_starts 1; 0.0911s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.091191s (num_starts 3; 0.0304s/start)
prove.: 0.091207s (num_starts 3; 0.0304s/start)
prove_spawn_and_join_helper.: 0.09122s (num_starts 3; 0.0304s/start)
get_next_dst_edge_composition_to_correlate.: 0.091562s (num_starts 2; 0.0458s/start)
spawn_smt_query.: 0.093576s (num_starts 3; 0.0312s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.106799s (num_starts 2; 0.0534s/start)
prove_spawn_and_join.: 0.107208s (num_starts 3; 0.0357s/start)
prove_wrapper.proof_query_not_trivial.: 0.107448s (num_starts 3; 0.0358s/start)
prove_wrapper.: 0.107944s (num_starts 4; 0.0270s/start)
decide_hoare_triple_check_ub.: 0.109138s (num_starts 4; 0.0273s/start)
decide_hoare_triple_helper.: 0.110075s (num_starts 4; 0.0275s/start)
decide_hoare_triple_with_alias_cons.: 0.11038s (num_starts 4; 0.0276s/start)
expandProductCFG.: 0.113505s (num_starts 2; 0.0568s/start)
solver_satisfiable-cache-miss.: 0.117032s (num_starts 3; 0.0390s/start)
solver_satisfiable.: 0.117056s (num_starts 4; 0.0293s/start)
bestFirstSearch.: 0.162215s (num_starts 1; 0.1622s/start)
Time taken for equivalence check.: 0.166548s (num_starts 1; 0.1665s/start)

counters:
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.17
query-time-to-total-time-ratio.: 0.46

Context stats:
exprs: count: 141011
sorts: count: 152
num_proof_queries: 44
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	401
	        hit ratio:	0.925187
m_simplify_solver:
	----------- total:	107
	        hit ratio:	0.682243
m_z3_solver_substitution:
	----------- total:	34
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	34
	        hit ratio:	0
m_expr_size:
	----------- total:	273
	        hit ratio:	0.809524
m_expr_evaluates_to_constant_visitor:
	----------- total:	395
	        hit ratio:	0.551899

z3_solver expr_query_cache entry size: 3
	----------- total:	46
	             hits:	1
	        hit ratio:	0.0217391
histogram (time taken by solver in ms):
[ 5.1150,  6.2312) (avg.  5.1150)        : 1
[ 6.2312,  7.5909) (avg.  0.0000)        : 0
[ 7.5909,  9.2473) (avg.  0.0000)        : 0
[ 9.2473, 11.2651) (avg.  0.0000)        : 0
[11.2651, 13.7233) (avg.  0.0000)        : 0
[13.7233, 16.7179) (avg.  0.0000)        : 0
[16.7179, 20.3659) (avg.  0.0000)        : 0
[20.3659, 24.8100) (avg.  0.0000)        : 0
[24.8100, 30.2238) (avg.  0.0000)        : 0
[30.2238, 36.8190) (avg. 34.5420)        : 2
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 44) (avg. 40)                       : 1
[44, 48) (avg.  0)                       : 0
[48, 52) (avg.  0)                       : 0
[52, 56) (avg.  0)                       : 0
[56, 60) (avg.  0)                       : 0
[60, 64) (avg.  0)                       : 0
[64, 68) (avg.  0)                       : 0
[68, 72) (avg. 69)                       : 2
[72, 76) (avg.  0)                       : 0
[76, 80) (avg.  0)                       : 0

<MSG>0:22 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.001136s total; 0.000021 per start]
tfg_computeWP: num_starts 244 time spent: 0:0:0 [0.014394s total; 0.000059 per start]
tfg_get_simplified_to_state_for_edge: num_starts 856 time spent: 0:0:0 [0.001176s total; 0.000001 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 942 time spent: 0:0:0 [0.001321s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 552 time spent: 0:0:0 [0.000783s total; 0.000001 per start]
add_nodeces_at_pc_and_propagate: num_starts 44 time spent: 0:0:0 [0.086831s total; 0.001973 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.112736s total; 0.011274 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 194 time spent: 0:0:0 [0.133221s total; 0.000687 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 48 time spent: 0:0:0 [0.020103s total; 0.000419 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 185 time spent: 0:0:0 [0.117757s total; 0.000637 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 795 time spent: 0:0:0 [0.127258s total; 0.000160 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 191 time spent: 0:0:0 [0.007023s total; 0.000037 per start]
tfg_graph_get_vars_written_on_edge: num_starts 185 time spent: 0:0:0 [0.002850s total; 0.000015 per start]
cg_with_rank_add_CE_at_pc: num_starts 53 time spent: 0:0:0 [0.084878s total; 0.001601 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000388s total; 0.000016 per start]
graph_with_guessing_add_CE_at_pc: num_starts 53 time spent: 0:0:0 [0.084776s total; 0.001600 per start]
point_set_add_point_using_CE: num_starts 80 time spent: 0:0:0 [0.022146s total; 0.000277 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 80 time spent: 0:0:0 [0.022379s total; 0.000280 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 38 time spent: 0:0:0 [0.081841s total; 0.002154 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 38 time spent: 0:0:0 [0.058942s total; 0.001551 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1549 time spent: 0:0:0 [0.019993s total; 0.000013 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 196 time spent: 0:0:0 [0.014652s total; 0.000075 per start]
expr_simplify_solver: num_starts 1013 time spent: 0:0:0 [0.084679s total; 0.000084 per start]
expr_simplify_syntactic: num_starts 1013 time spent: 0:0:0 [0.256960s total; 0.000254 per start]
expr_simplify_select_on_store: num_starts 53 time spent: 0:0:0 [0.148992s total; 0.002811 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001535s total; 0.000102 per start]
expr_simplify_using_lhs_set_helper: num_starts 336 time spent: 0:0:0 [0.372058s total; 0.001107 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2265 time spent: 0:0:0 [0.369743s total; 0.000163 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1267 time spent: 0:0:0 [0.004622s total; 0.000004 per start]
expr_simplify_eq: num_starts 230 time spent: 0:0:0 [0.002824s total; 0.000012 per start]
expr_simplify_or: num_starts 18 time spent: 0:0:0 [0.000026s total; 0.000001 per start]
expr_simplify_and: num_starts 114 time spent: 0:0:0 [0.000615s total; 0.000005 per start]
expr_simplify_not: num_starts 23 time spent: 0:0:0 [0.000079s total; 0.000003 per start]
expr_simplify_implies: num_starts 15 time spent: 0:0:0 [0.000122s total; 0.000008 per start]
expr_simplify_ite: num_starts 29 time spent: 0:0:0 [0.001182s total; 0.000041 per start]
canonicalize_expr_tree: num_starts 313 time spent: 0:0:0 [0.012068s total; 0.000039 per start]
expr_simplify_memalloc_using_memlabel: num_starts 14 time spent: 0:0:0 [0.000044s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 56 time spent: 0:0:0 [0.147474s total; 0.002633 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000080s total; 0.000080 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000077s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000006s total; 0.000006 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 1636 time spent: 0:0:0 [0.001038s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.004872s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 279 time spent: 0:0:0 [0.000289s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4019 time spent: 0:0:0 [0.335880s total; 0.000084 per start]
expr_do_simplify_helper_cache: num_starts 4019 time spent: 0:0:0 [0.003355s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 6 time spent: 0:0:0 [0.000001s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 6 time spent: 0:0:0 [0.000024s total; 0.000004 per start]
evaluate_expr_and_check_bounds: num_starts 596 time spent: 0:0:0 [0.141795s total; 0.000238 per start]
array_constant_equals: num_starts 8685 time spent: 0:0:0 [0.009806s total; 0.000001 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.120174s total; 0.006325 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.104539s total; 0.005502 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.001701s total; 0.000050 per start]
update_memlabels_for_memslot_locs: num_starts 11 time spent: 0:0:0 [0.000053s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.010129s total; 0.000130 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.107165s total; 0.000510 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000116s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.019924s total; 0.000498 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001578s total; 0.000040 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.016866s total; 0.000888 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000221s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:28 [28.480143s total; 28.480143 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.42s.
ftmap_run_pointsto_analysis.: 0.014154s (num_starts 2; 0.0071s/start)s.
EQ Time after pointsto analysis: 2.40314s.
EQ Time after pointsto analysis and smt_query: 2.2952s.
EQ Time after pointsto analysis and smt_query and bv-solve: 2.2952s.
Equivalence proof found. The programs are equivalent.
