=TFG_SSA:
=TFG_SPEC src.spec.foo:
=TFG:
=Nodes: L0%0%d E0%0%d
=Edges:
L0%0%d => E0%0%d
=graph done
=is_ssa_graph:
1
=StartState:
=spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=state_end
=PC to var-version map at L0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at E0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Node outputs: E0%0%d
=Output: spec-%ret-reg
1 : input.spec-%tmpvar-4.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
=Touched symbols:
=Symbol-map done
=Locals-map:
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=memlabel_map.0 for call-context {*;foo}
mlheap.src.spec.foo : memlabel-mem--heap
=Edge: L0%0%d => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-0.E0%0%d
1 : 42 { 0x2a +1.500e129 } : BV:32
=spec-%tmpvar-1.E0%0%d
1 : SORT2EXPR.VAR : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : unit : UNIT
4 : sum_init(1, 2, 3) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=spec-%tmpvar-2.E0%0%d
1 : SORT2EXPR.VAR : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
2 : 42 { 0x2a +1.500e129 } : BV:32
3 : SORT2EXPR.VAR : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : unit : UNIT
6 : sum_init(3, 4, 5) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
7 : prod_init(1, 2, 6) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=spec-%tmpvar-3.E0%0%d
1 : SORT2EXPR.VAR : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : SORT2EXPR.VAR : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
4 : 42 { 0x2a +1.500e129 } : BV:32
5 : 0 { 0x0 +1.0e1025 } : INT
6 : unit : UNIT
7 : sum_init(1, 5, 6) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
8 : prod_init(3, 4, 7) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
9 : sum_init(1, 2, 8) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=spec-%tmpvar-4.E0%0%d
1 : SORT2EXPR.VAR : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : SORT2EXPR.VAR : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
4 : 42 { 0x2a +1.500e129 } : BV:32
5 : 0 { 0x0 +1.0e1025 } : INT
6 : unit : UNIT
7 : sum_init(1, 5, 6) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
8 : prod_init(3, 4, 7) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
9 : sum_init(1, 2, 8) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((((func_head*ctor_bv)*ctor_sum)*ctor_prod)*(ctor_sum*func_ret))
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in src.spec.foo
=Loc 6 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 7 in src.spec.foo.
REGMEM
spec-%tmpvar-0.E0%0%d
1 : input.spec-%tmpvar-0.E0%0%d : BV:32
=Loc 8 in src.spec.foo.
REGMEM
spec-%tmpvar-1.E0%0%d
1 : input.spec-%tmpvar-1.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=Loc 9 in src.spec.foo.
REGMEM
spec-%tmpvar-2.E0%0%d
1 : input.spec-%tmpvar-2.E0%0%d : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=Loc 10 in src.spec.foo.
REGMEM
spec-%tmpvar-3.E0%0%d
1 : input.spec-%tmpvar-3.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=Loc 11 in src.spec.foo.
REGMEM
spec-%tmpvar-4.E0%0%d
1 : input.spec-%tmpvar-4.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=Locs end
=Liveness in src.spec.foo
=live locs at L0%0%d

=live locs at E0%0%d
11, 

=Definedness in src.spec.foo
=loc definedness at L0%0%d
6
=loc definedness at E0%0%d
6, 7, 8, 9, 10, 11

=Branch affecting variable locs in src.spec.foo
=branch affecting variable locs at L0%0%d

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.spec.foo
=relevant memlabels
=function: foo
memlabel-mem--heap
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 7 {input.spec-%tmpvar-0.E0%0%d }
1 : 42 { 0x2a +1.500e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 8 {input.spec-%tmpvar-1.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : Indxform23 : BV:32
4 : Lambda46 : BV:32
5 : lambda(4, 4) : FUNCTION[BV:32 -> BV:32]
6 : Lambda47 : BV:32
7 : sum(1, 2, 3) : SUM[UNIT,BV:32]
8 : prod(1, 7) : PROD[BV:32,SUM[UNIT,BV:32]]
9 : lambda(6, 8) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
10 : ind(1, 3, 5, 9) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
11 : sum(1, 2, 10) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
12 : sym_const(11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 9 {input.spec-%tmpvar-2.E0%0%d }
1 : 42 { 0x2a +1.500e129 } : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : unit : UNIT
4 : Indxform25 : BV:32
5 : Lambda50 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda51 : BV:32
8 : sum(2, 3, 4) : SUM[UNIT,BV:32]
9 : prod(2, 8) : PROD[BV:32,SUM[UNIT,BV:32]]
10 : lambda(7, 9) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
11 : ind(2, 4, 6, 10) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
12 : sum(2, 3, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(1, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sym_const(13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 10 {input.spec-%tmpvar-3.E0%0%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : unit : UNIT
3 : 42 { 0x2a +1.500e129 } : BV:32
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : Indxform27 : BV:32
6 : Lambda54 : BV:32
7 : lambda(6, 6) : FUNCTION[BV:32 -> BV:32]
8 : Lambda55 : BV:32
9 : sum(4, 2, 5) : SUM[UNIT,BV:32]
10 : prod(4, 9) : PROD[BV:32,SUM[UNIT,BV:32]]
11 : lambda(8, 10) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
12 : ind(4, 5, 7, 11) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
13 : sum(4, 2, 12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
14 : prod(3, 13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
15 : sum(1, 2, 14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
16 : sym_const(15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 11 {input.spec-%tmpvar-4.E0%0%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : unit : UNIT
3 : 42 { 0x2a +1.500e129 } : BV:32
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : Indxform27 : BV:32
6 : Lambda54 : BV:32
7 : lambda(6, 6) : FUNCTION[BV:32 -> BV:32]
8 : Lambda55 : BV:32
9 : sum(4, 2, 5) : SUM[UNIT,BV:32]
10 : prod(4, 9) : PROD[BV:32,SUM[UNIT,BV:32]]
11 : lambda(8, 10) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
12 : ind(4, 5, 7, 11) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
13 : sum(4, 2, 12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
14 : prod(3, 13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
15 : sum(1, 2, 14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
16 : sym_const(15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in src.spec.foo
=avail_exprs begin
=loc 7
=loc_expr
140540 : input.spec-%tmpvar-0.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 42 { 0x2a +1.500e129 } : BV:32
=avail_exprs_val.end
=loc 8
=loc_expr
140541 : input.spec-%tmpvar-1.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : Indxform23 : BV:32
4 : Lambda46 : BV:32
5 : lambda(4, 4) : FUNCTION[BV:32 -> BV:32]
6 : Lambda47 : BV:32
7 : sum(1, 2, 3) : SUM[UNIT,BV:32]
8 : prod(1, 7) : PROD[BV:32,SUM[UNIT,BV:32]]
9 : lambda(6, 8) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
10 : ind(1, 3, 5, 9) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
11 : sum(1, 2, 10) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
12 : sym_const(11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=avail_exprs_val.end
=loc 9
=loc_expr
140542 : input.spec-%tmpvar-2.E0%0%d : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 42 { 0x2a +1.500e129 } : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : unit : UNIT
4 : Indxform25 : BV:32
5 : Lambda50 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda51 : BV:32
8 : sum(2, 3, 4) : SUM[UNIT,BV:32]
9 : prod(2, 8) : PROD[BV:32,SUM[UNIT,BV:32]]
10 : lambda(7, 9) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
11 : ind(2, 4, 6, 10) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
12 : sum(2, 3, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(1, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sym_const(13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=avail_exprs_val.end
=loc 10
=loc_expr
140543 : input.spec-%tmpvar-3.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : unit : UNIT
3 : 42 { 0x2a +1.500e129 } : BV:32
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : Indxform27 : BV:32
6 : Lambda54 : BV:32
7 : lambda(6, 6) : FUNCTION[BV:32 -> BV:32]
8 : Lambda55 : BV:32
9 : sum(4, 2, 5) : SUM[UNIT,BV:32]
10 : prod(4, 9) : PROD[BV:32,SUM[UNIT,BV:32]]
11 : lambda(8, 10) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
12 : ind(4, 5, 7, 11) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
13 : sum(4, 2, 12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
14 : prod(3, 13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
15 : sum(1, 2, 14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
16 : sym_const(15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=avail_exprs_val.end
=loc 11
=loc_expr
140538 : input.spec-%tmpvar-4.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : unit : UNIT
3 : 42 { 0x2a +1.500e129 } : BV:32
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : Indxform27 : BV:32
6 : Lambda54 : BV:32
7 : lambda(6, 6) : FUNCTION[BV:32 -> BV:32]
8 : Lambda55 : BV:32
9 : sum(4, 2, 5) : SUM[UNIT,BV:32]
10 : prod(4, 9) : PROD[BV:32,SUM[UNIT,BV:32]]
11 : lambda(8, 10) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
12 : ind(4, 5, 7, 11) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
13 : sum(4, 2, 12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
14 : prod(3, 13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
15 : sum(1, 2, 14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
16 : sym_const(15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.spec.foo
=loc 7 expr
1 : input.spec-%tmpvar-0.E0%0%d : BV:32
=loc 7 spreled-expr
140274 : 42 { 0x2a +1.500e129 } : BV:32
=loc 8 expr
1 : input.spec-%tmpvar-1.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=loc 8 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
140277 : unit : UNIT
140553 : Indxform23 : BV:32
140556 : Lambda46 : BV:32
140557 : lambda(140556, 140556) : FUNCTION[BV:32 -> BV:32]
140558 : Lambda47 : BV:32
140554 : sum(140287, 140277, 140553) : SUM[UNIT,BV:32]
140555 : prod(140287, 140554) : PROD[BV:32,SUM[UNIT,BV:32]]
140559 : lambda(140558, 140555) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
140560 : ind(140287, 140553, 140557, 140559) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140561 : sum(140287, 140277, 140560) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
140562 : sym_const(140561) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=loc 9 expr
1 : input.spec-%tmpvar-2.E0%0%d : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=loc 9 spreled-expr
140274 : 42 { 0x2a +1.500e129 } : BV:32
140287 : 0 { 0x0 +1.0e129 } : BV:32
140277 : unit : UNIT
140565 : Indxform25 : BV:32
140569 : Lambda50 : BV:32
140570 : lambda(140569, 140569) : FUNCTION[BV:32 -> BV:32]
140571 : Lambda51 : BV:32
140566 : sum(140287, 140277, 140565) : SUM[UNIT,BV:32]
140568 : prod(140287, 140566) : PROD[BV:32,SUM[UNIT,BV:32]]
140572 : lambda(140571, 140568) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
140573 : ind(140287, 140565, 140570, 140572) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140574 : sum(140287, 140277, 140573) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
140575 : prod(140274, 140574) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140576 : sym_const(140575) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=loc 10 expr
1 : input.spec-%tmpvar-3.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=loc 10 spreled-expr
140290 : 1 { 0x1 +1.11e129 } : BV:32
140277 : unit : UNIT
140274 : 42 { 0x2a +1.500e129 } : BV:32
140287 : 0 { 0x0 +1.0e129 } : BV:32
140579 : Indxform27 : BV:32
140582 : Lambda54 : BV:32
140583 : lambda(140582, 140582) : FUNCTION[BV:32 -> BV:32]
140584 : Lambda55 : BV:32
140580 : sum(140287, 140277, 140579) : SUM[UNIT,BV:32]
140581 : prod(140287, 140580) : PROD[BV:32,SUM[UNIT,BV:32]]
140585 : lambda(140584, 140581) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
140586 : ind(140287, 140579, 140583, 140585) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140587 : sum(140287, 140277, 140586) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
140588 : prod(140274, 140587) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140589 : sum(140290, 140277, 140588) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
140590 : sym_const(140589) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=loc 11 expr
1 : input.spec-%tmpvar-4.E0%0%d : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=loc 11 spreled-expr
140290 : 1 { 0x1 +1.11e129 } : BV:32
140277 : unit : UNIT
140274 : 42 { 0x2a +1.500e129 } : BV:32
140287 : 0 { 0x0 +1.0e129 } : BV:32
140579 : Indxform27 : BV:32
140582 : Lambda54 : BV:32
140583 : lambda(140582, 140582) : FUNCTION[BV:32 -> BV:32]
140584 : Lambda55 : BV:32
140580 : sum(140287, 140277, 140579) : SUM[UNIT,BV:32]
140581 : prod(140287, 140580) : PROD[BV:32,SUM[UNIT,BV:32]]
140585 : lambda(140584, 140581) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
140586 : ind(140287, 140579, 140583, 140585) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140587 : sum(140287, 140277, 140586) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
140588 : prod(140274, 140587) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
140589 : sum(140290, 140277, 140588) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
140590 : sym_const(140589) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 6 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 7 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 8 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 9 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 10 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 11 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 7 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 8 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 9 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 10 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 11 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>E0%0%d
=spec-%tmpvar-0.E0%0%d
1 : 42 { 0x2a +1.500e129 } : BV:32
=spec-%tmpvar-1.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : unit : UNIT
3 : Indxform23 : BV:32
4 : Lambda46 : BV:32
5 : lambda(4, 4) : FUNCTION[BV:32 -> BV:32]
6 : Lambda47 : BV:32
7 : sum(1, 2, 3) : SUM[UNIT,BV:32]
8 : prod(1, 7) : PROD[BV:32,SUM[UNIT,BV:32]]
9 : lambda(6, 8) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
10 : ind(1, 3, 5, 9) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
11 : sum(1, 2, 10) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
12 : sym_const(11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=spec-%tmpvar-2.E0%0%d
1 : 42 { 0x2a +1.500e129 } : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : unit : UNIT
4 : Indxform25 : BV:32
5 : Lambda50 : BV:32
6 : lambda(5, 5) : FUNCTION[BV:32 -> BV:32]
7 : Lambda51 : BV:32
8 : sum(2, 3, 4) : SUM[UNIT,BV:32]
9 : prod(2, 8) : PROD[BV:32,SUM[UNIT,BV:32]]
10 : lambda(7, 9) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
11 : ind(2, 4, 6, 10) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
12 : sum(2, 3, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : prod(1, 12) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
14 : sym_const(13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
=spec-%tmpvar-3.E0%0%d
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : unit : UNIT
3 : 42 { 0x2a +1.500e129 } : BV:32
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : Indxform27 : BV:32
6 : Lambda54 : BV:32
7 : lambda(6, 6) : FUNCTION[BV:32 -> BV:32]
8 : Lambda55 : BV:32
9 : sum(4, 2, 5) : SUM[UNIT,BV:32]
10 : prod(4, 9) : PROD[BV:32,SUM[UNIT,BV:32]]
11 : lambda(8, 10) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
12 : ind(4, 5, 7, 11) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
13 : sum(4, 2, 12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
14 : prod(3, 13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
15 : sum(1, 2, 14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
16 : sym_const(15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=spec-%tmpvar-4.E0%0%d
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : unit : UNIT
3 : 42 { 0x2a +1.500e129 } : BV:32
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : Indxform27 : BV:32
6 : Lambda54 : BV:32
7 : lambda(6, 6) : FUNCTION[BV:32 -> BV:32]
8 : Lambda55 : BV:32
9 : sum(4, 2, 5) : SUM[UNIT,BV:32]
10 : prod(4, 9) : PROD[BV:32,SUM[UNIT,BV:32]]
11 : lambda(8, 10) : FUNCTION[BV:32 -> PROD[BV:32,SUM[UNIT,BV:32]]]
12 : ind(4, 5, 7, 11) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
13 : sum(4, 2, 12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
14 : prod(3, 13) : IND[Type0,PROD[BV:32,SUM[UNIT,DECL[Type0]]]]
15 : sum(1, 2, 14) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
16 : sym_const(15) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
0
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for src.spec.foo
=suffixpath_at_L0%0%d for src.spec.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_E0%0%d for src.spec.foo
=suffixpath_at_E0%0%d.graph_edge_composition
(L0%0%d=>E0%0%d)
=suffixpaths for src.spec.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>E0%0%d
tfg.assumes_around_edge at L0%0%d=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=TFG_SPEC_done
=TFG_SSA_done
