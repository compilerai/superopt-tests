argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop2.proof
argv[5] = --spec-iospecs=loop2.iospecs
argv[6] = loop2.spec
argv[7] = loop2.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2888395
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop2.c
argv[10] = -o
argv[11] = par_tmpdir/loop2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop2.spec.etfg
argv[10] = par_tmpdir/loop2.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop2.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000117s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 119 time spent: 0:0:0 [0.000209s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 641 time spent: 0:0:0 [0.002362s total; 0.000004 per start]
expr_simplify_solver: num_starts 56 time spent: 0:0:0 [0.006635s total; 0.000118 per start]
expr_simplify_syntactic: num_starts 56 time spent: 0:0:0 [0.001987s total; 0.000035 per start]
expr_simplify_using_lhs_set_helper: num_starts 73 time spent: 0:0:0 [0.010450s total; 0.000143 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 168 time spent: 0:0:0 [0.010289s total; 0.000061 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000208s total; 0.000004 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000007s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 39 time spent: 0:0:0 [0.000506s total; 0.000013 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000043s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000677s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000117s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1461 time spent: 0:0:0 [0.011829s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1461 time spent: 0:0:0 [0.000957s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000008s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.041979s total; 0.000646 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.013518s total; 0.000208 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005436s total; 0.000063 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000085s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.003992s total; 0.000031 per start]
compute_simplified_loc_exprs_for_edge: num_starts 382 time spent: 0:0:0 [0.014768s total; 0.000039 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000066s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005064s total; 0.000181 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000401s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.009012s total; 0.000139 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000094s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 7e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 2.1e-05s (num_starts 31; 0.0000s/start)
expr_is_callee_save_const.: 2.8e-05s (num_starts 26; 0.0000s/start)
add_extra_node_at_start_pc.: 3e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.4e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.5e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_specvars.: 7.5e-05s (num_starts 1; 0.0001s/start)
main.3.: 7.6e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 7.8e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.5e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.2e-05s (num_starts 10; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000103s (num_starts 5; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000106s (num_starts 33; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000127s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000137s (num_starts 33; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000157s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000163s (num_starts 1; 0.0002s/start)
determinize_value_expr_map.: 0.000173s (num_starts 229; 0.0000s/start)
expr_represents_llvm_undef.: 0.000186s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000187s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000271s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000285s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000296s (num_starts 1; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000327s (num_starts 65; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000355s (num_starts 1; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000369s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000398s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000411s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000431s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000459s (num_starts 45; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000532s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000589s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000819s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000942s (num_starts 3; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001072s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001219s (num_starts 51; 0.0000s/start)
graph_visit_exprs.: 0.001244s (num_starts 4; 0.0003s/start)
create_closure_matrix.: 0.001291s (num_starts 85; 0.0000s/start)
query:convert_from_z3.: 0.001318s (num_starts 28; 0.0000s/start)
compute_z3_expr.: 0.001319s (num_starts 28; 0.0000s/start)
compute_lr_status_for_expr.: 0.00135s (num_starts 36; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00144s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001495s (num_starts 31; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001538s (num_starts 119; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00186s (num_starts 1; 0.0019s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002186s (num_starts 1; 0.0022s/start)
query:convert_to_z3.: 0.002512s (num_starts 28; 0.0001s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.002725s (num_starts 1; 0.0027s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003215s (num_starts 65; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003507s (num_starts 68; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.003537s (num_starts 65; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.003831s (num_starts 1; 0.0038s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003881s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.003916s (num_starts 2; 0.0020s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.003972s (num_starts 1; 0.0040s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004112s (num_starts 1; 0.0041s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004222s (num_starts 2; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004248s (num_starts 641; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004256s (num_starts 1; 0.0043s/start)
tfg::populate_loc_definedness.: 0.004429s (num_starts 2; 0.0022s/start)
graph_to_stream.: 0.004637s (num_starts 1; 0.0046s/start)
query:simplify-z3.: 0.004831s (num_starts 66; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.005205s (num_starts 2; 0.0026s/start)
graph_identify_back_edges.: 0.00529s (num_starts 5; 0.0011s/start)
populate_simplified_assets.: 0.005293s (num_starts 6; 0.0009s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005416s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.005522s (num_starts 2; 0.0028s/start)
graph_identify_natural_loops.: 0.005535s (num_starts 5; 0.0011s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.006285s (num_starts 1; 0.0063s/start)
create_sp_version_relations_lattice_at_pc.: 0.00634s (num_starts 85; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.006543s (num_starts 1; 0.0065s/start)
populate_transitive_closure.: 0.006601s (num_starts 1; 0.0066s/start)
avail_exprs_create_submap.: 0.007402s (num_starts 195; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.008447s (num_starts 3; 0.0028s/start)
compute_regions.: 0.008693s (num_starts 5; 0.0017s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.009505s (num_starts 1; 0.0095s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.009509s (num_starts 1; 0.0095s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.009514s (num_starts 1; 0.0095s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.009518s (num_starts 1; 0.0095s/start)
tfg_constructor.src.spec.foo.: 0.009522s (num_starts 1; 0.0095s/start)
tfg_preprocess.dst.llvm.foo.: 0.009808s (num_starts 1; 0.0098s/start)
tfg::tfg_preprocess.: 0.00981s (num_starts 1; 0.0098s/start)
find_dominators.: 0.00986s (num_starts 9; 0.0011s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.01052s (num_starts 73; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011333s (num_starts 65; 0.0002s/start)
populate_loc_liveness.: 0.012184s (num_starts 2; 0.0061s/start)
get_tfg.: 0.013612s (num_starts 1; 0.0136s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.013616s (num_starts 641; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013618s (num_starts 65; 0.0002s/start)
get_function_tfg_map.foo.: 0.013641s (num_starts 1; 0.0136s/start)
get_function_tfg_map.: 0.013644s (num_starts 1; 0.0136s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.013755s (num_starts 3; 0.0046s/start)
main.2.: 0.013902s (num_starts 1; 0.0139s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.014376s (num_starts 641; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.017647s (num_starts 641; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.034008s (num_starts 1; 0.0340s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.042054s (num_starts 65; 0.0006s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.042553s (num_starts 1; 0.0426s/start)
ftmap_run_pointsto_analysis.: 0.095371s (num_starts 1; 0.0954s/start)
parse_consts_db.: 6.69362s (num_starts 1; 6.6936s/start)
main.: 6.87243s (num_starts 1; 6.8724s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:06 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file loop2.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: foo...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 5 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1.B2: Propagated 3 out of 5 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1.B2: Added the 3 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 10 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove4...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove3...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove4...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove4...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : foo.A1.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Propagated 5 out of 18 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:22 : foo.A1.B2.C1: Added the 5 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:22 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : foo.A1.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:22 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce29      2.:z3.ce114      3.:z3.ce157
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce157      2.:z3.ce232      3.:z3.ce382
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3.ce29
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce307      2.:z3.ce157
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3.ce29
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce157      2.:z3.ce232      3.:z3.ce382
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3.ce29
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 2.47s, query:smt.: 0.736452s (num_starts 30; 0.0245s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.66492s (num_starts 61; 0.0273s/start)ftmap_run_pointsto_analysis.: 0.125156s (num_starts 2; 0.0626s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 2e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 5; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 8e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1e-05s (num_starts 1; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.1e-05s (num_starts 4; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.1e-05s (num_starts 13; 0.0000s/start)
remove_complex_bv_exprs.: 1.2e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.4e-05s (num_starts 3; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.6e-05s (num_starts 19; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.9e-05s (num_starts 19; 0.0000s/start)
ce_perform_memory_fuzzing.: 1.9e-05s (num_starts 16; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.2e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.6e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 3.1e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.3e-05s (num_starts 2; 0.0000s/start)
prove_trivial.: 3.3e-05s (num_starts 30; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.5e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.9e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.1e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 4.3e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.3e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.8e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 6e-05s (num_starts 28; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 7.8e-05s (num_starts 15; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 8e-05s (num_starts 1; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 8.2e-05s (num_starts 16; 0.0000s/start)
expr_is_hidden_reg.: 8.3e-05s (num_starts 94; 0.0000s/start)
expr_is_callee_save_const.: 0.000108s (num_starts 106; 0.0000s/start)
lr_status_meet.: 0.000109s (num_starts 180; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000117s (num_starts 70; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000124s (num_starts 61; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000135s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000137s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000138s (num_starts 40; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000162s (num_starts 40; 0.0000s/start)
populate_locid2expr_map.: 0.000169s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000174s (num_starts 40; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000176s (num_starts 1; 0.0002s/start)
compute_sprel_relations.: 0.000179s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000184s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000184s (num_starts 15; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000187s (num_starts 22; 0.0000s/start)
propagate_sprels.: 0.000191s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.0002s (num_starts 40; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000205s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000206s (num_starts 82; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000213s (num_starts 1; 0.0002s/start)
aliasing_constraints.convert_to_expr.: 0.00022s (num_starts 40; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000243s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000244s (num_starts 27; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000259s (num_starts 22; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000259s (num_starts 509; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000278s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000281s (num_starts 9; 0.0000s/start)
parse_yices_model.: 0.000293s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000312s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000329s (num_starts 1; 0.0003s/start)
collect_assumes_around_edge.: 0.00037s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000371s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000372s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000372s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000372s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000374s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000376s (num_starts 1; 0.0004s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000387s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00039s (num_starts 1; 0.0004s/start)
identify_address_taken_local_variables.: 0.000414s (num_starts 1; 0.0004s/start)
set_result_and_counter_example.: 0.000416s (num_starts 30; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00042s (num_starts 31; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000437s (num_starts 90; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000467s (num_starts 90; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000476s (num_starts 2; 0.0002s/start)
parse_cvc4_model.: 0.000512s (num_starts 1; 0.0005s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000521s (num_starts 40; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000575s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000597s (num_starts 1; 0.0006s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000598s (num_starts 62; 0.0000s/start)
ldr_decomposition.: 0.000619s (num_starts 15; 0.0000s/start)
construct_linear_combination_exprs.: 0.000645s (num_starts 28; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000647s (num_starts 50; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000682s (num_starts 1; 0.0007s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000687s (num_starts 79; 0.0000s/start)
expr_represents_llvm_undef.: 0.000697s (num_starts 110; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000701s (num_starts 8; 0.0001s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000701s (num_starts 5; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.000714s (num_starts 64; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000714s (num_starts 1; 0.0007s/start)
get_unrolled_loop_paths_from.: 0.000726s (num_starts 1; 0.0007s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000727s (num_starts 3; 0.0002s/start)
graph_with_guessing_sync_preds.: 0.00073s (num_starts 61; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000739s (num_starts 2; 0.0004s/start)
populate_simplified_to_state.: 0.000765s (num_starts 3; 0.0003s/start)
proof_query_is_trivial.: 0.000768s (num_starts 70; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000817s (num_starts 64; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000849s (num_starts 5; 0.0002s/start)
removeMostPromising.: 0.000861s (num_starts 10; 0.0001s/start)
create_closure_matrix.: 0.000873s (num_starts 102; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000874s (num_starts 5; 0.0002s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000953s (num_starts 1; 0.0010s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001004s (num_starts 2; 0.0005s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001052s (num_starts 30; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001117s (num_starts 40; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001148s (num_starts 4; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001304s (num_starts 79; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001364s (num_starts 2; 0.0007s/start)
bv_const_ref_map2expr_map.: 0.001389s (num_starts 28; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.001618s (num_starts 3; 0.0005s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001715s (num_starts 40; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001736s (num_starts 2; 0.0009s/start)
graph_visit_exprs.: 0.001742s (num_starts 3; 0.0006s/start)
populate_simplified_assets.: 0.001764s (num_starts 6; 0.0003s/start)
generate_aliasing_constraints_from_expr.: 0.001772s (num_starts 712; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.00193s (num_starts 3; 0.0006s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.002007s (num_starts 1194; 0.0000s/start)
tfg::populate_loc_definedness.: 0.002035s (num_starts 3; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.002155s (num_starts 110; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.00229s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002339s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.002344s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned;-trivial.: 0.002349s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002355s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002365s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned.: 0.002375s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002392s (num_starts 2; 0.0012s/start)
graph_visit_exprs_and_keys.: 0.002651s (num_starts 2; 0.0013s/start)
populate_locs_potentially_modified_on_edge.: 0.00276s (num_starts 3; 0.0009s/start)
get_sprel_map_pair_at_pc.: 0.002778s (num_starts 40; 0.0001s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.002845s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002946s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002953s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.00296s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002966s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002975s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002979s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002981s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.002987s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.00299s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002993s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.003s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.00301s (num_starts 3; 0.0010s/start)
graph_identify_back_edges.: 0.003175s (num_starts 21; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.00319s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.003197s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.003202s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003206s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003219s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.003233s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.003245s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003256s (num_starts 3; 0.0011s/start)
compute_ssa_vars_renaming_map.: 0.003351s (num_starts 2; 0.0017s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003359s (num_starts 64; 0.0001s/start)
find_dominators.: 0.003447s (num_starts 25; 0.0001s/start)
graph_identify_natural_loops.: 0.003458s (num_starts 21; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003677s (num_starts 221; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003827s (num_starts 1; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003831s (num_starts 1; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003831s (num_starts 1; 0.0038s/start)
populate_branch_affecting_locs.: 0.003887s (num_starts 3; 0.0013s/start)
ldr_decompose_and_linear_solve.: 0.004458s (num_starts 15; 0.0003s/start)
create_sp_version_relations_lattice_at_pc.: 0.004472s (num_starts 102; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.004536s (num_starts 3; 0.0015s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004579s (num_starts 61; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004647s (num_starts 31; 0.0001s/start)
bv_linear_solve.: 0.004724s (num_starts 15; 0.0003s/start)
query:bv_solve.: 0.00483s (num_starts 15; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.00484s (num_starts 125; 0.0000s/start)
compute_expr_eqclasses_at_pc.: 0.004952s (num_starts 1; 0.0050s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.00539s (num_starts 3; 0.0018s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.005397s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.0054s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.005401s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.005403s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005406s (num_starts 1; 0.0054s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005548s (num_starts 220; 0.0000s/start)
cg_add_node.: 0.00565s (num_starts 3; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.005661s (num_starts 4; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.005674s (num_starts 4; 0.0014s/start)
bv_solve_returning_intermediate_structures.: 0.005791s (num_starts 15; 0.0004s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.005942s (num_starts 42; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005957s (num_starts 40; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005969s (num_starts 120; 0.0000s/start)
populate_transitive_closure.: 0.006218s (num_starts 27; 0.0002s/start)
predicate_canonicalized.: 0.006359s (num_starts 28; 0.0002s/start)
expr_substitute_using_available_exprs_submap.: 0.006414s (num_starts 186; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.00648s (num_starts 40; 0.0002s/start)
bvsolve_cache_query.miss1.: 0.00664s (num_starts 15; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.006663s (num_starts 20; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.006722s (num_starts 20; 0.0003s/start)
bvsolve_cache_query.: 0.006777s (num_starts 15; 0.0005s/start)
compute_lr_status_for_expr.: 0.007021s (num_starts 195; 0.0000s/start)
collect_assumes_around_path_helper.: 0.007027s (num_starts 90; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.007329s (num_starts 90; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.007347s (num_starts 2; 0.0037s/start)
create_new_corr_graph_edge.: 0.007494s (num_starts 3; 0.0025s/start)
compute_vars_reaching_definitions.: 0.007562s (num_starts 2; 0.0038s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007638s (num_starts 180; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.007906s (num_starts 6; 0.0013s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007926s (num_starts 180; 0.0000s/start)
collect_aliasing_constraints_around_path_helper.: 0.008208s (num_starts 106; 0.0001s/start)
solve_for_bv_points.: 0.008268s (num_starts 15; 0.0006s/start)
lhs_set_sort.: 0.008376s (num_starts 40; 0.0002s/start)
compute_regions.: 0.008467s (num_starts 21; 0.0004s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.008588s (num_starts 18; 0.0005s/start)
tfg_suffixpath_get_expr_helper.: 0.008646s (num_starts 20; 0.0004s/start)
collect_aliasing_constraints_around_path.: 0.008763s (num_starts 66; 0.0001s/start)
collect_inductive_preds_around_path.: 0.009249s (num_starts 61; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.009747s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.009752s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.009753s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.009756s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.00976s (num_starts 2; 0.0049s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.010024s (num_starts 15; 0.0007s/start)
get_next_potential_correlations.: 0.01012s (num_starts 3; 0.0034s/start)
gen_pred_from_coeff_row.simplify.: 0.010178s (num_starts 28; 0.0004s/start)
counter_example_satisfies_preds.: 0.010247s (num_starts 360; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.010344s (num_starts 79; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010515s (num_starts 3; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010519s (num_starts 3; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.010529s (num_starts 3; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.010542s (num_starts 3; 0.0035s/start)
populate_loc_liveness.: 0.010828s (num_starts 3; 0.0036s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.011361s (num_starts 3; 0.0038s/start)
query:convert_from_z3.: 0.013585s (num_starts 216; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.013678s (num_starts 4; 0.0034s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.013905s (num_starts 79; 0.0002s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.014228s (num_starts 1; 0.0142s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014329s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014338s (num_starts 4; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.01442s (num_starts 4; 0.0036s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.014992s (num_starts 79; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.015231s (num_starts 6; 0.0025s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.015298s (num_starts 1024; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016105s (num_starts 1; 0.0161s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.016106s (num_starts 1; 0.0161s/start)
compute_new_lr_status_on_locs.: 0.016242s (num_starts 79; 0.0002s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.016504s (num_starts 135; 0.0001s/start)
do_ssa_transformation.: 0.017532s (num_starts 2; 0.0088s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017966s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017972s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017975s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01798s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.017984s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.017993s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.018368s (num_starts 2; 0.0092s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.018377s (num_starts 2; 0.0092s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.019312s (num_starts 17; 0.0011s/start)
gen_pred_from_coeff_row.: 0.019613s (num_starts 28; 0.0007s/start)
compute_preds_for_bv_points.: 0.019847s (num_starts 5; 0.0040s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.019889s (num_starts 9; 0.0022s/start)
get_unrolled_paths_from.: 0.020347s (num_starts 15; 0.0014s/start)
avail_exprs_create_submap.: 0.020542s (num_starts 237; 0.0001s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.020844s (num_starts 16; 0.0013s/start)
tfg_relax_pointsto_vals_on_edge.: 0.020997s (num_starts 17; 0.0012s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.021642s (num_starts 61; 0.0004s/start)
apply_mask_and_overlay_array_constant.: 0.021819s (num_starts 16; 0.0014s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.022029s (num_starts 89; 0.0002s/start)
graph_to_stream.: 0.022447s (num_starts 4; 0.0056s/start)
query:convert_to_z3.: 0.022563s (num_starts 216; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.023054s (num_starts 2; 0.0115s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024018s (num_starts 1; 0.0240s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024025s (num_starts 1; 0.0240s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024029s (num_starts 1; 0.0240s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024032s (num_starts 1; 0.0240s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024036s (num_starts 1; 0.0240s/start)
put_smtlib_string_in_file.: 0.025309s (num_starts 60; 0.0004s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.025862s (num_starts 1064; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.025874s (num_starts 3; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.025886s (num_starts 3; 0.0086s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.027089s (num_starts 1024; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.029447s (num_starts 2; 0.0147s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.029453s (num_starts 2; 0.0147s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.029461s (num_starts 2; 0.0147s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.029468s (num_starts 2; 0.0147s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.029476s (num_starts 2; 0.0147s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.032538s (num_starts 40; 0.0008s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.036536s (num_starts 1024; 0.0000s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.037109s (num_starts 40; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038047s (num_starts 1; 0.0380s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03805s (num_starts 1; 0.0381s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.038059s (num_starts 1; 0.0381s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.038152s (num_starts 79; 0.0005s/start)
guarded_predicate_set_and.: 0.039486s (num_starts 40; 0.0010s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.039687s (num_starts 62; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.041909s (num_starts 2; 0.0210s/start)
query:simplify-z3.: 0.048541s (num_starts 440; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.049333s (num_starts 1; 0.0493s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04934s (num_starts 1; 0.0493s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.049348s (num_starts 1; 0.0493s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.049352s (num_starts 1; 0.0494s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.049573s (num_starts 1; 0.0496s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.050969s (num_starts 4; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.050981s (num_starts 4; 0.0127s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.052171s (num_starts 78; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.053233s (num_starts 6; 0.0089s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.053302s (num_starts 2; 0.0267s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.062635s (num_starts 8; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.06266s (num_starts 8; 0.0078s/start)
graph_ec_apply_trans_funs_helper.0.: 0.071204s (num_starts 167; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072101s (num_starts 2; 0.0361s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07211s (num_starts 2; 0.0361s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.072123s (num_starts 2; 0.0361s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.07213s (num_starts 2; 0.0361s/start)
graph_ec_apply_trans_funs_helper.: 0.072595s (num_starts 172; 0.0004s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.073066s (num_starts 172; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073306s (num_starts 1; 0.0733s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073307s (num_starts 1; 0.0733s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.073315s (num_starts 1; 0.0733s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.07332s (num_starts 1; 0.0733s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.073619s (num_starts 105; 0.0007s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.073702s (num_starts 172; 0.0004s/start)
computeWP_for_pred_across_ec.: 0.074348s (num_starts 172; 0.0004s/start)
check_node_stability_after_CE_addition.: 0.078506s (num_starts 32; 0.0025s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.080609s (num_starts 3; 0.0269s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.081277s (num_starts 469; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081863s (num_starts 2; 0.0409s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081876s (num_starts 2; 0.0409s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083904s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083908s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083912s (num_starts 1; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.084198s (num_starts 4; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.086926s (num_starts 4; 0.0217s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.086942s (num_starts 4; 0.0217s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.08697s (num_starts 4; 0.0217s/start)
edge_composition_apply_trans_funs_on_pred.: 0.087062s (num_starts 61; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087354s (num_starts 2; 0.0437s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087364s (num_starts 2; 0.0437s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.087435s (num_starts 2; 0.0437s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.087512s (num_starts 78; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088172s (num_starts 3; 0.0294s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088197s (num_starts 3; 0.0294s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.090455s (num_starts 62; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.098039s (num_starts 5; 0.0196s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.098055s (num_starts 5; 0.0196s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100418s (num_starts 1; 0.1004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.10042s (num_starts 1; 0.1004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.100434s (num_starts 1; 0.1004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.100437s (num_starts 1; 0.1004s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.100714s (num_starts 3; 0.0336s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.101831s (num_starts 6; 0.0170s/start)
propagate_nodece_across_edge.: 0.107117s (num_starts 8; 0.0134s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.10987s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.10987s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.109873s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.109873s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.109881s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.109885s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.109891s (num_starts 1; 0.1099s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.110293s (num_starts 2; 0.0551s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.113517s (num_starts 12; 0.0095s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.121471s (num_starts 18; 0.0067s/start)
compute_z3_expr.: 0.12155s (num_starts 246; 0.0005s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.124851s (num_starts 308; 0.0004s/start)
ftmap_run_pointsto_analysis.: 0.125156s (num_starts 2; 0.0626s/start)
tfg_run_pointsto_analysis.: 0.125471s (num_starts 2; 0.0627s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.127806s (num_starts 16; 0.0080s/start)
parse_z3_model.: 0.131818s (num_starts 17; 0.0078s/start)
ce_reconcile_sorts.: 0.132515s (num_starts 19; 0.0070s/start)
read_counter_examples_from_channel.: 0.134065s (num_starts 9; 0.0149s/start)
check_wfconds_on_edge.: 0.134145s (num_starts 7; 0.0192s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.135211s (num_starts 8; 0.0169s/start)
tfg_populate_structs_after_ssa_construction.: 0.143063s (num_starts 2; 0.0715s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.152028s (num_starts 3; 0.0507s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158344s (num_starts 3; 0.0528s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158357s (num_starts 3; 0.0528s/start)
counter_example_falsifies_preds.: 0.160512s (num_starts 59; 0.0027s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.161764s (num_starts 31; 0.0052s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.161962s (num_starts 31; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.162841s (num_starts 2; 0.0814s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.162848s (num_starts 2; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.162858s (num_starts 2; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.162858s (num_starts 2; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.162875s (num_starts 2; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned.: 0.162893s (num_starts 2; 0.0814s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.16291s (num_starts 2; 0.0815s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.16359s (num_starts 2; 0.0818s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.164081s (num_starts 7; 0.0234s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.164108s (num_starts 7; 0.0234s/start)
decide_hoare_triple_helper;-trivial.: 0.164575s (num_starts 37; 0.0044s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.165285s (num_starts 4; 0.0413s/start)
counter_example_evaluate_preds.: 0.169768s (num_starts 419; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.173714s (num_starts 2; 0.0869s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.173769s (num_starts 2; 0.0869s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.175589s (num_starts 1; 0.1756s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.189408s (num_starts 2; 0.0947s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.189416s (num_starts 2; 0.0947s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18942s (num_starts 2; 0.0947s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.189439s (num_starts 2; 0.0947s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.189448s (num_starts 2; 0.0947s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.189463s (num_starts 2; 0.0947s/start)
corr_graph::add_edge().: 0.197731s (num_starts 3; 0.0659s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.206136s (num_starts 3; 0.0687s/start)
corr_graph_add_correlation.: 0.206247s (num_starts 3; 0.0687s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.206318s (num_starts 3; 0.0688s/start)
counter_example_translate_on_edge_composition_helper.: 0.212575s (num_starts 292; 0.0007s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.220179s (num_starts 10; 0.0220s/start)
check_equivalence_proof.: 0.222368s (num_starts 1; 0.2224s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.235523s (num_starts 16; 0.0147s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.235761s (num_starts 42; 0.0056s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.240151s (num_starts 5; 0.0480s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.24841s (num_starts 11; 0.0226s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.273321s (num_starts 3; 0.0911s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.276413s (num_starts 6; 0.0461s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.279829s (num_starts 6; 0.0466s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.28359s (num_starts 3; 0.0945s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.283653s (num_starts 3; 0.0946s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.289847s (num_starts 8; 0.0362s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.307211s (num_starts 17; 0.0181s/start)
dst_edge_composition_proves_false.: 0.312293s (num_starts 3; 0.1041s/start)
check_preds_on_edge_compositions.: 0.316422s (num_starts 10; 0.0316s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.319456s (num_starts 4; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.319491s (num_starts 4; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.31951s (num_starts 4; 0.0799s/start)
get_next_dst_edge_composition_to_correlate.: 0.321369s (num_starts 4; 0.0803s/start)
decide_hoare_triple.: 0.323361s (num_starts 5; 0.0647s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.382224s (num_starts 12; 0.0319s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.382261s (num_starts 12; 0.0319s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.384003s (num_starts 3; 0.1280s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.402447s (num_starts 9; 0.0447s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.411359s (num_starts 8; 0.0514s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.431584s (num_starts 25; 0.0173s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.433342s (num_starts 16; 0.0271s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.559646s (num_starts 9; 0.0622s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.671674s (num_starts 8; 0.0840s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.681668s (num_starts 27; 0.0252s/start)
query:smt.: 0.736452s (num_starts 30; 0.0245s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.80023s (num_starts 24; 0.0333s/start)
spawn_smt_query.: 0.870871s (num_starts 30; 0.0290s/start)
solver_provable.: 1.14272s (num_starts 40; 0.0286s/start)
expr_is_provable.: 1.1558s (num_starts 40; 0.0289s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.15645s (num_starts 40; 0.0289s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.15878s (num_starts 40; 0.0290s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.15995s (num_starts 40; 0.0290s/start)
solver_satisfiable-cache-miss.: 1.16143s (num_starts 30; 0.0387s/start)
solver_satisfiable.: 1.1617s (num_starts 41; 0.0283s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.20649s (num_starts 40; 0.0302s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.22925s (num_starts 40; 0.0307s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.22999s (num_starts 40; 0.0307s/start)
update_invariant_state_for_edges.: 1.41646s (num_starts 3; 0.4722s/start)
cg_check_new_cg_ec.: 1.41651s (num_starts 3; 0.4722s/start)
correl_entry_apply.: 1.41668s (num_starts 3; 0.4722s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.47606s (num_starts 40; 0.0369s/start)
prove.: 1.47639s (num_starts 40; 0.0369s/start)
prove_spawn_and_join_helper.: 1.47664s (num_starts 40; 0.0369s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.49782s (num_starts 24; 0.0624s/start)
prove_spawn_and_join.: 1.53s (num_starts 40; 0.0383s/start)
prove_wrapper.proof_query_not_trivial.: 1.53519s (num_starts 40; 0.0384s/start)
prove_wrapper.: 1.54594s (num_starts 70; 0.0221s/start)
decide_hoare_triple_check_ub.: 1.63872s (num_starts 61; 0.0269s/start)
decide_hoare_triple_helper.: 1.66492s (num_starts 61; 0.0273s/start)
expandProductCFG.: 1.74869s (num_starts 4; 0.4372s/start)
decide_hoare_triple_with_alias_cons.: 1.90119s (num_starts 61; 0.0312s/start)
bestFirstSearch.: 1.98111s (num_starts 1; 1.9811s/start)
Time taken for equivalence check.: 2.20481s (num_starts 1; 2.2048s/start)

counters:
# of paths enumerated.: 11
# of paths expanded.: 3
# of queries to linear solver.: 15
# of smt-solver-queries.: 30
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 12
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 4
smt-queries-cache-hits.: 11
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 17
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 8
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 18
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 16
src-nodes.: 14
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.62
final-CG-time-to-total-time-ratio.: 0.82
query-time-to-total-time-ratio.: 0.32

Context stats:
exprs: count: 142343
sorts: count: 151
num_proof_queries: 40
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	5698
	        hit ratio:	0.959986
m_simplify_solver:
	----------- total:	1014
	        hit ratio:	0.778107
m_z3_solver_substitution:
	----------- total:	224
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	225
	        hit ratio:	0
m_expr_size:
	----------- total:	5628
	        hit ratio:	0.942786
m_expr_evaluates_to_constant_visitor:
	----------- total:	3683
	        hit ratio:	0.634809

z3_solver expr_query_cache entry size: 30
	----------- total:	41
	             hits:	11
	        hit ratio:	0.268293
histogram (time taken by solver in ms):
[ 7.2490,  8.6728) (avg.  7.2490)        : 1
[ 8.6728, 10.3763) (avg.  9.5010)        : 1
[10.3763, 12.4144) (avg. 11.3515)        : 2
[12.4144, 14.8529) (avg. 14.0320)        : 4
[14.8529, 17.7702) (avg. 16.2242)        : 5
[17.7702, 21.2606) (avg. 20.9380)        : 1
[21.2606, 25.4366) (avg.  0.0000)        : 0
[25.4366, 30.4328) (avg. 28.6917)        : 7
[30.4328, 36.4103) (avg. 32.9218)        : 4
[36.4103, 43.5620) (avg. 41.1880)        : 5
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 0)                          : 0
[3, 5) (avg. 4)                          : 29
[5, 6) (avg. 0)                          : 0
[6, 7) (avg. 0)                          : 0
[7, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 12) (avg. 0)                        : 0
[12, 13) (avg. 0)                        : 0
[13, 14) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 17,  33) (avg.  17)                    : 1
[ 33,  49) (avg.   0)                    : 0
[ 49,  65) (avg.   0)                    : 0
[ 65,  81) (avg.   0)                    : 0
[ 81,  97) (avg.  96)                    : 3
[ 97, 113) (avg. 103)                    : 9
[113, 129) (avg. 115)                    : 1
[129, 145) (avg. 134)                    : 5
[145, 161) (avg. 155)                    : 8
[161, 176) (avg. 164)                    : 3
Top 10 highest time taking queries:
1. [0.043s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_2.0
2. [0.042s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
3. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_2.1
4. [0.041s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%7%bbent.0
5. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
6. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%7%bbentry_Lfor.cond%.0
7. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_.0
9. [0.031s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.4.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.030s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 128 time spent: 0:0:0 [0.002623s total; 0.000020 per start]
tfg_computeWP: num_starts 542 time spent: 0:0:0 [0.062309s total; 0.000115 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1954 time spent: 0:0:0 [0.003948s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1926 time spent: 0:0:0 [0.003699s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 1062 time spent: 0:0:0 [0.001882s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.241320s total; 0.012701 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.186055s total; 0.031009 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 342 time spent: 0:0:0 [0.173560s total; 0.000507 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 60 time spent: 0:0:0 [0.173810s total; 0.002897 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 282 time spent: 0:0:0 [0.138703s total; 0.000492 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1152 time spent: 0:0:0 [0.308018s total; 0.000267 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 282 time spent: 0:0:0 [0.008814s total; 0.000031 per start]
tfg_graph_get_vars_written_on_edge: num_starts 282 time spent: 0:0:0 [0.006713s total; 0.000024 per start]
cg_with_rank_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.133975s total; 0.004187 per start]
graph_with_ce_add_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.000495s total; 0.000023 per start]
graph_with_guessing_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.133284s total; 0.004165 per start]
point_set_add_point_using_CE: num_starts 135 time spent: 0:0:0 [0.014127s total; 0.000105 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 135 time spent: 0:0:0 [0.014408s total; 0.000107 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.054106s total; 0.003006 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.039193s total; 0.002177 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2115 time spent: 0:0:0 [0.019620s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 240 time spent: 0:0:0 [0.005430s total; 0.000023 per start]
expr_simplify_solver: num_starts 1057 time spent: 0:0:0 [0.079016s total; 0.000075 per start]
expr_simplify_syntactic: num_starts 1057 time spent: 0:0:0 [0.024150s total; 0.000023 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010510s total; 0.002628 per start]
expr_simplify_using_lhs_set_helper: num_starts 371 time spent: 0:0:0 [0.132344s total; 0.000357 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2015 time spent: 0:0:0 [0.130094s total; 0.000065 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1004 time spent: 0:0:0 [0.004246s total; 0.000004 per start]
expr_simplify_eq: num_starts 151 time spent: 0:0:0 [0.001462s total; 0.000010 per start]
expr_simplify_or: num_starts 52 time spent: 0:0:0 [0.000077s total; 0.000001 per start]
expr_simplify_and: num_starts 92 time spent: 0:0:0 [0.000779s total; 0.000008 per start]
expr_simplify_andnot1: num_starts 30 time spent: 0:0:0 [0.000454s total; 0.000015 per start]
expr_simplify_not: num_starts 13 time spent: 0:0:0 [0.000047s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 257 time spent: 0:0:0 [0.008762s total; 0.000034 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010415s total; 0.002604 per start]
get_arithmetic_addsub_atoms: num_starts 1406 time spent: 0:0:0 [0.001087s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 317 time spent: 0:0:0 [0.002875s total; 0.000009 per start]
expr_is_consts_struct_constant: num_starts 1739 time spent: 0:0:0 [0.001087s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 6044 time spent: 0:0:0 [0.134197s total; 0.000022 per start]
expr_do_simplify_helper_cache: num_starts 6044 time spent: 0:0:0 [0.005650s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 916 time spent: 0:0:0 [0.313240s total; 0.000342 per start]
array_constant_equals: num_starts 243 time spent: 0:0:0 [0.000423s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 62 time spent: 0:0:0 [0.090389s total; 0.001458 per start]
alias_val_xfer_and_meet: num_starts 62 time spent: 0:0:0 [0.039577s total; 0.000638 per start]
get_sprel_map_from_avail_exprs: num_starts 87 time spent: 0:0:0 [0.009268s total; 0.000107 per start]
update_memlabels_for_memslot_locs: num_starts 23 time spent: 0:0:0 [0.000097s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 158 time spent: 0:0:0 [0.016040s total; 0.000102 per start]
compute_simplified_loc_exprs_for_edge: num_starts 382 time spent: 0:0:0 [0.038166s total; 0.000100 per start]
compute_locs_definitely_written_on_edge: num_starts 158 time spent: 0:0:0 [0.000217s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 36 time spent: 0:0:0 [0.006116s total; 0.000170 per start]
edge_update_memlabel_map_for_mlvars: num_starts 79 time spent: 0:0:0 [0.001415s total; 0.000018 per start]
add_new_locs_based_on_edge: num_starts 62 time spent: 0:0:0 [0.026774s total; 0.000432 per start]
expand_locset_to_include_slots_for_memmask: num_starts 75 time spent: 0:0:0 [0.000162s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:29 [29.753827s total; 29.753827 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.47s.
ftmap_run_pointsto_analysis.: 0.125156s (num_starts 2; 0.0626s/start)s.
EQ Time after pointsto analysis: 2.34754s.
EQ Time after pointsto analysis and smt_query: 0.801595s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.794818s.
Equivalence proof found. The programs are equivalent.
