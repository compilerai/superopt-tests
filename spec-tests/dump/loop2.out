argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop2.proof
argv[5] = --spec-iospecs=loop2.iospecs
argv[6] = loop2.spec
argv[7] = loop2.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2707967
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/repos/superopt-project/superopt-tests/spec-tests/loop2.c
argv[10] = -o
argv[11] = par_tmpdir/loop2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop2.spec.etfg
argv[10] = par_tmpdir/loop2.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop2.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000114s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 119 time spent: 0:0:0 [0.000202s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 641 time spent: 0:0:0 [0.002340s total; 0.000004 per start]
expr_simplify_solver: num_starts 56 time spent: 0:0:0 [0.006559s total; 0.000117 per start]
expr_simplify_syntactic: num_starts 56 time spent: 0:0:0 [0.002000s total; 0.000036 per start]
expr_simplify_using_lhs_set_helper: num_starts 73 time spent: 0:0:0 [0.010326s total; 0.000141 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 168 time spent: 0:0:0 [0.010178s total; 0.000061 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000212s total; 0.000004 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000007s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 39 time spent: 0:0:0 [0.000505s total; 0.000013 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000043s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000692s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000129s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1461 time spent: 0:0:0 [0.011724s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1461 time spent: 0:0:0 [0.000942s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000009s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.041473s total; 0.000638 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.013280s total; 0.000204 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005304s total; 0.000062 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000083s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.003969s total; 0.000031 per start]
compute_simplified_loc_exprs_for_edge: num_starts 382 time spent: 0:0:0 [0.014782s total; 0.000039 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000047s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005226s total; 0.000187 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000378s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.008752s total; 0.000135 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000095s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 8e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.6e-05s (num_starts 22; 0.0000s/start)
add_assumes_to_start_edge.: 1.8e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 1.9e-05s (num_starts 31; 0.0000s/start)
add_extra_node_at_start_pc.: 2.7e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 2.8e-05s (num_starts 26; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.6e-05s (num_starts 2; 0.0000s/start)
context_constructor.solver.: 6.1e-05s (num_starts 1; 0.0001s/start)
context_constructor.: 7e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 7.1e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.9e-05s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.3e-05s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.6e-05s (num_starts 10; 0.0000s/start)
compute_sprel_relations.: 0.0001s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000107s (num_starts 1; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000108s (num_starts 33; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000127s (num_starts 33; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000131s (num_starts 1; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.00015s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000161s (num_starts 2; 0.0001s/start)
determinize_value_expr_map.: 0.000173s (num_starts 229; 0.0000s/start)
expr_represents_llvm_undef.: 0.000176s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000186s (num_starts 2; 0.0001s/start)
canonicalize_llvm_nextpcs.: 0.000297s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000301s (num_starts 65; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000304s (num_starts 1; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000307s (num_starts 65; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000357s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000412s (num_starts 1; 0.0004s/start)
sp_version_relations_val_t::meet.: 0.000418s (num_starts 759; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000421s (num_starts 66; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.00045s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000483s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000535s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000577s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000787s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000885s (num_starts 3; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00104s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001265s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.001266s (num_starts 85; 0.0000s/start)
query:convert_from_z3.: 0.001289s (num_starts 28; 0.0000s/start)
graph_visit_exprs.: 0.001298s (num_starts 4; 0.0003s/start)
compute_z3_expr.: 0.00131s (num_starts 28; 0.0000s/start)
compute_lr_status_for_expr.: 0.001405s (num_starts 36; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001478s (num_starts 31; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001494s (num_starts 119; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001529s (num_starts 31; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002043s (num_starts 1; 0.0020s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002108s (num_starts 1; 0.0021s/start)
query:convert_to_z3.: 0.002491s (num_starts 28; 0.0001s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.002612s (num_starts 1; 0.0026s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003161s (num_starts 65; 0.0000s/start)
compute_new_lr_status_on_locs.: 0.003586s (num_starts 65; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003652s (num_starts 68; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.003747s (num_starts 1; 0.0037s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003895s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.004077s (num_starts 2; 0.0020s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.004166s (num_starts 1; 0.0042s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004199s (num_starts 641; 0.0000s/start)
graph_to_stream.: 0.004276s (num_starts 1; 0.0043s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004321s (num_starts 1; 0.0043s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004376s (num_starts 2; 0.0022s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.0045s (num_starts 1; 0.0045s/start)
tfg::populate_loc_definedness.: 0.00458s (num_starts 2; 0.0023s/start)
query:simplify-z3.: 0.004765s (num_starts 66; 0.0001s/start)
populate_simplified_assets.: 0.005095s (num_starts 6; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.005252s (num_starts 2; 0.0026s/start)
graph_identify_back_edges.: 0.005281s (num_starts 5; 0.0011s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005409s (num_starts 65; 0.0001s/start)
graph_identify_natural_loops.: 0.005539s (num_starts 5; 0.0011s/start)
populate_branch_affecting_locs.: 0.00557s (num_starts 2; 0.0028s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.006041s (num_starts 1; 0.0060s/start)
create_sp_version_relations_lattice_at_pc.: 0.006293s (num_starts 85; 0.0001s/start)
populate_transitive_closure.: 0.006303s (num_starts 1; 0.0063s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.00651s (num_starts 1; 0.0065s/start)
avail_exprs_create_submap.: 0.00735s (num_starts 195; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.008391s (num_starts 3; 0.0028s/start)
compute_regions.: 0.008806s (num_starts 5; 0.0018s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.009158s (num_starts 1; 0.0092s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.009161s (num_starts 1; 0.0092s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.009167s (num_starts 1; 0.0092s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.009172s (num_starts 1; 0.0092s/start)
tfg_constructor.src.spec.foo.: 0.009176s (num_starts 1; 0.0092s/start)
tfg_preprocess.dst.llvm.foo.: 0.009695s (num_starts 1; 0.0097s/start)
tfg::tfg_preprocess.: 0.009697s (num_starts 1; 0.0097s/start)
find_dominators.: 0.009874s (num_starts 9; 0.0011s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.010406s (num_starts 73; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011252s (num_starts 65; 0.0002s/start)
main.2.: 0.012097s (num_starts 1; 0.0121s/start)
populate_loc_liveness.: 0.012525s (num_starts 2; 0.0063s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013381s (num_starts 65; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.013415s (num_starts 641; 0.0000s/start)
get_tfg.: 0.013444s (num_starts 1; 0.0134s/start)
get_function_tfg_map.foo.: 0.013473s (num_starts 1; 0.0135s/start)
get_function_tfg_map.: 0.013476s (num_starts 1; 0.0135s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.013506s (num_starts 3; 0.0045s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.014181s (num_starts 641; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.017446s (num_starts 641; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.03476s (num_starts 1; 0.0348s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.041543s (num_starts 65; 0.0006s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.043858s (num_starts 1; 0.0439s/start)
ftmap_run_pointsto_analysis.: 0.096005s (num_starts 1; 0.0960s/start)
parse_consts_db.: 6.62207s (num_starts 1; 6.6221s/start)
main.: 6.79844s (num_starts 1; 6.7984s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file loop2.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 5 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1.B2: Propagated 3 out of 5 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A1.B2: Added the 3 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 10 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove4...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove3...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove4...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove4...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:23 : foo.A1.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Propagated 5 out of 18 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A1.B2.C1: Added the 5 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:23 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:23 : foo.A1.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.spec-%var-r-0.L2%7%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%7%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3v487.ce29      2.:z3.ce114      3.:z3v487.ce157
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3v487.ce157      2.:z3.ce232      3.:z3.ce382
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3v487.ce29
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce307      2.:z3v487.ce157
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce55      2.:z3v487.ce29
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3v487.ce157      2.:z3.ce232      3.:z3.ce382
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3v487.ce29
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 21))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 18 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 2.40s, query:smt.: 0.709043s (num_starts 30; 0.0236s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.59013s (num_starts 61; 0.0261s/start)ftmap_run_pointsto_analysis.: 0.123639s (num_starts 2; 0.0618s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 2e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 3e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 3e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 5; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.1e-05s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.1e-05s (num_starts 4; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.1e-05s (num_starts 1; 0.0000s/start)
remove_complex_bv_exprs.: 1.1e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.1e-05s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 1.4e-05s (num_starts 16; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.4e-05s (num_starts 13; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.7e-05s (num_starts 19; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.4e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.6e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 2.8e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3e-05s (num_starts 1; 0.0000s/start)
prove_trivial.: 3e-05s (num_starts 30; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.1e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.4e-05s (num_starts 2; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.4e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.6e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.4e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 6e-05s (num_starts 28; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 7.5e-05s (num_starts 16; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 8.1e-05s (num_starts 15; 0.0000s/start)
expr_is_hidden_reg.: 8.7e-05s (num_starts 94; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 8.9e-05s (num_starts 1; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 9.8e-05s (num_starts 70; 0.0000s/start)
expr_is_callee_save_const.: 0.000107s (num_starts 106; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000118s (num_starts 61; 0.0000s/start)
lr_status_meet.: 0.00012s (num_starts 180; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000133s (num_starts 40; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000141s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000144s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00015s (num_starts 1; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000159s (num_starts 1; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000164s (num_starts 40; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000166s (num_starts 1; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000167s (num_starts 40; 0.0000s/start)
populate_locid2expr_map.: 0.00017s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000172s (num_starts 22; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000185s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000186s (num_starts 40; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000196s (num_starts 5; 0.0000s/start)
proof_query_is_trivial_helper.: 0.0002s (num_starts 82; 0.0000s/start)
compute_sprel_relations.: 0.000202s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000206s (num_starts 15; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000209s (num_starts 40; 0.0000s/start)
propagate_sprels.: 0.000217s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000223s (num_starts 22; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000242s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00025s (num_starts 27; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000261s (num_starts 509; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000278s (num_starts 9; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000278s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00028s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000301s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000301s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000302s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000303s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000303s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000306s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000317s (num_starts 1; 0.0003s/start)
collect_assumes_around_edge.: 0.000342s (num_starts 3; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000356s (num_starts 2; 0.0002s/start)
identify_address_taken_local_variables.: 0.000416s (num_starts 1; 0.0004s/start)
set_result_and_counter_example.: 0.000423s (num_starts 30; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000445s (num_starts 90; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00045s (num_starts 31; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000451s (num_starts 2; 0.0002s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000462s (num_starts 90; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000517s (num_starts 40; 0.0000s/start)
parse_yices_model.: 0.000544s (num_starts 1; 0.0005s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000579s (num_starts 62; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000582s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000591s (num_starts 1; 0.0006s/start)
ldr_decomposition.: 0.000607s (num_starts 15; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000613s (num_starts 50; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000614s (num_starts 8; 0.0001s/start)
construct_linear_combination_exprs.: 0.000638s (num_starts 28; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000666s (num_starts 3; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.000667s (num_starts 1; 0.0007s/start)
populate_dominator_and_postdominator_relations.: 0.000667s (num_starts 2; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00067s (num_starts 1; 0.0007s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000685s (num_starts 79; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000699s (num_starts 1; 0.0007s/start)
expr_represents_llvm_undef.: 0.000703s (num_starts 110; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000705s (num_starts 61; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000711s (num_starts 64; 0.0000s/start)
proof_query_is_trivial.: 0.000719s (num_starts 70; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000722s (num_starts 5; 0.0001s/start)
populate_simplified_to_state.: 0.000747s (num_starts 3; 0.0002s/start)
tfg_edge_composition_get_assumes.: 0.000798s (num_starts 64; 0.0000s/start)
create_closure_matrix.: 0.000832s (num_starts 102; 0.0000s/start)
removeMostPromising.: 0.00085s (num_starts 10; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000877s (num_starts 5; 0.0002s/start)
parse_cvc4_model.: 0.000899s (num_starts 1; 0.0009s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000902s (num_starts 5; 0.0002s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000934s (num_starts 2; 0.0005s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000983s (num_starts 1; 0.0010s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001021s (num_starts 30; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001069s (num_starts 40; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001082s (num_starts 4; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001213s (num_starts 79; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001253s (num_starts 2; 0.0006s/start)
bv_const_ref_map2expr_map.: 0.001361s (num_starts 28; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001564s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001567s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned;-trivial.: 0.001571s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001575s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001582s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned.: 0.001589s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.0016s (num_starts 2; 0.0008s/start)
graph_visit_exprs.: 0.001645s (num_starts 3; 0.0005s/start)
populate_simplified_assets.: 0.001698s (num_starts 6; 0.0003s/start)
tfg::populate_loc_definedness.before_solve.: 0.001699s (num_starts 3; 0.0006s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001707s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.001755s (num_starts 2; 0.0009s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.00176s (num_starts 40; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001859s (num_starts 712; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00195s (num_starts 1194; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001991s (num_starts 3; 0.0007s/start)
tfg::populate_loc_definedness.: 0.002095s (num_starts 3; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.002164s (num_starts 110; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002169s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002174s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.002179s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002183s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002192s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.0022s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002205s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002207s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002209s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002211s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.002214s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002215s (num_starts 3; 0.0007s/start)
get_sprel_map_pair_at_pc.: 0.002711s (num_starts 40; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.002741s (num_starts 2; 0.0014s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.002774s (num_starts 1; 0.0028s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002795s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002798s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.002803s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002805s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002819s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.00283s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.00284s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002851s (num_starts 3; 0.0010s/start)
populate_locs_potentially_modified_on_edge.: 0.002853s (num_starts 3; 0.0010s/start)
graph_identify_back_edges.: 0.003086s (num_starts 21; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003227s (num_starts 221; 0.0000s/start)
find_dominators.: 0.003307s (num_starts 25; 0.0001s/start)
graph_identify_natural_loops.: 0.003357s (num_starts 21; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003366s (num_starts 64; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.003436s (num_starts 2; 0.0017s/start)
populate_branch_affecting_locs.: 0.003745s (num_starts 3; 0.0012s/start)
pth_collect_simplified_preds_using_atom_func.: 0.00403s (num_starts 61; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.004037s (num_starts 102; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.004287s (num_starts 125; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.00448s (num_starts 15; 0.0003s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004508s (num_starts 31; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.004563s (num_starts 3; 0.0015s/start)
compute_expr_eqclasses_at_pc.: 0.004618s (num_starts 1; 0.0046s/start)
bv_linear_solve.: 0.004755s (num_starts 15; 0.0003s/start)
query:bv_solve.: 0.004852s (num_starts 15; 0.0003s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.004989s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.005147s (num_starts 1; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005149s (num_starts 1; 0.0051s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.005151s (num_starts 1; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.005156s (num_starts 1; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005159s (num_starts 1; 0.0052s/start)
cg_add_node.: 0.005208s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005528s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005531s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.005537s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.00565s (num_starts 4; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.005659s (num_starts 4; 0.0014s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005716s (num_starts 220; 0.0000s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005734s (num_starts 40; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005765s (num_starts 120; 0.0000s/start)
bv_solve_returning_intermediate_structures.: 0.005862s (num_starts 15; 0.0004s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.005994s (num_starts 42; 0.0001s/start)
populate_transitive_closure.: 0.006087s (num_starts 27; 0.0002s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006222s (num_starts 40; 0.0002s/start)
predicate_canonicalized.: 0.006268s (num_starts 28; 0.0002s/start)
expr_substitute_using_available_exprs_submap.: 0.006416s (num_starts 186; 0.0000s/start)
collect_assumes_around_path_helper.: 0.006446s (num_starts 90; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.006717s (num_starts 15; 0.0004s/start)
graph_with_paths::collect_assumes_around_path.: 0.006746s (num_starts 90; 0.0001s/start)
bvsolve_cache_query.: 0.006842s (num_starts 15; 0.0005s/start)
create_new_corr_graph_edge.new_node.: 0.006883s (num_starts 2; 0.0034s/start)
create_new_corr_graph_edge.: 0.007016s (num_starts 3; 0.0023s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.007017s (num_starts 20; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.00707s (num_starts 20; 0.0004s/start)
compute_lr_status_for_expr.: 0.007132s (num_starts 195; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.007385s (num_starts 6; 0.0012s/start)
compute_vars_reaching_definitions.: 0.007642s (num_starts 2; 0.0038s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007745s (num_starts 180; 0.0000s/start)
lhs_set_sort.: 0.007864s (num_starts 40; 0.0002s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.008006s (num_starts 180; 0.0000s/start)
compute_regions.: 0.00806s (num_starts 21; 0.0004s/start)
tfg_suffixpath_get_expr_helper.: 0.008066s (num_starts 20; 0.0004s/start)
solve_for_bv_points.: 0.008283s (num_starts 15; 0.0006s/start)
collect_aliasing_constraints_around_path_helper.: 0.008546s (num_starts 106; 0.0001s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.008926s (num_starts 18; 0.0005s/start)
collect_aliasing_constraints_around_path.: 0.009086s (num_starts 66; 0.0001s/start)
collect_inductive_preds_around_path.: 0.009186s (num_starts 61; 0.0002s/start)
gen_pred_from_coeff_row.simplify.: 0.009969s (num_starts 28; 0.0004s/start)
counter_example_satisfies_preds.: 0.009977s (num_starts 360; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.010035s (num_starts 15; 0.0007s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.010042s (num_starts 2; 0.0050s/start)
get_next_potential_correlations.: 0.010045s (num_starts 3; 0.0033s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.010048s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.010049s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.010056s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.010061s (num_starts 2; 0.0050s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.010252s (num_starts 79; 0.0001s/start)
populate_loc_liveness.: 0.010592s (num_starts 3; 0.0035s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.01127s (num_starts 4; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011538s (num_starts 3; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011545s (num_starts 3; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.011557s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.011571s (num_starts 3; 0.0039s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.012499s (num_starts 3; 0.0042s/start)
query:convert_from_z3.: 0.012982s (num_starts 216; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.013656s (num_starts 79; 0.0002s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.013763s (num_starts 1; 0.0138s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.014295s (num_starts 79; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.01513s (num_starts 1024; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.015179s (num_starts 6; 0.0025s/start)
compute_new_lr_status_on_locs.: 0.015978s (num_starts 79; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.01608s (num_starts 17; 0.0009s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.016319s (num_starts 135; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.017033s (num_starts 4; 0.0043s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.017048s (num_starts 4; 0.0043s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.01716s (num_starts 4; 0.0043s/start)
do_ssa_transformation.: 0.017549s (num_starts 2; 0.0088s/start)
gen_pred_from_coeff_row.: 0.019251s (num_starts 28; 0.0007s/start)
tfg_relax_pointsto_vals_on_edge.: 0.019299s (num_starts 17; 0.0011s/start)
compute_preds_for_bv_points.: 0.019484s (num_starts 5; 0.0039s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.019521s (num_starts 9; 0.0022s/start)
avail_exprs_create_submap.: 0.019635s (num_starts 237; 0.0001s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.019892s (num_starts 16; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020265s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02027s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020274s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020284s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.020288s (num_starts 1; 0.0203s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.020298s (num_starts 1; 0.0203s/start)
get_unrolled_paths_from.: 0.020407s (num_starts 15; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.020603s (num_starts 2; 0.0103s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.02061s (num_starts 2; 0.0103s/start)
graph_to_stream.: 0.020751s (num_starts 4; 0.0052s/start)
apply_mask_and_overlay_array_constant.: 0.0208s (num_starts 16; 0.0013s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.020809s (num_starts 89; 0.0002s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.020993s (num_starts 61; 0.0003s/start)
query:convert_to_z3.: 0.02186s (num_starts 216; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022283s (num_starts 1; 0.0223s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022284s (num_starts 1; 0.0223s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022286s (num_starts 1; 0.0223s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022288s (num_starts 1; 0.0223s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022292s (num_starts 1; 0.0223s/start)
tfg_postprocess_after_pointsto_analysis.: 0.022799s (num_starts 2; 0.0114s/start)
put_smtlib_string_in_file.: 0.024538s (num_starts 60; 0.0004s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.025203s (num_starts 1064; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.02646s (num_starts 1024; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.027449s (num_starts 2; 0.0137s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.027463s (num_starts 2; 0.0137s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.027473s (num_starts 2; 0.0137s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.027484s (num_starts 2; 0.0137s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.027499s (num_starts 2; 0.0137s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.029964s (num_starts 40; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032326s (num_starts 1; 0.0323s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.032335s (num_starts 1; 0.0323s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.034051s (num_starts 40; 0.0009s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.035716s (num_starts 1024; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.037114s (num_starts 79; 0.0005s/start)
guarded_predicate_set_and.: 0.038865s (num_starts 40; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.039162s (num_starts 1; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.039168s (num_starts 1; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.039179s (num_starts 1; 0.0392s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.039452s (num_starts 62; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.042413s (num_starts 3; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.042425s (num_starts 3; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.044733s (num_starts 2; 0.0224s/start)
query:simplify-z3.: 0.046774s (num_starts 440; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.049878s (num_starts 4; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.049888s (num_starts 4; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.050984s (num_starts 1; 0.0510s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.050992s (num_starts 1; 0.0510s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.051002s (num_starts 1; 0.0510s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.051006s (num_starts 1; 0.0510s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.051212s (num_starts 1; 0.0512s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.051633s (num_starts 6; 0.0086s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.051685s (num_starts 78; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.056981s (num_starts 8; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.057s (num_starts 8; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064226s (num_starts 1; 0.0642s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064228s (num_starts 1; 0.0642s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.064235s (num_starts 1; 0.0642s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.06424s (num_starts 1; 0.0642s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065457s (num_starts 2; 0.0327s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065463s (num_starts 2; 0.0327s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.065473s (num_starts 2; 0.0327s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.065482s (num_starts 2; 0.0327s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068123s (num_starts 2; 0.0341s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068135s (num_starts 2; 0.0341s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.06814s (num_starts 2; 0.0341s/start)
graph_ec_apply_trans_funs_helper.0.: 0.069693s (num_starts 167; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.069913s (num_starts 4; 0.0175s/start)
graph_ec_apply_trans_funs_helper.: 0.071055s (num_starts 172; 0.0004s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.071496s (num_starts 172; 0.0004s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.072109s (num_starts 172; 0.0004s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.072593s (num_starts 105; 0.0007s/start)
computeWP_for_pred_across_ec.: 0.072717s (num_starts 172; 0.0004s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.074512s (num_starts 3; 0.0248s/start)
check_node_stability_after_CE_addition.: 0.077705s (num_starts 32; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079538s (num_starts 1; 0.0795s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079543s (num_starts 1; 0.0795s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079549s (num_starts 1; 0.0795s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.080448s (num_starts 469; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.081779s (num_starts 4; 0.0204s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.081796s (num_starts 4; 0.0204s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.081818s (num_starts 4; 0.0205s/start)
edge_composition_apply_trans_funs_on_pred.: 0.084024s (num_starts 61; 0.0014s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.084757s (num_starts 78; 0.0011s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.089477s (num_starts 62; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090115s (num_starts 2; 0.0451s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090128s (num_starts 2; 0.0451s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.09021s (num_starts 2; 0.0451s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.093302s (num_starts 3; 0.0311s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095654s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095657s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09566s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095661s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.095669s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.095671s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.095677s (num_starts 1; 0.0957s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.096002s (num_starts 2; 0.0480s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097491s (num_starts 1; 0.0975s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097495s (num_starts 1; 0.0975s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.097507s (num_starts 1; 0.0975s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.09751s (num_starts 1; 0.0975s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097749s (num_starts 3; 0.0326s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097767s (num_starts 3; 0.0326s/start)
propagate_nodece_across_edge.: 0.105604s (num_starts 8; 0.0132s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.1068s (num_starts 12; 0.0089s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.107343s (num_starts 6; 0.0179s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.107928s (num_starts 5; 0.0216s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.107943s (num_starts 5; 0.0216s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.114222s (num_starts 18; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.11984s (num_starts 8; 0.0150s/start)
compute_z3_expr.: 0.11992s (num_starts 246; 0.0005s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.120766s (num_starts 308; 0.0004s/start)
parse_z3_model.: 0.122585s (num_starts 17; 0.0072s/start)
ftmap_run_pointsto_analysis.: 0.123639s (num_starts 2; 0.0618s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.123787s (num_starts 16; 0.0077s/start)
tfg_run_pointsto_analysis.: 0.123933s (num_starts 2; 0.0620s/start)
ce_reconcile_sorts.: 0.125394s (num_starts 19; 0.0066s/start)
read_counter_examples_from_channel.: 0.125746s (num_starts 9; 0.0140s/start)
tfg_populate_structs_after_ssa_construction.: 0.140454s (num_starts 2; 0.0702s/start)
check_wfconds_on_edge.: 0.142882s (num_starts 7; 0.0204s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.145965s (num_starts 3; 0.0487s/start)
decide_hoare_triple_helper;-trivial.: 0.157152s (num_starts 37; 0.0042s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.158888s (num_starts 31; 0.0051s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.159084s (num_starts 31; 0.0051s/start)
counter_example_falsifies_preds.: 0.159174s (num_starts 59; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159828s (num_starts 3; 0.0533s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159842s (num_starts 3; 0.0533s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.160873s (num_starts 2; 0.0804s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161706s (num_starts 2; 0.0809s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.161762s (num_starts 2; 0.0809s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.165554s (num_starts 7; 0.0237s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.165581s (num_starts 7; 0.0237s/start)
counter_example_evaluate_preds.: 0.168193s (num_starts 419; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.169577s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.169586s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.169598s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.169599s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.169616s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned.: 0.169639s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.169655s (num_starts 2; 0.0848s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.17124s (num_starts 4; 0.0428s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.176779s (num_starts 1; 0.1768s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180805s (num_starts 2; 0.0904s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180809s (num_starts 2; 0.0904s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180809s (num_starts 2; 0.0904s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.180827s (num_starts 2; 0.0904s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.18084s (num_starts 2; 0.0904s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.180858s (num_starts 2; 0.0904s/start)
corr_graph::add_edge().: 0.197625s (num_starts 3; 0.0659s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.205438s (num_starts 3; 0.0685s/start)
corr_graph_add_correlation.: 0.205538s (num_starts 3; 0.0685s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.205592s (num_starts 3; 0.0685s/start)
counter_example_translate_on_edge_composition_helper.: 0.208079s (num_starts 292; 0.0007s/start)
check_equivalence_proof.: 0.211648s (num_starts 1; 0.2116s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.215821s (num_starts 10; 0.0216s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.2279s (num_starts 5; 0.0456s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.231116s (num_starts 16; 0.0144s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.231335s (num_starts 42; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.235601s (num_starts 11; 0.0214s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.25737s (num_starts 3; 0.0858s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.257432s (num_starts 3; 0.0858s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.260349s (num_starts 3; 0.0868s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.262657s (num_starts 6; 0.0438s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.279693s (num_starts 6; 0.0466s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.283988s (num_starts 4; 0.0710s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.284014s (num_starts 4; 0.0710s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.284035s (num_starts 4; 0.0710s/start)
dst_edge_composition_proves_false.: 0.286141s (num_starts 3; 0.0954s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.290033s (num_starts 8; 0.0363s/start)
get_next_dst_edge_composition_to_correlate.: 0.295383s (num_starts 4; 0.0738s/start)
decide_hoare_triple.: 0.298652s (num_starts 5; 0.0597s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.302734s (num_starts 17; 0.0178s/start)
check_preds_on_edge_compositions.: 0.312669s (num_starts 10; 0.0313s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.341076s (num_starts 12; 0.0284s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.341108s (num_starts 12; 0.0284s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.342639s (num_starts 3; 0.1142s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.391096s (num_starts 16; 0.0244s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.397509s (num_starts 8; 0.0497s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.402884s (num_starts 9; 0.0448s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.414387s (num_starts 25; 0.0166s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.511923s (num_starts 9; 0.0569s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.626618s (num_starts 27; 0.0232s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.634334s (num_starts 8; 0.0793s/start)
query:smt.: 0.709043s (num_starts 30; 0.0236s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.758861s (num_starts 24; 0.0316s/start)
spawn_smt_query.: 0.835123s (num_starts 30; 0.0278s/start)
solver_provable.: 1.07991s (num_starts 40; 0.0270s/start)
expr_is_provable.: 1.0925s (num_starts 40; 0.0273s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.09313s (num_starts 40; 0.0273s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.09534s (num_starts 40; 0.0274s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.09647s (num_starts 40; 0.0274s/start)
solver_satisfiable-cache-miss.: 1.11655s (num_starts 30; 0.0372s/start)
solver_satisfiable.: 1.1168s (num_starts 41; 0.0272s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.14221s (num_starts 40; 0.0286s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.16552s (num_starts 40; 0.0291s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.16626s (num_starts 40; 0.0292s/start)
update_invariant_state_for_edges.: 1.37176s (num_starts 3; 0.4573s/start)
cg_check_new_cg_ec.: 1.37181s (num_starts 3; 0.4573s/start)
correl_entry_apply.: 1.37197s (num_starts 3; 0.4573s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.41043s (num_starts 40; 0.0353s/start)
prove.: 1.41076s (num_starts 40; 0.0353s/start)
prove_spawn_and_join_helper.: 1.41099s (num_starts 40; 0.0353s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.43058s (num_starts 24; 0.0596s/start)
prove_spawn_and_join.: 1.46044s (num_starts 40; 0.0365s/start)
prove_wrapper.proof_query_not_trivial.: 1.46557s (num_starts 40; 0.0366s/start)
prove_wrapper.: 1.47567s (num_starts 70; 0.0211s/start)
decide_hoare_triple_check_ub.: 1.5651s (num_starts 61; 0.0257s/start)
decide_hoare_triple_helper.: 1.59013s (num_starts 61; 0.0261s/start)
expandProductCFG.: 1.67789s (num_starts 4; 0.4195s/start)
decide_hoare_triple_with_alias_cons.: 1.82197s (num_starts 61; 0.0299s/start)
bestFirstSearch.: 1.92776s (num_starts 1; 1.9278s/start)
Time taken for equivalence check.: 2.14074s (num_starts 1; 2.1407s/start)

counters:
# of paths enumerated.: 11
# of paths expanded.: 3
# of queries to linear solver.: 15
# of smt-solver-queries.: 30
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 12
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 4
smt-queries-cache-hits.: 11
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 17
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 8
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 18
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 16
src-nodes.: 14
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.58
final-CG-time-to-total-time-ratio.: 0.82
query-time-to-total-time-ratio.: 0.32

Context stats:
exprs: count: 142343
sorts: count: 151
num_proof_queries: 40
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	5698
	        hit ratio:	0.959986
m_simplify_solver:
	----------- total:	1014
	        hit ratio:	0.778107
m_z3_solver_substitution:
	----------- total:	224
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	225
	        hit ratio:	0
m_expr_size:
	----------- total:	5628
	        hit ratio:	0.942786
m_expr_evaluates_to_constant_visitor:
	----------- total:	3683
	        hit ratio:	0.634809

z3_solver expr_query_cache entry size: 30
	----------- total:	41
	             hits:	11
	        hit ratio:	0.268293
histogram (time taken by solver in ms):
[ 8.4700,  9.9244) (avg.  8.9950)        : 3
[ 9.9244, 11.6286) (avg. 10.7245)        : 2
[11.6286, 13.6253) (avg. 12.4910)        : 5
[13.6253, 15.9650) (avg.  0.0000)        : 0
[15.9650, 18.7064) (avg.  0.0000)        : 0
[18.7064, 21.9185) (avg. 20.7890)        : 1
[21.9185, 25.6823) (avg. 23.4572)        : 5
[25.6823, 30.0922) (avg. 27.1336)        : 5
[30.0922, 35.2595) (avg. 33.0170)        : 4
[35.2595, 41.3140) (avg. 38.3904)        : 5
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 0)                          : 0
[3, 5) (avg. 4)                          : 29
[5, 6) (avg. 0)                          : 0
[6, 7) (avg. 0)                          : 0
[7, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 12) (avg. 0)                        : 0
[12, 13) (avg. 0)                        : 0
[13, 14) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 17,  33) (avg.  17)                    : 1
[ 33,  49) (avg.   0)                    : 0
[ 49,  65) (avg.   0)                    : 0
[ 65,  81) (avg.   0)                    : 0
[ 81,  97) (avg.  96)                    : 3
[ 97, 113) (avg. 103)                    : 9
[113, 129) (avg. 115)                    : 1
[129, 145) (avg. 134)                    : 5
[145, 161) (avg. 155)                    : 8
[161, 176) (avg. 164)                    : 3
Top 10 highest time taking queries:
1. [0.040s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_2.0
2. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%7%bbent.0
4. [0.039s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
5. [0.035s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
6. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_.0
7. [0.034s] SOLVER_RES_TRUE memlabel_assertions_sat.0
8. [0.032s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.abstract-memlabel-asserts-houdini-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_2.1
10. [0.029s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.4.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 128 time spent: 0:0:0 [0.002641s total; 0.000021 per start]
tfg_computeWP: num_starts 542 time spent: 0:0:0 [0.061236s total; 0.000113 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1954 time spent: 0:0:0 [0.003836s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1926 time spent: 0:0:0 [0.003697s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 1062 time spent: 0:0:0 [0.001924s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.238891s total; 0.012573 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.185609s total; 0.030935 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 342 time spent: 0:0:0 [0.170204s total; 0.000498 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 60 time spent: 0:0:0 [0.172010s total; 0.002867 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 282 time spent: 0:0:0 [0.135635s total; 0.000481 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1152 time spent: 0:0:0 [0.303694s total; 0.000264 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 282 time spent: 0:0:0 [0.008515s total; 0.000030 per start]
tfg_graph_get_vars_written_on_edge: num_starts 282 time spent: 0:0:0 [0.006778s total; 0.000024 per start]
cg_with_rank_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.133051s total; 0.004158 per start]
graph_with_ce_add_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.000515s total; 0.000023 per start]
graph_with_guessing_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.132351s total; 0.004136 per start]
point_set_add_point_using_CE: num_starts 135 time spent: 0:0:0 [0.014396s total; 0.000107 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 135 time spent: 0:0:0 [0.014692s total; 0.000109 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.053936s total; 0.002996 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.038724s total; 0.002151 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2115 time spent: 0:0:0 [0.019645s total; 0.000009 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 240 time spent: 0:0:0 [0.005431s total; 0.000023 per start]
expr_simplify_solver: num_starts 1057 time spent: 0:0:0 [0.078617s total; 0.000074 per start]
expr_simplify_syntactic: num_starts 1057 time spent: 0:0:0 [0.023447s total; 0.000022 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010176s total; 0.002544 per start]
expr_simplify_using_lhs_set_helper: num_starts 371 time spent: 0:0:0 [0.130848s total; 0.000353 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2015 time spent: 0:0:0 [0.128598s total; 0.000064 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1004 time spent: 0:0:0 [0.004155s total; 0.000004 per start]
expr_simplify_eq: num_starts 151 time spent: 0:0:0 [0.001427s total; 0.000009 per start]
expr_simplify_or: num_starts 52 time spent: 0:0:0 [0.000074s total; 0.000001 per start]
expr_simplify_and: num_starts 92 time spent: 0:0:0 [0.000788s total; 0.000009 per start]
expr_simplify_andnot1: num_starts 30 time spent: 0:0:0 [0.000438s total; 0.000015 per start]
expr_simplify_not: num_starts 13 time spent: 0:0:0 [0.000050s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 257 time spent: 0:0:0 [0.008693s total; 0.000034 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010086s total; 0.002521 per start]
get_arithmetic_addsub_atoms: num_starts 1406 time spent: 0:0:0 [0.001005s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 317 time spent: 0:0:0 [0.002860s total; 0.000009 per start]
expr_is_consts_struct_constant: num_starts 1739 time spent: 0:0:0 [0.001041s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 6044 time spent: 0:0:0 [0.133116s total; 0.000022 per start]
expr_do_simplify_helper_cache: num_starts 6044 time spent: 0:0:0 [0.005804s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 916 time spent: 0:0:0 [0.308919s total; 0.000337 per start]
array_constant_equals: num_starts 243 time spent: 0:0:0 [0.000420s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 62 time spent: 0:0:0 [0.089421s total; 0.001442 per start]
alias_val_xfer_and_meet: num_starts 62 time spent: 0:0:0 [0.039351s total; 0.000635 per start]
get_sprel_map_from_avail_exprs: num_starts 87 time spent: 0:0:0 [0.009143s total; 0.000105 per start]
update_memlabels_for_memslot_locs: num_starts 23 time spent: 0:0:0 [0.000095s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 158 time spent: 0:0:0 [0.015956s total; 0.000101 per start]
compute_simplified_loc_exprs_for_edge: num_starts 382 time spent: 0:0:0 [0.041579s total; 0.000109 per start]
compute_locs_definitely_written_on_edge: num_starts 158 time spent: 0:0:0 [0.000217s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 36 time spent: 0:0:0 [0.005951s total; 0.000165 per start]
edge_update_memlabel_map_for_mlvars: num_starts 79 time spent: 0:0:0 [0.001324s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 62 time spent: 0:0:0 [0.026411s total; 0.000426 per start]
expand_locset_to_include_slots_for_memmask: num_starts 75 time spent: 0:0:0 [0.000155s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:29 [29.474125s total; 29.474125 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.40s.
ftmap_run_pointsto_analysis.: 0.123639s (num_starts 2; 0.0618s/start)s.
EQ Time after pointsto analysis: 2.27859s.
EQ Time after pointsto analysis and smt_query: 0.802913s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.796071s.
Equivalence proof found. The programs are equivalent.
