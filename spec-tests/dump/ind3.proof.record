==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x14 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x5 $x12)))
 (let (($x19 (and $x10 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x14 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x5 $x12)))
 (let (($x19 (and $x10 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x152 (= true false)))
 (let (($x153 (= $x152 true)))
 (let ((?x137 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x146 (concat ?x145 (concat ?x142 (concat ?x139 ?x137)))))
 (let (($x147 (= ?x146 input.dst.llvm-%l)))
 (let (($x148 (= $x147 true)))
 (let (($x149 (= $x148 true)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x128 (= (_ bv0 32) ?x127)))
 (let ((?x124 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x125 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x124)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x123 $x125)))
 (let (($x129 (and $x126 $x128)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x109 $x129)))
 (let (($x116 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x116)))))))
 (let (($x131 (and $x122 $x130)))
 (let (($x132 (= $x131 true)))
 (let (($x133 (= $x132 true)))
 (let (($x134 (= $x133 true)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x72 (concat ?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x78 (concat ?x77 (concat ?x74 ?x72))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv1 32))) (select input.dst.llvm-mem ?x78))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv2 32))) ?x90))))
 (let (($x97 (= input.spec-%var-l-0.2.1.2.0 ?x96)))
 (let (($x98 (and $x97 true)))
 (let (($x38 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x99 (=> $x38 $x98)))
 (let (($x79 (= (_ bv0 32) ?x78)))
 (let ((?x80 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x84 (bvuge ?x80 (_ bv1 32))))
 (let (($x85 (= $x38 $x84)))
 (let (($x27 (= false false)))
 (let (($x48 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x33 (=> $x48 $x27)))
 (let (($x81 (= ?x80 (_ bv0 32))))
 (let (($x82 (= $x48 $x81)))
 (let (($x83 (and $x82 $x33)))
 (let (($x86 (and $x83 $x85)))
 (let (($x100 (and $x86 $x99)))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x57)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x61)))
 (let (($x66 (= input.spec-%var-l-0.2.0 ?x65)))
 (let (($x101 (and $x66 $x100)))
 (let (($x20 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x102 (=> $x20 $x101)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x47 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x47 (_ bv1 32))))
 (let (($x5 (= $x20 $x31)))
 (let (($x35 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x8 (=> $x35 $x27)))
 (let (($x43 (= ?x47 (_ bv0 32))))
 (let (($x10 (= $x35 $x43)))
 (let (($x28 (and $x10 $x8)))
 (let (($x50 (and $x28 $x5)))
 (let (($x103 (and $x50 $x102)))
 (let (($x104 (= $x103 true)))
 (let (($x105 (= $x104 true)))
 (let (($x106 (= $x105 true)))
 (let (($x135 (and $x106 $x134)))
 (let (($x150 (and $x135 $x149)))
 (let (($x11 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x7 (and $x11 true)))
 (let (($x39 (=> $x38 $x7)))
 (let (($x14 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x37 (= $x38 $x14)))
 (let (($x36 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x15 (= $x48 $x36)))
 (let (($x46 (and $x15 $x33)))
 (let (($x18 (and $x46 $x37)))
 (let (($x34 (and $x18 $x39)))
 (let (($x40 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x6 (and $x40 $x34)))
 (let (($x30 (=> $x20 $x6)))
 (let (($x25 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x32 (= $x20 $x25)))
 (let (($x19 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x12 (= $x35 $x19)))
 (let (($x23 (and $x12 $x8)))
 (let (($x49 (and $x23 $x32)))
 (let (($x41 (and $x49 $x30)))
 (let (($x151 (and $x41 $x150)))
 (let (($x154 (=> $x151 $x153)))
 (not $x154))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x152 (= true false)))
 (let (($x153 (= $x152 true)))
 (let ((?x137 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x146 (concat ?x145 (concat ?x142 (concat ?x139 ?x137)))))
 (let (($x147 (= ?x146 input.dst.llvm-%l)))
 (let (($x148 (= $x147 true)))
 (let (($x149 (= $x148 true)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x128 (= (_ bv0 32) ?x127)))
 (let ((?x124 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x125 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x124)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x123 $x125)))
 (let (($x129 (and $x126 $x128)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x109 $x129)))
 (let (($x116 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x116)))))))
 (let (($x131 (and $x122 $x130)))
 (let (($x132 (= $x131 true)))
 (let (($x133 (= $x132 true)))
 (let (($x134 (= $x133 true)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x72 (concat ?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x78 (concat ?x77 (concat ?x74 ?x72))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv1 32))) (select input.dst.llvm-mem ?x78))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv2 32))) ?x90))))
 (let (($x97 (= input.spec-%var-l-0.2.1.2.0 ?x96)))
 (let (($x98 (and $x97 true)))
 (let (($x38 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x99 (=> $x38 $x98)))
 (let (($x79 (= (_ bv0 32) ?x78)))
 (let ((?x80 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x84 (bvuge ?x80 (_ bv1 32))))
 (let (($x85 (= $x38 $x84)))
 (let (($x27 (= false false)))
 (let (($x48 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x33 (=> $x48 $x27)))
 (let (($x81 (= ?x80 (_ bv0 32))))
 (let (($x82 (= $x48 $x81)))
 (let (($x83 (and $x82 $x33)))
 (let (($x86 (and $x83 $x85)))
 (let (($x100 (and $x86 $x99)))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x57)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x61)))
 (let (($x66 (= input.spec-%var-l-0.2.0 ?x65)))
 (let (($x101 (and $x66 $x100)))
 (let (($x20 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x102 (=> $x20 $x101)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x47 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x47 (_ bv1 32))))
 (let (($x5 (= $x20 $x31)))
 (let (($x35 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x8 (=> $x35 $x27)))
 (let (($x43 (= ?x47 (_ bv0 32))))
 (let (($x10 (= $x35 $x43)))
 (let (($x28 (and $x10 $x8)))
 (let (($x50 (and $x28 $x5)))
 (let (($x103 (and $x50 $x102)))
 (let (($x104 (= $x103 true)))
 (let (($x105 (= $x104 true)))
 (let (($x106 (= $x105 true)))
 (let (($x135 (and $x106 $x134)))
 (let (($x150 (and $x135 $x149)))
 (let (($x11 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x7 (and $x11 true)))
 (let (($x39 (=> $x38 $x7)))
 (let (($x14 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x37 (= $x38 $x14)))
 (let (($x36 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x15 (= $x48 $x36)))
 (let (($x46 (and $x15 $x33)))
 (let (($x18 (and $x46 $x37)))
 (let (($x34 (and $x18 $x39)))
 (let (($x40 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x6 (and $x40 $x34)))
 (let (($x30 (=> $x20 $x6)))
 (let (($x25 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x32 (= $x20 $x25)))
 (let (($x19 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x12 (= $x35 $x19)))
 (let (($x23 (and $x12 $x8)))
 (let (($x49 (and $x23 $x32)))
 (let (($x41 (and $x49 $x30)))
 (let (($x151 (and $x41 $x150)))
 (let (($x154 (=> $x151 $x153)))
 (not $x154))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000208)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x00000207
                                #x02)
                         #x00000209
                         #x02)
                  #x00000206
                  #x02)))
  (store (store (store a!1 #x00000208 #x02) #x00000208 #x02) #x00000209 #x02)))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000202)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000020b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000208)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x155 (= true false)))
 (let (($x107 (= $x155 true)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x149 (concat ?x148 (concat ?x143 (concat ?x139 ?x142)))))
 (let (($x150 (= ?x149 input.dst.llvm-%l)))
 (let (($x151 (= $x150 true)))
 (let (($x152 (= $x151 true)))
 (let ((?x129 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x129)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x126)))
 (let (($x125 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (and $x125 $x127)))
 (let (($x131 (and $x128 $x130)))
 (let (($x112 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x112 $x131)))
 (let (($x119 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x124 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x119)))))))
 (let (($x133 (and $x124 $x132)))
 (let (($x134 (= $x133 true)))
 (let (($x135 (= $x134 true)))
 (let (($x144 (= $x135 true)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x70 (concat ?x74 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x79 (concat ?x78 (concat ?x69 ?x70))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x88))))
 (let (($x98 (= input.spec-%var-l-0.2.1.2.0 ?x97)))
 (let (($x99 (and $x98 false)))
 (let (($x46 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x100 (=> $x46 $x99)))
 (let (($x80 (= (_ bv0 32) ?x79)))
 (let ((?x81 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x85 (bvuge ?x81 (_ bv1 32))))
 (let (($x86 (= $x46 $x85)))
 (let (($x21 (= false false)))
 (let (($x42 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x42 $x21)))
 (let (($x82 (= ?x81 (_ bv0 32))))
 (let (($x83 (= $x42 $x82)))
 (let (($x84 (and $x83 $x15)))
 (let (($x94 (and $x84 $x86)))
 (let (($x101 (and $x94 $x100)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x59)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x54)))
 (let (($x67 (= input.spec-%var-l-0.2.0 ?x66)))
 (let (($x102 (and $x67 $x101)))
 (let (($x25 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x103 (=> $x25 $x102)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x17 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x28 (bvuge ?x17 (_ bv1 32))))
 (let (($x31 (= $x25 $x28)))
 (let (($x19 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x12 (=> $x19 $x21)))
 (let (($x47 (= ?x17 (_ bv0 32))))
 (let (($x43 (= $x19 $x47)))
 (let (($x10 (and $x43 $x12)))
 (let (($x5 (and $x10 $x31)))
 (let (($x104 (and $x5 $x103)))
 (let (($x105 (= $x104 true)))
 (let (($x106 (= $x105 true)))
 (let (($x110 (= $x106 true)))
 (let (($x145 (and $x110 $x144)))
 (let (($x153 (and $x145 $x152)))
 (let (($x9 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x11 (and $x9 false)))
 (let (($x7 (=> $x46 $x11)))
 (let (($x38 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x14 (= $x46 $x38)))
 (let (($x13 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x36 (= $x42 $x13)))
 (let (($x33 (and $x36 $x15)))
 (let (($x37 (and $x33 $x14)))
 (let (($x39 (and $x37 $x7)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x34 (and $x29 $x39)))
 (let (($x6 (=> $x25 $x34)))
 (let (($x20 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x8 (= $x25 $x20)))
 (let (($x22 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x35 (= $x19 $x22)))
 (let (($x23 (and $x35 $x12)))
 (let (($x16 (and $x23 $x8)))
 (let (($x30 (and $x16 $x6)))
 (let (($x154 (and $x30 $x153)))
 (let (($x136 (=> $x154 $x107)))
 (not $x136))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x155 (= true false)))
 (let (($x107 (= $x155 true)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x149 (concat ?x148 (concat ?x143 (concat ?x139 ?x142)))))
 (let (($x150 (= ?x149 input.dst.llvm-%l)))
 (let (($x151 (= $x150 true)))
 (let (($x152 (= $x151 true)))
 (let ((?x129 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x129)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x126)))
 (let (($x125 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (and $x125 $x127)))
 (let (($x131 (and $x128 $x130)))
 (let (($x112 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x112 $x131)))
 (let (($x119 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x124 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x119)))))))
 (let (($x133 (and $x124 $x132)))
 (let (($x134 (= $x133 true)))
 (let (($x135 (= $x134 true)))
 (let (($x144 (= $x135 true)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x70 (concat ?x74 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x79 (concat ?x78 (concat ?x69 ?x70))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x88))))
 (let (($x98 (= input.spec-%var-l-0.2.1.2.0 ?x97)))
 (let (($x99 (and $x98 false)))
 (let (($x46 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x100 (=> $x46 $x99)))
 (let (($x80 (= (_ bv0 32) ?x79)))
 (let ((?x81 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x85 (bvuge ?x81 (_ bv1 32))))
 (let (($x86 (= $x46 $x85)))
 (let (($x21 (= false false)))
 (let (($x42 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x42 $x21)))
 (let (($x82 (= ?x81 (_ bv0 32))))
 (let (($x83 (= $x42 $x82)))
 (let (($x84 (and $x83 $x15)))
 (let (($x94 (and $x84 $x86)))
 (let (($x101 (and $x94 $x100)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x59)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x54)))
 (let (($x67 (= input.spec-%var-l-0.2.0 ?x66)))
 (let (($x102 (and $x67 $x101)))
 (let (($x25 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x103 (=> $x25 $x102)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x17 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x28 (bvuge ?x17 (_ bv1 32))))
 (let (($x31 (= $x25 $x28)))
 (let (($x19 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x12 (=> $x19 $x21)))
 (let (($x47 (= ?x17 (_ bv0 32))))
 (let (($x43 (= $x19 $x47)))
 (let (($x10 (and $x43 $x12)))
 (let (($x5 (and $x10 $x31)))
 (let (($x104 (and $x5 $x103)))
 (let (($x105 (= $x104 true)))
 (let (($x106 (= $x105 true)))
 (let (($x110 (= $x106 true)))
 (let (($x145 (and $x110 $x144)))
 (let (($x153 (and $x145 $x152)))
 (let (($x9 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x11 (and $x9 false)))
 (let (($x7 (=> $x46 $x11)))
 (let (($x38 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x14 (= $x46 $x38)))
 (let (($x13 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x36 (= $x42 $x13)))
 (let (($x33 (and $x36 $x15)))
 (let (($x37 (and $x33 $x14)))
 (let (($x39 (and $x37 $x7)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x34 (and $x29 $x39)))
 (let (($x6 (=> $x25 $x34)))
 (let (($x20 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x8 (= $x25 $x20)))
 (let (($x22 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x35 (= $x19 $x22)))
 (let (($x23 (and $x35 $x12)))
 (let (($x16 (and $x23 $x8)))
 (let (($x30 (and $x16 $x6)))
 (let (($x154 (and $x30 $x153)))
 (let (($x136 (=> $x154 $x107)))
 (not $x136))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0cb1780c)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x00000007 #xc0))
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0cb1780f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0cb1780c)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var348X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var348X.2.1 () (_ BitVec 32))
(declare-fun ind-%var348X.2.0 () (_ BitVec 32))
(declare-fun ind-%var348X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var345X.2.1 () (_ BitVec 32))
(declare-fun ind-%var345X.2.0 () (_ BitVec 32))
(declare-fun ind-%var345X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var342X () (_ BitVec 32))
(declare-fun ind-%var339X.2.1 () (_ BitVec 32))
(declare-fun ind-%var339X.2.0 () (_ BitVec 32))
(declare-fun ind-%var339X.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var348X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv4 32))))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var348X (_ bv4 32)) (_ bv2 32))) ?x252)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var348X (_ bv4 32)) (_ bv3 32))) ?x255)))
 (let (($x259 (= ind-%var348X.2.1 ?x258)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv1 32))) (select input.dst.llvm-mem ind-%var348X))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv2 32))) ?x239))))
 (let (($x246 (= ind-%var348X.2.0 ?x245)))
 (let (($x52 (= false false)))
 (let (($x232 (= (_ bv0 32) ind-%var348X)))
 (let ((?x233 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (= ind-%var348X.0 ?x233)))
 (let (($x229 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 input.dst.llvm-%l)))
 (let (($x263 (and (and (and (and $x229 $x234) $x52) $x246) $x259)))
 (let (($x223 (= ind-%var345X.2.1 ind-%var345X.2.1)))
 (let (($x221 (= ind-%var345X.2.0 ind-%var345X.2.0)))
 (let (($x219 (= ind-%var345X.0 ind-%var345X.0)))
 (let (($x162 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0)))
 (let (($x227 (and (and (and (and $x162 $x219) $x52) $x221) $x223)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x159 (and $x12 $x61)))
 (let (($x265 (and (and $x159 $x227) $x263)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var342X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv4 32))))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var342X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var342X (_ bv4 32)) (_ bv3 32))) ?x207)))
 (let (($x211 (= ?x210 ?x210)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv1 32))) (select input.dst.llvm-mem ind-%var342X))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv2 32))) ?x192))))
 (let (($x199 (= ?x198 ?x198)))
 (let (($x186 (= (_ bv0 32) ind-%var342X)))
 (let ((?x187 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x188 (= ?x187 ?x187)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x80 (concat ?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x86 (concat ?x85 (concat ?x82 ?x80))))
 (let ((?x173 (bvadd ?x86 (_ bv4 32))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x177))))
 (let (($x184 (= ?x183 input.dst.llvm-%l)))
 (let (($x215 (and (and (and (and $x184 $x188) $x52) $x199) $x211)))
 (let (($x168 (= ind-%var339X.2.1 ind-%var339X.2.1)))
 (let (($x166 (= ind-%var339X.2.0 ind-%var339X.2.0)))
 (let (($x172 (and (and (and (and $x162 (= ind-%var339X.0 ind-%var339X.0)) $x52) $x166) $x168)))
 (let (($x217 (and (and $x159 $x172) $x215)))
 (let (($x266 (or $x217 $x265)))
 (let (($x267 (= $x266 true)))
 (let (($x268 (= $x267 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x150 (concat ?x149 (concat ?x142 (concat ?x143 ?x148)))))
 (let (($x141 (= ?x150 input.dst.llvm-%l)))
 (let (($x62 (= $x141 true)))
 (let (($x156 (= $x62 true)))
 (let (($x151 (= input.dst.llvm-%l ?x150)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x134)))
 (let ((?x131 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x132 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x131)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x130 $x132)))
 (let (($x144 (and $x133 $x135)))
 (let (($x116 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x116 $x144)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x124 $x121)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x154 (and (and (and $x21 $x129) $x145) $x151)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x98))))
 (let (($x105 (= input.spec-%var-l-0.2.1.2.0 ?x104)))
 (let (($x106 (and $x105 true)))
 (let (($x110 (=> $x61 $x106)))
 (let (($x94 (= (_ bv0 32) ?x86)))
 (let ((?x93 (ite $x94 (_ bv0 32) (_ bv1 32))))
 (let (($x91 (bvuge ?x93 (_ bv1 32))))
 (let (($x92 (= $x61 $x91)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x96 (= ?x93 (_ bv0 32))))
 (let (($x89 (= $x6 $x96)))
 (let (($x87 (and $x89 $x50)))
 (let (($x95 (and $x87 $x92)))
 (let (($x114 (and $x95 $x110)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x13)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x43)))
 (let (($x73 (= input.spec-%var-l-0.2.0 ?x69)))
 (let (($x115 (and $x73 $x114)))
 (let (($x123 (=> $x12 $x115)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x113 (and $x60 $x123)))
 (let (($x155 (and $x113 $x154)))
 (let (($x107 (= $x155 true)))
 (let (($x136 (= $x107 true)))
 (let (($x53 (= $x136 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x111 (and $x29 $x53)))
 (let (($x157 (and $x111 $x156)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x158 (and $x68 $x157)))
 (let (($x269 (=> $x158 $x268)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var348X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var348X.2.1 () (_ BitVec 32))
(declare-fun ind-%var348X.2.0 () (_ BitVec 32))
(declare-fun ind-%var348X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var345X.2.1 () (_ BitVec 32))
(declare-fun ind-%var345X.2.0 () (_ BitVec 32))
(declare-fun ind-%var345X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var342X () (_ BitVec 32))
(declare-fun ind-%var339X.2.1 () (_ BitVec 32))
(declare-fun ind-%var339X.2.0 () (_ BitVec 32))
(declare-fun ind-%var339X.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var348X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv4 32))))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var348X (_ bv4 32)) (_ bv2 32))) ?x252)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var348X (_ bv4 32)) (_ bv3 32))) ?x255)))
 (let (($x259 (= ind-%var348X.2.1 ?x258)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv1 32))) (select input.dst.llvm-mem ind-%var348X))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var348X (_ bv2 32))) ?x239))))
 (let (($x246 (= ind-%var348X.2.0 ?x245)))
 (let (($x52 (= false false)))
 (let (($x232 (= (_ bv0 32) ind-%var348X)))
 (let ((?x233 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (= ind-%var348X.0 ?x233)))
 (let (($x229 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 input.dst.llvm-%l)))
 (let (($x263 (and (and (and (and $x229 $x234) $x52) $x246) $x259)))
 (let (($x223 (= ind-%var345X.2.1 ind-%var345X.2.1)))
 (let (($x221 (= ind-%var345X.2.0 ind-%var345X.2.0)))
 (let (($x219 (= ind-%var345X.0 ind-%var345X.0)))
 (let (($x162 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0)))
 (let (($x227 (and (and (and (and $x162 $x219) $x52) $x221) $x223)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x159 (and $x12 $x61)))
 (let (($x265 (and (and $x159 $x227) $x263)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var342X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv4 32))))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var342X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var342X (_ bv4 32)) (_ bv3 32))) ?x207)))
 (let (($x211 (= ?x210 ?x210)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv1 32))) (select input.dst.llvm-mem ind-%var342X))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var342X (_ bv2 32))) ?x192))))
 (let (($x199 (= ?x198 ?x198)))
 (let (($x186 (= (_ bv0 32) ind-%var342X)))
 (let ((?x187 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x188 (= ?x187 ?x187)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x80 (concat ?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x86 (concat ?x85 (concat ?x82 ?x80))))
 (let ((?x173 (bvadd ?x86 (_ bv4 32))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x177))))
 (let (($x184 (= ?x183 input.dst.llvm-%l)))
 (let (($x215 (and (and (and (and $x184 $x188) $x52) $x199) $x211)))
 (let (($x168 (= ind-%var339X.2.1 ind-%var339X.2.1)))
 (let (($x166 (= ind-%var339X.2.0 ind-%var339X.2.0)))
 (let (($x172 (and (and (and (and $x162 (= ind-%var339X.0 ind-%var339X.0)) $x52) $x166) $x168)))
 (let (($x217 (and (and $x159 $x172) $x215)))
 (let (($x266 (or $x217 $x265)))
 (let (($x267 (= $x266 true)))
 (let (($x268 (= $x267 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x150 (concat ?x149 (concat ?x142 (concat ?x143 ?x148)))))
 (let (($x141 (= ?x150 input.dst.llvm-%l)))
 (let (($x62 (= $x141 true)))
 (let (($x156 (= $x62 true)))
 (let (($x151 (= input.dst.llvm-%l ?x150)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x134)))
 (let ((?x131 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x132 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x131)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x130 $x132)))
 (let (($x144 (and $x133 $x135)))
 (let (($x116 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x116 $x144)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x124 $x121)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x154 (and (and (and $x21 $x129) $x145) $x151)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x98))))
 (let (($x105 (= input.spec-%var-l-0.2.1.2.0 ?x104)))
 (let (($x106 (and $x105 true)))
 (let (($x110 (=> $x61 $x106)))
 (let (($x94 (= (_ bv0 32) ?x86)))
 (let ((?x93 (ite $x94 (_ bv0 32) (_ bv1 32))))
 (let (($x91 (bvuge ?x93 (_ bv1 32))))
 (let (($x92 (= $x61 $x91)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x96 (= ?x93 (_ bv0 32))))
 (let (($x89 (= $x6 $x96)))
 (let (($x87 (and $x89 $x50)))
 (let (($x95 (and $x87 $x92)))
 (let (($x114 (and $x95 $x110)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x13)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x43)))
 (let (($x73 (= input.spec-%var-l-0.2.0 ?x69)))
 (let (($x115 (and $x73 $x114)))
 (let (($x123 (=> $x12 $x115)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x113 (and $x60 $x123)))
 (let (($x155 (and $x113 $x154)))
 (let (($x107 (= $x155 true)))
 (let (($x136 (= $x107 true)))
 (let (($x53 (= $x136 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x111 (and $x29 $x53)))
 (let (($x157 (and $x111 $x156)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x158 (and $x68 $x157)))
 (let (($x269 (=> $x158 $x268)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= ind-%var348X #b10000000000000000000000000000000)
(= ind-%var348X.2.1 #b10000000000000000000000000000000)
(= ind-%var348X.2.0 #b10000000000000000000000000000000)
(= ind-%var348X.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var348X () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv7 32) (_ bv255 8)) (_ bv6 32) (_ bv255 8)) (_ bv5 32) (_ bv255 8)) (_ bv8 32) (_ bv255 8)))
(define-fun ind-%var348X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var348X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var348X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var345X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var345X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var345X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var342X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var339X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var339X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var339X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741832 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741832 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741835 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
                     #xf7ff7ff8
                     #xf8)
              #xf7ff7ff9
              #x7f)
       #xf7ff7ffb
       #xf7))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var348X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var348X.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var348X.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var348X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.spec-%var-l-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xf7ff7ffb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun ind-%var345X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var342X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var345X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var345X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var339X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var339X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var339X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x163 (=> $x12 false)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x52 (= false false)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x164 (and $x60 $x163)))
 (let (($x169 (= $x164 true)))
 (let (($x170 (= $x169 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x151 (concat ?x138 (concat ?x140 ?x139)))))
 (let (($x158 (= ?x154 input.dst.llvm-%l)))
 (let (($x159 (= $x158 true)))
 (let (($x160 (= $x159 true)))
 (let (($x155 (= input.dst.llvm-%l ?x154)))
 (let ((?x144 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x144)))
 (let ((?x133 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x133)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (and $x132 $x134)))
 (let (($x153 (and $x135 $x145)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x109 $x153)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x127)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x53 (and (and (and $x21 $x131) $x146) $x155)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x79 (concat ?x72 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x93 (concat ?x94 (concat ?x80 ?x79))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv1 32))) (select input.dst.llvm-mem ?x93))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv2 32))) ?x97))))
 (let (($x110 (= input.spec-%var-l-0.2.1.2.0 ?x106)))
 (let (($x114 (and $x110 true)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x115 (=> $x61 $x114)))
 (let (($x96 (= (_ bv0 32) ?x93)))
 (let ((?x89 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x95 (bvuge ?x89 (_ bv1 32))))
 (let (($x102 (= $x61 $x95)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x87 (= ?x89 (_ bv0 32))))
 (let (($x91 (= $x6 $x87)))
 (let (($x92 (and $x91 $x50)))
 (let (($x103 (and $x92 $x102)))
 (let (($x123 (and $x103 $x115)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x36)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x77 (= input.spec-%var-l-0.2.0 ?x74)))
 (let (($x113 (and $x77 $x123)))
 (let (($x119 (=> $x12 $x113)))
 (let (($x120 (and $x60 $x119)))
 (let (($x111 (and $x120 $x53)))
 (let (($x141 (= $x111 true)))
 (let (($x62 (= $x141 true)))
 (let (($x156 (= $x62 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x157 (and $x29 $x156)))
 (let (($x161 (and $x157 $x160)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x162 (and $x68 $x161)))
 (let (($x165 (=> $x162 $x170)))
 (not $x165)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x163 (=> $x12 false)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x52 (= false false)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x164 (and $x60 $x163)))
 (let (($x169 (= $x164 true)))
 (let (($x170 (= $x169 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x151 (concat ?x138 (concat ?x140 ?x139)))))
 (let (($x158 (= ?x154 input.dst.llvm-%l)))
 (let (($x159 (= $x158 true)))
 (let (($x160 (= $x159 true)))
 (let (($x155 (= input.dst.llvm-%l ?x154)))
 (let ((?x144 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x144)))
 (let ((?x133 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x133)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (and $x132 $x134)))
 (let (($x153 (and $x135 $x145)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x109 $x153)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x127)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x53 (and (and (and $x21 $x131) $x146) $x155)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x79 (concat ?x72 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x93 (concat ?x94 (concat ?x80 ?x79))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv1 32))) (select input.dst.llvm-mem ?x93))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv2 32))) ?x97))))
 (let (($x110 (= input.spec-%var-l-0.2.1.2.0 ?x106)))
 (let (($x114 (and $x110 true)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x115 (=> $x61 $x114)))
 (let (($x96 (= (_ bv0 32) ?x93)))
 (let ((?x89 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x95 (bvuge ?x89 (_ bv1 32))))
 (let (($x102 (= $x61 $x95)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x87 (= ?x89 (_ bv0 32))))
 (let (($x91 (= $x6 $x87)))
 (let (($x92 (and $x91 $x50)))
 (let (($x103 (and $x92 $x102)))
 (let (($x123 (and $x103 $x115)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x36)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x77 (= input.spec-%var-l-0.2.0 ?x74)))
 (let (($x113 (and $x77 $x123)))
 (let (($x119 (=> $x12 $x113)))
 (let (($x120 (and $x60 $x119)))
 (let (($x111 (and $x120 $x53)))
 (let (($x141 (= $x111 true)))
 (let (($x62 (= $x141 true)))
 (let (($x156 (= $x62 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x157 (and $x29 $x156)))
 (let (($x161 (and $x157 $x160)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x162 (and $x68 $x161)))
 (let (($x165 (=> $x162 $x170)))
 (not $x165)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x4ac42de0)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000010)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x4b)
                                #x4ac42de2
                                #xc4)
                         #x4bc42de7
                         #x43)
                  #x4bc42de4
                  #x00)))
  (store (store (store (store a!1 #x4bc42de6 #xc4) #x4ac42de0 #xe0)
                #x4bc42de5
                #x46)
         #x4ac42de1
         #x2d)))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x4b4b4b4b)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x4b4b4b4b)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x4b4b4b4b)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x4b4b4b4b)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x4bc42de0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x4ac42de3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x4ac42de0)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv8 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv2147483648 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var446X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var446X.2.1 () (_ BitVec 32))
(declare-fun ind-%var446X.2.0 () (_ BitVec 32))
(declare-fun ind-%var446X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var443X.2.1 () (_ BitVec 32))
(declare-fun ind-%var443X.2.0 () (_ BitVec 32))
(declare-fun ind-%var443X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var440X () (_ BitVec 32))
(declare-fun ind-%var437X.2.1 () (_ BitVec 32))
(declare-fun ind-%var437X.2.0 () (_ BitVec 32))
(declare-fun ind-%var437X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var446X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv4 32))))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var446X (_ bv4 32)) (_ bv2 32))) ?x254)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var446X (_ bv4 32)) (_ bv3 32))) ?x249)))
 (let (($x259 (= ind-%var446X.2.1 ?x258)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv1 32))) (select input.dst.llvm-mem ind-%var446X))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv2 32))) ?x237))))
 (let (($x262 (= ind-%var446X.2.0 ?x246)))
 (let (($x52 (= false false)))
 (let (($x260 (= (_ bv0 32) ind-%var446X)))
 (let ((?x261 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (= ind-%var446X.0 ?x261)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x72 (concat ?x82 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x89 (concat ?x96 (concat ?x79 ?x72))))
 (let (($x232 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x89)))
 (let (($x267 (and (and (and (and $x232 $x235) $x52) $x262) $x259)))
 (let (($x227 (= ind-%var443X.2.1 ind-%var443X.2.1)))
 (let (($x222 (= ind-%var443X.2.0 ind-%var443X.2.0)))
 (let (($x221 (= ind-%var443X.0 ind-%var443X.0)))
 (let (($x128 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1)))
 (let (($x230 (and (and (and (and $x128 $x221) $x52) $x222) $x227)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x165 (and $x12 $x61)))
 (let (($x269 (and (and $x165 $x230) $x267)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var440X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv4 32))))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var440X (_ bv4 32)) (_ bv2 32))) ?x206)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var440X (_ bv4 32)) (_ bv3 32))) ?x201)))
 (let (($x211 (= ?x210 ?x210)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv1 32))) (select input.dst.llvm-mem ind-%var440X))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv2 32))) ?x190))))
 (let (($x214 (= ?x199 ?x199)))
 (let (($x212 (= (_ bv0 32) ind-%var440X)))
 (let ((?x213 (ite $x212 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (= ?x213 ?x213)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x89 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x89 (_ bv4 32))))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x89 (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x89 (_ bv4 32)) (_ bv3 32))) ?x183)))
 (let (($x187 (= ?x186 ?x89)))
 (let (($x219 (and (and (and (and $x187 $x196) $x52) $x214) $x211)))
 (let (($x172 (= ind-%var437X.2.1 ind-%var437X.2.1)))
 (let (($x167 (= ind-%var437X.2.0 ind-%var437X.2.0)))
 (let (($x182 (and (and (and (and $x128 (= ind-%var437X.0 ind-%var437X.0)) $x52) $x167) $x172)))
 (let (($x225 (and (and $x165 $x182) $x219)))
 (let (($x270 (or $x225 $x269)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x37)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x36)))
 (let (($x85 (= input.spec-%var-l-0.2.0 ?x84)))
 (let (($x15 (and $x85 $x270)))
 (let (($x117 (=> $x12 $x15)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x147 (and $x60 $x117)))
 (let (($x41 (= $x147 true)))
 (let (($x271 (= $x41 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x53 (concat ?x155 (concat ?x143 (concat ?x142 ?x148)))))
 (let (($x162 (= ?x53 input.dst.llvm-%l)))
 (let (($x163 (= $x162 true)))
 (let (($x164 (= $x163 true)))
 (let (($x111 (= input.dst.llvm-%l ?x53)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x146 (= (_ bv0 32) ?x153)))
 (let ((?x135 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x135)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x134 $x144)))
 (let (($x136 (and $x145 $x146)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (and $x125 $x136)))
 (let (($x116 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x133 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x116)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x156 (and (and (and $x21 $x133) $x150) $x111)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x90))))
 (let (($x115 (= input.spec-%var-l-0.2.1.2.0 ?x114)))
 (let (($x123 (and $x115 true)))
 (let (($x113 (=> $x61 $x123)))
 (let (($x87 (= (_ bv0 32) ?x89)))
 (let ((?x91 (ite $x87 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x91 (_ bv1 32))))
 (let (($x104 (= $x61 $x103)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x92 (= ?x91 (_ bv0 32))))
 (let (($x95 (= $x6 $x92)))
 (let (($x102 (and $x95 $x50)))
 (let (($x105 (and $x102 $x104)))
 (let (($x119 (and $x105 $x113)))
 (let (($x120 (and $x85 $x119)))
 (let (($x124 (=> $x12 $x120)))
 (let (($x108 (and $x60 $x124)))
 (let (($x157 (and $x108 $x156)))
 (let (($x158 (= $x157 true)))
 (let (($x159 (= $x158 true)))
 (let (($x160 (= $x159 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x161 (and $x29 $x160)))
 (let (($x169 (and $x161 $x164)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x170 (and $x68 $x169)))
 (let (($x272 (=> $x170 $x271)))
 (not $x272)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var446X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var446X.2.1 () (_ BitVec 32))
(declare-fun ind-%var446X.2.0 () (_ BitVec 32))
(declare-fun ind-%var446X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var443X.2.1 () (_ BitVec 32))
(declare-fun ind-%var443X.2.0 () (_ BitVec 32))
(declare-fun ind-%var443X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var440X () (_ BitVec 32))
(declare-fun ind-%var437X.2.1 () (_ BitVec 32))
(declare-fun ind-%var437X.2.0 () (_ BitVec 32))
(declare-fun ind-%var437X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var446X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv4 32))))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var446X (_ bv4 32)) (_ bv2 32))) ?x254)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var446X (_ bv4 32)) (_ bv3 32))) ?x249)))
 (let (($x259 (= ind-%var446X.2.1 ?x258)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv1 32))) (select input.dst.llvm-mem ind-%var446X))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var446X (_ bv2 32))) ?x237))))
 (let (($x262 (= ind-%var446X.2.0 ?x246)))
 (let (($x52 (= false false)))
 (let (($x260 (= (_ bv0 32) ind-%var446X)))
 (let ((?x261 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (= ind-%var446X.0 ?x261)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x72 (concat ?x82 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x89 (concat ?x96 (concat ?x79 ?x72))))
 (let (($x232 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x89)))
 (let (($x267 (and (and (and (and $x232 $x235) $x52) $x262) $x259)))
 (let (($x227 (= ind-%var443X.2.1 ind-%var443X.2.1)))
 (let (($x222 (= ind-%var443X.2.0 ind-%var443X.2.0)))
 (let (($x221 (= ind-%var443X.0 ind-%var443X.0)))
 (let (($x128 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1)))
 (let (($x230 (and (and (and (and $x128 $x221) $x52) $x222) $x227)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x165 (and $x12 $x61)))
 (let (($x269 (and (and $x165 $x230) $x267)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var440X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv4 32))))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var440X (_ bv4 32)) (_ bv2 32))) ?x206)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var440X (_ bv4 32)) (_ bv3 32))) ?x201)))
 (let (($x211 (= ?x210 ?x210)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv1 32))) (select input.dst.llvm-mem ind-%var440X))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var440X (_ bv2 32))) ?x190))))
 (let (($x214 (= ?x199 ?x199)))
 (let (($x212 (= (_ bv0 32) ind-%var440X)))
 (let ((?x213 (ite $x212 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (= ?x213 ?x213)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x89 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x89 (_ bv4 32))))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x89 (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x89 (_ bv4 32)) (_ bv3 32))) ?x183)))
 (let (($x187 (= ?x186 ?x89)))
 (let (($x219 (and (and (and (and $x187 $x196) $x52) $x214) $x211)))
 (let (($x172 (= ind-%var437X.2.1 ind-%var437X.2.1)))
 (let (($x167 (= ind-%var437X.2.0 ind-%var437X.2.0)))
 (let (($x182 (and (and (and (and $x128 (= ind-%var437X.0 ind-%var437X.0)) $x52) $x167) $x172)))
 (let (($x225 (and (and $x165 $x182) $x219)))
 (let (($x270 (or $x225 $x269)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x37)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x36)))
 (let (($x85 (= input.spec-%var-l-0.2.0 ?x84)))
 (let (($x15 (and $x85 $x270)))
 (let (($x117 (=> $x12 $x15)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x147 (and $x60 $x117)))
 (let (($x41 (= $x147 true)))
 (let (($x271 (= $x41 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x53 (concat ?x155 (concat ?x143 (concat ?x142 ?x148)))))
 (let (($x162 (= ?x53 input.dst.llvm-%l)))
 (let (($x163 (= $x162 true)))
 (let (($x164 (= $x163 true)))
 (let (($x111 (= input.dst.llvm-%l ?x53)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x146 (= (_ bv0 32) ?x153)))
 (let ((?x135 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x135)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x134 $x144)))
 (let (($x136 (and $x145 $x146)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (and $x125 $x136)))
 (let (($x116 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x133 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x116)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x156 (and (and (and $x21 $x133) $x150) $x111)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x90))))
 (let (($x115 (= input.spec-%var-l-0.2.1.2.0 ?x114)))
 (let (($x123 (and $x115 true)))
 (let (($x113 (=> $x61 $x123)))
 (let (($x87 (= (_ bv0 32) ?x89)))
 (let ((?x91 (ite $x87 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x91 (_ bv1 32))))
 (let (($x104 (= $x61 $x103)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x92 (= ?x91 (_ bv0 32))))
 (let (($x95 (= $x6 $x92)))
 (let (($x102 (and $x95 $x50)))
 (let (($x105 (and $x102 $x104)))
 (let (($x119 (and $x105 $x113)))
 (let (($x120 (and $x85 $x119)))
 (let (($x124 (=> $x12 $x120)))
 (let (($x108 (and $x60 $x124)))
 (let (($x157 (and $x108 $x156)))
 (let (($x158 (= $x157 true)))
 (let (($x159 (= $x158 true)))
 (let (($x160 (= $x159 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x161 (and $x29 $x160)))
 (let (($x169 (and $x161 $x164)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x170 (and $x68 $x169)))
 (let (($x272 (=> $x170 $x271)))
 (not $x272)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= ind-%var446X #b11000000000000000000000000000000)
(= ind-%var446X.2.1 #b10000000000000000000000000000000)
(= ind-%var446X.2.0 #b10000000000000000000000000000000)
(= ind-%var446X.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10100000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_59)
(function @fun_59
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_59 #b10100000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var446X () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv7 32) (_ bv255 8)) (_ bv6 32) (_ bv255 8)) (_ bv5 32) (_ bv255 8)) (_ bv8 32) (_ bv248 8)))
(define-fun ind-%var446X.2.1 () (_ BitVec 32) (_ bv117440512 32))
(define-fun ind-%var446X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var446X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv248 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var443X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var443X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var443X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun ind-%var440X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var437X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var437X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var437X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv2147483648 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
                     #x00000006
                     #x7f)
              #xffff7ff8
              #xf8)
       #xffff7ff9
       #x7f))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var446X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var446X.2.1 () (_ BitVec 32)
    #xff7fffff)
  (define-fun ind-%var446X.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var446X.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffff7ffb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffff7ff8)
  (define-fun ind-%var443X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var437X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var440X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var437X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var437X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var443X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var443X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x149 (=> $x61 false)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x82 (concat ?x80 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x91 (concat ?x87 (concat ?x72 ?x82))))
 (let (($x92 (= (_ bv0 32) ?x91)))
 (let ((?x95 (ite $x92 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x95 (_ bv1 32))))
 (let (($x106 (= $x61 $x105)))
 (let (($x52 (= false false)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x102 (= ?x95 (_ bv0 32))))
 (let (($x103 (= $x6 $x102)))
 (let (($x104 (and $x103 $x50)))
 (let (($x110 (and $x104 $x106)))
 (let (($x78 (and $x110 $x149)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x71)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x37)))
 (let (($x94 (= input.spec-%var-l-0.2.0 ?x86)))
 (let (($x216 (and $x94 $x78)))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x173 (=> $x12 $x216)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x171 (and $x60 $x173)))
 (let (($x167 (= $x171 true)))
 (let (($x181 (= $x167 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x156 (concat ?x111 (concat ?x140 (concat ?x138 ?x139)))))
 (let (($x170 (= ?x156 input.dst.llvm-%l)))
 (let (($x165 (= $x170 true)))
 (let (($x166 (= $x165 true)))
 (let (($x157 (= input.dst.llvm-%l ?x156)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x150 (= (_ bv0 32) ?x136)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x144 $x153)))
 (let (($x62 (and $x146 $x150)))
 (let (($x152 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x152 $x62)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x135 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x109)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (and (and (and $x21 $x135) $x154) $x157)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x100))))
 (let (($x113 (= input.spec-%var-l-0.2.1.2.0 ?x123)))
 (let (($x119 (and $x113 true)))
 (let (($x120 (=> $x61 $x119)))
 (let (($x124 (and $x110 $x120)))
 (let (($x108 (and $x94 $x124)))
 (let (($x126 (=> $x12 $x108)))
 (let (($x112 (and $x60 $x126)))
 (let (($x161 (and $x112 $x160)))
 (let (($x162 (= $x161 true)))
 (let (($x163 (= $x162 true)))
 (let (($x164 (= $x163 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x169 (and $x29 $x164)))
 (let (($x75 (and $x169 $x166)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x128 (and $x68 $x75)))
 (let (($x168 (=> $x128 $x181)))
 (not $x168))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x149 (=> $x61 false)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x82 (concat ?x80 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x91 (concat ?x87 (concat ?x72 ?x82))))
 (let (($x92 (= (_ bv0 32) ?x91)))
 (let ((?x95 (ite $x92 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x95 (_ bv1 32))))
 (let (($x106 (= $x61 $x105)))
 (let (($x52 (= false false)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x102 (= ?x95 (_ bv0 32))))
 (let (($x103 (= $x6 $x102)))
 (let (($x104 (and $x103 $x50)))
 (let (($x110 (and $x104 $x106)))
 (let (($x78 (and $x110 $x149)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x71)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x37)))
 (let (($x94 (= input.spec-%var-l-0.2.0 ?x86)))
 (let (($x216 (and $x94 $x78)))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x173 (=> $x12 $x216)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x171 (and $x60 $x173)))
 (let (($x167 (= $x171 true)))
 (let (($x181 (= $x167 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x156 (concat ?x111 (concat ?x140 (concat ?x138 ?x139)))))
 (let (($x170 (= ?x156 input.dst.llvm-%l)))
 (let (($x165 (= $x170 true)))
 (let (($x166 (= $x165 true)))
 (let (($x157 (= input.dst.llvm-%l ?x156)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x150 (= (_ bv0 32) ?x136)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x144 $x153)))
 (let (($x62 (and $x146 $x150)))
 (let (($x152 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x152 $x62)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x135 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x109)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (and (and (and $x21 $x135) $x154) $x157)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x100))))
 (let (($x113 (= input.spec-%var-l-0.2.1.2.0 ?x123)))
 (let (($x119 (and $x113 true)))
 (let (($x120 (=> $x61 $x119)))
 (let (($x124 (and $x110 $x120)))
 (let (($x108 (and $x94 $x124)))
 (let (($x126 (=> $x12 $x108)))
 (let (($x112 (and $x60 $x126)))
 (let (($x161 (and $x112 $x160)))
 (let (($x162 (= $x161 true)))
 (let (($x163 (= $x162 true)))
 (let (($x164 (= $x163 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x169 (and $x29 $x164)))
 (let (($x75 (and $x169 $x166)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x128 (and $x68 $x75)))
 (let (($x168 (=> $x128 $x181)))
 (not $x168))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.2.1.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b11000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0082b46c)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x46d25fdc)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x62ac1929)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #xa15bde29)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x82)
                                #x0082b46d
                                #xb4)
                         #x0082b46d
                         #xb4)
                  #x0082b46f
                  #x00)))
  (store (store (store a!1 #x0082b46c #x68) #x0082b46f #x00) #x0082b46c #x68)))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x82828282)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x82828282)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x82828282)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x82828282)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0082b468)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0082b46f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0082b46c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv65536 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv128 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv128 8)) (_ bv132 32) (_ bv1 8)))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv512 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv128 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv2147483648 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var552X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var552X.2.1 () (_ BitVec 32))
(declare-fun ind-%var552X.2.0 () (_ BitVec 32))
(declare-fun ind-%var552X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var549X.2.1 () (_ BitVec 32))
(declare-fun ind-%var549X.2.0 () (_ BitVec 32))
(declare-fun ind-%var549X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var546X () (_ BitVec 32))
(declare-fun ind-%var543X.2.1 () (_ BitVec 32))
(declare-fun ind-%var543X.2.0 () (_ BitVec 32))
(declare-fun ind-%var543X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var552X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv4 32))))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var552X (_ bv4 32)) (_ bv2 32))) ?x250)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var552X (_ bv4 32)) (_ bv3 32))) ?x253)))
 (let (($x258 (= ind-%var552X.2.1 ?x249)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv1 32))) (select input.dst.llvm-mem ind-%var552X))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv2 32))) ?x236))))
 (let (($x262 (= ind-%var552X.2.0 ?x246)))
 (let (($x52 (= false false)))
 (let (($x235 (= (_ bv0 32) ind-%var552X)))
 (let ((?x263 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (= ind-%var552X.0 ?x263)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x80 (concat ?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x95 (concat ?x92 (concat ?x82 ?x80))))
 (let ((?x185 (bvadd ?x95 (_ bv4 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x176))))
 (let (($x234 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x188)))
 (let (($x270 (and (and (and (and $x234 $x265) $x52) $x262) $x258)))
 (let (($x227 (= ind-%var549X.2.1 ind-%var549X.2.1)))
 (let (($x229 (= ind-%var549X.2.0 ind-%var549X.2.0)))
 (let (($x226 (= ind-%var549X.0 ind-%var549X.0)))
 (let (($x181 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1.2.1)))
 (let (($x232 (and (and (and (and $x181 $x226) $x52) $x229) $x227)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x171 (and $x12 $x61)))
 (let (($x117 (and (and $x171 $x232) $x270)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var546X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv4 32))))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var546X (_ bv4 32)) (_ bv2 32))) ?x202)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var546X (_ bv4 32)) (_ bv3 32))) ?x205)))
 (let (($x210 (= ?x201 ?x201)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv1 32))) (select input.dst.llvm-mem ind-%var546X))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv2 32))) ?x189))))
 (let (($x214 (= ?x199 ?x199)))
 (let (($x196 (= (_ bv0 32) ind-%var546X)))
 (let ((?x215 (ite $x196 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x215 ?x215)))
 (let (($x212 (= ?x188 ?x188)))
 (let (($x220 (and (and (and (and $x212 $x217) $x52) $x214) $x210)))
 (let (($x74 (= ind-%var543X.2.1 ind-%var543X.2.1)))
 (let (($x132 (= ind-%var543X.2.0 ind-%var543X.2.0)))
 (let (($x184 (and (and (and (and $x181 (= ind-%var543X.0 ind-%var543X.0)) $x52) $x132) $x74)))
 (let (($x264 (and (and $x171 $x184) $x220)))
 (let (($x147 (or $x264 $x117)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x95 (_ bv1 32))) (select input.dst.llvm-mem ?x95))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x95 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x95 (_ bv2 32))) ?x98))))
 (let (($x120 (= input.spec-%var-l-0.2.1.2.0 ?x119)))
 (let (($x41 (and $x120 $x147)))
 (let (($x271 (=> $x61 $x41)))
 (let (($x102 (= (_ bv0 32) ?x95)))
 (let ((?x103 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x103 (_ bv1 32))))
 (let (($x114 (= $x61 $x110)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x104 (= ?x103 (_ bv0 32))))
 (let (($x105 (= $x6 $x104)))
 (let (($x106 (and $x105 $x50)))
 (let (($x115 (and $x106 $x114)))
 (let (($x272 (and $x115 $x271)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x73)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x71)))
 (let (($x96 (= input.spec-%var-l-0.2.0 ?x93)))
 (let (($x273 (and $x96 $x272)))
 (let (($x43 (=> $x12 $x273)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x130 (and $x60 $x43)))
 (let (($x151 (= $x130 true)))
 (let (($x69 (= $x151 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x157 (concat ?x142 (concat ?x143 ?x148)))))
 (let (($x128 (= ?x160 input.dst.llvm-%l)))
 (let (($x149 (= $x128 true)))
 (let (($x78 (= $x149 true)))
 (let (($x161 (= input.dst.llvm-%l ?x160)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x62)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x150 (and $x153 $x136)))
 (let (($x159 (and $x150 $x154)))
 (let (($x107 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x53 (and $x107 $x159)))
 (let (($x125 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x145 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x125)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x164 (and (and (and $x21 $x145) $x53) $x161)))
 (let (($x124 (and $x120 true)))
 (let (($x108 (=> $x61 $x124)))
 (let (($x126 (and $x115 $x108)))
 (let (($x112 (and $x96 $x126)))
 (let (($x118 (=> $x12 $x112)))
 (let (($x129 (and $x60 $x118)))
 (let (($x169 (and $x129 $x164)))
 (let (($x170 (= $x169 true)))
 (let (($x165 (= $x170 true)))
 (let (($x166 (= $x165 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x75 (and $x29 $x166)))
 (let (($x216 (and $x75 $x78)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x173 (and $x68 $x216)))
 (let (($x274 (=> $x173 $x69)))
 (not $x274))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var552X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var552X.2.1 () (_ BitVec 32))
(declare-fun ind-%var552X.2.0 () (_ BitVec 32))
(declare-fun ind-%var552X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var549X.2.1 () (_ BitVec 32))
(declare-fun ind-%var549X.2.0 () (_ BitVec 32))
(declare-fun ind-%var549X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var546X () (_ BitVec 32))
(declare-fun ind-%var543X.2.1 () (_ BitVec 32))
(declare-fun ind-%var543X.2.0 () (_ BitVec 32))
(declare-fun ind-%var543X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var552X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv4 32))))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var552X (_ bv4 32)) (_ bv2 32))) ?x250)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var552X (_ bv4 32)) (_ bv3 32))) ?x253)))
 (let (($x258 (= ind-%var552X.2.1 ?x249)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv1 32))) (select input.dst.llvm-mem ind-%var552X))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var552X (_ bv2 32))) ?x236))))
 (let (($x262 (= ind-%var552X.2.0 ?x246)))
 (let (($x52 (= false false)))
 (let (($x235 (= (_ bv0 32) ind-%var552X)))
 (let ((?x263 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (= ind-%var552X.0 ?x263)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x80 (concat ?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x95 (concat ?x92 (concat ?x82 ?x80))))
 (let ((?x185 (bvadd ?x95 (_ bv4 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x176))))
 (let (($x234 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x188)))
 (let (($x270 (and (and (and (and $x234 $x265) $x52) $x262) $x258)))
 (let (($x227 (= ind-%var549X.2.1 ind-%var549X.2.1)))
 (let (($x229 (= ind-%var549X.2.0 ind-%var549X.2.0)))
 (let (($x226 (= ind-%var549X.0 ind-%var549X.0)))
 (let (($x181 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1.2.1)))
 (let (($x232 (and (and (and (and $x181 $x226) $x52) $x229) $x227)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x171 (and $x12 $x61)))
 (let (($x117 (and (and $x171 $x232) $x270)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var546X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv4 32))))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var546X (_ bv4 32)) (_ bv2 32))) ?x202)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var546X (_ bv4 32)) (_ bv3 32))) ?x205)))
 (let (($x210 (= ?x201 ?x201)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv1 32))) (select input.dst.llvm-mem ind-%var546X))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var546X (_ bv2 32))) ?x189))))
 (let (($x214 (= ?x199 ?x199)))
 (let (($x196 (= (_ bv0 32) ind-%var546X)))
 (let ((?x215 (ite $x196 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x215 ?x215)))
 (let (($x212 (= ?x188 ?x188)))
 (let (($x220 (and (and (and (and $x212 $x217) $x52) $x214) $x210)))
 (let (($x74 (= ind-%var543X.2.1 ind-%var543X.2.1)))
 (let (($x132 (= ind-%var543X.2.0 ind-%var543X.2.0)))
 (let (($x184 (and (and (and (and $x181 (= ind-%var543X.0 ind-%var543X.0)) $x52) $x132) $x74)))
 (let (($x264 (and (and $x171 $x184) $x220)))
 (let (($x147 (or $x264 $x117)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x95 (_ bv1 32))) (select input.dst.llvm-mem ?x95))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x95 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x95 (_ bv2 32))) ?x98))))
 (let (($x120 (= input.spec-%var-l-0.2.1.2.0 ?x119)))
 (let (($x41 (and $x120 $x147)))
 (let (($x271 (=> $x61 $x41)))
 (let (($x102 (= (_ bv0 32) ?x95)))
 (let ((?x103 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x103 (_ bv1 32))))
 (let (($x114 (= $x61 $x110)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x104 (= ?x103 (_ bv0 32))))
 (let (($x105 (= $x6 $x104)))
 (let (($x106 (and $x105 $x50)))
 (let (($x115 (and $x106 $x114)))
 (let (($x272 (and $x115 $x271)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x73)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x71)))
 (let (($x96 (= input.spec-%var-l-0.2.0 ?x93)))
 (let (($x273 (and $x96 $x272)))
 (let (($x43 (=> $x12 $x273)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x130 (and $x60 $x43)))
 (let (($x151 (= $x130 true)))
 (let (($x69 (= $x151 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x157 (concat ?x142 (concat ?x143 ?x148)))))
 (let (($x128 (= ?x160 input.dst.llvm-%l)))
 (let (($x149 (= $x128 true)))
 (let (($x78 (= $x149 true)))
 (let (($x161 (= input.dst.llvm-%l ?x160)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x62)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x150 (and $x153 $x136)))
 (let (($x159 (and $x150 $x154)))
 (let (($x107 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x53 (and $x107 $x159)))
 (let (($x125 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x145 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x125)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x164 (and (and (and $x21 $x145) $x53) $x161)))
 (let (($x124 (and $x120 true)))
 (let (($x108 (=> $x61 $x124)))
 (let (($x126 (and $x115 $x108)))
 (let (($x112 (and $x96 $x126)))
 (let (($x118 (=> $x12 $x112)))
 (let (($x129 (and $x60 $x118)))
 (let (($x169 (and $x129 $x164)))
 (let (($x170 (= $x169 true)))
 (let (($x165 (= $x170 true)))
 (let (($x166 (= $x165 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x75 (and $x29 $x166)))
 (let (($x216 (and $x75 $x78)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x173 (and $x68 $x216)))
 (let (($x274 (=> $x173 $x69)))
 (not $x274))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var626X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var626X.2.1 () (_ BitVec 32))
(declare-fun ind-%var626X.2.0 () (_ BitVec 32))
(declare-fun ind-%var626X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var623X.2.1 () (_ BitVec 32))
(declare-fun ind-%var623X.2.0 () (_ BitVec 32))
(declare-fun ind-%var623X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var620X () (_ BitVec 32))
(declare-fun ind-%var617X.2.1 () (_ BitVec 32))
(declare-fun ind-%var617X.2.0 () (_ BitVec 32))
(declare-fun ind-%var617X.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var626X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv4 32))))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var626X (_ bv4 32)) (_ bv2 32))) ?x252)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var626X (_ bv4 32)) (_ bv3 32))) ?x250)))
 (let (($x270 (= ind-%var626X.2.1 ?x258)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv1 32))) (select input.dst.llvm-mem ind-%var626X))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv2 32))) ?x238))))
 (let (($x266 (= ind-%var626X.2.0 ?x269)))
 (let (($x52 (= false false)))
 (let (($x267 (= (_ bv0 32) ind-%var626X)))
 (let ((?x243 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (= ind-%var626X.0 ?x243)))
 (let (($x263 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 input.dst.llvm-%l)))
 (let (($x271 (and (and (and (and $x263 $x237) $x52) $x266) $x270)))
 (let (($x15 (= ind-%var623X.2.1 ind-%var623X.2.1)))
 (let (($x227 (= ind-%var623X.2.0 ind-%var623X.2.0)))
 (let (($x231 (= ind-%var623X.0 ind-%var623X.0)))
 (let (($x13 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0)))
 (let (($x261 (and (and (and (and $x13 $x231) $x52) $x227) $x15)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x172 (and $x12 $x61)))
 (let (($x273 (and (and $x172 $x261) $x271)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var620X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv4 32))))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var620X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var620X (_ bv4 32)) (_ bv3 32))) ?x202)))
 (let (($x220 (= ?x210 ?x210)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv1 32))) (select input.dst.llvm-mem ind-%var620X))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv2 32))) ?x191))))
 (let (($x218 (= ?x225 ?x225)))
 (let (($x219 (= (_ bv0 32) ind-%var620X)))
 (let ((?x190 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (= ?x190 ?x190)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x79 (concat ?x72 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x103 (concat ?x102 (concat ?x80 ?x79))))
 (let ((?x174 (bvadd ?x103 (_ bv4 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv1 32))) (select input.dst.llvm-mem ?x174))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv2 32))) ?x176))))
 (let (($x217 (= ?x215 input.dst.llvm-%l)))
 (let (($x230 (and (and (and (and $x217 $x192) $x52) $x218) $x220)))
 (let (($x221 (= ind-%var617X.2.1 ind-%var617X.2.1)))
 (let (($x74 (= ind-%var617X.2.0 ind-%var617X.2.0)))
 (let (($x179 (and (and (and (and $x13 (= ind-%var617X.0 ind-%var617X.0)) $x52) $x74) $x221)))
 (let (($x222 (and (and $x172 $x179) $x230)))
 (let (($x43 (or $x222 $x273)))
 (let (($x130 (= $x43 true)))
 (let (($x151 (= $x130 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x164 (concat ?x161 (concat ?x138 (concat ?x140 ?x139)))))
 (let (($x173 (= ?x164 input.dst.llvm-%l)))
 (let (($x171 (= $x173 true)))
 (let (($x167 (= $x171 true)))
 (let (($x169 (= input.dst.llvm-%l ?x164)))
 (let ((?x159 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x53 (= (_ bv0 32) ?x159)))
 (let ((?x150 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x62 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x150)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (and $x136 $x62)))
 (let (($x163 (and $x154 $x53)))
 (let (($x141 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (and $x141 $x163)))
 (let (($x152 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x127 $x152)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x166 (and (and (and $x21 $x146) $x156) $x169)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x97))))
 (let (($x108 (= input.spec-%var-l-0.2.1.2.0 ?x124)))
 (let (($x126 (and $x108 true)))
 (let (($x112 (=> $x61 $x126)))
 (let (($x104 (= (_ bv0 32) ?x103)))
 (let ((?x105 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x105 (_ bv1 32))))
 (let (($x123 (= $x61 $x115)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x106 (= ?x105 (_ bv0 32))))
 (let (($x110 (= $x6 $x106)))
 (let (($x114 (and $x110 $x50)))
 (let (($x113 (and $x114 $x123)))
 (let (($x118 (and $x113 $x112)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x73)))
 (let (($x87 (= input.spec-%var-l-0.2.0 ?x89)))
 (let (($x129 (and $x87 $x118)))
 (let (($x122 (=> $x12 $x129)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x131 (and $x60 $x122)))
 (let (($x75 (and $x131 $x166)))
 (let (($x128 (= $x75 true)))
 (let (($x149 (= $x128 true)))
 (let (($x78 (= $x149 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x216 (and $x29 $x78)))
 (let (($x181 (and $x216 $x167)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x168 (and $x68 $x181)))
 (let (($x69 (=> $x168 $x151)))
 (not $x69))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var626X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var626X.2.1 () (_ BitVec 32))
(declare-fun ind-%var626X.2.0 () (_ BitVec 32))
(declare-fun ind-%var626X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var623X.2.1 () (_ BitVec 32))
(declare-fun ind-%var623X.2.0 () (_ BitVec 32))
(declare-fun ind-%var623X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var620X () (_ BitVec 32))
(declare-fun ind-%var617X.2.1 () (_ BitVec 32))
(declare-fun ind-%var617X.2.0 () (_ BitVec 32))
(declare-fun ind-%var617X.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var626X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv4 32))))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var626X (_ bv4 32)) (_ bv2 32))) ?x252)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var626X (_ bv4 32)) (_ bv3 32))) ?x250)))
 (let (($x270 (= ind-%var626X.2.1 ?x258)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv1 32))) (select input.dst.llvm-mem ind-%var626X))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var626X (_ bv2 32))) ?x238))))
 (let (($x266 (= ind-%var626X.2.0 ?x269)))
 (let (($x52 (= false false)))
 (let (($x267 (= (_ bv0 32) ind-%var626X)))
 (let ((?x243 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (= ind-%var626X.0 ?x243)))
 (let (($x263 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 input.dst.llvm-%l)))
 (let (($x271 (and (and (and (and $x263 $x237) $x52) $x266) $x270)))
 (let (($x15 (= ind-%var623X.2.1 ind-%var623X.2.1)))
 (let (($x227 (= ind-%var623X.2.0 ind-%var623X.2.0)))
 (let (($x231 (= ind-%var623X.0 ind-%var623X.0)))
 (let (($x13 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0)))
 (let (($x261 (and (and (and (and $x13 $x231) $x52) $x227) $x15)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x172 (and $x12 $x61)))
 (let (($x273 (and (and $x172 $x261) $x271)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var620X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv4 32))))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var620X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var620X (_ bv4 32)) (_ bv3 32))) ?x202)))
 (let (($x220 (= ?x210 ?x210)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv1 32))) (select input.dst.llvm-mem ind-%var620X))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var620X (_ bv2 32))) ?x191))))
 (let (($x218 (= ?x225 ?x225)))
 (let (($x219 (= (_ bv0 32) ind-%var620X)))
 (let ((?x190 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (= ?x190 ?x190)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x79 (concat ?x72 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x103 (concat ?x102 (concat ?x80 ?x79))))
 (let ((?x174 (bvadd ?x103 (_ bv4 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv1 32))) (select input.dst.llvm-mem ?x174))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv2 32))) ?x176))))
 (let (($x217 (= ?x215 input.dst.llvm-%l)))
 (let (($x230 (and (and (and (and $x217 $x192) $x52) $x218) $x220)))
 (let (($x221 (= ind-%var617X.2.1 ind-%var617X.2.1)))
 (let (($x74 (= ind-%var617X.2.0 ind-%var617X.2.0)))
 (let (($x179 (and (and (and (and $x13 (= ind-%var617X.0 ind-%var617X.0)) $x52) $x74) $x221)))
 (let (($x222 (and (and $x172 $x179) $x230)))
 (let (($x43 (or $x222 $x273)))
 (let (($x130 (= $x43 true)))
 (let (($x151 (= $x130 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x164 (concat ?x161 (concat ?x138 (concat ?x140 ?x139)))))
 (let (($x173 (= ?x164 input.dst.llvm-%l)))
 (let (($x171 (= $x173 true)))
 (let (($x167 (= $x171 true)))
 (let (($x169 (= input.dst.llvm-%l ?x164)))
 (let ((?x159 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x53 (= (_ bv0 32) ?x159)))
 (let ((?x150 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x62 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x150)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (and $x136 $x62)))
 (let (($x163 (and $x154 $x53)))
 (let (($x141 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (and $x141 $x163)))
 (let (($x152 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x127 $x152)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x166 (and (and (and $x21 $x146) $x156) $x169)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x97))))
 (let (($x108 (= input.spec-%var-l-0.2.1.2.0 ?x124)))
 (let (($x126 (and $x108 true)))
 (let (($x112 (=> $x61 $x126)))
 (let (($x104 (= (_ bv0 32) ?x103)))
 (let ((?x105 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x105 (_ bv1 32))))
 (let (($x123 (= $x61 $x115)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x106 (= ?x105 (_ bv0 32))))
 (let (($x110 (= $x6 $x106)))
 (let (($x114 (and $x110 $x50)))
 (let (($x113 (and $x114 $x123)))
 (let (($x118 (and $x113 $x112)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x73)))
 (let (($x87 (= input.spec-%var-l-0.2.0 ?x89)))
 (let (($x129 (and $x87 $x118)))
 (let (($x122 (=> $x12 $x129)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x131 (and $x60 $x122)))
 (let (($x75 (and $x131 $x166)))
 (let (($x128 (= $x75 true)))
 (let (($x149 (= $x128 true)))
 (let (($x78 (= $x149 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x216 (and $x29 $x78)))
 (let (($x181 (and $x216 $x167)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x168 (and $x68 $x181)))
 (let (($x69 (=> $x168 $x151)))
 (not $x69))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= ind-%var626X #b10000000000000000000000000000000)
(= ind-%var626X.2.1 #b10000000000000000000000000000000)
(= ind-%var626X.2.0 #b10000000000000000000000000000000)
(= ind-%var626X.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var626X () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv7 32) (_ bv255 8)) (_ bv6 32) (_ bv255 8)) (_ bv5 32) (_ bv255 8)) (_ bv8 32) (_ bv255 8)))
(define-fun ind-%var626X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var626X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var626X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var623X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var623X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var623X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var620X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var617X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var617X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var617X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741832 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741832 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741835 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
                     #xf7ff7ff8
                     #xf8)
              #xf7ff7ff9
              #x7f)
       #xf7ff7ffb
       #xf7))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var626X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var626X.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var626X.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var626X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.spec-%var-l-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xf7ff7ffb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xf7ff7ff8)
  (define-fun ind-%var617X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var623X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var623X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var617X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var623X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var620X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var617X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var688X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var688X.2.1 () (_ BitVec 32))
(declare-fun ind-%var688X.2.0 () (_ BitVec 32))
(declare-fun ind-%var688X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var685X.2.1 () (_ BitVec 32))
(declare-fun ind-%var685X.2.0 () (_ BitVec 32))
(declare-fun ind-%var685X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var682X () (_ BitVec 32))
(declare-fun ind-%var679X.2.1 () (_ BitVec 32))
(declare-fun ind-%var679X.2.0 () (_ BitVec 32))
(declare-fun ind-%var679X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var688X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv4 32))))))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var688X (_ bv4 32)) (_ bv2 32))) ?x248)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var688X (_ bv4 32)) (_ bv3 32))) ?x254)))
 (let (($x270 (= ind-%var688X.2.1 ?x258)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv1 32))) (select input.dst.llvm-mem ind-%var688X))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv2 32))) ?x241))))
 (let (($x41 (= ind-%var688X.2.0 ?x266)))
 (let (($x52 (= false false)))
 (let (($x117 (= (_ bv0 32) ind-%var688X)))
 (let ((?x147 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (= ind-%var688X.0 ?x147)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x72 (concat ?x82 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x105 (concat ?x104 (concat ?x79 ?x72))))
 (let (($x267 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x105)))
 (let (($x130 (and (and (and (and $x267 $x239) $x52) $x41) $x270)))
 (let (($x261 (= ind-%var685X.2.1 ind-%var685X.2.1)))
 (let (($x232 (= ind-%var685X.2.0 ind-%var685X.2.0)))
 (let (($x227 (= ind-%var685X.0 ind-%var685X.0)))
 (let (($x186 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1)))
 (let (($x265 (and (and (and (and $x186 $x227) $x52) $x232) $x261)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x132 (and $x12 $x61)))
 (let (($x69 (and (and $x132 $x265) $x130)))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var682X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv4 32))))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var682X (_ bv4 32)) (_ bv2 32))) ?x200)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var682X (_ bv4 32)) (_ bv3 32))) ?x206)))
 (let (($x220 (= ?x210 ?x210)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv1 32))) (select input.dst.llvm-mem ind-%var682X))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv2 32))) ?x194))))
 (let (($x226 (= ?x218 ?x218)))
 (let (($x264 (= (_ bv0 32) ind-%var682X)))
 (let ((?x228 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x199 (= ?x228 ?x228)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x105 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x105 (_ bv4 32))))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x105 (_ bv4 32)) (_ bv2 32))) ?x180)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x105 (_ bv4 32)) (_ bv3 32))) ?x215)))
 (let (($x190 (= ?x219 ?x105)))
 (let (($x231 (and (and (and (and $x190 $x199) $x52) $x226) $x220)))
 (let (($x179 (= ind-%var679X.2.1 ind-%var679X.2.1)))
 (let (($x184 (= ind-%var679X.2.0 ind-%var679X.2.0)))
 (let (($x196 (and (and (and (and $x186 (= ind-%var679X.0 ind-%var679X.0)) $x52) $x184) $x179)))
 (let (($x234 (and (and $x132 $x196) $x231)))
 (let (($x274 (or $x234 $x69)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x85)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x77)))
 (let (($x92 (= input.spec-%var-l-0.2.0 ?x91)))
 (let (($x37 (and $x92 $x274)))
 (let (($x144 (=> $x12 $x37)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x157 (and $x60 $x144)))
 (let (($x86 (= $x157 true)))
 (let (($x275 (= $x86 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x169 (concat ?x143 (concat ?x142 ?x148)))))
 (let (($x168 (= ?x166 input.dst.llvm-%l)))
 (let (($x172 (= $x168 true)))
 (let (($x182 (= $x172 true)))
 (let (($x75 (= input.dst.llvm-%l ?x166)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x156 (= (_ bv0 32) ?x163)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x159 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x62 $x159)))
 (let (($x165 (and $x53 $x156)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x158 $x165)))
 (let (($x107 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x107)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x78 (and (and (and $x21 $x150) $x160) $x75)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x90))))
 (let (($x112 (= input.spec-%var-l-0.2.1.2.0 ?x126)))
 (let (($x118 (and $x112 true)))
 (let (($x129 (=> $x61 $x118)))
 (let (($x106 (= (_ bv0 32) ?x105)))
 (let ((?x110 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x113 (bvuge ?x110 (_ bv1 32))))
 (let (($x119 (= $x61 $x113)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x114 (= ?x110 (_ bv0 32))))
 (let (($x115 (= $x6 $x114)))
 (let (($x123 (and $x115 $x50)))
 (let (($x120 (and $x123 $x119)))
 (let (($x122 (and $x120 $x129)))
 (let (($x131 (and $x92 $x122)))
 (let (($x121 (=> $x12 $x131)))
 (let (($x133 (and $x60 $x121)))
 (let (($x216 (and $x133 $x78)))
 (let (($x173 (= $x216 true)))
 (let (($x171 (= $x173 true)))
 (let (($x167 (= $x171 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x181 (and $x29 $x167)))
 (let (($x224 (and $x181 $x182)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x13 (and $x68 $x224)))
 (let (($x36 (=> $x13 $x275)))
 (not $x36)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var688X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var688X.2.1 () (_ BitVec 32))
(declare-fun ind-%var688X.2.0 () (_ BitVec 32))
(declare-fun ind-%var688X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var685X.2.1 () (_ BitVec 32))
(declare-fun ind-%var685X.2.0 () (_ BitVec 32))
(declare-fun ind-%var685X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var682X () (_ BitVec 32))
(declare-fun ind-%var679X.2.1 () (_ BitVec 32))
(declare-fun ind-%var679X.2.0 () (_ BitVec 32))
(declare-fun ind-%var679X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var688X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv4 32))))))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var688X (_ bv4 32)) (_ bv2 32))) ?x248)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var688X (_ bv4 32)) (_ bv3 32))) ?x254)))
 (let (($x270 (= ind-%var688X.2.1 ?x258)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv1 32))) (select input.dst.llvm-mem ind-%var688X))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var688X (_ bv2 32))) ?x241))))
 (let (($x41 (= ind-%var688X.2.0 ?x266)))
 (let (($x52 (= false false)))
 (let (($x117 (= (_ bv0 32) ind-%var688X)))
 (let ((?x147 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (= ind-%var688X.0 ?x147)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x72 (concat ?x82 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x105 (concat ?x104 (concat ?x79 ?x72))))
 (let (($x267 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x105)))
 (let (($x130 (and (and (and (and $x267 $x239) $x52) $x41) $x270)))
 (let (($x261 (= ind-%var685X.2.1 ind-%var685X.2.1)))
 (let (($x232 (= ind-%var685X.2.0 ind-%var685X.2.0)))
 (let (($x227 (= ind-%var685X.0 ind-%var685X.0)))
 (let (($x186 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1)))
 (let (($x265 (and (and (and (and $x186 $x227) $x52) $x232) $x261)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x132 (and $x12 $x61)))
 (let (($x69 (and (and $x132 $x265) $x130)))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var682X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv4 32))))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var682X (_ bv4 32)) (_ bv2 32))) ?x200)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var682X (_ bv4 32)) (_ bv3 32))) ?x206)))
 (let (($x220 (= ?x210 ?x210)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv1 32))) (select input.dst.llvm-mem ind-%var682X))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var682X (_ bv2 32))) ?x194))))
 (let (($x226 (= ?x218 ?x218)))
 (let (($x264 (= (_ bv0 32) ind-%var682X)))
 (let ((?x228 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x199 (= ?x228 ?x228)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x105 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x105 (_ bv4 32))))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x105 (_ bv4 32)) (_ bv2 32))) ?x180)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x105 (_ bv4 32)) (_ bv3 32))) ?x215)))
 (let (($x190 (= ?x219 ?x105)))
 (let (($x231 (and (and (and (and $x190 $x199) $x52) $x226) $x220)))
 (let (($x179 (= ind-%var679X.2.1 ind-%var679X.2.1)))
 (let (($x184 (= ind-%var679X.2.0 ind-%var679X.2.0)))
 (let (($x196 (and (and (and (and $x186 (= ind-%var679X.0 ind-%var679X.0)) $x52) $x184) $x179)))
 (let (($x234 (and (and $x132 $x196) $x231)))
 (let (($x274 (or $x234 $x69)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x85)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x77)))
 (let (($x92 (= input.spec-%var-l-0.2.0 ?x91)))
 (let (($x37 (and $x92 $x274)))
 (let (($x144 (=> $x12 $x37)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x157 (and $x60 $x144)))
 (let (($x86 (= $x157 true)))
 (let (($x275 (= $x86 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x169 (concat ?x143 (concat ?x142 ?x148)))))
 (let (($x168 (= ?x166 input.dst.llvm-%l)))
 (let (($x172 (= $x168 true)))
 (let (($x182 (= $x172 true)))
 (let (($x75 (= input.dst.llvm-%l ?x166)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x156 (= (_ bv0 32) ?x163)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x159 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x62 $x159)))
 (let (($x165 (and $x53 $x156)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x158 $x165)))
 (let (($x107 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x107)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x78 (and (and (and $x21 $x150) $x160) $x75)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x90))))
 (let (($x112 (= input.spec-%var-l-0.2.1.2.0 ?x126)))
 (let (($x118 (and $x112 true)))
 (let (($x129 (=> $x61 $x118)))
 (let (($x106 (= (_ bv0 32) ?x105)))
 (let ((?x110 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x113 (bvuge ?x110 (_ bv1 32))))
 (let (($x119 (= $x61 $x113)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x114 (= ?x110 (_ bv0 32))))
 (let (($x115 (= $x6 $x114)))
 (let (($x123 (and $x115 $x50)))
 (let (($x120 (and $x123 $x119)))
 (let (($x122 (and $x120 $x129)))
 (let (($x131 (and $x92 $x122)))
 (let (($x121 (=> $x12 $x131)))
 (let (($x133 (and $x60 $x121)))
 (let (($x216 (and $x133 $x78)))
 (let (($x173 (= $x216 true)))
 (let (($x171 (= $x173 true)))
 (let (($x167 (= $x171 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x181 (and $x29 $x167)))
 (let (($x224 (and $x181 $x182)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x13 (and $x68 $x224)))
 (let (($x36 (=> $x13 $x275)))
 (not $x36)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= ind-%var688X #b11000000000000000000000000000000)
(= ind-%var688X.2.1 #b10000000000000000000000000000000)
(= ind-%var688X.2.0 #b10000000000000000000000000000000)
(= ind-%var688X.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10100000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_59)
(function @fun_59
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_59 #b10100000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var688X () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv7 32) (_ bv255 8)) (_ bv6 32) (_ bv255 8)) (_ bv5 32) (_ bv255 8)) (_ bv8 32) (_ bv248 8)))
(define-fun ind-%var688X.2.1 () (_ BitVec 32) (_ bv117440512 32))
(define-fun ind-%var688X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var688X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv248 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var685X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var685X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var685X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun ind-%var682X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var679X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var679X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var679X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv2147483648 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
                     #x00000006
                     #x7f)
              #xffff7ff8
              #xf8)
       #xffff7ff9
       #x7f))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var688X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var688X.2.1 () (_ BitVec 32)
    #xff7fffff)
  (define-fun ind-%var688X.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var688X.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffff7ffb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffff7ff8)
  (define-fun ind-%var679X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var679X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var685X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var682X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var685X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var685X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var679X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var758X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var758X.2.1 () (_ BitVec 32))
(declare-fun ind-%var758X.2.0 () (_ BitVec 32))
(declare-fun ind-%var758X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var755X.2.1 () (_ BitVec 32))
(declare-fun ind-%var755X.2.0 () (_ BitVec 32))
(declare-fun ind-%var755X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var752X () (_ BitVec 32))
(declare-fun ind-%var749X.2.1 () (_ BitVec 32))
(declare-fun ind-%var749X.2.0 () (_ BitVec 32))
(declare-fun ind-%var749X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var758X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv4 32))))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var758X (_ bv4 32)) (_ bv2 32))) ?x251)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var758X (_ bv4 32)) (_ bv3 32))) ?x255)))
 (let (($x258 (= ind-%var758X.2.1 ?x254)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv1 32))) (select input.dst.llvm-mem ind-%var758X))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv2 32))) ?x240))))
 (let (($x41 (= ind-%var758X.2.0 ?x266)))
 (let (($x52 (= false false)))
 (let (($x239 (= (_ bv0 32) ind-%var758X)))
 (let ((?x271 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (= ind-%var758X.0 ?x271)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x82 (concat ?x80 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x110 (concat ?x106 (concat ?x72 ?x82))))
 (let ((?x211 (bvadd ?x110 (_ bv4 32))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x177))))
 (let (($x237 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x192)))
 (let (($x274 (and (and (and (and $x237 $x273) $x52) $x41) $x258)))
 (let (($x261 (= ind-%var755X.2.1 ind-%var755X.2.1)))
 (let (($x263 (= ind-%var755X.2.0 ind-%var755X.2.0)))
 (let (($x260 (= ind-%var755X.0 ind-%var755X.0)))
 (let (($x268 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1.2.1)))
 (let (($x267 (and (and (and (and $x268 $x260) $x52) $x263) $x261)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x155 (and $x12 $x61)))
 (let (($x144 (and (and $x155 $x267) $x274)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var752X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv4 32))))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var752X (_ bv4 32)) (_ bv2 32))) ?x203)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var752X (_ bv4 32)) (_ bv3 32))) ?x207)))
 (let (($x210 (= ?x206 ?x206)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv1 32))) (select input.dst.llvm-mem ind-%var752X))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv2 32))) ?x193))))
 (let (($x226 (= ?x218 ?x218)))
 (let (($x199 (= (_ bv0 32) ind-%var752X)))
 (let ((?x230 (ite $x199 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (= ?x230 ?x230)))
 (let (($x264 (= ?x192 ?x192)))
 (let (($x223 (and (and (and (and $x264 $x222) $x52) $x226) $x210)))
 (let (($x179 (= ind-%var749X.2.1 ind-%var749X.2.1)))
 (let (($x213 (= ind-%var749X.2.0 ind-%var749X.2.0)))
 (let (($x217 (and (and (and (and $x268 (= ind-%var749X.0 ind-%var749X.0)) $x52) $x213) $x179)))
 (let (($x272 (and (and $x155 $x217) $x223)))
 (let (($x157 (or $x272 $x144)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x100))))
 (let (($x129 (= input.spec-%var-l-0.2.1.2.0 ?x118)))
 (let (($x86 (and $x129 $x157)))
 (let (($x275 (=> $x61 $x86)))
 (let (($x114 (= (_ bv0 32) ?x110)))
 (let ((?x115 (ite $x114 (_ bv0 32) (_ bv1 32))))
 (let (($x120 (bvuge ?x115 (_ bv1 32))))
 (let (($x124 (= $x61 $x120)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x123 (= ?x115 (_ bv0 32))))
 (let (($x113 (= $x6 $x123)))
 (let (($x119 (and $x113 $x50)))
 (let (($x108 (and $x119 $x124)))
 (let (($x36 (and $x108 $x275)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x94)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x85)))
 (let (($x102 (= input.spec-%var-l-0.2.0 ?x95)))
 (let (($x134 (and $x102 $x36)))
 (let (($x71 (=> $x12 $x134)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x153 (and $x60 $x71)))
 (let (($x161 (= $x153 true)))
 (let (($x93 (= $x161 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x78 (concat ?x75 (concat ?x140 (concat ?x138 ?x139)))))
 (let (($x13 (= ?x78 input.dst.llvm-%l)))
 (let (($x132 (= $x13 true)))
 (let (($x178 (= $x132 true)))
 (let (($x216 (= input.dst.llvm-%l ?x78)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x160 (= (_ bv0 32) ?x165)))
 (let ((?x53 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x53)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (and $x159 $x163)))
 (let (($x149 (and $x156 $x160)))
 (let (($x162 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x164 (and $x162 $x149)))
 (let (($x141 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x154 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x141)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x167 (and (and (and $x21 $x154) $x164) $x216)))
 (let (($x122 (and $x129 true)))
 (let (($x131 (=> $x61 $x122)))
 (let (($x121 (and $x108 $x131)))
 (let (($x133 (and $x102 $x121)))
 (let (($x127 (=> $x12 $x133)))
 (let (($x135 (and $x60 $x127)))
 (let (($x181 (and $x135 $x167)))
 (let (($x168 (= $x181 true)))
 (let (($x172 (= $x168 true)))
 (let (($x182 (= $x172 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x224 (and $x29 $x182)))
 (let (($x185 (and $x224 $x178)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x186 (and $x68 $x185)))
 (let (($x111 (=> $x186 $x93)))
 (not $x111))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var758X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun ind-%var758X.2.1 () (_ BitVec 32))
(declare-fun ind-%var758X.2.0 () (_ BitVec 32))
(declare-fun ind-%var758X.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun ind-%var755X.2.1 () (_ BitVec 32))
(declare-fun ind-%var755X.2.0 () (_ BitVec 32))
(declare-fun ind-%var755X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun ind-%var752X () (_ BitVec 32))
(declare-fun ind-%var749X.2.1 () (_ BitVec 32))
(declare-fun ind-%var749X.2.0 () (_ BitVec 32))
(declare-fun ind-%var749X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var758X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv4 32))))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var758X (_ bv4 32)) (_ bv2 32))) ?x251)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var758X (_ bv4 32)) (_ bv3 32))) ?x255)))
 (let (($x258 (= ind-%var758X.2.1 ?x254)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv1 32))) (select input.dst.llvm-mem ind-%var758X))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var758X (_ bv2 32))) ?x240))))
 (let (($x41 (= ind-%var758X.2.0 ?x266)))
 (let (($x52 (= false false)))
 (let (($x239 (= (_ bv0 32) ind-%var758X)))
 (let ((?x271 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (= ind-%var758X.0 ?x271)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x82 (concat ?x80 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x110 (concat ?x106 (concat ?x72 ?x82))))
 (let ((?x211 (bvadd ?x110 (_ bv4 32))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x177))))
 (let (($x237 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 ?x192)))
 (let (($x274 (and (and (and (and $x237 $x273) $x52) $x41) $x258)))
 (let (($x261 (= ind-%var755X.2.1 ind-%var755X.2.1)))
 (let (($x263 (= ind-%var755X.2.0 ind-%var755X.2.0)))
 (let (($x260 (= ind-%var755X.0 ind-%var755X.0)))
 (let (($x268 (= input.spec-%var-l-0.2.1.2.1 input.spec-%var-l-0.2.1.2.1)))
 (let (($x267 (and (and (and (and $x268 $x260) $x52) $x263) $x261)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x155 (and $x12 $x61)))
 (let (($x144 (and (and $x155 $x267) $x274)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var752X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv4 32))))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var752X (_ bv4 32)) (_ bv2 32))) ?x203)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var752X (_ bv4 32)) (_ bv3 32))) ?x207)))
 (let (($x210 (= ?x206 ?x206)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv1 32))) (select input.dst.llvm-mem ind-%var752X))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var752X (_ bv2 32))) ?x193))))
 (let (($x226 (= ?x218 ?x218)))
 (let (($x199 (= (_ bv0 32) ind-%var752X)))
 (let ((?x230 (ite $x199 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (= ?x230 ?x230)))
 (let (($x264 (= ?x192 ?x192)))
 (let (($x223 (and (and (and (and $x264 $x222) $x52) $x226) $x210)))
 (let (($x179 (= ind-%var749X.2.1 ind-%var749X.2.1)))
 (let (($x213 (= ind-%var749X.2.0 ind-%var749X.2.0)))
 (let (($x217 (and (and (and (and $x268 (= ind-%var749X.0 ind-%var749X.0)) $x52) $x213) $x179)))
 (let (($x272 (and (and $x155 $x217) $x223)))
 (let (($x157 (or $x272 $x144)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x100))))
 (let (($x129 (= input.spec-%var-l-0.2.1.2.0 ?x118)))
 (let (($x86 (and $x129 $x157)))
 (let (($x275 (=> $x61 $x86)))
 (let (($x114 (= (_ bv0 32) ?x110)))
 (let ((?x115 (ite $x114 (_ bv0 32) (_ bv1 32))))
 (let (($x120 (bvuge ?x115 (_ bv1 32))))
 (let (($x124 (= $x61 $x120)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x50 (=> $x6 $x52)))
 (let (($x123 (= ?x115 (_ bv0 32))))
 (let (($x113 (= $x6 $x123)))
 (let (($x119 (and $x113 $x50)))
 (let (($x108 (and $x119 $x124)))
 (let (($x36 (and $x108 $x275)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x94)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x85)))
 (let (($x102 (= input.spec-%var-l-0.2.0 ?x95)))
 (let (($x134 (and $x102 $x36)))
 (let (($x71 (=> $x12 $x134)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x16 (_ bv1 32))))
 (let (($x42 (= $x12 $x40)))
 (let (($x22 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x19 (=> $x22 $x52)))
 (let (($x64 (= ?x16 (_ bv0 32))))
 (let (($x9 (= $x22 $x64)))
 (let (($x48 (and $x9 $x19)))
 (let (($x60 (and $x48 $x42)))
 (let (($x153 (and $x60 $x71)))
 (let (($x161 (= $x153 true)))
 (let (($x93 (= $x161 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x78 (concat ?x75 (concat ?x140 (concat ?x138 ?x139)))))
 (let (($x13 (= ?x78 input.dst.llvm-%l)))
 (let (($x132 (= $x13 true)))
 (let (($x178 (= $x132 true)))
 (let (($x216 (= input.dst.llvm-%l ?x78)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x160 (= (_ bv0 32) ?x165)))
 (let ((?x53 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x53)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (and $x159 $x163)))
 (let (($x149 (and $x156 $x160)))
 (let (($x162 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x164 (and $x162 $x149)))
 (let (($x141 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x154 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x141)))))))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x167 (and (and (and $x21 $x154) $x164) $x216)))
 (let (($x122 (and $x129 true)))
 (let (($x131 (=> $x61 $x122)))
 (let (($x121 (and $x108 $x131)))
 (let (($x133 (and $x102 $x121)))
 (let (($x127 (=> $x12 $x133)))
 (let (($x135 (and $x60 $x127)))
 (let (($x181 (and $x135 $x167)))
 (let (($x168 (= $x181 true)))
 (let (($x172 (= $x168 true)))
 (let (($x182 (= $x172 true)))
 (let (($x44 (= $x21 true)))
 (let (($x65 (= $x44 true)))
 (let (($x29 (= $x65 true)))
 (let (($x224 (and $x29 $x182)))
 (let (($x185 (and $x224 $x178)))
 (let (($x17 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x54 (and $x17 true)))
 (let (($x66 (=> $x61 $x54)))
 (let (($x76 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x61 $x76)))
 (let (($x46 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x57 (= $x6 $x46)))
 (let (($x26 (and $x57 $x50)))
 (let (($x67 (and $x26 $x47)))
 (let (($x32 (and $x67 $x66)))
 (let (($x20 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x33 (and $x20 $x32)))
 (let (($x38 (=> $x12 $x33)))
 (let (($x39 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x5 (= $x12 $x39)))
 (let (($x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x27 (= $x22 $x51)))
 (let (($x24 (and $x27 $x19)))
 (let (($x56 (and $x24 $x5)))
 (let (($x68 (and $x56 $x38)))
 (let (($x186 (and $x68 $x185)))
 (let (($x111 (=> $x186 $x93)))
 (not $x111))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460785/query
