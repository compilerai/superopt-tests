==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x14 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x5 $x12)))
 (let (($x19 (and $x10 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x14 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x5 $x12)))
 (let (($x19 (and $x10 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791888/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x185 (= false true)))
 (let (($x171 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x172 (= $x134 $x171)))
 (let (($x98 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x102 (and $x60 $x98)))
 (let (($x173 (=> $x102 $x172)))
 (let (($x168 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x169 (= $x117 $x168)))
 (let (($x170 (=> $x102 $x169)))
 (let (($x165 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x166 (=> $x102 $x165)))
 (let (($x161 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x162 (= $x98 $x161)))
 (let (($x163 (=> $x60 $x162)))
 (let (($x58 (= false false)))
 (let (($x78 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x96 (and $x60 $x78)))
 (let (($x97 (=> $x96 $x58)))
 (let (($x158 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x159 (= $x78 $x158)))
 (let (($x160 (=> $x60 $x159)))
 (let (($x155 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x156 (=> $x60 $x155)))
 (let (($x152 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x153 (= $x60 $x152)))
 (let (($x53 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x59 (=> $x53 $x58)))
 (let (($x150 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x151 (= $x53 $x150)))
 (let (($x179 (and (and (and (and (and (and $x151 $x59) $x153) $x156) $x160) $x97) $x163)))
 (let (($x182 (and (and (and $x179 $x166) $x170) $x173)))
 (let (($x183 (= $x182 true)))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x84 (concat ?x83 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x90 (concat ?x89 (concat ?x86 ?x84))))
 (let ((?x118 (bvadd ?x90 (_ bv4 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x122))))
 (let (($x129 (= (_ bv0 32) ?x128)))
 (let ((?x130 (ite $x129 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (bvuge ?x130 (_ bv1 32))))
 (let (($x136 (= $x134 $x135)))
 (let (($x137 (=> $x102 $x136)))
 (let (($x131 (= ?x130 (_ bv0 32))))
 (let (($x132 (= $x117 $x131)))
 (let (($x133 (=> $x102 $x132)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x107))))
 (let (($x114 (= input.spec-%var-l-0.2.1.2.0 ?x113)))
 (let (($x115 (=> $x102 $x114)))
 (let (($x91 (= (_ bv0 32) ?x90)))
 (let ((?x92 (ite $x91 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x92 (_ bv1 32))))
 (let (($x100 (= $x98 $x99)))
 (let (($x101 (=> $x60 $x100)))
 (let (($x93 (= ?x92 (_ bv0 32))))
 (let (($x94 (= $x78 $x93)))
 (let (($x95 (=> $x60 $x94)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x71)))
 (let (($x75 (= input.spec-%var-l-0.2.0 ?x74)))
 (let (($x76 (=> $x60 $x75)))
 (let (($x54 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x55 (ite $x54 (_ bv0 32) (_ bv1 32))))
 (let (($x61 (bvuge ?x55 (_ bv1 32))))
 (let (($x62 (= $x60 $x61)))
 (let (($x142 (and (and (and (and (and (= $x53 (= ?x55 (_ bv0 32))) $x59) $x62) $x76) $x95) $x97)))
 (let (($x146 (and (and (and (and $x142 $x101) $x115) $x133) $x137)))
 (let (($x147 (= $x146 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x42 (concat ?x40 (concat ?x38 (concat ?x9 ?x5)))))
 (let (($x49 (= ?x42 input.dst.llvm-%l)))
 (let (($x50 (= $x49 true)))
 (let ((?x46 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x46)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (and $x24 $x34)))
 (let (($x26 (and $x16 $x36)))
 (let (($x27 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (and $x27 $x26)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x6)))))))
 (let (($x45 (and $x37 $x30)))
 (let (($x25 (= $x45 true)))
 (let (($x51 (and $x25 $x50)))
 (let (($x148 (and $x51 $x147)))
 (let (($x184 (and $x148 $x183)))
 (let (($x186 (=> $x184 $x185)))
 (not $x186))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x185 (= false true)))
 (let (($x171 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x172 (= $x134 $x171)))
 (let (($x98 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x102 (and $x60 $x98)))
 (let (($x173 (=> $x102 $x172)))
 (let (($x168 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x169 (= $x117 $x168)))
 (let (($x170 (=> $x102 $x169)))
 (let (($x165 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x166 (=> $x102 $x165)))
 (let (($x161 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x162 (= $x98 $x161)))
 (let (($x163 (=> $x60 $x162)))
 (let (($x58 (= false false)))
 (let (($x78 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x96 (and $x60 $x78)))
 (let (($x97 (=> $x96 $x58)))
 (let (($x158 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x159 (= $x78 $x158)))
 (let (($x160 (=> $x60 $x159)))
 (let (($x155 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x156 (=> $x60 $x155)))
 (let (($x152 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x153 (= $x60 $x152)))
 (let (($x53 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x59 (=> $x53 $x58)))
 (let (($x150 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x151 (= $x53 $x150)))
 (let (($x179 (and (and (and (and (and (and $x151 $x59) $x153) $x156) $x160) $x97) $x163)))
 (let (($x182 (and (and (and $x179 $x166) $x170) $x173)))
 (let (($x183 (= $x182 true)))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x84 (concat ?x83 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x90 (concat ?x89 (concat ?x86 ?x84))))
 (let ((?x118 (bvadd ?x90 (_ bv4 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x122))))
 (let (($x129 (= (_ bv0 32) ?x128)))
 (let ((?x130 (ite $x129 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (bvuge ?x130 (_ bv1 32))))
 (let (($x136 (= $x134 $x135)))
 (let (($x137 (=> $x102 $x136)))
 (let (($x131 (= ?x130 (_ bv0 32))))
 (let (($x132 (= $x117 $x131)))
 (let (($x133 (=> $x102 $x132)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x107))))
 (let (($x114 (= input.spec-%var-l-0.2.1.2.0 ?x113)))
 (let (($x115 (=> $x102 $x114)))
 (let (($x91 (= (_ bv0 32) ?x90)))
 (let ((?x92 (ite $x91 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x92 (_ bv1 32))))
 (let (($x100 (= $x98 $x99)))
 (let (($x101 (=> $x60 $x100)))
 (let (($x93 (= ?x92 (_ bv0 32))))
 (let (($x94 (= $x78 $x93)))
 (let (($x95 (=> $x60 $x94)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x71)))
 (let (($x75 (= input.spec-%var-l-0.2.0 ?x74)))
 (let (($x76 (=> $x60 $x75)))
 (let (($x54 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x55 (ite $x54 (_ bv0 32) (_ bv1 32))))
 (let (($x61 (bvuge ?x55 (_ bv1 32))))
 (let (($x62 (= $x60 $x61)))
 (let (($x142 (and (and (and (and (and (= $x53 (= ?x55 (_ bv0 32))) $x59) $x62) $x76) $x95) $x97)))
 (let (($x146 (and (and (and (and $x142 $x101) $x115) $x133) $x137)))
 (let (($x147 (= $x146 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x42 (concat ?x40 (concat ?x38 (concat ?x9 ?x5)))))
 (let (($x49 (= ?x42 input.dst.llvm-%l)))
 (let (($x50 (= $x49 true)))
 (let ((?x46 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x46)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (and $x24 $x34)))
 (let (($x26 (and $x16 $x36)))
 (let (($x27 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (and $x27 $x26)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x6)))))))
 (let (($x45 (and $x37 $x30)))
 (let (($x25 (= $x45 true)))
 (let (($x51 (and $x25 $x50)))
 (let (($x148 (and $x51 $x147)))
 (let (($x184 (and $x148 $x183)))
 (let (($x186 (=> $x184 $x185)))
 (not $x186))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00020000)
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x0081fffc
                                #xf8)
                         #x0081fffe
                         #x81)
                  #x00000006
                  #x81)))
  (store (store a!1 #x00000004 #xf8) #x00000005 #xff)))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00020003)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791888/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x193 (= false true)))
 (let (($x114 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x97 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x61 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x100 (and $x61 $x97)))
 (let (($x135 (and $x100 $x114)))
 (let (($x136 (not $x135)))
 (let (($x130 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x145 (and $x100 $x130)))
 (let (($x134 (not $x145)))
 (let (($x172 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x173 (= $x130 $x172)))
 (let (($x182 (=> $x100 $x173)))
 (let (($x170 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x181 (= $x114 $x170)))
 (let (($x171 (=> $x100 $x181)))
 (let (($x167 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x168 (=> $x100 $x167)))
 (let (($x164 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x165 (= $x97 $x164)))
 (let (($x166 (=> $x61 $x165)))
 (let (($x138 (= false false)))
 (let (($x78 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x141 (and $x61 $x78)))
 (let (($x96 (=> $x141 $x138)))
 (let (($x162 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x163 (= $x78 $x162)))
 (let (($x179 (=> $x61 $x163)))
 (let (($x177 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x178 (=> $x61 $x177)))
 (let (($x158 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x159 (= $x61 $x158)))
 (let (($x55 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x60 (=> $x55 $x138)))
 (let (($x176 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x157 (= $x55 $x176)))
 (let (($x22 (and (and (and (and (and (and $x157 $x60) $x159) $x178) $x179) $x96) $x166)))
 (let (($x190 (and (and (and (and (and $x22 $x168) $x171) $x182) $x134) $x136)))
 (let (($x191 (= $x190 true)))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x86 (concat ?x85 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x90 (concat ?x87 (concat ?x83 ?x86))))
 (let ((?x115 (bvadd ?x90 (_ bv4 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x118))))
 (let (($x119 (= (_ bv0 32) ?x121)))
 (let ((?x122 (ite $x119 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x122 (_ bv1 32))))
 (let (($x132 (= $x130 $x131)))
 (let (($x133 (=> $x100 $x132)))
 (let (($x125 (= ?x122 (_ bv0 32))))
 (let (($x128 (= $x114 $x125)))
 (let (($x129 (=> $x100 $x128)))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x111))))
 (let (($x107 (= input.spec-%var-l-0.2.1.2.0 ?x104)))
 (let (($x110 (=> $x100 $x107)))
 (let (($x91 (= (_ bv0 32) ?x90)))
 (let ((?x92 (ite $x91 (_ bv0 32) (_ bv1 32))))
 (let (($x142 (bvuge ?x92 (_ bv1 32))))
 (let (($x98 (= $x97 $x142)))
 (let (($x99 (=> $x61 $x98)))
 (let (($x93 (= ?x92 (_ bv0 32))))
 (let (($x94 (= $x78 $x93)))
 (let (($x95 (=> $x61 $x94)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x66)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x76 (= input.spec-%var-l-0.2.0 ?x75)))
 (let (($x140 (=> $x61 $x76)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x57 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x62 (bvuge ?x57 (_ bv1 32))))
 (let (($x139 (= $x61 $x62)))
 (let (($x149 (and (and (and (and (and (= $x55 (= ?x57 (_ bv0 32))) $x60) $x139) $x140) $x95) $x96)))
 (let (($x175 (and (and (and (and (and (and $x149 $x99) $x110) $x129) $x133) $x134) $x136)))
 (let (($x154 (= $x175 true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x49 (concat ?x11 (concat ?x24 (concat ?x25 ?x47)))))
 (let (($x51 (= ?x49 input.dst.llvm-%l)))
 (let (($x14 (= $x51 true)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x9 (= (_ bv0 32) ?x26)))
 (let ((?x16 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x16)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x34 $x46)))
 (let (($x52 (and $x36 $x9)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x32 (and $x43 $x52)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x27 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x35)))))))
 (let (($x64 (and $x27 $x32)))
 (let (($x29 (= $x64 true)))
 (let (($x53 (and $x29 $x14)))
 (let (($x155 (and $x53 $x154)))
 (let (($x192 (and $x155 $x191)))
 (let (($x194 (=> $x192 $x193)))
 (not $x194))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x193 (= false true)))
 (let (($x114 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x97 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x61 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x100 (and $x61 $x97)))
 (let (($x135 (and $x100 $x114)))
 (let (($x136 (not $x135)))
 (let (($x130 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x145 (and $x100 $x130)))
 (let (($x134 (not $x145)))
 (let (($x172 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x173 (= $x130 $x172)))
 (let (($x182 (=> $x100 $x173)))
 (let (($x170 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x181 (= $x114 $x170)))
 (let (($x171 (=> $x100 $x181)))
 (let (($x167 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x168 (=> $x100 $x167)))
 (let (($x164 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x165 (= $x97 $x164)))
 (let (($x166 (=> $x61 $x165)))
 (let (($x138 (= false false)))
 (let (($x78 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x141 (and $x61 $x78)))
 (let (($x96 (=> $x141 $x138)))
 (let (($x162 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x163 (= $x78 $x162)))
 (let (($x179 (=> $x61 $x163)))
 (let (($x177 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x178 (=> $x61 $x177)))
 (let (($x158 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x159 (= $x61 $x158)))
 (let (($x55 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x60 (=> $x55 $x138)))
 (let (($x176 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x157 (= $x55 $x176)))
 (let (($x22 (and (and (and (and (and (and $x157 $x60) $x159) $x178) $x179) $x96) $x166)))
 (let (($x190 (and (and (and (and (and $x22 $x168) $x171) $x182) $x134) $x136)))
 (let (($x191 (= $x190 true)))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x86 (concat ?x85 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x90 (concat ?x87 (concat ?x83 ?x86))))
 (let ((?x115 (bvadd ?x90 (_ bv4 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x118))))
 (let (($x119 (= (_ bv0 32) ?x121)))
 (let ((?x122 (ite $x119 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x122 (_ bv1 32))))
 (let (($x132 (= $x130 $x131)))
 (let (($x133 (=> $x100 $x132)))
 (let (($x125 (= ?x122 (_ bv0 32))))
 (let (($x128 (= $x114 $x125)))
 (let (($x129 (=> $x100 $x128)))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x111))))
 (let (($x107 (= input.spec-%var-l-0.2.1.2.0 ?x104)))
 (let (($x110 (=> $x100 $x107)))
 (let (($x91 (= (_ bv0 32) ?x90)))
 (let ((?x92 (ite $x91 (_ bv0 32) (_ bv1 32))))
 (let (($x142 (bvuge ?x92 (_ bv1 32))))
 (let (($x98 (= $x97 $x142)))
 (let (($x99 (=> $x61 $x98)))
 (let (($x93 (= ?x92 (_ bv0 32))))
 (let (($x94 (= $x78 $x93)))
 (let (($x95 (=> $x61 $x94)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x66)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x76 (= input.spec-%var-l-0.2.0 ?x75)))
 (let (($x140 (=> $x61 $x76)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x57 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x62 (bvuge ?x57 (_ bv1 32))))
 (let (($x139 (= $x61 $x62)))
 (let (($x149 (and (and (and (and (and (= $x55 (= ?x57 (_ bv0 32))) $x60) $x139) $x140) $x95) $x96)))
 (let (($x175 (and (and (and (and (and (and $x149 $x99) $x110) $x129) $x133) $x134) $x136)))
 (let (($x154 (= $x175 true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x49 (concat ?x11 (concat ?x24 (concat ?x25 ?x47)))))
 (let (($x51 (= ?x49 input.dst.llvm-%l)))
 (let (($x14 (= $x51 true)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x9 (= (_ bv0 32) ?x26)))
 (let ((?x16 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x16)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x34 $x46)))
 (let (($x52 (and $x36 $x9)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x32 (and $x43 $x52)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x27 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x35)))))))
 (let (($x64 (and $x27 $x32)))
 (let (($x29 (= $x64 true)))
 (let (($x53 (and $x29 $x14)))
 (let (($x155 (and $x53 $x154)))
 (let (($x192 (and $x155 $x191)))
 (let (($x194 (=> $x192 $x193)))
 (not $x194))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00020000)
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x0001fffc
                                #xf8)
                         #x0001fffe
                         #x01)
                  #x00000006
                  #x01)))
  (store (store a!1 #x00000004 #xf8) #x00000005 #xff)))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00020003)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791888/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var167X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var167X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var167X.0 () (_ BitVec 32))
(declare-fun input.ind-%var167X.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d () (_ BitVec 32))
(declare-fun input.ind-%var164X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var164X.0 () (_ BitVec 32))
(declare-fun input.ind-%var164X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.ind-%var161X () (_ BitVec 32))
(declare-fun input.ind-%var158X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var158X.0 () (_ BitVec 32))
(declare-fun input.ind-%var158X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var167X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x300 (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv4 32))))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var167X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var167X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x307 (concat ?x306 (concat ?x303 ?x301))))
 (let (($x308 (= input.ind-%var167X.2.1 ?x307)))
 (let (($x280 (bvuge input.ind-%var167X.0 (_ bv1 32))))
 (let (($x309 (=> $x280 $x308)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var167X))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv2 32))) ?x287)))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv3 32))) ?x290)))
 (let (($x294 (= input.ind-%var167X.2.0 ?x293)))
 (let (($x295 (=> $x280 $x294)))
 (let (($x275 (= (_ bv0 32) input.ind-%var167X)))
 (let ((?x276 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x276 (_ bv1 32))))
 (let (($x282 (= $x280 $x281)))
 (let (($x65 (= false false)))
 (let (($x273 (= input.ind-%var167X.0 (_ bv0 32))))
 (let (($x279 (=> $x273 $x65)))
 (let (($x277 (= ?x276 (_ bv0 32))))
 (let (($x278 (= $x273 $x277)))
 (let (($x271 (= input.spec-%tmpvar-0.E0%0%d input.dst.llvm-%l)))
 (let (($x314 (and (and (and (and (and $x271 $x278) $x279) $x282) $x295) $x309)))
 (let (($x263 (= input.ind-%var164X.2.1 input.ind-%var164X.2.1)))
 (let (($x257 (bvuge input.ind-%var164X.0 (_ bv1 32))))
 (let (($x264 (=> $x257 $x263)))
 (let (($x260 (= input.ind-%var164X.2.0 input.ind-%var164X.2.0)))
 (let (($x261 (=> $x257 $x260)))
 (let (($x258 (= $x257 $x257)))
 (let (($x254 (= input.ind-%var164X.0 (_ bv0 32))))
 (let (($x256 (=> $x254 $x65)))
 (let (($x266 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x254 $x254)) $x256)))
 (let (($x269 (and (and (and $x266 $x258) $x261) $x264)))
 (let (($x315 (and $x269 $x314)))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var161X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x238 (concat ?x237 (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv4 32))))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var161X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var161X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x244 (concat ?x243 (concat ?x240 ?x238))))
 (let (($x245 (= ?x244 ?x244)))
 (let (($x215 (= (_ bv0 32) input.ind-%var161X)))
 (let ((?x216 (ite $x215 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x216 (_ bv1 32))))
 (let (($x246 (=> $x220 $x245)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var161X))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv2 32))) ?x225)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv3 32))) ?x228)))
 (let (($x232 (= ?x231 ?x231)))
 (let (($x233 (=> $x220 $x232)))
 (let (($x221 (= $x220 $x220)))
 (let (($x217 (= ?x216 (_ bv0 32))))
 (let (($x219 (=> $x217 $x65)))
 (let (($x248 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x217 $x217)) $x219)))
 (let (($x251 (and (and (and $x248 $x221) $x233) $x246)))
 (let (($x206 (= input.ind-%var158X.2.1 input.ind-%var158X.2.1)))
 (let (($x200 (bvuge input.ind-%var158X.0 (_ bv1 32))))
 (let (($x207 (=> $x200 $x206)))
 (let (($x203 (= input.ind-%var158X.2.0 input.ind-%var158X.2.0)))
 (let (($x204 (=> $x200 $x203)))
 (let (($x201 (= $x200 $x200)))
 (let (($x197 (= input.ind-%var158X.0 (_ bv0 32))))
 (let (($x199 (=> $x197 $x65)))
 (let (($x209 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x197 $x197)) $x199)))
 (let (($x212 (and (and (and $x209 $x201) $x204) $x207)))
 (let (($x252 (and $x212 $x251)))
 (let (($x316 (or $x252 $x315)))
 (let (($x317 (and true $x316)))
 (let (($x318 (= $x317 true)))
 (let (($x171 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x152 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x17 (= $x152 $x171)))
 (let (($x105 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x70 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x102 (and $x70 $x105)))
 (let (($x172 (=> $x102 $x17)))
 (let (($x169 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x170 (= $x127 $x169)))
 (let (($x181 (=> $x102 $x170)))
 (let (($x167 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x168 (=> $x102 $x167)))
 (let (($x165 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x166 (= $x105 $x165)))
 (let (($x22 (=> $x70 $x166)))
 (let (($x88 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x100 (and $x70 $x88)))
 (let (($x101 (=> $x100 $x65)))
 (let (($x186 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x187 (= $x88 $x186)))
 (let (($x164 (=> $x70 $x187)))
 (let (($x162 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x163 (=> $x70 $x162)))
 (let (($x178 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x185 (= $x70 $x178)))
 (let (($x146 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x69 (=> $x146 $x65)))
 (let (($x160 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x177 (= $x146 $x160)))
 (let (($x191 (and (and (and (and (and (and $x177 $x69) $x185) $x163) $x164) $x101) $x22)))
 (let (($x194 (and (and (and $x191 $x168) $x181) $x172)))
 (let (($x195 (= $x194 true)))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x92 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x149 (concat ?x96 (concat ?x95 ?x93))))
 (let ((?x116 (bvadd ?x149 (_ bv4 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem ?x116))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv2 32))) ?x123))))
 (let (($x174 (= (_ bv0 32) ?x129)))
 (let ((?x130 (ite $x174 (_ bv0 32) (_ bv1 32))))
 (let (($x145 (bvuge ?x130 (_ bv1 32))))
 (let (($x134 (= $x152 $x145)))
 (let (($x153 (=> $x102 $x134)))
 (let (($x131 (= ?x130 (_ bv0 32))))
 (let (($x132 (= $x127 $x131)))
 (let (($x133 (=> $x102 $x132)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x104))))
 (let (($x124 (= input.spec-%var-l-0.2.1.2.0 ?x115)))
 (let (($x120 (=> $x102 $x124)))
 (let (($x97 (= (_ bv0 32) ?x149)))
 (let ((?x142 (ite $x97 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x142 (_ bv1 32))))
 (let (($x112 (= $x105 $x106)))
 (let (($x108 (=> $x70 $x112)))
 (let (($x98 (= ?x142 (_ bv0 32))))
 (let (($x99 (= $x88 $x98)))
 (let (($x150 (=> $x70 $x99)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x80)))
 (let (($x83 (= input.spec-%var-l-0.2.0 ?x82)))
 (let (($x89 (=> $x70 $x83)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x71 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x71 (_ bv1 32))))
 (let (($x66 (= $x70 $x73)))
 (let (($x155 (and (and (and (and (and (= $x146 (= ?x71 (_ bv0 32))) $x69) $x66) $x89) $x150) $x101)))
 (let (($x183 (and (and (and (and $x155 $x108) $x120) $x133) $x153)))
 (let (($x158 (= $x183 true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x48 (concat ?x52 (concat ?x54 (concat ?x49 ?x47)))))
 (let (($x137 (= ?x48 input.dst.llvm-%l)))
 (let (($x61 (= $x137 true)))
 (let (($x7 (= input.dst.llvm-%l ?x48)))
 (let (($x19 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x32 (and $x19 $x7)))
 (let ((?x44 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x44)))
 (let ((?x46 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x20 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x31 $x20)))
 (let (($x11 (and $x36 $x42)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x45 (and $x18 $x11)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x16)))))))
 (let (($x59 (and (and (and $x33 true) $x45) $x32)))
 (let (($x138 (= $x59 true)))
 (let (($x15 (= $x19 true)))
 (let (($x60 (and $x15 $x138)))
 (let (($x62 (and $x60 $x61)))
 (let (($x159 (and $x62 $x158)))
 (let (($x30 (and $x159 $x195)))
 (let (($x319 (=> $x30 $x318)))
 (not $x319))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var167X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var167X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var167X.0 () (_ BitVec 32))
(declare-fun input.ind-%var167X.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d () (_ BitVec 32))
(declare-fun input.ind-%var164X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var164X.0 () (_ BitVec 32))
(declare-fun input.ind-%var164X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.ind-%var161X () (_ BitVec 32))
(declare-fun input.ind-%var158X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var158X.0 () (_ BitVec 32))
(declare-fun input.ind-%var158X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var167X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x300 (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv4 32))))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var167X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var167X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x307 (concat ?x306 (concat ?x303 ?x301))))
 (let (($x308 (= input.ind-%var167X.2.1 ?x307)))
 (let (($x280 (bvuge input.ind-%var167X.0 (_ bv1 32))))
 (let (($x309 (=> $x280 $x308)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var167X))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv2 32))) ?x287)))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd input.ind-%var167X (_ bv3 32))) ?x290)))
 (let (($x294 (= input.ind-%var167X.2.0 ?x293)))
 (let (($x295 (=> $x280 $x294)))
 (let (($x275 (= (_ bv0 32) input.ind-%var167X)))
 (let ((?x276 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x276 (_ bv1 32))))
 (let (($x282 (= $x280 $x281)))
 (let (($x65 (= false false)))
 (let (($x273 (= input.ind-%var167X.0 (_ bv0 32))))
 (let (($x279 (=> $x273 $x65)))
 (let (($x277 (= ?x276 (_ bv0 32))))
 (let (($x278 (= $x273 $x277)))
 (let (($x271 (= input.spec-%tmpvar-0.E0%0%d input.dst.llvm-%l)))
 (let (($x314 (and (and (and (and (and $x271 $x278) $x279) $x282) $x295) $x309)))
 (let (($x263 (= input.ind-%var164X.2.1 input.ind-%var164X.2.1)))
 (let (($x257 (bvuge input.ind-%var164X.0 (_ bv1 32))))
 (let (($x264 (=> $x257 $x263)))
 (let (($x260 (= input.ind-%var164X.2.0 input.ind-%var164X.2.0)))
 (let (($x261 (=> $x257 $x260)))
 (let (($x258 (= $x257 $x257)))
 (let (($x254 (= input.ind-%var164X.0 (_ bv0 32))))
 (let (($x256 (=> $x254 $x65)))
 (let (($x266 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x254 $x254)) $x256)))
 (let (($x269 (and (and (and $x266 $x258) $x261) $x264)))
 (let (($x315 (and $x269 $x314)))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var161X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x238 (concat ?x237 (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv4 32))))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var161X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var161X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x244 (concat ?x243 (concat ?x240 ?x238))))
 (let (($x245 (= ?x244 ?x244)))
 (let (($x215 (= (_ bv0 32) input.ind-%var161X)))
 (let ((?x216 (ite $x215 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x216 (_ bv1 32))))
 (let (($x246 (=> $x220 $x245)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var161X))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv2 32))) ?x225)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd input.ind-%var161X (_ bv3 32))) ?x228)))
 (let (($x232 (= ?x231 ?x231)))
 (let (($x233 (=> $x220 $x232)))
 (let (($x221 (= $x220 $x220)))
 (let (($x217 (= ?x216 (_ bv0 32))))
 (let (($x219 (=> $x217 $x65)))
 (let (($x248 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x217 $x217)) $x219)))
 (let (($x251 (and (and (and $x248 $x221) $x233) $x246)))
 (let (($x206 (= input.ind-%var158X.2.1 input.ind-%var158X.2.1)))
 (let (($x200 (bvuge input.ind-%var158X.0 (_ bv1 32))))
 (let (($x207 (=> $x200 $x206)))
 (let (($x203 (= input.ind-%var158X.2.0 input.ind-%var158X.2.0)))
 (let (($x204 (=> $x200 $x203)))
 (let (($x201 (= $x200 $x200)))
 (let (($x197 (= input.ind-%var158X.0 (_ bv0 32))))
 (let (($x199 (=> $x197 $x65)))
 (let (($x209 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x197 $x197)) $x199)))
 (let (($x212 (and (and (and $x209 $x201) $x204) $x207)))
 (let (($x252 (and $x212 $x251)))
 (let (($x316 (or $x252 $x315)))
 (let (($x317 (and true $x316)))
 (let (($x318 (= $x317 true)))
 (let (($x171 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x152 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x17 (= $x152 $x171)))
 (let (($x105 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x70 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x102 (and $x70 $x105)))
 (let (($x172 (=> $x102 $x17)))
 (let (($x169 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x170 (= $x127 $x169)))
 (let (($x181 (=> $x102 $x170)))
 (let (($x167 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x168 (=> $x102 $x167)))
 (let (($x165 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x166 (= $x105 $x165)))
 (let (($x22 (=> $x70 $x166)))
 (let (($x88 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x100 (and $x70 $x88)))
 (let (($x101 (=> $x100 $x65)))
 (let (($x186 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x187 (= $x88 $x186)))
 (let (($x164 (=> $x70 $x187)))
 (let (($x162 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x163 (=> $x70 $x162)))
 (let (($x178 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x185 (= $x70 $x178)))
 (let (($x146 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x69 (=> $x146 $x65)))
 (let (($x160 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x177 (= $x146 $x160)))
 (let (($x191 (and (and (and (and (and (and $x177 $x69) $x185) $x163) $x164) $x101) $x22)))
 (let (($x194 (and (and (and $x191 $x168) $x181) $x172)))
 (let (($x195 (= $x194 true)))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x92 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x149 (concat ?x96 (concat ?x95 ?x93))))
 (let ((?x116 (bvadd ?x149 (_ bv4 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem ?x116))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv2 32))) ?x123))))
 (let (($x174 (= (_ bv0 32) ?x129)))
 (let ((?x130 (ite $x174 (_ bv0 32) (_ bv1 32))))
 (let (($x145 (bvuge ?x130 (_ bv1 32))))
 (let (($x134 (= $x152 $x145)))
 (let (($x153 (=> $x102 $x134)))
 (let (($x131 (= ?x130 (_ bv0 32))))
 (let (($x132 (= $x127 $x131)))
 (let (($x133 (=> $x102 $x132)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x104))))
 (let (($x124 (= input.spec-%var-l-0.2.1.2.0 ?x115)))
 (let (($x120 (=> $x102 $x124)))
 (let (($x97 (= (_ bv0 32) ?x149)))
 (let ((?x142 (ite $x97 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x142 (_ bv1 32))))
 (let (($x112 (= $x105 $x106)))
 (let (($x108 (=> $x70 $x112)))
 (let (($x98 (= ?x142 (_ bv0 32))))
 (let (($x99 (= $x88 $x98)))
 (let (($x150 (=> $x70 $x99)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x80)))
 (let (($x83 (= input.spec-%var-l-0.2.0 ?x82)))
 (let (($x89 (=> $x70 $x83)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x71 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x71 (_ bv1 32))))
 (let (($x66 (= $x70 $x73)))
 (let (($x155 (and (and (and (and (and (= $x146 (= ?x71 (_ bv0 32))) $x69) $x66) $x89) $x150) $x101)))
 (let (($x183 (and (and (and (and $x155 $x108) $x120) $x133) $x153)))
 (let (($x158 (= $x183 true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x48 (concat ?x52 (concat ?x54 (concat ?x49 ?x47)))))
 (let (($x137 (= ?x48 input.dst.llvm-%l)))
 (let (($x61 (= $x137 true)))
 (let (($x7 (= input.dst.llvm-%l ?x48)))
 (let (($x19 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x32 (and $x19 $x7)))
 (let ((?x44 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x44)))
 (let ((?x46 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x20 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x31 $x20)))
 (let (($x11 (and $x36 $x42)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x45 (and $x18 $x11)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x16)))))))
 (let (($x59 (and (and (and $x33 true) $x45) $x32)))
 (let (($x138 (= $x59 true)))
 (let (($x15 (= $x19 true)))
 (let (($x60 (and $x15 $x138)))
 (let (($x62 (and $x60 $x61)))
 (let (($x159 (and $x62 $x158)))
 (let (($x30 (and $x159 $x195)))
 (let (($x319 (=> $x30 $x318)))
 (not $x319))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791888/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var205X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var205X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var205X.0 () (_ BitVec 32))
(declare-fun input.ind-%var205X.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d () (_ BitVec 32))
(declare-fun input.ind-%var202X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var202X.0 () (_ BitVec 32))
(declare-fun input.ind-%var202X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.ind-%var199X () (_ BitVec 32))
(declare-fun input.ind-%var196X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var196X.0 () (_ BitVec 32))
(declare-fun input.ind-%var196X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var205X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x303 (concat ?x302 (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv4 32))))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var205X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var205X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x307 (concat ?x304 (concat ?x300 ?x303))))
 (let (($x308 (= input.ind-%var205X.2.1 ?x307)))
 (let (($x282 (bvuge input.ind-%var205X.0 (_ bv1 32))))
 (let (($x309 (=> $x282 $x308)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var205X))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv2 32))) ?x285)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv3 32))) ?x287)))
 (let (($x295 (= input.ind-%var205X.2.0 ?x294)))
 (let (($x313 (=> $x282 $x295)))
 (let (($x310 (= (_ bv0 32) input.ind-%var205X)))
 (let ((?x279 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x279 (_ bv1 32))))
 (let (($x283 (= $x282 $x312)))
 (let (($x70 (= false false)))
 (let (($x277 (= input.ind-%var205X.0 (_ bv0 32))))
 (let (($x281 (=> $x277 $x70)))
 (let (($x311 (= ?x279 (_ bv0 32))))
 (let (($x280 (= $x277 $x311)))
 (let (($x275 (= input.spec-%tmpvar-0.E0%0%d input.dst.llvm-%l)))
 (let (($x318 (and (and (and (and (and $x275 $x280) $x281) $x283) $x313) $x309)))
 (let (($x263 (= input.ind-%var202X.2.1 input.ind-%var202X.2.1)))
 (let (($x267 (bvuge input.ind-%var202X.0 (_ bv1 32))))
 (let (($x264 (=> $x267 $x263)))
 (let (($x261 (= input.ind-%var202X.2.0 input.ind-%var202X.2.0)))
 (let (($x268 (=> $x267 $x261)))
 (let (($x259 (= $x267 $x267)))
 (let (($x266 (= input.ind-%var202X.0 (_ bv0 32))))
 (let (($x258 (=> $x266 $x70)))
 (let (($x270 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x266 $x266)) $x258)))
 (let (($x273 (and (and (and $x270 $x259) $x268) $x264)))
 (let (($x319 (and $x273 $x318)))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var199X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x239 (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv4 32))))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var199X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var199X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x244 (concat ?x241 (concat ?x237 ?x240))))
 (let (($x245 (= ?x244 ?x244)))
 (let (($x247 (= (_ bv0 32) input.ind-%var199X)))
 (let ((?x219 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x249 (bvuge ?x219 (_ bv1 32))))
 (let (($x246 (=> $x249 $x245)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var199X))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv2 32))) ?x223)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv3 32))) ?x225)))
 (let (($x233 (= ?x232 ?x232)))
 (let (($x250 (=> $x249 $x233)))
 (let (($x229 (= $x249 $x249)))
 (let (($x248 (= ?x219 (_ bv0 32))))
 (let (($x221 (=> $x248 $x70)))
 (let (($x252 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x248 $x248)) $x221)))
 (let (($x255 (and (and (and $x252 $x229) $x250) $x246)))
 (let (($x206 (= input.ind-%var196X.2.1 input.ind-%var196X.2.1)))
 (let (($x210 (bvuge input.ind-%var196X.0 (_ bv1 32))))
 (let (($x207 (=> $x210 $x206)))
 (let (($x204 (= input.ind-%var196X.2.0 input.ind-%var196X.2.0)))
 (let (($x211 (=> $x210 $x204)))
 (let (($x202 (= $x210 $x210)))
 (let (($x209 (= input.ind-%var196X.0 (_ bv0 32))))
 (let (($x201 (=> $x209 $x70)))
 (let (($x213 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x209 $x209)) $x201)))
 (let (($x216 (and (and (and $x213 $x202) $x211) $x207)))
 (let (($x265 (and $x216 $x255)))
 (let (($x320 (or $x265 $x319)))
 (let (($x75 (and true $x320)))
 (let (($x21 (= $x75 true)))
 (let (($x169 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x170 (= $x131 $x169)))
 (let (($x155 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x108 (and $x66 $x155)))
 (let (($x181 (=> $x108 $x170)))
 (let (($x168 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x120 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x192 (= $x120 $x168)))
 (let (($x12 (=> $x108 $x192)))
 (let (($x191 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x180 (=> $x108 $x191)))
 (let (($x190 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x165 (= $x155 $x190)))
 (let (($x166 (=> $x66 $x165)))
 (let (($x86 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x100 (and $x66 $x86)))
 (let (($x101 (=> $x100 $x70)))
 (let (($x187 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x164 (= $x86 $x187)))
 (let (($x189 (=> $x66 $x164)))
 (let (($x188 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x179 (=> $x66 $x188)))
 (let (($x161 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x162 (= $x66 $x161)))
 (let (($x74 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x73 (=> $x74 $x70)))
 (let (($x185 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x182 (= $x74 $x185)))
 (let (($x195 (and (and (and (and (and (and $x182 $x73) $x162) $x179) $x189) $x101) $x166)))
 (let (($x8 (and (and (and $x195 $x180) $x12) $x181)))
 (let (($x196 (= $x8 true)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x95 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x97 (concat ?x149 (concat ?x90 ?x91))))
 (let ((?x176 (bvadd ?x97 (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x125))))
 (let (($x123 (= (_ bv0 32) ?x117)))
 (let ((?x122 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x122 (_ bv1 32))))
 (let (($x133 (= $x131 $x132)))
 (let (($x157 (=> $x108 $x133)))
 (let (($x129 (= ?x122 (_ bv0 32))))
 (let (($x174 (= $x120 $x129)))
 (let (($x130 (=> $x108 $x174)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x114))))
 (let (($x151 (= input.spec-%var-l-0.2.1.2.0 ?x104)))
 (let (($x115 (=> $x108 $x151)))
 (let (($x142 (= (_ bv0 32) ?x97)))
 (let ((?x98 (ite $x142 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x98 (_ bv1 32))))
 (let (($x106 (= $x155 $x105)))
 (let (($x112 (=> $x66 $x106)))
 (let (($x99 (= ?x98 (_ bv0 32))))
 (let (($x150 (= $x86 $x99)))
 (let (($x154 (=> $x66 $x150)))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x147)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x80)))
 (let (($x175 (= input.spec-%var-l-0.2.0 ?x89)))
 (let (($x85 (=> $x66 $x175)))
 (let (($x67 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x65 (ite $x67 (_ bv0 32) (_ bv1 32))))
 (let (($x136 (bvuge ?x65 (_ bv1 32))))
 (let (($x68 (= $x66 $x136)))
 (let (($x183 (and (and (and (and (and (= $x74 (= ?x65 (_ bv0 32))) $x73) $x68) $x85) $x154) $x101)))
 (let (($x160 (and (and (and (and $x183 $x112) $x115) $x130) $x157)))
 (let (($x177 (= $x160 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x7 (concat ?x48 (concat ?x47 (concat ?x14 ?x52)))))
 (let (($x139 (= ?x7 input.dst.llvm-%l)))
 (let (($x146 (= $x139 true)))
 (let (($x32 (= input.dst.llvm-%l ?x7)))
 (let (($x19 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x59 (and $x19 $x32)))
 (let ((?x42 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x42)))
 (let ((?x20 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x20)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (and $x37 $x36)))
 (let (($x45 (and $x44 $x11)))
 (let (($x27 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x27 $x45)))
 (let (($x38 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x38)))))))
 (let (($x137 (and (and (and $x31 true) $x29) $x59)))
 (let (($x61 (= $x137 true)))
 (let (($x15 (= $x19 true)))
 (let (($x62 (and $x15 $x61)))
 (let (($x63 (and $x62 $x146)))
 (let (($x173 (and $x63 $x177)))
 (let (($x197 (and $x173 $x196)))
 (let (($x26 (=> $x197 $x21)))
 (not $x26))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var205X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var205X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var205X.0 () (_ BitVec 32))
(declare-fun input.ind-%var205X.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d () (_ BitVec 32))
(declare-fun input.ind-%var202X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var202X.0 () (_ BitVec 32))
(declare-fun input.ind-%var202X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.ind-%var199X () (_ BitVec 32))
(declare-fun input.ind-%var196X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var196X.0 () (_ BitVec 32))
(declare-fun input.ind-%var196X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var205X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x303 (concat ?x302 (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv4 32))))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var205X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var205X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x307 (concat ?x304 (concat ?x300 ?x303))))
 (let (($x308 (= input.ind-%var205X.2.1 ?x307)))
 (let (($x282 (bvuge input.ind-%var205X.0 (_ bv1 32))))
 (let (($x309 (=> $x282 $x308)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var205X))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv2 32))) ?x285)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.ind-%var205X (_ bv3 32))) ?x287)))
 (let (($x295 (= input.ind-%var205X.2.0 ?x294)))
 (let (($x313 (=> $x282 $x295)))
 (let (($x310 (= (_ bv0 32) input.ind-%var205X)))
 (let ((?x279 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x279 (_ bv1 32))))
 (let (($x283 (= $x282 $x312)))
 (let (($x70 (= false false)))
 (let (($x277 (= input.ind-%var205X.0 (_ bv0 32))))
 (let (($x281 (=> $x277 $x70)))
 (let (($x311 (= ?x279 (_ bv0 32))))
 (let (($x280 (= $x277 $x311)))
 (let (($x275 (= input.spec-%tmpvar-0.E0%0%d input.dst.llvm-%l)))
 (let (($x318 (and (and (and (and (and $x275 $x280) $x281) $x283) $x313) $x309)))
 (let (($x263 (= input.ind-%var202X.2.1 input.ind-%var202X.2.1)))
 (let (($x267 (bvuge input.ind-%var202X.0 (_ bv1 32))))
 (let (($x264 (=> $x267 $x263)))
 (let (($x261 (= input.ind-%var202X.2.0 input.ind-%var202X.2.0)))
 (let (($x268 (=> $x267 $x261)))
 (let (($x259 (= $x267 $x267)))
 (let (($x266 (= input.ind-%var202X.0 (_ bv0 32))))
 (let (($x258 (=> $x266 $x70)))
 (let (($x270 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x266 $x266)) $x258)))
 (let (($x273 (and (and (and $x270 $x259) $x268) $x264)))
 (let (($x319 (and $x273 $x318)))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var199X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x239 (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv4 32))))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var199X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var199X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x244 (concat ?x241 (concat ?x237 ?x240))))
 (let (($x245 (= ?x244 ?x244)))
 (let (($x247 (= (_ bv0 32) input.ind-%var199X)))
 (let ((?x219 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x249 (bvuge ?x219 (_ bv1 32))))
 (let (($x246 (=> $x249 $x245)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var199X))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv2 32))) ?x223)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.ind-%var199X (_ bv3 32))) ?x225)))
 (let (($x233 (= ?x232 ?x232)))
 (let (($x250 (=> $x249 $x233)))
 (let (($x229 (= $x249 $x249)))
 (let (($x248 (= ?x219 (_ bv0 32))))
 (let (($x221 (=> $x248 $x70)))
 (let (($x252 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x248 $x248)) $x221)))
 (let (($x255 (and (and (and $x252 $x229) $x250) $x246)))
 (let (($x206 (= input.ind-%var196X.2.1 input.ind-%var196X.2.1)))
 (let (($x210 (bvuge input.ind-%var196X.0 (_ bv1 32))))
 (let (($x207 (=> $x210 $x206)))
 (let (($x204 (= input.ind-%var196X.2.0 input.ind-%var196X.2.0)))
 (let (($x211 (=> $x210 $x204)))
 (let (($x202 (= $x210 $x210)))
 (let (($x209 (= input.ind-%var196X.0 (_ bv0 32))))
 (let (($x201 (=> $x209 $x70)))
 (let (($x213 (and (and (= input.spec-%var-l-0 input.spec-%var-l-0) (= $x209 $x209)) $x201)))
 (let (($x216 (and (and (and $x213 $x202) $x211) $x207)))
 (let (($x265 (and $x216 $x255)))
 (let (($x320 (or $x265 $x319)))
 (let (($x75 (and true $x320)))
 (let (($x21 (= $x75 true)))
 (let (($x169 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x170 (= $x131 $x169)))
 (let (($x155 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x108 (and $x66 $x155)))
 (let (($x181 (=> $x108 $x170)))
 (let (($x168 (= input.spec-%tmpvar-0.E0%0%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x120 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x192 (= $x120 $x168)))
 (let (($x12 (=> $x108 $x192)))
 (let (($x191 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x180 (=> $x108 $x191)))
 (let (($x190 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32))))
 (let (($x165 (= $x155 $x190)))
 (let (($x166 (=> $x66 $x165)))
 (let (($x86 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x100 (and $x66 $x86)))
 (let (($x101 (=> $x100 $x70)))
 (let (($x187 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32))))
 (let (($x164 (= $x86 $x187)))
 (let (($x189 (=> $x66 $x164)))
 (let (($x188 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x179 (=> $x66 $x188)))
 (let (($x161 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32))))
 (let (($x162 (= $x66 $x161)))
 (let (($x74 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x73 (=> $x74 $x70)))
 (let (($x185 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32))))
 (let (($x182 (= $x74 $x185)))
 (let (($x195 (and (and (and (and (and (and $x182 $x73) $x162) $x179) $x189) $x101) $x166)))
 (let (($x8 (and (and (and $x195 $x180) $x12) $x181)))
 (let (($x196 (= $x8 true)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x95 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x97 (concat ?x149 (concat ?x90 ?x91))))
 (let ((?x176 (bvadd ?x97 (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x125))))
 (let (($x123 (= (_ bv0 32) ?x117)))
 (let ((?x122 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x122 (_ bv1 32))))
 (let (($x133 (= $x131 $x132)))
 (let (($x157 (=> $x108 $x133)))
 (let (($x129 (= ?x122 (_ bv0 32))))
 (let (($x174 (= $x120 $x129)))
 (let (($x130 (=> $x108 $x174)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x114))))
 (let (($x151 (= input.spec-%var-l-0.2.1.2.0 ?x104)))
 (let (($x115 (=> $x108 $x151)))
 (let (($x142 (= (_ bv0 32) ?x97)))
 (let ((?x98 (ite $x142 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x98 (_ bv1 32))))
 (let (($x106 (= $x155 $x105)))
 (let (($x112 (=> $x66 $x106)))
 (let (($x99 (= ?x98 (_ bv0 32))))
 (let (($x150 (= $x86 $x99)))
 (let (($x154 (=> $x66 $x150)))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x147)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x80)))
 (let (($x175 (= input.spec-%var-l-0.2.0 ?x89)))
 (let (($x85 (=> $x66 $x175)))
 (let (($x67 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x65 (ite $x67 (_ bv0 32) (_ bv1 32))))
 (let (($x136 (bvuge ?x65 (_ bv1 32))))
 (let (($x68 (= $x66 $x136)))
 (let (($x183 (and (and (and (and (and (= $x74 (= ?x65 (_ bv0 32))) $x73) $x68) $x85) $x154) $x101)))
 (let (($x160 (and (and (and (and $x183 $x112) $x115) $x130) $x157)))
 (let (($x177 (= $x160 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x7 (concat ?x48 (concat ?x47 (concat ?x14 ?x52)))))
 (let (($x139 (= ?x7 input.dst.llvm-%l)))
 (let (($x146 (= $x139 true)))
 (let (($x32 (= input.dst.llvm-%l ?x7)))
 (let (($x19 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x59 (and $x19 $x32)))
 (let ((?x42 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x42)))
 (let ((?x20 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x20)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (and $x37 $x36)))
 (let (($x45 (and $x44 $x11)))
 (let (($x27 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x27 $x45)))
 (let (($x38 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x38)))))))
 (let (($x137 (and (and (and $x31 true) $x29) $x59)))
 (let (($x61 (= $x137 true)))
 (let (($x15 (= $x19 true)))
 (let (($x62 (and $x15 $x61)))
 (let (($x63 (and $x62 $x146)))
 (let (($x173 (and $x63 $x177)))
 (let (($x197 (and $x173 $x196)))
 (let (($x26 (=> $x197 $x21)))
 (not $x26))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791888/query
