==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x14 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x14)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x11 $x12)))
 (let (($x19 (and $x9 $x18)))
 (and $x19 $x20)))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x14 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x14)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x11 $x12)))
 (let (($x19 (and $x9 $x18)))
 (and $x19 $x20)))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x368 (= true false)))
 (let (($x369 (= $x368 true)))
 (let ((?x353 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x355 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x362 (concat ?x361 (concat ?x358 (concat ?x355 ?x353)))))
 (let (($x363 (= ?x362 input.dst.llvm-%l)))
 (let (($x364 (= $x363 true)))
 (let (($x365 (= $x364 true)))
 (let ((?x344 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x345 (= (_ bv0 32) ?x344)))
 (let ((?x341 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x342 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x341)))
 (let (($x340 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x343 (and $x340 $x342)))
 (let (($x346 (and $x343 $x345)))
 (let (($x338 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x347 (and $x338 $x346)))
 (let (($x348 (= $x347 true)))
 (let (($x349 (= $x348 true)))
 (let (($x350 (= $x349 true)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x249 (concat ?x248 (concat ?x245 ?x243))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x329))))
 (let (($x323 (= input.spec-%var-l-0.2.1.2.0 ?x335)))
 (let (($x324 (and $x323 true)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x320 (=> $x61 $x324)))
 (let (($x267 (= $x61 (bvuge (ite (= (_ bv0 32) ?x249) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x39 (= false false)))
 (let (($x51 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x49 (=> $x51 $x39)))
 (let (($x236 (= $x51 (= (ite (= (_ bv0 32) ?x249) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x237 (and $x236 $x49)))
 (let (($x268 (and $x237 $x267)))
 (let (($x321 (and $x268 $x320)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x189)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x192)))
 (let (($x196 (= input.spec-%var-l-0.2.0 ?x195)))
 (let (($x317 (and $x196 $x321)))
 (let (($x20 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x318 (=> $x20 $x317)))
 (let (($x149 (= $x20 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x37 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x18 (=> $x37 $x39)))
 (let (($x142 (= $x37 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x143 (and $x142 $x18)))
 (let (($x150 (and $x143 $x149)))
 (let (($x316 (and $x150 $x318)))
 (let (($x319 (= $x316 true)))
 (let (($x322 (= $x319 true)))
 (let (($x325 (= $x322 true)))
 (let (($x351 (and $x325 $x350)))
 (let (($x366 (and $x351 $x365)))
 (let (($x69 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x72 (and $x69 true)))
 (let (($x73 (=> $x61 $x72)))
 (let (($x59 (= $x61 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x48 (= $x51 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x54 (and $x48 $x49)))
 (let (($x60 (and $x54 $x59)))
 (let (($x74 (and $x60 $x73)))
 (let (($x10 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x75 (and $x10 $x74)))
 (let (($x76 (=> $x20 $x75)))
 (let (($x13 (= $x20 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x43 (= $x37 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x16 (and $x43 $x18)))
 (let (($x25 (and $x16 $x13)))
 (let (($x77 (and $x25 $x76)))
 (let (($x367 (and $x77 $x366)))
 (let (($x370 (=> $x367 $x369)))
 (not $x370))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x368 (= true false)))
 (let (($x369 (= $x368 true)))
 (let ((?x353 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x355 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x362 (concat ?x361 (concat ?x358 (concat ?x355 ?x353)))))
 (let (($x363 (= ?x362 input.dst.llvm-%l)))
 (let (($x364 (= $x363 true)))
 (let (($x365 (= $x364 true)))
 (let ((?x344 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x345 (= (_ bv0 32) ?x344)))
 (let ((?x341 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x342 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x341)))
 (let (($x340 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x343 (and $x340 $x342)))
 (let (($x346 (and $x343 $x345)))
 (let (($x338 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x347 (and $x338 $x346)))
 (let (($x348 (= $x347 true)))
 (let (($x349 (= $x348 true)))
 (let (($x350 (= $x349 true)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x249 (concat ?x248 (concat ?x245 ?x243))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x329))))
 (let (($x323 (= input.spec-%var-l-0.2.1.2.0 ?x335)))
 (let (($x324 (and $x323 true)))
 (let (($x61 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x320 (=> $x61 $x324)))
 (let (($x267 (= $x61 (bvuge (ite (= (_ bv0 32) ?x249) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x39 (= false false)))
 (let (($x51 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x49 (=> $x51 $x39)))
 (let (($x236 (= $x51 (= (ite (= (_ bv0 32) ?x249) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x237 (and $x236 $x49)))
 (let (($x268 (and $x237 $x267)))
 (let (($x321 (and $x268 $x320)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x189)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x192)))
 (let (($x196 (= input.spec-%var-l-0.2.0 ?x195)))
 (let (($x317 (and $x196 $x321)))
 (let (($x20 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x318 (=> $x20 $x317)))
 (let (($x149 (= $x20 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x37 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x18 (=> $x37 $x39)))
 (let (($x142 (= $x37 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x143 (and $x142 $x18)))
 (let (($x150 (and $x143 $x149)))
 (let (($x316 (and $x150 $x318)))
 (let (($x319 (= $x316 true)))
 (let (($x322 (= $x319 true)))
 (let (($x325 (= $x322 true)))
 (let (($x351 (and $x325 $x350)))
 (let (($x366 (and $x351 $x365)))
 (let (($x69 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x72 (and $x69 true)))
 (let (($x73 (=> $x61 $x72)))
 (let (($x59 (= $x61 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x48 (= $x51 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x54 (and $x48 $x49)))
 (let (($x60 (and $x54 $x59)))
 (let (($x74 (and $x60 $x73)))
 (let (($x10 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x75 (and $x10 $x74)))
 (let (($x76 (=> $x20 $x75)))
 (let (($x13 (= $x20 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x43 (= $x37 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x16 (and $x43 $x18)))
 (let (($x25 (and $x16 $x13)))
 (let (($x77 (and $x25 $x76)))
 (let (($x367 (and $x77 $x366)))
 (let (($x370 (=> $x367 $x369)))
 (not $x370))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00008000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00008003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00008000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x57 (= true false)))
 (let (($x58 (= $x57 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x38 (concat ?x8 (concat ?x44 (concat ?x282 ?x280)))))
 (let (($x36 (= ?x38 input.dst.llvm-%l)))
 (let (($x23 (= $x36 true)))
 (let (($x68 (= $x23 true)))
 (let ((?x278 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x279 (= (_ bv0 32) ?x278)))
 (let ((?x287 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x290 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x287)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (and $x284 $x290)))
 (let (($x275 (and $x293 $x279)))
 (let (($x285 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x276 (and $x285 $x275)))
 (let (($x272 (= $x276 true)))
 (let (($x273 (= $x272 true)))
 (let (($x271 (= $x273 true)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x233 (concat ?x232 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x228 (concat ?x225 (concat ?x230 ?x233))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x265))))
 (let (($x261 (= input.spec-%var-l-0.2.1.2.0 ?x292)))
 (let (($x257 (and $x261 false)))
 (let (($x189 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x263 (=> $x189 $x257)))
 (let (($x198 (= $x189 (bvuge (ite (= (_ bv0 32) ?x228) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x15 (= false false)))
 (let (($x81 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x149 (=> $x81 $x15)))
 (let (($x34 (= $x81 (= (ite (= (_ bv0 32) ?x228) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x221 (and $x34 $x149)))
 (let (($x199 (and $x221 $x198)))
 (let (($x264 (and $x199 $x263)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x118)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x116)))
 (let (($x123 (= input.spec-%var-l-0.2.0 ?x120)))
 (let (($x254 (and $x123 $x264)))
 (let (($x49 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x266 (=> $x49 $x254)))
 (let (($x5 (= $x49 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x13 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x11 (=> $x13 $x15)))
 (let (($x98 (= $x13 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x79 (and $x98 $x11)))
 (let (($x83 (and $x79 $x5)))
 (let (($x253 (and $x83 $x266)))
 (let (($x255 (= $x253 true)))
 (let (($x260 (= $x255 true)))
 (let (($x258 (= $x260 true)))
 (let (($x274 (and $x258 $x271)))
 (let (($x29 (and $x274 $x68)))
 (let (($x244 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x242 (and $x244 false)))
 (let (($x240 (=> $x189 $x242)))
 (let (($x188 (= $x189 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x148 (= $x81 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x194 (and $x148 $x149)))
 (let (($x186 (and $x194 $x188)))
 (let (($x243 (and $x186 $x240)))
 (let (($x75 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x246 (and $x75 $x243)))
 (let (($x249 (=> $x49 $x246)))
 (let (($x61 (= $x49 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x20 (= $x13 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x10 (and $x20 $x11)))
 (let (($x62 (and $x10 $x61)))
 (let (($x250 (and $x62 $x249)))
 (let (($x31 (and $x250 $x29)))
 (let (($x66 (=> $x31 $x58)))
 (not $x66))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let (($x57 (= true false)))
 (let (($x58 (= $x57 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x38 (concat ?x8 (concat ?x44 (concat ?x282 ?x280)))))
 (let (($x36 (= ?x38 input.dst.llvm-%l)))
 (let (($x23 (= $x36 true)))
 (let (($x68 (= $x23 true)))
 (let ((?x278 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x279 (= (_ bv0 32) ?x278)))
 (let ((?x287 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x290 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x287)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (and $x284 $x290)))
 (let (($x275 (and $x293 $x279)))
 (let (($x285 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x276 (and $x285 $x275)))
 (let (($x272 (= $x276 true)))
 (let (($x273 (= $x272 true)))
 (let (($x271 (= $x273 true)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x233 (concat ?x232 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x228 (concat ?x225 (concat ?x230 ?x233))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x265))))
 (let (($x261 (= input.spec-%var-l-0.2.1.2.0 ?x292)))
 (let (($x257 (and $x261 false)))
 (let (($x189 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x263 (=> $x189 $x257)))
 (let (($x198 (= $x189 (bvuge (ite (= (_ bv0 32) ?x228) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x15 (= false false)))
 (let (($x81 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x149 (=> $x81 $x15)))
 (let (($x34 (= $x81 (= (ite (= (_ bv0 32) ?x228) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x221 (and $x34 $x149)))
 (let (($x199 (and $x221 $x198)))
 (let (($x264 (and $x199 $x263)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x118)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x116)))
 (let (($x123 (= input.spec-%var-l-0.2.0 ?x120)))
 (let (($x254 (and $x123 $x264)))
 (let (($x49 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x266 (=> $x49 $x254)))
 (let (($x5 (= $x49 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x13 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x11 (=> $x13 $x15)))
 (let (($x98 (= $x13 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x79 (and $x98 $x11)))
 (let (($x83 (and $x79 $x5)))
 (let (($x253 (and $x83 $x266)))
 (let (($x255 (= $x253 true)))
 (let (($x260 (= $x255 true)))
 (let (($x258 (= $x260 true)))
 (let (($x274 (and $x258 $x271)))
 (let (($x29 (and $x274 $x68)))
 (let (($x244 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x242 (and $x244 false)))
 (let (($x240 (=> $x189 $x242)))
 (let (($x188 (= $x189 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x148 (= $x81 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x194 (and $x148 $x149)))
 (let (($x186 (and $x194 $x188)))
 (let (($x243 (and $x186 $x240)))
 (let (($x75 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x246 (and $x75 $x243)))
 (let (($x249 (=> $x49 $x246)))
 (let (($x61 (= $x49 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x20 (= $x13 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x10 (and $x20 $x11)))
 (let (($x62 (and $x10 $x61)))
 (let (($x250 (and $x62 $x249)))
 (let (($x31 (and $x250 $x29)))
 (let (($x66 (=> $x31 $x58)))
 (not $x66))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00400000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00400003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00400000)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x421 (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv4 32))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd ?x421 (_ bv1 32))) (select input.dst.llvm-mem ?x421))))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd ?x421 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x421 (_ bv2 32))) ?x425))))
 (let ((?x407 (select input.dst.llvm-mem smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv1 32)))))
 (let ((?x398 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv2 32)))))
 (let ((?x408 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv3 32)))))
 (let ((?x420 (concat ?x408 (concat ?x398 (concat ?x404 ?x407)))))
 (let ((?x406 (ite (= (_ bv0 32) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0) (_ bv0 32) (_ bv1 32))))
 (let (($x477 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.dst.llvm-%l ?x406 false ?x420 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x431)))
 (let (($x449 (= $x477 true)))
 (let (($x450 (= $x449 true)))
 (let ((?x381 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x378 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x380 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x433 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x434 (concat ?x433 (concat ?x380 (concat ?x378 ?x381)))))
 (let (($x444 (= ?x434 input.dst.llvm-%l)))
 (let (($x445 (= $x444 true)))
 (let (($x446 (= $x445 true)))
 (let (($x435 (= input.dst.llvm-%l ?x434)))
 (let ((?x394 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x397 (= (_ bv0 32) ?x394)))
 (let ((?x390 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x388 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x390)))
 (let (($x389 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x391 (and $x389 $x388)))
 (let (($x384 (and $x391 $x397)))
 (let (($x392 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x438 (and (and (and $x257 $x392) $x384) $x435)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x131 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x167 (concat ?x26 (concat ?x33 ?x76))))
 (let ((?x409 (bvadd ?x167 (_ bv4 32))))
 (let ((?x413 (concat (select input.dst.llvm-mem (bvadd ?x409 (_ bv1 32))) (select input.dst.llvm-mem ?x409))))
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd ?x409 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x409 (_ bv2 32))) ?x413))))
 (let (($x432 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x419 ?x406 false ?x420 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x431)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x219))))
 (let (($x217 (= input.spec-%var-l-0.2.1.2.0 ?x43)))
 (let (($x372 (and $x217 $x432)))
 (let (($x94 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x373 (=> $x94 $x372)))
 (let (($x145 (= $x94 (bvuge (ite (= (_ bv0 32) ?x167) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x120 (= false false)))
 (let (($x81 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x115 (=> $x81 $x120)))
 (let (($x126 (= $x81 (= (ite (= (_ bv0 32) ?x167) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x132 (and $x126 $x115)))
 (let (($x40 (and $x132 $x145)))
 (let (($x374 (and $x40 $x373)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x60)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x110)))
 (let (($x106 (= input.spec-%var-l-0.2.0 ?x104)))
 (let (($x375 (and $x106 $x374)))
 (let (($x246 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x376 (=> $x246 $x375)))
 (let (($x325 (= $x246 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x194 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x98 (=> $x194 $x120)))
 (let (($x339 (= $x194 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x340 (and $x339 $x98)))
 (let (($x338 (and $x340 $x325)))
 (let (($x387 (and $x338 $x376)))
 (let (($x439 (and $x387 $x438)))
 (let (($x440 (= $x439 true)))
 (let (($x441 (= $x440 true)))
 (let (($x442 (= $x441 true)))
 (let (($x263 (= $x257 true)))
 (let (($x264 (= $x263 true)))
 (let (($x254 (= $x264 true)))
 (let (($x443 (and $x254 $x442)))
 (let (($x447 (and $x443 $x446)))
 (let (($x63 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.spec-%tmpvar-0.E0%0%d.2.1.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 false smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1)))
 (let (($x229 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x228 (and $x229 $x63)))
 (let (($x231 (=> $x94 $x228)))
 (let (($x134 (= $x94 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x61 (= $x81 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x117 (and $x61 $x115)))
 (let (($x237 (and $x117 $x134)))
 (let (($x234 (and $x237 $x231)))
 (let (($x79 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x35 (and $x79 $x234)))
 (let (($x218 (=> $x246 $x35)))
 (let (($x335 (= $x246 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x74 (= $x194 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x242 (and $x74 $x98)))
 (let (($x83 (and $x242 $x335)))
 (let (($x265 (and $x83 $x218)))
 (let (($x448 (and $x265 $x447)))
 (let (($x451 (=> $x448 $x450)))
 (not $x451))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x421 (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv4 32))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd ?x421 (_ bv1 32))) (select input.dst.llvm-mem ?x421))))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd ?x421 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x421 (_ bv2 32))) ?x425))))
 (let ((?x407 (select input.dst.llvm-mem smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv1 32)))))
 (let ((?x398 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv2 32)))))
 (let ((?x408 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv3 32)))))
 (let ((?x420 (concat ?x408 (concat ?x398 (concat ?x404 ?x407)))))
 (let ((?x406 (ite (= (_ bv0 32) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0) (_ bv0 32) (_ bv1 32))))
 (let (($x477 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.dst.llvm-%l ?x406 false ?x420 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x431)))
 (let (($x449 (= $x477 true)))
 (let (($x450 (= $x449 true)))
 (let ((?x381 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x378 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x380 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x433 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x434 (concat ?x433 (concat ?x380 (concat ?x378 ?x381)))))
 (let (($x444 (= ?x434 input.dst.llvm-%l)))
 (let (($x445 (= $x444 true)))
 (let (($x446 (= $x445 true)))
 (let (($x435 (= input.dst.llvm-%l ?x434)))
 (let ((?x394 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x397 (= (_ bv0 32) ?x394)))
 (let ((?x390 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x388 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x390)))
 (let (($x389 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x391 (and $x389 $x388)))
 (let (($x384 (and $x391 $x397)))
 (let (($x392 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x438 (and (and (and $x257 $x392) $x384) $x435)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x131 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x167 (concat ?x26 (concat ?x33 ?x76))))
 (let ((?x409 (bvadd ?x167 (_ bv4 32))))
 (let ((?x413 (concat (select input.dst.llvm-mem (bvadd ?x409 (_ bv1 32))) (select input.dst.llvm-mem ?x409))))
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd ?x409 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x409 (_ bv2 32))) ?x413))))
 (let (($x432 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x419 ?x406 false ?x420 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x431)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x219))))
 (let (($x217 (= input.spec-%var-l-0.2.1.2.0 ?x43)))
 (let (($x372 (and $x217 $x432)))
 (let (($x94 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x373 (=> $x94 $x372)))
 (let (($x145 (= $x94 (bvuge (ite (= (_ bv0 32) ?x167) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x120 (= false false)))
 (let (($x81 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x115 (=> $x81 $x120)))
 (let (($x126 (= $x81 (= (ite (= (_ bv0 32) ?x167) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x132 (and $x126 $x115)))
 (let (($x40 (and $x132 $x145)))
 (let (($x374 (and $x40 $x373)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x60)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x110)))
 (let (($x106 (= input.spec-%var-l-0.2.0 ?x104)))
 (let (($x375 (and $x106 $x374)))
 (let (($x246 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x376 (=> $x246 $x375)))
 (let (($x325 (= $x246 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x194 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x98 (=> $x194 $x120)))
 (let (($x339 (= $x194 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x340 (and $x339 $x98)))
 (let (($x338 (and $x340 $x325)))
 (let (($x387 (and $x338 $x376)))
 (let (($x439 (and $x387 $x438)))
 (let (($x440 (= $x439 true)))
 (let (($x441 (= $x440 true)))
 (let (($x442 (= $x441 true)))
 (let (($x263 (= $x257 true)))
 (let (($x264 (= $x263 true)))
 (let (($x254 (= $x264 true)))
 (let (($x443 (and $x254 $x442)))
 (let (($x447 (and $x443 $x446)))
 (let (($x63 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.spec-%tmpvar-0.E0%0%d.2.1.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 false smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1)))
 (let (($x229 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x228 (and $x229 $x63)))
 (let (($x231 (=> $x94 $x228)))
 (let (($x134 (= $x94 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x61 (= $x81 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x117 (and $x61 $x115)))
 (let (($x237 (and $x117 $x134)))
 (let (($x234 (and $x237 $x231)))
 (let (($x79 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x35 (and $x79 $x234)))
 (let (($x218 (=> $x246 $x35)))
 (let (($x335 (= $x246 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x74 (= $x194 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x242 (and $x74 $x98)))
 (let (($x83 (and $x242 $x335)))
 (let (($x265 (and $x83 $x218)))
 (let (($x448 (and $x265 $x447)))
 (let (($x451 (=> $x448 $x450)))
 (not $x451))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 #b00000000000000000000000000000000)
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b00000000000000000000000000000000)
(= axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f @fun_38)
(= input.dst.llvm-mem @fun_34)
(function @fun_38
 (type
  (FunType14 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool
   (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool))
 (=
  (@fun_38 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000 false #b00000000000000000000000000000000
   #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b10000000000000000000000000000000 #b00000000000000000000000000000000
   #b00000000000000000000000000000001 false #b00000000000000000000000000000000 #b10000000000000000000000000000000 #b00000000000000000000000000000000)
  false)
 (=
  (@fun_38 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000 false #b00000000000000000000000000000000
   #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b10000000000000000000000000000000 #b00000000000000000000000000000000
   #b00000000000000000000000000000000 false #b00000000000000000000000000000000 #b10000000000000000000000000000000 #b00000000000000000000000000000000)
  false)
 (default true))
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((BOUND_VARIABLE_7886 (_ BitVec 32)) (BOUND_VARIABLE_7887 (_ BitVec 32)) (BOUND_VARIABLE_7888 (_ BitVec 32)) (BOUND_VARIABLE_7889 Bool) (BOUND_VARIABLE_7890 (_ BitVec 32)) (BOUND_VARIABLE_7891 (_ BitVec 32)) (BOUND_VARIABLE_7892 (_ BitVec 32)) (BOUND_VARIABLE_7893 (_ BitVec 32)) (BOUND_VARIABLE_7894 (_ BitVec 32)) (BOUND_VARIABLE_7895 (_ BitVec 32)) (BOUND_VARIABLE_7896 Bool) (BOUND_VARIABLE_7897 (_ BitVec 32)) (BOUND_VARIABLE_7898 (_ BitVec 32)) (BOUND_VARIABLE_7899 (_ BitVec 32))) Bool false)
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
(define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32)
    #xb4000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0 () (_ BitVec 32)
    #xffffffff)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #x00000007
                     #x7f)
              #x00000006
              #xb4)
       #x00000006
       #xb4))
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((x!0
    (_ BitVec 32))
   (x!1 (_ BitVec 32))
   (x!2 (_ BitVec 32))
   (x!3 Bool)
   (x!4 (_ BitVec 32))
   (x!5 (_ BitVec 32))
   (x!6 (_ BitVec 32))
   (x!7 (_ BitVec 32))
   (x!8 (_ BitVec 32))
   (x!9 (_ BitVec 32))
   (x!10 Bool)
   (x!11 (_ BitVec 32))
   (x!12 (_ BitVec 32))
   (x!13 (_ BitVec 32))) Bool
    (ite (and (= x!0 #x00000000)
              (= x!1 #x00000000)
              (= x!2 #x00000000)
              (= x!3 false)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 #x00000000)
              (= x!7 #xffffffff)
              (= x!8 #x00000000)
              (= x!9 #x00000001)
              (= x!10 false)
              (= x!11 #x00000000)
              (= x!12 #xffffffff)
              (= x!13 #xb4000000))
      true
    (ite (and (= x!0 #x00000000)
              (= x!1 #x00000000)
              (= x!2 #x00000000)
              (= x!3 false)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 #x00000000)
              (= x!7 #xffffffff)
              (= x!8 #x00000000)
              (= x!9 #x00000001)
              (= x!10 false)
              (= x!11 #x80000000)
              (= x!12 #xffffffff)
              (= x!13 #xb4000000))
      false
    (ite (and (= x!0 #x00000000)
              (= x!1 #xffffffff)
              (= x!2 #x00000000)
              (= x!3 false)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 #x00000000)
              (= x!7 #xffffffff)
              (= x!8 #x00000000)
              (= x!9 #x00000001)
              (= x!10 false)
              (= x!11 #x00000000)
              (= x!12 #xffffffff)
              (= x!13 #xb4000000))
      false
      false))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool) Bool)
(declare-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x303 (ite (= (_ bv0 32) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x187 (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv4 32))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv1 32))) (select input.dst.llvm-mem ?x187))))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv2 32))) ?x140))))
 (let ((?x295 (select input.dst.llvm-mem smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0)))
 (let ((?x300 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv3 32)))))
 (let (($x213 (axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 input.spec-%var-l-0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 false smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 input.dst.llvm-%l (concat ?x65 (concat ?x55 (concat ?x300 ?x295))) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 ?x53 ?x303 false)))
 (let (($x61 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x46 (=> $x61 $x213)))
 (let (($x396 (= $x61 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x339 (= false false)))
 (let (($x51 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x73 (=> $x51 $x339)))
 (let (($x372 (= $x51 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x373 (and $x372 $x73)))
 (let (($x392 (and $x373 $x396)))
 (let (($x151 (and $x392 $x46)))
 (let (($x137 (= $x151 true)))
 (let (($x56 (= $x137 true)))
 (let ((?x183 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x302 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x196 (concat ?x302 (concat ?x177 (concat ?x175 ?x183)))))
 (let (($x243 (= ?x196 input.dst.llvm-%l)))
 (let (($x75 (= $x243 true)))
 (let (($x133 (= $x75 true)))
 (let (($x210 (= input.dst.llvm-%l ?x196)))
 (let ((?x179 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x181 (= (_ bv0 32) ?x179)))
 (let ((?x91 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (and $x95 $x19)))
 (let (($x185 (and $x222 $x181)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x178 (and (and (and $x106 $x93) $x185) $x210)))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x66 (concat ?x31 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x329 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x330 (concat ?x329 (concat ?x236 ?x66))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x330 (_ bv1 32))) (select input.dst.llvm-mem ?x330))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x330 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x330 (_ bv2 32))) ?x96))))
 (let (($x97 (= input.spec-%var-l-0.2.1.2.0 ?x107)))
 (let (($x108 (and $x97 true)))
 (let (($x218 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x22 (=> $x218 $x108)))
 (let (($x361 (= $x218 (bvuge (ite (= (_ bv0 32) ?x330) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x35 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x263 (=> $x35 $x339)))
 (let (($x321 (= $x35 (= (ite (= (_ bv0 32) ?x330) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x252 (and $x321 $x263)))
 (let (($x366 (and $x252 $x361)))
 (let (($x139 (and $x366 $x22)))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x39)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x266)))
 (let (($x385 (= input.spec-%var-l-0.2.0 ?x260)))
 (let (($x103 (and $x385 $x139)))
 (let (($x88 (=> $x61 $x103)))
 (let (($x105 (and $x392 $x88)))
 (let (($x195 (and $x105 $x178)))
 (let (($x205 (= $x195 true)))
 (let (($x206 (= $x205 true)))
 (let (($x232 (= $x206 true)))
 (let (($x288 (= $x106 true)))
 (let (($x124 (= $x288 true)))
 (let (($x135 (= $x124 true)))
 (let (($x235 (and $x135 $x232)))
 (let (($x164 (and $x235 $x133)))
 (let (($x275 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x290 (and $x275 true)))
 (let (($x99 (=> $x218 $x290)))
 (let (($x327 (= $x218 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x63 (= $x35 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x292 (and $x63 $x263)))
 (let (($x9 (and $x292 $x327)))
 (let (($x109 (and $x9 $x99)))
 (let (($x246 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x352 (and $x246 $x109)))
 (let (($x59 (=> $x61 $x352)))
 (let (($x265 (= $x61 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x94 (= $x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x259 (and $x94 $x73)))
 (let (($x332 (and $x259 $x265)))
 (let (($x82 (and $x332 $x59)))
 (let (($x172 (and $x82 $x164)))
 (let (($x308 (=> $x172 $x56)))
 (not $x308))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool) Bool)
(declare-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x303 (ite (= (_ bv0 32) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x187 (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv4 32))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv1 32))) (select input.dst.llvm-mem ?x187))))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv2 32))) ?x140))))
 (let ((?x295 (select input.dst.llvm-mem smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0)))
 (let ((?x300 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv3 32)))))
 (let (($x213 (axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 input.spec-%var-l-0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 false smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 input.dst.llvm-%l (concat ?x65 (concat ?x55 (concat ?x300 ?x295))) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 ?x53 ?x303 false)))
 (let (($x61 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x46 (=> $x61 $x213)))
 (let (($x396 (= $x61 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x339 (= false false)))
 (let (($x51 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x73 (=> $x51 $x339)))
 (let (($x372 (= $x51 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x373 (and $x372 $x73)))
 (let (($x392 (and $x373 $x396)))
 (let (($x151 (and $x392 $x46)))
 (let (($x137 (= $x151 true)))
 (let (($x56 (= $x137 true)))
 (let ((?x183 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x302 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x196 (concat ?x302 (concat ?x177 (concat ?x175 ?x183)))))
 (let (($x243 (= ?x196 input.dst.llvm-%l)))
 (let (($x75 (= $x243 true)))
 (let (($x133 (= $x75 true)))
 (let (($x210 (= input.dst.llvm-%l ?x196)))
 (let ((?x179 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x181 (= (_ bv0 32) ?x179)))
 (let ((?x91 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (and $x95 $x19)))
 (let (($x185 (and $x222 $x181)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x178 (and (and (and $x106 $x93) $x185) $x210)))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x66 (concat ?x31 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x329 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x330 (concat ?x329 (concat ?x236 ?x66))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x330 (_ bv1 32))) (select input.dst.llvm-mem ?x330))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x330 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x330 (_ bv2 32))) ?x96))))
 (let (($x97 (= input.spec-%var-l-0.2.1.2.0 ?x107)))
 (let (($x108 (and $x97 true)))
 (let (($x218 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x22 (=> $x218 $x108)))
 (let (($x361 (= $x218 (bvuge (ite (= (_ bv0 32) ?x330) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x35 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x263 (=> $x35 $x339)))
 (let (($x321 (= $x35 (= (ite (= (_ bv0 32) ?x330) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x252 (and $x321 $x263)))
 (let (($x366 (and $x252 $x361)))
 (let (($x139 (and $x366 $x22)))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x39)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x266)))
 (let (($x385 (= input.spec-%var-l-0.2.0 ?x260)))
 (let (($x103 (and $x385 $x139)))
 (let (($x88 (=> $x61 $x103)))
 (let (($x105 (and $x392 $x88)))
 (let (($x195 (and $x105 $x178)))
 (let (($x205 (= $x195 true)))
 (let (($x206 (= $x205 true)))
 (let (($x232 (= $x206 true)))
 (let (($x288 (= $x106 true)))
 (let (($x124 (= $x288 true)))
 (let (($x135 (= $x124 true)))
 (let (($x235 (and $x135 $x232)))
 (let (($x164 (and $x235 $x133)))
 (let (($x275 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x290 (and $x275 true)))
 (let (($x99 (=> $x218 $x290)))
 (let (($x327 (= $x218 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x63 (= $x35 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x292 (and $x63 $x263)))
 (let (($x9 (and $x292 $x327)))
 (let (($x109 (and $x9 $x99)))
 (let (($x246 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x352 (and $x246 $x109)))
 (let (($x59 (=> $x61 $x352)))
 (let (($x265 (= $x61 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x94 (= $x51 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x259 (and $x94 $x73)))
 (let (($x332 (and $x259 $x265)))
 (let (($x82 (and $x332 $x59)))
 (let (($x172 (and $x82 $x164)))
 (let (($x308 (=> $x172 $x56)))
 (not $x308))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 #b00000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10100000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 @fun_54)
(= input.dst.llvm-mem @fun_51)
(function @fun_54
 (type
  (FunType14 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
   (_ BitVec 32) (_ BitVec 32) Bool Bool))
 (=
  (@fun_54 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000
   #b00000000000000000000000000000000 #b00000000000000000000000000000000 false #b11000000000000000000000000000000 #b10000000000000000000000000000000
   #b00000000000000000000000000000000 #b11000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000001 false)
  false)
 (default true))
(function @fun_51
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_51 #b10100000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((BOUND_VARIABLE_7632 (_ BitVec 32)) (BOUND_VARIABLE_7633 (_ BitVec 32)) (BOUND_VARIABLE_7634 (_ BitVec 32)) (BOUND_VARIABLE_7635 (_ BitVec 32)) (BOUND_VARIABLE_7636 (_ BitVec 32)) (BOUND_VARIABLE_7637 (_ BitVec 32)) (BOUND_VARIABLE_7638 Bool) (BOUND_VARIABLE_7639 (_ BitVec 32)) (BOUND_VARIABLE_7640 (_ BitVec 32)) (BOUND_VARIABLE_7641 (_ BitVec 32)) (BOUND_VARIABLE_7642 (_ BitVec 32)) (BOUND_VARIABLE_7643 (_ BitVec 32)) (BOUND_VARIABLE_7644 (_ BitVec 32)) (BOUND_VARIABLE_7645 Bool)) Bool false)
(define-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv0 32) (_ bv16 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv16 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv65536 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv4 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32)
    #xfffffffd)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x20000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xe8)
                                #x00000007
                                #xff)
                         #xffffffee
                         #x68)
                  #x00000006
                  #xff)))
  (store a!1 #x00000005 #xff)))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xe8e8e8e8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #xe8e8e8e8)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xe8e8e8e8)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #xe8e8e8e8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffffffe8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((x!0
    (_ BitVec 32))
   (x!1 (_ BitVec 32))
   (x!2 (_ BitVec 32))
   (x!3 (_ BitVec 32))
   (x!4 (_ BitVec 32))
   (x!5 (_ BitVec 32))
   (x!6 Bool)
   (x!7 (_ BitVec 32))
   (x!8 (_ BitVec 32))
   (x!9 (_ BitVec 32))
   (x!10 (_ BitVec 32))
   (x!11 (_ BitVec 32))
   (x!12 (_ BitVec 32))
   (x!13 Bool)) Bool
    (ite (and (= x!0 #x00000000)
              (= x!1 #x00000000)
              (= x!2 #x00000000)
              (= x!3 #x00000000)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 false)
              (= x!7 #xfffffffd)
              (= x!8 #xffffffe8)
              (= x!9 #xe8e8e8e8)
              (= x!10 #xfffffffd)
              (= x!11 #xe8e8e8e8)
              (= x!12 #x00000001)
              (= x!13 false))
      false
      false))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x168 (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv4 32))))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x138))))
 (let ((?x228 (select input.dst.llvm-mem smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv1 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv2 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv3 32)))))
 (let ((?x136 (concat ?x81 (concat ?x150 (concat ?x255 ?x228)))))
 (let ((?x254 (ite (= (_ bv0 32) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x391 (concat ?x437 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x389 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x388 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x397 (concat ?x388 (concat ?x389 ?x391))))
 (let (($x463 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x397 ?x254 false ?x136 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x200)))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x409)))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x411)))
 (let (($x426 (= input.spec-%var-l-0.2.0 ?x430)))
 (let (($x250 (and $x426 $x463)))
 (let (($x263 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x249 (=> $x263 $x250)))
 (let (($x48 (= $x263 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x291 (= false false)))
 (let (($x61 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x242 (=> $x61 $x291)))
 (let (($x72 (= $x61 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x142 (and $x72 $x242)))
 (let (($x303 (and $x142 $x48)))
 (let (($x223 (and $x303 $x249)))
 (let (($x227 (= $x223 true)))
 (let (($x233 (= $x227 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x202 (concat ?x162 (concat ?x161 ?x155)))))
 (let (($x10 (= ?x201 input.dst.llvm-%l)))
 (let (($x114 (= $x10 true)))
 (let (($x225 (= $x114 true)))
 (let (($x25 (= input.dst.llvm-%l ?x201)))
 (let ((?x354 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x354)))
 (let ((?x364 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x355 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x364)))
 (let (($x351 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x344 (and $x351 $x355)))
 (let (($x358 (and $x344 $x268)))
 (let (($x359 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x116 (and (and (and $x160 $x359) $x358) $x25)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x397 (_ bv4 32))))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv4 32)) (_ bv2 32))) ?x90)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv4 32)) (_ bv3 32))) ?x306)))
 (let (($x209 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x144 ?x254 false ?x136 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x200)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x85))))
 (let (($x368 (= input.spec-%var-l-0.2.1.2.0 ?x336)))
 (let (($x356 (and $x368 $x209)))
 (let (($x170 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x113 (=> $x170 $x356)))
 (let (($x267 (= $x170 (bvuge (ite (= (_ bv0 32) ?x397) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x432 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x428 (=> $x432 $x291)))
 (let (($x381 (= $x432 (= (ite (= (_ bv0 32) ?x397) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x382 (and $x381 $x428)))
 (let (($x24 (and $x382 $x267)))
 (let (($x125 (and $x24 $x113)))
 (let (($x152 (and $x426 $x125)))
 (let (($x130 (=> $x263 $x152)))
 (let (($x362 (and $x303 $x130)))
 (let (($x186 (and $x362 $x116)))
 (let (($x245 (= $x186 true)))
 (let (($x371 (= $x245 true)))
 (let (($x188 (= $x371 true)))
 (let (($x78 (= $x160 true)))
 (let (($x96 (= $x78 true)))
 (let (($x87 (= $x96 true)))
 (let (($x5 (and $x87 $x188)))
 (let (($x62 (and $x5 $x225)))
 (let (($x252 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.spec-%tmpvar-0.E0%0%d.2.1.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 false smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1)))
 (let (($x260 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x236 (and $x260 $x252)))
 (let (($x58 (=> $x170 $x236)))
 (let (($x253 (= $x170 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x135 (= $x432 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x395 (and $x135 $x428)))
 (let (($x289 (and $x395 $x253)))
 (let (($x31 (and $x289 $x58)))
 (let (($x352 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x57 (and $x352 $x31)))
 (let (($x330 (=> $x263 $x57)))
 (let (($x218 (= $x263 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x332 (= $x61 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x246 (and $x332 $x242)))
 (let (($x261 (and $x246 $x218)))
 (let (($x86 (and $x261 $x330)))
 (let (($x122 (and $x86 $x62)))
 (let (($x468 (=> $x122 $x233)))
 (not $x468)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x168 (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv4 32))))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x138))))
 (let ((?x228 (select input.dst.llvm-mem smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv1 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv2 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv3 32)))))
 (let ((?x136 (concat ?x81 (concat ?x150 (concat ?x255 ?x228)))))
 (let ((?x254 (ite (= (_ bv0 32) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x437 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x391 (concat ?x437 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x389 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x388 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x397 (concat ?x388 (concat ?x389 ?x391))))
 (let (($x463 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x397 ?x254 false ?x136 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x200)))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x409)))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x411)))
 (let (($x426 (= input.spec-%var-l-0.2.0 ?x430)))
 (let (($x250 (and $x426 $x463)))
 (let (($x263 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x249 (=> $x263 $x250)))
 (let (($x48 (= $x263 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x291 (= false false)))
 (let (($x61 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x242 (=> $x61 $x291)))
 (let (($x72 (= $x61 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x142 (and $x72 $x242)))
 (let (($x303 (and $x142 $x48)))
 (let (($x223 (and $x303 $x249)))
 (let (($x227 (= $x223 true)))
 (let (($x233 (= $x227 true)))
 (let ((?x155 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x202 (concat ?x162 (concat ?x161 ?x155)))))
 (let (($x10 (= ?x201 input.dst.llvm-%l)))
 (let (($x114 (= $x10 true)))
 (let (($x225 (= $x114 true)))
 (let (($x25 (= input.dst.llvm-%l ?x201)))
 (let ((?x354 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x354)))
 (let ((?x364 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x355 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x364)))
 (let (($x351 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x344 (and $x351 $x355)))
 (let (($x358 (and $x344 $x268)))
 (let (($x359 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x116 (and (and (and $x160 $x359) $x358) $x25)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x397 (_ bv4 32))))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv4 32)) (_ bv2 32))) ?x90)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv4 32)) (_ bv3 32))) ?x306)))
 (let (($x209 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x144 ?x254 false ?x136 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x200)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x85))))
 (let (($x368 (= input.spec-%var-l-0.2.1.2.0 ?x336)))
 (let (($x356 (and $x368 $x209)))
 (let (($x170 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x113 (=> $x170 $x356)))
 (let (($x267 (= $x170 (bvuge (ite (= (_ bv0 32) ?x397) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x432 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x428 (=> $x432 $x291)))
 (let (($x381 (= $x432 (= (ite (= (_ bv0 32) ?x397) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x382 (and $x381 $x428)))
 (let (($x24 (and $x382 $x267)))
 (let (($x125 (and $x24 $x113)))
 (let (($x152 (and $x426 $x125)))
 (let (($x130 (=> $x263 $x152)))
 (let (($x362 (and $x303 $x130)))
 (let (($x186 (and $x362 $x116)))
 (let (($x245 (= $x186 true)))
 (let (($x371 (= $x245 true)))
 (let (($x188 (= $x371 true)))
 (let (($x78 (= $x160 true)))
 (let (($x96 (= $x78 true)))
 (let (($x87 (= $x96 true)))
 (let (($x5 (and $x87 $x188)))
 (let (($x62 (and $x5 $x225)))
 (let (($x252 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.spec-%tmpvar-0.E0%0%d.2.1.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 false smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1)))
 (let (($x260 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x236 (and $x260 $x252)))
 (let (($x58 (=> $x170 $x236)))
 (let (($x253 (= $x170 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x135 (= $x432 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x395 (and $x135 $x428)))
 (let (($x289 (and $x395 $x253)))
 (let (($x31 (and $x289 $x58)))
 (let (($x352 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x57 (and $x352 $x31)))
 (let (($x330 (=> $x263 $x57)))
 (let (($x218 (= $x263 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x332 (= $x61 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x246 (and $x332 $x242)))
 (let (($x261 (and $x246 $x218)))
 (let (($x86 (and $x261 $x330)))
 (let (($x122 (and $x86 $x62)))
 (let (($x468 (=> $x122 $x233)))
 (not $x468)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10100000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 #b00000000000000000000000000000000)
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f @fun_63)
(= input.dst.llvm-mem @fun_59)
(function @fun_63
 (type
  (FunType14 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool
   (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool))
 (=
  (@fun_63 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000 false #b00000000000000000000000000000000
   #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b11000000000000000000000000000000 #b00000000000000000000000000000000
   #b00000000000000000000000000000000 false #b00000000000000000000000000000000 #b11000000000000000000000000000000 #b00000000000000000000000000000000)
  false)
 (=
  (@fun_63 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000 false #b00000000000000000000000000000000
   #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b11000000000000000000000000000000 #b00000000000000000000000000000000
   #b00000000000000000000000000000001 false #b00000000000000000000000000000000 #b11000000000000000000000000000000 #b00000000000000000000000000000000)
  false)
 (default true))
(function @fun_59
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_59 #b10100000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((BOUND_VARIABLE_7740 (_ BitVec 32)) (BOUND_VARIABLE_7741 (_ BitVec 32)) (BOUND_VARIABLE_7742 (_ BitVec 32)) (BOUND_VARIABLE_7743 Bool) (BOUND_VARIABLE_7744 (_ BitVec 32)) (BOUND_VARIABLE_7745 (_ BitVec 32)) (BOUND_VARIABLE_7746 (_ BitVec 32)) (BOUND_VARIABLE_7747 (_ BitVec 32)) (BOUND_VARIABLE_7748 (_ BitVec 32)) (BOUND_VARIABLE_7749 (_ BitVec 32)) (BOUND_VARIABLE_7750 Bool) (BOUND_VARIABLE_7751 (_ BitVec 32)) (BOUND_VARIABLE_7752 (_ BitVec 32)) (BOUND_VARIABLE_7753 (_ BitVec 32))) Bool false)
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv0 32) (_ bv16 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv16 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
(define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv4 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00010000)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32)
    #x81010181)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #xa1f5e3cf)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32)
    #x00010003)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32)
    #x81010101)
  (define-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x81)
                                #x81010105
                                #x01)
                         #x81010106
                         #x01)
                  #x00010003
                  #x00)))
(let ((a!2 (store (store (store (store a!1 #x00010005 #x01) #x00010001 #x00)
                         #x00010009
                         #x01)
                  #x00010003
                  #x00)))
(let ((a!3 (store (store (store (store a!2 #x00010005 #x01) #x00010006 #x01)
                         #x00010008
                         #x01)
                  #x81010107
                  #x01)))
(let ((a!4 (store (store (store (store a!3 #x00010006 #x01) #x00010004 #x01)
                         #x00010004
                         #x01)
                  #x00010000
                  #x00)))
  (store a!4 #x00010002 #x01))))))
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x81818181)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x81818181)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00010000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00010003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00010000)
  (define-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((x!0
    (_ BitVec 32))
   (x!1 (_ BitVec 32))
   (x!2 (_ BitVec 32))
   (x!3 Bool)
   (x!4 (_ BitVec 32))
   (x!5 (_ BitVec 32))
   (x!6 (_ BitVec 32))
   (x!7 (_ BitVec 32))
   (x!8 (_ BitVec 32))
   (x!9 (_ BitVec 32))
   (x!10 Bool)
   (x!11 (_ BitVec 32))
   (x!12 (_ BitVec 32))
   (x!13 (_ BitVec 32))) Bool
    (ite (and (= x!0 #x00000000)
              (= x!1 #x00000000)
              (= x!2 #x00000000)
              (= x!3 false)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 #x00000000)
              (= x!7 #x00010003)
              (= x!8 #x81010101)
              (= x!9 #x00000001)
              (= x!10 false)
              (= x!11 #x01010100)
              (= x!12 #x00010003)
              (= x!13 #x81010181))
      true
    (ite (and (= x!0 #x00000000)
              (= x!1 #xffffffff)
              (= x!2 #x00000000)
              (= x!3 false)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 #x00000000)
              (= x!7 #x00010003)
              (= x!8 #x81010101)
              (= x!9 #x00000001)
              (= x!10 false)
              (= x!11 #x01010100)
              (= x!12 #x00010003)
              (= x!13 #x81010181))
      false
      false)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool) Bool)
(declare-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x349 (ite (= (_ bv0 32) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x369 (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x369 (_ bv1 32))) (select input.dst.llvm-mem ?x369))))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd ?x369 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x369 (_ bv2 32))) ?x224))))
 (let ((?x279 (select input.dst.llvm-mem smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0)))
 (let ((?x477 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv1 32)))))
 (let ((?x444 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv3 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x232 (concat ?x133 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x51 (concat ?x313 (concat ?x206 ?x232))))
 (let (($x337 (axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 input.spec-%var-l-0.2.1 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 false smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 ?x51 (concat ?x34 (concat ?x444 (concat ?x477 ?x279))) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 ?x319 ?x349 false)))
 (let (($x247 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x379 (=> $x247 $x337)))
 (let (($x214 (= $x247 (bvuge (ite (= (_ bv0 32) ?x51) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x99 (= false false)))
 (let (($x330 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x31 (=> $x330 $x99)))
 (let (($x203 (= $x330 (= (ite (= (_ bv0 32) ?x51) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x55 (and $x203 $x31)))
 (let (($x215 (and $x55 $x214)))
 (let (($x199 (and $x215 $x379)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x233)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x231)))
 (let (($x97 (= input.spec-%var-l-0.2.0 ?x107)))
 (let (($x335 (and $x97 $x199)))
 (let (($x428 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x271 (=> $x428 $x335)))
 (let (($x83 (= $x428 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x263 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x109 (=> $x263 $x99)))
 (let (($x356 (= $x263 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x113 (and $x356 $x109)))
 (let (($x359 (and $x113 $x83)))
 (let (($x189 (and $x359 $x271)))
 (let (($x258 (= $x189 true)))
 (let (($x30 (= $x258 true)))
 (let ((?x276 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x272 (concat ?x274 (concat ?x282 (concat ?x293 ?x276)))))
 (let (($x157 (= ?x272 input.dst.llvm-%l)))
 (let (($x14 (= $x157 true)))
 (let (($x193 (= $x14 true)))
 (let (($x128 (= input.dst.llvm-%l ?x272)))
 (let ((?x413 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x452 (= (_ bv0 32) ?x413)))
 (let ((?x399 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x429 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x399)))
 (let (($x402 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x401 (and $x402 $x429)))
 (let (($x273 (and $x401 $x452)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x426 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x52 (and (and (and $x426 $x74) $x273) $x128)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x51 (_ bv1 32))) (select input.dst.llvm-mem ?x51))))
 (let ((?x408 (concat (select input.dst.llvm-mem (bvadd ?x51 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x51 (_ bv2 32))) ?x398))))
 (let (($x422 (= input.spec-%var-l-0.2.1.2.0 ?x408)))
 (let (($x194 (and $x422 true)))
 (let (($x407 (=> $x247 $x194)))
 (let (($x416 (and $x215 $x407)))
 (let (($x82 (and $x97 $x416)))
 (let (($x420 (=> $x428 $x82)))
 (let (($x59 (and $x359 $x420)))
 (let (($x287 (and $x59 $x52)))
 (let (($x198 (= $x287 true)))
 (let (($x286 (= $x198 true)))
 (let (($x163 (= $x286 true)))
 (let (($x103 (= $x426 true)))
 (let (($x435 (= $x103 true)))
 (let (($x393 (= $x435 true)))
 (let (($x70 (and $x393 $x163)))
 (let (($x396 (and $x70 $x193)))
 (let (($x19 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x182 (and $x19 true)))
 (let (($x414 (=> $x247 $x182)))
 (let (($x87 (= $x247 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x58 (= $x330 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x92 (and $x58 $x31)))
 (let (($x191 (and $x92 $x87)))
 (let (($x415 (and $x191 $x414)))
 (let (($x331 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x216 (and $x331 $x415)))
 (let (($x207 (=> $x428 $x216)))
 (let (($x170 (= $x428 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x261 (= $x263 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x352 (and $x261 $x109)))
 (let (($x47 (and $x352 $x170)))
 (let (($x219 (and $x47 $x207)))
 (let (($x392 (and $x219 $x396)))
 (let (($x8 (=> $x392 $x30)))
 (not $x8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool) Bool)
(declare-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x349 (ite (= (_ bv0 32) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x369 (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x369 (_ bv1 32))) (select input.dst.llvm-mem ?x369))))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd ?x369 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x369 (_ bv2 32))) ?x224))))
 (let ((?x279 (select input.dst.llvm-mem smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0)))
 (let ((?x477 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv1 32)))))
 (let ((?x444 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 (_ bv3 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x232 (concat ?x133 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x51 (concat ?x313 (concat ?x206 ?x232))))
 (let (($x337 (axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 input.spec-%var-l-0.2.1 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 false smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 ?x51 (concat ?x34 (concat ?x444 (concat ?x477 ?x279))) smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 ?x319 ?x349 false)))
 (let (($x247 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x379 (=> $x247 $x337)))
 (let (($x214 (= $x247 (bvuge (ite (= (_ bv0 32) ?x51) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x99 (= false false)))
 (let (($x330 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x31 (=> $x330 $x99)))
 (let (($x203 (= $x330 (= (ite (= (_ bv0 32) ?x51) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x55 (and $x203 $x31)))
 (let (($x215 (and $x55 $x214)))
 (let (($x199 (and $x215 $x379)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x233)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x231)))
 (let (($x97 (= input.spec-%var-l-0.2.0 ?x107)))
 (let (($x335 (and $x97 $x199)))
 (let (($x428 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x271 (=> $x428 $x335)))
 (let (($x83 (= $x428 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x263 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x109 (=> $x263 $x99)))
 (let (($x356 (= $x263 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x113 (and $x356 $x109)))
 (let (($x359 (and $x113 $x83)))
 (let (($x189 (and $x359 $x271)))
 (let (($x258 (= $x189 true)))
 (let (($x30 (= $x258 true)))
 (let ((?x276 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x272 (concat ?x274 (concat ?x282 (concat ?x293 ?x276)))))
 (let (($x157 (= ?x272 input.dst.llvm-%l)))
 (let (($x14 (= $x157 true)))
 (let (($x193 (= $x14 true)))
 (let (($x128 (= input.dst.llvm-%l ?x272)))
 (let ((?x413 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x452 (= (_ bv0 32) ?x413)))
 (let ((?x399 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x429 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x399)))
 (let (($x402 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x401 (and $x402 $x429)))
 (let (($x273 (and $x401 $x452)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x426 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x52 (and (and (and $x426 $x74) $x273) $x128)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x51 (_ bv1 32))) (select input.dst.llvm-mem ?x51))))
 (let ((?x408 (concat (select input.dst.llvm-mem (bvadd ?x51 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x51 (_ bv2 32))) ?x398))))
 (let (($x422 (= input.spec-%var-l-0.2.1.2.0 ?x408)))
 (let (($x194 (and $x422 true)))
 (let (($x407 (=> $x247 $x194)))
 (let (($x416 (and $x215 $x407)))
 (let (($x82 (and $x97 $x416)))
 (let (($x420 (=> $x428 $x82)))
 (let (($x59 (and $x359 $x420)))
 (let (($x287 (and $x59 $x52)))
 (let (($x198 (= $x287 true)))
 (let (($x286 (= $x198 true)))
 (let (($x163 (= $x286 true)))
 (let (($x103 (= $x426 true)))
 (let (($x435 (= $x103 true)))
 (let (($x393 (= $x435 true)))
 (let (($x70 (and $x393 $x163)))
 (let (($x396 (and $x70 $x193)))
 (let (($x19 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x182 (and $x19 true)))
 (let (($x414 (=> $x247 $x182)))
 (let (($x87 (= $x247 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x58 (= $x330 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x92 (and $x58 $x31)))
 (let (($x191 (and $x92 $x87)))
 (let (($x415 (and $x191 $x414)))
 (let (($x331 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x216 (and $x331 $x415)))
 (let (($x207 (=> $x428 $x216)))
 (let (($x170 (= $x428 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x261 (= $x263 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x352 (and $x261 $x109)))
 (let (($x47 (and $x352 $x170)))
 (let (($x219 (and $x47 $x207)))
 (let (($x392 (and $x219 $x396)))
 (let (($x8 (=> $x392 $x30)))
 (not $x8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 #b00000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 #b00000000000000000000000000000000)
(= smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
(= input.spec-%var-l-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.E0%0%d.0 #b10000000000000000000000000000000)
(= axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 @fun_46)
(= input.dst.llvm-mem @fun_43)
(function @fun_46
 (type
  (FunType14 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
   (_ BitVec 32) (_ BitVec 32) Bool Bool))
 (=
  (@fun_46 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000000
   #b00000000000000000000000000000000 #b00000000000000000000000000000000 false #b11000000000000000000000000000000 #b10000000000000000000000000000000
   #b00000000000000000000000000000000 #b11000000000000000000000000000000 #b00000000000000000000000000000000 #b00000000000000000000000000000001 false)
  false)
 (default true))
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b00000000000000000000000000000011) #b10000000)
 (= (@fun_43 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((BOUND_VARIABLE_7320 (_ BitVec 32)) (BOUND_VARIABLE_7321 (_ BitVec 32)) (BOUND_VARIABLE_7322 (_ BitVec 32)) (BOUND_VARIABLE_7323 (_ BitVec 32)) (BOUND_VARIABLE_7324 (_ BitVec 32)) (BOUND_VARIABLE_7325 (_ BitVec 32)) (BOUND_VARIABLE_7326 Bool) (BOUND_VARIABLE_7327 (_ BitVec 32)) (BOUND_VARIABLE_7328 (_ BitVec 32)) (BOUND_VARIABLE_7329 (_ BitVec 32)) (BOUND_VARIABLE_7330 (_ BitVec 32)) (BOUND_VARIABLE_7331 (_ BitVec 32)) (BOUND_VARIABLE_7332 (_ BitVec 32)) (BOUND_VARIABLE_7333 Bool)) Bool false)
(define-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv3 32) (_ bv128 8)) (_ bv2147483654 32) (_ bv1 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2147483648 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32) (_ bv0 32))
(define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv33554432 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32) (_ bv8192 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32) (_ bv536870912 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x77000004)
  (define-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun smt-tree-norm-var-c87016e1e560205e17bdcbca8cf1faa7-0 () (_ BitVec 32)
    #x77000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #xdef15663)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun smt-tree-norm-var-246ae16f29abdc253e83fd44358f23b-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x77)
                                #x77000003
                                #x00)
                         #x77000005
                         #x00)
                  #x77000006
                  #x00)))
(let ((a!2 (store (store (store (store a!1 #x77000002 #x00) #x77000005 #x00)
                         #x77000004
                         #x00)
                  #x77000004
                  #x00)))
(let ((a!3 (store (store (store (store a!2 #x77000006 #x00) #x77000004 #x00)
                         #x77000005
                         #x00)
                  #x77000006
                  #x00)))
  (store (store a!3 #x77000000 #x00) #x77000001 #x00)))))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x77000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x77000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x77000004)
  (define-fun axpred-spec-indeq214.246ae16f29abdc253e83fd44358f23b.c87016e1e560205e17bdcbca8cf1faa7 ((x!0
    (_ BitVec 32))
   (x!1 (_ BitVec 32))
   (x!2 (_ BitVec 32))
   (x!3 (_ BitVec 32))
   (x!4 (_ BitVec 32))
   (x!5 (_ BitVec 32))
   (x!6 Bool)
   (x!7 (_ BitVec 32))
   (x!8 (_ BitVec 32))
   (x!9 (_ BitVec 32))
   (x!10 (_ BitVec 32))
   (x!11 (_ BitVec 32))
   (x!12 (_ BitVec 32))
   (x!13 Bool)) Bool
    (ite (and (= x!0 #x00000000)
              (= x!1 #x00000000)
              (= x!2 #x00000000)
              (= x!3 #x00000000)
              (= x!4 #x00000000)
              (= x!5 #x00000000)
              (= x!6 false)
              (= x!7 #x77000000)
              (= x!8 #x77000000)
              (= x!9 #x00000000)
              (= x!10 #x77000000)
              (= x!11 #x77000000)
              (= x!12 #x00000001)
              (= x!13 false))
      false
      false))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x270 (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv4 32))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x333))))
 (let ((?x108 (select input.dst.llvm-mem smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv3 32)))))
 (let ((?x112 (ite (= (_ bv0 32) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x25 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x351 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x364 (concat ?x351 (concat ?x192 ?x245))))
 (let ((?x236 (bvadd ?x364 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x303))))
 (let (($x11 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x326 ?x112 false (concat ?x252 (concat ?x242 (concat ?x13 ?x108))) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x348)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x204))))
 (let (($x167 (= input.spec-%var-l-0.2.1.2.0 ?x160)))
 (let (($x72 (and $x167 $x11)))
 (let (($x377 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x142 (=> $x377 $x72)))
 (let (($x195 (= $x377 (bvuge (ite (= (_ bv0 32) ?x364) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x334 (= false false)))
 (let (($x209 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x209 $x334)))
 (let (($x342 (= $x209 (= (ite (= (_ bv0 32) ?x364) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x201 (and $x342 $x15)))
 (let (($x205 (and $x201 $x195)))
 (let (($x120 (and $x205 $x142)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x85)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x325)))
 (let (($x307 (= input.spec-%var-l-0.2.0 ?x312)))
 (let (($x240 (and $x307 $x120)))
 (let (($x31 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x374 (=> $x31 $x240)))
 (let (($x346 (= $x31 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x428 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x20 (=> $x428 $x334)))
 (let (($x345 (= $x428 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x341 (and $x345 $x20)))
 (let (($x349 (and $x341 $x346)))
 (let (($x151 (and $x349 $x374)))
 (let (($x266 (= $x151 true)))
 (let (($x288 (= $x266 true)))
 (let ((?x76 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x244 (concat ?x18 (concat ?x77 (concat ?x110 ?x76)))))
 (let (($x101 (= ?x244 input.dst.llvm-%l)))
 (let (($x275 (= $x101 true)))
 (let (($x290 (= $x275 true)))
 (let (($x153 (= input.dst.llvm-%l ?x244)))
 (let ((?x308 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x308)))
 (let ((?x131 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x17 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x131)))
 (let (($x212 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x212 $x17)))
 (let (($x340 (and $x40 $x56)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x410 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x360 (and (and (and $x410 $x6) $x340) $x153)))
 (let (($x350 (and $x151 $x360)))
 (let (($x73 (= $x350 true)))
 (let (($x259 (= $x73 true)))
 (let (($x234 (= $x259 true)))
 (let (($x419 (= $x410 true)))
 (let (($x398 (= $x419 true)))
 (let (($x400 (= $x398 true)))
 (let (($x63 (and $x400 $x234)))
 (let (($x104 (and $x63 $x290)))
 (let (($x55 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.spec-%tmpvar-0.E0%0%d.2.1.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 false smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1)))
 (let (($x107 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x206 (and $x107 $x55)))
 (let (($x75 (=> $x377 $x206)))
 (let (($x119 (= $x377 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x393 (= $x209 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x237 (and $x393 $x15)))
 (let (($x185 (and $x237 $x119)))
 (let (($x133 (and $x185 $x75)))
 (let (($x216 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x304 (and $x216 $x133)))
 (let (($x51 (=> $x31 $x304)))
 (let (($x247 (= $x31 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x47 (= $x428 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x331 (and $x47 $x20)))
 (let (($x141 (and $x331 $x247)))
 (let (($x427 (and $x141 $x51)))
 (let (($x106 (and $x427 $x104)))
 (let (($x124 (=> $x106 $x288)))
 (not $x124))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 () (_ BitVec 32))
(declare-fun smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.E0%0%d.0 () (_ BitVec 32))
(assert
 (let ((?x270 (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv4 32))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x333))))
 (let ((?x108 (select input.dst.llvm-mem smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 (_ bv3 32)))))
 (let ((?x112 (ite (= (_ bv0 32) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0) (_ bv0 32) (_ bv1 32))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x25 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x351 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x364 (concat ?x351 (concat ?x192 ?x245))))
 (let ((?x236 (bvadd ?x364 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x303))))
 (let (($x11 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x326 ?x112 false (concat ?x252 (concat ?x242 (concat ?x13 ?x108))) smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 ?x348)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x204))))
 (let (($x167 (= input.spec-%var-l-0.2.1.2.0 ?x160)))
 (let (($x72 (and $x167 $x11)))
 (let (($x377 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x142 (=> $x377 $x72)))
 (let (($x195 (= $x377 (bvuge (ite (= (_ bv0 32) ?x364) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x334 (= false false)))
 (let (($x209 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x209 $x334)))
 (let (($x342 (= $x209 (= (ite (= (_ bv0 32) ?x364) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x201 (and $x342 $x15)))
 (let (($x205 (and $x201 $x195)))
 (let (($x120 (and $x205 $x142)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x85)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x325)))
 (let (($x307 (= input.spec-%var-l-0.2.0 ?x312)))
 (let (($x240 (and $x307 $x120)))
 (let (($x31 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x374 (=> $x31 $x240)))
 (let (($x346 (= $x31 (bvuge (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x428 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x20 (=> $x428 $x334)))
 (let (($x345 (= $x428 (= (ite (= (_ bv0 32) input.dst.llvm-%l) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x341 (and $x345 $x20)))
 (let (($x349 (and $x341 $x346)))
 (let (($x151 (and $x349 $x374)))
 (let (($x266 (= $x151 true)))
 (let (($x288 (= $x266 true)))
 (let ((?x76 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x244 (concat ?x18 (concat ?x77 (concat ?x110 ?x76)))))
 (let (($x101 (= ?x244 input.dst.llvm-%l)))
 (let (($x275 (= $x101 true)))
 (let (($x290 (= $x275 true)))
 (let (($x153 (= input.dst.llvm-%l ?x244)))
 (let ((?x308 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x308)))
 (let ((?x131 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x17 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x131)))
 (let (($x212 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x212 $x17)))
 (let (($x340 (and $x40 $x56)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x410 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x360 (and (and (and $x410 $x6) $x340) $x153)))
 (let (($x350 (and $x151 $x360)))
 (let (($x73 (= $x350 true)))
 (let (($x259 (= $x73 true)))
 (let (($x234 (= $x259 true)))
 (let (($x419 (= $x410 true)))
 (let (($x398 (= $x419 true)))
 (let (($x400 (= $x398 true)))
 (let (($x63 (and $x400 $x234)))
 (let (($x104 (and $x63 $x290)))
 (let (($x55 (axpred-spec-indeq144.91eae1b25334b9487b75f1d5888c4110.d651bd54c9782ee376c46d656fc483f smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 input.spec-%var-l-0.2.1.2.1 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.0 false smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0 smt-tree-norm-var-91eae1b25334b9487b75f1d5888c4110-0.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 input.spec-%tmpvar-0.E0%0%d.2.1.2.1 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.0 false smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0 smt-tree-norm-var-d651bd54c9782ee376c46d656fc483f-0.2.1)))
 (let (($x107 (= input.spec-%var-l-0.2.1.2.0 input.spec-%tmpvar-0.E0%0%d.2.1.2.0)))
 (let (($x206 (and $x107 $x55)))
 (let (($x75 (=> $x377 $x206)))
 (let (($x119 (= $x377 (bvuge input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv1 32)))))
 (let (($x393 (= $x209 (= input.spec-%tmpvar-0.E0%0%d.2.1.0 (_ bv0 32)))))
 (let (($x237 (and $x393 $x15)))
 (let (($x185 (and $x237 $x119)))
 (let (($x133 (and $x185 $x75)))
 (let (($x216 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.E0%0%d.2.0)))
 (let (($x304 (and $x216 $x133)))
 (let (($x51 (=> $x31 $x304)))
 (let (($x247 (= $x31 (bvuge input.spec-%tmpvar-0.E0%0%d.0 (_ bv1 32)))))
 (let (($x47 (= $x428 (= input.spec-%tmpvar-0.E0%0%d.0 (_ bv0 32)))))
 (let (($x331 (and $x47 $x20)))
 (let (($x141 (and $x331 $x247)))
 (let (($x427 (and $x141 $x51)))
 (let (($x106 (and $x427 $x104)))
 (let (($x124 (=> $x106 $x288)))
 (not $x124))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2285943/query
