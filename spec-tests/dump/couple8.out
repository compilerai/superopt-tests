argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=couple8.proof
argv[5] = --spec-iospecs=couple8.iospecs
argv[6] = couple8.spec
argv[7] = couple8.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2708090
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/repos/superopt-project/superopt-tests/spec-tests/couple8.c
argv[10] = -o
argv[11] = par_tmpdir/couple8.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/couple8.spec.etfg
argv[10] = par_tmpdir/couple8.c.bc
argv[11] = -o
argv[12] = par_tmpdir/couple8.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 78 time spent: 0:0:0 [0.000134s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 101 time spent: 0:0:0 [0.000171s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 935 time spent: 0:0:0 [0.005017s total; 0.000005 per start]
expr_simplify_solver: num_starts 86 time spent: 0:0:0 [0.011175s total; 0.000130 per start]
expr_simplify_syntactic: num_starts 86 time spent: 0:0:0 [0.013595s total; 0.000158 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.010646s total; 0.002661 per start]
expr_simplify_using_lhs_set_helper: num_starts 74 time spent: 0:0:0 [0.027470s total; 0.000371 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 241 time spent: 0:0:0 [0.027240s total; 0.000113 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 88 time spent: 0:0:0 [0.000377s total; 0.000004 per start]
expr_simplify_eq: num_starts 6 time spent: 0:0:0 [0.000076s total; 0.000013 per start]
expr_simplify_not: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_ite: num_starts 2 time spent: 0:0:0 [0.000265s total; 0.000132 per start]
canonicalize_expr_tree: num_starts 50 time spent: 0:0:0 [0.000921s total; 0.000018 per start]
expr_simplify_memalloc_using_memlabel: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010512s total; 0.002628 per start]
get_arithmetic_addsub_atoms: num_starts 77 time spent: 0:0:0 [0.000054s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 102 time spent: 0:0:0 [0.001283s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 614 time spent: 0:0:0 [0.000412s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2108 time spent: 0:0:0 [0.029456s total; 0.000014 per start]
expr_do_simplify_helper_cache: num_starts 2108 time spent: 0:0:0 [0.001444s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 18 time spent: 0:0:0 [0.000004s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 18 time spent: 0:0:0 [0.000096s total; 0.000005 per start]
array_constant_equals: num_starts 11 time spent: 0:0:0 [0.000027s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.088657s total; 0.001108 per start]
alias_val_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.030412s total; 0.000380 per start]
get_sprel_map_from_avail_exprs: num_starts 106 time spent: 0:0:0 [0.009205s total; 0.000087 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000117s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 160 time spent: 0:0:0 [0.006931s total; 0.000043 per start]
compute_simplified_loc_exprs_for_edge: num_starts 457 time spent: 0:0:0 [0.028813s total; 0.000063 per start]
compute_locs_definitely_written_on_edge: num_starts 160 time spent: 0:0:0 [0.000078s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 50 time spent: 0:0:0 [0.006315s total; 0.000126 per start]
edge_update_memlabel_map_for_mlvars: num_starts 80 time spent: 0:0:0 [0.001109s total; 0.000014 per start]
add_new_locs_based_on_edge: num_starts 80 time spent: 0:0:0 [0.022266s total; 0.000278 per start]
expand_locset_to_include_slots_for_memmask: num_starts 67 time spent: 0:0:0 [0.000205s total; 0.000003 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 8e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.1e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.7e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 3.1e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 3.3e-05s (num_starts 46; 0.0000s/start)
context_constructor.solver.: 4e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4e-05s (num_starts 47; 0.0000s/start)
context_constructor.: 4.8e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 5.2e-05s (num_starts 51; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 8.3e-05s (num_starts 2; 0.0000s/start)
main.3.: 8.8e-05s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000103s (num_starts 5; 0.0000s/start)
compute_sprel_relations.: 0.000109s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000115s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000117s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.00013s (num_starts 155; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000146s (num_starts 38; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000158s (num_starts 3; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000159s (num_starts 17; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000174s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000185s (num_starts 38; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.00021s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000229s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000232s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000306s (num_starts 53; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000476s (num_starts 80; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.00048s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000515s (num_starts 1; 0.0005s/start)
def_analysis::xfer_and_meet.: 0.000585s (num_starts 76; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000588s (num_starts 1; 0.0006s/start)
sp_version_relations_val_t::meet.: 0.000642s (num_starts 1170; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000674s (num_starts 1; 0.0007s/start)
populate_simplified_to_state.: 0.000793s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000801s (num_starts 1; 0.0008s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000808s (num_starts 1; 0.0008s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000904s (num_starts 80; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000979s (num_starts 64; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.001003s (num_starts 1; 0.0010s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001018s (num_starts 80; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.001039s (num_starts 53; 0.0000s/start)
populate_transitive_closure.: 0.001133s (num_starts 1; 0.0011s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001248s (num_starts 1; 0.0012s/start)
tfg::collect_assumes_around_edge.: 0.001271s (num_starts 101; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001456s (num_starts 1; 0.0015s/start)
compute_z3_expr.: 0.002094s (num_starts 48; 0.0000s/start)
query:convert_from_z3.: 0.002234s (num_starts 48; 0.0000s/start)
graph_visit_exprs.: 0.002239s (num_starts 4; 0.0006s/start)
create_closure_matrix.: 0.002376s (num_starts 105; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.002427s (num_starts 991; 0.0000s/start)
compute_lr_status_for_expr.: 0.00263s (num_starts 54; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.002659s (num_starts 46; 0.0001s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002676s (num_starts 1; 0.0027s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.002742s (num_starts 46; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002757s (num_starts 1; 0.0028s/start)
populate_dominator_and_postdominator_relations.: 0.003213s (num_starts 2; 0.0016s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.003548s (num_starts 1; 0.0035s/start)
query:convert_to_z3.: 0.004154s (num_starts 48; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.004258s (num_starts 61; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.004612s (num_starts 1; 0.0046s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.004617s (num_starts 1; 0.0046s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.004622s (num_starts 1; 0.0046s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.004627s (num_starts 1; 0.0046s/start)
tfg_constructor.src.spec.foo.: 0.004631s (num_starts 1; 0.0046s/start)
populate_simplified_assets.: 0.004663s (num_starts 6; 0.0008s/start)
graph_identify_back_edges.: 0.004841s (num_starts 5; 0.0010s/start)
graph_identify_natural_loops.: 0.005094s (num_starts 5; 0.0010s/start)
tfg::populate_loc_definedness.before_solve.: 0.005237s (num_starts 2; 0.0026s/start)
tfg::populate_loc_definedness.before_initialize.: 0.0056s (num_starts 2; 0.0028s/start)
tfg::populate_loc_definedness.: 0.005843s (num_starts 2; 0.0029s/start)
compute_new_lr_status_on_locs.: 0.006324s (num_starts 80; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006361s (num_starts 80; 0.0001s/start)
graph_to_stream.: 0.006375s (num_starts 1; 0.0064s/start)
populate_branch_affecting_locs.: 0.00706s (num_starts 2; 0.0035s/start)
find_dominators.: 0.007484s (num_starts 9; 0.0008s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007567s (num_starts 935; 0.0000s/start)
query:simplify-z3.: 0.008031s (num_starts 98; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.008188s (num_starts 1; 0.0082s/start)
compute_regions.: 0.008244s (num_starts 5; 0.0016s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.008364s (num_starts 1; 0.0084s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.008455s (num_starts 80; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.008567s (num_starts 1; 0.0086s/start)
populate_locs_potentially_modified_on_edge.: 0.009616s (num_starts 3; 0.0032s/start)
create_sp_version_relations_lattice_at_pc.: 0.013216s (num_starts 105; 0.0001s/start)
tfg_preprocess.dst.llvm.foo.: 0.013387s (num_starts 1; 0.0134s/start)
tfg::tfg_preprocess.: 0.01339s (num_starts 1; 0.0134s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.014267s (num_starts 116; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.014297s (num_starts 3; 0.0048s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.014543s (num_starts 80; 0.0002s/start)
get_tfg.: 0.018564s (num_starts 1; 0.0186s/start)
get_function_tfg_map.foo.: 0.018596s (num_starts 1; 0.0186s/start)
get_function_tfg_map.: 0.018599s (num_starts 1; 0.0186s/start)
main.2.: 0.020025s (num_starts 1; 0.0200s/start)
avail_exprs_create_submap.: 0.020613s (num_starts 240; 0.0001s/start)
populate_loc_liveness.: 0.025845s (num_starts 2; 0.0129s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.027448s (num_starts 80; 0.0003s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.02756s (num_starts 74; 0.0004s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.030549s (num_starts 80; 0.0004s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.033834s (num_starts 935; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.034943s (num_starts 935; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.041304s (num_starts 935; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.057834s (num_starts 1; 0.0578s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.072667s (num_starts 1; 0.0727s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.088754s (num_starts 80; 0.0011s/start)
ftmap_run_pointsto_analysis.: 0.176223s (num_starts 1; 0.1762s/start)
parse_consts_db.: 6.80829s (num_starts 1; 6.8083s/start)
main.: 7.0485s (num_starts 1; 7.0485s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file couple8.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:22 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L2%11%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L2%11%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L2%11%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:22 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A1: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 6 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht8-prove_trivial4-prove4...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial0-prove7...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:24 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:24 : foo.A1 (d:2, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A1 (d:2, s:0, sp: 5): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:24 : Chosen product-TFG foo.A1 will be explored later...</MSG>
<MSG>0:24 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%11%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> L2%11%bbentry ending at L2%11%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> L2%11%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%11%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%11%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%11%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%11%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Computing loop hoisting select expressions at toPC L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Computing loop hoisting non-linear expressions at toPC L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Adding node L2%11%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:24 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Adding edge L0%0%d_L0%0%d=>L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A2: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL2%11%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
148672 : not(140275) : BOOL                        : false
140273 : input.spec-%var-x-1 : MAP[BV:32 -> BV:32] : ( map(lambda(Lambda66Var, ite(and(bvule(0, Lambda66Var), bvule(Lambda66Var, 4294967295)), false, false)), lambda(Lambda67Var, ite(and(bvule(0, Lambda67Var), bvule(Lambda67Var, 4294967295)), 0, 0))) )
140276 : 0 { 0x0 +1.0e129 } : BV:32                : 0
140451 : map_get(140273, 140276) : SUM[UNIT,BV:32] : ( sum(ite(ite(and(bvule(0, 0), bvule(0, 4294967295)), false, false), 1, 0), unit, ite(and(bvule(0, 0), bvule(0, 4294967295)), 0, 0)) )
140283 : 1 { 0x1 +1.0e1025 } : INT                 : 1
148670 : sum_is(140451, 140283) : BOOL             : false
148673 : or(148672, 148670) : BOOL                 : false

ce =
=counter_example_begin z3.ce4 ae7fd016671e829bcab332d994755870
=input.spec-%var-x-1
1 : Lambda66Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda67Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.spec-%var-x-0.L2%7%bbentry
1 : Lambda72Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda73Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 1422791455 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 1422791456; 1422791459 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 1422791460; 2261127551 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2261127552; 2261127555 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/, [ 2261127556; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum1=/
1 : 2261127552 { 0x86c61180 -2033839744 -1.54740905e142 } : BV:32
=input.dst.llvm-%n
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 1422791456 { 0x54ce1320 +1.60995864e42 } : BV:32
=input.dst.llvm-%x
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-7.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-1.L2%7%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin
1 : 2261127552 { 0x86c61180 -2033839744 -1.54740905e142 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end
1 : 2261127555 { 0x86c61183 -2033839741 -1.54740941e142 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 1422791456 { 0x54ce1320 +1.60995864e42 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 1422791459 { 0x54ce1323 +1.60995900e42 } : BV:32
=input.spec-%var-x-1.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=input.spec-%var-x-1.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%var-x-0.L2%7%bbentry.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%var-x-0.L2%7%bbentry.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=counter_example.random_seed
3747455381
=counter_example_end


failcond-expr = or(not(true), sum_is(map_get(input.spec-%var-x-1, 0), 1)):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : input.spec-%var-x-1 : MAP[BV:32 -> BV:32]
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : map_get(3, 4) : SUM[UNIT,BV:32]
6 : 1 { 0x1 +1.0e1025 } : INT
7 : sum_is(5, 6) : BOOL
8 : or(2, 7) : BOOL
</MSG>
<MSG>0:24 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%11%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%11%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%11%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> L2%11%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : Failed correlation of src pathset L0%0%d=>L2%11%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL2%11%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
148672 : not(140275) : BOOL                        : false
140273 : input.spec-%var-x-1 : MAP[BV:32 -> BV:32] : ( map(lambda(Lambda66Var, ite(and(bvule(0, Lambda66Var), bvule(Lambda66Var, 4294967295)), false, false)), lambda(Lambda67Var, ite(and(bvule(0, Lambda67Var), bvule(Lambda67Var, 4294967295)), 0, 0))) )
140276 : 0 { 0x0 +1.0e129 } : BV:32                : 0
140451 : map_get(140273, 140276) : SUM[UNIT,BV:32] : ( sum(ite(ite(and(bvule(0, 0), bvule(0, 4294967295)), false, false), 1, 0), unit, ite(and(bvule(0, 0), bvule(0, 4294967295)), 0, 0)) )
140283 : 1 { 0x1 +1.0e1025 } : INT                 : 1
148670 : sum_is(140451, 140283) : BOOL             : false
148673 : or(148672, 148670) : BOOL                 : false

ce =
=counter_example_begin z3.ce4 ae7fd016671e829bcab332d994755870
=input.spec-%var-x-1
1 : Lambda66Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda67Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.spec-%var-x-0.L2%7%bbentry
1 : Lambda72Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda73Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 1422791455 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 1422791456; 1422791459 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 1422791460; 2261127551 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2261127552; 2261127555 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/, [ 2261127556; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum1=/
1 : 2261127552 { 0x86c61180 -2033839744 -1.54740905e142 } : BV:32
=input.dst.llvm-%n
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 1422791456 { 0x54ce1320 +1.60995864e42 } : BV:32
=input.dst.llvm-%x
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-7.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-1.L2%7%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin
1 : 2261127552 { 0x86c61180 -2033839744 -1.54740905e142 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end
1 : 2261127555 { 0x86c61183 -2033839741 -1.54740941e142 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 1422791456 { 0x54ce1320 +1.60995864e42 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 1422791459 { 0x54ce1323 +1.60995900e42 } : BV:32
=input.spec-%var-x-1.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=input.spec-%var-x-1.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%var-x-0.L2%7%bbentry.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%var-x-0.L2%7%bbentry.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=counter_example.random_seed
3747455381
=counter_example_end


</MSG>
<MSG>0:24 : Discovered that the correlation was useless for the product-TFG foo.A2 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1 (d:2, s:0, sp: 5) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 6 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:24 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 6 exprs and 5 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht5-prove_trivial4-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:24 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:24 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:24 : foo.A1 (d:2, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A1 (d:2, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:2, s:0, sp: 5) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 6 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A1.B2: Propagated 6 out of 9 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : foo.A1.B2: Added the 6 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:24 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:24 : Added correlation to the product-TFG foo.A1.B2 (d:2, s:0, sp: 5) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:2, s:0, sp: 5) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 26) => A (line 3 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 6 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:24 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 6 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 6 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:25 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:25 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 6 exprs and 8 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>0:26 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:26 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:26 : foo.A1.B2 (d:2, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : foo.A1.B2 (d:2, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:26 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:2, s:0, sp: 5) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 26) => A (line 3 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 24 counterexamples (for correlating 6 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:26 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Propagated 7 out of 24 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:26 : foo.A1.B2.C1: Added the 7 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:26 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:26 : Added correlation to the product-TFG foo.A1.B2.C1 (d:2, s:0, sp: 5) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:2, s:0, sp: 5) from a frontier of size 2...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 26) => A (line 3 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 26) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 24 counterexamples (for correlating 6 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 4 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:26 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:26 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:26 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:26 : foo.A1.B2.C1 (d:2, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : foo.A1.B2.C1 (d:2, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:26 : Checking equivalence proof...</MSG>
<MSG>0:27 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:2, s:0, sp: 5)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___foo__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))) ; 
    1 preds:
      0.: and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___foo__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [6]: 2-->input.spec-%var-i-0.L2%7%bbentry ; 3-->input.spec-%var-ret-0.L2%7%bbentry ; 4-->input.dst.llvm-%n ; 5-->input.dst.llvm-%x ; 6-->input.dst.llvm-%ret.0.Lfor.cond%1%bbentry ; 7-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%var-i-0.L2%7%bbentry))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(4294967295, input.spec-%var-ret-0.L2%7%bbentry))  ==  input.dst.llvm-%ret.0.Lfor.cond%1%bbentry
      2.: 0                     ==  bvextract(input.dst.llvm-%x, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce3      1.:z3.ce69      2.:z3.ce25      3.:z3.ce47      4.:z3v487.ce70      5.:z3.ce342      6.:z3v487.ce277      7.:z3.ce408
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 2-->input.spec-%var-i-0.L2%7%bbentry ; 
    2 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 4294967294)  ==  true
      1.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce342      2.:z3.ce465      3.:z3v487.ce518
    eqclass 3:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce91      2.:z3.ce69      3.:z3.ce113
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 7-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 4294967294)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce3      1.:z3.ce342      2.:z3.ce465      3.:z3v487.ce518
    eqclass 5:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 8-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 9-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 11-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 13-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 15-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    1 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce3      1.:z3.ce91      2.:z3.ce69
    eqclass 6:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 16-->eq(input.spec-%var-x-1, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false)))) ; 17-->eq(input.spec-%var-x-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false)))) ; 18-->eq(input.spec-%var-x-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%x))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false)))) ; 19-->eq(input.spec-%var-x-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%ret.0.Lfor.cond%1%bbentry))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false)))) ; 20-->eq(input.spec-%var-x-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%i.0.Lfor.cond%1%bbentry))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false)))) ; 21-->eq(input.spec-%var-x-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%n), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-x-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false))))  ==  true
      1.: eq(input.spec-%var-x-1, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-local./*___y___foo__x__=L0%0%argnum0=/-local./*___y___foo__x__=L0%0%argnum1=/-heap, bvadd(bvmul(Lambda1Var, 4), input.dst.llvm-%x), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3
    eqclass 7:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 3 at column 26) => A (line 3 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 26) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 3 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 24 counterexamples (for correlating 6 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 4 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 5.23s, query:smt.: 1.99479s (num_starts 37; 0.0539s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 4.10503s (num_starts 109; 0.0377s/start)ftmap_run_pointsto_analysis.: 0.129102s (num_starts 2; 0.0646s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 4e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 4; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 9e-06s (num_starts 2; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.2e-05s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.5e-05s (num_starts 20; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.6e-05s (num_starts 15; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 1.7e-05s (num_starts 2; 0.0000s/start)
ce_perform_memory_fuzzing.: 2.1e-05s (num_starts 30; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.4e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.6e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 3.1e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.2e-05s (num_starts 2; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.3e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3.4e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 3.5e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.8e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 4.3e-05s (num_starts 43; 0.0000s/start)
determinize_value_expr_map.: 4.8e-05s (num_starts 18; 0.0000s/start)
get_lr_status_for_loc_ids.: 4.9e-05s (num_starts 15; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 5.4e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 9.4e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.8e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.0001s (num_starts 1; 0.0001s/start)
lr_status_meet.: 0.000106s (num_starts 152; 0.0000s/start)
expr_is_hidden_reg.: 0.00012s (num_starts 162; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000129s (num_starts 261; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.00013s (num_starts 31; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000138s (num_starts 5; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000142s (num_starts 3; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000146s (num_starts 8; 0.0000s/start)
expr_is_callee_save_const.: 0.00015s (num_starts 174; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000171s (num_starts 109; 0.0000s/start)
populate_locid2expr_map.: 0.000177s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000179s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000189s (num_starts 12; 0.0000s/start)
propagate_sprels.: 0.00019s (num_starts 2; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000194s (num_starts 30; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.0002s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000209s (num_starts 24; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000216s (num_starts 109; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000224s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000233s (num_starts 18; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000237s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000258s (num_starts 12; 0.0000s/start)
get_sprel_map_pair.: 0.000265s (num_starts 30; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000269s (num_starts 2; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000297s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000304s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000353s (num_starts 1; 0.0004s/start)
proof_query_is_trivial_helper.: 0.000357s (num_starts 121; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000381s (num_starts 66; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000388s (num_starts 9; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000395s (num_starts 2; 0.0002s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000432s (num_starts 1; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.000451s (num_starts 30; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000453s (num_starts 4; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000484s (num_starts 57; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000542s (num_starts 12; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000561s (num_starts 42; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000572s (num_starts 24; 0.0000s/start)
removeMostPromising.: 0.000579s (num_starts 13; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000608s (num_starts 1; 0.0006s/start)
graph_locs_add_all_llvmvars.: 0.000633s (num_starts 2; 0.0003s/start)
create_closure_matrix.: 0.000638s (num_starts 54; 0.0000s/start)
populate_simplified_to_state.: 0.000643s (num_starts 3; 0.0002s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000664s (num_starts 140; 0.0000s/start)
set_result_and_counter_example.: 0.000668s (num_starts 37; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00067s (num_starts 245; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000684s (num_starts 33; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000684s (num_starts 3; 0.0002s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000719s (num_starts 140; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000725s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000739s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000739s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000742s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000743s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000746s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000751s (num_starts 1; 0.0008s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000778s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00078s (num_starts 1; 0.0008s/start)
graph_locs_add_all_specvars.: 0.000791s (num_starts 2; 0.0004s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000815s (num_starts 9; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000828s (num_starts 3; 0.0003s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000838s (num_starts 4; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000842s (num_starts 1; 0.0008s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000878s (num_starts 18; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00088s (num_starts 1; 0.0009s/start)
expr_represents_llvm_undef.: 0.000908s (num_starts 178; 0.0000s/start)
collect_assumes_around_edge.: 0.000923s (num_starts 4; 0.0002s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000932s (num_starts 6; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000959s (num_starts 6; 0.0002s/start)
parse_yices_model.: 0.00102s (num_starts 1; 0.0010s/start)
identify_address_taken_local_variables.: 0.001089s (num_starts 1; 0.0011s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001106s (num_starts 2; 0.0006s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001136s (num_starts 3; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.001155s (num_starts 4; 0.0003s/start)
proof_query_is_trivial.: 0.001206s (num_starts 109; 0.0000s/start)
tfg::populate_loc_definedness.: 0.00121s (num_starts 3; 0.0004s/start)
pth_collect_preds_using_atom_func.: 0.001238s (num_starts 51; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001281s (num_starts 2; 0.0006s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001307s (num_starts 36; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.001319s (num_starts 109; 0.0000s/start)
construct_linear_combination_exprs.: 0.001355s (num_starts 58; 0.0000s/start)
ldr_decomposition.: 0.001362s (num_starts 31; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001441s (num_starts 22; 0.0001s/start)
parse_cvc4_model.: 0.001443s (num_starts 1; 0.0014s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001503s (num_starts 18; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.001529s (num_starts 24; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.001542s (num_starts 66; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.001557s (num_starts 2; 0.0008s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001602s (num_starts 22; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.001621s (num_starts 51; 0.0000s/start)
find_dominators.: 0.001636s (num_starts 28; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001664s (num_starts 66; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.001679s (num_starts 2; 0.0008s/start)
graph_identify_back_edges.: 0.001748s (num_starts 24; 0.0001s/start)
graph_visit_exprs.: 0.001772s (num_starts 3; 0.0006s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001861s (num_starts 22; 0.0001s/start)
populate_simplified_assets.: 0.001904s (num_starts 6; 0.0003s/start)
graph_identify_natural_loops.: 0.001922s (num_starts 24; 0.0001s/start)
populate_branch_affecting_locs.: 0.002051s (num_starts 3; 0.0007s/start)
compute_vars_reaching_definitions.: 0.002079s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002089s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002089s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.002092s (num_starts 1; 0.0021s/start)
bv_const_ref_map2expr_map.: 0.002361s (num_starts 58; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.002451s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.002605s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002609s (num_starts 4; 0.0007s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.002741s (num_starts 67; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002745s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002752s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.002756s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002761s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002773s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.002782s (num_starts 4; 0.0007s/start)
populate_transitive_closure.: 0.002785s (num_starts 30; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.00279s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002799s (num_starts 4; 0.0007s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.002805s (num_starts 65; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.002891s (num_starts 515; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002904s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.002923s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002927s (num_starts 4; 0.0007s/start)
populate_locs_potentially_modified_on_edge.: 0.003106s (num_starts 3; 0.0010s/start)
expr_linear_relation_holds::visit.var.: 0.003304s (num_starts 178; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.003343s (num_starts 57; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.00336s (num_starts 163; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.003437s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.003443s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.003669s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.003684s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.003785s (num_starts 2; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003848s (num_starts 2; 0.0019s/start)
get_next_potential_correlations.: 0.003858s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003863s (num_starts 2; 0.0019s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.00388s (num_starts 3; 0.0013s/start)
get_sprel_map_pair_at_pc.: 0.004293s (num_starts 66; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.004427s (num_starts 57; 0.0001s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.0048s (num_starts 2; 0.0024s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.004895s (num_starts 2; 0.0024s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.005026s (num_starts 3; 0.0017s/start)
predicate_canonicalized.: 0.005039s (num_starts 58; 0.0001s/start)
compute_regions.: 0.005068s (num_starts 24; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.00546s (num_starts 54; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.005902s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess;-trivial.: 0.005907s (num_starts 1; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.005911s (num_starts 1; 0.0059s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.006092s (num_starts 42; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.006244s (num_starts 6; 0.0010s/start)
gen_pred_from_coeff_row.simplify.: 0.006323s (num_starts 58; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.006543s (num_starts 42; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.00674s (num_starts 6; 0.0011s/start)
tfg::get_aliasing_constraints_for_edge.: 0.007604s (num_starts 123; 0.0001s/start)
do_ssa_transformation.: 0.008002s (num_starts 2; 0.0040s/start)
ldr_decompose_and_linear_solve.: 0.00832s (num_starts 31; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008399s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008403s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008405s (num_starts 1; 0.0084s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008443s (num_starts 42; 0.0002s/start)
bv_linear_solve.: 0.008957s (num_starts 31; 0.0003s/start)
query:bv_solve.: 0.009154s (num_starts 31; 0.0003s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.009284s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.009288s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.009295s (num_starts 1; 0.0093s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.009342s (num_starts 42; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.009776s (num_starts 119; 0.0001s/start)
avail_exprs_create_submap.: 0.010204s (num_starts 126; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.010456s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess;-trivial.: 0.010457s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.010459s (num_starts 1; 0.0105s/start)
compute_expr_eqclasses_at_pc.: 0.01088s (num_starts 2; 0.0054s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.010908s (num_starts 152; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.011123s (num_starts 152; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.01115s (num_starts 227; 0.0000s/start)
compute_lr_status_for_expr.: 0.011485s (num_starts 184; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.011576s (num_starts 4; 0.0029s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.011654s (num_starts 217; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.011732s (num_starts 31; 0.0004s/start)
cg_add_node.: 0.011794s (num_starts 4; 0.0029s/start)
pth_collect_simplified_preds_using_atom_func.: 0.012233s (num_starts 111; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.012678s (num_starts 66; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.01276s (num_starts 162; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.013554s (num_starts 31; 0.0004s/start)
bvsolve_cache_query.: 0.014s (num_starts 31; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown;-trivial.: 0.014051s (num_starts 6; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.014065s (num_starts 6; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.014089s (num_starts 6; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown.: 0.014111s (num_starts 6; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.014459s (num_starts 9; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.01448s (num_starts 9; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014508s (num_starts 3; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.014512s (num_starts 3; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.014529s (num_starts 3; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.014544s (num_starts 3; 0.0048s/start)
create_new_corr_graph_edge.new_node.: 0.014668s (num_starts 3; 0.0049s/start)
create_new_corr_graph_edge.: 0.014853s (num_starts 4; 0.0037s/start)
query:convert_from_z3.: 0.015389s (num_starts 271; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.015526s (num_starts 66; 0.0002s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.015667s (num_starts 3; 0.0052s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.015677s (num_starts 21; 0.0007s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.015743s (num_starts 21; 0.0007s/start)
collect_assumes_around_path_helper.: 0.016246s (num_starts 140; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.016517s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.016584s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.01668s (num_starts 4; 0.0042s/start)
graph_with_paths::collect_assumes_around_path.: 0.016732s (num_starts 140; 0.0001s/start)
gen_pred_from_coeff_row.: 0.016872s (num_starts 58; 0.0003s/start)
graph_to_stream.: 0.017068s (num_starts 4; 0.0043s/start)
compute_preds_for_bv_points.: 0.01711s (num_starts 11; 0.0016s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.017176s (num_starts 16; 0.0011s/start)
get_unrolled_paths_from.: 0.017272s (num_starts 16; 0.0011s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.017297s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.0173s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017303s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017307s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017311s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.017454s (num_starts 8; 0.0022s/start)
solve_for_bv_points.: 0.017501s (num_starts 31; 0.0006s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.017535s (num_starts 19; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.017614s (num_starts 8; 0.0022s/start)
collect_aliasing_constraints_around_path_helper.: 0.017788s (num_starts 112; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.018196s (num_starts 11; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.01837s (num_starts 1; 0.0184s/start)
collect_aliasing_constraints_around_path.: 0.018451s (num_starts 70; 0.0003s/start)
counter_example_satisfies_preds.: 0.01854s (num_starts 385; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.018576s (num_starts 23; 0.0008s/start)
compute_new_lr_status_on_locs.: 0.018785s (num_starts 42; 0.0004s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.019159s (num_starts 5; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.020843s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.020851s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.021078s (num_starts 2; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.021085s (num_starts 2; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess;-trivial.: 0.021505s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.02151s (num_starts 2; 0.0108s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.022156s (num_starts 31; 0.0007s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.023391s (num_starts 42; 0.0006s/start)
populate_loc_liveness.: 0.024248s (num_starts 3; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;lb-signed;-trivial.: 0.024502s (num_starts 4; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;lb-signed.: 0.024555s (num_starts 4; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-unsigned;-trivial.: 0.024917s (num_starts 4; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-unsigned.: 0.024971s (num_starts 4; 0.0062s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.024994s (num_starts 5; 0.0050s/start)
query:convert_to_z3.: 0.025909s (num_starts 271; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.026525s (num_starts 3; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.026535s (num_starts 3; 0.0088s/start)
tfg_relax_pointsto_vals_on_edge.: 0.029787s (num_starts 18; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.030295s (num_starts 5; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.031097s (num_starts 4; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.031947s (num_starts 3; 0.0106s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.033717s (num_starts 1; 0.0337s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.033944s (num_starts 886; 0.0000s/start)
lhs_set_sort.: 0.034439s (num_starts 66; 0.0005s/start)
tfg_postprocess_after_pointsto_analysis.: 0.034638s (num_starts 2; 0.0173s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.034747s (num_starts 248; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.035532s (num_starts 5; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.035545s (num_starts 5; 0.0071s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.03766s (num_starts 975; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess;-trivial.: 0.037858s (num_starts 4; 0.0095s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.038869s (num_starts 138; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.039852s (num_starts 1; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.039859s (num_starts 1; 0.0399s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.041064s (num_starts 1; 0.0411s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.041072s (num_starts 1; 0.0411s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.041081s (num_starts 1; 0.0411s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.041101s (num_starts 1; 0.0411s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.041111s (num_starts 1; 0.0411s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.041123s (num_starts 1; 0.0411s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.041876s (num_starts 2; 0.0209s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.04189s (num_starts 2; 0.0209s/start)
put_smtlib_string_in_file.: 0.041964s (num_starts 74; 0.0006s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.042003s (num_starts 138; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-trivial.: 0.043528s (num_starts 4; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.043537s (num_starts 4; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-trivial.: 0.044957s (num_starts 4; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.044964s (num_starts 4; 0.0112s/start)
collect_inductive_preds_around_path.: 0.045161s (num_starts 109; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045768s (num_starts 1; 0.0458s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045768s (num_starts 1; 0.0458s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.045777s (num_starts 1; 0.0458s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.04578s (num_starts 2; 0.0229s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess.: 0.045785s (num_starts 2; 0.0229s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 0.046031s (num_starts 2; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-trivial.: 0.050402s (num_starts 4; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.050425s (num_starts 4; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.050826s (num_starts 1; 0.0508s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.050829s (num_starts 1; 0.0508s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.050838s (num_starts 1; 0.0508s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05143s (num_starts 1; 0.0514s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.052947s (num_starts 2; 0.0265s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess.: 0.056264s (num_starts 2; 0.0281s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.056766s (num_starts 94; 0.0006s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058674s (num_starts 1; 0.0587s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058686s (num_starts 1; 0.0587s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058702s (num_starts 1; 0.0587s/start)
query:simplify-z3.: 0.058938s (num_starts 570; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.060385s (num_starts 24; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.061496s (num_starts 1; 0.0615s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.061506s (num_starts 1; 0.0615s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.062016s (num_starts 8; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.063309s (num_starts 5; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064325s (num_starts 1; 0.0643s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064333s (num_starts 1; 0.0643s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.064347s (num_starts 6; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.065312s (num_starts 3; 0.0218s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.065948s (num_starts 975; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06754s (num_starts 1; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067552s (num_starts 1; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067553s (num_starts 1; 0.0676s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.067968s (num_starts 1032; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.068012s (num_starts 2; 0.0340s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.068049s (num_starts 2; 0.0340s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.068062s (num_starts 2; 0.0340s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.069702s (num_starts 8; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.06981s (num_starts 2; 0.0349s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.070607s (num_starts 12; 0.0059s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.071466s (num_starts 6; 0.0119s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.074238s (num_starts 22; 0.0034s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.078227s (num_starts 12; 0.0065s/start)
graph_ec_apply_trans_funs_helper.0.: 0.080137s (num_starts 346; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.08025s (num_starts 19; 0.0042s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.080654s (num_starts 975; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.081663s (num_starts 3; 0.0272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.081675s (num_starts 3; 0.0272s/start)
graph_ec_apply_trans_funs_helper.: 0.08216s (num_starts 352; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08271s (num_starts 1; 0.0827s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082718s (num_starts 1; 0.0827s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.083081s (num_starts 352; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.083813s (num_starts 348; 0.0002s/start)
check_node_stability_after_CE_addition.: 0.084443s (num_starts 52; 0.0016s/start)
computeWP_for_pred_across_ec.: 0.084953s (num_starts 348; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085596s (num_starts 2; 0.0428s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.08579s (num_starts 24; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.089082s (num_starts 3; 0.0297s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess.: 0.089101s (num_starts 3; 0.0297s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.089714s (num_starts 3; 0.0299s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.090078s (num_starts 14; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.091138s (num_starts 2; 0.0456s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.091144s (num_starts 2; 0.0456s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.091614s (num_starts 3; 0.0305s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.091792s (num_starts 2; 0.0459s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.091873s (num_starts 6; 0.0153s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.092283s (num_starts 72; 0.0013s/start)
apply_mask_and_overlay_array_constant.: 0.098353s (num_starts 72; 0.0014s/start)
guarded_predicate_set_and.: 0.098533s (num_starts 66; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.099598s (num_starts 4; 0.0249s/start)
edge_composition_apply_trans_funs_on_pred.: 0.101578s (num_starts 109; 0.0009s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.10298s (num_starts 138; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.110118s (num_starts 2; 0.0551s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.111459s (num_starts 34; 0.0033s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112592s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112595s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112599s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112601s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate.: 0.11261s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.112615s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.112618s (num_starts 1; 0.1126s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate.: 0.112623s (num_starts 1; 0.1126s/start)
ftmap_run_pointsto_analysis.: 0.129102s (num_starts 2; 0.0646s/start)
tfg_run_pointsto_analysis.: 0.129391s (num_starts 2; 0.0647s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133498s (num_starts 2; 0.0667s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.13352s (num_starts 2; 0.0668s/start)
tfg_populate_structs_after_ssa_construction.: 0.135273s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135696s (num_starts 2; 0.0678s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.13571s (num_starts 2; 0.0679s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.135734s (num_starts 2; 0.0679s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.135742s (num_starts 2; 0.0679s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.135753s (num_starts 66; 0.0021s/start)
compute_z3_expr.: 0.140983s (num_starts 308; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.141299s (num_starts 6; 0.0235s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.142023s (num_starts 3; 0.0473s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.143003s (num_starts 66; 0.0022s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.144142s (num_starts 30; 0.0048s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.144612s (num_starts 78; 0.0019s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.144891s (num_starts 2; 0.0724s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.146316s (num_starts 2; 0.0732s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.14889s (num_starts 3; 0.0496s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149973s (num_starts 1; 0.1500s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149976s (num_starts 1; 0.1500s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.149987s (num_starts 1; 0.1500s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.149991s (num_starts 1; 0.1500s/start)
propagate_nodece_across_edge.: 0.151671s (num_starts 11; 0.0138s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.153153s (num_starts 3; 0.0511s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.15435s (num_starts 2; 0.0772s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.154374s (num_starts 2; 0.0772s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.154387s (num_starts 2; 0.0772s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.158675s (num_starts 7; 0.0227s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163815s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163817s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16382s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163821s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.163828s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.163831s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.163836s (num_starts 1; 0.1638s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.164631s (num_starts 2; 0.0823s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16562s (num_starts 1; 0.1656s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.165623s (num_starts 1; 0.1656s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.165634s (num_starts 1; 0.1656s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.165639s (num_starts 1; 0.1656s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess.: 0.191184s (num_starts 7; 0.0273s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.192235s (num_starts 3; 0.0641s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.19468s (num_starts 53; 0.0037s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.195011s (num_starts 53; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.197965s (num_starts 6; 0.0330s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.197994s (num_starts 6; 0.0330s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.199975s (num_starts 3; 0.0667s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.199995s (num_starts 3; 0.0667s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.202883s (num_starts 1; 0.2029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.202891s (num_starts 1; 0.2029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.202898s (num_starts 1; 0.2029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.205531s (num_starts 5; 0.0411s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.205543s (num_starts 5; 0.0411s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.207706s (num_starts 1; 0.2077s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.207714s (num_starts 1; 0.2077s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.207718s (num_starts 1; 0.2077s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.209296s (num_starts 7; 0.0299s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.210668s (num_starts 5; 0.0421s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.210679s (num_starts 5; 0.0421s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.214611s (num_starts 7; 0.0307s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.217437s (num_starts 5; 0.0435s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.217455s (num_starts 5; 0.0435s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.21891s (num_starts 8; 0.0274s/start)
counter_example_translate_on_edge_composition_helper.: 0.263587s (num_starts 413; 0.0006s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.263719s (num_starts 35; 0.0075s/start)
counter_example_falsifies_preds.: 0.273685s (num_starts 75; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.278316s (num_starts 4; 0.0696s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.278366s (num_starts 4; 0.0696s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.278409s (num_starts 4; 0.0696s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.288765s (num_starts 331; 0.0009s/start)
counter_example_evaluate_preds.: 0.291136s (num_starts 460; 0.0006s/start)
check_wfconds_on_edge.: 0.295423s (num_starts 8; 0.0369s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.314033s (num_starts 9; 0.0349s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.314072s (num_starts 9; 0.0349s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.31558s (num_starts 2; 0.1578s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.315643s (num_starts 2; 0.1578s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.315964s (num_starts 3; 0.1053s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.340703s (num_starts 12; 0.0284s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.357249s (num_starts 3; 0.1191s/start)
decide_hoare_triple_helper;-trivial.: 0.405945s (num_starts 73; 0.0056s/start)
check_equivalence_proof.: 0.414142s (num_starts 1; 0.4141s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 0.42495s (num_starts 2; 0.2125s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.428154s (num_starts 15; 0.0285s/start)
ce_reconcile_sorts.: 0.436357s (num_starts 31; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.459015s (num_starts 4; 0.1148s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.459028s (num_starts 4; 0.1148s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.473583s (num_starts 13; 0.0364s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.473625s (num_starts 13; 0.0364s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.47829s (num_starts 4; 0.1196s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.478314s (num_starts 4; 0.1196s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.478325s (num_starts 4; 0.1196s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.479403s (num_starts 3; 0.1598s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.479472s (num_starts 3; 0.1598s/start)
parse_z3_model.: 0.495032s (num_starts 29; 0.0171s/start)
read_counter_examples_from_channel.: 0.501673s (num_starts 15; 0.0334s/start)
dst_edge_composition_proves_false.: 0.502941s (num_starts 3; 0.1676s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.503788s (num_starts 2; 0.2519s/start)
get_next_dst_edge_composition_to_correlate.: 0.513967s (num_starts 4; 0.1285s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.520466s (num_starts 5; 0.1041s/start)
corr_graph::add_edge().: 0.526251s (num_starts 4; 0.1316s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.528808s (num_starts 8; 0.0661s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned.: 0.528869s (num_starts 8; 0.0661s/start)
decide_hoare_triple.: 0.53355s (num_starts 5; 0.1067s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.539069s (num_starts 16; 0.0337s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.542118s (num_starts 4; 0.1355s/start)
corr_graph_add_correlation.: 0.542287s (num_starts 4; 0.1356s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.542421s (num_starts 4; 0.1356s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.550038s (num_starts 10; 0.0550s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.556576s (num_starts 6; 0.0928s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.574256s (num_starts 8; 0.0718s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.599153s (num_starts 3; 0.1997s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.614601s (num_starts 29; 0.0212s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.620898s (num_starts 4; 0.1552s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.620909s (num_starts 4; 0.1552s/start)
check_preds_on_edge_compositions.: 0.630662s (num_starts 11; 0.0573s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.665926s (num_starts 8; 0.0832s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.66595s (num_starts 8; 0.0832s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.672276s (num_starts 5; 0.1345s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.686014s (num_starts 5; 0.1372s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.730986s (num_starts 6; 0.1218s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.735847s (num_starts 10; 0.0736s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.764591s (num_starts 17; 0.0450s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.798826s (num_starts 9; 0.0888s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.815128s (num_starts 2; 0.4076s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.821437s (num_starts 20; 0.0411s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.879678s (num_starts 28; 0.0314s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.978432s (num_starts 11; 0.0889s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 1.24374s (num_starts 46; 0.0270s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.93493s (num_starts 17; 0.1138s/start)
query:smt.: 1.99479s (num_starts 37; 0.0539s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 2.04807s (num_starts 51; 0.0402s/start)
spawn_smt_query.: 2.49696s (num_starts 37; 0.0675s/start)
solver_provable.: 3.11691s (num_starts 66; 0.0472s/start)
solver_satisfiable-cache-miss.: 3.1449s (num_starts 37; 0.0850s/start)
solver_satisfiable.: 3.1454s (num_starts 67; 0.0469s/start)
expr_is_provable.: 3.14609s (num_starts 66; 0.0477s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 3.14715s (num_starts 66; 0.0477s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 3.1505s (num_starts 66; 0.0477s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 3.15356s (num_starts 66; 0.0478s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 3.25681s (num_starts 66; 0.0493s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 3.26569s (num_starts 66; 0.0495s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 3.26679s (num_starts 66; 0.0495s/start)
update_invariant_state_for_edges.: 3.41819s (num_starts 4; 0.8545s/start)
cg_check_new_cg_ec.: 3.41826s (num_starts 4; 0.8546s/start)
correl_entry_apply.: 3.41847s (num_starts 4; 0.8546s/start)
is_expr_equal_using_lhs_set_and_precond.: 3.63305s (num_starts 66; 0.0550s/start)
prove.: 3.63366s (num_starts 66; 0.0551s/start)
prove_spawn_and_join_helper.: 3.63405s (num_starts 66; 0.0551s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.69442s (num_starts 36; 0.1026s/start)
prove_spawn_and_join.: 3.87649s (num_starts 66; 0.0587s/start)
prove_wrapper.proof_query_not_trivial.: 3.88519s (num_starts 66; 0.0589s/start)
prove_wrapper.: 3.9152s (num_starts 109; 0.0359s/start)
expandProductCFG.: 3.93669s (num_starts 5; 0.7873s/start)
decide_hoare_triple_check_ub.: 4.0247s (num_starts 109; 0.0369s/start)
decide_hoare_triple_helper.: 4.10503s (num_starts 109; 0.0377s/start)
decide_hoare_triple_with_alias_cons.: 4.25053s (num_starts 109; 0.0390s/start)
bestFirstSearch.: 4.5235s (num_starts 1; 4.5235s/start)
Time taken for equivalence check.: 4.94262s (num_starts 1; 4.9426s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 11
# of paths expanded.: 4
# of queries to linear solver.: 31
# of smt-solver-queries.: 37
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 7
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 9
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 5
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 8
smt-queries-cache-hits.: 30
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 29
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 9
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 24
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 11
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 3.95
final-CG-time-to-total-time-ratio.: 0.87
query-time-to-total-time-ratio.: 0.40

Context stats:
exprs: count: 151542
sorts: count: 155
num_proof_queries: 66
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	6663
	        hit ratio:	0.970134
m_simplify_solver:
	----------- total:	1168
	        hit ratio:	0.744007
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	28
	        hit ratio:	0.285714
m_z3_solver_substitution:
	----------- total:	299
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	299
	        hit ratio:	0
m_expr_size:
	----------- total:	4028
	        hit ratio:	0.905412
m_contains_only_constants_or_sp_versions:
	----------- total:	6
	        hit ratio:	0.666667
m_expr_evaluates_to_constant_visitor:
	----------- total:	24234
	        hit ratio:	0.483082

z3_solver expr_query_cache entry size: 37
	----------- total:	67
	             hits:	30
	        hit ratio:	0.447761
histogram (time taken by solver in ms):
[ 23.8130,  28.0048) (avg.  25.8230)     : 3
[ 28.0048,  32.9345) (avg.  31.1943)     : 4
[ 32.9345,  38.7319) (avg.  36.2742)     : 5
[ 38.7319,  45.5499) (avg.  42.4837)     : 3
[ 45.5499,  53.5681) (avg.  50.4706)     : 9
[ 53.5681,  62.9977) (avg.  56.3317)     : 3
[ 62.9977,  74.0871) (avg.  68.8607)     : 3
[ 74.0871,  87.1287) (avg.  77.8143)     : 3
[ 87.1287, 102.4659) (avg.  91.2270)     : 1
[102.4659, 120.5030) (avg. 109.5820)     : 3
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  0)                       : 0
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  8)                       : 16
[ 9, 11) (avg.  9)                       : 2
[11, 13) (avg. 11)                       : 18
[13, 15) (avg.  0)                       : 0
[15, 17) (avg.  0)                       : 0
[17, 19) (avg.  0)                       : 0
[19, 21) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 50,  73) (avg.  50)                    : 1
[ 73,  96) (avg.   0)                    : 0
[ 96, 119) (avg.   0)                    : 0
[119, 141) (avg.   0)                    : 0
[141, 164) (avg. 157)                    : 14
[164, 187) (avg. 166)                    : 4
[187, 209) (avg. 204)                    : 1
[209, 232) (avg. 220)                    : 6
[232, 255) (avg. 247)                    : 6
[255, 277) (avg. 259)                    : 5
Top 10 highest time taking queries:
1. [0.120s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.2
2. [0.105s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%n.ub-unsigned.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.104s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%n.lb-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.091s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
5. [0.083s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
6. [0.075s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%7%bbentry_Lfor.cond%.0
7. [0.075s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.072s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.4.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.071s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
10. [0.064s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%7%bbent.0

<MSG>0:27 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 104 time spent: 0:0:0 [0.002145s total; 0.000021 per start]
tfg_computeWP: num_starts 466 time spent: 0:0:0 [0.070521s total; 0.000151 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1352 time spent: 0:0:0 [0.002621s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1186 time spent: 0:0:0 [0.002131s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 616 time spent: 0:0:0 [0.001051s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 33 time spent: 0:0:0 [0.338860s total; 0.010268 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 8 time spent: 0:0:0 [0.521175s total; 0.065147 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 312 time spent: 0:0:0 [0.242748s total; 0.000778 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 90 time spent: 0:0:0 [0.315141s total; 0.003502 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 271 time spent: 0:0:0 [0.186114s total; 0.000687 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1537 time spent: 0:0:0 [0.490093s total; 0.000319 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 271 time spent: 0:0:0 [0.015560s total; 0.000057 per start]
tfg_graph_get_vars_written_on_edge: num_starts 271 time spent: 0:0:0 [0.008042s total; 0.000030 per start]
cg_with_rank_add_CE_at_pc: num_starts 52 time spent: 0:0:0 [0.186791s total; 0.003592 per start]
graph_with_ce_add_CE_at_pc: num_starts 30 time spent: 0:0:0 [0.000837s total; 0.000028 per start]
graph_with_guessing_add_CE_at_pc: num_starts 52 time spent: 0:0:0 [0.185749s total; 0.003572 per start]
point_set_add_point_using_CE: num_starts 217 time spent: 0:0:0 [0.042244s total; 0.000195 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 217 time spent: 0:0:0 [0.042756s total; 0.000197 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 34 time spent: 0:0:0 [0.100132s total; 0.002945 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 34 time spent: 0:0:0 [0.056437s total; 0.001660 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3243 time spent: 0:0:0 [0.071343s total; 0.000022 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 465 time spent: 0:0:0 [0.021873s total; 0.000047 per start]
expr_simplify_solver: num_starts 1230 time spent: 0:0:0 [0.112736s total; 0.000092 per start]
expr_simplify_syntactic: num_starts 1270 time spent: 0:0:0 [0.159515s total; 0.000126 per start]
expr_simplify_select_on_store: num_starts 45 time spent: 0:0:0 [0.134487s total; 0.002989 per start]
expr_simplify_using_lhs_set_helper: num_starts 383 time spent: 0:0:0 [0.301971s total; 0.000788 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2383 time spent: 0:0:0 [0.299236s total; 0.000126 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1560 time spent: 0:0:0 [0.005950s total; 0.000004 per start]
expr_simplify_eq: num_starts 251 time spent: 0:0:0 [0.002487s total; 0.000010 per start]
expr_simplify_or: num_starts 10 time spent: 0:0:0 [0.000019s total; 0.000002 per start]
expr_simplify_and: num_starts 127 time spent: 0:0:0 [0.000813s total; 0.000006 per start]
expr_simplify_andnot1: num_starts 16 time spent: 0:0:0 [0.000220s total; 0.000014 per start]
expr_simplify_not: num_starts 27 time spent: 0:0:0 [0.000095s total; 0.000004 per start]
expr_simplify_implies: num_starts 10 time spent: 0:0:0 [0.000086s total; 0.000009 per start]
expr_simplify_ite: num_starts 6 time spent: 0:0:0 [0.000597s total; 0.000099 per start]
canonicalize_expr_tree: num_starts 335 time spent: 0:0:0 [0.017313s total; 0.000052 per start]
expr_simplify_memalloc_using_memlabel: num_starts 15 time spent: 0:0:0 [0.000049s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 45 time spent: 0:0:0 [0.132896s total; 0.002953 per start]
get_arithmetic_addsub_atoms: num_starts 1963 time spent: 0:0:0 [0.001206s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 452 time spent: 0:0:0 [0.004364s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 356 time spent: 0:0:0 [0.000287s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 6951 time spent: 0:0:0 [0.247810s total; 0.000036 per start]
expr_do_simplify_helper_cache: num_starts 6951 time spent: 0:0:0 [0.006266s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 36 time spent: 0:0:0 [0.000006s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 36 time spent: 0:0:0 [0.000190s total; 0.000005 per start]
evaluate_expr_and_check_bounds: num_starts 1269 time spent: 0:0:0 [0.511676s total; 0.000403 per start]
array_constant_equals: num_starts 2477 time spent: 0:0:0 [0.003067s total; 0.000001 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.085759s total; 0.003573 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.060332s total; 0.002514 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.002601s total; 0.000068 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000047s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 84 time spent: 0:0:0 [0.015351s total; 0.000183 per start]
compute_simplified_loc_exprs_for_edge: num_starts 230 time spent: 0:0:0 [0.051245s total; 0.000223 per start]
compute_locs_definitely_written_on_edge: num_starts 84 time spent: 0:0:0 [0.000165s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.006508s total; 0.000210 per start]
edge_update_memlabel_map_for_mlvars: num_starts 42 time spent: 0:0:0 [0.006153s total; 0.000146 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.047195s total; 0.001966 per start]
expand_locset_to_include_slots_for_memmask: num_starts 53 time spent: 0:0:0 [0.000201s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:33 [33.218362s total; 33.218362 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 5.24s.
ftmap_run_pointsto_analysis.: 0.129102s (num_starts 2; 0.0646s/start)s.
EQ Time after pointsto analysis: 5.10602s.
EQ Time after pointsto analysis and smt_query: 1.19083s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.17683s.
Equivalence proof found. The programs are equivalent.
