argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop3.proof
argv[5] = --spec-iospecs=loop3.iospecs
argv[6] = loop3.spec
argv[7] = loop3.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2888404
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop3.c
argv[10] = -o
argv[11] = par_tmpdir/loop3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop3.spec.etfg
argv[10] = par_tmpdir/loop3.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop3.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000114s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 102 time spent: 0:0:0 [0.000168s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 612 time spent: 0:0:0 [0.002331s total; 0.000004 per start]
expr_simplify_solver: num_starts 46 time spent: 0:0:0 [0.007728s total; 0.000168 per start]
expr_simplify_syntactic: num_starts 46 time spent: 0:0:0 [0.002067s total; 0.000045 per start]
expr_simplify_using_lhs_set_helper: num_starts 59 time spent: 0:0:0 [0.011181s total; 0.000190 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 135 time spent: 0:0:0 [0.011042s total; 0.000082 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000215s total; 0.000004 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000006s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 30 time spent: 0:0:0 [0.000462s total; 0.000015 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000045s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000685s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000133s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1397 time spent: 0:0:0 [0.012484s total; 0.000009 per start]
expr_do_simplify_helper_cache: num_starts 1397 time spent: 0:0:0 [0.000893s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.043062s total; 0.000662 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.014240s total; 0.000219 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005369s total; 0.000062 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000095s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.003982s total; 0.000031 per start]
compute_simplified_loc_exprs_for_edge: num_starts 365 time spent: 0:0:0 [0.014282s total; 0.000039 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000054s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005310s total; 0.000190 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000403s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.009652s total; 0.000148 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000090s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 6e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.1e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2.1e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 2.3e-05s (num_starts 31; 0.0000s/start)
expr_is_callee_save_const.: 2.8e-05s (num_starts 26; 0.0000s/start)
add_extra_node_at_start_pc.: 3.3e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 4.4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.5e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 6e-05s (num_starts 2; 0.0000s/start)
compute_sprel_relations.: 7.1e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 7.1e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 7.7e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.4e-05s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9.1e-05s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.3e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 9.7e-05s (num_starts 33; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000123s (num_starts 1; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000123s (num_starts 33; 0.0000s/start)
determinize_value_expr_map.: 0.00014s (num_starts 178; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000155s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000168s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000181s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000193s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000299s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00031s (num_starts 65; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000325s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000333s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000341s (num_starts 1; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000404s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000404s (num_starts 1; 0.0004s/start)
sp_version_relations_val_t::meet.: 0.000441s (num_starts 759; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000459s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000507s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000542s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000617s (num_starts 65; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000678s (num_starts 1; 0.0007s/start)
populate_simplified_to_state.: 0.000738s (num_starts 3; 0.0002s/start)
populate_exit_return_values_for_llvm_method.: 0.000907s (num_starts 1; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001032s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001207s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.001307s (num_starts 85; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001369s (num_starts 102; 0.0000s/start)
compute_lr_status_for_expr.: 0.001384s (num_starts 36; 0.0000s/start)
graph_visit_exprs.: 0.001403s (num_starts 4; 0.0004s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001459s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001511s (num_starts 31; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001577s (num_starts 1; 0.0016s/start)
query:convert_from_z3.: 0.001815s (num_starts 28; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.00192s (num_starts 1; 0.0019s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001975s (num_starts 1; 0.0020s/start)
compute_z3_expr.: 0.00199s (num_starts 28; 0.0001s/start)
populate_transitive_closure.: 0.002442s (num_starts 1; 0.0024s/start)
query:convert_to_z3.: 0.003217s (num_starts 28; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003221s (num_starts 65; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.003486s (num_starts 2; 0.0017s/start)
compute_new_lr_status_on_locs.: 0.003616s (num_starts 65; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003623s (num_starts 68; 0.0001s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.003829s (num_starts 1; 0.0038s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003863s (num_starts 612; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003935s (num_starts 65; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.003985s (num_starts 1; 0.0040s/start)
tfg::populate_loc_definedness.before_solve.: 0.00399s (num_starts 2; 0.0020s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004146s (num_starts 1; 0.0041s/start)
populate_simplified_assets.: 0.004247s (num_starts 6; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004305s (num_starts 1; 0.0043s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004306s (num_starts 2; 0.0022s/start)
graph_identify_back_edges.: 0.004431s (num_starts 5; 0.0009s/start)
tfg::populate_loc_definedness.: 0.004527s (num_starts 2; 0.0023s/start)
graph_to_stream.: 0.004597s (num_starts 1; 0.0046s/start)
graph_identify_natural_loops.: 0.004636s (num_starts 5; 0.0009s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.004842s (num_starts 1; 0.0048s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005492s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.005546s (num_starts 2; 0.0028s/start)
query:simplify-z3.: 0.006214s (num_starts 58; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.006644s (num_starts 85; 0.0001s/start)
find_dominators.: 0.007377s (num_starts 9; 0.0008s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.007394s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.007397s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.007402s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.007407s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.foo.: 0.007411s (num_starts 1; 0.0074s/start)
avail_exprs_create_submap.: 0.007472s (num_starts 195; 0.0000s/start)
compute_regions.: 0.007641s (num_starts 5; 0.0015s/start)
populate_locs_potentially_modified_on_edge.: 0.007663s (num_starts 3; 0.0026s/start)
tfg_preprocess.dst.llvm.foo.: 0.010372s (num_starts 1; 0.0104s/start)
tfg::tfg_preprocess.: 0.010374s (num_starts 1; 0.0104s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.011243s (num_starts 59; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011393s (num_starts 65; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.011931s (num_starts 3; 0.0040s/start)
populate_loc_liveness.: 0.012527s (num_starts 2; 0.0063s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.013984s (num_starts 612; 0.0000s/start)
main.2.: 0.014164s (num_starts 1; 0.0142s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.014336s (num_starts 65; 0.0002s/start)
get_tfg.: 0.014477s (num_starts 1; 0.0145s/start)
get_function_tfg_map.foo.: 0.014518s (num_starts 1; 0.0145s/start)
get_function_tfg_map.: 0.014521s (num_starts 1; 0.0145s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.01474s (num_starts 612; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.017924s (num_starts 612; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.034936s (num_starts 1; 0.0349s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.043136s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.04366s (num_starts 1; 0.0437s/start)
ftmap_run_pointsto_analysis.: 0.097766s (num_starts 1; 0.0978s/start)
parse_consts_db.: 6.69875s (num_starts 1; 6.6988s/start)
main.: 6.86517s (num_starts 1; 6.8652s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file loop3.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: foo...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%13%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%13%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%13%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%16%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%16%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%16%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%13%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%13%bbentry ending at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%13%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 3 propagated CEs at PC L2%13%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%13%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 2 paths to src pc L2%13%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%13%bbentry=>L2%13%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%13%bbentry=>L2%13%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 2 feasible correlations for paths to src pc L2%13%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>L2%13%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%13%bbentry --> L2%13%bbentry ending at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Getting alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Found no alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Adding edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1.B2: Propagated 5 out of 7 counter-examples across edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1.B2: Added the 5 propagated CEs at PC L2%13%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1.B2: Computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>L2%13%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%13%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%13%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:21 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : foo.A1.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%13%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%13%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Adding edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Propagated 6 out of 22 counter-examples across edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : foo.A1.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%13%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%13%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : foo.A1.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:22 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)) ; 
    1 preds:
      0.: and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce42      2.:z3v487.ce161      3.:cvc4.ce113
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce161      2.:z3v487.ce236      3.:z3.ce394
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce42      2.:z3v487.ce43      3.:yices.ce44
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce161      2.:cvc4.ce315
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce42      2.:z3v487.ce43      3.:yices.ce44
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce161      2.:z3v487.ce236      3.:z3.ce394
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce42      2.:z3v487.ce43
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%13%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 1.17s, query:smt.: 0.297716s (num_starts 25; 0.0119s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.732239s (num_starts 60; 0.0122s/start)ftmap_run_pointsto_analysis.: 0.070837s (num_starts 2; 0.0354s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 2; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 5; 0.0000s/start)
compute_tfg_pred_eqclass.: 3e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 3e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 5e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 9e-06s (num_starts 1; 0.0000s/start)
get_paths_with_matching_to_pc.: 1e-05s (num_starts 4; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 1e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.1e-05s (num_starts 19; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.2e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.4e-05s (num_starts 1; 0.0000s/start)
remove_complex_bv_exprs.: 1.4e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.5e-05s (num_starts 19; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.5e-05s (num_starts 15; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.6e-05s (num_starts 3; 0.0000s/start)
ce_perform_memory_fuzzing.: 2e-05s (num_starts 21; 0.0000s/start)
prove_trivial.: 2e-05s (num_starts 30; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.3e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 2.6e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 2.6e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.7e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.7e-05s (num_starts 2; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 2.7e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.8e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 3e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.7e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 4.8e-05s (num_starts 23; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 6.5e-05s (num_starts 1; 0.0001s/start)
expr_is_hidden_reg.: 7.1e-05s (num_starts 84; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 7.2e-05s (num_starts 62; 0.0000s/start)
lr_status_meet.: 8.2e-05s (num_starts 126; 0.0000s/start)
expr_is_callee_save_const.: 8.3e-05s (num_starts 96; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 8.4e-05s (num_starts 16; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 8.9e-05s (num_starts 19; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry.: 9.2e-05s (num_starts 2; 0.0000s/start)
collect_dst_to_src_submap_preds.: 9.7e-05s (num_starts 60; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.0001s (num_starts 3; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000116s (num_starts 32; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000129s (num_starts 8; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000135s (num_starts 74; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000135s (num_starts 280; 0.0000s/start)
compute_sprel_relations.: 0.000142s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000144s (num_starts 40; 0.0000s/start)
populate_locid2expr_map.: 0.000144s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000149s (num_starts 32; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.00015s (num_starts 32; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000151s (num_starts 17; 0.0000s/start)
propagate_sprels.: 0.000153s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000162s (num_starts 40; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000164s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000177s (num_starts 5; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000182s (num_starts 1; 0.0002s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00019s (num_starts 1; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000198s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000211s (num_starts 17; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000225s (num_starts 25; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000227s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000246s (num_starts 9; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00026s (num_starts 24; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.00027s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000282s (num_starts 1; 0.0003s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000284s (num_starts 30; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000294s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000295s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000296s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000297s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000298s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.0003s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000311s (num_starts 1; 0.0003s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000323s (num_starts 89; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000329s (num_starts 89; 0.0000s/start)
collect_assumes_around_edge.: 0.000341s (num_starts 3; 0.0001s/start)
set_result_and_counter_example.: 0.000351s (num_starts 25; 0.0000s/start)
identify_address_taken_local_variables.: 0.000379s (num_starts 1; 0.0004s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000401s (num_starts 8; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000424s (num_starts 2; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000442s (num_starts 2; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000459s (num_starts 40; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000468s (num_starts 2; 0.0002s/start)
graph_with_guessing_sync_preds.: 0.000472s (num_starts 60; 0.0000s/start)
proof_query_is_trivial.: 0.00049s (num_starts 62; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.00051s (num_starts 40; 0.0000s/start)
create_closure_matrix.: 0.00052s (num_starts 62; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000537s (num_starts 1; 0.0005s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000545s (num_starts 269; 0.0000s/start)
populate_simplified_to_state.: 0.000574s (num_starts 3; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000584s (num_starts 47; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000611s (num_starts 1; 0.0006s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000621s (num_starts 3; 0.0002s/start)
construct_linear_combination_exprs.: 0.000631s (num_starts 28; 0.0000s/start)
expr_represents_llvm_undef.: 0.000639s (num_starts 103; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00064s (num_starts 1; 0.0006s/start)
removeMostPromising.: 0.000653s (num_starts 10; 0.0001s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000659s (num_starts 5; 0.0001s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000691s (num_starts 23; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000779s (num_starts 32; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000789s (num_starts 5; 0.0002s/start)
ldr_decomposition.: 0.00079s (num_starts 19; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000809s (num_starts 52; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000814s (num_starts 5; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.000843s (num_starts 1; 0.0008s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000879s (num_starts 24; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000887s (num_starts 1; 0.0009s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000901s (num_starts 47; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000917s (num_starts 52; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000958s (num_starts 2; 0.0005s/start)
tfg::populate_loc_definedness.before_solve.: 0.000976s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000989s (num_starts 2; 0.0005s/start)
corr_graph_enumerate_correlations.: 0.001045s (num_starts 4; 0.0003s/start)
generate_aliasing_constraints_from_expr.: 0.001068s (num_starts 512; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001241s (num_starts 3; 0.0004s/start)
populate_simplified_assets.: 0.001289s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001324s (num_starts 3; 0.0004s/start)
bv_const_ref_map2expr_map.: 0.001343s (num_starts 28; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001361s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001363s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001366s (num_starts 1; 0.0014s/start)
get_sprel_map_pair_at_pc.: 0.001425s (num_starts 32; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001476s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001478s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned;-trivial.: 0.001481s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001483s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.00149s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-unsigned.: 0.001496s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001507s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.001518s (num_starts 2; 0.0008s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001529s (num_starts 38; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.001638s (num_starts 2; 0.0008s/start)
graph_visit_exprs.: 0.001706s (num_starts 3; 0.0006s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001786s (num_starts 2; 0.0009s/start)
expr_linear_relation_holds::visit.var.: 0.001892s (num_starts 103; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002084s (num_starts 24; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.002189s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002257s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002263s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.002268s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.00227s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002273s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002276s (num_starts 3; 0.0008s/start)
populate_locs_potentially_modified_on_edge.: 0.002279s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002281s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.002282s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002286s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.002289s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.002297s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002297s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002304s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.002305s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.002321s (num_starts 3; 0.0008s/start)
graph_identify_back_edges.: 0.002331s (num_starts 21; 0.0001s/start)
tfg_suffixpath_get_expr_helper.: 0.002365s (num_starts 16; 0.0001s/start)
populate_branch_affecting_locs.: 0.002385s (num_starts 3; 0.0008s/start)
find_dominators.: 0.002404s (num_starts 25; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.002408s (num_starts 186; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002458s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002462s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.002465s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002469s (num_starts 3; 0.0008s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.002478s (num_starts 32; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002479s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.002488s (num_starts 3; 0.0008s/start)
graph_identify_natural_loops.: 0.002491s (num_starts 21; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.002497s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002505s (num_starts 3; 0.0008s/start)
expr_substitute_using_available_exprs_submap.: 0.002571s (num_starts 127; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.002627s (num_starts 32; 0.0001s/start)
compute_vars_reaching_definitions.: 0.002867s (num_starts 2; 0.0014s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.002877s (num_starts 1; 0.0029s/start)
pth_collect_simplified_preds_using_atom_func.: 0.002931s (num_starts 60; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.002935s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.00294s (num_starts 4; 0.0007s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003038s (num_starts 155; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.003221s (num_starts 62; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.003354s (num_starts 112; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.00358s (num_starts 3; 0.0012s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.003593s (num_starts 20; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.003638s (num_starts 20; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003766s (num_starts 52; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003864s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00387s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003877s (num_starts 3; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.003885s (num_starts 3; 0.0013s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.003901s (num_starts 28; 0.0001s/start)
populate_transitive_closure.: 0.003901s (num_starts 27; 0.0001s/start)
compute_expr_eqclasses_at_pc.: 0.003902s (num_starts 1; 0.0039s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.00432s (num_starts 3; 0.0014s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.004393s (num_starts 3; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.004432s (num_starts 6; 0.0007s/start)
cg_add_node.: 0.004527s (num_starts 3; 0.0015s/start)
collect_aliasing_constraints_around_path_helper.: 0.004592s (num_starts 106; 0.0000s/start)
collect_assumes_around_path_helper.: 0.004712s (num_starts 89; 0.0001s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.004755s (num_starts 18; 0.0003s/start)
graph_with_paths::collect_assumes_around_path.: 0.004917s (num_starts 89; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.004947s (num_starts 66; 0.0001s/start)
lhs_set_sort.: 0.00508s (num_starts 32; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00521s (num_starts 4; 0.0013s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005219s (num_starts 4; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00528s (num_starts 4; 0.0013s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.00561s (num_starts 47; 0.0001s/start)
ldr_decompose_and_linear_solve.: 0.005748s (num_starts 19; 0.0003s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.00586s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005865s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.005868s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.00587s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005873s (num_starts 2; 0.0029s/start)
predicate_canonicalized.: 0.005895s (num_starts 28; 0.0002s/start)
compute_lr_status_for_expr.: 0.005925s (num_starts 134; 0.0000s/start)
get_next_potential_correlations.: 0.006024s (num_starts 3; 0.0020s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.006072s (num_starts 47; 0.0001s/start)
bv_linear_solve.: 0.00609s (num_starts 19; 0.0003s/start)
query:bv_solve.: 0.006208s (num_starts 19; 0.0003s/start)
compute_regions.: 0.006232s (num_starts 21; 0.0003s/start)
create_new_corr_graph_edge.new_node.: 0.006289s (num_starts 2; 0.0031s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.006406s (num_starts 126; 0.0001s/start)
create_new_corr_graph_edge.: 0.006421s (num_starts 3; 0.0021s/start)
check_node_stability_after_CE_addition.: 0.006483s (num_starts 41; 0.0002s/start)
collect_inductive_preds_around_path.: 0.006595s (num_starts 60; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006598s (num_starts 126; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006811s (num_starts 47; 0.0001s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.007116s (num_starts 3; 0.0024s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.007385s (num_starts 152; 0.0000s/start)
bv_solve_returning_intermediate_structures.: 0.007422s (num_starts 19; 0.0004s/start)
avail_exprs_create_submap.: 0.008009s (num_starts 141; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.008157s (num_starts 743; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008302s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008304s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008308s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00831s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.008312s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00832s (num_starts 1; 0.0083s/start)
bvsolve_cache_query.miss1.: 0.008519s (num_starts 19; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.008619s (num_starts 2; 0.0043s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.008625s (num_starts 2; 0.0043s/start)
bvsolve_cache_query.: 0.00868s (num_starts 19; 0.0005s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.00882s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008823s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.008827s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.00883s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008832s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008873s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008873s (num_starts 1; 0.0089s/start)
counter_example_satisfies_preds.: 0.008929s (num_starts 377; 0.0000s/start)
do_ssa_transformation.: 0.009127s (num_starts 2; 0.0046s/start)
query:convert_from_z3.: 0.00931s (num_starts 172; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009449s (num_starts 1; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00945s (num_starts 1; 0.0095s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.009454s (num_starts 1; 0.0095s/start)
gen_pred_from_coeff_row.simplify.: 0.009692s (num_starts 28; 0.0003s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.009779s (num_starts 4; 0.0024s/start)
populate_loc_liveness.: 0.009875s (num_starts 3; 0.0033s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.010021s (num_starts 85; 0.0001s/start)
solve_for_bv_points.: 0.010556s (num_starts 19; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.010829s (num_starts 2; 0.0054s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.01108s (num_starts 6; 0.0018s/start)
put_smtlib_string_in_file.: 0.011541s (num_starts 50; 0.0002s/start)
compute_new_lr_status_on_locs.: 0.011963s (num_starts 47; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.012251s (num_starts 4; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.012259s (num_starts 4; 0.0031s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.012786s (num_starts 19; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.012865s (num_starts 17; 0.0008s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.012904s (num_starts 79; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.013759s (num_starts 6; 0.0023s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.014111s (num_starts 1; 0.0141s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.014174s (num_starts 77; 0.0002s/start)
query:convert_to_z3.: 0.014615s (num_starts 172; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.014753s (num_starts 3; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.014762s (num_starts 3; 0.0049s/start)
graph_to_stream.: 0.015062s (num_starts 4; 0.0038s/start)
counter_example_falsifies_preds.: 0.015317s (num_starts 77; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.015546s (num_starts 8; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.015562s (num_starts 8; 0.0019s/start)
get_unrolled_paths_from.: 0.016308s (num_starts 15; 0.0011s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.016396s (num_starts 783; 0.0000s/start)
parse_z3_model.: 0.016815s (num_starts 8; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.017264s (num_starts 743; 0.0000s/start)
tfg_relax_pointsto_vals_on_edge.: 0.017288s (num_starts 17; 0.0010s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017932s (num_starts 47; 0.0004s/start)
propagate_nodece_across_edge.: 0.018108s (num_starts 10; 0.0018s/start)
gen_pred_from_coeff_row.: 0.01855s (num_starts 28; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018739s (num_starts 2; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018744s (num_starts 2; 0.0094s/start)
compute_preds_for_bv_points.: 0.018785s (num_starts 5; 0.0038s/start)
tfg_postprocess_after_pointsto_analysis.: 0.018812s (num_starts 2; 0.0094s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.01882s (num_starts 9; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019121s (num_starts 1; 0.0191s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019123s (num_starts 1; 0.0191s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.019127s (num_starts 1; 0.0191s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.019129s (num_starts 1; 0.0191s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.019282s (num_starts 1; 0.0193s/start)
parse_cvc4_model.: 0.01981s (num_starts 8; 0.0025s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.020253s (num_starts 381; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.020277s (num_starts 4; 0.0051s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.020784s (num_starts 171; 0.0001s/start)
parse_yices_model.: 0.020802s (num_starts 8; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021208s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021212s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.021219s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.021223s (num_starts 2; 0.0106s/start)
counter_example_evaluate_preds.: 0.023257s (num_starts 454; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.023571s (num_starts 30; 0.0008s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.023589s (num_starts 32; 0.0007s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0239s (num_starts 1; 0.0239s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023902s (num_starts 1; 0.0239s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023904s (num_starts 1; 0.0239s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023907s (num_starts 1; 0.0239s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02391s (num_starts 1; 0.0239s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.024362s (num_starts 743; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.025157s (num_starts 156; 0.0002s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.02534s (num_starts 76; 0.0003s/start)
compute_z3_expr.: 0.025941s (num_starts 197; 0.0001s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.026103s (num_starts 32; 0.0008s/start)
check_wfconds_on_edge.L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry.: 0.026131s (num_starts 3; 0.0087s/start)
graph_ec_apply_trans_funs_helper.: 0.026246s (num_starts 161; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.026583s (num_starts 161; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.026989s (num_starts 161; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.027395s (num_starts 161; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.027749s (num_starts 12; 0.0023s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028563s (num_starts 2; 0.0143s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028566s (num_starts 2; 0.0143s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.0286s (num_starts 2; 0.0143s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030073s (num_starts 3; 0.0100s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030078s (num_starts 3; 0.0100s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.032208s (num_starts 18; 0.0018s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.032555s (num_starts 23; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.03256s (num_starts 8; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.032747s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.032755s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.03276s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.032766s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.032772s (num_starts 2; 0.0164s/start)
guarded_predicate_set_and.: 0.032819s (num_starts 32; 0.0010s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.032935s (num_starts 16; 0.0021s/start)
query:simplify-z3.: 0.033066s (num_starts 346; 0.0001s/start)
apply_mask_and_overlay_array_constant.: 0.033845s (num_starts 23; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.033862s (num_starts 6; 0.0056s/start)
edge_composition_apply_trans_funs_on_pred.: 0.034448s (num_starts 60; 0.0006s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.034835s (num_starts 77; 0.0005s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.036002s (num_starts 5; 0.0072s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.036014s (num_starts 5; 0.0072s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.043987s (num_starts 30; 0.0015s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.045297s (num_starts 38; 0.0012s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.045514s (num_starts 38; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047107s (num_starts 4; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047125s (num_starts 4; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047134s (num_starts 4; 0.0118s/start)
check_wfconds_on_edge.L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.047254s (num_starts 2; 0.0236s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.048653s (num_starts 1; 0.0487s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.048656s (num_starts 1; 0.0487s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.048663s (num_starts 1; 0.0487s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.048667s (num_starts 1; 0.0487s/start)
read_counter_examples_from_channel.: 0.058796s (num_starts 8; 0.0073s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%13%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.060465s (num_starts 15; 0.0040s/start)
decide_hoare_triple_helper;-trivial.: 0.062037s (num_starts 37; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.062724s (num_starts 12; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.062749s (num_starts 12; 0.0052s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.063836s (num_starts 3; 0.0213s/start)
ftmap_run_pointsto_analysis.: 0.070837s (num_starts 2; 0.0354s/start)
tfg_run_pointsto_analysis.: 0.071099s (num_starts 2; 0.0355s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.071686s (num_starts 21; 0.0034s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.071889s (num_starts 41; 0.0018s/start)
check_wfconds_on_edge.: 0.073544s (num_starts 7; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07426s (num_starts 1; 0.0743s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074261s (num_starts 1; 0.0743s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074262s (num_starts 1; 0.0743s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074262s (num_starts 1; 0.0743s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.074266s (num_starts 1; 0.0743s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.074271s (num_starts 1; 0.0743s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.07428s (num_starts 1; 0.0743s/start)
check_equivalence_proof.: 0.074552s (num_starts 1; 0.0746s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.0746s (num_starts 2; 0.0373s/start)
counter_example_translate_on_edge_composition_helper.: 0.074935s (num_starts 373; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.075083s (num_starts 16; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075669s (num_starts 1; 0.0757s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075672s (num_starts 1; 0.0757s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.075692s (num_starts 1; 0.0757s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.075696s (num_starts 1; 0.0757s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.078291s (num_starts 235; 0.0003s/start)
tfg_populate_structs_after_ssa_construction.: 0.079374s (num_starts 2; 0.0397s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079777s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079782s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079787s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079792s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.079804s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-unsigned.: 0.079811s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.079823s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.081319s (num_starts 4; 0.0203s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.086816s (num_starts 3; 0.0289s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089517s (num_starts 3; 0.0298s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089524s (num_starts 3; 0.0298s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.09049s (num_starts 2; 0.0452s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.092495s (num_starts 7; 0.0132s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.09251s (num_starts 7; 0.0132s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.105125s (num_starts 1; 0.1051s/start)
corr_graph::add_edge().: 0.105189s (num_starts 3; 0.0351s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.108224s (num_starts 5; 0.0216s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.112395s (num_starts 3; 0.0375s/start)
corr_graph_add_correlation.: 0.112491s (num_starts 3; 0.0375s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.112544s (num_starts 3; 0.0375s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.112846s (num_starts 11; 0.0103s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.113783s (num_starts 17; 0.0067s/start)
check_preds_on_edge_compositions.: 0.120016s (num_starts 10; 0.0120s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.124305s (num_starts 2; 0.0622s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.124375s (num_starts 2; 0.0622s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.136767s (num_starts 7; 0.0195s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143364s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143368s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143374s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.14338s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.143398s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.143405s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.14342s (num_starts 2; 0.0717s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.145724s (num_starts 5; 0.0291s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry).: 0.150147s (num_starts 24; 0.0063s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.155354s (num_starts 9; 0.0173s/start)
ce_reconcile_sorts.: 0.16253s (num_starts 24; 0.0068s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.162676s (num_starts 6; 0.0271s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.168744s (num_starts 8; 0.0211s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.187875s (num_starts 27; 0.0070s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.19498s (num_starts 9; 0.0217s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198574s (num_starts 3; 0.0662s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.198645s (num_starts 3; 0.0662s/start)
dst_edge_composition_proves_false.: 0.210893s (num_starts 3; 0.0703s/start)
decide_hoare_triple.: 0.2117s (num_starts 5; 0.0423s/start)
get_next_dst_edge_composition_to_correlate.: 0.219794s (num_starts 4; 0.0549s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.270225s (num_starts 8; 0.0338s/start)
query:smt.: 0.297716s (num_starts 25; 0.0119s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry).: 0.303668s (num_starts 24; 0.0127s/start)
spawn_smt_query.: 0.356747s (num_starts 25; 0.0143s/start)
solver_provable.: 0.528047s (num_starts 32; 0.0165s/start)
expr_is_provable.: 0.533587s (num_starts 32; 0.0167s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.534051s (num_starts 32; 0.0167s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.53563s (num_starts 32; 0.0167s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.536391s (num_starts 32; 0.0168s/start)
update_invariant_state_for_edges.: 0.555862s (num_starts 3; 0.1853s/start)
cg_check_new_cg_ec.: 0.555906s (num_starts 3; 0.1853s/start)
correl_entry_apply.: 0.556046s (num_starts 3; 0.1853s/start)
solver_satisfiable-cache-miss.: 0.559177s (num_starts 25; 0.0224s/start)
solver_satisfiable.: 0.55935s (num_starts 33; 0.0169s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.571551s (num_starts 32; 0.0179s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.576138s (num_starts 32; 0.0180s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.576632s (num_starts 32; 0.0180s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.631761s (num_starts 32; 0.0197s/start)
prove.: 0.631947s (num_starts 32; 0.0197s/start)
prove_spawn_and_join_helper.: 0.632077s (num_starts 32; 0.0198s/start)
prove_spawn_and_join.: 0.667839s (num_starts 32; 0.0209s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.668561s (num_starts 23; 0.0291s/start)
prove_wrapper.proof_query_not_trivial.: 0.67067s (num_starts 32; 0.0210s/start)
prove_wrapper.: 0.67675s (num_starts 62; 0.0109s/start)
decide_hoare_triple_check_ub.: 0.714462s (num_starts 60; 0.0119s/start)
decide_hoare_triple_helper.: 0.732239s (num_starts 60; 0.0122s/start)
expandProductCFG.: 0.782297s (num_starts 4; 0.1956s/start)
decide_hoare_triple_with_alias_cons.: 0.804474s (num_starts 60; 0.0134s/start)
bestFirstSearch.: 0.9329s (num_starts 1; 0.9329s/start)
Time taken for equivalence check.: 1.00872s (num_starts 1; 1.0087s/start)

counters:
# of paths enumerated.: 11
# of paths expanded.: 3
# of queries to linear solver.: 19
# of smt-solver-queries.: 25
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 8
smt-queries-cvc4-sat.: 8
smt-queries-yices-sat.: 8
smt-queries-z3-sat.: 8
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%13%bbentry_Lfor.cond%1%bbentry.: 9
final-CG-counterexamples-total-at-L2%13%bbentry_Lfor.cond%1%bbentry.: 22
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 11
src-nodes.: 10
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.67
final-CG-time-to-total-time-ratio.: 0.72
query-time-to-total-time-ratio.: 0.30

Context stats:
exprs: count: 141308
sorts: count: 147
num_proof_queries: 32
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3744
	        hit ratio:	0.954327
m_simplify_solver:
	----------- total:	628
	        hit ratio:	0.721338
m_z3_solver_substitution:
	----------- total:	174
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	175
	        hit ratio:	0
m_expr_size:
	----------- total:	3105
	        hit ratio:	0.920129
m_expr_evaluates_to_constant_visitor:
	----------- total:	2283
	        hit ratio:	0.681559

z3_solver expr_query_cache entry size: 25
	----------- total:	33
	             hits:	8
	        hit ratio:	0.242424
histogram (time taken by solver in ms):
[ 3.5560,  4.5377) (avg.  4.0068)        : 11
[ 4.5377,  5.7904) (avg.  4.9160)        : 5
[ 5.7904,  7.3889) (avg.  0.0000)        : 0
[ 7.3889,  9.4286) (avg.  8.9810)        : 1
[ 9.4286, 12.0315) (avg.  0.0000)        : 0
[12.0315, 15.3530) (avg.  0.0000)        : 0
[15.3530, 19.5913) (avg. 18.2935)        : 2
[19.5913, 24.9998) (avg.  0.0000)        : 0
[24.9998, 31.9013) (avg. 28.7216)        : 5
[31.9013, 40.7080) (avg. 39.7080)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 17,  29) (avg.  17)                    : 1
[ 29,  41) (avg.   0)                    : 0
[ 41,  53) (avg.   0)                    : 0
[ 53,  65) (avg.  57)                    : 8
[ 65,  76) (avg.  71)                    : 6
[ 76,  88) (avg.  79)                    : 3
[ 88, 100) (avg.  96)                    : 4
[100, 112) (avg. 101)                    : 2
[112, 124) (avg.   0)                    : 0
[124, 135) (avg. 125)                    : 1
Top 10 highest time taking queries:
1. [0.040s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond.0
3. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
4. [0.029s] SOLVER_RES_TRUE memlabel_assertions_sat.0
5. [0.028s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
6. [0.026s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
7. [0.018s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%13%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%13%bbe.0
8. [0.018s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%13%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%13%bbentry_Lfor.con.0
9. [0.009s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.7.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1

<MSG>0:22 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 104 time spent: 0:0:0 [0.002937s total; 0.000028 per start]
tfg_computeWP: num_starts 231 time spent: 0:0:0 [0.022143s total; 0.000096 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1005 time spent: 0:0:0 [0.001558s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1143 time spent: 0:0:0 [0.001722s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 470 time spent: 0:0:0 [0.000759s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 24 time spent: 0:0:0 [0.087837s total; 0.003660 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.099418s total; 0.016570 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 328 time spent: 0:0:0 [0.061927s total; 0.000189 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 77 time spent: 0:0:0 [0.035119s total; 0.000456 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 278 time spent: 0:0:0 [0.042838s total; 0.000154 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1179 time spent: 0:0:0 [0.053942s total; 0.000046 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 278 time spent: 0:0:0 [0.007109s total; 0.000026 per start]
tfg_graph_get_vars_written_on_edge: num_starts 278 time spent: 0:0:0 [0.005763s total; 0.000021 per start]
cg_with_rank_add_CE_at_pc: num_starts 41 time spent: 0:0:0 [0.069475s total; 0.001695 per start]
graph_with_ce_add_CE_at_pc: num_starts 27 time spent: 0:0:0 [0.000679s total; 0.000025 per start]
graph_with_guessing_add_CE_at_pc: num_starts 41 time spent: 0:0:0 [0.068653s total; 0.001674 per start]
point_set_add_point_using_CE: num_starts 171 time spent: 0:0:0 [0.016865s total; 0.000099 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 171 time spent: 0:0:0 [0.017236s total; 0.000101 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.061274s total; 0.002664 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.043447s total; 0.001889 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1867 time spent: 0:0:0 [0.015440s total; 0.000008 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 304 time spent: 0:0:0 [0.006640s total; 0.000022 per start]
expr_simplify_solver: num_starts 661 time spent: 0:0:0 [0.052360s total; 0.000079 per start]
expr_simplify_syntactic: num_starts 661 time spent: 0:0:0 [0.019754s total; 0.000030 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.009749s total; 0.002437 per start]
expr_simplify_using_lhs_set_helper: num_starts 284 time spent: 0:0:0 [0.086292s total; 0.000304 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1324 time spent: 0:0:0 [0.084925s total; 0.000064 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 725 time spent: 0:0:0 [0.002925s total; 0.000004 per start]
expr_simplify_eq: num_starts 143 time spent: 0:0:0 [0.001239s total; 0.000009 per start]
expr_simplify_or: num_starts 20 time spent: 0:0:0 [0.000026s total; 0.000001 per start]
expr_simplify_and: num_starts 41 time spent: 0:0:0 [0.000237s total; 0.000006 per start]
expr_simplify_not: num_starts 20 time spent: 0:0:0 [0.000066s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 198 time spent: 0:0:0 [0.004484s total; 0.000023 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000002s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.009666s total; 0.002416 per start]
get_arithmetic_addsub_atoms: num_starts 981 time spent: 0:0:0 [0.000725s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 244 time spent: 0:0:0 [0.002473s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 378 time spent: 0:0:0 [0.000265s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4026 time spent: 0:0:0 [0.087510s total; 0.000022 per start]
expr_do_simplify_helper_cache: num_starts 4026 time spent: 0:0:0 [0.003278s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 1041 time spent: 0:0:0 [0.060356s total; 0.000058 per start]
array_constant_equals: num_starts 311 time spent: 0:0:0 [0.000493s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.043962s total; 0.001465 per start]
alias_val_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.023521s total; 0.000784 per start]
get_sprel_map_from_avail_exprs: num_starts 47 time spent: 0:0:0 [0.002660s total; 0.000057 per start]
update_memlabels_for_memslot_locs: num_starts 15 time spent: 0:0:0 [0.000057s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 94 time spent: 0:0:0 [0.010832s total; 0.000115 per start]
compute_simplified_loc_exprs_for_edge: num_starts 261 time spent: 0:0:0 [0.030102s total; 0.000115 per start]
compute_locs_definitely_written_on_edge: num_starts 94 time spent: 0:0:0 [0.000144s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 34 time spent: 0:0:0 [0.006041s total; 0.000178 per start]
edge_update_memlabel_map_for_mlvars: num_starts 47 time spent: 0:0:0 [0.000961s total; 0.000020 per start]
add_new_locs_based_on_edge: num_starts 30 time spent: 0:0:0 [0.015110s total; 0.000504 per start]
expand_locset_to_include_slots_for_memmask: num_starts 62 time spent: 0:0:0 [0.000119s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:28 [28.393993s total; 28.393993 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 1.18s.
ftmap_run_pointsto_analysis.: 0.070837s (num_starts 2; 0.0354s/start)s.
EQ Time after pointsto analysis: 1.10766s.
EQ Time after pointsto analysis and smt_query: 0.430909s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.422229s.
Equivalence proof found. The programs are equivalent.
