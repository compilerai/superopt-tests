argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=10
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=loop3.proof
argv[9] = --spec-iospecs=loop3.iospecs
argv[10] = loop3.spec
argv[11] = loop3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.3791733
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop3.c
argv[10] = -o
argv[11] = par_tmpdir/loop3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/loop3.spec.etfg
argv[11] = par_tmpdir/loop3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/loop3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000126s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 102 time spent: 0:0:0 [0.000178s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 612 time spent: 0:0:0 [0.002490s total; 0.000004 per start]
expr_simplify_solver: num_starts 46 time spent: 0:0:0 [0.005518s total; 0.000120 per start]
expr_simplify_syntactic: num_starts 46 time spent: 0:0:0 [0.002097s total; 0.000046 per start]
expr_simplify_using_lhs_set_helper: num_starts 59 time spent: 0:0:0 [0.010287s total; 0.000174 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 135 time spent: 0:0:0 [0.010139s total; 0.000075 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000249s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000008s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 30 time spent: 0:0:0 [0.000491s total; 0.000016 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000045s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000715s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000128s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1397 time spent: 0:0:0 [0.011671s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1397 time spent: 0:0:0 [0.000981s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000008s total; 0.000003 per start]
sort_dfa_canonical: num_starts 141741 time spent: 0:0:1 [1.232360s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 8 time spent: 0:0:0 [0.001080s total; 0.000135 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.047136s total; 0.000725 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.014795s total; 0.000228 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005747s total; 0.000067 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000090s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.005446s total; 0.000042 per start]
compute_simplified_loc_exprs_for_edge: num_starts 365 time spent: 0:0:0 [0.018045s total; 0.000049 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000052s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005388s total; 0.000192 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000414s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.009126s total; 0.000140 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000092s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 6e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.4e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.8e-05s (num_starts 22; 0.0000s/start)
add_assumes_to_start_edge.: 1.9e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 2.2e-05s (num_starts 31; 0.0000s/start)
expr_is_callee_save_const.: 3e-05s (num_starts 26; 0.0000s/start)
context_constructor.solver.: 3.6e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 3.9e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.2e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.2e-05s (num_starts 2; 0.0000s/start)
compute_sprel_relations.: 7.6e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 7.7e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 7.8e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.3e-05s (num_starts 1; 0.0001s/start)
main.3.: 9.1e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.4e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 9.8e-05s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000104s (num_starts 5; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000122s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.00014s (num_starts 177; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.00015s (num_starts 33; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000178s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000185s (num_starts 28; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000193s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000203s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000289s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000316s (num_starts 65; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000325s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000339s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000379s (num_starts 1; 0.0004s/start)
compute_z3_expr.: 0.000385s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.00041s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000413s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000436s (num_starts 759; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000463s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000473s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000544s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000655s (num_starts 65; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000781s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000817s (num_starts 3; 0.0003s/start)
populate_exit_return_values_for_llvm_method.: 0.000907s (num_starts 1; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001078s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001271s (num_starts 51; 0.0000s/start)
create_closure_matrix.: 0.001359s (num_starts 85; 0.0000s/start)
query:convert_from_z3.: 0.001388s (num_starts 28; 0.0000s/start)
graph_visit_exprs.: 0.001422s (num_starts 4; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.001426s (num_starts 102; 0.0000s/start)
query:convert_to_z3.: 0.001477s (num_starts 28; 0.0001s/start)
compute_lr_status_for_expr.: 0.001522s (num_starts 36; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001597s (num_starts 31; 0.0001s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001628s (num_starts 1; 0.0016s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001665s (num_starts 31; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.002078s (num_starts 1; 0.0021s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002128s (num_starts 1; 0.0021s/start)
populate_transitive_closure.: 0.002549s (num_starts 1; 0.0025s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003594s (num_starts 65; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.003721s (num_starts 2; 0.0019s/start)
query:simplify-z3.: 0.003904s (num_starts 58; 0.0001s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.003989s (num_starts 1; 0.0040s/start)
tfg::populate_loc_definedness.before_solve.: 0.004105s (num_starts 2; 0.0021s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.004247s (num_starts 1; 0.0042s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004344s (num_starts 612; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004403s (num_starts 1; 0.0044s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004459s (num_starts 2; 0.0022s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004542s (num_starts 68; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004563s (num_starts 1; 0.0046s/start)
compute_new_lr_status_on_locs.: 0.004565s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004674s (num_starts 2; 0.0023s/start)
populate_simplified_assets.: 0.004743s (num_starts 6; 0.0008s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004836s (num_starts 65; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.005116s (num_starts 1; 0.0051s/start)
graph_identify_back_edges.: 0.005453s (num_starts 6; 0.0009s/start)
graph_identify_natural_loops.: 0.005715s (num_starts 6; 0.0010s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.006156s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.00621s (num_starts 2; 0.0031s/start)
graph_to_stream.: 0.006523s (num_starts 1; 0.0065s/start)
create_sp_version_relations_lattice_at_pc.: 0.00688s (num_starts 85; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.008002s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.008007s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.008012s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.008016s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.: 0.00802s (num_starts 1; 0.0080s/start)
avail_exprs_create_submap.: 0.008473s (num_starts 195; 0.0000s/start)
find_dominators.: 0.008561s (num_starts 10; 0.0009s/start)
populate_locs_potentially_modified_on_edge.: 0.008737s (num_starts 3; 0.0029s/start)
compute_regions.: 0.009303s (num_starts 6; 0.0016s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.010341s (num_starts 59; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.012186s (num_starts 1; 0.0122s/start)
tfg::tfg_preprocess.: 0.012189s (num_starts 1; 0.0122s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.013271s (num_starts 65; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.013494s (num_starts 3; 0.0045s/start)
populate_loc_liveness.: 0.01384s (num_starts 2; 0.0069s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.013904s (num_starts 612; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.014847s (num_starts 612; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.014917s (num_starts 65; 0.0002s/start)
get_tfg.: 0.016282s (num_starts 1; 0.0163s/start)
get_function_tfg_map.foo.: 0.016315s (num_starts 1; 0.0163s/start)
get_function_tfg_map.: 0.016318s (num_starts 1; 0.0163s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.0183s (num_starts 612; 0.0000s/start)
main.2.: 0.019663s (num_starts 1; 0.0197s/start)
tfg_postprocess_after_pointsto_analysis.: 0.038246s (num_starts 1; 0.0382s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.047246s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.047484s (num_starts 1; 0.0475s/start)
ftmap_run_pointsto_analysis.: 0.10654s (num_starts 1; 0.1065s/start)
parse_consts_db.: 7.20975s (num_starts 1; 7.2097s/start)
main.: 7.38987s (num_starts 1; 7.3899s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:15 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file loop3.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: foo...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%12%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%12%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%12%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%15%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%15%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%15%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo: Found 3 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%12%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%12%bbentry ending at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting select expressions at toPC L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding node L3%12%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:22 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:23 : foo.A2: Added the 3 propagated CEs at PC L3%12%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:23 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%n
      2.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      3.: 0                     ==  input.spec-%var-n-0.L3%12%bbentry
      4.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:23 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%12%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%n
      2.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      3.: 0                     ==  input.spec-%var-n-0.L3%12%bbentry
      4.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:23 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
      4.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
      4.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : foo.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A2: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 2 paths to src pc L3%12%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%12%bbentry=>L3%12%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%12%bbentry=>L3%12%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 2 feasible correlations for paths to src pc L3%12%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>L3%12%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%12%bbentry --> L3%12%bbentry ending at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2.B2: Getting alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2.B2: Found no alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2.B2: Adding edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:23 : foo.A2.B2: Added the 5 propagated CEs at PC L3%12%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:23 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2.B2: Computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : Added correlation to the product-TFG foo.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>L3%12%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%12%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%12%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40


<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%12%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%12%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagated 6 out of 22 counter-examples across edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A2.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%12%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%12%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce155      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:cvc4.ce302
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40      3.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce155      2.:z3.ce226      3.:z3.ce378
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%12%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 1.35s, query:smt.: 0.279929s (num_starts 24; 0.0117s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.760714s (num_starts 60; 0.0127s/start)ftmap_run_pointsto_analysis.: 0.111767s (num_starts 2; 0.0559s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 3e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 5e-06s (num_starts 1; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 6e-06s (num_starts 5; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 6e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.5e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1.5e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.6e-05s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.6e-05s (num_starts 5; 0.0000s/start)
remove_complex_bv_exprs.: 1.7e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.8e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.9e-05s (num_starts 19; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 2e-05s (num_starts 15; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2.5e-05s (num_starts 19; 0.0000s/start)
prove_trivial.: 2.5e-05s (num_starts 30; 0.0000s/start)
ce_perform_memory_fuzzing.: 2.6e-05s (num_starts 21; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 3.3e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 3.4e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 3.4e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.9e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 3.9e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 4.1e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 6e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 6.6e-05s (num_starts 23; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 9.4e-05s (num_starts 62; 0.0000s/start)
expr_is_hidden_reg.: 9.6e-05s (num_starts 84; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 9.6e-05s (num_starts 1; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000107s (num_starts 60; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000113s (num_starts 19; 0.0000s/start)
lr_status_meet.: 0.000113s (num_starts 126; 0.0000s/start)
expr_is_callee_save_const.: 0.000124s (num_starts 96; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry.: 0.000136s (num_starts 2; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000136s (num_starts 16; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000146s (num_starts 32; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000161s (num_starts 3; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000174s (num_starts 30; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000174s (num_starts 74; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000177s (num_starts 30; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000191s (num_starts 1; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000202s (num_starts 1; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000202s (num_starts 40; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000204s (num_starts 280; 0.0000s/start)
compute_sprel_relations.: 0.000211s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000218s (num_starts 8; 0.0000s/start)
propagate_sprels.: 0.000227s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000247s (num_starts 6; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000256s (num_starts 40; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000299s (num_starts 25; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000316s (num_starts 1; 0.0003s/start)
graph_locs_add_all_indvars.: 0.000316s (num_starts 2; 0.0002s/start)
populate_locid2expr_map.: 0.000319s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000329s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000329s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00033s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000332s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000333s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000335s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000346s (num_starts 1; 0.0003s/start)
set_result_and_counter_example.: 0.00035s (num_starts 24; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000375s (num_starts 17; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000375s (num_starts 9; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.0004s (num_starts 89; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000403s (num_starts 24; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000405s (num_starts 2; 0.0002s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.00041s (num_starts 89; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000413s (num_starts 30; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000425s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000426s (num_starts 1; 0.0004s/start)
graph_locs_add_local_vars_for_edge.: 0.000436s (num_starts 17; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000467s (num_starts 2; 0.0002s/start)
collect_assumes_around_edge.: 0.000473s (num_starts 3; 0.0002s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000524s (num_starts 8; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000556s (num_starts 2; 0.0003s/start)
graph_with_guessing_sync_preds.: 0.000587s (num_starts 60; 0.0000s/start)
proof_query_is_trivial.: 0.00061s (num_starts 62; 0.0000s/start)
identify_address_taken_local_variables.: 0.000643s (num_starts 1; 0.0006s/start)
tfg::collect_assumes_around_edge.: 0.000682s (num_starts 40; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000716s (num_starts 2; 0.0004s/start)
create_closure_matrix.: 0.000768s (num_starts 62; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000776s (num_starts 269; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000778s (num_starts 2; 0.0004s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000812s (num_starts 40; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000815s (num_starts 47; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000822s (num_starts 1; 0.0008s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000823s (num_starts 3; 0.0003s/start)
expr_represents_llvm_undef.: 0.000834s (num_starts 103; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000862s (num_starts 23; 0.0000s/start)
populate_simplified_to_state.: 0.000882s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000942s (num_starts 1; 0.0009s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000951s (num_starts 30; 0.0000s/start)
construct_linear_combination_exprs.: 0.000963s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000985s (num_starts 1; 0.0010s/start)
ldr_decomposition.: 0.000991s (num_starts 19; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.00101s (num_starts 52; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.001031s (num_starts 5; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.001099s (num_starts 1; 0.0011s/start)
tfg_edge_composition_get_assumes.: 0.001125s (num_starts 52; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001161s (num_starts 47; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001224s (num_starts 5; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001257s (num_starts 5; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001367s (num_starts 1; 0.0014s/start)
removeMostPromising.: 0.001396s (num_starts 10; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.001417s (num_starts 5; 0.0003s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001419s (num_starts 2; 0.0007s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001534s (num_starts 19; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.001549s (num_starts 3; 0.0005s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001558s (num_starts 24; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.001577s (num_starts 512; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.001762s (num_starts 32; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001877s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.00188s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned;-trivial.: 0.001884s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001888s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001896s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned.: 0.001903s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001917s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001943s (num_starts 1; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001943s (num_starts 1; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001946s (num_starts 1; 0.0019s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001974s (num_starts 3; 0.0007s/start)
populate_simplified_assets.: 0.002005s (num_starts 6; 0.0003s/start)
bv_const_ref_map2expr_map.: 0.002021s (num_starts 28; 0.0001s/start)
tfg::populate_loc_definedness.: 0.002095s (num_starts 3; 0.0007s/start)
graph_visit_exprs.: 0.002237s (num_starts 3; 0.0007s/start)
graph_locs_add_all_specvars.: 0.00231s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.00235s (num_starts 2; 0.0012s/start)
expr_linear_relation_holds::visit.var.: 0.002464s (num_starts 103; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002546s (num_starts 2; 0.0013s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.002818s (num_starts 30; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002835s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002837s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.002842s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.002842s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-trivial.: 0.002846s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-trivial.: 0.002847s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002852s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002853s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002864s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.002866s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.002872s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed.: 0.002875s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002881s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002891s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.002895s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002954s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002957s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.002962s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002967s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002979s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.002989s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.002998s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003011s (num_starts 3; 0.0010s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003088s (num_starts 30; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.003104s (num_starts 2; 0.0016s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.003107s (num_starts 3; 0.0010s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.003129s (num_starts 24; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003158s (num_starts 186; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.003416s (num_starts 2; 0.0017s/start)
tfg_suffixpath_get_expr_helper.: 0.003416s (num_starts 16; 0.0002s/start)
graph_identify_back_edges.: 0.003462s (num_starts 21; 0.0002s/start)
find_dominators.: 0.003624s (num_starts 25; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.003712s (num_starts 4; 0.0009s/start)
graph_identify_natural_loops.: 0.003718s (num_starts 21; 0.0002s/start)
expr_substitute_using_available_exprs_submap.: 0.003719s (num_starts 127; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.00372s (num_starts 4; 0.0009s/start)
pth_collect_simplified_preds_using_atom_func.: 0.003721s (num_starts 60; 0.0001s/start)
populate_branch_affecting_locs.: 0.0038s (num_starts 3; 0.0013s/start)
populate_locs_potentially_modified_on_edge.: 0.003814s (num_starts 3; 0.0013s/start)
tfg::get_aliasing_constraints_for_edge.: 0.004192s (num_starts 155; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.004296s (num_starts 1; 0.0043s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.0043s (num_starts 112; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004387s (num_starts 52; 0.0001s/start)
compute_vars_reaching_definitions.: 0.004399s (num_starts 2; 0.0022s/start)
create_sp_version_relations_lattice_at_pc.: 0.004592s (num_starts 62; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.004882s (num_starts 20; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.004939s (num_starts 20; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00499s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004994s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.005004s (num_starts 3; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.005014s (num_starts 3; 0.0017s/start)
compute_expr_eqclasses_at_pc.: 0.00524s (num_starts 1; 0.0052s/start)
populate_transitive_closure.: 0.00547s (num_starts 27; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.005709s (num_starts 3; 0.0019s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.00577s (num_starts 3; 0.0019s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.005834s (num_starts 3; 0.0019s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.005858s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005864s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.005866s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.005872s (num_starts 2; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005878s (num_starts 2; 0.0029s/start)
cg_add_node.: 0.005947s (num_starts 3; 0.0020s/start)
collect_assumes_around_path_helper.: 0.005994s (num_starts 89; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.006037s (num_starts 6; 0.0010s/start)
collect_aliasing_constraints_around_path_helper.: 0.006158s (num_starts 106; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.006272s (num_starts 89; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.006321s (num_starts 28; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.006372s (num_starts 18; 0.0004s/start)
collect_aliasing_constraints_around_path.: 0.006603s (num_starts 66; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006917s (num_starts 4; 0.0017s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.006922s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006925s (num_starts 4; 0.0017s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.006925s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.006927s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.006928s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.006931s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00694s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.006993s (num_starts 4; 0.0017s/start)
lhs_set_sort.: 0.007026s (num_starts 32; 0.0002s/start)
ldr_decompose_and_linear_solve.: 0.007115s (num_starts 19; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.007274s (num_starts 2; 0.0036s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.007281s (num_starts 2; 0.0036s/start)
bv_linear_solve.: 0.007527s (num_starts 19; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007579s (num_starts 1; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00758s (num_starts 1; 0.0076s/start)
query:bv_solve.: 0.007657s (num_starts 19; 0.0004s/start)
check_node_stability_after_CE_addition.: 0.007933s (num_starts 41; 0.0002s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.007951s (num_starts 47; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008033s (num_starts 1; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008037s (num_starts 1; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.008043s (num_starts 1; 0.0080s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.008081s (num_starts 3; 0.0027s/start)
compute_lr_status_for_expr.: 0.008227s (num_starts 134; 0.0001s/start)
get_next_potential_correlations.: 0.008272s (num_starts 3; 0.0028s/start)
predicate_canonicalized.: 0.008375s (num_starts 28; 0.0003s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.008393s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008397s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.0084s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.008403s (num_starts 1; 0.0084s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.008407s (num_starts 1; 0.0084s/start)
create_new_corr_graph_edge.new_node.: 0.008443s (num_starts 2; 0.0042s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008523s (num_starts 47; 0.0002s/start)
create_new_corr_graph_edge.: 0.008607s (num_starts 3; 0.0029s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00882s (num_starts 126; 0.0001s/start)
compute_regions.: 0.009037s (num_starts 21; 0.0004s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.009096s (num_starts 126; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.009105s (num_starts 19; 0.0005s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.009299s (num_starts 133; 0.0001s/start)
collect_inductive_preds_around_path.: 0.00952s (num_starts 60; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.010001s (num_starts 2; 0.0050s/start)
query:convert_from_z3.: 0.010166s (num_starts 124; 0.0001s/start)
counter_example_falsifies_preds.: 0.010174s (num_starts 77; 0.0001s/start)
query:convert_to_z3.: 0.010458s (num_starts 124; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.010462s (num_starts 19; 0.0006s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.010517s (num_starts 47; 0.0002s/start)
bvsolve_cache_query.: 0.010655s (num_starts 19; 0.0006s/start)
counter_example_satisfies_preds.: 0.011s (num_starts 377; 0.0000s/start)
avail_exprs_create_submap.: 0.011185s (num_starts 141; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.012624s (num_starts 743; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.012841s (num_starts 85; 0.0002s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.012895s (num_starts 4; 0.0032s/start)
solve_for_bv_points.: 0.012958s (num_starts 19; 0.0007s/start)
gen_pred_from_coeff_row.simplify.: 0.013143s (num_starts 28; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.013468s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.013478s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.013569s (num_starts 4; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.013583s (num_starts 4; 0.0034s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013639s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01364s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013642s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013644s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013646s (num_starts 1; 0.0136s/start)
populate_loc_liveness.: 0.014499s (num_starts 3; 0.0048s/start)
put_smtlib_string_in_file.: 0.01452s (num_starts 48; 0.0003s/start)
do_ssa_transformation.: 0.01486s (num_starts 2; 0.0074s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.015218s (num_starts 8; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.015234s (num_starts 8; 0.0019s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.015762s (num_starts 19; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.015906s (num_starts 6; 0.0027s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.016503s (num_starts 17; 0.0010s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.016827s (num_starts 79; 0.0002s/start)
compute_new_lr_status_on_locs.: 0.017322s (num_starts 47; 0.0004s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.017862s (num_starts 6; 0.0030s/start)
compute_z3_expr.: 0.018115s (num_starts 148; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018599s (num_starts 2; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018606s (num_starts 2; 0.0093s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.018824s (num_starts 77; 0.0002s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.018931s (num_starts 337; 0.0001s/start)
counter_example_evaluate_preds.: 0.020019s (num_starts 454; 0.0000s/start)
get_unrolled_paths_from.: 0.020682s (num_starts 15; 0.0014s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.020958s (num_starts 1; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.02098s (num_starts 4; 0.0052s/start)
parse_z3_model.: 0.021873s (num_starts 8; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.02206s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.022068s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.022076s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.022084s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.022093s (num_starts 2; 0.0110s/start)
tfg_relax_pointsto_vals_on_edge.: 0.022643s (num_starts 17; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022977s (num_starts 1; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02298s (num_starts 1; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.022985s (num_starts 1; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.022988s (num_starts 1; 0.0230s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.023275s (num_starts 1; 0.0233s/start)
guarded_predicate_set_and.: 0.023447s (num_starts 30; 0.0008s/start)
propagate_nodece_across_edge.: 0.023545s (num_starts 10; 0.0024s/start)
parse_cvc4_model.: 0.02411s (num_starts 8; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024149s (num_starts 2; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024152s (num_starts 2; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.024159s (num_starts 2; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.024166s (num_starts 2; 0.0121s/start)
parse_yices_model.: 0.024877s (num_starts 8; 0.0031s/start)
graph_to_stream.: 0.024888s (num_starts 4; 0.0062s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.025776s (num_starts 47; 0.0005s/start)
gen_pred_from_coeff_row.: 0.025916s (num_starts 28; 0.0009s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.025939s (num_starts 152; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.026146s (num_starts 783; 0.0000s/start)
compute_preds_for_bv_points.: 0.026284s (num_starts 5; 0.0053s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.026334s (num_starts 9; 0.0029s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.027678s (num_starts 743; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.028527s (num_starts 2; 0.0143s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.028731s (num_starts 12; 0.0024s/start)
query:simplify-z3.: 0.029767s (num_starts 250; 0.0001s/start)
check_wfconds_on_edge.L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry.: 0.029864s (num_starts 3; 0.0100s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.03023s (num_starts 76; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.030999s (num_starts 2; 0.0155s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031003s (num_starts 2; 0.0155s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.03105s (num_starts 2; 0.0155s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031716s (num_starts 3; 0.0106s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.031723s (num_starts 3; 0.0106s/start)
graph_ec_apply_trans_funs_helper.0.: 0.033083s (num_starts 156; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.034592s (num_starts 8; 0.0043s/start)
graph_ec_apply_trans_funs_helper.: 0.034681s (num_starts 161; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.034797s (num_starts 18; 0.0019s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.035087s (num_starts 161; 0.0002s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.035612s (num_starts 16; 0.0022s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.035613s (num_starts 161; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.036132s (num_starts 161; 0.0002s/start)
check_wfconds_on_edge.L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.036155s (num_starts 2; 0.0181s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.03628s (num_starts 23; 0.0016s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.036684s (num_starts 30; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.037662s (num_starts 5; 0.0075s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.03768s (num_starts 5; 0.0075s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.038023s (num_starts 743; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.038025s (num_starts 6; 0.0063s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.038029s (num_starts 32; 0.0012s/start)
apply_mask_and_overlay_array_constant.: 0.038236s (num_starts 23; 0.0017s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.040949s (num_starts 32; 0.0013s/start)
edge_composition_apply_trans_funs_on_pred.: 0.045273s (num_starts 60; 0.0008s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.045961s (num_starts 77; 0.0006s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.048902s (num_starts 38; 0.0013s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.049168s (num_starts 38; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053819s (num_starts 4; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053839s (num_starts 4; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053849s (num_starts 4; 0.0135s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%12%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.062133s (num_starts 15; 0.0041s/start)
check_wfconds_on_edge.: 0.066237s (num_starts 7; 0.0095s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068071s (num_starts 1; 0.0681s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.068075s (num_starts 1; 0.0681s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.068082s (num_starts 1; 0.0681s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.068086s (num_starts 1; 0.0681s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.068194s (num_starts 30; 0.0023s/start)
decide_hoare_triple_helper;-trivial.: 0.068299s (num_starts 37; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.069125s (num_starts 12; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.069154s (num_starts 12; 0.0058s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.070497s (num_starts 3; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072066s (num_starts 1; 0.0721s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072068s (num_starts 1; 0.0721s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.072084s (num_starts 1; 0.0721s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.072088s (num_starts 1; 0.0721s/start)
read_counter_examples_from_channel.: 0.072539s (num_starts 8; 0.0091s/start)
check_equivalence_proof.: 0.076711s (num_starts 1; 0.0767s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.080152s (num_starts 21; 0.0038s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.080384s (num_starts 41; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.082826s (num_starts 16; 0.0052s/start)
counter_example_translate_on_edge_composition_helper.: 0.083846s (num_starts 373; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084525s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084533s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084541s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08455s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.084566s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned.: 0.084574s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.08459s (num_starts 2; 0.0423s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.086492s (num_starts 4; 0.0216s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087664s (num_starts 3; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087673s (num_starts 3; 0.0292s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.088544s (num_starts 214; 0.0004s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.088687s (num_starts 3; 0.0296s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.09143s (num_starts 7; 0.0131s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.09145s (num_starts 7; 0.0131s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096318s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096318s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09632s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096321s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.096329s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.096333s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.096341s (num_starts 1; 0.0963s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.096698s (num_starts 2; 0.0483s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.106228s (num_starts 5; 0.0212s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.106516s (num_starts 17; 0.0063s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.111387s (num_starts 1; 0.1114s/start)
ftmap_run_pointsto_analysis.: 0.111767s (num_starts 2; 0.0559s/start)
tfg_run_pointsto_analysis.: 0.112268s (num_starts 2; 0.0561s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.112505s (num_starts 11; 0.0102s/start)
check_preds_on_edge_compositions.: 0.114979s (num_starts 10; 0.0115s/start)
tfg_populate_structs_after_ssa_construction.: 0.125182s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.125225s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.125228s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.12523s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.125235s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.125251s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed.: 0.125259s (num_starts 2; 0.0626s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.125275s (num_starts 2; 0.0626s/start)
corr_graph::add_edge().: 0.126437s (num_starts 3; 0.0421s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.128154s (num_starts 5; 0.0256s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.136101s (num_starts 3; 0.0454s/start)
corr_graph_add_correlation.: 0.136242s (num_starts 3; 0.0454s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.1372s (num_starts 7; 0.0196s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.139383s (num_starts 3; 0.0465s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.140124s (num_starts 2; 0.0701s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.140189s (num_starts 2; 0.0701s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.143209s (num_starts 2; 0.0716s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry).: 0.154343s (num_starts 24; 0.0064s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160071s (num_starts 9; 0.0178s/start)
ce_reconcile_sorts_and_values.: 0.17339s (num_starts 24; 0.0072s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.178747s (num_starts 6; 0.0298s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.181328s (num_starts 9; 0.0201s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.184838s (num_starts 8; 0.0231s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.195261s (num_starts 27; 0.0072s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.23645s (num_starts 3; 0.0788s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.236522s (num_starts 3; 0.0788s/start)
decide_hoare_triple.: 0.248789s (num_starts 5; 0.0498s/start)
dst_edge_composition_proves_false.: 0.251711s (num_starts 3; 0.0839s/start)
get_next_dst_edge_composition_to_correlate.: 0.26202s (num_starts 4; 0.0655s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.263544s (num_starts 8; 0.0329s/start)
query:smt.: 0.279929s (num_starts 24; 0.0117s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry).: 0.299758s (num_starts 24; 0.0125s/start)
spawn_smt_query.: 0.352713s (num_starts 24; 0.0147s/start)
solver_provable.: 0.552057s (num_starts 30; 0.0184s/start)
expr_is_provable.: 0.558511s (num_starts 30; 0.0186s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.559005s (num_starts 30; 0.0186s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.560962s (num_starts 30; 0.0187s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.561912s (num_starts 30; 0.0187s/start)
update_invariant_state_for_edges.: 0.562945s (num_starts 3; 0.1876s/start)
cg_check_new_cg_ec.: 0.565322s (num_starts 3; 0.1884s/start)
correl_entry_apply.: 0.565484s (num_starts 3; 0.1885s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.588271s (num_starts 30; 0.0196s/start)
solver_satisfiable-cache-miss.: 0.59084s (num_starts 24; 0.0246s/start)
solver_satisfiable.: 0.591031s (num_starts 31; 0.0191s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.594129s (num_starts 32; 0.0186s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.594742s (num_starts 32; 0.0186s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.621561s (num_starts 32; 0.0194s/start)
prove.: 0.621786s (num_starts 32; 0.0194s/start)
prove_spawn_and_join_helper.: 0.621946s (num_starts 32; 0.0194s/start)
prove_spawn_and_join.: 0.676032s (num_starts 32; 0.0211s/start)
prove_wrapper.proof_query_not_trivial.: 0.67983s (num_starts 32; 0.0212s/start)
prove_wrapper.: 0.687798s (num_starts 62; 0.0111s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.690478s (num_starts 23; 0.0300s/start)
decide_hoare_triple_check_ub.: 0.73712s (num_starts 60; 0.0123s/start)
decide_hoare_triple_helper.: 0.760714s (num_starts 60; 0.0127s/start)
expandProductCFG.: 0.836485s (num_starts 4; 0.2091s/start)
decide_hoare_triple_with_alias_cons.: 0.841499s (num_starts 60; 0.0140s/start)
bestFirstSearch.: 1.02684s (num_starts 1; 1.0268s/start)
Time taken for equivalence check.: 1.10512s (num_starts 1; 1.1051s/start)

counters:
# of paths enumerated.: 12
# of paths expanded.: 3
# of queries to linear solver.: 19
# of smt-solver-queries.: 24
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 3
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 8
smt-queries-yices-sat.: 8
smt-queries-z3-sat.: 8
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%12%bbentry_Lfor.cond%1%bbentry.: 9
final-CG-counterexamples-total-at-L3%12%bbentry_Lfor.cond%1%bbentry.: 22
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 11
src-nodes.: 10
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.70
final-CG-time-to-total-time-ratio.: 0.68
query-time-to-total-time-ratio.: 0.26

Context stats:
exprs: count: 141159
sorts: count: 144
num_proof_queries: 32
num_proof_queries_answered_by_syntactic_check: 2
cache_stats:
m_simplify:
	----------- total:	3643
	        hit ratio:	0.958825
m_simplify_solver:
	----------- total:	503
	        hit ratio:	0.743539
m_z3_solver_substitution:
	----------- total:	126
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	129
	        hit ratio:	0
m_expr_size:
	----------- total:	2853
	        hit ratio:	0.930599
m_expr_evaluates_to_constant_visitor:
	----------- total:	2473
	        hit ratio:	0.775981
m_sort_dfa_canonicalize:
	----------- total:	18485
	        hit ratio:	0.999459
m_expr_convert_to_iexpr:
	----------- total:	391
	        hit ratio:	0.792839

z3_solver expr_query_cache entry size: 24
	----------- total:	31
	             hits:	7
	        hit ratio:	0.225806
histogram (time taken by solver in ms):
[ 2.1170,  2.8054) (avg.  2.2735)        : 2
[ 2.8054,  3.7178) (avg.  3.1233)        : 6
[ 3.7178,  4.9268) (avg.  4.0085)        : 4
[ 4.9268,  6.5289) (avg.  5.2822)        : 4
[ 6.5289,  8.6521) (avg.  0.0000)        : 0
[ 8.6521, 11.4658) (avg.  0.0000)        : 0
[11.4658, 15.1944) (avg.  0.0000)        : 0
[15.1944, 20.1356) (avg. 17.3885)        : 2
[20.1356, 26.6836) (avg. 20.6760)        : 1
[26.6836, 35.3610) (avg. 32.7756)        : 5
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  48) (avg.  40)                    : 1
[ 48,  56) (avg.   0)                    : 0
[ 56,  64) (avg.   0)                    : 0
[ 64,  71) (avg.  67)                    : 8
[ 71,  79) (avg.  75)                    : 5
[ 79,  87) (avg.  82)                    : 3
[ 87,  94) (avg.  91)                    : 4
[ 94, 102) (avg.  96)                    : 2
[102, 110) (avg. 107)                    : 1
[110, 117) (avg.   0)                    : 0
Top 10 highest time taking queries:
1. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond.0
2. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
3. [0.033s] SOLVER_RES_TRUE memlabel_assertions_sat.0
4. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%12%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL3%12%bbentry_Lfor.con.0
5. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
6. [0.021s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%12%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL3%12%bbe.0
7. [0.018s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
8. [0.017s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.006s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.wfcond.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.to_pcL3%12%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond..0
10. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.8.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 104 time spent: 0:0:0 [0.003537s total; 0.000034 per start]
tfg_computeWP: num_starts 231 time spent: 0:0:0 [0.029521s total; 0.000128 per start]
tfg_get_simplified_to_state_for_edge: num_starts 938 time spent: 0:0:0 [0.001811s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1076 time spent: 0:0:0 [0.001974s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 403 time spent: 0:0:0 [0.000818s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 24 time spent: 0:0:0 [0.116842s total; 0.004868 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.121119s total; 0.020186 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 328 time spent: 0:0:0 [0.069065s total; 0.000211 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 77 time spent: 0:0:0 [0.031857s total; 0.000414 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 278 time spent: 0:0:0 [0.046763s total; 0.000168 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1179 time spent: 0:0:0 [0.050074s total; 0.000042 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 278 time spent: 0:0:0 [0.008594s total; 0.000031 per start]
tfg_graph_get_vars_written_on_edge: num_starts 278 time spent: 0:0:0 [0.007299s total; 0.000026 per start]
cg_with_rank_add_CE_at_pc: num_starts 41 time spent: 0:0:0 [0.092977s total; 0.002268 per start]
graph_with_ce_add_CE_at_pc: num_starts 27 time spent: 0:0:0 [0.000796s total; 0.000029 per start]
graph_with_guessing_add_CE_at_pc: num_starts 41 time spent: 0:0:0 [0.091963s total; 0.002243 per start]
point_set_add_point_using_CE: num_starts 152 time spent: 0:0:0 [0.025232s total; 0.000166 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 152 time spent: 0:0:0 [0.025719s total; 0.000169 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.082955s total; 0.003607 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.056554s total; 0.002459 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1867 time spent: 0:0:0 [0.022613s total; 0.000012 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 304 time spent: 0:0:0 [0.011766s total; 0.000039 per start]
expr_simplify_solver: num_starts 536 time spent: 0:0:0 [0.049834s total; 0.000093 per start]
expr_simplify_syntactic: num_starts 536 time spent: 0:0:0 [0.027593s total; 0.000051 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.014817s total; 0.003704 per start]
expr_simplify_using_lhs_set_helper: num_starts 263 time spent: 0:0:0 [0.099351s total; 0.000378 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1150 time spent: 0:0:0 [0.097709s total; 0.000085 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 517 time spent: 0:0:0 [0.003106s total; 0.000006 per start]
expr_simplify_eq: num_starts 57 time spent: 0:0:0 [0.001120s total; 0.000020 per start]
expr_simplify_or: num_starts 16 time spent: 0:0:0 [0.000025s total; 0.000002 per start]
expr_simplify_and: num_starts 37 time spent: 0:0:0 [0.000290s total; 0.000008 per start]
expr_simplify_not: num_starts 19 time spent: 0:0:0 [0.000088s total; 0.000005 per start]
canonicalize_expr_tree: num_starts 152 time spent: 0:0:0 [0.004478s total; 0.000029 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.014682s total; 0.003671 per start]
get_arithmetic_addsub_atoms: num_starts 786 time spent: 0:0:0 [0.000853s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 244 time spent: 0:0:0 [0.003350s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 372 time spent: 0:0:0 [0.000371s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3925 time spent: 0:0:0 [0.100703s total; 0.000026 per start]
expr_do_simplify_helper_cache: num_starts 3925 time spent: 0:0:0 [0.004168s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 1041 time spent: 0:0:0 [0.061581s total; 0.000059 per start]
array_constant_equals: num_starts 468 time spent: 0:0:0 [0.000720s total; 0.000002 per start]
sort_dfa_canonical: num_starts 160200 time spent: 0:0:1 [1.211348s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 399 time spent: 0:0:0 [0.034447s total; 0.000086 per start]
combo_dfa_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.068126s total; 0.002271 per start]
alias_val_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.036594s total; 0.001220 per start]
get_sprel_map_from_avail_exprs: num_starts 47 time spent: 0:0:0 [0.003922s total; 0.000083 per start]
update_memlabels_for_memslot_locs: num_starts 15 time spent: 0:0:0 [0.000090s total; 0.000006 per start]
populate_gen_and_kill_sets_for_edge: num_starts 94 time spent: 0:0:0 [0.016589s total; 0.000176 per start]
compute_simplified_loc_exprs_for_edge: num_starts 261 time spent: 0:0:0 [0.044562s total; 0.000171 per start]
compute_locs_definitely_written_on_edge: num_starts 94 time spent: 0:0:0 [0.000197s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 34 time spent: 0:0:0 [0.008321s total; 0.000245 per start]
edge_update_memlabel_map_for_mlvars: num_starts 47 time spent: 0:0:0 [0.001258s total; 0.000027 per start]
add_new_locs_based_on_edge: num_starts 30 time spent: 0:0:0 [0.023901s total; 0.000797 per start]
expand_locset_to_include_slots_for_memmask: num_starts 62 time spent: 0:0:0 [0.000180s total; 0.000003 per start]
total: num_starts 1 time spent: 0:0:30 [30.596120s total; 30.596120 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 1.36s.
ftmap_run_pointsto_analysis.: 0.111767s (num_starts 2; 0.0559s/start)s.
EQ Time after pointsto analysis: 1.24524s.
EQ Time after pointsto analysis and smt_query: 0.557446s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.546791s.
Equivalence proof found. The programs are equivalent.
