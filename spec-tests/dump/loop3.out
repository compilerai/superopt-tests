argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --smt-query-timeout=5
argv[5] = --axpred-solver-max-depth=4
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=loop3.proof
argv[9] = --spec-iospecs=loop3.iospecs
argv[10] = loop3.spec
argv[11] = loop3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.460643
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop3.c
argv[10] = -o
argv[11] = par_tmpdir/loop3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/loop3.spec.etfg
argv[11] = par_tmpdir/loop3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/loop3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000114s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 102 time spent: 0:0:0 [0.000162s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 612 time spent: 0:0:0 [0.002256s total; 0.000004 per start]
expr_simplify_solver: num_starts 46 time spent: 0:0:0 [0.005013s total; 0.000109 per start]
expr_simplify_syntactic: num_starts 46 time spent: 0:0:0 [0.001919s total; 0.000042 per start]
expr_simplify_using_lhs_set_helper: num_starts 59 time spent: 0:0:0 [0.009506s total; 0.000161 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 135 time spent: 0:0:0 [0.009365s total; 0.000069 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000195s total; 0.000004 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000006s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 30 time spent: 0:0:0 [0.000407s total; 0.000014 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000049s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000689s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000122s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1397 time spent: 0:0:0 [0.010794s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1397 time spent: 0:0:0 [0.000925s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000007s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.043557s total; 0.000670 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.013604s total; 0.000209 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005382s total; 0.000063 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000084s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.005045s total; 0.000039 per start]
compute_simplified_loc_exprs_for_edge: num_starts 365 time spent: 0:0:0 [0.016552s total; 0.000045 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000051s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.004943s total; 0.000177 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000397s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.008326s total; 0.000128 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000087s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 6e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.5e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.8e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.8e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 2.1e-05s (num_starts 31; 0.0000s/start)
expr_is_callee_save_const.: 2.8e-05s (num_starts 26; 0.0000s/start)
add_extra_node_at_start_pc.: 2.9e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 2.9e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 3.8e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.3e-05s (num_starts 2; 0.0000s/start)
main.3.: 6.8e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 7.8e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 7.8e-05s (num_starts 1; 0.0001s/start)
propagate_sprels.: 8.5e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.9e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 9.7e-05s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000108s (num_starts 5; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000121s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.000127s (num_starts 177; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000139s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000163s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000163s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000177s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000199s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000283s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000286s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000297s (num_starts 1; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000311s (num_starts 65; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000348s (num_starts 1; 0.0003s/start)
compute_z3_expr.: 0.00039s (num_starts 28; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000423s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000427s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000427s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000453s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000471s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000519s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000612s (num_starts 65; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000686s (num_starts 1; 0.0007s/start)
populate_simplified_to_state.: 0.000701s (num_starts 3; 0.0002s/start)
populate_exit_return_values_for_llvm_method.: 0.000811s (num_starts 1; 0.0008s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001043s (num_starts 552; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001177s (num_starts 51; 0.0000s/start)
query:convert_from_z3.: 0.001273s (num_starts 28; 0.0000s/start)
create_closure_matrix.: 0.001285s (num_starts 85; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001329s (num_starts 102; 0.0000s/start)
graph_visit_exprs.: 0.001334s (num_starts 4; 0.0003s/start)
query:convert_to_z3.: 0.001389s (num_starts 28; 0.0000s/start)
compute_lr_status_for_expr.: 0.001421s (num_starts 36; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.00146s (num_starts 1; 0.0015s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001489s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001547s (num_starts 31; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001899s (num_starts 1; 0.0019s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001952s (num_starts 1; 0.0020s/start)
populate_transitive_closure.: 0.002306s (num_starts 1; 0.0023s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003345s (num_starts 65; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.003447s (num_starts 2; 0.0017s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.00357s (num_starts 1; 0.0036s/start)
query:simplify-z3.: 0.003634s (num_starts 58; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003921s (num_starts 612; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.00401s (num_starts 2; 0.0020s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.004041s (num_starts 1; 0.0040s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004189s (num_starts 1; 0.0042s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.00423s (num_starts 68; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.004233s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004322s (num_starts 2; 0.0022s/start)
populate_simplified_assets.: 0.004337s (num_starts 6; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004363s (num_starts 1; 0.0044s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004487s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004514s (num_starts 2; 0.0023s/start)
graph_to_stream.: 0.004604s (num_starts 1; 0.0046s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.004665s (num_starts 1; 0.0047s/start)
graph_identify_back_edges.: 0.005166s (num_starts 6; 0.0009s/start)
graph_identify_natural_loops.: 0.005399s (num_starts 6; 0.0009s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005645s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.005741s (num_starts 2; 0.0029s/start)
create_sp_version_relations_lattice_at_pc.: 0.006342s (num_starts 85; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.007313s (num_starts 1; 0.0073s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.007318s (num_starts 1; 0.0073s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.007322s (num_starts 1; 0.0073s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.007325s (num_starts 1; 0.0073s/start)
tfg_constructor.src.spec.foo.: 0.00733s (num_starts 1; 0.0073s/start)
avail_exprs_create_submap.: 0.00775s (num_starts 195; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.007993s (num_starts 3; 0.0027s/start)
find_dominators.: 0.008032s (num_starts 10; 0.0008s/start)
compute_regions.: 0.008785s (num_starts 6; 0.0015s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.009559s (num_starts 59; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.011625s (num_starts 1; 0.0116s/start)
tfg::tfg_preprocess.: 0.011628s (num_starts 1; 0.0116s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.012233s (num_starts 65; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.012342s (num_starts 3; 0.0041s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.01274s (num_starts 612; 0.0000s/start)
populate_loc_liveness.: 0.012882s (num_starts 2; 0.0064s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.013625s (num_starts 612; 0.0000s/start)
main.2.: 0.013656s (num_starts 1; 0.0137s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.013714s (num_starts 65; 0.0002s/start)
get_tfg.: 0.01515s (num_starts 1; 0.0152s/start)
get_function_tfg_map.foo.: 0.015179s (num_starts 1; 0.0152s/start)
get_function_tfg_map.: 0.015182s (num_starts 1; 0.0152s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.016706s (num_starts 612; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.03574s (num_starts 1; 0.0357s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.043651s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.044509s (num_starts 1; 0.0445s/start)
ftmap_run_pointsto_analysis.: 0.099386s (num_starts 1; 0.0994s/start)
parse_consts_db.: 6.71666s (num_starts 1; 6.7167s/start)
main.: 6.87915s (num_starts 1; 6.8792s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:06 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file loop3.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: foo...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:20 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%13%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L2%13%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%13%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%16%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L2%16%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%16%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG foo: Found 3 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%13%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L0%0%d --> L2%13%bbentry ending at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:20 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Computing loop hoisting select expressions at toPC L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Computing loop hoisting non-linear expressions at toPC L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Adding node L2%13%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:20 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Adding edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:20 : foo.A2: Added the 3 propagated CEs at PC L2%13%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:20 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L0%0%d --> L2%13%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%13%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L2%13%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%13%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L2%13%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L2%13%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:20 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%13%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%13%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L2%13%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%13%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L2%13%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L2%13%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:20 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:20 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:20 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:20 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:20 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:20 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:20 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:21 : foo.A2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%13%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%13%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L2%13%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L2%13%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : foo.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A2: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 2 paths to src pc L2%13%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%13%bbentry=>L2%13%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%13%bbentry=>L2%13%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 2 feasible correlations for paths to src pc L2%13%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A2: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>L2%13%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%13%bbentry --> L2%13%bbentry ending at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2.B2: Getting alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2.B2: Found no alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2.B2: Adding edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A2.B2: Propagated 4 out of 6 counter-examples across edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A2.B2: Added the 4 propagated CEs at PC L2%13%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A2.B2: Computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2.B2: Done computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC L2%13%bbentry_Lfor.cond%1%bbentry, src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%13%bbentry --> L2%13%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : Added correlation to the product-TFG foo.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 11 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>L2%13%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L2%13%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L2%13%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L2%13%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : foo.A2.B2: Done relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L2%13%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 2 CEs across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : foo.A2.B2: Done relaxing invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:21 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39


<MSG>0:21 : foo.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG foo.A2.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L2%13%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A2.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%13%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L2%13%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Getting alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Found no alloca-ptrs on edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Adding edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Propagated 5 out of 20 counter-examples across edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : foo.A2.B2.C1: Added the 5 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L2%13%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L2%13%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : Added correlation to the product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%13%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%13%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L2%13%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:21 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : foo.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:21 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%13%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%13%bbentry ; 4-->input.spec-%var-n-0.L2%13%bbentry ; 5-->input.spec-%var-r-0.L2%13%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L2%13%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%13%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:z3v487.ce138      3.:cvc4.ce107
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L2%13%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3v487.ce285
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39      2.:yices.ce41
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce138      2.:z3.ce209      3.:z3.ce361
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%13%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry => C L2%13%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%13%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L2%13%bbentry_Lfor.cond%1%bbentry (C L2%13%bbentry, A (line 3 at column 21))
                L2%13%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 20 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 1.17s, query:smt.: 0.271132s (num_starts 24; 0.0113s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.683548s (num_starts 60; 0.0114s/start)ftmap_run_pointsto_analysis.: 0.086365s (num_starts 2; 0.0432s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 2e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 3e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 1; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 5; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 6e-06s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 1.1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 1.1e-05s (num_starts 1; 0.0000s/start)
remove_complex_bv_exprs.: 1.2e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.3e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.3e-05s (num_starts 1; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.4e-05s (num_starts 14; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.5e-05s (num_starts 5; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.6e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.8e-05s (num_starts 19; 0.0000s/start)
prove_trivial.: 1.9e-05s (num_starts 30; 0.0000s/start)
ce_perform_memory_fuzzing.: 2.3e-05s (num_starts 21; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 2.6e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.8e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.8e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 3.1e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 3.1e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 3.4e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 4.7e-05s (num_starts 23; 0.0000s/start)
expr_is_hidden_reg.: 6.2e-05s (num_starts 84; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 6.5e-05s (num_starts 1; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 7.1e-05s (num_starts 62; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7.3e-05s (num_starts 60; 0.0000s/start)
lr_status_meet.: 8.9e-05s (num_starts 126; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 9.5e-05s (num_starts 19; 0.0000s/start)
expr_is_callee_save_const.: 9.9e-05s (num_starts 96; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000104s (num_starts 3; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry.: 0.000107s (num_starts 2; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000117s (num_starts 16; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00012s (num_starts 32; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000135s (num_starts 40; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000137s (num_starts 8; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000143s (num_starts 30; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000143s (num_starts 74; 0.0000s/start)
compute_sprel_relations.: 0.000149s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000159s (num_starts 30; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000159s (num_starts 280; 0.0000s/start)
propagate_sprels.: 0.00016s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.00017s (num_starts 40; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000185s (num_starts 17; 0.0000s/start)
populate_locid2expr_map.: 0.00019s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000191s (num_starts 1; 0.0002s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000195s (num_starts 6; 0.0000s/start)
compute_bv_bool_eqclass.: 0.0002s (num_starts 1; 0.0002s/start)
graph_locs_add_all_exvregs.: 0.000202s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000249s (num_starts 25; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000254s (num_starts 17; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.00026s (num_starts 1; 0.0003s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.00026s (num_starts 9; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000265s (num_starts 24; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000273s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000278s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000283s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00031s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000311s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000312s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00032s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000321s (num_starts 1; 0.0003s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000322s (num_starts 89; 0.0000s/start)
set_result_and_counter_example.: 0.000322s (num_starts 24; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000324s (num_starts 1; 0.0003s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000333s (num_starts 30; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000335s (num_starts 1; 0.0003s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000349s (num_starts 89; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000391s (num_starts 2; 0.0002s/start)
collect_assumes_around_edge.: 0.000393s (num_starts 3; 0.0001s/start)
identify_address_taken_local_variables.: 0.000422s (num_starts 1; 0.0004s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000436s (num_starts 8; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000483s (num_starts 2; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000484s (num_starts 40; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000487s (num_starts 60; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000488s (num_starts 2; 0.0002s/start)
proof_query_is_trivial.: 0.000493s (num_starts 62; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000533s (num_starts 40; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000561s (num_starts 1; 0.0006s/start)
create_closure_matrix.: 0.000596s (num_starts 62; 0.0000s/start)
populate_simplified_to_state.: 0.000603s (num_starts 3; 0.0002s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000624s (num_starts 269; 0.0000s/start)
construct_linear_combination_exprs.: 0.000634s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000637s (num_starts 1; 0.0006s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000656s (num_starts 47; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000661s (num_starts 3; 0.0002s/start)
expr_represents_llvm_undef.: 0.000664s (num_starts 103; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000666s (num_starts 1; 0.0007s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000723s (num_starts 5; 0.0001s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000749s (num_starts 23; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000757s (num_starts 1; 0.0008s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000774s (num_starts 30; 0.0000s/start)
ldr_decomposition.: 0.000857s (num_starts 19; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000867s (num_starts 5; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000893s (num_starts 5; 0.0002s/start)
pth_collect_preds_using_atom_func.: 0.000909s (num_starts 52; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000943s (num_starts 47; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000972s (num_starts 1; 0.0010s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000973s (num_starts 2; 0.0005s/start)
tfg_edge_composition_get_assumes.: 0.001026s (num_starts 52; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.001043s (num_starts 3; 0.0003s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001047s (num_starts 19; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.001111s (num_starts 5; 0.0002s/start)
removeMostPromising.: 0.001128s (num_starts 10; 0.0001s/start)
graph_locs_add_all_specvars.: 0.001184s (num_starts 2; 0.0006s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001241s (num_starts 24; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.001283s (num_starts 512; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001335s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.001337s (num_starts 2; 0.0007s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001338s (num_starts 3; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned;-trivial.: 0.00134s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.001342s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001348s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned.: 0.001354s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.001364s (num_starts 2; 0.0007s/start)
bv_const_ref_map2expr_map.: 0.001385s (num_starts 28; 0.0000s/start)
populate_simplified_assets.: 0.001393s (num_starts 6; 0.0002s/start)
tfg::populate_loc_definedness.: 0.001425s (num_starts 3; 0.0005s/start)
get_sprel_map_pair_at_pc.: 0.001447s (num_starts 32; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001449s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00145s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001452s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.001592s (num_starts 2; 0.0008s/start)
graph_visit_exprs.: 0.001762s (num_starts 3; 0.0006s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.00179s (num_starts 2; 0.0009s/start)
expr_linear_relation_holds::visit.var.: 0.001971s (num_starts 103; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001978s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.001982s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-trivial.: 0.001986s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.001988s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.001991s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.001995s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.001998s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-trivial.: 0.001999s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.002003s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed.: 0.002007s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002012s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.002018s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.002022s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.002025s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.002031s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002143s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.002148s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.002151s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002154s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002164s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.002171s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.002179s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.002186s (num_starts 3; 0.0007s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.002329s (num_starts 30; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.002352s (num_starts 2; 0.0012s/start)
tfg_suffixpath_get_expr_helper.: 0.002418s (num_starts 16; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.002439s (num_starts 186; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.002464s (num_starts 3; 0.0008s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.002545s (num_starts 30; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002663s (num_starts 3; 0.0009s/start)
populate_branch_affecting_locs.: 0.00269s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.002728s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.002734s (num_starts 4; 0.0007s/start)
graph_visit_exprs_and_keys.: 0.002742s (num_starts 2; 0.0014s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002805s (num_starts 24; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.002849s (num_starts 60; 0.0000s/start)
graph_identify_back_edges.: 0.002864s (num_starts 21; 0.0001s/start)
find_dominators.: 0.002921s (num_starts 25; 0.0001s/start)
graph_identify_natural_loops.: 0.003071s (num_starts 21; 0.0001s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.003102s (num_starts 1; 0.0031s/start)
expr_substitute_using_available_exprs_submap.: 0.00318s (num_starts 127; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.003386s (num_starts 112; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.003463s (num_starts 62; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003473s (num_starts 155; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003684s (num_starts 52; 0.0001s/start)
compute_vars_reaching_definitions.: 0.003842s (num_starts 2; 0.0019s/start)
compute_expr_eqclasses_at_pc.: 0.004019s (num_starts 1; 0.0040s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.004067s (num_starts 3; 0.0014s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.004073s (num_starts 20; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.004117s (num_starts 20; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004269s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004274s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.004282s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.004291s (num_starts 3; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.004304s (num_starts 6; 0.0007s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.004371s (num_starts 53; 0.0001s/start)
populate_transitive_closure.: 0.004436s (num_starts 27; 0.0002s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.004441s (num_starts 3; 0.0015s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004485s (num_starts 28; 0.0002s/start)
cg_add_node.: 0.004663s (num_starts 3; 0.0016s/start)
collect_assumes_around_path_helper.: 0.004738s (num_starts 89; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.004897s (num_starts 3; 0.0016s/start)
graph_with_paths::collect_assumes_around_path.: 0.004955s (num_starts 89; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.005125s (num_starts 106; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.005253s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005257s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.00526s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.005264s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005267s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.005325s (num_starts 18; 0.0003s/start)
collect_aliasing_constraints_around_path.: 0.005516s (num_starts 66; 0.0001s/start)
lhs_set_sort.: 0.005573s (num_starts 32; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005702s (num_starts 4; 0.0014s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005711s (num_starts 4; 0.0014s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.005764s (num_starts 3; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00577s (num_starts 4; 0.0014s/start)
ldr_decompose_and_linear_solve.: 0.005847s (num_starts 19; 0.0003s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.005989s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005992s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.005995s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.005997s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.006001s (num_starts 1; 0.0060s/start)
predicate_canonicalized.: 0.006042s (num_starts 28; 0.0002s/start)
bv_linear_solve.: 0.006204s (num_starts 19; 0.0003s/start)
query:bv_solve.: 0.006315s (num_starts 19; 0.0003s/start)
check_node_stability_after_CE_addition.: 0.006392s (num_starts 39; 0.0002s/start)
create_new_corr_graph_edge.new_node.: 0.006426s (num_starts 2; 0.0032s/start)
get_next_potential_correlations.: 0.006438s (num_starts 3; 0.0021s/start)
create_new_corr_graph_edge.: 0.006566s (num_starts 3; 0.0022s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.006628s (num_starts 47; 0.0001s/start)
compute_lr_status_for_expr.: 0.006724s (num_starts 134; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.00684s (num_starts 47; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.006963s (num_starts 133; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007235s (num_starts 126; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007463s (num_starts 126; 0.0001s/start)
collect_inductive_preds_around_path.: 0.007539s (num_starts 60; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.00762s (num_starts 19; 0.0004s/start)
compute_regions.: 0.007671s (num_starts 21; 0.0004s/start)
counter_example_falsifies_preds.: 0.008078s (num_starts 71; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008321s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008325s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008327s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.008328s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00833s (num_starts 1; 0.0083s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.008339s (num_starts 1; 0.0083s/start)
query:convert_from_z3.: 0.008633s (num_starts 140; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.008641s (num_starts 47; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.008661s (num_starts 2; 0.0043s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.008669s (num_starts 2; 0.0043s/start)
bvsolve_cache_query.miss1.: 0.008752s (num_starts 19; 0.0005s/start)
counter_example_satisfies_preds.: 0.008877s (num_starts 343; 0.0000s/start)
bvsolve_cache_query.: 0.008934s (num_starts 19; 0.0005s/start)
query:convert_to_z3.: 0.008973s (num_starts 140; 0.0001s/start)
avail_exprs_create_submap.: 0.00902s (num_starts 141; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009306s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009309s (num_starts 1; 0.0093s/start)
gen_pred_from_coeff_row.simplify.: 0.009364s (num_starts 28; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009927s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009929s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.009935s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.01004s (num_starts 4; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.010051s (num_starts 4; 0.0025s/start)
populate_loc_liveness.: 0.010244s (num_starts 3; 0.0034s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.010725s (num_starts 4; 0.0027s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.010731s (num_starts 743; 0.0000s/start)
solve_for_bv_points.: 0.010913s (num_starts 19; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.011397s (num_starts 2; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.011622s (num_starts 6; 0.0019s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.011721s (num_starts 17; 0.0007s/start)
do_ssa_transformation.: 0.01227s (num_starts 2; 0.0061s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.01238s (num_starts 6; 0.0021s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.012856s (num_starts 79; 0.0002s/start)
put_smtlib_string_in_file.: 0.012926s (num_starts 48; 0.0003s/start)
graph_to_stream.: 0.013205s (num_starts 4; 0.0033s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.013246s (num_starts 19; 0.0007s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013909s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013912s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013915s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013917s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01392s (num_starts 1; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.014101s (num_starts 8; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.014116s (num_starts 8; 0.0018s/start)
compute_new_lr_status_on_locs.: 0.014334s (num_starts 47; 0.0003s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.014422s (num_starts 1; 0.0144s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.01456s (num_starts 77; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.014584s (num_starts 3; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.014593s (num_starts 3; 0.0049s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.01466s (num_starts 337; 0.0000s/start)
counter_example_evaluate_preds.: 0.016022s (num_starts 414; 0.0000s/start)
compute_z3_expr.: 0.016259s (num_starts 164; 0.0001s/start)
get_unrolled_paths_from.: 0.016749s (num_starts 15; 0.0011s/start)
tfg_relax_pointsto_vals_on_edge.: 0.018223s (num_starts 17; 0.0011s/start)
gen_pred_from_coeff_row.: 0.018463s (num_starts 28; 0.0007s/start)
parse_yices_model.: 0.018481s (num_starts 8; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018499s (num_starts 2; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018505s (num_starts 2; 0.0093s/start)
parse_z3_model.: 0.018676s (num_starts 8; 0.0023s/start)
compute_preds_for_bv_points.: 0.018718s (num_starts 5; 0.0037s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.018762s (num_starts 9; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019045s (num_starts 1; 0.0190s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019048s (num_starts 1; 0.0190s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.019053s (num_starts 1; 0.0191s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.019055s (num_starts 1; 0.0191s/start)
parse_cvc4_model.: 0.019244s (num_starts 8; 0.0024s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.019266s (num_starts 1; 0.0193s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019795s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019798s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.019804s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.01981s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.019926s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.019932s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.019938s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.019943s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.019961s (num_starts 2; 0.0100s/start)
tfg_postprocess_after_pointsto_analysis.: 0.02008s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.020114s (num_starts 4; 0.0050s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.020945s (num_starts 152; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.021183s (num_starts 47; 0.0005s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.02175s (num_starts 783; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.022919s (num_starts 743; 0.0000s/start)
guarded_predicate_set_and.: 0.023964s (num_starts 30; 0.0008s/start)
propagate_nodece_across_edge.: 0.023999s (num_starts 9; 0.0027s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.024094s (num_starts 12; 0.0020s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.02459s (num_starts 70; 0.0004s/start)
check_wfconds_on_edge.L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry.: 0.024738s (num_starts 3; 0.0082s/start)
graph_ec_apply_trans_funs_helper.0.: 0.025433s (num_starts 156; 0.0002s/start)
query:simplify-z3.: 0.025892s (num_starts 282; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.026594s (num_starts 161; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.026898s (num_starts 161; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.027303s (num_starts 161; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.027715s (num_starts 161; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.028422s (num_starts 18; 0.0016s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.028797s (num_starts 32; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028962s (num_starts 2; 0.0145s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.028967s (num_starts 2; 0.0145s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.029008s (num_starts 2; 0.0145s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029091s (num_starts 3; 0.0097s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029098s (num_starts 3; 0.0097s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.029763s (num_starts 16; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.030187s (num_starts 8; 0.0038s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.030401s (num_starts 23; 0.0013s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.03124s (num_starts 30; 0.0010s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.03136s (num_starts 743; 0.0000s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.031496s (num_starts 32; 0.0010s/start)
apply_mask_and_overlay_array_constant.: 0.032031s (num_starts 23; 0.0014s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.03442s (num_starts 5; 0.0069s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.034432s (num_starts 5; 0.0069s/start)
edge_composition_apply_trans_funs_on_pred.: 0.034592s (num_starts 60; 0.0006s/start)
check_wfconds_on_edge.L2%13%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.03474s (num_starts 2; 0.0174s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.034763s (num_starts 6; 0.0058s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.035146s (num_starts 77; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047514s (num_starts 4; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047537s (num_starts 4; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047548s (num_starts 4; 0.0119s/start)
decide_hoare_triple_helper;-trivial.: 0.054352s (num_starts 37; 0.0015s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.056995s (num_starts 30; 0.0019s/start)
read_counter_examples_from_channel.: 0.057717s (num_starts 8; 0.0072s/start)
check_wfconds_on_edge.: 0.059655s (num_starts 7; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.060793s (num_starts 1; 0.0608s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.060795s (num_starts 1; 0.0608s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.060803s (num_starts 1; 0.0608s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.060808s (num_starts 1; 0.0608s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.061698s (num_starts 12; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.061726s (num_starts 12; 0.0051s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.062978s (num_starts 3; 0.0210s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.063766s (num_starts 35; 0.0018s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.063996s (num_starts 35; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067957s (num_starts 3; 0.0227s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067967s (num_starts 3; 0.0227s/start)
check_equivalence_proof.: 0.070024s (num_starts 1; 0.0700s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.070731s (num_starts 7; 0.0101s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.070743s (num_starts 7; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.071853s (num_starts 16; 0.0045s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%13%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.072761s (num_starts 15; 0.0049s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.074273s (num_starts 230; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074929s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074931s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.074945s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.074948s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078327s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078332s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078335s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07834s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.07835s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned.: 0.078358s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.078371s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078837s (num_starts 1; 0.0788s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078839s (num_starts 1; 0.0788s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078841s (num_starts 1; 0.0788s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078842s (num_starts 1; 0.0788s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.078848s (num_starts 1; 0.0788s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.078851s (num_starts 1; 0.0789s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.078856s (num_starts 1; 0.0789s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.079199s (num_starts 2; 0.0396s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.079725s (num_starts 4; 0.0199s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.084698s (num_starts 1; 0.0847s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.08527s (num_starts 21; 0.0041s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.085477s (num_starts 41; 0.0021s/start)
ftmap_run_pointsto_analysis.: 0.086365s (num_starts 2; 0.0432s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086427s (num_starts 5; 0.0173s/start)
tfg_run_pointsto_analysis.: 0.086674s (num_starts 2; 0.0433s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.088727s (num_starts 3; 0.0296s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);linear.: 0.090917s (num_starts 11; 0.0083s/start)
counter_example_translate_on_edge_composition_helper.: 0.092613s (num_starts 345; 0.0003s/start)
tfg_populate_structs_after_ssa_construction.: 0.095888s (num_starts 2; 0.0479s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.097667s (num_starts 17; 0.0057s/start)
corr_graph::add_edge().: 0.103193s (num_starts 3; 0.0344s/start)
check_preds_on_edge_compositions.: 0.104468s (num_starts 10; 0.0104s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.110608s (num_starts 3; 0.0369s/start)
corr_graph_add_correlation.: 0.110716s (num_starts 3; 0.0369s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.110853s (num_starts 2; 0.0554s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.113206s (num_starts 3; 0.0377s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.115372s (num_starts 7; 0.0165s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119638s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119646s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.11965s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119658s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.119677s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed.: 0.119684s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.119696s (num_starts 2; 0.0598s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.121707s (num_starts 5; 0.0243s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%13%bbentry_Lfor.cond%1%bbentry).: 0.127592s (num_starts 24; 0.0053s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.13396s (num_starts 9; 0.0149s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135712s (num_starts 2; 0.0679s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.135769s (num_starts 2; 0.0679s/start)
ce_reconcile_sorts_and_values.: 0.153916s (num_starts 24; 0.0064s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.162714s (num_starts 27; 0.0060s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.173116s (num_starts 6; 0.0289s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.178572s (num_starts 8; 0.0223s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.: 0.180257s (num_starts 9; 0.0200s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.214556s (num_starts 3; 0.0715s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.214617s (num_starts 3; 0.0715s/start)
dst_edge_composition_proves_false.: 0.226853s (num_starts 3; 0.0756s/start)
decide_hoare_triple.: 0.227829s (num_starts 5; 0.0456s/start)
get_next_dst_edge_composition_to_correlate.: 0.235817s (num_starts 4; 0.0590s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245453s (num_starts 8; 0.0307s/start)
query:smt.: 0.271132s (num_starts 24; 0.0113s/start)
decide_hoare_triple_helper;per-path;L2%13%bbentry_Lfor.cond%1%bbentry;(L2%13%bbentry_Lfor.cond%1%bbentry=>L2%13%bbentry_Lfor.cond%1%bbentry).: 0.275753s (num_starts 24; 0.0115s/start)
spawn_smt_query.: 0.329093s (num_starts 24; 0.0137s/start)
solver_provable.: 0.503996s (num_starts 30; 0.0168s/start)
expr_is_provable.: 0.509341s (num_starts 30; 0.0170s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.50979s (num_starts 30; 0.0170s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.511352s (num_starts 30; 0.0170s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.512093s (num_starts 30; 0.0171s/start)
update_invariant_state_for_edges.: 0.513429s (num_starts 3; 0.1711s/start)
cg_check_new_cg_ec.: 0.515533s (num_starts 3; 0.1718s/start)
correl_entry_apply.: 0.515666s (num_starts 3; 0.1719s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.538305s (num_starts 30; 0.0179s/start)
solver_satisfiable-cache-miss.: 0.538371s (num_starts 24; 0.0224s/start)
solver_satisfiable.: 0.538532s (num_starts 31; 0.0174s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.543017s (num_starts 32; 0.0170s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.543553s (num_starts 32; 0.0170s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.574798s (num_starts 32; 0.0180s/start)
prove.: 0.574996s (num_starts 32; 0.0180s/start)
prove_spawn_and_join_helper.: 0.575128s (num_starts 32; 0.0180s/start)
prove_spawn_and_join.: 0.617213s (num_starts 32; 0.0193s/start)
prove_wrapper.proof_query_not_trivial.: 0.620332s (num_starts 32; 0.0194s/start)
prove_wrapper.: 0.626735s (num_starts 62; 0.0101s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.62752s (num_starts 23; 0.0273s/start)
decide_hoare_triple_check_ub.: 0.664687s (num_starts 60; 0.0111s/start)
decide_hoare_triple_helper.: 0.683548s (num_starts 60; 0.0114s/start)
expandProductCFG.: 0.758523s (num_starts 4; 0.1896s/start)
decide_hoare_triple_with_alias_cons.: 0.769368s (num_starts 60; 0.0128s/start)
bestFirstSearch.: 0.915609s (num_starts 1; 0.9156s/start)
Time taken for equivalence check.: 0.98687s (num_starts 1; 0.9869s/start)

counters:
# of paths enumerated.: 12
# of paths expanded.: 3
# of queries to linear solver.: 19
# of smt-solver-queries.: 24
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 3
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%13%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 8
smt-queries-yices-sat.: 8
smt-queries-z3-sat.: 8
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%13%bbentry_Lfor.cond%1%bbentry.: 8
final-CG-counterexamples-total-at-L2%13%bbentry_Lfor.cond%1%bbentry.: 20
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 11
src-nodes.: 10
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.63
final-CG-time-to-total-time-ratio.: 0.68
query-time-to-total-time-ratio.: 0.28

Context stats:
exprs: count: 141160
sorts: count: 144
num_proof_queries: 32
num_proof_queries_answered_by_syntactic_check: 2
cache_stats:
m_simplify:
	----------- total:	3643
	        hit ratio:	0.954433
m_simplify_solver:
	----------- total:	561
	        hit ratio:	0.741533
m_z3_solver_substitution:
	----------- total:	142
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	145
	        hit ratio:	0
m_expr_size:
	----------- total:	2971
	        hit ratio:	0.927297
m_expr_evaluates_to_constant_visitor:
	----------- total:	2579
	        hit ratio:	0.759209

z3_solver expr_query_cache entry size: 24
	----------- total:	31
	             hits:	7
	        hit ratio:	0.225806
histogram (time taken by solver in ms):
[ 2.9280,  3.7366) (avg.  3.2198)        : 6
[ 3.7366,  4.7684) (avg.  4.1756)        : 8
[ 4.7684,  6.0852) (avg.  5.1195)        : 2
[ 6.0852,  7.7656) (avg.  0.0000)        : 0
[ 7.7656,  9.9100) (avg.  0.0000)        : 0
[ 9.9100, 12.6466) (avg.  0.0000)        : 0
[12.6466, 16.1389) (avg. 13.1480)        : 1
[16.1389, 20.5956) (avg. 17.7260)        : 1
[20.5956, 26.2830) (avg. 24.8060)        : 1
[26.2830, 33.5410) (avg. 30.4604)        : 5
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  49) (avg.  40)                    : 1
[ 49,  58) (avg.   0)                    : 0
[ 58,  67) (avg.  66)                    : 2
[ 67,  76) (avg.  71)                    : 9
[ 76,  85) (avg.  81)                    : 4
[ 85,  94) (avg.  91)                    : 2
[ 94, 103) (avg. 100)                    : 3
[103, 112) (avg. 103)                    : 2
[112, 121) (avg. 119)                    : 1
[121, 129) (avg.   0)                    : 0
Top 10 highest time taking queries:
1. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond.0
3. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
4. [0.030s] SOLVER_RES_TRUE memlabel_assertions_sat.0
5. [0.028s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%13%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%13%bbe.0
6. [0.025s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%13%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%13%bbentry_Lfor.con.0
7. [0.018s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
8. [0.013s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.8.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
10. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-unsigned.from_pcL2%13%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0

<MSG>0:21 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 104 time spent: 0:0:0 [0.002877s total; 0.000028 per start]
tfg_computeWP: num_starts 231 time spent: 0:0:0 [0.022495s total; 0.000097 per start]
tfg_get_simplified_to_state_for_edge: num_starts 911 time spent: 0:0:0 [0.001449s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1044 time spent: 0:0:0 [0.001602s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 403 time spent: 0:0:0 [0.000695s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 24 time spent: 0:0:0 [0.096888s total; 0.004037 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.098680s total; 0.016447 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 296 time spent: 0:0:0 [0.080046s total; 0.000270 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 72 time spent: 0:0:0 [0.028388s total; 0.000394 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 251 time spent: 0:0:0 [0.060307s total; 0.000240 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1084 time spent: 0:0:0 [0.064685s total; 0.000060 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 251 time spent: 0:0:0 [0.006916s total; 0.000028 per start]
tfg_graph_get_vars_written_on_edge: num_starts 251 time spent: 0:0:0 [0.005575s total; 0.000022 per start]
cg_with_rank_add_CE_at_pc: num_starts 39 time spent: 0:0:0 [0.072620s total; 0.001862 per start]
graph_with_ce_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.000597s total; 0.000024 per start]
graph_with_guessing_add_CE_at_pc: num_starts 39 time spent: 0:0:0 [0.071859s total; 0.001843 per start]
point_set_add_point_using_CE: num_starts 152 time spent: 0:0:0 [0.020352s total; 0.000134 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 152 time spent: 0:0:0 [0.020768s total; 0.000137 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.064645s total; 0.002938 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.043309s total; 0.001969 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1867 time spent: 0:0:0 [0.018282s total; 0.000010 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 304 time spent: 0:0:0 [0.009418s total; 0.000031 per start]
expr_simplify_solver: num_starts 594 time spent: 0:0:0 [0.043415s total; 0.000073 per start]
expr_simplify_syntactic: num_starts 594 time spent: 0:0:0 [0.021213s total; 0.000036 per start]
expr_simplify_select_on_store: num_starts 4 time spent: 0:0:0 [0.011091s total; 0.002773 per start]
expr_simplify_using_lhs_set_helper: num_starts 279 time spent: 0:0:0 [0.084017s total; 0.000301 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1246 time spent: 0:0:0 [0.082607s total; 0.000066 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 598 time spent: 0:0:0 [0.002559s total; 0.000004 per start]
expr_simplify_eq: num_starts 93 time spent: 0:0:0 [0.001103s total; 0.000012 per start]
expr_simplify_or: num_starts 16 time spent: 0:0:0 [0.000025s total; 0.000002 per start]
expr_simplify_and: num_starts 41 time spent: 0:0:0 [0.000239s total; 0.000006 per start]
expr_simplify_not: num_starts 20 time spent: 0:0:0 [0.000071s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 168 time spent: 0:0:0 [0.003822s total; 0.000023 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 4 time spent: 0:0:0 [0.010992s total; 0.002748 per start]
get_arithmetic_addsub_atoms: num_starts 871 time spent: 0:0:0 [0.000727s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 244 time spent: 0:0:0 [0.002696s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 378 time spent: 0:0:0 [0.000327s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3925 time spent: 0:0:0 [0.085187s total; 0.000022 per start]
expr_do_simplify_helper_cache: num_starts 3925 time spent: 0:0:0 [0.003456s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 978 time spent: 0:0:0 [0.073881s total; 0.000076 per start]
array_constant_equals: num_starts 462 time spent: 0:0:0 [0.000584s total; 0.000001 per start]
combo_dfa_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.056942s total; 0.001898 per start]
alias_val_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.031162s total; 0.001039 per start]
get_sprel_map_from_avail_exprs: num_starts 47 time spent: 0:0:0 [0.003153s total; 0.000067 per start]
update_memlabels_for_memslot_locs: num_starts 15 time spent: 0:0:0 [0.000070s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 94 time spent: 0:0:0 [0.013721s total; 0.000146 per start]
compute_simplified_loc_exprs_for_edge: num_starts 261 time spent: 0:0:0 [0.037000s total; 0.000142 per start]
compute_locs_definitely_written_on_edge: num_starts 94 time spent: 0:0:0 [0.000160s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 34 time spent: 0:0:0 [0.005879s total; 0.000173 per start]
edge_update_memlabel_map_for_mlvars: num_starts 47 time spent: 0:0:0 [0.001019s total; 0.000022 per start]
add_new_locs_based_on_edge: num_starts 30 time spent: 0:0:0 [0.020437s total; 0.000681 per start]
expand_locset_to_include_slots_for_memmask: num_starts 62 time spent: 0:0:0 [0.000123s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:28 [28.406960s total; 28.406960 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 1.17s.
ftmap_run_pointsto_analysis.: 0.086365s (num_starts 2; 0.0432s/start)s.
EQ Time after pointsto analysis: 1.08376s.
EQ Time after pointsto analysis and smt_query: 0.457023s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.448089s.
Equivalence proof found. The programs are equivalent.
