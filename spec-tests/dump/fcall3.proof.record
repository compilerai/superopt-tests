==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x84 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x73 (or (bvugt input.memlabel-mem--arg.1_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) $x73) (or $x77 $x78)) (or $x83 $x84))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x13)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (and $x9 $x12)))
 (let (($x17 (and $x6 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x84 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x73 (or (bvugt input.memlabel-mem--arg.1_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) $x73) (or $x77 $x78)) (or $x83 $x84))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x13)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (and $x9 $x12)))
 (let (($x17 (and $x6 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.1_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin #b11111111111000000000000000000000)
(= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ #b11111111111000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin #b11111111100000000000000000000000)
(= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ #b11111111100000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end #b11111111100000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end #b11111111111000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x61e31000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x61e31003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6de35f8f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x61e31000)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv3120919143 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3763329255 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x247 (= false true)))
 (let ((?x232 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x234 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x241 (concat ?x240 (concat ?x237 (concat ?x234 ?x232)))))
 (let (($x242 (= ?x241 input.dst.llvm-%m2)))
 (let (($x243 (= $x242 true)))
 (let ((?x218 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x227 (concat ?x226 (concat ?x223 (concat ?x220 ?x218)))))
 (let (($x228 (= ?x227 input.dst.llvm-%m1)))
 (let (($x229 (= $x228 true)))
 (let (($x213 (forall ((input.ind-%var63X (_ BitVec 32)) )(let ((?x156 (bvmul input.ind-%var63X (_ bv4 32))))
 (let ((?x200 (bvadd ?x156 input.dst.llvm-%m1)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv1 32))) (select input.dst.llvm-mem ?x200))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv2 32))) ?x204))))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var63X)))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var63X)))
 (=> $x45 (= ?x46 ?x210)))))))))
 ))
 (let (($x181 (forall ((input.ind-%var62X (_ BitVec 32)) )(let (($x131 (and (bvule (_ bv0 32) input.ind-%var62X) (bvult input.ind-%var62X (_ bv100 32)))))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var62X)))
 (= $x45 $x131))))
 ))
 (let (($x214 (and $x181 $x213)))
 (let (($x215 (= $x214 true)))
 (let (($x170 (forall ((input.ind-%var51X (_ BitVec 32)) )(let ((?x156 (bvmul input.ind-%var51X (_ bv4 32))))
 (let ((?x157 (bvadd ?x156 input.dst.llvm-%m2)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x161))))
 (let ((?x8 (input.spec-%var-m2-1.1.1 input.ind-%var51X)))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var51X)))
 (=> $x48 (= ?x8 ?x167)))))))))
 ))
 (let (($x133 (forall ((input.ind-%var50X (_ BitVec 32)) )(let (($x131 (and (bvule (_ bv0 32) input.ind-%var50X) (bvult input.ind-%var50X (_ bv100 32)))))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var50X)))
 (= $x48 $x131))))
 ))
 (let (($x171 (and $x133 $x170)))
 (let (($x172 (= $x171 true)))
 (let ((?x111 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x112 (= (_ bv0 32) ?x111)))
 (let ((?x109 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x110 (= (_ bv0 32) ?x109)))
 (let ((?x107 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x107)))
 (let ((?x103 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x103)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x105 (and $x101 $x104)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x106 (and $x100 $x105)))
 (let (($x99 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x92 (and $x59 $x91)))
 (let (($x93 (not $x92)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x57 (and $x90 $x58)))
 (let (($x95 (and (not $x57) $x93)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x82 $x84)))
 (let (($x86 (not $x85)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x31 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (and $x31 $x78)))
 (let (($x88 (and (not $x83) $x86)))
 (let (($x118 (and (and (and (and (and (and $x88 $x95) $x97) $x99) $x106) $x108) $x110)))
 (let (($x119 (and $x118 $x112)))
 (let (($x56 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x22 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x22)))
 (let (($x25 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x22)))
 (let (($x49 (or false (or false (and (and true (or $x37 $x25)) (or $x69 $x56))))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x49)))
 (let (($x120 (and $x81 $x119)))
 (let (($x121 (= $x120 true)))
 (let (($x173 (and $x121 $x172)))
 (let (($x216 (and $x173 $x215)))
 (let (($x230 (and $x216 $x229)))
 (let (($x244 (and $x230 $x243)))
 (let (($x47 (forall ((input.ind-%var75X (_ BitVec 32)) )(let ((?x41 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var75X)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var75X)))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var75X)))
 (=> $x45 (= ?x46 ?x41))))))
 ))
 (let (($x77 (forall ((input.ind-%var74X (_ BitVec 32)) )(let (($x24 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var74X)))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var74X)))
 (= $x45 $x24))))
 ))
 (let (($x28 (and $x77 $x47)))
 (let (($x245 (and $x28 $x244)))
 (let (($x80 (forall ((input.ind-%var87X (_ BitVec 32)) )(let ((?x44 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var87X)))
 (let ((?x8 (input.spec-%var-m2-1.1.1 input.ind-%var87X)))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var87X)))
 (=> $x48 (= ?x8 ?x44))))))
 ))
 (let (($x53 (forall ((input.ind-%var86X (_ BitVec 32)) )(let (($x34 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var86X)))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var86X)))
 (= $x48 $x34))))
 ))
 (let (($x54 (and $x53 $x80)))
 (let (($x246 (and $x54 $x245)))
 (let (($x248 (=> $x246 $x247)))
 (not $x248)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x247 (= false true)))
 (let ((?x232 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x234 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x241 (concat ?x240 (concat ?x237 (concat ?x234 ?x232)))))
 (let (($x242 (= ?x241 input.dst.llvm-%m2)))
 (let (($x243 (= $x242 true)))
 (let ((?x218 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x227 (concat ?x226 (concat ?x223 (concat ?x220 ?x218)))))
 (let (($x228 (= ?x227 input.dst.llvm-%m1)))
 (let (($x229 (= $x228 true)))
 (let (($x213 (forall ((input.ind-%var63X (_ BitVec 32)) )(let ((?x156 (bvmul input.ind-%var63X (_ bv4 32))))
 (let ((?x200 (bvadd ?x156 input.dst.llvm-%m1)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv1 32))) (select input.dst.llvm-mem ?x200))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv2 32))) ?x204))))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var63X)))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var63X)))
 (=> $x45 (= ?x46 ?x210)))))))))
 ))
 (let (($x181 (forall ((input.ind-%var62X (_ BitVec 32)) )(let (($x131 (and (bvule (_ bv0 32) input.ind-%var62X) (bvult input.ind-%var62X (_ bv100 32)))))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var62X)))
 (= $x45 $x131))))
 ))
 (let (($x214 (and $x181 $x213)))
 (let (($x215 (= $x214 true)))
 (let (($x170 (forall ((input.ind-%var51X (_ BitVec 32)) )(let ((?x156 (bvmul input.ind-%var51X (_ bv4 32))))
 (let ((?x157 (bvadd ?x156 input.dst.llvm-%m2)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x161))))
 (let ((?x8 (input.spec-%var-m2-1.1.1 input.ind-%var51X)))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var51X)))
 (=> $x48 (= ?x8 ?x167)))))))))
 ))
 (let (($x133 (forall ((input.ind-%var50X (_ BitVec 32)) )(let (($x131 (and (bvule (_ bv0 32) input.ind-%var50X) (bvult input.ind-%var50X (_ bv100 32)))))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var50X)))
 (= $x48 $x131))))
 ))
 (let (($x171 (and $x133 $x170)))
 (let (($x172 (= $x171 true)))
 (let ((?x111 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x112 (= (_ bv0 32) ?x111)))
 (let ((?x109 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x110 (= (_ bv0 32) ?x109)))
 (let ((?x107 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x107)))
 (let ((?x103 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x103)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x105 (and $x101 $x104)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x106 (and $x100 $x105)))
 (let (($x99 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x92 (and $x59 $x91)))
 (let (($x93 (not $x92)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x57 (and $x90 $x58)))
 (let (($x95 (and (not $x57) $x93)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x82 $x84)))
 (let (($x86 (not $x85)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x31 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (and $x31 $x78)))
 (let (($x88 (and (not $x83) $x86)))
 (let (($x118 (and (and (and (and (and (and $x88 $x95) $x97) $x99) $x106) $x108) $x110)))
 (let (($x119 (and $x118 $x112)))
 (let (($x56 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x22 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x22)))
 (let (($x25 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x22)))
 (let (($x49 (or false (or false (and (and true (or $x37 $x25)) (or $x69 $x56))))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x49)))
 (let (($x120 (and $x81 $x119)))
 (let (($x121 (= $x120 true)))
 (let (($x173 (and $x121 $x172)))
 (let (($x216 (and $x173 $x215)))
 (let (($x230 (and $x216 $x229)))
 (let (($x244 (and $x230 $x243)))
 (let (($x47 (forall ((input.ind-%var75X (_ BitVec 32)) )(let ((?x41 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var75X)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var75X)))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var75X)))
 (=> $x45 (= ?x46 ?x41))))))
 ))
 (let (($x77 (forall ((input.ind-%var74X (_ BitVec 32)) )(let (($x24 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var74X)))
 (let (($x45 (input.spec-%var-m1-1.0.1 input.ind-%var74X)))
 (= $x45 $x24))))
 ))
 (let (($x28 (and $x77 $x47)))
 (let (($x245 (and $x28 $x244)))
 (let (($x80 (forall ((input.ind-%var87X (_ BitVec 32)) )(let ((?x44 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var87X)))
 (let ((?x8 (input.spec-%var-m2-1.1.1 input.ind-%var87X)))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var87X)))
 (=> $x48 (= ?x8 ?x44))))))
 ))
 (let (($x53 (forall ((input.ind-%var86X (_ BitVec 32)) )(let (($x34 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var86X)))
 (let (($x48 (input.spec-%var-m2-1.0.1 input.ind-%var86X)))
 (= $x48 $x34))))
 ))
 (let (($x54 (and $x53 $x80)))
 (let (($x246 (and $x54 $x245)))
 (let (($x248 (=> $x246 $x247)))
 (not $x248)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000100)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000103)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000100)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000103)
                                   (k!0 #x00000102)
                                   (k!0 #x00000101)
                                   (k!0 #x00000100)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000103)
                                   (k!0 #x00000102)
                                   (k!0 #x00000101)
                                   (k!0 #x00000100)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000103)
                                   (k!0 #x00000102)
                                   (k!0 #x00000101)
                                   (k!0 #x00000100)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000103)
                                   (k!0 #x00000102)
                                   (k!0 #x00000101)
                                   (k!0 #x00000100))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xbb9e7f54)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6af5fe68)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xf91cbafc)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xfdf7dea8)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6af5fe6b)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xbb9e7f57)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6af5fe68)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xbb9e7f54)
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x6af5fe6b) #xfd
    (ite (= x!0 #xbb9e7f55) #xba
    (ite (= x!0 #x6af5fe68) #xa8
    (ite (= x!0 #xbb9e7f57) #xf9
    (ite (= x!0 #xbb9e7f54) #xfc
    (ite (= x!0 #xbb9e7f56) #x1c
    (ite (= x!0 #x6af5fe6a) #xf7
    (ite (= x!0 #x6af5fe69) #xde
      #x00)))))))))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xbb9e7f57)
                                      (k!11 #xbb9e7f56)
                                      (k!11 #xbb9e7f55)
                                      (k!11 #xbb9e7f54)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xbb9e7f57)
                                      (k!11 #xbb9e7f56)
                                      (k!11 #xbb9e7f55)
                                      (k!11 #xbb9e7f54)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xbb9e7f57)
                                      (k!11 #xbb9e7f56)
                                      (k!11 #xbb9e7f55)
                                      (k!11 #xbb9e7f54)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #xbb9e7f57)
                                      (k!11 #xbb9e7f56)
                                      (k!11 #xbb9e7f55)
                                      (k!11 #xbb9e7f54))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x6af5fe6b)
                                      (k!11 #x6af5fe6a)
                                      (k!11 #x6af5fe69)
                                      (k!11 #x6af5fe68)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x6af5fe6b)
                                      (k!11 #x6af5fe6a)
                                      (k!11 #x6af5fe69)
                                      (k!11 #x6af5fe68)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x6af5fe6b)
                                      (k!11 #x6af5fe6a)
                                      (k!11 #x6af5fe69)
                                      (k!11 #x6af5fe68)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x6af5fe6b)
                                      (k!11 #x6af5fe6a)
                                      (k!11 #x6af5fe69)
                                      (k!11 #x6af5fe68))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x235 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x238 (= (_ bv0 32) ?x235)))
 (let ((?x234 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x234)))
 (let ((?x237 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x237)))
 (let ((?x230 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x230)))
 (let (($x229 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x240 (and $x229 $x239)))
 (let (($x228 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x236 (and $x228 $x240)))
 (let (($x227 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x221 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x225 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x222 (and $x225 $x226)))
 (let (($x223 (not $x222)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x214 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x216 (and $x214 $x215)))
 (let (($x220 (and (not $x216) $x223)))
 (let (($x207 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x204 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x210 (and $x204 $x207)))
 (let (($x211 (not $x210)))
 (let (($x203 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x202 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x201 (and $x202 $x203)))
 (let (($x213 (and (not $x201) $x211)))
 (let (($x246 (and (and (and (and (and (and $x213 $x220) $x221) $x227) $x236) $x233) $x232)))
 (let (($x247 (and $x246 $x238)))
 (let (($x104 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x99)))
 (let (($x120 (or false (or false (and (and true (or $x125 $x58)) (or $x97 $x104))))))
 (let (($x111 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x120)))
 (let (($x250 (and $x111 $x247)))
 (let (($x251 (= $x250 true)))
 (let ((?x17 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x74 (concat ?x32 (concat ?x65 (concat ?x38 ?x17)))))
 (let (($x30 (= input.dst.llvm-%m2 ?x74)))
 (let ((?x189 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x198 (concat ?x179 (concat ?x197 (concat ?x188 ?x189)))))
 (let (($x183 (= input.dst.llvm-%m1 ?x198)))
 (let (($x192 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x195 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x13 (and (and (and $x195 $x192) $x183) $x30)))
 (let (($x176 (forall ((input.ind-%var139X (_ BitVec 32)) )(let ((?x164 (bvmul input.ind-%var139X (_ bv4 32))))
 (let ((?x146 (bvadd ?x164 input.dst.llvm-%m1)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x127))))
 (let ((?x33 (input.spec-%var-m1-1.1.1 input.ind-%var139X)))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var139X)))
 (=> $x18 (= ?x33 ?x26)))))))))
 ))
 (let (($x7 (forall ((input.ind-%var138X (_ BitVec 32)) )(let (($x106 (and (bvule (_ bv0 32) input.ind-%var138X) (bvult input.ind-%var138X (_ bv100 32)))))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var138X)))
 (= $x18 $x106))))
 ))
 (let (($x177 (and $x7 $x176)))
 (let (($x29 (and $x177 $x13)))
 (let (($x205 (forall ((input.ind-%var129X (_ BitVec 32)) )(let ((?x164 (bvmul input.ind-%var129X (_ bv4 32))))
 (let ((?x167 (bvadd ?x164 input.dst.llvm-%m2)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x171))))
 (let ((?x45 (input.spec-%var-m2-1.1.1 input.ind-%var129X)))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var129X)))
 (=> $x44 (= ?x45 ?x200)))))))))
 ))
 (let (($x130 (forall ((input.ind-%var128X (_ BitVec 32)) )(let (($x106 (and (bvule (_ bv0 32) input.ind-%var128X) (bvult input.ind-%var128X (_ bv100 32)))))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var128X)))
 (= $x44 $x106))))
 ))
 (let (($x206 (and $x130 $x205)))
 (let (($x9 (and (and (and $x111 $x206) $x247) $x29)))
 (let (($x20 (= $x9 true)))
 (let (($x61 (forall ((input.ind-%var149X (_ BitVec 32)) )(let ((?x22 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var149X)))
 (let ((?x33 (input.spec-%var-m1-1.1.1 input.ind-%var149X)))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var149X)))
 (=> $x18 (= ?x33 ?x22))))))
 ))
 (let (($x31 (forall ((input.ind-%var148X (_ BitVec 32)) )(let (($x19 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var148X)))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var148X)))
 (= $x18 $x19))))
 ))
 (let (($x6 (and $x31 $x61)))
 (let (($x23 (and $x6 $x20)))
 (let (($x133 (forall ((input.ind-%var159X (_ BitVec 32)) )(let ((?x63 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var159X)))
 (let ((?x45 (input.spec-%var-m2-1.1.1 input.ind-%var159X)))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var159X)))
 (=> $x44 (= ?x45 ?x63))))))
 ))
 (let (($x50 (forall ((input.ind-%var158X (_ BitVec 32)) )(let (($x34 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var158X)))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var158X)))
 (= $x44 $x34))))
 ))
 (let (($x68 (and $x50 $x133)))
 (let (($x12 (and $x68 $x23)))
 (let (($x252 (=> $x12 $x251)))
 (not $x252))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x235 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x238 (= (_ bv0 32) ?x235)))
 (let ((?x234 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x234)))
 (let ((?x237 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x237)))
 (let ((?x230 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x230)))
 (let (($x229 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x240 (and $x229 $x239)))
 (let (($x228 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x236 (and $x228 $x240)))
 (let (($x227 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x221 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x225 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x222 (and $x225 $x226)))
 (let (($x223 (not $x222)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x214 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x216 (and $x214 $x215)))
 (let (($x220 (and (not $x216) $x223)))
 (let (($x207 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x204 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x210 (and $x204 $x207)))
 (let (($x211 (not $x210)))
 (let (($x203 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x202 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x201 (and $x202 $x203)))
 (let (($x213 (and (not $x201) $x211)))
 (let (($x246 (and (and (and (and (and (and $x213 $x220) $x221) $x227) $x236) $x233) $x232)))
 (let (($x247 (and $x246 $x238)))
 (let (($x104 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x99)))
 (let (($x120 (or false (or false (and (and true (or $x125 $x58)) (or $x97 $x104))))))
 (let (($x111 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x120)))
 (let (($x250 (and $x111 $x247)))
 (let (($x251 (= $x250 true)))
 (let ((?x17 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x74 (concat ?x32 (concat ?x65 (concat ?x38 ?x17)))))
 (let (($x30 (= input.dst.llvm-%m2 ?x74)))
 (let ((?x189 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x198 (concat ?x179 (concat ?x197 (concat ?x188 ?x189)))))
 (let (($x183 (= input.dst.llvm-%m1 ?x198)))
 (let (($x192 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x195 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x13 (and (and (and $x195 $x192) $x183) $x30)))
 (let (($x176 (forall ((input.ind-%var139X (_ BitVec 32)) )(let ((?x164 (bvmul input.ind-%var139X (_ bv4 32))))
 (let ((?x146 (bvadd ?x164 input.dst.llvm-%m1)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x127))))
 (let ((?x33 (input.spec-%var-m1-1.1.1 input.ind-%var139X)))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var139X)))
 (=> $x18 (= ?x33 ?x26)))))))))
 ))
 (let (($x7 (forall ((input.ind-%var138X (_ BitVec 32)) )(let (($x106 (and (bvule (_ bv0 32) input.ind-%var138X) (bvult input.ind-%var138X (_ bv100 32)))))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var138X)))
 (= $x18 $x106))))
 ))
 (let (($x177 (and $x7 $x176)))
 (let (($x29 (and $x177 $x13)))
 (let (($x205 (forall ((input.ind-%var129X (_ BitVec 32)) )(let ((?x164 (bvmul input.ind-%var129X (_ bv4 32))))
 (let ((?x167 (bvadd ?x164 input.dst.llvm-%m2)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x171))))
 (let ((?x45 (input.spec-%var-m2-1.1.1 input.ind-%var129X)))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var129X)))
 (=> $x44 (= ?x45 ?x200)))))))))
 ))
 (let (($x130 (forall ((input.ind-%var128X (_ BitVec 32)) )(let (($x106 (and (bvule (_ bv0 32) input.ind-%var128X) (bvult input.ind-%var128X (_ bv100 32)))))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var128X)))
 (= $x44 $x106))))
 ))
 (let (($x206 (and $x130 $x205)))
 (let (($x9 (and (and (and $x111 $x206) $x247) $x29)))
 (let (($x20 (= $x9 true)))
 (let (($x61 (forall ((input.ind-%var149X (_ BitVec 32)) )(let ((?x22 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var149X)))
 (let ((?x33 (input.spec-%var-m1-1.1.1 input.ind-%var149X)))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var149X)))
 (=> $x18 (= ?x33 ?x22))))))
 ))
 (let (($x31 (forall ((input.ind-%var148X (_ BitVec 32)) )(let (($x19 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var148X)))
 (let (($x18 (input.spec-%var-m1-1.0.1 input.ind-%var148X)))
 (= $x18 $x19))))
 ))
 (let (($x6 (and $x31 $x61)))
 (let (($x23 (and $x6 $x20)))
 (let (($x133 (forall ((input.ind-%var159X (_ BitVec 32)) )(let ((?x63 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var159X)))
 (let ((?x45 (input.spec-%var-m2-1.1.1 input.ind-%var159X)))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var159X)))
 (=> $x44 (= ?x45 ?x63))))))
 ))
 (let (($x50 (forall ((input.ind-%var158X (_ BitVec 32)) )(let (($x34 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var158X)))
 (let (($x44 (input.spec-%var-m2-1.0.1 input.ind-%var158X)))
 (= $x44 $x34))))
 ))
 (let (($x68 (and $x50 $x133)))
 (let (($x12 (and $x68 $x23)))
 (let (($x252 (=> $x12 $x251)))
 (not $x252))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x77 ((_ extract 2 0) input.dst.llvm-%m1)))
 (let (($x116 (= (_ bv0 3) ?x77)))
 (let (($x182 (= $x116 true)))
 (let ((?x152 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x69 (concat ?x143 (concat ?x145 (concat ?x249 ?x152)))))
 (let (($x49 (= input.dst.llvm-%m2 ?x69)))
 (let ((?x39 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x126 (concat ?x124 (concat ?x149 (concat ?x89 ?x39)))))
 (let (($x122 (= input.dst.llvm-%m1 ?x126)))
 (let (($x71 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x96 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x137 (and (and (and $x96 $x71) $x122) $x49)))
 (let (($x87 (forall ((input.ind-%var179X (_ BitVec 32)) )(let ((?x232 (bvmul input.ind-%var179X (_ bv4 32))))
 (let ((?x94 (bvadd ?x232 input.dst.llvm-%m1)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x159))))
 (let ((?x85 (input.spec-%var-m1-1.1.1 input.ind-%var179X)))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var179X)))
 (=> $x93 (= ?x85 ?x141)))))))))
 ))
 (let (($x88 (forall ((input.ind-%var178X (_ BitVec 32)) )(let (($x212 (and (bvule (_ bv0 32) input.ind-%var178X) (bvult input.ind-%var178X (_ bv100 32)))))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var178X)))
 (= $x93 $x212))))
 ))
 (let (($x59 (and $x88 $x87)))
 (let (($x28 (and $x59 $x137)))
 (let ((?x17 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x55 (= (_ bv0 32) ?x17)))
 (let ((?x76 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x38 (= (_ bv0 32) ?x76)))
 (let ((?x36 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x36)))
 (let ((?x183 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x14 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x183)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x66 (and $x198 $x14)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x32 (and $x175 $x66)))
 (let (($x191 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x192 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (and $x192 $x10)))
 (let (($x179 (not $x178)))
 (let (($x195 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x196 (and $x187 $x195)))
 (let (($x197 (and (not $x196) $x179)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x26 $x184)))
 (let (($x176 (not $x174)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (and $x150 $x127)))
 (let (($x185 (and (not $x135) $x176)))
 (let (($x9 (and (and (and (and (and (and $x185 $x197) $x188) $x191) $x32) $x65) $x38)))
 (let (($x20 (and $x9 $x55)))
 (let (($x153 (forall ((input.ind-%var169X (_ BitVec 32)) )(let ((?x232 (bvmul input.ind-%var169X (_ bv4 32))))
 (let ((?x246 (bvadd ?x232 input.dst.llvm-%m2)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv1 32))) (select input.dst.llvm-mem ?x246))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv2 32))) ?x43))))
 (let ((?x18 (input.spec-%var-m2-1.1.1 input.ind-%var169X)))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var169X)))
 (=> $x53 (= ?x18 ?x35)))))))))
 ))
 (let (($x223 (forall ((input.ind-%var168X (_ BitVec 32)) )(let (($x212 (and (bvule (_ bv0 32) input.ind-%var168X) (bvult input.ind-%var168X (_ bv100 32)))))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var168X)))
 (= $x53 $x212))))
 ))
 (let (($x123 (and $x223 $x153)))
 (let (($x203 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x208 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x208)))
 (let (($x167 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x220 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x208)))
 (let (($x226 (or false (or false (and (and true (or $x220 $x167)) (or $x171 $x203))))))
 (let (($x216 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x226)))
 (let (($x8 (and (and (and $x216 $x123) $x20) $x28)))
 (let (($x41 (= $x8 true)))
 (let (($x62 (forall ((input.ind-%var189X (_ BitVec 32)) )(let ((?x99 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var189X)))
 (let ((?x85 (input.spec-%var-m1-1.1.1 input.ind-%var189X)))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var189X)))
 (=> $x93 (= ?x85 ?x99))))))
 ))
 (let (($x102 (forall ((input.ind-%var188X (_ BitVec 32)) )(let (($x105 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var188X)))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var188X)))
 (= $x93 $x105))))
 ))
 (let (($x82 (and $x102 $x62)))
 (let (($x79 (and $x82 $x41)))
 (let (($x242 (forall ((input.ind-%var199X (_ BitVec 32)) )(let ((?x70 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var199X)))
 (let ((?x18 (input.spec-%var-m2-1.1.1 input.ind-%var199X)))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var199X)))
 (=> $x53 (= ?x18 ?x70))))))
 ))
 (let (($x107 (forall ((input.ind-%var198X (_ BitVec 32)) )(let (($x50 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var198X)))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var198X)))
 (= $x53 $x50))))
 ))
 (let (($x108 (and $x107 $x242)))
 (let (($x52 (and $x108 $x79)))
 (let (($x254 (=> $x52 $x182)))
 (not $x254)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x77 ((_ extract 2 0) input.dst.llvm-%m1)))
 (let (($x116 (= (_ bv0 3) ?x77)))
 (let (($x182 (= $x116 true)))
 (let ((?x152 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x69 (concat ?x143 (concat ?x145 (concat ?x249 ?x152)))))
 (let (($x49 (= input.dst.llvm-%m2 ?x69)))
 (let ((?x39 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x126 (concat ?x124 (concat ?x149 (concat ?x89 ?x39)))))
 (let (($x122 (= input.dst.llvm-%m1 ?x126)))
 (let (($x71 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x96 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x137 (and (and (and $x96 $x71) $x122) $x49)))
 (let (($x87 (forall ((input.ind-%var179X (_ BitVec 32)) )(let ((?x232 (bvmul input.ind-%var179X (_ bv4 32))))
 (let ((?x94 (bvadd ?x232 input.dst.llvm-%m1)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x159))))
 (let ((?x85 (input.spec-%var-m1-1.1.1 input.ind-%var179X)))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var179X)))
 (=> $x93 (= ?x85 ?x141)))))))))
 ))
 (let (($x88 (forall ((input.ind-%var178X (_ BitVec 32)) )(let (($x212 (and (bvule (_ bv0 32) input.ind-%var178X) (bvult input.ind-%var178X (_ bv100 32)))))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var178X)))
 (= $x93 $x212))))
 ))
 (let (($x59 (and $x88 $x87)))
 (let (($x28 (and $x59 $x137)))
 (let ((?x17 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x55 (= (_ bv0 32) ?x17)))
 (let ((?x76 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x38 (= (_ bv0 32) ?x76)))
 (let ((?x36 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x36)))
 (let ((?x183 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x14 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x183)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x66 (and $x198 $x14)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x32 (and $x175 $x66)))
 (let (($x191 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x192 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (and $x192 $x10)))
 (let (($x179 (not $x178)))
 (let (($x195 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x196 (and $x187 $x195)))
 (let (($x197 (and (not $x196) $x179)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x26 $x184)))
 (let (($x176 (not $x174)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (and $x150 $x127)))
 (let (($x185 (and (not $x135) $x176)))
 (let (($x9 (and (and (and (and (and (and $x185 $x197) $x188) $x191) $x32) $x65) $x38)))
 (let (($x20 (and $x9 $x55)))
 (let (($x153 (forall ((input.ind-%var169X (_ BitVec 32)) )(let ((?x232 (bvmul input.ind-%var169X (_ bv4 32))))
 (let ((?x246 (bvadd ?x232 input.dst.llvm-%m2)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv1 32))) (select input.dst.llvm-mem ?x246))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv2 32))) ?x43))))
 (let ((?x18 (input.spec-%var-m2-1.1.1 input.ind-%var169X)))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var169X)))
 (=> $x53 (= ?x18 ?x35)))))))))
 ))
 (let (($x223 (forall ((input.ind-%var168X (_ BitVec 32)) )(let (($x212 (and (bvule (_ bv0 32) input.ind-%var168X) (bvult input.ind-%var168X (_ bv100 32)))))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var168X)))
 (= $x53 $x212))))
 ))
 (let (($x123 (and $x223 $x153)))
 (let (($x203 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x208 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x208)))
 (let (($x167 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x220 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x208)))
 (let (($x226 (or false (or false (and (and true (or $x220 $x167)) (or $x171 $x203))))))
 (let (($x216 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x226)))
 (let (($x8 (and (and (and $x216 $x123) $x20) $x28)))
 (let (($x41 (= $x8 true)))
 (let (($x62 (forall ((input.ind-%var189X (_ BitVec 32)) )(let ((?x99 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var189X)))
 (let ((?x85 (input.spec-%var-m1-1.1.1 input.ind-%var189X)))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var189X)))
 (=> $x93 (= ?x85 ?x99))))))
 ))
 (let (($x102 (forall ((input.ind-%var188X (_ BitVec 32)) )(let (($x105 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var188X)))
 (let (($x93 (input.spec-%var-m1-1.0.1 input.ind-%var188X)))
 (= $x93 $x105))))
 ))
 (let (($x82 (and $x102 $x62)))
 (let (($x79 (and $x82 $x41)))
 (let (($x242 (forall ((input.ind-%var199X (_ BitVec 32)) )(let ((?x70 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var199X)))
 (let ((?x18 (input.spec-%var-m2-1.1.1 input.ind-%var199X)))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var199X)))
 (=> $x53 (= ?x18 ?x70))))))
 ))
 (let (($x107 (forall ((input.ind-%var198X (_ BitVec 32)) )(let (($x50 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var198X)))
 (let (($x53 (input.spec-%var-m2-1.0.1 input.ind-%var198X)))
 (= $x53 $x50))))
 ))
 (let (($x108 (and $x107 $x242)))
 (let (($x52 (and $x108 $x79)))
 (let (($x254 (=> $x52 $x182)))
 (not $x254)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000400)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000403)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000400)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000400) #x04
      #x00))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000403)
                                   (k!0 #x00000402)
                                   (k!0 #x00000401)
                                   (k!0 #x00000400)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000403)
                                   (k!0 #x00000402)
                                   (k!0 #x00000401)
                                   (k!0 #x00000400)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000403)
                                   (k!0 #x00000402)
                                   (k!0 #x00000401)
                                   (k!0 #x00000400)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000403)
                                   (k!0 #x00000402)
                                   (k!0 #x00000401)
                                   (k!0 #x00000400))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x4ffffeac)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x4fbfff98)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x5feddf00)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xf1dfbf04)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x4fbfff9b)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x4ffffeaf)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x4fbfff98)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x4ffffeac)
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x4fbfff98) #x04
    (ite (= x!0 #x4ffffead) #xdf
    (ite (= x!0 #x4fbfff9b) #xf1
    (ite (= x!0 #x4ffffeaf) #x5f
    (ite (= x!0 #x4ffffeae) #xed
    (ite (= x!0 #x4fbfff9a) #xdf
    (ite (= x!0 #x4fbfff99) #xbf
      #x00))))))))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x4ffffeaf)
                                      (k!11 #x4ffffeae)
                                      (k!11 #x4ffffead)
                                      (k!11 #x4ffffeac)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x4ffffeaf)
                                      (k!11 #x4ffffeae)
                                      (k!11 #x4ffffead)
                                      (k!11 #x4ffffeac)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x4ffffeaf)
                                      (k!11 #x4ffffeae)
                                      (k!11 #x4ffffead)
                                      (k!11 #x4ffffeac)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x4ffffeaf)
                                      (k!11 #x4ffffeae)
                                      (k!11 #x4ffffead)
                                      (k!11 #x4ffffeac))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x4fbfff9b)
                                      (k!11 #x4fbfff9a)
                                      (k!11 #x4fbfff99)
                                      (k!11 #x4fbfff98)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x4fbfff9b)
                                      (k!11 #x4fbfff9a)
                                      (k!11 #x4fbfff99)
                                      (k!11 #x4fbfff98)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x4fbfff9b)
                                      (k!11 #x4fbfff9a)
                                      (k!11 #x4fbfff99)
                                      (k!11 #x4fbfff98)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x4fbfff9b)
                                      (k!11 #x4fbfff9a)
                                      (k!11 #x4fbfff99)
                                      (k!11 #x4fbfff98))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x45 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x157 (= (_ bv0 2) ?x45)))
 (let (($x31 (= $x157 true)))
 (let ((?x27 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x193 (concat ?x33 (concat ?x252 (concat ?x64 ?x27)))))
 (let (($x115 (= input.dst.llvm-%m2 ?x193)))
 (let ((?x138 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x78 (concat ?x40 (concat ?x250 ?x138)))))
 (let (($x37 (= input.dst.llvm-%m1 ?x72)))
 (let (($x168 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x206 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x61 (and (and (and $x206 $x168) $x37) $x115)))
 (let (($x240 (forall ((input.ind-%var251X (_ BitVec 32)) )(let ((?x38 (bvmul input.ind-%var251X (_ bv4 32))))
 (let ((?x100 (bvadd ?x38 input.dst.llvm-%m1)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv1 32))) (select input.dst.llvm-mem ?x100))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv2 32))) ?x218))))
 (let ((?x95 (input.spec-%var-m1-1.1.1 input.ind-%var251X)))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var251X)))
 (=> $x173 (= ?x95 ?x243)))))))))
 ))
 (let (($x214 (forall ((input.ind-%var250X (_ BitVec 32)) )(let (($x177 (and (bvule (_ bv0 32) input.ind-%var250X) (bvult input.ind-%var250X (_ bv100 32)))))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var250X)))
 (= $x173 $x177))))
 ))
 (let (($x233 (and $x214 $x240)))
 (let (($x112 (and $x233 $x61)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x46 (= (_ bv0 32) ?x231)))
 (let ((?x249 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x152 (= (_ bv0 32) ?x249)))
 (let ((?x145 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x145)))
 (let ((?x54 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x54)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x143 (and $x122 $x60)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x217 (and $x126 $x143)))
 (let (($x142 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x47 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x124 (and $x47 $x151)))
 (let (($x148 (not $x124)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x96 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (and $x96 $x161)))
 (let (($x11 (and (not $x71) $x148)))
 (let (($x160 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x147 $x160)))
 (let (($x59 (not $x87)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (and $x159 $x139)))
 (let (($x158 (and (not $x141) $x59)))
 (let (($x41 (and (and (and (and (and (and $x158 $x11) $x39) $x142) $x217) $x144) $x152)))
 (let (($x79 (and $x41 $x46)))
 (let (($x163 (forall ((input.ind-%var241X (_ BitVec 32)) )(let ((?x38 (bvmul input.ind-%var241X (_ bv4 32))))
 (let ((?x9 (bvadd ?x38 input.dst.llvm-%m2)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x73))))
 (let ((?x93 (input.spec-%var-m2-1.1.1 input.ind-%var241X)))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var241X)))
 (=> $x63 (= ?x93 ?x165)))))))))
 ))
 (let (($x179 (forall ((input.ind-%var240X (_ BitVec 32)) )(let (($x177 (and (bvule (_ bv0 32) input.ind-%var240X) (bvult input.ind-%var240X (_ bv100 32)))))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var240X)))
 (= $x63 $x177))))
 ))
 (let (($x98 (and $x179 $x163)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x128 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x128)))
 (let (($x246 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x128)))
 (let (($x10 (or false (or false (and (and true (or $x197 $x246)) (or $x43 $x127))))))
 (let (($x196 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x10)))
 (let (($x68 (and (and (and $x196 $x98) $x79) $x112)))
 (let (($x84 (= $x68 true)))
 (let (($x109 (forall ((input.ind-%var261X (_ BitVec 32)) )(let ((?x208 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var261X)))
 (let ((?x95 (input.spec-%var-m1-1.1.1 input.ind-%var261X)))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var261X)))
 (=> $x173 (= ?x95 ?x208))))))
 ))
 (let (($x16 (forall ((input.ind-%var260X (_ BitVec 32)) )(let (($x201 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var260X)))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var260X)))
 (= $x173 $x201))))
 ))
 (let (($x121 (and $x16 $x109)))
 (let (($x110 (and $x121 $x84)))
 (let (($x74 (forall ((input.ind-%var271X (_ BitVec 32)) )(let ((?x86 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var271X)))
 (let ((?x93 (input.spec-%var-m2-1.1.1 input.ind-%var271X)))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var271X)))
 (=> $x63 (= ?x93 ?x86))))))
 ))
 (let (($x207 (forall ((input.ind-%var270X (_ BitVec 32)) )(let (($x107 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var270X)))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var270X)))
 (= $x63 $x107))))
 ))
 (let (($x210 (and $x207 $x74)))
 (let (($x22 (and $x210 $x110)))
 (let (($x204 (=> $x22 $x31)))
 (not $x204)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x45 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x157 (= (_ bv0 2) ?x45)))
 (let (($x31 (= $x157 true)))
 (let ((?x27 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x193 (concat ?x33 (concat ?x252 (concat ?x64 ?x27)))))
 (let (($x115 (= input.dst.llvm-%m2 ?x193)))
 (let ((?x138 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x78 (concat ?x40 (concat ?x250 ?x138)))))
 (let (($x37 (= input.dst.llvm-%m1 ?x72)))
 (let (($x168 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x206 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x61 (and (and (and $x206 $x168) $x37) $x115)))
 (let (($x240 (forall ((input.ind-%var251X (_ BitVec 32)) )(let ((?x38 (bvmul input.ind-%var251X (_ bv4 32))))
 (let ((?x100 (bvadd ?x38 input.dst.llvm-%m1)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv1 32))) (select input.dst.llvm-mem ?x100))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv2 32))) ?x218))))
 (let ((?x95 (input.spec-%var-m1-1.1.1 input.ind-%var251X)))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var251X)))
 (=> $x173 (= ?x95 ?x243)))))))))
 ))
 (let (($x214 (forall ((input.ind-%var250X (_ BitVec 32)) )(let (($x177 (and (bvule (_ bv0 32) input.ind-%var250X) (bvult input.ind-%var250X (_ bv100 32)))))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var250X)))
 (= $x173 $x177))))
 ))
 (let (($x233 (and $x214 $x240)))
 (let (($x112 (and $x233 $x61)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x46 (= (_ bv0 32) ?x231)))
 (let ((?x249 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x152 (= (_ bv0 32) ?x249)))
 (let ((?x145 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x145)))
 (let ((?x54 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x54)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x143 (and $x122 $x60)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x217 (and $x126 $x143)))
 (let (($x142 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x47 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x124 (and $x47 $x151)))
 (let (($x148 (not $x124)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x96 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (and $x96 $x161)))
 (let (($x11 (and (not $x71) $x148)))
 (let (($x160 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x147 $x160)))
 (let (($x59 (not $x87)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (and $x159 $x139)))
 (let (($x158 (and (not $x141) $x59)))
 (let (($x41 (and (and (and (and (and (and $x158 $x11) $x39) $x142) $x217) $x144) $x152)))
 (let (($x79 (and $x41 $x46)))
 (let (($x163 (forall ((input.ind-%var241X (_ BitVec 32)) )(let ((?x38 (bvmul input.ind-%var241X (_ bv4 32))))
 (let ((?x9 (bvadd ?x38 input.dst.llvm-%m2)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x73))))
 (let ((?x93 (input.spec-%var-m2-1.1.1 input.ind-%var241X)))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var241X)))
 (=> $x63 (= ?x93 ?x165)))))))))
 ))
 (let (($x179 (forall ((input.ind-%var240X (_ BitVec 32)) )(let (($x177 (and (bvule (_ bv0 32) input.ind-%var240X) (bvult input.ind-%var240X (_ bv100 32)))))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var240X)))
 (= $x63 $x177))))
 ))
 (let (($x98 (and $x179 $x163)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x128 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x128)))
 (let (($x246 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x128)))
 (let (($x10 (or false (or false (and (and true (or $x197 $x246)) (or $x43 $x127))))))
 (let (($x196 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x10)))
 (let (($x68 (and (and (and $x196 $x98) $x79) $x112)))
 (let (($x84 (= $x68 true)))
 (let (($x109 (forall ((input.ind-%var261X (_ BitVec 32)) )(let ((?x208 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var261X)))
 (let ((?x95 (input.spec-%var-m1-1.1.1 input.ind-%var261X)))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var261X)))
 (=> $x173 (= ?x95 ?x208))))))
 ))
 (let (($x16 (forall ((input.ind-%var260X (_ BitVec 32)) )(let (($x201 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var260X)))
 (let (($x173 (input.spec-%var-m1-1.0.1 input.ind-%var260X)))
 (= $x173 $x201))))
 ))
 (let (($x121 (and $x16 $x109)))
 (let (($x110 (and $x121 $x84)))
 (let (($x74 (forall ((input.ind-%var271X (_ BitVec 32)) )(let ((?x86 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var271X)))
 (let ((?x93 (input.spec-%var-m2-1.1.1 input.ind-%var271X)))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var271X)))
 (=> $x63 (= ?x93 ?x86))))))
 ))
 (let (($x207 (forall ((input.ind-%var270X (_ BitVec 32)) )(let (($x107 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var270X)))
 (let (($x63 (input.spec-%var-m2-1.0.1 input.ind-%var270X)))
 (= $x63 $x107))))
 ))
 (let (($x210 (and $x207 $x74)))
 (let (($x22 (and $x210 $x110)))
 (let (($x204 (=> $x22 $x31)))
 (not $x204)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x18 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x229 (= (_ bv0 2) ?x18)))
 (let (($x102 (= $x229 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x57 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x164 (concat ?x85 (concat ?x182 (concat ?x57 ?x104)))))
 (let (($x172 (= input.dst.llvm-%m2 ?x164)))
 (let ((?x140 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x21 (concat ?x15 (concat ?x19 (concat ?x77 ?x140)))))
 (let (($x81 (= input.dst.llvm-%m1 ?x21)))
 (let (($x235 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x123 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x62 (and (and (and $x123 $x235) $x81) $x172)))
 (let (($x66 (forall ((input.ind-%var291X (_ BitVec 32)) )(let ((?x152 (bvmul input.ind-%var291X (_ bv4 32))))
 (let ((?x205 (bvadd ?x152 input.dst.llvm-%m1)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x190))))
 (let ((?x169 (input.spec-%var-m1-1.1.1 input.ind-%var291X)))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var291X)))
 (=> $x7 (= ?x169 ?x30)))))))))
 ))
 (let (($x51 (forall ((input.ind-%var290X (_ BitVec 32)) )(let (($x101 (and (bvule (_ bv0 32) input.ind-%var290X) (bvult input.ind-%var290X (_ bv100 32)))))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var290X)))
 (= $x7 $x101))))
 ))
 (let (($x65 (and $x51 $x66)))
 (let (($x219 (and $x65 $x62)))
 (let ((?x27 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x92 (= (_ bv0 32) ?x27)))
 (let ((?x42 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x64 (= (_ bv0 32) ?x42)))
 (let ((?x12 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x12)))
 (let ((?x37 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x37)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (and $x72 $x120)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x67 $x83)))
 (let (($x251 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x250 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x168 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x113 (and $x168 $x97)))
 (let (($x78 (not $x113)))
 (let (($x206 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x245 (and $x186 $x206)))
 (let (($x40 (and (not $x245) $x78)))
 (let (($x221 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x243 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x228 (and $x243 $x221)))
 (let (($x240 (not $x228)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x230 (and $x209 $x218)))
 (let (($x106 (and (not $x230) $x240)))
 (let (($x68 (and (and (and (and (and (and $x106 $x40) $x250) $x251) $x33) $x252) $x64)))
 (let (($x84 (and $x68 $x92)))
 (let (($x181 (forall ((input.ind-%var281X (_ BitVec 32)) )(let ((?x152 (bvmul input.ind-%var281X (_ bv4 32))))
 (let ((?x41 (bvadd ?x152 input.dst.llvm-%m2)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv1 32))) (select input.dst.llvm-mem ?x41))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv2 32))) ?x6))))
 (let ((?x173 (input.spec-%var-m2-1.1.1 input.ind-%var281X)))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var281X)))
 (=> $x70 (= ?x173 ?x227)))))))))
 ))
 (let (($x148 (forall ((input.ind-%var280X (_ BitVec 32)) )(let (($x101 (and (bvule (_ bv0 32) input.ind-%var280X) (bvult input.ind-%var280X (_ bv100 32)))))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var280X)))
 (= $x70 $x101))))
 ))
 (let (($x200 (and $x148 $x181)))
 (let (($x139 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x166 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x166)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x166)))
 (let (($x151 (or false (or false (and (and true (or $x11 $x9)) (or $x73 $x139))))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x151)))
 (let (($x108 (and (and (and $x71 $x200) $x84) $x219)))
 (let (($x130 (= $x108 true)))
 (let (($x213 (forall ((input.ind-%var301X (_ BitVec 32)) )(let ((?x128 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var301X)))
 (let ((?x169 (input.spec-%var-m1-1.1.1 input.ind-%var301X)))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var301X)))
 (=> $x7 (= ?x169 ?x128))))))
 ))
 (let (($x80 (forall ((input.ind-%var300X (_ BitVec 32)) )(let (($x135 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var300X)))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var300X)))
 (= $x7 $x135))))
 ))
 (let (($x222 (and $x80 $x213)))
 (let (($x44 (and $x222 $x130)))
 (let (($x49 (forall ((input.ind-%var311X (_ BitVec 32)) )(let ((?x114 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var311X)))
 (let ((?x173 (input.spec-%var-m2-1.1.1 input.ind-%var311X)))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var311X)))
 (=> $x70 (= ?x173 ?x114))))))
 ))
 (let (($x184 (forall ((input.ind-%var310X (_ BitVec 32)) )(let (($x207 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var310X)))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var310X)))
 (= $x70 $x207))))
 ))
 (let (($x174 (and $x184 $x49)))
 (let (($x99 (and $x174 $x44)))
 (let (($x26 (=> $x99 $x102)))
 (not $x26)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x18 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x229 (= (_ bv0 2) ?x18)))
 (let (($x102 (= $x229 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x57 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x164 (concat ?x85 (concat ?x182 (concat ?x57 ?x104)))))
 (let (($x172 (= input.dst.llvm-%m2 ?x164)))
 (let ((?x140 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x21 (concat ?x15 (concat ?x19 (concat ?x77 ?x140)))))
 (let (($x81 (= input.dst.llvm-%m1 ?x21)))
 (let (($x235 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x123 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x62 (and (and (and $x123 $x235) $x81) $x172)))
 (let (($x66 (forall ((input.ind-%var291X (_ BitVec 32)) )(let ((?x152 (bvmul input.ind-%var291X (_ bv4 32))))
 (let ((?x205 (bvadd ?x152 input.dst.llvm-%m1)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x190))))
 (let ((?x169 (input.spec-%var-m1-1.1.1 input.ind-%var291X)))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var291X)))
 (=> $x7 (= ?x169 ?x30)))))))))
 ))
 (let (($x51 (forall ((input.ind-%var290X (_ BitVec 32)) )(let (($x101 (and (bvule (_ bv0 32) input.ind-%var290X) (bvult input.ind-%var290X (_ bv100 32)))))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var290X)))
 (= $x7 $x101))))
 ))
 (let (($x65 (and $x51 $x66)))
 (let (($x219 (and $x65 $x62)))
 (let ((?x27 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x92 (= (_ bv0 32) ?x27)))
 (let ((?x42 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x64 (= (_ bv0 32) ?x42)))
 (let ((?x12 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x12)))
 (let ((?x37 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x37)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (and $x72 $x120)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x67 $x83)))
 (let (($x251 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x250 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x168 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x113 (and $x168 $x97)))
 (let (($x78 (not $x113)))
 (let (($x206 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x245 (and $x186 $x206)))
 (let (($x40 (and (not $x245) $x78)))
 (let (($x221 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x243 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x228 (and $x243 $x221)))
 (let (($x240 (not $x228)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x230 (and $x209 $x218)))
 (let (($x106 (and (not $x230) $x240)))
 (let (($x68 (and (and (and (and (and (and $x106 $x40) $x250) $x251) $x33) $x252) $x64)))
 (let (($x84 (and $x68 $x92)))
 (let (($x181 (forall ((input.ind-%var281X (_ BitVec 32)) )(let ((?x152 (bvmul input.ind-%var281X (_ bv4 32))))
 (let ((?x41 (bvadd ?x152 input.dst.llvm-%m2)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv1 32))) (select input.dst.llvm-mem ?x41))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv2 32))) ?x6))))
 (let ((?x173 (input.spec-%var-m2-1.1.1 input.ind-%var281X)))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var281X)))
 (=> $x70 (= ?x173 ?x227)))))))))
 ))
 (let (($x148 (forall ((input.ind-%var280X (_ BitVec 32)) )(let (($x101 (and (bvule (_ bv0 32) input.ind-%var280X) (bvult input.ind-%var280X (_ bv100 32)))))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var280X)))
 (= $x70 $x101))))
 ))
 (let (($x200 (and $x148 $x181)))
 (let (($x139 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x166 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x166)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x166)))
 (let (($x151 (or false (or false (and (and true (or $x11 $x9)) (or $x73 $x139))))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x151)))
 (let (($x108 (and (and (and $x71 $x200) $x84) $x219)))
 (let (($x130 (= $x108 true)))
 (let (($x213 (forall ((input.ind-%var301X (_ BitVec 32)) )(let ((?x128 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var301X)))
 (let ((?x169 (input.spec-%var-m1-1.1.1 input.ind-%var301X)))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var301X)))
 (=> $x7 (= ?x169 ?x128))))))
 ))
 (let (($x80 (forall ((input.ind-%var300X (_ BitVec 32)) )(let (($x135 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var300X)))
 (let (($x7 (input.spec-%var-m1-1.0.1 input.ind-%var300X)))
 (= $x7 $x135))))
 ))
 (let (($x222 (and $x80 $x213)))
 (let (($x44 (and $x222 $x130)))
 (let (($x49 (forall ((input.ind-%var311X (_ BitVec 32)) )(let ((?x114 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var311X)))
 (let ((?x173 (input.spec-%var-m2-1.1.1 input.ind-%var311X)))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var311X)))
 (=> $x70 (= ?x173 ?x114))))))
 ))
 (let (($x184 (forall ((input.ind-%var310X (_ BitVec 32)) )(let (($x207 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var310X)))
 (let (($x70 (input.spec-%var-m2-1.0.1 input.ind-%var310X)))
 (= $x70 $x207))))
 ))
 (let (($x174 (and $x184 $x49)))
 (let (($x99 (and $x174 $x44)))
 (let (($x26 (=> $x99 $x102)))
 (not $x26)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 133 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x274 (forall ((input.ind-%var361X (_ BitVec 32)) )(let ((?x64 (bvmul input.ind-%var361X (_ bv4 32))))
 (let ((?x68 (bvadd ?x64 input.dst.llvm-%m2)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv1 32))) (select input.dst.llvm-mem ?x68))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv2 32))) ?x82))))
 (let ((?x7 (input.spec-%var-m2-1.1.1 input.ind-%var361X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var361X)))
 (=> $x86 (= ?x7 ?x191)))))))))
 ))
 (let (($x256 (forall ((input.ind-%var360X (_ BitVec 32)) )(let (($x233 (and (bvule (_ bv0 32) input.ind-%var360X) (bvult input.ind-%var360X (_ bv100 32)))))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var360X)))
 (= $x86 $x233))))
 ))
 (let (($x275 (and $x256 $x274)))
 (let (($x276 (= $x275 true)))
 (let ((?x203 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x232 (concat ?x95 (concat ?x157 (concat ?x162 ?x203)))))
 (let (($x5 (= input.dst.llvm-%m2 ?x232)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x90 (concat ?x53 (concat ?x105 (concat ?x133 ?x48)))))
 (let (($x111 (= input.dst.llvm-%m1 ?x90)))
 (let (($x17 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x98 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x109 (and (and (and $x98 $x17) $x111) $x5)))
 (let (($x143 (forall ((input.ind-%var331X (_ BitVec 32)) )(let ((?x64 (bvmul input.ind-%var331X (_ bv4 32))))
 (let ((?x153 (bvadd ?x64 input.dst.llvm-%m1)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x89))))
 (let ((?x238 (input.spec-%var-m1-1.1.1 input.ind-%var331X)))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var331X)))
 (=> $x88 (= ?x238 ?x137)))))))))
 ))
 (let (($x199 (forall ((input.ind-%var330X (_ BitVec 32)) )(let (($x233 (and (bvule (_ bv0 32) input.ind-%var330X) (bvult input.ind-%var330X (_ bv100 32)))))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var330X)))
 (= $x88 $x233))))
 ))
 (let (($x144 (and $x199 $x143)))
 (let (($x194 (and $x144 $x109)))
 (let ((?x104 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x103 (= (_ bv0 32) ?x104)))
 (let ((?x125 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x57 (= (_ bv0 32) ?x125)))
 (let ((?x91 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x81 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x81)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x21 $x226)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x118 $x170)))
 (let (($x116 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x77 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x235 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x117 (and $x235 $x171)))
 (let (($x15 (not $x117)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x155 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x155 $x123)))
 (let (($x19 (and (not $x29) $x15)))
 (let (($x188 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x175 (and $x30 $x188)))
 (let (($x66 (not $x175)))
 (let (($x190 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x183 (and $x154 $x190)))
 (let (($x212 (and (not $x183) $x66)))
 (let (($x108 (and (and (and (and (and (and $x212 $x19) $x77) $x116) $x85) $x182) $x57)))
 (let (($x130 (and $x108 $x103)))
 (let (($x146 (forall ((input.ind-%var321X (_ BitVec 32)) )(let ((?x64 (bvmul input.ind-%var321X (_ bv4 32))))
 (let ((?x68 (bvadd ?x64 input.dst.llvm-%m2)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv1 32))) (select input.dst.llvm-mem ?x68))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv2 32))) ?x82))))
 (let ((?x7 (input.spec-%var-m2-1.1.1 input.ind-%var321X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var321X)))
 (=> $x86 (= ?x7 ?x191)))))))))
 ))
 (let (($x78 (forall ((input.ind-%var320X (_ BitVec 32)) )(let (($x233 (and (bvule (_ bv0 32) input.ind-%var320X) (bvult input.ind-%var320X (_ bv100 32)))))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var320X)))
 (= $x86 $x233))))
 ))
 (let (($x35 (and $x78 $x146)))
 (let (($x218 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x244 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x244)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x244)))
 (let (($x97 (or false (or false (and (and true (or $x40 $x41)) (or $x6 $x218))))))
 (let (($x245 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x97)))
 (let (($x210 (and (and (and $x245 $x35) $x130) $x194)))
 (let (($x223 (= $x210 true)))
 (let (($x185 (forall ((input.ind-%var341X (_ BitVec 32)) )(let ((?x166 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var341X)))
 (let ((?x238 (input.spec-%var-m1-1.1.1 input.ind-%var341X)))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var341X)))
 (=> $x88 (= ?x238 ?x166))))))
 ))
 (let (($x224 (forall ((input.ind-%var340X (_ BitVec 32)) )(let (($x141 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var340X)))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var340X)))
 (= $x88 $x141))))
 ))
 (let (($x178 (and $x224 $x185)))
 (let (($x187 (and $x178 $x223)))
 (let (($x193 (forall ((input.ind-%var351X (_ BitVec 32)) )(let ((?x180 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var351X)))
 (let ((?x7 (input.spec-%var-m2-1.1.1 input.ind-%var351X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var351X)))
 (=> $x86 (= ?x7 ?x180))))))
 ))
 (let (($x160 (forall ((input.ind-%var350X (_ BitVec 32)) )(let (($x184 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var350X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var350X)))
 (= $x86 $x184))))
 ))
 (let (($x87 (and $x160 $x193)))
 (let (($x208 (and $x87 $x187)))
 (let (($x277 (=> $x208 $x276)))
 (not $x277))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x274 (forall ((input.ind-%var361X (_ BitVec 32)) )(let ((?x64 (bvmul input.ind-%var361X (_ bv4 32))))
 (let ((?x68 (bvadd ?x64 input.dst.llvm-%m2)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv1 32))) (select input.dst.llvm-mem ?x68))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv2 32))) ?x82))))
 (let ((?x7 (input.spec-%var-m2-1.1.1 input.ind-%var361X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var361X)))
 (=> $x86 (= ?x7 ?x191)))))))))
 ))
 (let (($x256 (forall ((input.ind-%var360X (_ BitVec 32)) )(let (($x233 (and (bvule (_ bv0 32) input.ind-%var360X) (bvult input.ind-%var360X (_ bv100 32)))))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var360X)))
 (= $x86 $x233))))
 ))
 (let (($x275 (and $x256 $x274)))
 (let (($x276 (= $x275 true)))
 (let ((?x203 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x232 (concat ?x95 (concat ?x157 (concat ?x162 ?x203)))))
 (let (($x5 (= input.dst.llvm-%m2 ?x232)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x90 (concat ?x53 (concat ?x105 (concat ?x133 ?x48)))))
 (let (($x111 (= input.dst.llvm-%m1 ?x90)))
 (let (($x17 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x98 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x109 (and (and (and $x98 $x17) $x111) $x5)))
 (let (($x143 (forall ((input.ind-%var331X (_ BitVec 32)) )(let ((?x64 (bvmul input.ind-%var331X (_ bv4 32))))
 (let ((?x153 (bvadd ?x64 input.dst.llvm-%m1)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x89))))
 (let ((?x238 (input.spec-%var-m1-1.1.1 input.ind-%var331X)))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var331X)))
 (=> $x88 (= ?x238 ?x137)))))))))
 ))
 (let (($x199 (forall ((input.ind-%var330X (_ BitVec 32)) )(let (($x233 (and (bvule (_ bv0 32) input.ind-%var330X) (bvult input.ind-%var330X (_ bv100 32)))))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var330X)))
 (= $x88 $x233))))
 ))
 (let (($x144 (and $x199 $x143)))
 (let (($x194 (and $x144 $x109)))
 (let ((?x104 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x103 (= (_ bv0 32) ?x104)))
 (let ((?x125 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x57 (= (_ bv0 32) ?x125)))
 (let ((?x91 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x81 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x81)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x21 $x226)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x118 $x170)))
 (let (($x116 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x77 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x235 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x117 (and $x235 $x171)))
 (let (($x15 (not $x117)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x155 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x155 $x123)))
 (let (($x19 (and (not $x29) $x15)))
 (let (($x188 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x175 (and $x30 $x188)))
 (let (($x66 (not $x175)))
 (let (($x190 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x183 (and $x154 $x190)))
 (let (($x212 (and (not $x183) $x66)))
 (let (($x108 (and (and (and (and (and (and $x212 $x19) $x77) $x116) $x85) $x182) $x57)))
 (let (($x130 (and $x108 $x103)))
 (let (($x146 (forall ((input.ind-%var321X (_ BitVec 32)) )(let ((?x64 (bvmul input.ind-%var321X (_ bv4 32))))
 (let ((?x68 (bvadd ?x64 input.dst.llvm-%m2)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv1 32))) (select input.dst.llvm-mem ?x68))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x68 (_ bv2 32))) ?x82))))
 (let ((?x7 (input.spec-%var-m2-1.1.1 input.ind-%var321X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var321X)))
 (=> $x86 (= ?x7 ?x191)))))))))
 ))
 (let (($x78 (forall ((input.ind-%var320X (_ BitVec 32)) )(let (($x233 (and (bvule (_ bv0 32) input.ind-%var320X) (bvult input.ind-%var320X (_ bv100 32)))))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var320X)))
 (= $x86 $x233))))
 ))
 (let (($x35 (and $x78 $x146)))
 (let (($x218 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x244 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x244)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x244)))
 (let (($x97 (or false (or false (and (and true (or $x40 $x41)) (or $x6 $x218))))))
 (let (($x245 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x97)))
 (let (($x210 (and (and (and $x245 $x35) $x130) $x194)))
 (let (($x223 (= $x210 true)))
 (let (($x185 (forall ((input.ind-%var341X (_ BitVec 32)) )(let ((?x166 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var341X)))
 (let ((?x238 (input.spec-%var-m1-1.1.1 input.ind-%var341X)))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var341X)))
 (=> $x88 (= ?x238 ?x166))))))
 ))
 (let (($x224 (forall ((input.ind-%var340X (_ BitVec 32)) )(let (($x141 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var340X)))
 (let (($x88 (input.spec-%var-m1-1.0.1 input.ind-%var340X)))
 (= $x88 $x141))))
 ))
 (let (($x178 (and $x224 $x185)))
 (let (($x187 (and $x178 $x223)))
 (let (($x193 (forall ((input.ind-%var351X (_ BitVec 32)) )(let ((?x180 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var351X)))
 (let ((?x7 (input.spec-%var-m2-1.1.1 input.ind-%var351X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var351X)))
 (=> $x86 (= ?x7 ?x180))))))
 ))
 (let (($x160 (forall ((input.ind-%var350X (_ BitVec 32)) )(let (($x184 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var350X)))
 (let (($x86 (input.spec-%var-m2-1.0.1 input.ind-%var350X)))
 (= $x86 $x184))))
 ))
 (let (($x87 (and $x160 $x193)))
 (let (($x208 (and $x87 $x187)))
 (let (($x277 (=> $x208 $x276)))
 (not $x277))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x58 (forall ((input.ind-%var411X (_ BitVec 32)) )(let ((?x57 (bvmul input.ind-%var411X (_ bv4 32))))
 (let ((?x163 (bvadd ?x57 input.dst.llvm-%m1)))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x23))))
 (let ((?x55 (input.spec-%var-m1-1.1.1 input.ind-%var411X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var411X)))
 (=> $x214 (= ?x55 ?x115)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var410X (_ BitVec 32)) )(let (($x65 (and (bvule (_ bv0 32) input.ind-%var410X) (bvult input.ind-%var410X (_ bv100 32)))))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var410X)))
 (= $x214 $x65))))
 ))
 (let (($x272 (and $x259 $x58)))
 (let (($x258 (= $x272 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x20 (concat ?x99 (concat ?x197 ?x192)))))
 (let (($x38 (= input.dst.llvm-%m2 ?x169)))
 (let ((?x42 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x56 (concat ?x176 (concat ?x76 (concat ?x44 ?x42)))))
 (let (($x129 (= input.dst.llvm-%m1 ?x56)))
 (let (($x246 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x200 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x151 (and (and (and $x200 $x246) $x129) $x38)))
 (let (($x83 (forall ((input.ind-%var381X (_ BitVec 32)) )(let ((?x57 (bvmul input.ind-%var381X (_ bv4 32))))
 (let ((?x163 (bvadd ?x57 input.dst.llvm-%m1)))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x23))))
 (let ((?x55 (input.spec-%var-m1-1.1.1 input.ind-%var381X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var381X)))
 (=> $x214 (= ?x55 ?x115)))))))))
 ))
 (let (($x278 (forall ((input.ind-%var380X (_ BitVec 32)) )(let (($x65 (and (bvule (_ bv0 32) input.ind-%var380X) (bvult input.ind-%var380X (_ bv100 32)))))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var380X)))
 (= $x214 $x65))))
 ))
 (let (($x252 (and $x278 $x83)))
 (let (($x213 (and $x252 $x151)))
 (let ((?x203 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x202 (= (_ bv0 32) ?x203)))
 (let ((?x220 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x162 (= (_ bv0 32) ?x220)))
 (let ((?x22 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x22)))
 (let ((?x111 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x111)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x247 (and $x90 $x10)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x215 $x247)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x211 (and $x17 $x43)))
 (let (($x53 (not $x211)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (and $x132 $x98)))
 (let (($x105 (and (not $x8) $x53)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x137 $x39)))
 (let (($x143 (not $x126)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x131 $x89)))
 (let (($x177 (and (not $x54) $x143)))
 (let (($x210 (and (and (and (and (and (and $x177 $x105) $x133) $x45) $x95) $x157) $x162)))
 (let (($x223 (and $x210 $x202)))
 (let (($x156 (forall ((input.ind-%var371X (_ BitVec 32)) )(let ((?x57 (bvmul input.ind-%var371X (_ bv4 32))))
 (let ((?x108 (bvadd ?x57 input.dst.llvm-%m2)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv1 32))) (select input.dst.llvm-mem ?x108))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv2 32))) ?x121))))
 (let ((?x88 (input.spec-%var-m2-1.1.1 input.ind-%var371X)))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var371X)))
 (=> $x114 (= ?x88 ?x142)))))))))
 ))
 (let (($x15 (forall ((input.ind-%var370X (_ BitVec 32)) )(let (($x65 (and (bvule (_ bv0 32) input.ind-%var370X) (bvult input.ind-%var370X (_ bv100 32)))))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var370X)))
 (= $x114 $x65))))
 ))
 (let (($x165 (and $x15 $x156)))
 (let (($x190 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x68 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x171 (or false (or false (and (and true (or $x19 $x68)) (or $x82 $x190))))))
 (let (($x29 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x171)))
 (let (($x222 (and (and (and $x29 $x165) $x223) $x213)))
 (let (($x174 (= $x222 true)))
 (let (($x158 (forall ((input.ind-%var391X (_ BitVec 32)) )(let ((?x244 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var391X)))
 (let ((?x55 (input.spec-%var-m1-1.1.1 input.ind-%var391X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var391X)))
 (=> $x214 (= ?x55 ?x244))))))
 ))
 (let (($x189 (forall ((input.ind-%var390X (_ BitVec 32)) )(let (($x230 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var390X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var390X)))
 (= $x214 $x230))))
 ))
 (let (($x124 (and $x189 $x158)))
 (let (($x179 (and $x124 $x174)))
 (let (($x164 (forall ((input.ind-%var401X (_ BitVec 32)) )(let ((?x134 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var401X)))
 (let ((?x88 (input.spec-%var-m2-1.1.1 input.ind-%var401X)))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var401X)))
 (=> $x114 (= ?x88 ?x134))))))
 ))
 (let (($x221 (forall ((input.ind-%var400X (_ BitVec 32)) )(let (($x160 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var400X)))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var400X)))
 (= $x114 $x160))))
 ))
 (let (($x228 (and $x221 $x164)))
 (let (($x96 (and $x228 $x179)))
 (let (($x273 (=> $x96 $x258)))
 (not $x273))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x58 (forall ((input.ind-%var411X (_ BitVec 32)) )(let ((?x57 (bvmul input.ind-%var411X (_ bv4 32))))
 (let ((?x163 (bvadd ?x57 input.dst.llvm-%m1)))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x23))))
 (let ((?x55 (input.spec-%var-m1-1.1.1 input.ind-%var411X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var411X)))
 (=> $x214 (= ?x55 ?x115)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var410X (_ BitVec 32)) )(let (($x65 (and (bvule (_ bv0 32) input.ind-%var410X) (bvult input.ind-%var410X (_ bv100 32)))))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var410X)))
 (= $x214 $x65))))
 ))
 (let (($x272 (and $x259 $x58)))
 (let (($x258 (= $x272 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x20 (concat ?x99 (concat ?x197 ?x192)))))
 (let (($x38 (= input.dst.llvm-%m2 ?x169)))
 (let ((?x42 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x56 (concat ?x176 (concat ?x76 (concat ?x44 ?x42)))))
 (let (($x129 (= input.dst.llvm-%m1 ?x56)))
 (let (($x246 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x200 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x151 (and (and (and $x200 $x246) $x129) $x38)))
 (let (($x83 (forall ((input.ind-%var381X (_ BitVec 32)) )(let ((?x57 (bvmul input.ind-%var381X (_ bv4 32))))
 (let ((?x163 (bvadd ?x57 input.dst.llvm-%m1)))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x23))))
 (let ((?x55 (input.spec-%var-m1-1.1.1 input.ind-%var381X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var381X)))
 (=> $x214 (= ?x55 ?x115)))))))))
 ))
 (let (($x278 (forall ((input.ind-%var380X (_ BitVec 32)) )(let (($x65 (and (bvule (_ bv0 32) input.ind-%var380X) (bvult input.ind-%var380X (_ bv100 32)))))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var380X)))
 (= $x214 $x65))))
 ))
 (let (($x252 (and $x278 $x83)))
 (let (($x213 (and $x252 $x151)))
 (let ((?x203 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x202 (= (_ bv0 32) ?x203)))
 (let ((?x220 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x162 (= (_ bv0 32) ?x220)))
 (let ((?x22 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x22)))
 (let ((?x111 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x111)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x247 (and $x90 $x10)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x215 $x247)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x211 (and $x17 $x43)))
 (let (($x53 (not $x211)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (and $x132 $x98)))
 (let (($x105 (and (not $x8) $x53)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x137 $x39)))
 (let (($x143 (not $x126)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x131 $x89)))
 (let (($x177 (and (not $x54) $x143)))
 (let (($x210 (and (and (and (and (and (and $x177 $x105) $x133) $x45) $x95) $x157) $x162)))
 (let (($x223 (and $x210 $x202)))
 (let (($x156 (forall ((input.ind-%var371X (_ BitVec 32)) )(let ((?x57 (bvmul input.ind-%var371X (_ bv4 32))))
 (let ((?x108 (bvadd ?x57 input.dst.llvm-%m2)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv1 32))) (select input.dst.llvm-mem ?x108))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv2 32))) ?x121))))
 (let ((?x88 (input.spec-%var-m2-1.1.1 input.ind-%var371X)))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var371X)))
 (=> $x114 (= ?x88 ?x142)))))))))
 ))
 (let (($x15 (forall ((input.ind-%var370X (_ BitVec 32)) )(let (($x65 (and (bvule (_ bv0 32) input.ind-%var370X) (bvult input.ind-%var370X (_ bv100 32)))))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var370X)))
 (= $x114 $x65))))
 ))
 (let (($x165 (and $x15 $x156)))
 (let (($x190 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x68 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x171 (or false (or false (and (and true (or $x19 $x68)) (or $x82 $x190))))))
 (let (($x29 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x171)))
 (let (($x222 (and (and (and $x29 $x165) $x223) $x213)))
 (let (($x174 (= $x222 true)))
 (let (($x158 (forall ((input.ind-%var391X (_ BitVec 32)) )(let ((?x244 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var391X)))
 (let ((?x55 (input.spec-%var-m1-1.1.1 input.ind-%var391X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var391X)))
 (=> $x214 (= ?x55 ?x244))))))
 ))
 (let (($x189 (forall ((input.ind-%var390X (_ BitVec 32)) )(let (($x230 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var390X)))
 (let (($x214 (input.spec-%var-m1-1.0.1 input.ind-%var390X)))
 (= $x214 $x230))))
 ))
 (let (($x124 (and $x189 $x158)))
 (let (($x179 (and $x124 $x174)))
 (let (($x164 (forall ((input.ind-%var401X (_ BitVec 32)) )(let ((?x134 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var401X)))
 (let ((?x88 (input.spec-%var-m2-1.1.1 input.ind-%var401X)))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var401X)))
 (=> $x114 (= ?x88 ?x134))))))
 ))
 (let (($x221 (forall ((input.ind-%var400X (_ BitVec 32)) )(let (($x160 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var400X)))
 (let (($x114 (input.spec-%var-m2-1.0.1 input.ind-%var400X)))
 (= $x114 $x160))))
 ))
 (let (($x228 (and $x221 $x164)))
 (let (($x96 (and $x228 $x179)))
 (let (($x273 (=> $x96 $x258)))
 (not $x273))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x166 (= false true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x238 (concat ?x79 (concat ?x208 (concat ?x11 ?x47)))))
 (let (($x152 (= input.dst.llvm-%m2 ?x238)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x59 (concat ?x249 (concat ?x187 ?x125)))))
 (let (($x241 (= input.dst.llvm-%m1 ?x63)))
 (let (($x9 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x35 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x97 (and (and (and $x35 $x9) $x241) $x152)))
 (let (($x170 (forall ((input.ind-%var431X (_ BitVec 32)) )(let ((?x162 (bvmul input.ind-%var431X (_ bv4 32))))
 (let ((?x181 (bvadd ?x162 input.dst.llvm-%m1)))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem ?x181))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv2 32))) ?x52))))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var431X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var431X)))
 (=> $x51 (= ?x46 ?x172)))))))))
 ))
 (let (($x167 (forall ((input.ind-%var430X (_ BitVec 32)) )(let (($x144 (and (bvule (_ bv0 32) input.ind-%var430X) (bvult input.ind-%var430X (_ bv100 32)))))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var430X)))
 (= $x51 $x144))))
 ))
 (let (($x182 (and $x167 $x170)))
 (let (($x185 (and $x182 $x97)))
 (let ((?x192 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x236 (= (_ bv0 32) ?x192)))
 (let ((?x127 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x127)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x150)))
 (let ((?x129 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x129)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (and $x56 $x73)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x20 (and $x201 $x102)))
 (let (($x242 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x246 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x195 (and $x246 $x25)))
 (let (($x176 (not $x195)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x112 (and $x239 $x200)))
 (let (($x76 (and (not $x112) $x176)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x115 $x250)))
 (let (($x83 (not $x67)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x237 $x23)))
 (let (($x101 (and (not $x37) $x83)))
 (let (($x222 (and (and (and (and (and (and $x101 $x76) $x44) $x242) $x20) $x99) $x197)))
 (let (($x174 (and $x222 $x236)))
 (let (($x100 (forall ((input.ind-%var421X (_ BitVec 32)) )(let ((?x162 (bvmul input.ind-%var421X (_ bv4 32))))
 (let ((?x210 (bvadd ?x162 input.dst.llvm-%m2)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x138))))
 (let ((?x214 (input.spec-%var-m2-1.1.1 input.ind-%var421X)))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var421X)))
 (=> $x180 (= ?x214 ?x251)))))))))
 ))
 (let (($x53 (forall ((input.ind-%var420X (_ BitVec 32)) )(let (($x144 (and (bvule (_ bv0 32) input.ind-%var420X) (bvult input.ind-%var420X (_ bv100 32)))))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var420X)))
 (= $x180 $x144))))
 ))
 (let (($x227 (and $x53 $x100)))
 (let (($x89 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x28 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x28)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x28)))
 (let (($x43 (or false (or false (and (and true (or $x105 $x108)) (or $x121 $x89))))))
 (let (($x8 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x43)))
 (let (($x178 (and (and (and $x8 $x227) $x174) $x185)))
 (let (($x87 (= $x178 true)))
 (let (($x106 (forall ((input.ind-%var441X (_ BitVec 32)) )(let ((?x13 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var441X)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var441X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var441X)))
 (=> $x51 (= ?x46 ?x13))))))
 ))
 (let (($x136 (forall ((input.ind-%var440X (_ BitVec 32)) )(let (($x183 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var440X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var440X)))
 (= $x51 $x183))))
 ))
 (let (($x113 (and $x136 $x106)))
 (let (($x148 (and $x113 $x87)))
 (let (($x232 (forall ((input.ind-%var451X (_ BitVec 32)) )(let ((?x94 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var451X)))
 (let ((?x214 (input.spec-%var-m2-1.1.1 input.ind-%var451X)))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var451X)))
 (=> $x180 (= ?x214 ?x94))))))
 ))
 (let (($x188 (forall ((input.ind-%var450X (_ BitVec 32)) )(let (($x221 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var450X)))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var450X)))
 (= $x180 $x221))))
 ))
 (let (($x175 (and $x188 $x232)))
 (let (($x186 (and $x175 $x148)))
 (let (($x193 (=> $x186 $x166)))
 (not $x193)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x166 (= false true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x238 (concat ?x79 (concat ?x208 (concat ?x11 ?x47)))))
 (let (($x152 (= input.dst.llvm-%m2 ?x238)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x59 (concat ?x249 (concat ?x187 ?x125)))))
 (let (($x241 (= input.dst.llvm-%m1 ?x63)))
 (let (($x9 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x35 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x97 (and (and (and $x35 $x9) $x241) $x152)))
 (let (($x170 (forall ((input.ind-%var431X (_ BitVec 32)) )(let ((?x162 (bvmul input.ind-%var431X (_ bv4 32))))
 (let ((?x181 (bvadd ?x162 input.dst.llvm-%m1)))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem ?x181))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv2 32))) ?x52))))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var431X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var431X)))
 (=> $x51 (= ?x46 ?x172)))))))))
 ))
 (let (($x167 (forall ((input.ind-%var430X (_ BitVec 32)) )(let (($x144 (and (bvule (_ bv0 32) input.ind-%var430X) (bvult input.ind-%var430X (_ bv100 32)))))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var430X)))
 (= $x51 $x144))))
 ))
 (let (($x182 (and $x167 $x170)))
 (let (($x185 (and $x182 $x97)))
 (let ((?x192 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x236 (= (_ bv0 32) ?x192)))
 (let ((?x127 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x127)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x150)))
 (let ((?x129 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x129)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (and $x56 $x73)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x20 (and $x201 $x102)))
 (let (($x242 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x246 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x195 (and $x246 $x25)))
 (let (($x176 (not $x195)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x112 (and $x239 $x200)))
 (let (($x76 (and (not $x112) $x176)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x115 $x250)))
 (let (($x83 (not $x67)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x237 $x23)))
 (let (($x101 (and (not $x37) $x83)))
 (let (($x222 (and (and (and (and (and (and $x101 $x76) $x44) $x242) $x20) $x99) $x197)))
 (let (($x174 (and $x222 $x236)))
 (let (($x100 (forall ((input.ind-%var421X (_ BitVec 32)) )(let ((?x162 (bvmul input.ind-%var421X (_ bv4 32))))
 (let ((?x210 (bvadd ?x162 input.dst.llvm-%m2)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x138))))
 (let ((?x214 (input.spec-%var-m2-1.1.1 input.ind-%var421X)))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var421X)))
 (=> $x180 (= ?x214 ?x251)))))))))
 ))
 (let (($x53 (forall ((input.ind-%var420X (_ BitVec 32)) )(let (($x144 (and (bvule (_ bv0 32) input.ind-%var420X) (bvult input.ind-%var420X (_ bv100 32)))))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var420X)))
 (= $x180 $x144))))
 ))
 (let (($x227 (and $x53 $x100)))
 (let (($x89 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x28 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x28)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x28)))
 (let (($x43 (or false (or false (and (and true (or $x105 $x108)) (or $x121 $x89))))))
 (let (($x8 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x43)))
 (let (($x178 (and (and (and $x8 $x227) $x174) $x185)))
 (let (($x87 (= $x178 true)))
 (let (($x106 (forall ((input.ind-%var441X (_ BitVec 32)) )(let ((?x13 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var441X)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var441X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var441X)))
 (=> $x51 (= ?x46 ?x13))))))
 ))
 (let (($x136 (forall ((input.ind-%var440X (_ BitVec 32)) )(let (($x183 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var440X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var440X)))
 (= $x51 $x183))))
 ))
 (let (($x113 (and $x136 $x106)))
 (let (($x148 (and $x113 $x87)))
 (let (($x232 (forall ((input.ind-%var451X (_ BitVec 32)) )(let ((?x94 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var451X)))
 (let ((?x214 (input.spec-%var-m2-1.1.1 input.ind-%var451X)))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var451X)))
 (=> $x180 (= ?x214 ?x94))))))
 ))
 (let (($x188 (forall ((input.ind-%var450X (_ BitVec 32)) )(let (($x221 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var450X)))
 (let (($x180 (input.spec-%var-m2-1.0.1 input.ind-%var450X)))
 (= $x180 $x221))))
 ))
 (let (($x175 (and $x188 $x232)))
 (let (($x186 (and $x175 $x148)))
 (let (($x193 (=> $x186 $x166)))
 (not $x193)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x1510d010)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2634b004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x3cd1ef00)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xeff1bf00)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2634b007)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x1510d013)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2634b004)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x1510d010)
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x1510d011) #xef
    (ite (= x!0 #x2634b007) #xef
    (ite (= x!0 #x1510d013) #x3c
    (ite (= x!0 #x1510d012) #xd1
    (ite (= x!0 #x2634b006) #xf1
    (ite (= x!0 #x2634b005) #xbf
      #x00)))))))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x1510d013)
                                      (k!11 #x1510d012)
                                      (k!11 #x1510d011)
                                      (k!11 #x1510d010)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x1510d013)
                                      (k!11 #x1510d012)
                                      (k!11 #x1510d011)
                                      (k!11 #x1510d010)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x1510d013)
                                      (k!11 #x1510d012)
                                      (k!11 #x1510d011)
                                      (k!11 #x1510d010)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x1510d013)
                                      (k!11 #x1510d012)
                                      (k!11 #x1510d011)
                                      (k!11 #x1510d010))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x2634b007)
                                      (k!11 #x2634b006)
                                      (k!11 #x2634b005)
                                      (k!11 #x2634b004)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x2634b007)
                                      (k!11 #x2634b006)
                                      (k!11 #x2634b005)
                                      (k!11 #x2634b004)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x2634b007)
                                      (k!11 #x2634b006)
                                      (k!11 #x2634b005)
                                      (k!11 #x2634b004)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x2634b007)
                                      (k!11 #x2634b006)
                                      (k!11 #x2634b005)
                                      (k!11 #x2634b004))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x217 (= false true)))
 (let (($x70 (forall ((input.ind-%var503X (_ BitVec 32)) )(let ((?x169 (bvmul input.ind-%var503X (_ bv4 32))))
 (let ((?x60 (bvadd ?x169 input.dst.llvm-%m1)))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv1 32))) (select input.dst.llvm-mem ?x60))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv2 32))) ?x220))))
 (let ((?x131 (input.spec-%var-m1-1.1.1 input.ind-%var503X)))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var503X)))
 (=> $x92 (= ?x131 ?x141)))))))))
 ))
 (let (($x130 (forall ((input.ind-%var502X (_ BitVec 32)) )(let (($x207 (and (bvule (_ bv0 32) input.ind-%var502X) (bvult input.ind-%var502X (_ bv100 32)))))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var502X)))
 (= $x92 $x207))))
 ))
 (let (($x75 (and $x130 $x70)))
 (let (($x71 (= $x75 true)))
 (let ((?x166 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x193 (= (_ bv0 32) ?x166)))
 (let ((?x148 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x186 (= (_ bv0 32) ?x148)))
 (let ((?x178 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x178)))
 (let ((?x238 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x238)))
 (let (($x275 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (and $x275 $x152)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x185 (and $x32 $x97)))
 (let (($x47 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x63 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (and $x63 $x241)))
 (let (($x276 (not $x6)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x135 (and $x125 $x256)))
 (let (($x159 (and (not $x135) $x276)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x274 (and $x161 $x59)))
 (let (($x249 (not $x274)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x255 (and $x184 $x181)))
 (let (($x187 (and (not $x255) $x249)))
 (let (($x160 (and (and (and (and (and (and $x187 $x159) $x139) $x47) $x185) $x87) $x186)))
 (let (($x230 (and $x160 $x193)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x205 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x205)))
 (let (($x35 (or false (or false (and (and true (or $x191 $x36)) (or $x118 $x170))))))
 (let (($x9 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x35)))
 (let (($x190 (and $x9 $x230)))
 (let (($x245 (= $x190 true)))
 (let ((?x236 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x174 (= (_ bv0 2) ?x236)))
 (let (($x140 (= $x174 true)))
 (let (($x127 (forall ((input.ind-%var493X (_ BitVec 32)) )(let ((?x169 (bvmul input.ind-%var493X (_ bv4 32))))
 (let ((?x42 (bvadd ?x169 input.dst.llvm-%m2)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x56))))
 (let ((?x29 (input.spec-%var-m2-1.1.1 input.ind-%var493X)))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var493X)))
 (=> $x221 (= ?x29 ?x150)))))))))
 ))
 (let (($x61 (forall ((input.ind-%var492X (_ BitVec 32)) )(let (($x207 (and (bvule (_ bv0 32) input.ind-%var492X) (bvult input.ind-%var492X (_ bv100 32)))))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var492X)))
 (= $x221 $x207))))
 ))
 (let (($x197 (and $x61 $x127)))
 (let (($x222 (= $x197 true)))
 (let ((?x162 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x31 (= (_ bv0 2) ?x162)))
 (let (($x210 (= $x31 true)))
 (let (($x192 (and $x210 $x222)))
 (let (($x273 (and $x192 $x140)))
 (let (($x235 (and $x273 $x245)))
 (let (($x168 (and $x235 $x71)))
 (let (($x211 (forall ((input.ind-%var513X (_ BitVec 32)) )(let ((?x43 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var513X)))
 (let ((?x131 (input.spec-%var-m1-1.1.1 input.ind-%var513X)))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var513X)))
 (=> $x92 (= ?x131 ?x43))))))
 ))
 (let (($x177 (forall ((input.ind-%var512X (_ BitVec 32)) )(let (($x254 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var512X)))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var512X)))
 (= $x92 $x254))))
 ))
 (let (($x53 (and $x177 $x211)))
 (let (($x218 (and $x53 $x168)))
 (let (($x212 (forall ((input.ind-%var523X (_ BitVec 32)) )(let ((?x13 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var523X)))
 (let ((?x29 (input.spec-%var-m2-1.1.1 input.ind-%var523X)))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var523X)))
 (=> $x221 (= ?x29 ?x13))))))
 ))
 (let (($x232 (forall ((input.ind-%var522X (_ BitVec 32)) )(let (($x214 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var522X)))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var522X)))
 (= $x221 $x214))))
 ))
 (let (($x117 (and $x232 $x212)))
 (let (($x40 (and $x117 $x218)))
 (let (($x209 (=> $x40 $x217)))
 (not $x209)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x217 (= false true)))
 (let (($x70 (forall ((input.ind-%var503X (_ BitVec 32)) )(let ((?x169 (bvmul input.ind-%var503X (_ bv4 32))))
 (let ((?x60 (bvadd ?x169 input.dst.llvm-%m1)))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv1 32))) (select input.dst.llvm-mem ?x60))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv2 32))) ?x220))))
 (let ((?x131 (input.spec-%var-m1-1.1.1 input.ind-%var503X)))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var503X)))
 (=> $x92 (= ?x131 ?x141)))))))))
 ))
 (let (($x130 (forall ((input.ind-%var502X (_ BitVec 32)) )(let (($x207 (and (bvule (_ bv0 32) input.ind-%var502X) (bvult input.ind-%var502X (_ bv100 32)))))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var502X)))
 (= $x92 $x207))))
 ))
 (let (($x75 (and $x130 $x70)))
 (let (($x71 (= $x75 true)))
 (let ((?x166 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x193 (= (_ bv0 32) ?x166)))
 (let ((?x148 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x186 (= (_ bv0 32) ?x148)))
 (let ((?x178 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x178)))
 (let ((?x238 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x238)))
 (let (($x275 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (and $x275 $x152)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x185 (and $x32 $x97)))
 (let (($x47 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x63 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (and $x63 $x241)))
 (let (($x276 (not $x6)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x135 (and $x125 $x256)))
 (let (($x159 (and (not $x135) $x276)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x274 (and $x161 $x59)))
 (let (($x249 (not $x274)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x255 (and $x184 $x181)))
 (let (($x187 (and (not $x255) $x249)))
 (let (($x160 (and (and (and (and (and (and $x187 $x159) $x139) $x47) $x185) $x87) $x186)))
 (let (($x230 (and $x160 $x193)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x205 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x205)))
 (let (($x35 (or false (or false (and (and true (or $x191 $x36)) (or $x118 $x170))))))
 (let (($x9 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x35)))
 (let (($x190 (and $x9 $x230)))
 (let (($x245 (= $x190 true)))
 (let ((?x236 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x174 (= (_ bv0 2) ?x236)))
 (let (($x140 (= $x174 true)))
 (let (($x127 (forall ((input.ind-%var493X (_ BitVec 32)) )(let ((?x169 (bvmul input.ind-%var493X (_ bv4 32))))
 (let ((?x42 (bvadd ?x169 input.dst.llvm-%m2)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x56))))
 (let ((?x29 (input.spec-%var-m2-1.1.1 input.ind-%var493X)))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var493X)))
 (=> $x221 (= ?x29 ?x150)))))))))
 ))
 (let (($x61 (forall ((input.ind-%var492X (_ BitVec 32)) )(let (($x207 (and (bvule (_ bv0 32) input.ind-%var492X) (bvult input.ind-%var492X (_ bv100 32)))))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var492X)))
 (= $x221 $x207))))
 ))
 (let (($x197 (and $x61 $x127)))
 (let (($x222 (= $x197 true)))
 (let ((?x162 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x31 (= (_ bv0 2) ?x162)))
 (let (($x210 (= $x31 true)))
 (let (($x192 (and $x210 $x222)))
 (let (($x273 (and $x192 $x140)))
 (let (($x235 (and $x273 $x245)))
 (let (($x168 (and $x235 $x71)))
 (let (($x211 (forall ((input.ind-%var513X (_ BitVec 32)) )(let ((?x43 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var513X)))
 (let ((?x131 (input.spec-%var-m1-1.1.1 input.ind-%var513X)))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var513X)))
 (=> $x92 (= ?x131 ?x43))))))
 ))
 (let (($x177 (forall ((input.ind-%var512X (_ BitVec 32)) )(let (($x254 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var512X)))
 (let (($x92 (input.spec-%var-m1-1.0.1 input.ind-%var512X)))
 (= $x92 $x254))))
 ))
 (let (($x53 (and $x177 $x211)))
 (let (($x218 (and $x53 $x168)))
 (let (($x212 (forall ((input.ind-%var523X (_ BitVec 32)) )(let ((?x13 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var523X)))
 (let ((?x29 (input.spec-%var-m2-1.1.1 input.ind-%var523X)))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var523X)))
 (=> $x221 (= ?x29 ?x13))))))
 ))
 (let (($x232 (forall ((input.ind-%var522X (_ BitVec 32)) )(let (($x214 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var522X)))
 (let (($x221 (input.spec-%var-m2-1.0.1 input.ind-%var522X)))
 (= $x221 $x214))))
 ))
 (let (($x117 (and $x232 $x212)))
 (let (($x40 (and $x117 $x218)))
 (let (($x209 (=> $x40 $x217)))
 (not $x209)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x03b103cc)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xea901500)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xea901503)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x03b103cf)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xea901500)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x03b103cc)
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun func.calla4bcb626de6152719ca44f8b649b9c4a.reg ((_ BitVec 8) (_ BitVec 8) (Array (_ BitVec 32) (_ BitVec 8)) (Array (_ BitVec 32) (_ BitVec 8)) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun nextpc_const.1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.alloc () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun solver-mem_0 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x164 (func.calla4bcb626de6152719ca44f8b649b9c4a.reg (_ bv1 8) (_ bv0 8) solver-mem_0 input.dst.llvm-mem.alloc nextpc_const.1 (_ bv1000 32) input.dst.llvm-%m1)))
 (let ((?x122 ((_ extract 2 0) ?x164)))
 (let ((?x88 (bvmul ?x122 (_ bv4 3))))
 (let ((?x48 ((_ extract 2 0) input.dst.llvm-%m2)))
 (let ((?x21 (bvadd ?x48 ?x88)))
 (let ((?x82 ((_ extract 2 0) spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6)))
 (let ((?x158 (bvmul ?x82 (_ bv4 3))))
 (let ((?x248 (bvneg ?x158)))
 (let (($x189 (= ?x248 ?x21)))
 (let (($x137 (= $x189 true)))
 (let ((?x41 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x272 (= (_ bv0 2) ?x41)))
 (let (($x258 (= $x272 true)))
 (let ((?x39 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x253 (= (_ bv0 2) ?x39)))
 (let (($x51 (= $x253 true)))
 (let (($x183 (forall ((input.ind-%var623X (_ BitVec 32)) )(let ((?x121 (bvmul input.ind-%var623X (_ bv4 32))))
 (let ((?x111 (bvadd ?x121 input.dst.llvm-%m1)))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv1 32))) (select input.dst.llvm-mem ?x111))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv2 32))) ?x123))))
 (let ((?x195 (input.spec-%var-m1-1.1.1 input.ind-%var623X)))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var623X)))
 (=> $x138 (= ?x195 ?x175)))))))))
 ))
 (let (($x202 (forall ((input.ind-%var622X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var622X) (bvult input.ind-%var622X (_ bv100 32)))))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var622X)))
 (= $x138 $x259))))
 ))
 (let (($x180 (and $x202 $x183)))
 (let (($x114 (= $x180 true)))
 (let (($x176 (forall ((input.ind-%var613X (_ BitVec 32)) )(let ((?x121 (bvmul input.ind-%var613X (_ bv4 32))))
 (let ((?x89 (bvadd ?x121 input.dst.llvm-%m2)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x98))))
 (let ((?x144 (input.spec-%var-m2-1.1.1 input.ind-%var613X)))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var613X)))
 (=> $x132 (= ?x144 ?x278)))))))))
 ))
 (let (($x206 (forall ((input.ind-%var612X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var612X) (bvult input.ind-%var612X (_ bv100 32)))))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var612X)))
 (= $x132 $x259))))
 ))
 (let (($x76 (and $x206 $x176)))
 (let (($x18 (= $x76 true)))
 (let (($x245 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x193 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x235 (and $x193 $x245)))
 (let (($x154 (= $x235 true)))
 (let ((?x32 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x275 (= (_ bv0 32) ?x32)))
 (let ((?x47 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x57 (= (_ bv0 32) ?x47)))
 (let ((?x68 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x68)))
 (let ((?x159 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x159)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x208 (and $x6 $x7)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x139 (and $x241 $x208)))
 (let (($x63 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x274 (and $x161 $x59)))
 (let (($x249 (not $x274)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x225 (and $x181 $x255)))
 (let (($x125 (and (not $x225) $x249)))
 (let (($x233 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x182 $x233)))
 (let (($x35 (not $x14)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x170 (and $x127 $x197)))
 (let (($x184 (and (not $x170) $x35)))
 (let (($x178 (and (and (and (and (and (and $x184 $x125) $x135) $x63) $x139) $x11) $x57)))
 (let (($x87 (and $x178 $x275)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x140 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x140)))
 (let (($x226 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x273 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x140)))
 (let (($x172 (or false (or false (and (and true (or $x273 $x226)) (or $x191 $x91))))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x172)))
 (let (($x27 (and $x77 $x87)))
 (let (($x148 (= $x27 true)))
 (let (($x130 (and $x148 $x154)))
 (let (($x246 (and $x130 $x18)))
 (let (($x46 (and $x246 $x114)))
 (let (($x106 (and $x46 $x51)))
 (let (($x84 (and $x106 $x258)))
 (let (($x242 (forall ((input.ind-%var633X (_ BitVec 32)) )(let ((?x112 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var633X)))
 (let ((?x195 (input.spec-%var-m1-1.1.1 input.ind-%var633X)))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var633X)))
 (=> $x138 (= ?x195 ?x112))))))
 ))
 (let (($x37 (forall ((input.ind-%var632X (_ BitVec 32)) )(let (($x207 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var632X)))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var632X)))
 (= $x138 $x207))))
 ))
 (let (($x56 (and $x37 $x242)))
 (let (($x55 (and $x56 $x84)))
 (let (($x162 (forall ((input.ind-%var643X (_ BitVec 32)) )(let ((?x177 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var643X)))
 (let ((?x144 (input.spec-%var-m2-1.1.1 input.ind-%var643X)))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var643X)))
 (=> $x132 (= ?x144 ?x177))))))
 ))
 (let (($x29 (forall ((input.ind-%var642X (_ BitVec 32)) )(let (($x50 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var642X)))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var642X)))
 (= $x132 $x50))))
 ))
 (let (($x31 (and $x29 $x162)))
 (let (($x64 (and $x31 $x55)))
 (let (($x74 (=> $x64 $x137)))
 (let (($x72 (not $x74)))
 (let (($x284 (forall ((memmask-bounded-var! (_ BitVec 32)) )(let (($x269 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x267 (bvadd memmask-bounded-var! (_ bv0 32))))
 (let (($x262 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x267)))
 (let (($x49 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x267)))
 (let (($x257 (or false (or false (and (and true (or $x80 $x49)) (or $x262 $x269))))))
 (ite (=> (bvule memmask-bounded-var! (bvsub (bvadd memmask-bounded-var! (_ bv1 32)) (_ bv1 32))) $x257) (= (select solver-mem_0 memmask-bounded-var!) (select input.dst.llvm-mem memmask-bounded-var!)) (= (select solver-mem_0 memmask-bounded-var!) (_ bv0 8))))))))))
 ))
 (and (and true $x284) $x72)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun func.calla4bcb626de6152719ca44f8b649b9c4a.reg ((_ BitVec 8) (_ BitVec 8) (Array (_ BitVec 32) (_ BitVec 8)) (Array (_ BitVec 32) (_ BitVec 8)) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun nextpc_const.1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.alloc () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun solver-mem_0 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x164 (func.calla4bcb626de6152719ca44f8b649b9c4a.reg (_ bv1 8) (_ bv0 8) solver-mem_0 input.dst.llvm-mem.alloc nextpc_const.1 (_ bv1000 32) input.dst.llvm-%m1)))
 (let ((?x122 ((_ extract 2 0) ?x164)))
 (let ((?x88 (bvmul ?x122 (_ bv4 3))))
 (let ((?x48 ((_ extract 2 0) input.dst.llvm-%m2)))
 (let ((?x21 (bvadd ?x48 ?x88)))
 (let ((?x82 ((_ extract 2 0) spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6)))
 (let ((?x158 (bvmul ?x82 (_ bv4 3))))
 (let ((?x248 (bvneg ?x158)))
 (let (($x189 (= ?x248 ?x21)))
 (let (($x137 (= $x189 true)))
 (let ((?x41 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x272 (= (_ bv0 2) ?x41)))
 (let (($x258 (= $x272 true)))
 (let ((?x39 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x253 (= (_ bv0 2) ?x39)))
 (let (($x51 (= $x253 true)))
 (let (($x183 (forall ((input.ind-%var623X (_ BitVec 32)) )(let ((?x121 (bvmul input.ind-%var623X (_ bv4 32))))
 (let ((?x111 (bvadd ?x121 input.dst.llvm-%m1)))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv1 32))) (select input.dst.llvm-mem ?x111))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv2 32))) ?x123))))
 (let ((?x195 (input.spec-%var-m1-1.1.1 input.ind-%var623X)))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var623X)))
 (=> $x138 (= ?x195 ?x175)))))))))
 ))
 (let (($x202 (forall ((input.ind-%var622X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var622X) (bvult input.ind-%var622X (_ bv100 32)))))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var622X)))
 (= $x138 $x259))))
 ))
 (let (($x180 (and $x202 $x183)))
 (let (($x114 (= $x180 true)))
 (let (($x176 (forall ((input.ind-%var613X (_ BitVec 32)) )(let ((?x121 (bvmul input.ind-%var613X (_ bv4 32))))
 (let ((?x89 (bvadd ?x121 input.dst.llvm-%m2)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x98))))
 (let ((?x144 (input.spec-%var-m2-1.1.1 input.ind-%var613X)))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var613X)))
 (=> $x132 (= ?x144 ?x278)))))))))
 ))
 (let (($x206 (forall ((input.ind-%var612X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var612X) (bvult input.ind-%var612X (_ bv100 32)))))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var612X)))
 (= $x132 $x259))))
 ))
 (let (($x76 (and $x206 $x176)))
 (let (($x18 (= $x76 true)))
 (let (($x245 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x193 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x235 (and $x193 $x245)))
 (let (($x154 (= $x235 true)))
 (let ((?x32 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x275 (= (_ bv0 32) ?x32)))
 (let ((?x47 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x57 (= (_ bv0 32) ?x47)))
 (let ((?x68 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x68)))
 (let ((?x159 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x159)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x208 (and $x6 $x7)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x139 (and $x241 $x208)))
 (let (($x63 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x274 (and $x161 $x59)))
 (let (($x249 (not $x274)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x225 (and $x181 $x255)))
 (let (($x125 (and (not $x225) $x249)))
 (let (($x233 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x182 $x233)))
 (let (($x35 (not $x14)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x170 (and $x127 $x197)))
 (let (($x184 (and (not $x170) $x35)))
 (let (($x178 (and (and (and (and (and (and $x184 $x125) $x135) $x63) $x139) $x11) $x57)))
 (let (($x87 (and $x178 $x275)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x140 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x140)))
 (let (($x226 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x273 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x140)))
 (let (($x172 (or false (or false (and (and true (or $x273 $x226)) (or $x191 $x91))))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x172)))
 (let (($x27 (and $x77 $x87)))
 (let (($x148 (= $x27 true)))
 (let (($x130 (and $x148 $x154)))
 (let (($x246 (and $x130 $x18)))
 (let (($x46 (and $x246 $x114)))
 (let (($x106 (and $x46 $x51)))
 (let (($x84 (and $x106 $x258)))
 (let (($x242 (forall ((input.ind-%var633X (_ BitVec 32)) )(let ((?x112 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var633X)))
 (let ((?x195 (input.spec-%var-m1-1.1.1 input.ind-%var633X)))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var633X)))
 (=> $x138 (= ?x195 ?x112))))))
 ))
 (let (($x37 (forall ((input.ind-%var632X (_ BitVec 32)) )(let (($x207 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var632X)))
 (let (($x138 (input.spec-%var-m1-1.0.1 input.ind-%var632X)))
 (= $x138 $x207))))
 ))
 (let (($x56 (and $x37 $x242)))
 (let (($x55 (and $x56 $x84)))
 (let (($x162 (forall ((input.ind-%var643X (_ BitVec 32)) )(let ((?x177 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var643X)))
 (let ((?x144 (input.spec-%var-m2-1.1.1 input.ind-%var643X)))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var643X)))
 (=> $x132 (= ?x144 ?x177))))))
 ))
 (let (($x29 (forall ((input.ind-%var642X (_ BitVec 32)) )(let (($x50 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var642X)))
 (let (($x132 (input.spec-%var-m2-1.0.1 input.ind-%var642X)))
 (= $x132 $x50))))
 ))
 (let (($x31 (and $x29 $x162)))
 (let (($x64 (and $x31 $x55)))
 (let (($x74 (=> $x64 $x137)))
 (let (($x72 (not $x74)))
 (let (($x284 (forall ((memmask-bounded-var! (_ BitVec 32)) )(let (($x269 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x267 (bvadd memmask-bounded-var! (_ bv0 32))))
 (let (($x262 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x267)))
 (let (($x49 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x267)))
 (let (($x257 (or false (or false (and (and true (or $x80 $x49)) (or $x262 $x269))))))
 (ite (=> (bvule memmask-bounded-var! (bvsub (bvadd memmask-bounded-var! (_ bv1 32)) (_ bv1 32))) $x257) (= (select solver-mem_0 memmask-bounded-var!) (select input.dst.llvm-mem memmask-bounded-var!)) (= (select solver-mem_0 memmask-bounded-var!) (_ bv0 8))))))))))
 ))
 (and (and true $x284) $x72)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!73))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x0cc03910)
  (define-fun solver-mem_0 () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!73))
  (define-fun nextpc_const.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x100892a0)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.alloc () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!72))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x100892a3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x0cc03913)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x100892a0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x0cc03910)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!74 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (ite (bvule #x100892a1 x!0)
                    (ite (bvule #x100892a3 x!0)
                         (ite (bvule #x100892a4 x!0) #x100892a4 #x100892a3)
                         #x100892a1)
                    #x100892a0)))
    (let ((a!2 (ite (bvule #x0cc03913 x!0)
                    (ite (bvule #x0cc03914 x!0)
                         (ite (bvule #x100892a0 x!0) a!1 #x0cc03914)
                         #x0cc03913)
                    #x0cc03911)))
      (ite (bvule #x0cc03910 x!0)
           (ite (bvule #x0cc03911 x!0) a!2 #x0cc03910)
           #x00000032))))
  (define-fun k!73!75 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x100892a4) #x00
    (ite (= x!0 #x100892a3) #x00
    (ite (= x!0 #x0cc03910) #x00
    (ite (= x!0 #x0cc03914) #x08
    (ite (= x!0 #x100892a1) #x00
    (ite (= x!0 #x0cc03913) #x00
    (ite (= x!0 #x100892a0) #x00
    (ite (= x!0 #x0cc03911) #x00
    (ite (= x!0 #x00000032) #x01
      #x02))))))))))
  (define-fun k!73 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (k!73!75 (k!74 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!73 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!73 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!73 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!73 (bvmul #x00000004 x!0))))
  (define-fun func.calla4bcb626de6152719ca44f8b649b9c4a.reg ((x!0 (_ BitVec 8))
   (x!1 (_ BitVec 8))
   (x!2 (Array (_ BitVec 32) (_ BitVec 8)))
   (x!3 (Array (_ BitVec 32) (_ BitVec 8)))
   (x!4 (_ BitVec 32))
   (x!5 (_ BitVec 32))
   (x!6 (_ BitVec 32))) (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!73 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!73 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!73 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!73 (bvmul #x00000004 x!0))))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!72 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x13 (forall ((input.ind-%var721X (_ BitVec 32)) )(let ((?x234 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var721X)))
 (let ((?x199 (bvmul input.ind-%var721X (_ bv4 32))))
 (let ((?x151 (bvadd ?x199 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x75))))
 (let (($x17 (and (bvule (_ bv0 32) input.ind-%var721X) (bvult input.ind-%var721X (_ bv100 32)))))
 (=> $x17 (= ?x54 ?x234)))))))))
 ))
 (let (($x145 (forall ((input.ind-%var720X (_ BitVec 32)) )(let (($x101 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var720X)))
 (let (($x17 (and (bvule (_ bv0 32) input.ind-%var720X) (bvult input.ind-%var720X (_ bv100 32)))))
 (= $x17 $x101))))
 ))
 (let (($x221 (and $x145 $x13)))
 (let (($x232 (= $x221 true)))
 (let ((?x237 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x28 (= (_ bv0 2) ?x237)))
 (let (($x8 (= $x28 true)))
 (let (($x136 (forall ((input.ind-%var689X (_ BitVec 32)) )(let ((?x199 (bvmul input.ind-%var689X (_ bv4 32))))
 (let ((?x151 (bvadd ?x199 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x75))))
 (let ((?x50 (input.spec-%var-m1-1.1.1 input.ind-%var689X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var689X)))
 (=> $x257 (= ?x50 ?x54)))))))))
 ))
 (let (($x88 (forall ((input.ind-%var688X (_ BitVec 32)) )(let (($x17 (and (bvule (_ bv0 32) input.ind-%var688X) (bvult input.ind-%var688X (_ bv100 32)))))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var688X)))
 (= $x257 $x17))))
 ))
 (let (($x96 (and $x88 $x136)))
 (let (($x23 (= $x96 true)))
 (let (($x84 (forall ((input.ind-%var679X (_ BitVec 32)) )(let ((?x199 (bvmul input.ind-%var679X (_ bv4 32))))
 (let ((?x85 (bvadd ?x199 input.dst.llvm-%m2)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x46))))
 (let ((?x267 (input.spec-%var-m2-1.1.1 input.ind-%var679X)))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var679X)))
 (=> $x102 (= ?x267 ?x41)))))))))
 ))
 (let (($x98 (forall ((input.ind-%var678X (_ BitVec 32)) )(let (($x17 (and (bvule (_ bv0 32) input.ind-%var678X) (bvult input.ind-%var678X (_ bv100 32)))))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var678X)))
 (= $x102 $x17))))
 ))
 (let (($x55 (and $x98 $x84)))
 (let (($x64 (= $x55 true)))
 (let (($x165 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x220 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x259 (and $x220 $x165)))
 (let (($x141 (= $x259 true)))
 (let ((?x178 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x32 (= (_ bv0 32) ?x178)))
 (let ((?x47 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x57 (= (_ bv0 32) ?x47)))
 (let ((?x11 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x196 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x11)))
 (let ((?x208 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x208)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x185 (and $x159 $x139)))
 (let (($x276 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (and $x276 $x185)))
 (let (($x6 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x256 (and $x125 $x238)))
 (let (($x135 (not $x256)))
 (let (($x274 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x249 (and $x59 $x274)))
 (let (($x79 (and (not $x249) $x135)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x255 (and $x184 $x181)))
 (let (($x225 (not $x255)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x192 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x192 $x118)))
 (let (($x161 (and (not $x35) $x225)))
 (let (($x166 (and (and (and (and (and (and $x161 $x79) $x97) $x6) $x68) $x196) $x57)))
 (let (($x193 (and $x166 $x32)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x219 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x77 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x219)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x219)))
 (let (($x182 (or false (or false (and (and true (or $x191 $x91)) (or $x77 $x127))))))
 (let (($x14 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x182)))
 (let (($x230 (and $x14 $x193)))
 (let (($x190 (= $x230 true)))
 (let ((?x195 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x112 (= (_ bv0 2) ?x195)))
 (let (($x38 (= $x112 true)))
 (let (($x245 (and $x38 $x190)))
 (let (($x206 (and $x245 $x141)))
 (let (($x204 (and $x206 $x64)))
 (let (($x209 (and $x204 $x23)))
 (let (($x58 (and $x209 $x8)))
 (let (($x138 (forall ((input.ind-%var699X (_ BitVec 32)) )(let ((?x144 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var699X)))
 (let ((?x50 (input.spec-%var-m1-1.1.1 input.ind-%var699X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var699X)))
 (=> $x257 (= ?x50 ?x144))))))
 ))
 (let (($x283 (forall ((input.ind-%var698X (_ BitVec 32)) )(let (($x71 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var698X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var698X)))
 (= $x257 $x71))))
 ))
 (let (($x207 (and $x283 $x138)))
 (let (($x194 (and $x207 $x58)))
 (let (($x269 (forall ((input.ind-%var709X (_ BitVec 32)) )(let ((?x49 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var709X)))
 (let ((?x267 (input.spec-%var-m2-1.1.1 input.ind-%var709X)))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var709X)))
 (=> $x102 (= ?x267 ?x49))))))
 ))
 (let (($x279 (forall ((input.ind-%var708X (_ BitVec 32)) )(let (($x213 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var708X)))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var708X)))
 (= $x102 $x213))))
 ))
 (let (($x271 (and $x279 $x269)))
 (let (($x104 (and $x271 $x194)))
 (let (($x43 (=> $x104 $x232)))
 (not $x43)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x13 (forall ((input.ind-%var721X (_ BitVec 32)) )(let ((?x234 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var721X)))
 (let ((?x199 (bvmul input.ind-%var721X (_ bv4 32))))
 (let ((?x151 (bvadd ?x199 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x75))))
 (let (($x17 (and (bvule (_ bv0 32) input.ind-%var721X) (bvult input.ind-%var721X (_ bv100 32)))))
 (=> $x17 (= ?x54 ?x234)))))))))
 ))
 (let (($x145 (forall ((input.ind-%var720X (_ BitVec 32)) )(let (($x101 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var720X)))
 (let (($x17 (and (bvule (_ bv0 32) input.ind-%var720X) (bvult input.ind-%var720X (_ bv100 32)))))
 (= $x17 $x101))))
 ))
 (let (($x221 (and $x145 $x13)))
 (let (($x232 (= $x221 true)))
 (let ((?x237 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x28 (= (_ bv0 2) ?x237)))
 (let (($x8 (= $x28 true)))
 (let (($x136 (forall ((input.ind-%var689X (_ BitVec 32)) )(let ((?x199 (bvmul input.ind-%var689X (_ bv4 32))))
 (let ((?x151 (bvadd ?x199 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x75))))
 (let ((?x50 (input.spec-%var-m1-1.1.1 input.ind-%var689X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var689X)))
 (=> $x257 (= ?x50 ?x54)))))))))
 ))
 (let (($x88 (forall ((input.ind-%var688X (_ BitVec 32)) )(let (($x17 (and (bvule (_ bv0 32) input.ind-%var688X) (bvult input.ind-%var688X (_ bv100 32)))))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var688X)))
 (= $x257 $x17))))
 ))
 (let (($x96 (and $x88 $x136)))
 (let (($x23 (= $x96 true)))
 (let (($x84 (forall ((input.ind-%var679X (_ BitVec 32)) )(let ((?x199 (bvmul input.ind-%var679X (_ bv4 32))))
 (let ((?x85 (bvadd ?x199 input.dst.llvm-%m2)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x46))))
 (let ((?x267 (input.spec-%var-m2-1.1.1 input.ind-%var679X)))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var679X)))
 (=> $x102 (= ?x267 ?x41)))))))))
 ))
 (let (($x98 (forall ((input.ind-%var678X (_ BitVec 32)) )(let (($x17 (and (bvule (_ bv0 32) input.ind-%var678X) (bvult input.ind-%var678X (_ bv100 32)))))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var678X)))
 (= $x102 $x17))))
 ))
 (let (($x55 (and $x98 $x84)))
 (let (($x64 (= $x55 true)))
 (let (($x165 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x220 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x259 (and $x220 $x165)))
 (let (($x141 (= $x259 true)))
 (let ((?x178 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x32 (= (_ bv0 32) ?x178)))
 (let ((?x47 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x57 (= (_ bv0 32) ?x47)))
 (let ((?x11 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x196 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x11)))
 (let ((?x208 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x208)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x185 (and $x159 $x139)))
 (let (($x276 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (and $x276 $x185)))
 (let (($x6 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x256 (and $x125 $x238)))
 (let (($x135 (not $x256)))
 (let (($x274 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x249 (and $x59 $x274)))
 (let (($x79 (and (not $x249) $x135)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x255 (and $x184 $x181)))
 (let (($x225 (not $x255)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x192 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x192 $x118)))
 (let (($x161 (and (not $x35) $x225)))
 (let (($x166 (and (and (and (and (and (and $x161 $x79) $x97) $x6) $x68) $x196) $x57)))
 (let (($x193 (and $x166 $x32)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x219 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x77 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x219)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x219)))
 (let (($x182 (or false (or false (and (and true (or $x191 $x91)) (or $x77 $x127))))))
 (let (($x14 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x182)))
 (let (($x230 (and $x14 $x193)))
 (let (($x190 (= $x230 true)))
 (let ((?x195 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x112 (= (_ bv0 2) ?x195)))
 (let (($x38 (= $x112 true)))
 (let (($x245 (and $x38 $x190)))
 (let (($x206 (and $x245 $x141)))
 (let (($x204 (and $x206 $x64)))
 (let (($x209 (and $x204 $x23)))
 (let (($x58 (and $x209 $x8)))
 (let (($x138 (forall ((input.ind-%var699X (_ BitVec 32)) )(let ((?x144 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var699X)))
 (let ((?x50 (input.spec-%var-m1-1.1.1 input.ind-%var699X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var699X)))
 (=> $x257 (= ?x50 ?x144))))))
 ))
 (let (($x283 (forall ((input.ind-%var698X (_ BitVec 32)) )(let (($x71 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var698X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var698X)))
 (= $x257 $x71))))
 ))
 (let (($x207 (and $x283 $x138)))
 (let (($x194 (and $x207 $x58)))
 (let (($x269 (forall ((input.ind-%var709X (_ BitVec 32)) )(let ((?x49 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var709X)))
 (let ((?x267 (input.spec-%var-m2-1.1.1 input.ind-%var709X)))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var709X)))
 (=> $x102 (= ?x267 ?x49))))))
 ))
 (let (($x279 (forall ((input.ind-%var708X (_ BitVec 32)) )(let (($x213 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var708X)))
 (let (($x102 (input.spec-%var-m2-1.0.1 input.ind-%var708X)))
 (= $x102 $x213))))
 ))
 (let (($x271 (and $x279 $x269)))
 (let (($x104 (and $x271 $x194)))
 (let (($x43 (=> $x104 $x232)))
 (not $x43)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.ind-%var720X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00004254)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x010c1460)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x32011250)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x32011253)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00004257)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x32011250)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00004254)
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x010c1463 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x010c1462 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x010c1461 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x010c1460 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.ind-%var721X!1 () (_ BitVec 32)
    #x0c227b20)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x022912f8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xc0a4053c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!13))
  (define-fun input.ind-%var720X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x024cf9ec)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x024cf9ef)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x022912fb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x024cf9ec)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x022912f8)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #xc0a4053f (bvmul #x00000004 x!0)))
              (k!13 (bvadd #xc0a4053e (bvmul #x00000004 x!0)))
              (k!13 (bvadd #xc0a4053d (bvmul #x00000004 x!0)))
              (k!13 (bvadd #xc0a4053c (bvmul #x00000004 x!0))))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m1-1.0.1!17 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0)
              (ite (bvule #x0c227b20 x!0) #x0c227b20 #x00000065)
              #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!17 (k!15 x!0)))
  (define-fun k!14 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0)
              (ite (bvule #x0c227b20 x!0) #x0c227b20 #x00000065)
              #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!16 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!16 (k!14 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x0c227b20) false
      (input.spec-%var-m2-1.0.1 x!0))))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!13 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x0c227b20) false
      (input.spec-%var-m1-1.0.1 x!0))))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x103 (= false true)))
 (let (($x171 (forall ((input.ind-%var797X (_ BitVec 32)) )(let ((?x141 (bvmul input.ind-%var797X (_ bv4 32))))
 (let ((?x248 (bvadd ?x141 input.dst.llvm-%m1)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x169))))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var797X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var797X)))
 (=> $x242 (= ?x52 ?x20)))))))))
 ))
 (let (($x66 (forall ((input.ind-%var796X (_ BitVec 32)) )(let (($x276 (and (bvule (_ bv0 32) input.ind-%var796X) (bvult input.ind-%var796X (_ bv100 32)))))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var796X)))
 (= $x242 $x276))))
 ))
 (let (($x48 (and $x66 $x171)))
 (let (($x164 (= $x48 true)))
 (let ((?x243 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x67 (= (_ bv0 32) ?x243)))
 (let ((?x177 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x281 (= (_ bv0 32) ?x177)))
 (let ((?x211 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x211)))
 (let ((?x222 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x124 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x222)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x80 (and $x201 $x124)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x282 (and $x113 $x80)))
 (let (($x43 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x221 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x101 $x44)))
 (let (($x234 (not $x145)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x104 (and $x58 $x194)))
 (let (($x254 (and (not $x104) $x234)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x96 $x23)))
 (let (($x237 (not $x209)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x272 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x272 $x258)))
 (let (($x8 (and (not $x136) $x237)))
 (let (($x29 (and (and (and (and (and (and $x8 $x254) $x221) $x43) $x282) $x270) $x281)))
 (let (($x147 (and $x29 $x67)))
 (let (($x240 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x122 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x151 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x122)))
 (let (($x54 (or false (or false (and (and true (or $x88 $x151)) (or $x61 $x240))))))
 (let (($x134 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x266 (and $x134 $x147)))
 (let (($x227 (= $x266 true)))
 (let ((?x114 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x183 (= (_ bv0 2) ?x114)))
 (let (($x46 (= $x183 true)))
 (let (($x149 (forall ((input.ind-%var787X (_ BitVec 32)) )(let ((?x141 (bvmul input.ind-%var787X (_ bv4 32))))
 (let ((?x206 (bvadd ?x141 input.dst.llvm-%m2)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv1 32))) (select input.dst.llvm-mem ?x206))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv2 32))) ?x17))))
 (let ((?x264 (input.spec-%var-m2-1.1.1 input.ind-%var787X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var787X)))
 (=> $x176 (= ?x264 ?x85)))))))))
 ))
 (let (($x7 (forall ((input.ind-%var786X (_ BitVec 32)) )(let (($x276 (and (bvule (_ bv0 32) input.ind-%var786X) (bvult input.ind-%var786X (_ bv100 32)))))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var786X)))
 (= $x176 $x276))))
 ))
 (let (($x188 (and $x7 $x149)))
 (let (($x39 (= $x188 true)))
 (let ((?x249 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x152 (= (_ bv0 2) ?x249)))
 (let (($x125 (= $x152 true)))
 (let (($x225 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x184 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x161 (and $x184 $x225)))
 (let (($x59 (= $x161 true)))
 (let (($x238 (and $x59 $x125)))
 (let (($x180 (and $x238 $x39)))
 (let (($x253 (and $x180 $x46)))
 (let (($x252 (and $x253 $x227)))
 (let (($x210 (and $x252 $x164)))
 (let (($x14 (forall ((input.ind-%var807X (_ BitVec 32)) )(let ((?x172 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var807X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var807X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var807X)))
 (=> $x242 (= ?x52 ?x172))))))
 ))
 (let (($x191 (forall ((input.ind-%var806X (_ BitVec 32)) )(let (($x273 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var806X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var806X)))
 (= $x242 $x273))))
 ))
 (let (($x192 (and $x191 $x14)))
 (let (($x189 (and $x192 $x210)))
 (let (($x37 (forall ((input.ind-%var817X (_ BitVec 32)) )(let ((?x144 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var817X)))
 (let ((?x264 (input.spec-%var-m2-1.1.1 input.ind-%var817X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var817X)))
 (=> $x176 (= ?x264 ?x144))))))
 ))
 (let (($x269 (forall ((input.ind-%var816X (_ BitVec 32)) )(let (($x267 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var816X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var816X)))
 (= $x176 $x267))))
 ))
 (let (($x195 (and $x269 $x37)))
 (let (($x203 (and $x195 $x189)))
 (let (($x214 (=> $x203 $x103)))
 (not $x214))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x103 (= false true)))
 (let (($x171 (forall ((input.ind-%var797X (_ BitVec 32)) )(let ((?x141 (bvmul input.ind-%var797X (_ bv4 32))))
 (let ((?x248 (bvadd ?x141 input.dst.llvm-%m1)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x169))))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var797X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var797X)))
 (=> $x242 (= ?x52 ?x20)))))))))
 ))
 (let (($x66 (forall ((input.ind-%var796X (_ BitVec 32)) )(let (($x276 (and (bvule (_ bv0 32) input.ind-%var796X) (bvult input.ind-%var796X (_ bv100 32)))))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var796X)))
 (= $x242 $x276))))
 ))
 (let (($x48 (and $x66 $x171)))
 (let (($x164 (= $x48 true)))
 (let ((?x243 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x67 (= (_ bv0 32) ?x243)))
 (let ((?x177 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x281 (= (_ bv0 32) ?x177)))
 (let ((?x211 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x211)))
 (let ((?x222 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x124 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x222)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x80 (and $x201 $x124)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x282 (and $x113 $x80)))
 (let (($x43 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x221 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x101 $x44)))
 (let (($x234 (not $x145)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x104 (and $x58 $x194)))
 (let (($x254 (and (not $x104) $x234)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x96 $x23)))
 (let (($x237 (not $x209)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x272 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x272 $x258)))
 (let (($x8 (and (not $x136) $x237)))
 (let (($x29 (and (and (and (and (and (and $x8 $x254) $x221) $x43) $x282) $x270) $x281)))
 (let (($x147 (and $x29 $x67)))
 (let (($x240 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x122 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x151 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x122)))
 (let (($x54 (or false (or false (and (and true (or $x88 $x151)) (or $x61 $x240))))))
 (let (($x134 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x266 (and $x134 $x147)))
 (let (($x227 (= $x266 true)))
 (let ((?x114 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x183 (= (_ bv0 2) ?x114)))
 (let (($x46 (= $x183 true)))
 (let (($x149 (forall ((input.ind-%var787X (_ BitVec 32)) )(let ((?x141 (bvmul input.ind-%var787X (_ bv4 32))))
 (let ((?x206 (bvadd ?x141 input.dst.llvm-%m2)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv1 32))) (select input.dst.llvm-mem ?x206))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv2 32))) ?x17))))
 (let ((?x264 (input.spec-%var-m2-1.1.1 input.ind-%var787X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var787X)))
 (=> $x176 (= ?x264 ?x85)))))))))
 ))
 (let (($x7 (forall ((input.ind-%var786X (_ BitVec 32)) )(let (($x276 (and (bvule (_ bv0 32) input.ind-%var786X) (bvult input.ind-%var786X (_ bv100 32)))))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var786X)))
 (= $x176 $x276))))
 ))
 (let (($x188 (and $x7 $x149)))
 (let (($x39 (= $x188 true)))
 (let ((?x249 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x152 (= (_ bv0 2) ?x249)))
 (let (($x125 (= $x152 true)))
 (let (($x225 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x184 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x161 (and $x184 $x225)))
 (let (($x59 (= $x161 true)))
 (let (($x238 (and $x59 $x125)))
 (let (($x180 (and $x238 $x39)))
 (let (($x253 (and $x180 $x46)))
 (let (($x252 (and $x253 $x227)))
 (let (($x210 (and $x252 $x164)))
 (let (($x14 (forall ((input.ind-%var807X (_ BitVec 32)) )(let ((?x172 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var807X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var807X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var807X)))
 (=> $x242 (= ?x52 ?x172))))))
 ))
 (let (($x191 (forall ((input.ind-%var806X (_ BitVec 32)) )(let (($x273 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var806X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var806X)))
 (= $x242 $x273))))
 ))
 (let (($x192 (and $x191 $x14)))
 (let (($x189 (and $x192 $x210)))
 (let (($x37 (forall ((input.ind-%var817X (_ BitVec 32)) )(let ((?x144 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var817X)))
 (let ((?x264 (input.spec-%var-m2-1.1.1 input.ind-%var817X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var817X)))
 (=> $x176 (= ?x264 ?x144))))))
 ))
 (let (($x269 (forall ((input.ind-%var816X (_ BitVec 32)) )(let (($x267 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var816X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var816X)))
 (= $x176 $x267))))
 ))
 (let (($x195 (and $x269 $x37)))
 (let (($x203 (and $x195 $x189)))
 (let (($x214 (=> $x203 $x103)))
 (not $x214))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000154)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00020003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000157)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000154)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x72063cbc)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xdbc60810)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xdbc60813)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x72063cbf)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xdbc60810)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x72063cbc)
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x299 (= false true)))
 (let (($x293 (forall ((input.ind-%var905X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var905X (_ bv4 32))))
 (let ((?x266 (bvadd ?x54 input.dst.llvm-%m1)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x286))))
 (let ((?x63 (input.spec-%var-m1-1.1.1 input.ind-%var905X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var905X)))
 (=> $x255 (= ?x63 ?x290)))))))))
 ))
 (let (($x34 (forall ((input.ind-%var904X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var904X) (bvult input.ind-%var904X (_ bv100 32)))))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var904X)))
 (= $x255 $x85))))
 ))
 (let (($x294 (and $x34 $x293)))
 (let (($x295 (= $x294 true)))
 (let ((?x62 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x69 (= (_ bv0 32) ?x62)))
 (let ((?x93 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x236 (= (_ bv0 32) ?x93)))
 (let ((?x244 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x244)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x280 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x150)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x168 (and $x107 $x280)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x10 $x168)))
 (let (($x138 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x31 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x170 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x102 (and $x170 $x71)))
 (let (($x228 (not $x102)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (and $x197 $x271)))
 (let (($x92 (and (not $x91) $x228)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x89 $x246)))
 (let (($x82 (not $x86)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x135 $x87)))
 (let (($x158 (and (not $x137) $x82)))
 (let (($x153 (and (and (and (and (and (and $x158 $x92) $x31) $x138) $x174) $x99) $x236)))
 (let (($x215 (and $x153 $x69)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x111 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x111)))
 (let (($x247 (or false (or false (and (and true (or $x218 $x90)) (or $x175 $x126))))))
 (let (($x21 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x247)))
 (let (($x19 (and $x21 $x215)))
 (let (($x109 (= $x19 true)))
 (let ((?x32 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x57 (= (_ bv0 2) ?x32)))
 (let (($x193 (= $x57 true)))
 (let (($x130 (forall ((input.ind-%var895X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var895X (_ bv4 32))))
 (let ((?x134 (bvadd ?x54 input.dst.llvm-%m2)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x208))))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var895X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var895X)))
 (=> $x176 (= ?x219 ?x97)))))))))
 ))
 (let (($x203 (forall ((input.ind-%var894X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var894X) (bvult input.ind-%var894X (_ bv100 32)))))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var894X)))
 (= $x176 $x85))))
 ))
 (let (($x220 (and $x203 $x130)))
 (let (($x190 (= $x220 true)))
 (let (($x169 (forall ((input.ind-%var885X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var885X (_ bv4 32))))
 (let ((?x266 (bvadd ?x54 input.dst.llvm-%m1)))
 (let ((?x66 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x266))))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x266 (_ bv2 32))) ?x66)))
 (let ((?x72 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x266 (_ bv3 32))) ?x30)))
 (let ((?x63 (input.spec-%var-m1-1.1.1 input.ind-%var885X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var885X)))
 (=> $x255 (= ?x63 ?x72))))))))))
 ))
 (let (($x232 (forall ((input.ind-%var884X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var884X) (bvult input.ind-%var884X (_ bv100 32)))))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var884X)))
 (= $x255 $x85))))
 ))
 (let (($x117 (and $x232 $x169)))
 (let (($x20 (= $x117 true)))
 (let (($x156 (forall ((input.ind-%var875X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var875X (_ bv4 32))))
 (let ((?x134 (bvadd ?x54 input.dst.llvm-%m2)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x134))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x134 (_ bv2 32))) ?x28)))
 (let ((?x58 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x134 (_ bv3 32))) ?x209)))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var875X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var875X)))
 (=> $x176 (= ?x219 ?x58))))))))))
 ))
 (let (($x106 (forall ((input.ind-%var874X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var874X) (bvult input.ind-%var874X (_ bv100 32)))))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var874X)))
 (= $x176 $x85))))
 ))
 (let (($x101 (and $x106 $x156)))
 (let (($x44 (= $x101 true)))
 (let (($x212 (and $x44 $x20)))
 (let (($x245 (and $x212 $x190)))
 (let (($x235 (and $x245 $x193)))
 (let (($x229 (and $x235 $x109)))
 (let (($x296 (and $x229 $x295)))
 (let (($x154 (forall ((input.ind-%var915X (_ BitVec 32)) )(let ((?x159 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var915X)))
 (let ((?x63 (input.spec-%var-m1-1.1.1 input.ind-%var915X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var915X)))
 (=> $x255 (= ?x63 ?x159))))))
 ))
 (let (($x125 (forall ((input.ind-%var914X (_ BitVec 32)) )(let (($x59 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var914X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var914X)))
 (= $x255 $x59))))
 ))
 (let (($x76 (and $x125 $x154)))
 (let (($x297 (and $x76 $x296)))
 (let (($x35 (forall ((input.ind-%var925X (_ BitVec 32)) )(let ((?x172 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var925X)))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var925X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var925X)))
 (=> $x176 (= ?x219 ?x172))))))
 ))
 (let (($x37 (forall ((input.ind-%var924X (_ BitVec 32)) )(let (($x264 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var924X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var924X)))
 (= $x176 $x264))))
 ))
 (let (($x187 (and $x37 $x35)))
 (let (($x298 (and $x187 $x297)))
 (let (($x300 (=> $x298 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x299 (= false true)))
 (let (($x293 (forall ((input.ind-%var905X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var905X (_ bv4 32))))
 (let ((?x266 (bvadd ?x54 input.dst.llvm-%m1)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x286))))
 (let ((?x63 (input.spec-%var-m1-1.1.1 input.ind-%var905X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var905X)))
 (=> $x255 (= ?x63 ?x290)))))))))
 ))
 (let (($x34 (forall ((input.ind-%var904X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var904X) (bvult input.ind-%var904X (_ bv100 32)))))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var904X)))
 (= $x255 $x85))))
 ))
 (let (($x294 (and $x34 $x293)))
 (let (($x295 (= $x294 true)))
 (let ((?x62 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x69 (= (_ bv0 32) ?x62)))
 (let ((?x93 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x236 (= (_ bv0 32) ?x93)))
 (let ((?x244 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x244)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x280 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x150)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x168 (and $x107 $x280)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x10 $x168)))
 (let (($x138 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x31 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x170 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x102 (and $x170 $x71)))
 (let (($x228 (not $x102)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (and $x197 $x271)))
 (let (($x92 (and (not $x91) $x228)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x89 $x246)))
 (let (($x82 (not $x86)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x135 $x87)))
 (let (($x158 (and (not $x137) $x82)))
 (let (($x153 (and (and (and (and (and (and $x158 $x92) $x31) $x138) $x174) $x99) $x236)))
 (let (($x215 (and $x153 $x69)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x111 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x111)))
 (let (($x247 (or false (or false (and (and true (or $x218 $x90)) (or $x175 $x126))))))
 (let (($x21 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x247)))
 (let (($x19 (and $x21 $x215)))
 (let (($x109 (= $x19 true)))
 (let ((?x32 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x57 (= (_ bv0 2) ?x32)))
 (let (($x193 (= $x57 true)))
 (let (($x130 (forall ((input.ind-%var895X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var895X (_ bv4 32))))
 (let ((?x134 (bvadd ?x54 input.dst.llvm-%m2)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x208))))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var895X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var895X)))
 (=> $x176 (= ?x219 ?x97)))))))))
 ))
 (let (($x203 (forall ((input.ind-%var894X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var894X) (bvult input.ind-%var894X (_ bv100 32)))))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var894X)))
 (= $x176 $x85))))
 ))
 (let (($x220 (and $x203 $x130)))
 (let (($x190 (= $x220 true)))
 (let (($x169 (forall ((input.ind-%var885X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var885X (_ bv4 32))))
 (let ((?x266 (bvadd ?x54 input.dst.llvm-%m1)))
 (let ((?x66 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x266))))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x266 (_ bv2 32))) ?x66)))
 (let ((?x72 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x266 (_ bv3 32))) ?x30)))
 (let ((?x63 (input.spec-%var-m1-1.1.1 input.ind-%var885X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var885X)))
 (=> $x255 (= ?x63 ?x72))))))))))
 ))
 (let (($x232 (forall ((input.ind-%var884X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var884X) (bvult input.ind-%var884X (_ bv100 32)))))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var884X)))
 (= $x255 $x85))))
 ))
 (let (($x117 (and $x232 $x169)))
 (let (($x20 (= $x117 true)))
 (let (($x156 (forall ((input.ind-%var875X (_ BitVec 32)) )(let ((?x54 (bvmul input.ind-%var875X (_ bv4 32))))
 (let ((?x134 (bvadd ?x54 input.dst.llvm-%m2)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x134))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x134 (_ bv2 32))) ?x28)))
 (let ((?x58 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x134 (_ bv3 32))) ?x209)))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var875X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var875X)))
 (=> $x176 (= ?x219 ?x58))))))))))
 ))
 (let (($x106 (forall ((input.ind-%var874X (_ BitVec 32)) )(let (($x85 (and (bvule (_ bv0 32) input.ind-%var874X) (bvult input.ind-%var874X (_ bv100 32)))))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var874X)))
 (= $x176 $x85))))
 ))
 (let (($x101 (and $x106 $x156)))
 (let (($x44 (= $x101 true)))
 (let (($x212 (and $x44 $x20)))
 (let (($x245 (and $x212 $x190)))
 (let (($x235 (and $x245 $x193)))
 (let (($x229 (and $x235 $x109)))
 (let (($x296 (and $x229 $x295)))
 (let (($x154 (forall ((input.ind-%var915X (_ BitVec 32)) )(let ((?x159 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var915X)))
 (let ((?x63 (input.spec-%var-m1-1.1.1 input.ind-%var915X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var915X)))
 (=> $x255 (= ?x63 ?x159))))))
 ))
 (let (($x125 (forall ((input.ind-%var914X (_ BitVec 32)) )(let (($x59 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var914X)))
 (let (($x255 (input.spec-%var-m1-1.0.1 input.ind-%var914X)))
 (= $x255 $x59))))
 ))
 (let (($x76 (and $x125 $x154)))
 (let (($x297 (and $x76 $x296)))
 (let (($x35 (forall ((input.ind-%var925X (_ BitVec 32)) )(let ((?x172 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var925X)))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var925X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var925X)))
 (=> $x176 (= ?x219 ?x172))))))
 ))
 (let (($x37 (forall ((input.ind-%var924X (_ BitVec 32)) )(let (($x264 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var924X)))
 (let (($x176 (input.spec-%var-m2-1.0.1 input.ind-%var924X)))
 (= $x176 $x264))))
 ))
 (let (($x187 (and $x37 $x35)))
 (let (($x298 (and $x187 $x297)))
 (let (($x300 (=> $x298 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x45492ce8)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xddfadfea)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x917d192c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x917d192f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x45492ceb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x917d192c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x45492ce8)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #xddfadfed (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #xddfadfec (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #xddfadfeb (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #xddfadfea (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #xddfadfed (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #xddfadfec (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #xddfadfeb (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #xddfadfea (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000006)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000020)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000023)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000020)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000009 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000008 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000006 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #x00000009 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000008 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000006 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x307 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x312 (=> $x307 true)))
 (let (($x313 (= $x312 true)))
 (let (($x308 (= $x307 true)))
 (let (($x157 (forall ((input.ind-%var997X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var997X (_ bv4 32))))
 (let ((?x150 (bvadd ?x178 input.dst.llvm-%m1)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x205))))
 (let ((?x96 (input.spec-%var-m1-1.1.1 input.ind-%var997X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var997X)))
 (=> $x51 (= ?x96 ?x182)))))))))
 ))
 (let (($x16 (forall ((input.ind-%var996X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var996X) (bvult input.ind-%var996X (_ bv100 32)))))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var996X)))
 (= $x51 $x277))))
 ))
 (let (($x302 (and $x16 $x157)))
 (let (($x303 (= $x302 true)))
 (let ((?x283 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x233 (= (_ bv0 32) ?x283)))
 (let ((?x56 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x81 (= (_ bv0 32) ?x56)))
 (let ((?x127 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x49 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x127)))
 (let ((?x41 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x279 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x41)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x116 (and $x164 $x279)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x48 $x116)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x243 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x13 (and $x243 $x234)))
 (let (($x221 (not $x13)))
 (let (($x211 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x177 (and $x80 $x211)))
 (let (($x103 (and (not $x177) $x221)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x281 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x281 $x29)))
 (let (($x263 (not $x270)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x240 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x124 (and $x240 $x40)))
 (let (($x198 (and (not $x124) $x263)))
 (let (($x140 (and (and (and (and (and (and $x198 $x103) $x147) $x42) $x36) $x49) $x81)))
 (let (($x214 (and $x140 $x233)))
 (let (($x188 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x204 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x204)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x204)))
 (let (($x254 (or false (or false (and (and true (or $x60 $x120)) (or $x43 $x188))))))
 (let (($x201 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x254)))
 (let (($x77 (and $x201 $x214)))
 (let (($x45 (= $x77 true)))
 (let ((?x98 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x95 (= (_ bv0 2) ?x98)))
 (let (($x253 (= $x95 true)))
 (let (($x181 (forall ((input.ind-%var987X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var987X (_ bv4 32))))
 (let ((?x32 (bvadd ?x178 input.dst.llvm-%m2)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x144))))
 (let ((?x152 (input.spec-%var-m2-1.1.1 input.ind-%var987X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var987X)))
 (=> $x11 (= ?x152 ?x184)))))))))
 ))
 (let (($x288 (forall ((input.ind-%var986X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var986X) (bvult input.ind-%var986X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var986X)))
 (= $x11 $x277))))
 ))
 (let (($x249 (and $x288 $x181)))
 (let (($x149 (= $x249 true)))
 (let (($x215 (forall ((input.ind-%var977X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var977X (_ bv4 32))))
 (let ((?x150 (bvadd ?x178 input.dst.llvm-%m1)))
 (let ((?x239 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x150))))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x150 (_ bv2 32))) ?x239)))
 (let ((?x153 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x150 (_ bv3 32))) ?x25)))
 (let ((?x96 (input.spec-%var-m1-1.1.1 input.ind-%var977X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var977X)))
 (=> $x51 (= ?x96 ?x153))))))))))
 ))
 (let (($x197 (forall ((input.ind-%var976X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var976X) (bvult input.ind-%var976X (_ bv100 32)))))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var976X)))
 (= $x51 $x277))))
 ))
 (let (($x19 (and $x197 $x215)))
 (let (($x109 (= $x19 true)))
 (let (($x247 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x123 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x21 (and $x123 $x247)))
 (let (($x135 (= $x21 true)))
 (let (($x163 (forall ((input.ind-%var967X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var967X (_ bv4 32))))
 (let ((?x32 (bvadd ?x178 input.dst.llvm-%m2)))
 (let ((?x241 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x32))))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x32 (_ bv2 32))) ?x241)))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x32 (_ bv3 32))) ?x139)))
 (let ((?x152 (input.spec-%var-m2-1.1.1 input.ind-%var967X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var967X)))
 (=> $x11 (= ?x152 ?x259))))))))))
 ))
 (let (($x5 (forall ((input.ind-%var966X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var966X) (bvult input.ind-%var966X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var966X)))
 (= $x11 $x277))))
 ))
 (let (($x65 (and $x5 $x163)))
 (let (($x175 (= $x65 true)))
 (let (($x87 (and $x175 $x135)))
 (let (($x229 (and $x87 $x109)))
 (let (($x39 (and $x229 $x149)))
 (let (($x55 (and $x39 $x253)))
 (let (($x110 (and $x55 $x45)))
 (let (($x304 (and $x110 $x303)))
 (let (($x309 (and $x304 $x308)))
 (let (($x194 (forall ((input.ind-%var1007X (_ BitVec 32)) )(let ((?x258 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1007X)))
 (let ((?x96 (input.spec-%var-m1-1.1.1 input.ind-%var1007X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var1007X)))
 (=> $x51 (= ?x96 ?x258))))))
 ))
 (let (($x61 (forall ((input.ind-%var1006X (_ BitVec 32)) )(let (($x46 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1006X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var1006X)))
 (= $x51 $x46))))
 ))
 (let (($x104 (and $x61 $x194)))
 (let (($x310 (and $x104 $x309)))
 (let (($x250 (forall ((input.ind-%var1017X (_ BitVec 32)) )(let ((?x159 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1017X)))
 (let ((?x152 (input.spec-%var-m2-1.1.1 input.ind-%var1017X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var1017X)))
 (=> $x11 (= ?x152 ?x159))))))
 ))
 (let (($x35 (forall ((input.ind-%var1016X (_ BitVec 32)) )(let (($x219 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1016X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var1016X)))
 (= $x11 $x219))))
 ))
 (let (($x166 (and $x35 $x250)))
 (let (($x311 (and $x166 $x310)))
 (let (($x314 (=> $x311 $x313)))
 (not $x314))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x307 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x312 (=> $x307 true)))
 (let (($x313 (= $x312 true)))
 (let (($x308 (= $x307 true)))
 (let (($x157 (forall ((input.ind-%var997X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var997X (_ bv4 32))))
 (let ((?x150 (bvadd ?x178 input.dst.llvm-%m1)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x205))))
 (let ((?x96 (input.spec-%var-m1-1.1.1 input.ind-%var997X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var997X)))
 (=> $x51 (= ?x96 ?x182)))))))))
 ))
 (let (($x16 (forall ((input.ind-%var996X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var996X) (bvult input.ind-%var996X (_ bv100 32)))))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var996X)))
 (= $x51 $x277))))
 ))
 (let (($x302 (and $x16 $x157)))
 (let (($x303 (= $x302 true)))
 (let ((?x283 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x233 (= (_ bv0 32) ?x283)))
 (let ((?x56 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x81 (= (_ bv0 32) ?x56)))
 (let ((?x127 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x49 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x127)))
 (let ((?x41 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x279 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x41)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x116 (and $x164 $x279)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x48 $x116)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x243 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x13 (and $x243 $x234)))
 (let (($x221 (not $x13)))
 (let (($x211 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x177 (and $x80 $x211)))
 (let (($x103 (and (not $x177) $x221)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x281 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x281 $x29)))
 (let (($x263 (not $x270)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x240 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x124 (and $x240 $x40)))
 (let (($x198 (and (not $x124) $x263)))
 (let (($x140 (and (and (and (and (and (and $x198 $x103) $x147) $x42) $x36) $x49) $x81)))
 (let (($x214 (and $x140 $x233)))
 (let (($x188 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x204 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x204)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x204)))
 (let (($x254 (or false (or false (and (and true (or $x60 $x120)) (or $x43 $x188))))))
 (let (($x201 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x254)))
 (let (($x77 (and $x201 $x214)))
 (let (($x45 (= $x77 true)))
 (let ((?x98 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x95 (= (_ bv0 2) ?x98)))
 (let (($x253 (= $x95 true)))
 (let (($x181 (forall ((input.ind-%var987X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var987X (_ bv4 32))))
 (let ((?x32 (bvadd ?x178 input.dst.llvm-%m2)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x144))))
 (let ((?x152 (input.spec-%var-m2-1.1.1 input.ind-%var987X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var987X)))
 (=> $x11 (= ?x152 ?x184)))))))))
 ))
 (let (($x288 (forall ((input.ind-%var986X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var986X) (bvult input.ind-%var986X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var986X)))
 (= $x11 $x277))))
 ))
 (let (($x249 (and $x288 $x181)))
 (let (($x149 (= $x249 true)))
 (let (($x215 (forall ((input.ind-%var977X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var977X (_ bv4 32))))
 (let ((?x150 (bvadd ?x178 input.dst.llvm-%m1)))
 (let ((?x239 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x150))))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x150 (_ bv2 32))) ?x239)))
 (let ((?x153 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x150 (_ bv3 32))) ?x25)))
 (let ((?x96 (input.spec-%var-m1-1.1.1 input.ind-%var977X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var977X)))
 (=> $x51 (= ?x96 ?x153))))))))))
 ))
 (let (($x197 (forall ((input.ind-%var976X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var976X) (bvult input.ind-%var976X (_ bv100 32)))))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var976X)))
 (= $x51 $x277))))
 ))
 (let (($x19 (and $x197 $x215)))
 (let (($x109 (= $x19 true)))
 (let (($x247 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x123 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x21 (and $x123 $x247)))
 (let (($x135 (= $x21 true)))
 (let (($x163 (forall ((input.ind-%var967X (_ BitVec 32)) )(let ((?x178 (bvmul input.ind-%var967X (_ bv4 32))))
 (let ((?x32 (bvadd ?x178 input.dst.llvm-%m2)))
 (let ((?x241 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x32))))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x32 (_ bv2 32))) ?x241)))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x32 (_ bv3 32))) ?x139)))
 (let ((?x152 (input.spec-%var-m2-1.1.1 input.ind-%var967X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var967X)))
 (=> $x11 (= ?x152 ?x259))))))))))
 ))
 (let (($x5 (forall ((input.ind-%var966X (_ BitVec 32)) )(let (($x277 (and (bvule (_ bv0 32) input.ind-%var966X) (bvult input.ind-%var966X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var966X)))
 (= $x11 $x277))))
 ))
 (let (($x65 (and $x5 $x163)))
 (let (($x175 (= $x65 true)))
 (let (($x87 (and $x175 $x135)))
 (let (($x229 (and $x87 $x109)))
 (let (($x39 (and $x229 $x149)))
 (let (($x55 (and $x39 $x253)))
 (let (($x110 (and $x55 $x45)))
 (let (($x304 (and $x110 $x303)))
 (let (($x309 (and $x304 $x308)))
 (let (($x194 (forall ((input.ind-%var1007X (_ BitVec 32)) )(let ((?x258 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1007X)))
 (let ((?x96 (input.spec-%var-m1-1.1.1 input.ind-%var1007X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var1007X)))
 (=> $x51 (= ?x96 ?x258))))))
 ))
 (let (($x61 (forall ((input.ind-%var1006X (_ BitVec 32)) )(let (($x46 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1006X)))
 (let (($x51 (input.spec-%var-m1-1.0.1 input.ind-%var1006X)))
 (= $x51 $x46))))
 ))
 (let (($x104 (and $x61 $x194)))
 (let (($x310 (and $x104 $x309)))
 (let (($x250 (forall ((input.ind-%var1017X (_ BitVec 32)) )(let ((?x159 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1017X)))
 (let ((?x152 (input.spec-%var-m2-1.1.1 input.ind-%var1017X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var1017X)))
 (=> $x11 (= ?x152 ?x159))))))
 ))
 (let (($x35 (forall ((input.ind-%var1016X (_ BitVec 32)) )(let (($x219 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1016X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var1016X)))
 (= $x11 $x219))))
 ))
 (let (($x166 (and $x35 $x250)))
 (let (($x311 (and $x166 $x310)))
 (let (($x314 (=> $x311 $x313)))
 (not $x314))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x192 (= false true)))
 (let (($x28 (forall ((input.ind-%var1057X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1057X (_ bv4 32))))
 (let ((?x42 (bvadd ?x238 input.dst.llvm-%m1)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x78))))
 (let ((?x165 (input.spec-%var-m1-1.1.1 input.ind-%var1057X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1057X)))
 (=> $x252 (= ?x165 ?x272)))))))))
 ))
 (let (($x291 (forall ((input.ind-%var1056X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1056X) (bvult input.ind-%var1056X (_ bv100 32)))))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1056X)))
 (= $x252 $x135))))
 ))
 (let (($x59 (and $x291 $x28)))
 (let (($x176 (= $x59 true)))
 (let ((?x287 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x285 (= (_ bv0 32) ?x287)))
 (let ((?x292 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x34 (= (_ bv0 32) ?x292)))
 (let ((?x91 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x86 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x86)))
 (let (($x202 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x10 (and $x202 $x82)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x290 (and $x119 $x10)))
 (let (($x22 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x257 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x138 (and $x71 $x257)))
 (let (($x262 (not $x138)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x170 (and $x89 $x246)))
 (let (($x228 (and (not $x170) $x262)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x190 $x271)))
 (let (($x245 (not $x66)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x85 $x84)))
 (let (($x137 (and (not $x251) $x245)))
 (let (($x301 (and (and (and (and (and (and $x137 $x228) $x102) $x22) $x290) $x107) $x34)))
 (let (($x297 (and $x301 $x285)))
 (let (($x185 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x222 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x275 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x212 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x222)))
 (let (($x220 (or false (or false (and (and true (or $x117 $x212)) (or $x275 $x185))))))
 (let (($x266 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x220)))
 (let (($x298 (and $x266 $x297)))
 (let (($x296 (= $x298 true)))
 (let ((?x237 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x151 (= (_ bv0 2) ?x237)))
 (let (($x17 (= $x151 true)))
 (let (($x23 (forall ((input.ind-%var1047X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1047X (_ bv4 32))))
 (let ((?x184 (bvadd ?x238 input.dst.llvm-%m2)))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x314))))
 (let ((?x134 (input.spec-%var-m2-1.1.1 input.ind-%var1047X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1047X)))
 (=> $x183 (= ?x134 ?x264)))))))))
 ))
 (let (($x52 (forall ((input.ind-%var1046X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1046X) (bvult input.ind-%var1046X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1046X)))
 (= $x183 $x135))))
 ))
 (let (($x54 (and $x52 $x23)))
 (let (($x136 (= $x54 true)))
 (let (($x81 (forall ((input.ind-%var1037X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1037X (_ bv4 32))))
 (let ((?x42 (bvadd ?x238 input.dst.llvm-%m1)))
 (let ((?x41 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x42))))
 (let ((?x36 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv2 32))) ?x41)))
 (let ((?x49 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv3 32))) ?x36)))
 (let ((?x165 (input.spec-%var-m1-1.1.1 input.ind-%var1037X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1037X)))
 (=> $x252 (= ?x165 ?x49))))))))))
 ))
 (let (($x29 (forall ((input.ind-%var1036X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1036X) (bvult input.ind-%var1036X (_ bv100 32)))))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1036X)))
 (= $x252 $x135))))
 ))
 (let (($x140 (and $x29 $x81)))
 (let (($x283 (= $x140 true)))
 (let (($x188 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x12 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x120 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x105 (and $x120 $x12)))
 (let (($x179 (and $x105 $x188)))
 (let (($x113 (= $x179 true)))
 (let (($x122 (forall ((input.ind-%var1027X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1027X (_ bv4 32))))
 (let ((?x184 (bvadd ?x238 input.dst.llvm-%m2)))
 (let ((?x249 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x184))))
 (let ((?x199 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x184 (_ bv2 32))) ?x249)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x184 (_ bv3 32))) ?x199)))
 (let ((?x134 (input.spec-%var-m2-1.1.1 input.ind-%var1027X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1027X)))
 (=> $x183 (= ?x134 ?x253))))))))))
 ))
 (let (($x158 (forall ((input.ind-%var1026X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1026X) (bvult input.ind-%var1026X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1026X)))
 (= $x183 $x135))))
 ))
 (let (($x115 (and $x158 $x122)))
 (let (($x88 (= $x115 true)))
 (let (($x145 (and $x88 $x113)))
 (let (($x233 (and $x145 $x283)))
 (let (($x172 (and $x233 $x136)))
 (let (($x180 (and $x172 $x17)))
 (let (($x299 (and $x180 $x296)))
 (let (($x24 (and $x299 $x176)))
 (let (($x90 (forall ((input.ind-%var1067X (_ BitVec 32)) )(let ((?x193 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1067X)))
 (let ((?x165 (input.spec-%var-m1-1.1.1 input.ind-%var1067X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1067X)))
 (=> $x252 (= ?x165 ?x193))))))
 ))
 (let (($x160 (forall ((input.ind-%var1066X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1066X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1066X)))
 (= $x252 $x169))))
 ))
 (let (($x18 (and $x160 $x90)))
 (let (($x63 (and $x18 $x24)))
 (let (($x248 (forall ((input.ind-%var1077X (_ BitVec 32)) )(let ((?x258 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1077X)))
 (let ((?x134 (input.spec-%var-m2-1.1.1 input.ind-%var1077X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1077X)))
 (=> $x183 (= ?x134 ?x258))))))
 ))
 (let (($x250 (forall ((input.ind-%var1076X (_ BitVec 32)) )(let (($x159 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1076X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1076X)))
 (= $x183 $x159))))
 ))
 (let (($x232 (and $x250 $x248)))
 (let (($x37 (and $x232 $x63)))
 (let (($x206 (=> $x37 $x192)))
 (not $x206))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x192 (= false true)))
 (let (($x28 (forall ((input.ind-%var1057X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1057X (_ bv4 32))))
 (let ((?x42 (bvadd ?x238 input.dst.llvm-%m1)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x78))))
 (let ((?x165 (input.spec-%var-m1-1.1.1 input.ind-%var1057X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1057X)))
 (=> $x252 (= ?x165 ?x272)))))))))
 ))
 (let (($x291 (forall ((input.ind-%var1056X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1056X) (bvult input.ind-%var1056X (_ bv100 32)))))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1056X)))
 (= $x252 $x135))))
 ))
 (let (($x59 (and $x291 $x28)))
 (let (($x176 (= $x59 true)))
 (let ((?x287 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x285 (= (_ bv0 32) ?x287)))
 (let ((?x292 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x34 (= (_ bv0 32) ?x292)))
 (let ((?x91 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x86 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x86)))
 (let (($x202 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x10 (and $x202 $x82)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x290 (and $x119 $x10)))
 (let (($x22 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x257 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x138 (and $x71 $x257)))
 (let (($x262 (not $x138)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x170 (and $x89 $x246)))
 (let (($x228 (and (not $x170) $x262)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x190 $x271)))
 (let (($x245 (not $x66)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x85 $x84)))
 (let (($x137 (and (not $x251) $x245)))
 (let (($x301 (and (and (and (and (and (and $x137 $x228) $x102) $x22) $x290) $x107) $x34)))
 (let (($x297 (and $x301 $x285)))
 (let (($x185 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x222 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x275 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x212 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x222)))
 (let (($x220 (or false (or false (and (and true (or $x117 $x212)) (or $x275 $x185))))))
 (let (($x266 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x220)))
 (let (($x298 (and $x266 $x297)))
 (let (($x296 (= $x298 true)))
 (let ((?x237 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x151 (= (_ bv0 2) ?x237)))
 (let (($x17 (= $x151 true)))
 (let (($x23 (forall ((input.ind-%var1047X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1047X (_ bv4 32))))
 (let ((?x184 (bvadd ?x238 input.dst.llvm-%m2)))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x314))))
 (let ((?x134 (input.spec-%var-m2-1.1.1 input.ind-%var1047X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1047X)))
 (=> $x183 (= ?x134 ?x264)))))))))
 ))
 (let (($x52 (forall ((input.ind-%var1046X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1046X) (bvult input.ind-%var1046X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1046X)))
 (= $x183 $x135))))
 ))
 (let (($x54 (and $x52 $x23)))
 (let (($x136 (= $x54 true)))
 (let (($x81 (forall ((input.ind-%var1037X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1037X (_ bv4 32))))
 (let ((?x42 (bvadd ?x238 input.dst.llvm-%m1)))
 (let ((?x41 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x42))))
 (let ((?x36 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv2 32))) ?x41)))
 (let ((?x49 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv3 32))) ?x36)))
 (let ((?x165 (input.spec-%var-m1-1.1.1 input.ind-%var1037X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1037X)))
 (=> $x252 (= ?x165 ?x49))))))))))
 ))
 (let (($x29 (forall ((input.ind-%var1036X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1036X) (bvult input.ind-%var1036X (_ bv100 32)))))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1036X)))
 (= $x252 $x135))))
 ))
 (let (($x140 (and $x29 $x81)))
 (let (($x283 (= $x140 true)))
 (let (($x188 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x12 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x120 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x105 (and $x120 $x12)))
 (let (($x179 (and $x105 $x188)))
 (let (($x113 (= $x179 true)))
 (let (($x122 (forall ((input.ind-%var1027X (_ BitVec 32)) )(let ((?x238 (bvmul input.ind-%var1027X (_ bv4 32))))
 (let ((?x184 (bvadd ?x238 input.dst.llvm-%m2)))
 (let ((?x249 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x184))))
 (let ((?x199 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x184 (_ bv2 32))) ?x249)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x184 (_ bv3 32))) ?x199)))
 (let ((?x134 (input.spec-%var-m2-1.1.1 input.ind-%var1027X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1027X)))
 (=> $x183 (= ?x134 ?x253))))))))))
 ))
 (let (($x158 (forall ((input.ind-%var1026X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1026X) (bvult input.ind-%var1026X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1026X)))
 (= $x183 $x135))))
 ))
 (let (($x115 (and $x158 $x122)))
 (let (($x88 (= $x115 true)))
 (let (($x145 (and $x88 $x113)))
 (let (($x233 (and $x145 $x283)))
 (let (($x172 (and $x233 $x136)))
 (let (($x180 (and $x172 $x17)))
 (let (($x299 (and $x180 $x296)))
 (let (($x24 (and $x299 $x176)))
 (let (($x90 (forall ((input.ind-%var1067X (_ BitVec 32)) )(let ((?x193 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1067X)))
 (let ((?x165 (input.spec-%var-m1-1.1.1 input.ind-%var1067X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1067X)))
 (=> $x252 (= ?x165 ?x193))))))
 ))
 (let (($x160 (forall ((input.ind-%var1066X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1066X)))
 (let (($x252 (input.spec-%var-m1-1.0.1 input.ind-%var1066X)))
 (= $x252 $x169))))
 ))
 (let (($x18 (and $x160 $x90)))
 (let (($x63 (and $x18 $x24)))
 (let (($x248 (forall ((input.ind-%var1077X (_ BitVec 32)) )(let ((?x258 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1077X)))
 (let ((?x134 (input.spec-%var-m2-1.1.1 input.ind-%var1077X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1077X)))
 (=> $x183 (= ?x134 ?x258))))))
 ))
 (let (($x250 (forall ((input.ind-%var1076X (_ BitVec 32)) )(let (($x159 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1076X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1076X)))
 (= $x183 $x159))))
 ))
 (let (($x232 (and $x250 $x248)))
 (let (($x37 (and $x232 $x63)))
 (let (($x206 (=> $x37 $x192)))
 (not $x206))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000600)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000603)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000600)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xa51ab5b8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7c61b8f0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7c61b8f3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xa51ab5bb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7c61b8f0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xa51ab5b8)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x194 (= $x51 true)))
 (let (($x219 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x166 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x195 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x218 (and $x195 $x166)))
 (let (($x118 (and $x218 $x219)))
 (let (($x96 (= $x118 true)))
 (let (($x223 (forall ((input.ind-%var1149X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1149X (_ bv4 32))))
 (let ((?x245 (bvadd ?x315 input.dst.llvm-%m1)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x70))))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var1149X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1149X)))
 (=> $x87 (= ?x149 ?x143)))))))))
 ))
 (let (($x157 (forall ((input.ind-%var1148X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1148X) (bvult input.ind-%var1148X (_ bv100 32)))))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1148X)))
 (= $x87 $x43))))
 ))
 (let (($x191 (and $x157 $x223)))
 (let (($x286 (= $x191 true)))
 (let ((?x147 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x201 (= (_ bv0 32) ?x147)))
 (let ((?x234 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x103 (= (_ bv0 32) ?x234)))
 (let ((?x243 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x243)))
 (let ((?x132 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x132)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x221 (and $x162 $x13)))
 (let (($x211 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x211 $x221)))
 (let (($x80 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x274 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x270 (and $x121 $x274)))
 (let (($x150 (not $x270)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x123 (and $x7 $x65)))
 (let (($x198 (and (not $x123) $x150)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x229 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x229 $x62)))
 (let (($x25 (not $x69)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x167 $x178)))
 (let (($x288 (and (not $x109) $x25)))
 (let (($x224 (and (and (and (and (and (and $x288 $x198) $x240) $x80) $x67) $x177) $x103)))
 (let (($x205 (and $x224 $x201)))
 (let (($x163 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x38 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x72 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x38)))
 (let (($x239 (or false (or false (and (and true (or $x129 $x72)) (or $x93 $x163))))))
 (let (($x9 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x239)))
 (let (($x214 (and $x9 $x205)))
 (let (($x45 (= $x214 true)))
 (let ((?x244 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x64 (= (_ bv0 2) ?x244)))
 (let (($x74 (= $x64 true)))
 (let (($x63 (forall ((input.ind-%var1139X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1139X (_ bv4 32))))
 (let ((?x313 (bvadd ?x315 input.dst.llvm-%m2)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x272))))
 (let ((?x32 (input.spec-%var-m2-1.1.1 input.ind-%var1139X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1139X)))
 (=> $x183 (= ?x32 ?x59)))))))))
 ))
 (let (($x290 (forall ((input.ind-%var1138X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1138X) (bvult input.ind-%var1138X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1138X)))
 (= $x183 $x43))))
 ))
 (let (($x37 (and $x290 $x63)))
 (let (($x192 (= $x37 true)))
 (let (($x102 (forall ((input.ind-%var1129X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1129X (_ bv4 32))))
 (let ((?x245 (bvadd ?x315 input.dst.llvm-%m1)))
 (let ((?x170 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x245))))
 (let ((?x257 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x245 (_ bv2 32))) ?x170)))
 (let ((?x228 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x245 (_ bv3 32))) ?x257)))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var1129X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1129X)))
 (=> $x87 (= ?x149 ?x228))))))))))
 ))
 (let (($x212 (forall ((input.ind-%var1128X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1128X) (bvult input.ind-%var1128X (_ bv100 32)))))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1128X)))
 (= $x87 $x43))))
 ))
 (let (($x295 (and $x212 $x102)))
 (let (($x33 (= $x295 true)))
 (let (($x151 (forall ((input.ind-%var1119X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1119X (_ bv4 32))))
 (let ((?x313 (bvadd ?x315 input.dst.llvm-%m2)))
 (let ((?x264 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x313))))
 (let ((?x23 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv2 32))) ?x264)))
 (let ((?x172 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv3 32))) ?x23)))
 (let ((?x32 (input.spec-%var-m2-1.1.1 input.ind-%var1119X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1119X)))
 (=> $x183 (= ?x32 ?x172))))))))))
 ))
 (let (($x188 (forall ((input.ind-%var1118X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1118X) (bvult input.ind-%var1118X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1118X)))
 (= $x183 $x43))))
 ))
 (let (($x17 (and $x188 $x151)))
 (let (($x180 (= $x17 true)))
 (let (($x22 (and $x180 $x33)))
 (let (($x206 (and $x22 $x192)))
 (let (($x61 (and $x206 $x74)))
 (let (($x110 (and $x61 $x45)))
 (let (($x225 (and $x110 $x286)))
 (let (($x35 (and $x225 $x96)))
 (let (($x55 (forall ((input.ind-%var1159X (_ BitVec 32)) )(let ((?x276 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1159X)))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var1159X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1159X)))
 (=> $x87 (= ?x149 ?x276))))))
 ))
 (let (($x293 (forall ((input.ind-%var1158X (_ BitVec 32)) )(let (($x168 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1158X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1158X)))
 (= $x87 $x168))))
 ))
 (let (($x217 (and $x293 $x55)))
 (let (($x76 (and $x217 $x35)))
 (let (($x21 (forall ((input.ind-%var1169X (_ BitVec 32)) )(let ((?x193 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1169X)))
 (let ((?x32 (input.spec-%var-m2-1.1.1 input.ind-%var1169X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1169X)))
 (=> $x183 (= ?x32 ?x193))))))
 ))
 (let (($x248 (forall ((input.ind-%var1168X (_ BitVec 32)) )(let (($x134 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1168X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1168X)))
 (= $x183 $x134))))
 ))
 (let (($x126 (and $x248 $x21)))
 (let (($x58 (and $x126 $x76)))
 (let (($x128 (=> $x58 $x194)))
 (not $x128)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x194 (= $x51 true)))
 (let (($x219 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x166 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x195 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x218 (and $x195 $x166)))
 (let (($x118 (and $x218 $x219)))
 (let (($x96 (= $x118 true)))
 (let (($x223 (forall ((input.ind-%var1149X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1149X (_ bv4 32))))
 (let ((?x245 (bvadd ?x315 input.dst.llvm-%m1)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x70))))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var1149X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1149X)))
 (=> $x87 (= ?x149 ?x143)))))))))
 ))
 (let (($x157 (forall ((input.ind-%var1148X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1148X) (bvult input.ind-%var1148X (_ bv100 32)))))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1148X)))
 (= $x87 $x43))))
 ))
 (let (($x191 (and $x157 $x223)))
 (let (($x286 (= $x191 true)))
 (let ((?x147 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x201 (= (_ bv0 32) ?x147)))
 (let ((?x234 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x103 (= (_ bv0 32) ?x234)))
 (let ((?x243 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x243)))
 (let ((?x132 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x132)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x221 (and $x162 $x13)))
 (let (($x211 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x211 $x221)))
 (let (($x80 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x274 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x270 (and $x121 $x274)))
 (let (($x150 (not $x270)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x123 (and $x7 $x65)))
 (let (($x198 (and (not $x123) $x150)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x229 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x229 $x62)))
 (let (($x25 (not $x69)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x167 $x178)))
 (let (($x288 (and (not $x109) $x25)))
 (let (($x224 (and (and (and (and (and (and $x288 $x198) $x240) $x80) $x67) $x177) $x103)))
 (let (($x205 (and $x224 $x201)))
 (let (($x163 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x38 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x72 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x38)))
 (let (($x239 (or false (or false (and (and true (or $x129 $x72)) (or $x93 $x163))))))
 (let (($x9 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x239)))
 (let (($x214 (and $x9 $x205)))
 (let (($x45 (= $x214 true)))
 (let ((?x244 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x64 (= (_ bv0 2) ?x244)))
 (let (($x74 (= $x64 true)))
 (let (($x63 (forall ((input.ind-%var1139X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1139X (_ bv4 32))))
 (let ((?x313 (bvadd ?x315 input.dst.llvm-%m2)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x272))))
 (let ((?x32 (input.spec-%var-m2-1.1.1 input.ind-%var1139X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1139X)))
 (=> $x183 (= ?x32 ?x59)))))))))
 ))
 (let (($x290 (forall ((input.ind-%var1138X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1138X) (bvult input.ind-%var1138X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1138X)))
 (= $x183 $x43))))
 ))
 (let (($x37 (and $x290 $x63)))
 (let (($x192 (= $x37 true)))
 (let (($x102 (forall ((input.ind-%var1129X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1129X (_ bv4 32))))
 (let ((?x245 (bvadd ?x315 input.dst.llvm-%m1)))
 (let ((?x170 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x245))))
 (let ((?x257 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x245 (_ bv2 32))) ?x170)))
 (let ((?x228 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x245 (_ bv3 32))) ?x257)))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var1129X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1129X)))
 (=> $x87 (= ?x149 ?x228))))))))))
 ))
 (let (($x212 (forall ((input.ind-%var1128X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1128X) (bvult input.ind-%var1128X (_ bv100 32)))))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1128X)))
 (= $x87 $x43))))
 ))
 (let (($x295 (and $x212 $x102)))
 (let (($x33 (= $x295 true)))
 (let (($x151 (forall ((input.ind-%var1119X (_ BitVec 32)) )(let ((?x315 (bvmul input.ind-%var1119X (_ bv4 32))))
 (let ((?x313 (bvadd ?x315 input.dst.llvm-%m2)))
 (let ((?x264 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x313))))
 (let ((?x23 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv2 32))) ?x264)))
 (let ((?x172 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv3 32))) ?x23)))
 (let ((?x32 (input.spec-%var-m2-1.1.1 input.ind-%var1119X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1119X)))
 (=> $x183 (= ?x32 ?x172))))))))))
 ))
 (let (($x188 (forall ((input.ind-%var1118X (_ BitVec 32)) )(let (($x43 (and (bvule (_ bv0 32) input.ind-%var1118X) (bvult input.ind-%var1118X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1118X)))
 (= $x183 $x43))))
 ))
 (let (($x17 (and $x188 $x151)))
 (let (($x180 (= $x17 true)))
 (let (($x22 (and $x180 $x33)))
 (let (($x206 (and $x22 $x192)))
 (let (($x61 (and $x206 $x74)))
 (let (($x110 (and $x61 $x45)))
 (let (($x225 (and $x110 $x286)))
 (let (($x35 (and $x225 $x96)))
 (let (($x55 (forall ((input.ind-%var1159X (_ BitVec 32)) )(let ((?x276 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1159X)))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var1159X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1159X)))
 (=> $x87 (= ?x149 ?x276))))))
 ))
 (let (($x293 (forall ((input.ind-%var1158X (_ BitVec 32)) )(let (($x168 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1158X)))
 (let (($x87 (input.spec-%var-m1-1.0.1 input.ind-%var1158X)))
 (= $x87 $x168))))
 ))
 (let (($x217 (and $x293 $x55)))
 (let (($x76 (and $x217 $x35)))
 (let (($x21 (forall ((input.ind-%var1169X (_ BitVec 32)) )(let ((?x193 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1169X)))
 (let ((?x32 (input.spec-%var-m2-1.1.1 input.ind-%var1169X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1169X)))
 (=> $x183 (= ?x32 ?x193))))))
 ))
 (let (($x248 (forall ((input.ind-%var1168X (_ BitVec 32)) )(let (($x134 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1168X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1168X)))
 (= $x183 $x134))))
 ))
 (let (($x126 (and $x248 $x21)))
 (let (($x58 (and $x126 $x76)))
 (let (($x128 (=> $x58 $x194)))
 (not $x128)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!17))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!18))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x40000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m2-1.0.1!21 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun k!19 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!21 (k!19 x!0)))
  (define-fun k!20 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!17 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!18 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!18 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m1-1.0.1!22 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!22 (k!20 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!17 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!18 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!18 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x6270906c)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!18))
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x9e181c40)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!17))
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x9e181c43)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x6270906f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x9e181c40)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x6270906c)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!22 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!20 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!22 (k!20 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!17 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!18 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!18 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!21 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!19 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!21 (k!19 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!17 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!18 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!18 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x252 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x90 (bvneg ?x252)))
 (let (($x6 (= ?x90 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x200 (= $x6 true)))
 (let (($x169 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x161 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x14 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x232 (and $x14 $x161)))
 (let (($x159 (and $x232 $x169)))
 (let (($x15 (= $x159 true)))
 (let (($x100 (forall ((input.ind-%var1241X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1241X (_ bv4 32))))
 (let ((?x254 (bvadd ?x255 input.dst.llvm-%m1)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x254 (_ bv1 32))) (select input.dst.llvm-mem ?x254))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x254 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x254 (_ bv2 32))) ?x289))))
 (let ((?x125 (input.spec-%var-m1-1.1.1 input.ind-%var1241X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1241X)))
 (=> $x75 (= ?x125 ?x207)))))))))
 ))
 (let (($x296 (forall ((input.ind-%var1240X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1240X) (bvult input.ind-%var1240X (_ bv100 32)))))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1240X)))
 (= $x75 $x71))))
 ))
 (let (($x268 (and $x296 $x100)))
 (let (($x242 (= $x268 true)))
 (let ((?x84 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x190 (= (_ bv0 32) ?x84)))
 (let ((?x203 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x220 (= (_ bv0 32) ?x203)))
 (let ((?x226 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x226)))
 (let ((?x251 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x251)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x266 (and $x185 $x50)))
 (let (($x275 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x275 $x266)))
 (let (($x156 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x227 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x120 $x230)))
 (let (($x47 (not $x269)))
 (let (($x52 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (and $x81 $x52)))
 (let (($x231 (and (not $x115) $x47)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x189 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x171 (and $x189 $x56)))
 (let (($x41 (not $x171)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x158 $x39)))
 (let (($x36 (and (not $x233) $x41)))
 (let (($x130 (and (and (and (and (and (and $x36 $x231) $x227) $x156) $x85) $x97) $x220)))
 (let (($x66 (and $x130 $x190)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x247 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x98)))
 (let (($x127 (or false (or false (and (and true (or $x19 $x247)) (or $x179 $x145))))))
 (let (($x283 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x127)))
 (let (($x107 (and $x283 $x66)))
 (let (($x216 (= $x107 true)))
 (let ((?x42 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x29 (= (_ bv0 2) ?x42)))
 (let (($x5 (= $x29 true)))
 (let (($x58 (forall ((input.ind-%var1231X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1231X (_ bv4 32))))
 (let ((?x244 (bvadd ?x255 input.dst.llvm-%m2)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem ?x244))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv2 32))) ?x218))))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1231X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1231X)))
 (=> $x183 (= ?x184 ?x96)))))))))
 ))
 (let (($x45 (forall ((input.ind-%var1230X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1230X) (bvult input.ind-%var1230X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1230X)))
 (= $x183 $x71))))
 ))
 (let (($x51 (and $x45 $x58)))
 (let (($x194 (= $x51 true)))
 (let (($x243 (forall ((input.ind-%var1221X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1221X (_ bv4 32))))
 (let ((?x254 (bvadd ?x255 input.dst.llvm-%m1)))
 (let ((?x80 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x254 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x254))))
 (let ((?x162 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x254 (_ bv2 32))) ?x80)))
 (let ((?x221 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x254 (_ bv3 32))) ?x162)))
 (let ((?x125 (input.spec-%var-m1-1.1.1 input.ind-%var1221X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1221X)))
 (=> $x75 (= ?x125 ?x221))))))))))
 ))
 (let (($x167 (forall ((input.ind-%var1220X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1220X) (bvult input.ind-%var1220X (_ bv100 32)))))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1220X)))
 (= $x75 $x71))))
 ))
 (let (($x177 (and $x167 $x243)))
 (let (($x263 (= $x177 true)))
 (let (($x277 (forall ((input.ind-%var1211X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1211X (_ bv4 32))))
 (let ((?x244 (bvadd ?x255 input.dst.llvm-%m2)))
 (let ((?x235 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x244))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x244 (_ bv2 32))) ?x235)))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x244 (_ bv3 32))) ?x209)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1211X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1211X)))
 (=> $x183 (= ?x184 ?x111))))))))))
 ))
 (let (($x246 (forall ((input.ind-%var1210X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1210X) (bvult input.ind-%var1210X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1210X)))
 (= $x183 $x71))))
 ))
 (let (($x20 (and $x246 $x277)))
 (let (($x93 (= $x20 true)))
 (let (($x234 (and $x93 $x263)))
 (let (($x128 (and $x234 $x194)))
 (let (($x99 (and $x128 $x5)))
 (let (($x202 (and $x99 $x216)))
 (let (($x304 (and $x202 $x242)))
 (let (($x165 (and $x304 $x15)))
 (let (($x141 (forall ((input.ind-%var1251X (_ BitVec 32)) )(let ((?x314 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1251X)))
 (let ((?x125 (input.spec-%var-m1-1.1.1 input.ind-%var1251X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1251X)))
 (=> $x75 (= ?x125 ?x314))))))
 ))
 (let (($x140 (forall ((input.ind-%var1250X (_ BitVec 32)) )(let (($x210 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1250X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1250X)))
 (= $x75 $x210))))
 ))
 (let (($x237 (and $x140 $x141)))
 (let (($x250 (and $x237 $x165)))
 (let (($x105 (forall ((input.ind-%var1261X (_ BitVec 32)) )(let ((?x276 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1261X)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1261X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1261X)))
 (=> $x183 (= ?x184 ?x276))))))
 ))
 (let (($x21 (forall ((input.ind-%var1260X (_ BitVec 32)) )(let (($x32 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1260X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1260X)))
 (= $x183 $x32))))
 ))
 (let (($x60 (and $x21 $x105)))
 (let (($x104 (and $x60 $x250)))
 (let (($x316 (=> $x104 $x200)))
 (not $x316)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x252 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x90 (bvneg ?x252)))
 (let (($x6 (= ?x90 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x200 (= $x6 true)))
 (let (($x169 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x161 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x14 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x232 (and $x14 $x161)))
 (let (($x159 (and $x232 $x169)))
 (let (($x15 (= $x159 true)))
 (let (($x100 (forall ((input.ind-%var1241X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1241X (_ bv4 32))))
 (let ((?x254 (bvadd ?x255 input.dst.llvm-%m1)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x254 (_ bv1 32))) (select input.dst.llvm-mem ?x254))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x254 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x254 (_ bv2 32))) ?x289))))
 (let ((?x125 (input.spec-%var-m1-1.1.1 input.ind-%var1241X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1241X)))
 (=> $x75 (= ?x125 ?x207)))))))))
 ))
 (let (($x296 (forall ((input.ind-%var1240X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1240X) (bvult input.ind-%var1240X (_ bv100 32)))))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1240X)))
 (= $x75 $x71))))
 ))
 (let (($x268 (and $x296 $x100)))
 (let (($x242 (= $x268 true)))
 (let ((?x84 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x190 (= (_ bv0 32) ?x84)))
 (let ((?x203 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x220 (= (_ bv0 32) ?x203)))
 (let ((?x226 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x226)))
 (let ((?x251 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x251)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x266 (and $x185 $x50)))
 (let (($x275 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x275 $x266)))
 (let (($x156 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x227 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x120 $x230)))
 (let (($x47 (not $x269)))
 (let (($x52 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (and $x81 $x52)))
 (let (($x231 (and (not $x115) $x47)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x189 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x171 (and $x189 $x56)))
 (let (($x41 (not $x171)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x158 $x39)))
 (let (($x36 (and (not $x233) $x41)))
 (let (($x130 (and (and (and (and (and (and $x36 $x231) $x227) $x156) $x85) $x97) $x220)))
 (let (($x66 (and $x130 $x190)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x247 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x98)))
 (let (($x127 (or false (or false (and (and true (or $x19 $x247)) (or $x179 $x145))))))
 (let (($x283 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x127)))
 (let (($x107 (and $x283 $x66)))
 (let (($x216 (= $x107 true)))
 (let ((?x42 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x29 (= (_ bv0 2) ?x42)))
 (let (($x5 (= $x29 true)))
 (let (($x58 (forall ((input.ind-%var1231X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1231X (_ bv4 32))))
 (let ((?x244 (bvadd ?x255 input.dst.llvm-%m2)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem ?x244))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv2 32))) ?x218))))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1231X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1231X)))
 (=> $x183 (= ?x184 ?x96)))))))))
 ))
 (let (($x45 (forall ((input.ind-%var1230X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1230X) (bvult input.ind-%var1230X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1230X)))
 (= $x183 $x71))))
 ))
 (let (($x51 (and $x45 $x58)))
 (let (($x194 (= $x51 true)))
 (let (($x243 (forall ((input.ind-%var1221X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1221X (_ bv4 32))))
 (let ((?x254 (bvadd ?x255 input.dst.llvm-%m1)))
 (let ((?x80 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x254 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x254))))
 (let ((?x162 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x254 (_ bv2 32))) ?x80)))
 (let ((?x221 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x254 (_ bv3 32))) ?x162)))
 (let ((?x125 (input.spec-%var-m1-1.1.1 input.ind-%var1221X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1221X)))
 (=> $x75 (= ?x125 ?x221))))))))))
 ))
 (let (($x167 (forall ((input.ind-%var1220X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1220X) (bvult input.ind-%var1220X (_ bv100 32)))))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1220X)))
 (= $x75 $x71))))
 ))
 (let (($x177 (and $x167 $x243)))
 (let (($x263 (= $x177 true)))
 (let (($x277 (forall ((input.ind-%var1211X (_ BitVec 32)) )(let ((?x255 (bvmul input.ind-%var1211X (_ bv4 32))))
 (let ((?x244 (bvadd ?x255 input.dst.llvm-%m2)))
 (let ((?x235 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x244))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x244 (_ bv2 32))) ?x235)))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x244 (_ bv3 32))) ?x209)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1211X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1211X)))
 (=> $x183 (= ?x184 ?x111))))))))))
 ))
 (let (($x246 (forall ((input.ind-%var1210X (_ BitVec 32)) )(let (($x71 (and (bvule (_ bv0 32) input.ind-%var1210X) (bvult input.ind-%var1210X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1210X)))
 (= $x183 $x71))))
 ))
 (let (($x20 (and $x246 $x277)))
 (let (($x93 (= $x20 true)))
 (let (($x234 (and $x93 $x263)))
 (let (($x128 (and $x234 $x194)))
 (let (($x99 (and $x128 $x5)))
 (let (($x202 (and $x99 $x216)))
 (let (($x304 (and $x202 $x242)))
 (let (($x165 (and $x304 $x15)))
 (let (($x141 (forall ((input.ind-%var1251X (_ BitVec 32)) )(let ((?x314 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1251X)))
 (let ((?x125 (input.spec-%var-m1-1.1.1 input.ind-%var1251X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1251X)))
 (=> $x75 (= ?x125 ?x314))))))
 ))
 (let (($x140 (forall ((input.ind-%var1250X (_ BitVec 32)) )(let (($x210 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1250X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1250X)))
 (= $x75 $x210))))
 ))
 (let (($x237 (and $x140 $x141)))
 (let (($x250 (and $x237 $x165)))
 (let (($x105 (forall ((input.ind-%var1261X (_ BitVec 32)) )(let ((?x276 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1261X)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1261X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1261X)))
 (=> $x183 (= ?x184 ?x276))))))
 ))
 (let (($x21 (forall ((input.ind-%var1260X (_ BitVec 32)) )(let (($x32 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1260X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1260X)))
 (= $x183 $x32))))
 ))
 (let (($x60 (and $x21 $x105)))
 (let (($x104 (and $x60 $x250)))
 (let (($x316 (=> $x104 $x200)))
 (not $x316)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x44 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x18 (bvneg ?x44)))
 (let (($x253 (= ?x18 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x87 (= $x253 true)))
 (let (($x126 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x308 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x196 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x285 (and $x196 $x308)))
 (let (($x136 (and $x285 $x126)))
 (let (($x264 (= $x136 true)))
 (let (($x82 (forall ((input.ind-%var1301X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1301X (_ bv4 32))))
 (let ((?x208 (bvadd ?x154 input.dst.llvm-%m1)))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x208 (_ bv1 32))) (select input.dst.llvm-mem ?x208))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x208 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x208 (_ bv2 32))) ?x297))))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1301X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1301X)))
 (=> $x89 (= ?x152 ?x260)))))))))
 ))
 (let (($x286 (forall ((input.ind-%var1300X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1300X) (bvult input.ind-%var1300X (_ bv100 32)))))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1300X)))
 (= $x89 $x211))))
 ))
 (let (($x79 (and $x286 $x82)))
 (let (($x10 (= $x79 true)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x25 (= (_ bv0 32) ?x7)))
 (let ((?x144 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x288 (= (_ bv0 32) ?x144)))
 (let ((?x270 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x270)))
 (let ((?x146 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x229 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x146)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (and $x278 $x229)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x274 (and $x197 $x69)))
 (let (($x215 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x170 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x17 (and $x59 $x37)))
 (let (($x245 (not $x17)))
 (let (($x290 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (and $x187 $x290)))
 (let (($x192 (and (not $x186) $x245)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x63 (and $x22 $x24)))
 (let (($x272 (not $x63)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x295 (and $x160 $x11)))
 (let (($x28 (and (not $x295) $x272)))
 (let (($x239 (and (and (and (and (and (and $x28 $x192) $x170) $x215) $x274) $x123) $x288)))
 (let (($x198 (and $x239 $x25)))
 (let (($x43 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x131 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x131)))
 (let (($x199 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x131)))
 (let (($x151 (or false (or false (and (and true (or $x193 $x199)) (or $x164 $x43))))))
 (let (($x256 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x151)))
 (let (($x110 (and $x256 $x198)))
 (let (($x109 (= $x110 true)))
 (let ((?x6 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x200 (= (_ bv0 2) ?x6)))
 (let (($x316 (= $x200 true)))
 (let (($x250 (forall ((input.ind-%var1291X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1291X (_ bv4 32))))
 (let ((?x42 (bvadd ?x154 input.dst.llvm-%m2)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x232))))
 (let ((?x313 (input.spec-%var-m2-1.1.1 input.ind-%var1291X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1291X)))
 (=> $x183 (= ?x313 ?x159)))))))))
 ))
 (let (($x216 (forall ((input.ind-%var1290X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1290X) (bvult input.ind-%var1290X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1290X)))
 (= $x183 $x211))))
 ))
 (let (($x104 (and $x216 $x250)))
 (let (($x259 (= $x104 true)))
 (let (($x226 (forall ((input.ind-%var1281X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1281X (_ bv4 32))))
 (let ((?x208 (bvadd ?x154 input.dst.llvm-%m1)))
 (let ((?x156 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x208 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x208))))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x208 (_ bv2 32))) ?x156)))
 (let ((?x266 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x208 (_ bv3 32))) ?x185)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1281X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1281X)))
 (=> $x89 (= ?x152 ?x266))))))))))
 ))
 (let (($x158 (forall ((input.ind-%var1280X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1280X) (bvult input.ind-%var1280X (_ bv100 32)))))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1280X)))
 (= $x89 $x211))))
 ))
 (let (($x97 (and $x158 $x226)))
 (let (($x213 (= $x97 true)))
 (let (($x153 (forall ((input.ind-%var1271X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1271X (_ bv4 32))))
 (let ((?x42 (bvadd ?x154 input.dst.llvm-%m2)))
 (let ((?x238 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x42))))
 (let ((?x258 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv2 32))) ?x238)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv3 32))) ?x258)))
 (let ((?x313 (input.spec-%var-m2-1.1.1 input.ind-%var1271X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1271X)))
 (=> $x183 (= ?x313 ?x139))))))))))
 ))
 (let (($x40 (forall ((input.ind-%var1270X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1270X) (bvult input.ind-%var1270X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1270X)))
 (= $x183 $x211))))
 ))
 (let (($x135 (and $x40 $x153)))
 (let (($x179 (= $x135 true)))
 (let (($x203 (and $x179 $x213)))
 (let (($x252 (and $x203 $x259)))
 (let (($x317 (and $x252 $x316)))
 (let (($x124 (and $x317 $x109)))
 (let (($x73 (and $x124 $x10)))
 (let (($x168 (and $x73 $x264)))
 (let (($x72 (forall ((input.ind-%var1311X (_ BitVec 32)) )(let ((?x74 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1311X)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1311X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1311X)))
 (=> $x89 (= ?x152 ?x74))))))
 ))
 (let (($x176 (forall ((input.ind-%var1310X (_ BitVec 32)) )(let (($x102 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1310X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1310X)))
 (= $x89 $x102))))
 ))
 (let (($x148 (and $x176 $x72)))
 (let (($x241 (and $x148 $x168)))
 (let (($x31 (forall ((input.ind-%var1321X (_ BitVec 32)) )(let ((?x314 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1321X)))
 (let ((?x313 (input.spec-%var-m2-1.1.1 input.ind-%var1321X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1321X)))
 (=> $x183 (= ?x313 ?x314))))))
 ))
 (let (($x105 (forall ((input.ind-%var1320X (_ BitVec 32)) )(let (($x184 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1320X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1320X)))
 (= $x183 $x184))))
 ))
 (let (($x212 (and $x105 $x31)))
 (let (($x134 (and $x212 $x241)))
 (let (($x55 (=> $x134 $x87)))
 (not $x55)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x44 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x18 (bvneg ?x44)))
 (let (($x253 (= ?x18 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x87 (= $x253 true)))
 (let (($x126 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x308 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x196 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x285 (and $x196 $x308)))
 (let (($x136 (and $x285 $x126)))
 (let (($x264 (= $x136 true)))
 (let (($x82 (forall ((input.ind-%var1301X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1301X (_ bv4 32))))
 (let ((?x208 (bvadd ?x154 input.dst.llvm-%m1)))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x208 (_ bv1 32))) (select input.dst.llvm-mem ?x208))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x208 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x208 (_ bv2 32))) ?x297))))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1301X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1301X)))
 (=> $x89 (= ?x152 ?x260)))))))))
 ))
 (let (($x286 (forall ((input.ind-%var1300X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1300X) (bvult input.ind-%var1300X (_ bv100 32)))))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1300X)))
 (= $x89 $x211))))
 ))
 (let (($x79 (and $x286 $x82)))
 (let (($x10 (= $x79 true)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x25 (= (_ bv0 32) ?x7)))
 (let ((?x144 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x288 (= (_ bv0 32) ?x144)))
 (let ((?x270 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x270)))
 (let ((?x146 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x229 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x146)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (and $x278 $x229)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x274 (and $x197 $x69)))
 (let (($x215 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x170 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x17 (and $x59 $x37)))
 (let (($x245 (not $x17)))
 (let (($x290 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (and $x187 $x290)))
 (let (($x192 (and (not $x186) $x245)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x63 (and $x22 $x24)))
 (let (($x272 (not $x63)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x295 (and $x160 $x11)))
 (let (($x28 (and (not $x295) $x272)))
 (let (($x239 (and (and (and (and (and (and $x28 $x192) $x170) $x215) $x274) $x123) $x288)))
 (let (($x198 (and $x239 $x25)))
 (let (($x43 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x131 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x131)))
 (let (($x199 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x131)))
 (let (($x151 (or false (or false (and (and true (or $x193 $x199)) (or $x164 $x43))))))
 (let (($x256 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x151)))
 (let (($x110 (and $x256 $x198)))
 (let (($x109 (= $x110 true)))
 (let ((?x6 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x200 (= (_ bv0 2) ?x6)))
 (let (($x316 (= $x200 true)))
 (let (($x250 (forall ((input.ind-%var1291X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1291X (_ bv4 32))))
 (let ((?x42 (bvadd ?x154 input.dst.llvm-%m2)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x232))))
 (let ((?x313 (input.spec-%var-m2-1.1.1 input.ind-%var1291X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1291X)))
 (=> $x183 (= ?x313 ?x159)))))))))
 ))
 (let (($x216 (forall ((input.ind-%var1290X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1290X) (bvult input.ind-%var1290X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1290X)))
 (= $x183 $x211))))
 ))
 (let (($x104 (and $x216 $x250)))
 (let (($x259 (= $x104 true)))
 (let (($x226 (forall ((input.ind-%var1281X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1281X (_ bv4 32))))
 (let ((?x208 (bvadd ?x154 input.dst.llvm-%m1)))
 (let ((?x156 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x208 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x208))))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x208 (_ bv2 32))) ?x156)))
 (let ((?x266 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x208 (_ bv3 32))) ?x185)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1281X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1281X)))
 (=> $x89 (= ?x152 ?x266))))))))))
 ))
 (let (($x158 (forall ((input.ind-%var1280X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1280X) (bvult input.ind-%var1280X (_ bv100 32)))))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1280X)))
 (= $x89 $x211))))
 ))
 (let (($x97 (and $x158 $x226)))
 (let (($x213 (= $x97 true)))
 (let (($x153 (forall ((input.ind-%var1271X (_ BitVec 32)) )(let ((?x154 (bvmul input.ind-%var1271X (_ bv4 32))))
 (let ((?x42 (bvadd ?x154 input.dst.llvm-%m2)))
 (let ((?x238 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x42))))
 (let ((?x258 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv2 32))) ?x238)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x42 (_ bv3 32))) ?x258)))
 (let ((?x313 (input.spec-%var-m2-1.1.1 input.ind-%var1271X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1271X)))
 (=> $x183 (= ?x313 ?x139))))))))))
 ))
 (let (($x40 (forall ((input.ind-%var1270X (_ BitVec 32)) )(let (($x211 (and (bvule (_ bv0 32) input.ind-%var1270X) (bvult input.ind-%var1270X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1270X)))
 (= $x183 $x211))))
 ))
 (let (($x135 (and $x40 $x153)))
 (let (($x179 (= $x135 true)))
 (let (($x203 (and $x179 $x213)))
 (let (($x252 (and $x203 $x259)))
 (let (($x317 (and $x252 $x316)))
 (let (($x124 (and $x317 $x109)))
 (let (($x73 (and $x124 $x10)))
 (let (($x168 (and $x73 $x264)))
 (let (($x72 (forall ((input.ind-%var1311X (_ BitVec 32)) )(let ((?x74 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1311X)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1311X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1311X)))
 (=> $x89 (= ?x152 ?x74))))))
 ))
 (let (($x176 (forall ((input.ind-%var1310X (_ BitVec 32)) )(let (($x102 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1310X)))
 (let (($x89 (input.spec-%var-m1-1.0.1 input.ind-%var1310X)))
 (= $x89 $x102))))
 ))
 (let (($x148 (and $x176 $x72)))
 (let (($x241 (and $x148 $x168)))
 (let (($x31 (forall ((input.ind-%var1321X (_ BitVec 32)) )(let ((?x314 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1321X)))
 (let ((?x313 (input.spec-%var-m2-1.1.1 input.ind-%var1321X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1321X)))
 (=> $x183 (= ?x313 ?x314))))))
 ))
 (let (($x105 (forall ((input.ind-%var1320X (_ BitVec 32)) )(let (($x184 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1320X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1320X)))
 (= $x183 $x184))))
 ))
 (let (($x212 (and $x105 $x31)))
 (let (($x134 (and $x212 $x241)))
 (let (($x55 (=> $x134 $x87)))
 (not $x55)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x125 (= (_ bv0 32) input.dst.llvm-%m2)))
 (let (($x21 (= $x125 true)))
 (let ((?x60 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x129 (= (_ bv0 2) ?x60)))
 (let (($x235 (= $x129 true)))
 (let (($x94 (forall ((input.ind-%var1361X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1361X (_ bv4 32))))
 (let ((?x280 (bvadd ?x90 input.dst.llvm-%m2)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem ?x280))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv2 32))) ?x191))))
 (let ((?x244 (input.spec-%var-m2-1.1.1 input.ind-%var1361X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1361X)))
 (=> $x183 (= ?x244 ?x195)))))))))
 ))
 (let (($x77 (forall ((input.ind-%var1360X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1360X) (bvult input.ind-%var1360X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1360X)))
 (= $x183 $x275))))
 ))
 (let (($x301 (and $x77 $x94)))
 (let (($x155 (= $x301 true)))
 (let (($x190 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x30 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x202 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x16 (and $x202 $x30)))
 (let (($x114 (and $x16 $x190)))
 (let (($x309 (= $x114 true)))
 (let (($x120 (forall ((input.ind-%var1351X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1351X (_ bv4 32))))
 (let ((?x280 (bvadd ?x90 input.dst.llvm-%m2)))
 (let ((?x171 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x280))))
 (let ((?x115 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x280 (_ bv2 32))) ?x171)))
 (let ((?x81 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x280 (_ bv3 32))) ?x115)))
 (let ((?x244 (input.spec-%var-m2-1.1.1 input.ind-%var1351X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1351X)))
 (=> $x183 (= ?x244 ?x81))))))))))
 ))
 (let (($x234 (forall ((input.ind-%var1350X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1350X) (bvult input.ind-%var1350X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1350X)))
 (= $x183 $x275))))
 ))
 (let (($x47 (and $x234 $x120)))
 (let (($x145 (= $x47 true)))
 (let (($x262 (forall ((input.ind-%var1341X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1341X (_ bv4 32))))
 (let ((?x6 (bvadd ?x90 input.dst.llvm-%m1)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem ?x6))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv2 32))) ?x27))))
 (let ((?x181 (input.spec-%var-m1-1.1.1 input.ind-%var1341X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1341X)))
 (=> $x282 (= ?x181 ?x23)))))))))
 ))
 (let (($x285 (forall ((input.ind-%var1340X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1340X) (bvult input.ind-%var1340X (_ bv100 32)))))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1340X)))
 (= $x282 $x275))))
 ))
 (let (($x228 (and $x285 $x262)))
 (let (($x300 (= $x228 true)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x299 (= (_ bv0 32) ?x182)))
 (let ((?x124 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x286 (= (_ bv0 32) ?x124)))
 (let ((?x110 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x110)))
 (let ((?x239 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x239)))
 (let (($x288 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x25 (and $x288 $x7)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x144 $x25)))
 (let (($x174 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x146 (and $x197 $x278)))
 (let (($x229 (not $x146)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x206 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (and $x206 $x215)))
 (let (($x274 (and (not $x150) $x229)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x245 $x192)))
 (let (($x178 (not $x65)))
 (let (($x279 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (and $x43 $x279)))
 (let (($x121 (and (not $x17) $x178)))
 (let (($x91 (and (and (and (and (and (and $x121 $x274) $x270) $x174) $x198) $x109) $x286)))
 (let (($x119 (and $x91 $x299)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x160 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x295 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x160)))
 (let (($x138 (or false (or false (and (and true (or $x11 $x295)) (or $x272 $x28))))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x138)))
 (let (($x82 (and $x37 $x119)))
 (let (($x79 (= $x82 true)))
 (let (($x49 (forall ((input.ind-%var1331X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1331X (_ bv4 32))))
 (let ((?x6 (bvadd ?x90 input.dst.llvm-%m1)))
 (let ((?x293 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x6))))
 (let ((?x106 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x6 (_ bv2 32))) ?x293)))
 (let ((?x315 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x6 (_ bv3 32))) ?x106)))
 (let ((?x181 (input.spec-%var-m1-1.1.1 input.ind-%var1331X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1331X)))
 (=> $x282 (= ?x181 ?x315))))))))))
 ))
 (let (($x101 (forall ((input.ind-%var1330X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1330X) (bvult input.ind-%var1330X (_ bv100 32)))))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1330X)))
 (= $x282 $x275))))
 ))
 (let (($x12 (and $x101 $x49)))
 (let (($x164 (= $x12 true)))
 (let (($x10 (and $x164 $x79)))
 (let (($x71 (and $x10 $x300)))
 (let (($x108 (and $x71 $x145)))
 (let (($x242 (and $x108 $x309)))
 (let (($x86 (and $x242 $x155)))
 (let (($x210 (and $x86 $x235)))
 (let (($x247 (forall ((input.ind-%var1371X (_ BitVec 32)) )(let ((?x5 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1371X)))
 (let ((?x181 (input.spec-%var-m1-1.1.1 input.ind-%var1371X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1371X)))
 (=> $x282 (= ?x181 ?x5))))))
 ))
 (let (($x35 (forall ((input.ind-%var1370X (_ BitVec 32)) )(let (($x243 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1370X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1370X)))
 (= $x282 $x243))))
 ))
 (let (($x236 (and $x35 $x247)))
 (let (($x32 (and $x236 $x210)))
 (let (($x112 (forall ((input.ind-%var1381X (_ BitVec 32)) )(let ((?x74 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1381X)))
 (let ((?x244 (input.spec-%var-m2-1.1.1 input.ind-%var1381X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1381X)))
 (=> $x183 (= ?x244 ?x74))))))
 ))
 (let (($x31 (forall ((input.ind-%var1380X (_ BitVec 32)) )(let (($x313 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1380X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1380X)))
 (= $x183 $x313))))
 ))
 (let (($x167 (and $x31 $x112)))
 (let (($x175 (and $x167 $x32)))
 (let (($x217 (=> $x175 $x21)))
 (not $x217)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x125 (= (_ bv0 32) input.dst.llvm-%m2)))
 (let (($x21 (= $x125 true)))
 (let ((?x60 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x129 (= (_ bv0 2) ?x60)))
 (let (($x235 (= $x129 true)))
 (let (($x94 (forall ((input.ind-%var1361X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1361X (_ bv4 32))))
 (let ((?x280 (bvadd ?x90 input.dst.llvm-%m2)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem ?x280))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv2 32))) ?x191))))
 (let ((?x244 (input.spec-%var-m2-1.1.1 input.ind-%var1361X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1361X)))
 (=> $x183 (= ?x244 ?x195)))))))))
 ))
 (let (($x77 (forall ((input.ind-%var1360X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1360X) (bvult input.ind-%var1360X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1360X)))
 (= $x183 $x275))))
 ))
 (let (($x301 (and $x77 $x94)))
 (let (($x155 (= $x301 true)))
 (let (($x190 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x30 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x202 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x16 (and $x202 $x30)))
 (let (($x114 (and $x16 $x190)))
 (let (($x309 (= $x114 true)))
 (let (($x120 (forall ((input.ind-%var1351X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1351X (_ bv4 32))))
 (let ((?x280 (bvadd ?x90 input.dst.llvm-%m2)))
 (let ((?x171 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x280))))
 (let ((?x115 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x280 (_ bv2 32))) ?x171)))
 (let ((?x81 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x280 (_ bv3 32))) ?x115)))
 (let ((?x244 (input.spec-%var-m2-1.1.1 input.ind-%var1351X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1351X)))
 (=> $x183 (= ?x244 ?x81))))))))))
 ))
 (let (($x234 (forall ((input.ind-%var1350X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1350X) (bvult input.ind-%var1350X (_ bv100 32)))))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1350X)))
 (= $x183 $x275))))
 ))
 (let (($x47 (and $x234 $x120)))
 (let (($x145 (= $x47 true)))
 (let (($x262 (forall ((input.ind-%var1341X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1341X (_ bv4 32))))
 (let ((?x6 (bvadd ?x90 input.dst.llvm-%m1)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem ?x6))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv2 32))) ?x27))))
 (let ((?x181 (input.spec-%var-m1-1.1.1 input.ind-%var1341X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1341X)))
 (=> $x282 (= ?x181 ?x23)))))))))
 ))
 (let (($x285 (forall ((input.ind-%var1340X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1340X) (bvult input.ind-%var1340X (_ bv100 32)))))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1340X)))
 (= $x282 $x275))))
 ))
 (let (($x228 (and $x285 $x262)))
 (let (($x300 (= $x228 true)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x299 (= (_ bv0 32) ?x182)))
 (let ((?x124 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x286 (= (_ bv0 32) ?x124)))
 (let ((?x110 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x110)))
 (let ((?x239 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x239)))
 (let (($x288 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x25 (and $x288 $x7)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x144 $x25)))
 (let (($x174 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x146 (and $x197 $x278)))
 (let (($x229 (not $x146)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x206 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (and $x206 $x215)))
 (let (($x274 (and (not $x150) $x229)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x245 $x192)))
 (let (($x178 (not $x65)))
 (let (($x279 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (and $x43 $x279)))
 (let (($x121 (and (not $x17) $x178)))
 (let (($x91 (and (and (and (and (and (and $x121 $x274) $x270) $x174) $x198) $x109) $x286)))
 (let (($x119 (and $x91 $x299)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x160 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x295 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x160)))
 (let (($x138 (or false (or false (and (and true (or $x11 $x295)) (or $x272 $x28))))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x138)))
 (let (($x82 (and $x37 $x119)))
 (let (($x79 (= $x82 true)))
 (let (($x49 (forall ((input.ind-%var1331X (_ BitVec 32)) )(let ((?x90 (bvmul input.ind-%var1331X (_ bv4 32))))
 (let ((?x6 (bvadd ?x90 input.dst.llvm-%m1)))
 (let ((?x293 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x6))))
 (let ((?x106 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x6 (_ bv2 32))) ?x293)))
 (let ((?x315 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x6 (_ bv3 32))) ?x106)))
 (let ((?x181 (input.spec-%var-m1-1.1.1 input.ind-%var1331X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1331X)))
 (=> $x282 (= ?x181 ?x315))))))))))
 ))
 (let (($x101 (forall ((input.ind-%var1330X (_ BitVec 32)) )(let (($x275 (and (bvule (_ bv0 32) input.ind-%var1330X) (bvult input.ind-%var1330X (_ bv100 32)))))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1330X)))
 (= $x282 $x275))))
 ))
 (let (($x12 (and $x101 $x49)))
 (let (($x164 (= $x12 true)))
 (let (($x10 (and $x164 $x79)))
 (let (($x71 (and $x10 $x300)))
 (let (($x108 (and $x71 $x145)))
 (let (($x242 (and $x108 $x309)))
 (let (($x86 (and $x242 $x155)))
 (let (($x210 (and $x86 $x235)))
 (let (($x247 (forall ((input.ind-%var1371X (_ BitVec 32)) )(let ((?x5 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1371X)))
 (let ((?x181 (input.spec-%var-m1-1.1.1 input.ind-%var1371X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1371X)))
 (=> $x282 (= ?x181 ?x5))))))
 ))
 (let (($x35 (forall ((input.ind-%var1370X (_ BitVec 32)) )(let (($x243 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1370X)))
 (let (($x282 (input.spec-%var-m1-1.0.1 input.ind-%var1370X)))
 (= $x282 $x243))))
 ))
 (let (($x236 (and $x35 $x247)))
 (let (($x32 (and $x236 $x210)))
 (let (($x112 (forall ((input.ind-%var1381X (_ BitVec 32)) )(let ((?x74 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1381X)))
 (let ((?x244 (input.spec-%var-m2-1.1.1 input.ind-%var1381X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1381X)))
 (=> $x183 (= ?x244 ?x74))))))
 ))
 (let (($x31 (forall ((input.ind-%var1380X (_ BitVec 32)) )(let (($x313 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1380X)))
 (let (($x183 (input.spec-%var-m2-1.0.1 input.ind-%var1380X)))
 (= $x183 $x313))))
 ))
 (let (($x167 (and $x31 $x112)))
 (let (($x175 (and $x167 $x32)))
 (let (($x217 (=> $x175 $x21)))
 (not $x217)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000014)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000017)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000014)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000000)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!18 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000043 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000042 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000041 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000040 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #x00000043 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000042 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000041 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000040 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!17 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000100)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x6e014948)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb460de9c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb460de9f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x6e01494b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb460de9c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x6e014948)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!17 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!18 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000103 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000102 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000101 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000100 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #x00000103 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000102 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000101 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000100 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x89 ((_ extract 5 0) input.dst.llvm-%m2)))
 (let (($x72 (= (_ bv0 6) ?x89)))
 (let (($x225 (= $x72 true)))
 (let ((?x102 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x184 (= (_ bv0 2) ?x102)))
 (let (($x88 (= $x184 true)))
 (let (($x224 (forall ((input.ind-%var1453X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1453X (_ bv4 32))))
 (let ((?x264 (bvadd ?x229 input.dst.llvm-%m2)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x201))))
 (let ((?x42 (input.spec-%var-m2-1.1.1 input.ind-%var1453X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1453X)))
 (=> $x267 (= ?x42 ?x289)))))))))
 ))
 (let (($x240 (forall ((input.ind-%var1452X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1452X) (bvult input.ind-%var1452X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1452X)))
 (= $x267 $x295))))
 ))
 (let (($x29 (and $x240 $x224)))
 (let (($x212 (= $x29 true)))
 (let (($x194 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x162 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x218 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x277 (and $x218 $x162)))
 (let (($x39 (and $x277 $x194)))
 (let (($x20 (= $x39 true)))
 (let (($x298 (forall ((input.ind-%var1443X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1443X (_ bv4 32))))
 (let ((?x264 (bvadd ?x229 input.dst.llvm-%m2)))
 (let ((?x18 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x264))))
 (let ((?x149 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x264 (_ bv2 32))) ?x18)))
 (let ((?x87 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x264 (_ bv3 32))) ?x149)))
 (let ((?x42 (input.spec-%var-m2-1.1.1 input.ind-%var1443X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1443X)))
 (=> $x267 (= ?x42 ?x87))))))))))
 ))
 (let (($x232 (forall ((input.ind-%var1442X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1442X) (bvult input.ind-%var1442X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1442X)))
 (= $x267 $x295))))
 ))
 (let (($x308 (and $x232 $x298)))
 (let (($x294 (= $x308 true)))
 (let (($x211 (forall ((input.ind-%var1433X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1433X (_ bv4 32))))
 (let ((?x274 (bvadd ?x229 input.dst.llvm-%m1)))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x314))))
 (let ((?x188 (input.spec-%var-m1-1.1.1 input.ind-%var1433X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1433X)))
 (=> $x222 (= ?x188 ?x13)))))))))
 ))
 (let (($x86 (forall ((input.ind-%var1432X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1432X) (bvult input.ind-%var1432X (_ bv100 32)))))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1432X)))
 (= $x222 $x295))))
 ))
 (let (($x263 (and $x86 $x211)))
 (let (($x227 (= $x263 true)))
 (let ((?x84 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x190 (= (_ bv0 32) ?x84)))
 (let ((?x16 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x220 (= (_ bv0 32) ?x16)))
 (let ((?x233 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x233)))
 (let ((?x108 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x108)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x231 (and $x145 $x127)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x202 (and $x47 $x231)))
 (let (($x120 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x41 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x189 (and $x269 $x204)))
 (let (($x122 (not $x189)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (and $x113 $x36)))
 (let (($x115 (and (not $x230) $x122)))
 (let (($x300 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x228 $x300)))
 (let (($x177 (not $x71)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x260 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x262 (and $x260 $x124)))
 (let (($x280 (and (not $x262) $x177)))
 (let (($x70 (and (and (and (and (and (and $x280 $x115) $x41) $x120) $x202) $x30) $x220)))
 (let (($x68 (and $x70 $x190)))
 (let (($x246 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x119 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x255 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x79 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x119)))
 (let (($x23 (or false (or false (and (and true (or $x82 $x79)) (or $x255 $x246))))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x205 (and $x78 $x68)))
 (let (($x191 (= $x205 true)))
 (let (($x198 (forall ((input.ind-%var1423X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1423X (_ bv4 32))))
 (let ((?x274 (bvadd ?x229 input.dst.llvm-%m1)))
 (let ((?x34 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x274))))
 (let ((?x297 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x274 (_ bv2 32))) ?x34)))
 (let ((?x239 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x274 (_ bv3 32))) ?x297)))
 (let ((?x188 (input.spec-%var-m1-1.1.1 input.ind-%var1423X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1423X)))
 (=> $x222 (= ?x188 ?x239))))))))))
 ))
 (let (($x22 (forall ((input.ind-%var1422X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1422X) (bvult input.ind-%var1422X (_ bv100 32)))))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1422X)))
 (= $x222 $x295))))
 ))
 (let (($x303 (and $x22 $x198)))
 (let (($x110 (= $x303 true)))
 (let (($x83 (and $x110 $x191)))
 (let (($x185 (and $x83 $x227)))
 (let (($x76 (and $x185 $x294)))
 (let (($x254 (and $x76 $x20)))
 (let (($x19 (and $x254 $x212)))
 (let (($x152 (and $x19 $x88)))
 (let (($x199 (forall ((input.ind-%var1463X (_ BitVec 32)) )(let ((?x316 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1463X)))
 (let ((?x188 (input.spec-%var-m1-1.1.1 input.ind-%var1463X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1463X)))
 (=> $x222 (= ?x188 ?x316))))))
 ))
 (let (($x15 (forall ((input.ind-%var1462X (_ BitVec 32)) )(let (($x226 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1462X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1462X)))
 (= $x222 $x226))))
 ))
 (let (($x54 (and $x15 $x199)))
 (let (($x105 (and $x54 $x152)))
 (let (($x117 (forall ((input.ind-%var1473X (_ BitVec 32)) )(let ((?x5 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1473X)))
 (let ((?x42 (input.spec-%var-m2-1.1.1 input.ind-%var1473X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1473X)))
 (=> $x267 (= ?x42 ?x5))))))
 ))
 (let (($x112 (forall ((input.ind-%var1472X (_ BitVec 32)) )(let (($x244 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1472X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1472X)))
 (= $x267 $x244))))
 ))
 (let (($x158 (and $x112 $x117)))
 (let (($x237 (and $x158 $x105)))
 (let (($x75 (=> $x237 $x225)))
 (not $x75))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x89 ((_ extract 5 0) input.dst.llvm-%m2)))
 (let (($x72 (= (_ bv0 6) ?x89)))
 (let (($x225 (= $x72 true)))
 (let ((?x102 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x184 (= (_ bv0 2) ?x102)))
 (let (($x88 (= $x184 true)))
 (let (($x224 (forall ((input.ind-%var1453X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1453X (_ bv4 32))))
 (let ((?x264 (bvadd ?x229 input.dst.llvm-%m2)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x201))))
 (let ((?x42 (input.spec-%var-m2-1.1.1 input.ind-%var1453X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1453X)))
 (=> $x267 (= ?x42 ?x289)))))))))
 ))
 (let (($x240 (forall ((input.ind-%var1452X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1452X) (bvult input.ind-%var1452X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1452X)))
 (= $x267 $x295))))
 ))
 (let (($x29 (and $x240 $x224)))
 (let (($x212 (= $x29 true)))
 (let (($x194 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x162 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x218 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x277 (and $x218 $x162)))
 (let (($x39 (and $x277 $x194)))
 (let (($x20 (= $x39 true)))
 (let (($x298 (forall ((input.ind-%var1443X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1443X (_ bv4 32))))
 (let ((?x264 (bvadd ?x229 input.dst.llvm-%m2)))
 (let ((?x18 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x264))))
 (let ((?x149 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x264 (_ bv2 32))) ?x18)))
 (let ((?x87 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x264 (_ bv3 32))) ?x149)))
 (let ((?x42 (input.spec-%var-m2-1.1.1 input.ind-%var1443X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1443X)))
 (=> $x267 (= ?x42 ?x87))))))))))
 ))
 (let (($x232 (forall ((input.ind-%var1442X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1442X) (bvult input.ind-%var1442X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1442X)))
 (= $x267 $x295))))
 ))
 (let (($x308 (and $x232 $x298)))
 (let (($x294 (= $x308 true)))
 (let (($x211 (forall ((input.ind-%var1433X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1433X (_ bv4 32))))
 (let ((?x274 (bvadd ?x229 input.dst.llvm-%m1)))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x314))))
 (let ((?x188 (input.spec-%var-m1-1.1.1 input.ind-%var1433X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1433X)))
 (=> $x222 (= ?x188 ?x13)))))))))
 ))
 (let (($x86 (forall ((input.ind-%var1432X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1432X) (bvult input.ind-%var1432X (_ bv100 32)))))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1432X)))
 (= $x222 $x295))))
 ))
 (let (($x263 (and $x86 $x211)))
 (let (($x227 (= $x263 true)))
 (let ((?x84 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x190 (= (_ bv0 32) ?x84)))
 (let ((?x16 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x220 (= (_ bv0 32) ?x16)))
 (let ((?x233 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x233)))
 (let ((?x108 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x108)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x231 (and $x145 $x127)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x202 (and $x47 $x231)))
 (let (($x120 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x41 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x189 (and $x269 $x204)))
 (let (($x122 (not $x189)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (and $x113 $x36)))
 (let (($x115 (and (not $x230) $x122)))
 (let (($x300 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x228 $x300)))
 (let (($x177 (not $x71)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x260 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x262 (and $x260 $x124)))
 (let (($x280 (and (not $x262) $x177)))
 (let (($x70 (and (and (and (and (and (and $x280 $x115) $x41) $x120) $x202) $x30) $x220)))
 (let (($x68 (and $x70 $x190)))
 (let (($x246 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x119 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x255 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x79 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x119)))
 (let (($x23 (or false (or false (and (and true (or $x82 $x79)) (or $x255 $x246))))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x205 (and $x78 $x68)))
 (let (($x191 (= $x205 true)))
 (let (($x198 (forall ((input.ind-%var1423X (_ BitVec 32)) )(let ((?x229 (bvmul input.ind-%var1423X (_ bv4 32))))
 (let ((?x274 (bvadd ?x229 input.dst.llvm-%m1)))
 (let ((?x34 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x274))))
 (let ((?x297 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x274 (_ bv2 32))) ?x34)))
 (let ((?x239 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x274 (_ bv3 32))) ?x297)))
 (let ((?x188 (input.spec-%var-m1-1.1.1 input.ind-%var1423X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1423X)))
 (=> $x222 (= ?x188 ?x239))))))))))
 ))
 (let (($x22 (forall ((input.ind-%var1422X (_ BitVec 32)) )(let (($x295 (and (bvule (_ bv0 32) input.ind-%var1422X) (bvult input.ind-%var1422X (_ bv100 32)))))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1422X)))
 (= $x222 $x295))))
 ))
 (let (($x303 (and $x22 $x198)))
 (let (($x110 (= $x303 true)))
 (let (($x83 (and $x110 $x191)))
 (let (($x185 (and $x83 $x227)))
 (let (($x76 (and $x185 $x294)))
 (let (($x254 (and $x76 $x20)))
 (let (($x19 (and $x254 $x212)))
 (let (($x152 (and $x19 $x88)))
 (let (($x199 (forall ((input.ind-%var1463X (_ BitVec 32)) )(let ((?x316 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1463X)))
 (let ((?x188 (input.spec-%var-m1-1.1.1 input.ind-%var1463X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1463X)))
 (=> $x222 (= ?x188 ?x316))))))
 ))
 (let (($x15 (forall ((input.ind-%var1462X (_ BitVec 32)) )(let (($x226 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1462X)))
 (let (($x222 (input.spec-%var-m1-1.0.1 input.ind-%var1462X)))
 (= $x222 $x226))))
 ))
 (let (($x54 (and $x15 $x199)))
 (let (($x105 (and $x54 $x152)))
 (let (($x117 (forall ((input.ind-%var1473X (_ BitVec 32)) )(let ((?x5 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1473X)))
 (let ((?x42 (input.spec-%var-m2-1.1.1 input.ind-%var1473X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1473X)))
 (=> $x267 (= ?x42 ?x5))))))
 ))
 (let (($x112 (forall ((input.ind-%var1472X (_ BitVec 32)) )(let (($x244 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1472X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1472X)))
 (= $x267 $x244))))
 ))
 (let (($x158 (and $x112 $x117)))
 (let (($x237 (and $x158 $x105)))
 (let (($x75 (=> $x237 $x225)))
 (not $x75))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x8000003c)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000110)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000113)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x8000003f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000110)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x8000003c)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!18 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000006 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000005 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000004 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000006 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000005 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000004 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!17 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x636db9c8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x5133f0ac)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x5133f0af)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x636db9cb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x5133f0ac)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x636db9c8)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!17 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!18 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000006 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000005 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000004 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000006 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000005 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000004 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x31 (= false true)))
 (let (($x193 (forall ((input.ind-%var1545X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1545X (_ bv4 32))))
 (let ((?x149 (bvadd ?x122 input.dst.llvm-%m1)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x132))))
 (let ((?x123 (input.spec-%var-m1-1.1.1 input.ind-%var1545X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1545X)))
 (=> $x8 (= ?x123 ?x14)))))))))
 ))
 (let (($x292 (forall ((input.ind-%var1544X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1544X) (bvult input.ind-%var1544X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1544X)))
 (= $x8 $x79))))
 ))
 (let (($x293 (and $x292 $x193)))
 (let (($x243 (= $x293 true)))
 (let ((?x153 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x56 (= (_ bv0 32) ?x153)))
 (let ((?x116 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x95 (= (_ bv0 32) ?x116)))
 (let ((?x249 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x249)))
 (let ((?x103 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x103)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x155 (and $x176 $x301)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x85 $x155)))
 (let (($x217 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x210 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x281 (and $x210 $x32)))
 (let (($x92 (not $x281)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x195 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x94 (and $x195 $x173)))
 (let (($x271 (and (not $x94) $x92)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x160 $x278)))
 (let (($x272 (not $x64)))
 (let (($x275 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x273 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x151 (and $x273 $x275)))
 (let (($x129 (and (not $x151) $x272)))
 (let (($x259 (and (and (and (and (and (and $x129 $x271) $x21) $x217) $x40) $x60) $x95)))
 (let (($x306 (and $x259 $x56)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x137 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x137)))
 (let (($x138 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x137)))
 (let (($x206 (or false (or false (and (and true (or $x59 $x138)) (or $x121 $x170))))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x206)))
 (let (($x135 (and $x12 $x306)))
 (let (($x208 (= $x135 true)))
 (let ((?x258 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x131 (= (_ bv0 2) ?x258)))
 (let (($x133 (= $x131 true)))
 (let (($x101 (forall ((input.ind-%var1535X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1535X (_ bv4 32))))
 (let ((?x115 (bvadd ?x122 input.dst.llvm-%m2)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x225))))
 (let ((?x6 (input.spec-%var-m2-1.1.1 input.ind-%var1535X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1535X)))
 (=> $x267 (= ?x6 ?x109)))))))))
 ))
 (let (($x223 (forall ((input.ind-%var1534X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1534X) (bvult input.ind-%var1534X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1534X)))
 (= $x267 $x79))))
 ))
 (let (($x284 (and $x223 $x101)))
 (let (($x90 (= $x284 true)))
 (let (($x277 (forall ((input.ind-%var1525X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1525X (_ bv4 32))))
 (let ((?x149 (bvadd ?x122 input.dst.llvm-%m1)))
 (let ((?x298 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x149))))
 (let ((?x76 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x149 (_ bv2 32))) ?x298)))
 (let ((?x218 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x149 (_ bv3 32))) ?x76)))
 (let ((?x123 (input.spec-%var-m1-1.1.1 input.ind-%var1525X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1525X)))
 (=> $x8 (= ?x123 ?x218))))))))))
 ))
 (let (($x221 (forall ((input.ind-%var1524X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1524X) (bvult input.ind-%var1524X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1524X)))
 (= $x8 $x79))))
 ))
 (let (($x219 (and $x221 $x277)))
 (let (($x46 (= $x219 true)))
 (let (($x191 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x84 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x220 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x190 (and $x220 $x84)))
 (let (($x83 (and $x190 $x191)))
 (let (($x86 (= $x83 true)))
 (let (($x202 (forall ((input.ind-%var1515X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1515X (_ bv4 32))))
 (let ((?x115 (bvadd ?x122 input.dst.llvm-%m2)))
 (let ((?x309 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x115))))
 (let ((?x242 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x115 (_ bv2 32))) ?x309)))
 (let ((?x108 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x115 (_ bv3 32))) ?x242)))
 (let ((?x6 (input.spec-%var-m2-1.1.1 input.ind-%var1515X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1515X)))
 (=> $x267 (= ?x6 ?x108))))))))))
 ))
 (let (($x285 (forall ((input.ind-%var1514X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1514X) (bvult input.ind-%var1514X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1514X)))
 (= $x267 $x79))))
 ))
 (let (($x77 (and $x285 $x202)))
 (let (($x233 (= $x77 true)))
 (let (($x235 (and $x233 $x86)))
 (let (($x194 (and $x235 $x46)))
 (let (($x317 (and $x194 $x90)))
 (let (($x50 (and $x317 $x133)))
 (let (($x104 (and $x50 $x208)))
 (let (($x313 (and $x104 $x243)))
 (let (($x7 (forall ((input.ind-%var1555X (_ BitVec 32)) )(let ((?x163 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1555X)))
 (let ((?x123 (input.spec-%var-m1-1.1.1 input.ind-%var1555X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1555X)))
 (=> $x8 (= ?x123 ?x163))))))
 ))
 (let (($x215 (forall ((input.ind-%var1554X (_ BitVec 32)) )(let (($x186 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1554X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1554X)))
 (= $x8 $x186))))
 ))
 (let (($x25 (and $x215 $x7)))
 (let (($x180 (and $x25 $x313)))
 (let (($x256 (forall ((input.ind-%var1565X (_ BitVec 32)) )(let ((?x316 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1565X)))
 (let ((?x6 (input.spec-%var-m2-1.1.1 input.ind-%var1565X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1565X)))
 (=> $x267 (= ?x6 ?x316))))))
 ))
 (let (($x117 (forall ((input.ind-%var1564X (_ BitVec 32)) )(let (($x42 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1564X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1564X)))
 (= $x267 $x42))))
 ))
 (let (($x257 (and $x117 $x256)))
 (let (($x181 (and $x257 $x180)))
 (let (($x148 (=> $x181 $x31)))
 (not $x148))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x31 (= false true)))
 (let (($x193 (forall ((input.ind-%var1545X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1545X (_ bv4 32))))
 (let ((?x149 (bvadd ?x122 input.dst.llvm-%m1)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x132))))
 (let ((?x123 (input.spec-%var-m1-1.1.1 input.ind-%var1545X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1545X)))
 (=> $x8 (= ?x123 ?x14)))))))))
 ))
 (let (($x292 (forall ((input.ind-%var1544X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1544X) (bvult input.ind-%var1544X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1544X)))
 (= $x8 $x79))))
 ))
 (let (($x293 (and $x292 $x193)))
 (let (($x243 (= $x293 true)))
 (let ((?x153 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x56 (= (_ bv0 32) ?x153)))
 (let ((?x116 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x95 (= (_ bv0 32) ?x116)))
 (let ((?x249 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x249)))
 (let ((?x103 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x103)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x155 (and $x176 $x301)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x85 $x155)))
 (let (($x217 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x210 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x281 (and $x210 $x32)))
 (let (($x92 (not $x281)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x195 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x94 (and $x195 $x173)))
 (let (($x271 (and (not $x94) $x92)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x160 $x278)))
 (let (($x272 (not $x64)))
 (let (($x275 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x273 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x151 (and $x273 $x275)))
 (let (($x129 (and (not $x151) $x272)))
 (let (($x259 (and (and (and (and (and (and $x129 $x271) $x21) $x217) $x40) $x60) $x95)))
 (let (($x306 (and $x259 $x56)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x137 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x137)))
 (let (($x138 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x137)))
 (let (($x206 (or false (or false (and (and true (or $x59 $x138)) (or $x121 $x170))))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x206)))
 (let (($x135 (and $x12 $x306)))
 (let (($x208 (= $x135 true)))
 (let ((?x258 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x131 (= (_ bv0 2) ?x258)))
 (let (($x133 (= $x131 true)))
 (let (($x101 (forall ((input.ind-%var1535X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1535X (_ bv4 32))))
 (let ((?x115 (bvadd ?x122 input.dst.llvm-%m2)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x225))))
 (let ((?x6 (input.spec-%var-m2-1.1.1 input.ind-%var1535X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1535X)))
 (=> $x267 (= ?x6 ?x109)))))))))
 ))
 (let (($x223 (forall ((input.ind-%var1534X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1534X) (bvult input.ind-%var1534X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1534X)))
 (= $x267 $x79))))
 ))
 (let (($x284 (and $x223 $x101)))
 (let (($x90 (= $x284 true)))
 (let (($x277 (forall ((input.ind-%var1525X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1525X (_ bv4 32))))
 (let ((?x149 (bvadd ?x122 input.dst.llvm-%m1)))
 (let ((?x298 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x149))))
 (let ((?x76 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x149 (_ bv2 32))) ?x298)))
 (let ((?x218 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x149 (_ bv3 32))) ?x76)))
 (let ((?x123 (input.spec-%var-m1-1.1.1 input.ind-%var1525X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1525X)))
 (=> $x8 (= ?x123 ?x218))))))))))
 ))
 (let (($x221 (forall ((input.ind-%var1524X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1524X) (bvult input.ind-%var1524X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1524X)))
 (= $x8 $x79))))
 ))
 (let (($x219 (and $x221 $x277)))
 (let (($x46 (= $x219 true)))
 (let (($x191 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x84 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x220 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x190 (and $x220 $x84)))
 (let (($x83 (and $x190 $x191)))
 (let (($x86 (= $x83 true)))
 (let (($x202 (forall ((input.ind-%var1515X (_ BitVec 32)) )(let ((?x122 (bvmul input.ind-%var1515X (_ bv4 32))))
 (let ((?x115 (bvadd ?x122 input.dst.llvm-%m2)))
 (let ((?x309 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x115))))
 (let ((?x242 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x115 (_ bv2 32))) ?x309)))
 (let ((?x108 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x115 (_ bv3 32))) ?x242)))
 (let ((?x6 (input.spec-%var-m2-1.1.1 input.ind-%var1515X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1515X)))
 (=> $x267 (= ?x6 ?x108))))))))))
 ))
 (let (($x285 (forall ((input.ind-%var1514X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var1514X) (bvult input.ind-%var1514X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1514X)))
 (= $x267 $x79))))
 ))
 (let (($x77 (and $x285 $x202)))
 (let (($x233 (= $x77 true)))
 (let (($x235 (and $x233 $x86)))
 (let (($x194 (and $x235 $x46)))
 (let (($x317 (and $x194 $x90)))
 (let (($x50 (and $x317 $x133)))
 (let (($x104 (and $x50 $x208)))
 (let (($x313 (and $x104 $x243)))
 (let (($x7 (forall ((input.ind-%var1555X (_ BitVec 32)) )(let ((?x163 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1555X)))
 (let ((?x123 (input.spec-%var-m1-1.1.1 input.ind-%var1555X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1555X)))
 (=> $x8 (= ?x123 ?x163))))))
 ))
 (let (($x215 (forall ((input.ind-%var1554X (_ BitVec 32)) )(let (($x186 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1554X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1554X)))
 (= $x8 $x186))))
 ))
 (let (($x25 (and $x215 $x7)))
 (let (($x180 (and $x25 $x313)))
 (let (($x256 (forall ((input.ind-%var1565X (_ BitVec 32)) )(let ((?x316 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1565X)))
 (let ((?x6 (input.spec-%var-m2-1.1.1 input.ind-%var1565X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1565X)))
 (=> $x267 (= ?x6 ?x316))))))
 ))
 (let (($x117 (forall ((input.ind-%var1564X (_ BitVec 32)) )(let (($x42 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1564X)))
 (let (($x267 (input.spec-%var-m2-1.0.1 input.ind-%var1564X)))
 (= $x267 $x42))))
 ))
 (let (($x257 (and $x117 $x256)))
 (let (($x181 (and $x257 $x180)))
 (let (($x148 (=> $x181 $x31)))
 (not $x148))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xa51ab5b8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7c61b8f0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7c61b8f3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xa51ab5bb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7c61b8f0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xa51ab5b8)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000600)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000603)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000600)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x222 (= false true)))
 (let (($x244 (forall ((input.ind-%var1637X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1637X (_ bv4 32))))
 (let ((?x125 (bvadd ?x75 input.dst.llvm-%m1)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem ?x125))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv2 32))) ?x196))))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1637X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1637X)))
 (=> $x10 (= ?x52 ?x288)))))))))
 ))
 (let (($x128 (forall ((input.ind-%var1636X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1636X) (bvult input.ind-%var1636X (_ bv100 32)))))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1636X)))
 (= $x10 $x68))))
 ))
 (let (($x93 (and $x128 $x244)))
 (let (($x188 (= $x93 true)))
 (let ((?x157 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x305 (= (_ bv0 32) ?x157)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x240 (= (_ bv0 32) ?x254)))
 (let ((?x310 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x310)))
 (let ((?x168 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x142 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x168)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x211 (and $x98 $x142)))
 (let (($x314 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x314 $x211)))
 (let (($x209 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x253 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x55 $x241)))
 (let (($x232 (not $x44)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x227 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (and $x227 $x185)))
 (let (($x250 (and (not $x134) $x232)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x255 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (and $x255 $x189)))
 (let (($x57 (not $x263)))
 (let (($x276 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x261 (and $x136 $x276)))
 (let (($x154 (and (not $x261) $x57)))
 (let (($x212 (and (and (and (and (and (and $x154 $x250) $x253) $x209) $x18) $x39) $x240)))
 (let (($x224 (and $x212 $x305)))
 (let (($x300 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x260 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x260)))
 (let (($x171 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x260)))
 (let (($x182 (or false (or false (and (and true (or $x230 $x171)) (or $x124 $x300))))))
 (let (($x204 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x182)))
 (let (($x19 (and $x204 $x224)))
 (let (($x184 (= $x19 true)))
 (let ((?x11 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x28 (= (_ bv0 2) ?x11)))
 (let (($x17 (= $x28 true)))
 (let (($x270 (forall ((input.ind-%var1627X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1627X (_ bv4 32))))
 (let ((?x72 (bvadd ?x75 input.dst.llvm-%m2)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x140))))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1627X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1627X)))
 (=> $x179 (= ?x274 ?x22)))))))))
 ))
 (let (($x208 (forall ((input.ind-%var1626X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1626X) (bvult input.ind-%var1626X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1626X)))
 (= $x179 $x68))))
 ))
 (let (($x5 (and $x208 $x270)))
 (let (($x106 (= $x5 true)))
 (let (($x249 (forall ((input.ind-%var1617X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1617X (_ bv4 32))))
 (let ((?x125 (bvadd ?x75 input.dst.llvm-%m1)))
 (let ((?x217 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x125))))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x125 (_ bv2 32))) ?x217)))
 (let ((?x155 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x125 (_ bv3 32))) ?x176)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1617X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1617X)))
 (=> $x10 (= ?x52 ?x155))))))))))
 ))
 (let (($x273 (forall ((input.ind-%var1616X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1616X) (bvult input.ind-%var1616X (_ bv100 32)))))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1616X)))
 (= $x10 $x68))))
 ))
 (let (($x60 (and $x273 $x249)))
 (let (($x126 (= $x60 true)))
 (let ((?x197 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x63 (bvneg ?x197)))
 (let (($x150 (= ?x63 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x69 (= $x150 true)))
 (let (($x59 (= ?x63 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x49 (= $x59 true)))
 (let (($x131 (forall ((input.ind-%var1607X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1607X (_ bv4 32))))
 (let ((?x72 (bvadd ?x75 input.dst.llvm-%m2)))
 (let ((?x109 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x72))))
 (let ((?x101 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv2 32))) ?x109)))
 (let ((?x317 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv3 32))) ?x101)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1607X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1607X)))
 (=> $x179 (= ?x274 ?x317))))))))))
 ))
 (let (($x191 (forall ((input.ind-%var1606X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1606X) (bvult input.ind-%var1606X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1606X)))
 (= $x179 $x68))))
 ))
 (let (($x133 (and $x191 $x131)))
 (let (($x50 (= $x133 true)))
 (let (($x138 (and $x50 $x49)))
 (let (($x121 (and $x138 $x69)))
 (let (($x116 (and $x121 $x126)))
 (let (($x144 (and $x116 $x106)))
 (let (($x295 (and $x144 $x17)))
 (let (($x105 (and $x295 $x184)))
 (let (($x112 (and $x105 $x188)))
 (let (($x127 (forall ((input.ind-%var1647X (_ BitVec 32)) )(let ((?x81 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1647X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1647X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1647X)))
 (=> $x10 (= ?x52 ?x81))))))
 ))
 (let (($x36 (forall ((input.ind-%var1646X (_ BitVec 32)) )(let (($x61 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1646X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1646X)))
 (= $x10 $x61))))
 ))
 (let (($x231 (and $x36 $x127)))
 (let (($x236 (and $x231 $x112)))
 (let (($x299 (forall ((input.ind-%var1657X (_ BitVec 32)) )(let ((?x163 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1657X)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1657X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1657X)))
 (=> $x179 (= ?x274 ?x163))))))
 ))
 (let (($x256 (forall ((input.ind-%var1656X (_ BitVec 32)) )(let (($x27 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1656X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1656X)))
 (= $x179 $x27))))
 ))
 (let (($x91 (and $x256 $x299)))
 (let (($x315 (and $x91 $x236)))
 (let (($x199 (=> $x315 $x222)))
 (not $x199)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x222 (= false true)))
 (let (($x244 (forall ((input.ind-%var1637X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1637X (_ bv4 32))))
 (let ((?x125 (bvadd ?x75 input.dst.llvm-%m1)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem ?x125))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv2 32))) ?x196))))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1637X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1637X)))
 (=> $x10 (= ?x52 ?x288)))))))))
 ))
 (let (($x128 (forall ((input.ind-%var1636X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1636X) (bvult input.ind-%var1636X (_ bv100 32)))))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1636X)))
 (= $x10 $x68))))
 ))
 (let (($x93 (and $x128 $x244)))
 (let (($x188 (= $x93 true)))
 (let ((?x157 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x305 (= (_ bv0 32) ?x157)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x240 (= (_ bv0 32) ?x254)))
 (let ((?x310 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x310)))
 (let ((?x168 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x142 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x168)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x211 (and $x98 $x142)))
 (let (($x314 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x314 $x211)))
 (let (($x209 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x253 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x55 $x241)))
 (let (($x232 (not $x44)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x227 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (and $x227 $x185)))
 (let (($x250 (and (not $x134) $x232)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x255 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (and $x255 $x189)))
 (let (($x57 (not $x263)))
 (let (($x276 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x261 (and $x136 $x276)))
 (let (($x154 (and (not $x261) $x57)))
 (let (($x212 (and (and (and (and (and (and $x154 $x250) $x253) $x209) $x18) $x39) $x240)))
 (let (($x224 (and $x212 $x305)))
 (let (($x300 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x260 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x260)))
 (let (($x171 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x260)))
 (let (($x182 (or false (or false (and (and true (or $x230 $x171)) (or $x124 $x300))))))
 (let (($x204 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x182)))
 (let (($x19 (and $x204 $x224)))
 (let (($x184 (= $x19 true)))
 (let ((?x11 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x28 (= (_ bv0 2) ?x11)))
 (let (($x17 (= $x28 true)))
 (let (($x270 (forall ((input.ind-%var1627X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1627X (_ bv4 32))))
 (let ((?x72 (bvadd ?x75 input.dst.llvm-%m2)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x140))))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1627X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1627X)))
 (=> $x179 (= ?x274 ?x22)))))))))
 ))
 (let (($x208 (forall ((input.ind-%var1626X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1626X) (bvult input.ind-%var1626X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1626X)))
 (= $x179 $x68))))
 ))
 (let (($x5 (and $x208 $x270)))
 (let (($x106 (= $x5 true)))
 (let (($x249 (forall ((input.ind-%var1617X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1617X (_ bv4 32))))
 (let ((?x125 (bvadd ?x75 input.dst.llvm-%m1)))
 (let ((?x217 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x125))))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x125 (_ bv2 32))) ?x217)))
 (let ((?x155 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x125 (_ bv3 32))) ?x176)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1617X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1617X)))
 (=> $x10 (= ?x52 ?x155))))))))))
 ))
 (let (($x273 (forall ((input.ind-%var1616X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1616X) (bvult input.ind-%var1616X (_ bv100 32)))))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1616X)))
 (= $x10 $x68))))
 ))
 (let (($x60 (and $x273 $x249)))
 (let (($x126 (= $x60 true)))
 (let ((?x197 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x63 (bvneg ?x197)))
 (let (($x150 (= ?x63 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x69 (= $x150 true)))
 (let (($x59 (= ?x63 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x49 (= $x59 true)))
 (let (($x131 (forall ((input.ind-%var1607X (_ BitVec 32)) )(let ((?x75 (bvmul input.ind-%var1607X (_ bv4 32))))
 (let ((?x72 (bvadd ?x75 input.dst.llvm-%m2)))
 (let ((?x109 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x72))))
 (let ((?x101 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv2 32))) ?x109)))
 (let ((?x317 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv3 32))) ?x101)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1607X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1607X)))
 (=> $x179 (= ?x274 ?x317))))))))))
 ))
 (let (($x191 (forall ((input.ind-%var1606X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1606X) (bvult input.ind-%var1606X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1606X)))
 (= $x179 $x68))))
 ))
 (let (($x133 (and $x191 $x131)))
 (let (($x50 (= $x133 true)))
 (let (($x138 (and $x50 $x49)))
 (let (($x121 (and $x138 $x69)))
 (let (($x116 (and $x121 $x126)))
 (let (($x144 (and $x116 $x106)))
 (let (($x295 (and $x144 $x17)))
 (let (($x105 (and $x295 $x184)))
 (let (($x112 (and $x105 $x188)))
 (let (($x127 (forall ((input.ind-%var1647X (_ BitVec 32)) )(let ((?x81 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1647X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1647X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1647X)))
 (=> $x10 (= ?x52 ?x81))))))
 ))
 (let (($x36 (forall ((input.ind-%var1646X (_ BitVec 32)) )(let (($x61 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1646X)))
 (let (($x10 (input.spec-%var-m1-1.0.1 input.ind-%var1646X)))
 (= $x10 $x61))))
 ))
 (let (($x231 (and $x36 $x127)))
 (let (($x236 (and $x231 $x112)))
 (let (($x299 (forall ((input.ind-%var1657X (_ BitVec 32)) )(let ((?x163 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1657X)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1657X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1657X)))
 (=> $x179 (= ?x274 ?x163))))))
 ))
 (let (($x256 (forall ((input.ind-%var1656X (_ BitVec 32)) )(let (($x27 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1656X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1656X)))
 (= $x179 $x27))))
 ))
 (let (($x91 (and $x256 $x299)))
 (let (($x315 (and $x91 $x236)))
 (let (($x199 (=> $x315 $x222)))
 (not $x199)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000006)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000020)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000023)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000020)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000009 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000008 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000006 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #x00000009 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000008 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000006 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x45492ce8)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xddfadfea)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x917d192c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x917d192f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x45492ceb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x917d192c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x45492ce8)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #xddfadfed (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #xddfadfec (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #xddfadfeb (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #xddfadfea (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!16 (bvadd #xddfadfed (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #xddfadfec (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #xddfadfeb (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #xddfadfea (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun func.calla4bcb626de6152719ca44f8b649b9c4a.reg ((_ BitVec 8) (_ BitVec 8) (Array (_ BitVec 32) (_ BitVec 8)) (Array (_ BitVec 32) (_ BitVec 8)) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun nextpc_const.1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.alloc () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun solver-mem_1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x326 (func.calla4bcb626de6152719ca44f8b649b9c4a.reg (_ bv1 8) (_ bv0 8) solver-mem_1 input.dst.llvm-mem.alloc nextpc_const.1 (_ bv1000 32) input.dst.llvm-%m2)))
 (let ((?x338 ((_ extract 0 0) ?x326)))
 (let ((?x319 ((_ extract 0 0) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x320 (bvneg ?x319)))
 (let (($x327 (= ?x320 ?x338)))
 (let (($x328 (= $x327 true)))
 (let ((?x123 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x117 (bvneg ?x123)))
 (let (($x282 (= ?x117 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x247 (= $x282 true)))
 (let (($x239 (= ?x117 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x8 (= $x239 true)))
 (let ((?x257 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x145 (= (_ bv0 2) ?x257)))
 (let (($x309 (= $x145 true)))
 (let (($x111 (forall ((input.ind-%var1793X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1793X (_ bv4 32))))
 (let ((?x173 (bvadd ?x266 input.dst.llvm-%m2)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x265))))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1793X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1793X)))
 (=> $x164 (= ?x274 ?x130)))))))))
 ))
 (let (($x200 (forall ((input.ind-%var1792X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1792X) (bvult input.ind-%var1792X (_ bv100 32)))))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1792X)))
 (= $x164 $x138))))
 ))
 (let (($x156 (and $x200 $x111)))
 (let (($x73 (= $x156 true)))
 (let (($x56 (forall ((input.ind-%var1783X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1783X (_ bv4 32))))
 (let ((?x173 (bvadd ?x266 input.dst.llvm-%m2)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x173))))
 (let ((?x104 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv2 32))) ?x192)))
 (let ((?x62 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv3 32))) ?x104)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1783X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1783X)))
 (=> $x164 (= ?x274 ?x62))))))))))
 ))
 (let (($x79 (forall ((input.ind-%var1782X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1782X) (bvult input.ind-%var1782X (_ bv100 32)))))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1782X)))
 (= $x164 $x138))))
 ))
 (let (($x96 (and $x79 $x56)))
 (let (($x147 (= $x96 true)))
 (let (($x162 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x46 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x87 (and $x46 $x162)))
 (let (($x298 (= $x87 true)))
 (let (($x235 (forall ((input.ind-%var1773X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1773X (_ bv4 32))))
 (let ((?x139 (bvadd ?x266 input.dst.llvm-%m1)))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x297))))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var1773X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1773X)))
 (=> $x205 (= ?x118 ?x246)))))))))
 ))
 (let (($x288 (forall ((input.ind-%var1772X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1772X) (bvult input.ind-%var1772X (_ bv100 32)))))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1772X)))
 (= $x205 $x138))))
 ))
 (let (($x202 (and $x288 $x235)))
 (let (($x30 (= $x202 true)))
 (let ((?x39 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x29 (= (_ bv0 32) ?x39)))
 (let ((?x102 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x310 (= (_ bv0 32) ?x102)))
 (let ((?x211 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x211)))
 (let ((?x314 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x314)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x168 (and $x238 $x98)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x209 $x168)))
 (let (($x302 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x253 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x55 $x241)))
 (let (($x232 (not $x44)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x185 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x161 (and $x185 $x134)))
 (let (($x88 (and (not $x161) $x232)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x255 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (and $x255 $x189)))
 (let (($x57 (not $x263)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (and $x286 $x119)))
 (let (($x227 (and (not $x99) $x57)))
 (let (($x224 (and (and (and (and (and (and $x227 $x88) $x253) $x302) $x142) $x18) $x310)))
 (let (($x19 (and $x224 $x29)))
 (let (($x269 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x171 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x171)))
 (let (($x280 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x171)))
 (let (($x136 (or false (or false (and (and true (or $x177 $x280)) (or $x113 $x269))))))
 (let (($x261 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x136)))
 (let (($x184 (and $x261 $x19)))
 (let (($x105 (= $x184 true)))
 (let (($x28 (forall ((input.ind-%var1763X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1763X (_ bv4 32))))
 (let ((?x139 (bvadd ?x266 input.dst.llvm-%m1)))
 (let ((?x22 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x139))))
 (let ((?x270 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x139 (_ bv2 32))) ?x22)))
 (let ((?x144 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x139 (_ bv3 32))) ?x270)))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var1763X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1763X)))
 (=> $x205 (= ?x118 ?x144))))))))))
 ))
 (let (($x150 (forall ((input.ind-%var1762X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1762X) (bvult input.ind-%var1762X (_ bv100 32)))))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1762X)))
 (= $x205 $x138))))
 ))
 (let (($x17 (and $x150 $x28)))
 (let (($x295 (= $x17 true)))
 (let (($x128 (and $x295 $x105)))
 (let (($x16 (and $x128 $x30)))
 (let (($x67 (and $x16 $x298)))
 (let (($x243 (and $x67 $x147)))
 (let (($x203 (and $x243 $x73)))
 (let (($x186 (and $x203 $x309)))
 (let (($x7 (and $x186 $x8)))
 (let (($x268 (and $x7 $x247)))
 (let (($x74 (forall ((input.ind-%var1803X (_ BitVec 32)) )(let ((?x225 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1803X)))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var1803X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1803X)))
 (=> $x205 (= ?x118 ?x225))))))
 ))
 (let (($x219 (forall ((input.ind-%var1802X (_ BitVec 32)) )(let (($x312 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1802X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1802X)))
 (= $x205 $x312))))
 ))
 (let (($x258 (and $x219 $x74)))
 (let (($x287 (and $x258 $x268)))
 (let (($x190 (forall ((input.ind-%var1813X (_ BitVec 32)) )(let ((?x81 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1813X)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1813X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1813X)))
 (=> $x164 (= ?x274 ?x81))))))
 ))
 (let (($x163 (forall ((input.ind-%var1812X (_ BitVec 32)) )(let (($x36 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1812X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1812X)))
 (= $x164 $x36))))
 ))
 (let (($x214 (and $x163 $x190)))
 (let (($x318 (and $x214 $x287)))
 (let (($x329 (=> $x318 $x328)))
 (let (($x330 (not $x329)))
 (let (($x363 (forall ((memmask-bounded-var! (_ BitVec 32)) )(let ((?x343 (select solver-mem_1 memmask-bounded-var!)))
 (let (($x347 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x348 (bvadd memmask-bounded-var! (_ bv0 32))))
 (let (($x349 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x348)))
 (let (($x351 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x352 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x348)))
 (let (($x357 (or false (or false (and (and true (or $x352 $x351)) (or $x349 $x347))))))
 (ite (=> (bvule memmask-bounded-var! (bvsub (bvadd memmask-bounded-var! (_ bv1 32)) (_ bv1 32))) $x357) (= ?x343 (select input.dst.llvm-mem.Lentry%1%fcallEnd memmask-bounded-var!)) (= ?x343 (_ bv0 8)))))))))))
 ))
 (and (and true $x363) $x330)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun func.calla4bcb626de6152719ca44f8b649b9c4a.reg ((_ BitVec 8) (_ BitVec 8) (Array (_ BitVec 32) (_ BitVec 8)) (Array (_ BitVec 32) (_ BitVec 8)) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun nextpc_const.1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.alloc () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun solver-mem_1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x326 (func.calla4bcb626de6152719ca44f8b649b9c4a.reg (_ bv1 8) (_ bv0 8) solver-mem_1 input.dst.llvm-mem.alloc nextpc_const.1 (_ bv1000 32) input.dst.llvm-%m2)))
 (let ((?x338 ((_ extract 0 0) ?x326)))
 (let ((?x319 ((_ extract 0 0) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x320 (bvneg ?x319)))
 (let (($x327 (= ?x320 ?x338)))
 (let (($x328 (= $x327 true)))
 (let ((?x123 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x117 (bvneg ?x123)))
 (let (($x282 (= ?x117 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x247 (= $x282 true)))
 (let (($x239 (= ?x117 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x8 (= $x239 true)))
 (let ((?x257 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x145 (= (_ bv0 2) ?x257)))
 (let (($x309 (= $x145 true)))
 (let (($x111 (forall ((input.ind-%var1793X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1793X (_ bv4 32))))
 (let ((?x173 (bvadd ?x266 input.dst.llvm-%m2)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x265))))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1793X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1793X)))
 (=> $x164 (= ?x274 ?x130)))))))))
 ))
 (let (($x200 (forall ((input.ind-%var1792X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1792X) (bvult input.ind-%var1792X (_ bv100 32)))))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1792X)))
 (= $x164 $x138))))
 ))
 (let (($x156 (and $x200 $x111)))
 (let (($x73 (= $x156 true)))
 (let (($x56 (forall ((input.ind-%var1783X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1783X (_ bv4 32))))
 (let ((?x173 (bvadd ?x266 input.dst.llvm-%m2)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x173))))
 (let ((?x104 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv2 32))) ?x192)))
 (let ((?x62 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv3 32))) ?x104)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1783X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1783X)))
 (=> $x164 (= ?x274 ?x62))))))))))
 ))
 (let (($x79 (forall ((input.ind-%var1782X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1782X) (bvult input.ind-%var1782X (_ bv100 32)))))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1782X)))
 (= $x164 $x138))))
 ))
 (let (($x96 (and $x79 $x56)))
 (let (($x147 (= $x96 true)))
 (let (($x162 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x46 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x87 (and $x46 $x162)))
 (let (($x298 (= $x87 true)))
 (let (($x235 (forall ((input.ind-%var1773X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1773X (_ bv4 32))))
 (let ((?x139 (bvadd ?x266 input.dst.llvm-%m1)))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x297))))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var1773X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1773X)))
 (=> $x205 (= ?x118 ?x246)))))))))
 ))
 (let (($x288 (forall ((input.ind-%var1772X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1772X) (bvult input.ind-%var1772X (_ bv100 32)))))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1772X)))
 (= $x205 $x138))))
 ))
 (let (($x202 (and $x288 $x235)))
 (let (($x30 (= $x202 true)))
 (let ((?x39 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x29 (= (_ bv0 32) ?x39)))
 (let ((?x102 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x310 (= (_ bv0 32) ?x102)))
 (let ((?x211 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x211)))
 (let ((?x314 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x314)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x168 (and $x238 $x98)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x209 $x168)))
 (let (($x302 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x253 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x55 $x241)))
 (let (($x232 (not $x44)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x185 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x161 (and $x185 $x134)))
 (let (($x88 (and (not $x161) $x232)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x255 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (and $x255 $x189)))
 (let (($x57 (not $x263)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (and $x286 $x119)))
 (let (($x227 (and (not $x99) $x57)))
 (let (($x224 (and (and (and (and (and (and $x227 $x88) $x253) $x302) $x142) $x18) $x310)))
 (let (($x19 (and $x224 $x29)))
 (let (($x269 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x171 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x171)))
 (let (($x280 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x171)))
 (let (($x136 (or false (or false (and (and true (or $x177 $x280)) (or $x113 $x269))))))
 (let (($x261 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x136)))
 (let (($x184 (and $x261 $x19)))
 (let (($x105 (= $x184 true)))
 (let (($x28 (forall ((input.ind-%var1763X (_ BitVec 32)) )(let ((?x266 (bvmul input.ind-%var1763X (_ bv4 32))))
 (let ((?x139 (bvadd ?x266 input.dst.llvm-%m1)))
 (let ((?x22 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x139))))
 (let ((?x270 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x139 (_ bv2 32))) ?x22)))
 (let ((?x144 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x139 (_ bv3 32))) ?x270)))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var1763X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1763X)))
 (=> $x205 (= ?x118 ?x144))))))))))
 ))
 (let (($x150 (forall ((input.ind-%var1762X (_ BitVec 32)) )(let (($x138 (and (bvule (_ bv0 32) input.ind-%var1762X) (bvult input.ind-%var1762X (_ bv100 32)))))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1762X)))
 (= $x205 $x138))))
 ))
 (let (($x17 (and $x150 $x28)))
 (let (($x295 (= $x17 true)))
 (let (($x128 (and $x295 $x105)))
 (let (($x16 (and $x128 $x30)))
 (let (($x67 (and $x16 $x298)))
 (let (($x243 (and $x67 $x147)))
 (let (($x203 (and $x243 $x73)))
 (let (($x186 (and $x203 $x309)))
 (let (($x7 (and $x186 $x8)))
 (let (($x268 (and $x7 $x247)))
 (let (($x74 (forall ((input.ind-%var1803X (_ BitVec 32)) )(let ((?x225 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1803X)))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var1803X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1803X)))
 (=> $x205 (= ?x118 ?x225))))))
 ))
 (let (($x219 (forall ((input.ind-%var1802X (_ BitVec 32)) )(let (($x312 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1802X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var1802X)))
 (= $x205 $x312))))
 ))
 (let (($x258 (and $x219 $x74)))
 (let (($x287 (and $x258 $x268)))
 (let (($x190 (forall ((input.ind-%var1813X (_ BitVec 32)) )(let ((?x81 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1813X)))
 (let ((?x274 (input.spec-%var-m2-1.1.1 input.ind-%var1813X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1813X)))
 (=> $x164 (= ?x274 ?x81))))))
 ))
 (let (($x163 (forall ((input.ind-%var1812X (_ BitVec 32)) )(let (($x36 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1812X)))
 (let (($x164 (input.spec-%var-m2-1.0.1 input.ind-%var1812X)))
 (= $x164 $x36))))
 ))
 (let (($x214 (and $x163 $x190)))
 (let (($x318 (and $x214 $x287)))
 (let (($x329 (=> $x318 $x328)))
 (let (($x330 (not $x329)))
 (let (($x363 (forall ((memmask-bounded-var! (_ BitVec 32)) )(let ((?x343 (select solver-mem_1 memmask-bounded-var!)))
 (let (($x347 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x348 (bvadd memmask-bounded-var! (_ bv0 32))))
 (let (($x349 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x348)))
 (let (($x351 (bvugt memmask-bounded-var! input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x352 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x348)))
 (let (($x357 (or false (or false (and (and true (or $x352 $x351)) (or $x349 $x347))))))
 (ite (=> (bvule memmask-bounded-var! (bvsub (bvadd memmask-bounded-var! (_ bv1 32)) (_ bv1 32))) $x357) (= ?x343 (select input.dst.llvm-mem.Lentry%1%fcallEnd memmask-bounded-var!)) (= ?x343 (_ bv0 8)))))))))))
 ))
 (and (and true $x363) $x330)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 3
==result_count: 0
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x251 (forall ((input.ind-%var1885X (_ BitVec 32)) )(let ((?x299 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1885X)))
 (let ((?x206 (bvmul input.ind-%var1885X (_ bv4 32))))
 (let ((?x271 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x133))))
 (let (($x267 (and (bvule (_ bv0 32) input.ind-%var1885X) (bvult input.ind-%var1885X (_ bv100 32)))))
 (=> $x267 (= ?x34 ?x299)))))))))
 ))
 (let (($x31 (forall ((input.ind-%var1884X (_ BitVec 32)) )(let (($x45 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1884X)))
 (let (($x267 (and (bvule (_ bv0 32) input.ind-%var1884X) (bvult input.ind-%var1884X (_ bv100 32)))))
 (= $x267 $x45))))
 ))
 (let (($x333 (and $x31 $x251)))
 (let (($x334 (= $x333 true)))
 (let ((?x195 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x293 (= (_ bv0 2) ?x195)))
 (let (($x86 (= $x293 true)))
 (let (($x281 (forall ((input.ind-%var1853X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1853X (_ bv4 32))))
 (let ((?x247 (bvadd ?x206 input.dst.llvm-%m1)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv1 32))) (select input.dst.llvm-mem ?x247))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv2 32))) ?x172))))
 (let ((?x36 (input.spec-%var-m1-1.1.1 input.ind-%var1853X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1853X)))
 (=> $x357 (= ?x36 ?x279)))))))))
 ))
 (let (($x315 (forall ((input.ind-%var1852X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1852X) (bvult input.ind-%var1852X (_ bv100 32)))))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1852X)))
 (= $x357 $x267))))
 ))
 (let (($x129 (and $x315 $x281)))
 (let (($x277 (= $x129 true)))
 (let (($x244 (forall ((input.ind-%var1843X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1843X (_ bv4 32))))
 (let ((?x271 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x133))))
 (let ((?x348 (input.spec-%var-m2-1.1.1 input.ind-%var1843X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1843X)))
 (=> $x278 (= ?x348 ?x34)))))))))
 ))
 (let (($x13 (forall ((input.ind-%var1842X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1842X) (bvult input.ind-%var1842X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1842X)))
 (= $x278 $x267))))
 ))
 (let (($x158 (and $x13 $x244)))
 (let (($x311 (= $x158 true)))
 (let (($x91 (forall ((input.ind-%var1833X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1833X (_ bv4 32))))
 (let ((?x247 (bvadd ?x206 input.dst.llvm-%m1)))
 (let ((?x319 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x247 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x247))))
 (let ((?x338 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x247 (_ bv2 32))) ?x319)))
 (let ((?x329 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x247 (_ bv3 32))) ?x338)))
 (let ((?x36 (input.spec-%var-m1-1.1.1 input.ind-%var1833X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1833X)))
 (=> $x357 (= ?x36 ?x329))))))))))
 ))
 (let (($x156 (forall ((input.ind-%var1832X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1832X) (bvult input.ind-%var1832X (_ bv100 32)))))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1832X)))
 (= $x357 $x267))))
 ))
 (let (($x191 (and $x156 $x91)))
 (let (($x35 (= $x191 true)))
 (let (($x200 (forall ((input.ind-%var1823X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1823X (_ bv4 32))))
 (let ((?x271 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x271))))
 (let ((?x95 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x271 (_ bv2 32))) ?x192)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x271 (_ bv3 32))) ?x95)))
 (let ((?x348 (input.spec-%var-m2-1.1.1 input.ind-%var1823X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1823X)))
 (=> $x278 (= ?x348 ?x96))))))))))
 ))
 (let (($x297 (forall ((input.ind-%var1822X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1822X) (bvult input.ind-%var1822X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1822X)))
 (= $x278 $x267))))
 ))
 (let (($x51 (and $x297 $x200)))
 (let (($x304 (= $x51 true)))
 (let (($x102 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x211 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x310 (and $x211 $x102)))
 (let (($x224 (= $x310 true)))
 (let ((?x88 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x254 (= (_ bv0 32) ?x88)))
 (let ((?x44 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x44)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x55)))
 (let ((?x185 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x185)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x161 (and $x57 $x134)))
 (let (($x263 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x250 (and $x263 $x161)))
 (let (($x189 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x182 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (and $x182 $x204)))
 (let (($x261 (not $x136)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x303 (and $x113 $x269)))
 (let (($x119 (and (not $x303) $x261)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x276 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x177 (and $x276 $x171)))
 (let (($x280 (not $x177)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x266 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x260 (and $x266 $x159)))
 (let (($x124 (and (not $x260) $x280)))
 (let (($x212 (and (and (and (and (and (and $x124 $x119) $x154) $x189) $x250) $x241) $x232)))
 (let (($x209 (and $x212 $x254)))
 (let (($x144 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x155 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x270 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x155)))
 (let (($x229 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x155)))
 (let (($x17 (or false (or false (and (and true (or $x174 $x229)) (or $x270 $x144))))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x17)))
 (let (($x238 (and $x38 $x209)))
 (let (($x314 (= $x238 true)))
 (let ((?x118 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x225 (bvneg ?x118)))
 (let (($x49 (= ?x225 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x24 (= $x49 true)))
 (let (($x317 (= ?x225 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x74 (= $x317 true)))
 (let (($x59 (and $x74 $x24)))
 (let (($x98 (and $x59 $x314)))
 (let (($x39 (and $x98 $x224)))
 (let (($x100 (and $x39 $x304)))
 (let (($x75 (and $x100 $x35)))
 (let (($x165 (and $x75 $x311)))
 (let (($x220 (and $x165 $x277)))
 (let (($x272 (and $x220 $x86)))
 (let (($x205 (forall ((input.ind-%var1863X (_ BitVec 32)) )(let ((?x274 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1863X)))
 (let ((?x36 (input.spec-%var-m1-1.1.1 input.ind-%var1863X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1863X)))
 (=> $x357 (= ?x36 ?x274))))))
 ))
 (let (($x362 (forall ((input.ind-%var1862X (_ BitVec 32)) )(let (($x273 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1862X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1862X)))
 (= $x357 $x273))))
 ))
 (let (($x312 (and $x362 $x205)))
 (let (($x259 (and $x312 $x272)))
 (let (($x347 (forall ((input.ind-%var1873X (_ BitVec 32)) )(let ((?x351 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1873X)))
 (let ((?x348 (input.spec-%var-m2-1.1.1 input.ind-%var1873X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1873X)))
 (=> $x278 (= ?x348 ?x351))))))
 ))
 (let (($x316 (forall ((input.ind-%var1872X (_ BitVec 32)) )(let (($x198 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1872X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1872X)))
 (= $x278 $x198))))
 ))
 (let (($x350 (and $x316 $x347)))
 (let (($x313 (and $x350 $x259)))
 (let (($x335 (=> $x313 $x334)))
 (not $x335)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x251 (forall ((input.ind-%var1885X (_ BitVec 32)) )(let ((?x299 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1885X)))
 (let ((?x206 (bvmul input.ind-%var1885X (_ bv4 32))))
 (let ((?x271 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x133))))
 (let (($x267 (and (bvule (_ bv0 32) input.ind-%var1885X) (bvult input.ind-%var1885X (_ bv100 32)))))
 (=> $x267 (= ?x34 ?x299)))))))))
 ))
 (let (($x31 (forall ((input.ind-%var1884X (_ BitVec 32)) )(let (($x45 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1884X)))
 (let (($x267 (and (bvule (_ bv0 32) input.ind-%var1884X) (bvult input.ind-%var1884X (_ bv100 32)))))
 (= $x267 $x45))))
 ))
 (let (($x333 (and $x31 $x251)))
 (let (($x334 (= $x333 true)))
 (let ((?x195 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x293 (= (_ bv0 2) ?x195)))
 (let (($x86 (= $x293 true)))
 (let (($x281 (forall ((input.ind-%var1853X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1853X (_ bv4 32))))
 (let ((?x247 (bvadd ?x206 input.dst.llvm-%m1)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv1 32))) (select input.dst.llvm-mem ?x247))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv2 32))) ?x172))))
 (let ((?x36 (input.spec-%var-m1-1.1.1 input.ind-%var1853X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1853X)))
 (=> $x357 (= ?x36 ?x279)))))))))
 ))
 (let (($x315 (forall ((input.ind-%var1852X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1852X) (bvult input.ind-%var1852X (_ bv100 32)))))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1852X)))
 (= $x357 $x267))))
 ))
 (let (($x129 (and $x315 $x281)))
 (let (($x277 (= $x129 true)))
 (let (($x244 (forall ((input.ind-%var1843X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1843X (_ bv4 32))))
 (let ((?x271 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x133))))
 (let ((?x348 (input.spec-%var-m2-1.1.1 input.ind-%var1843X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1843X)))
 (=> $x278 (= ?x348 ?x34)))))))))
 ))
 (let (($x13 (forall ((input.ind-%var1842X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1842X) (bvult input.ind-%var1842X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1842X)))
 (= $x278 $x267))))
 ))
 (let (($x158 (and $x13 $x244)))
 (let (($x311 (= $x158 true)))
 (let (($x91 (forall ((input.ind-%var1833X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1833X (_ bv4 32))))
 (let ((?x247 (bvadd ?x206 input.dst.llvm-%m1)))
 (let ((?x319 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x247 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x247))))
 (let ((?x338 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x247 (_ bv2 32))) ?x319)))
 (let ((?x329 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x247 (_ bv3 32))) ?x338)))
 (let ((?x36 (input.spec-%var-m1-1.1.1 input.ind-%var1833X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1833X)))
 (=> $x357 (= ?x36 ?x329))))))))))
 ))
 (let (($x156 (forall ((input.ind-%var1832X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1832X) (bvult input.ind-%var1832X (_ bv100 32)))))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1832X)))
 (= $x357 $x267))))
 ))
 (let (($x191 (and $x156 $x91)))
 (let (($x35 (= $x191 true)))
 (let (($x200 (forall ((input.ind-%var1823X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var1823X (_ bv4 32))))
 (let ((?x271 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x271))))
 (let ((?x95 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x271 (_ bv2 32))) ?x192)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x271 (_ bv3 32))) ?x95)))
 (let ((?x348 (input.spec-%var-m2-1.1.1 input.ind-%var1823X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1823X)))
 (=> $x278 (= ?x348 ?x96))))))))))
 ))
 (let (($x297 (forall ((input.ind-%var1822X (_ BitVec 32)) )(let (($x267 (and (bvule (_ bv0 32) input.ind-%var1822X) (bvult input.ind-%var1822X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1822X)))
 (= $x278 $x267))))
 ))
 (let (($x51 (and $x297 $x200)))
 (let (($x304 (= $x51 true)))
 (let (($x102 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x211 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x310 (and $x211 $x102)))
 (let (($x224 (= $x310 true)))
 (let ((?x88 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x254 (= (_ bv0 32) ?x88)))
 (let ((?x44 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x44)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x55)))
 (let ((?x185 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x185)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x161 (and $x57 $x134)))
 (let (($x263 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x250 (and $x263 $x161)))
 (let (($x189 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x182 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (and $x182 $x204)))
 (let (($x261 (not $x136)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x303 (and $x113 $x269)))
 (let (($x119 (and (not $x303) $x261)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x276 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x177 (and $x276 $x171)))
 (let (($x280 (not $x177)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x266 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x260 (and $x266 $x159)))
 (let (($x124 (and (not $x260) $x280)))
 (let (($x212 (and (and (and (and (and (and $x124 $x119) $x154) $x189) $x250) $x241) $x232)))
 (let (($x209 (and $x212 $x254)))
 (let (($x144 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x155 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x270 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x155)))
 (let (($x229 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x155)))
 (let (($x17 (or false (or false (and (and true (or $x174 $x229)) (or $x270 $x144))))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x17)))
 (let (($x238 (and $x38 $x209)))
 (let (($x314 (= $x238 true)))
 (let ((?x118 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x225 (bvneg ?x118)))
 (let (($x49 (= ?x225 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x24 (= $x49 true)))
 (let (($x317 (= ?x225 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x74 (= $x317 true)))
 (let (($x59 (and $x74 $x24)))
 (let (($x98 (and $x59 $x314)))
 (let (($x39 (and $x98 $x224)))
 (let (($x100 (and $x39 $x304)))
 (let (($x75 (and $x100 $x35)))
 (let (($x165 (and $x75 $x311)))
 (let (($x220 (and $x165 $x277)))
 (let (($x272 (and $x220 $x86)))
 (let (($x205 (forall ((input.ind-%var1863X (_ BitVec 32)) )(let ((?x274 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1863X)))
 (let ((?x36 (input.spec-%var-m1-1.1.1 input.ind-%var1863X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1863X)))
 (=> $x357 (= ?x36 ?x274))))))
 ))
 (let (($x362 (forall ((input.ind-%var1862X (_ BitVec 32)) )(let (($x273 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1862X)))
 (let (($x357 (input.spec-%var-m1-1.0.1 input.ind-%var1862X)))
 (= $x357 $x273))))
 ))
 (let (($x312 (and $x362 $x205)))
 (let (($x259 (and $x312 $x272)))
 (let (($x347 (forall ((input.ind-%var1873X (_ BitVec 32)) )(let ((?x351 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1873X)))
 (let ((?x348 (input.spec-%var-m2-1.1.1 input.ind-%var1873X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1873X)))
 (=> $x278 (= ?x348 ?x351))))))
 ))
 (let (($x316 (forall ((input.ind-%var1872X (_ BitVec 32)) )(let (($x198 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1872X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1872X)))
 (= $x278 $x198))))
 ))
 (let (($x350 (and $x316 $x347)))
 (let (($x313 (and $x350 $x259)))
 (let (($x335 (=> $x313 $x334)))
 (not $x335)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x80041850)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfbfdbdd4)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!18))
  (define-fun input.ind-%var1884X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xf9ff6ee8)
  (define-fun input.ind-%var1885X!1 () (_ BitVec 32)
    #x025a512a)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!17))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xf9ff6eeb)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xfbfdbdd7)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xf9ff6ee8)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfbfdbdd4)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!22 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!20 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0)
              (ite (bvule #x025a512a x!0) #x025a512a #x00000065)
              #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!22 (k!20 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!17 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!18 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!18 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!21 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun k!19 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0)
              (ite (bvule #x025a512a x!0) #x025a512a #x00000065)
              #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!21 (k!19 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x025a512a) false
      (input.spec-%var-m2-1.0.1 x!0))))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x80041853 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x80041852 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x80041851 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x80041850 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!18 (bvadd #x80041853 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x80041852 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x80041851 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x80041850 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x025a512a) false
      (input.spec-%var-m1-1.0.1 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!17))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x860a042c)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!18))
  (define-fun input.ind-%var1884X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x36040a18)
  (define-fun input.ind-%var1885X!1 () (_ BitVec 32)
    #x03500001)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xc20a84c4)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x36040a1b)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x860a042f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x36040a18)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x860a042c)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m2-1.0.1!21 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun k!19 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0)
              (ite (bvule #x03500001 x!0) #x03500001 #x00000065)
              #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!21 (k!19 x!0)))
  (define-fun k!20 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0)
              (ite (bvule #x03500001 x!0) #x03500001 #x00000065)
              #x00000064)
         #x00000000))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #xc20a84c7 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #xc20a84c6 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #xc20a84c5 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #xc20a84c4 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!18 (bvadd #xc20a84c7 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #xc20a84c6 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #xc20a84c5 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #xc20a84c4 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m1-1.0.1!22 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!22 (k!20 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!17 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!17 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!17 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!18 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!18 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!18 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x03500001) false
      (input.spec-%var-m2-1.0.1 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x03500001) false
      (input.spec-%var-m1-1.0.1 x!0))))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x231 (= false true)))
 (let (($x112 (forall ((input.ind-%var1981X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1981X (_ bv4 32))))
 (let ((?x332 (bvadd ?x55 input.dst.llvm-%m1)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem ?x332))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv2 32))) ?x226))))
 (let ((?x5 (input.spec-%var-m1-1.1.1 input.ind-%var1981X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1981X)))
 (=> $x317 (= ?x5 ?x120)))))))))
 ))
 (let (($x213 (forall ((input.ind-%var1980X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1980X) (bvult input.ind-%var1980X (_ bv100 32)))))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1980X)))
 (= $x317 $x171))))
 ))
 (let (($x9 (and $x213 $x112)))
 (let (($x221 (= $x9 true)))
 (let ((?x207 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x201 (= (_ bv0 32) ?x207)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x265 (= (_ bv0 32) ?x7)))
 (let ((?x6 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x6)))
 (let ((?x117 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x117)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x42 (and $x123 $x186)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x309 (and $x8 $x42)))
 (let (($x239 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (and $x73 $x246)))
 (let (($x114 (not $x97)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x288 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (and $x288 $x93)))
 (let (($x66 (and (not $x151) $x114)))
 (let (($x248 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (and $x46 $x248)))
 (let (($x67 (not $x33)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x353 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x294 (and $x353 $x20)))
 (let (($x19 (and (not $x294) $x67)))
 (let (($x141 (and (and (and (and (and (and $x19 $x66) $x257) $x239) $x309) $x54) $x265)))
 (let (($x242 (and $x141 $x201)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x343 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x343)))
 (let (($x356 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x343)))
 (let (($x79 (or false (or false (and (and true (or $x163 $x356)) (or $x184 $x128))))))
 (let (($x298 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x79)))
 (let (($x284 (and $x298 $x242)))
 (let (($x12 (= $x284 true)))
 (let ((?x361 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x61 (= (_ bv0 2) ?x361)))
 (let (($x345 (= $x61 true)))
 (let (($x336 (forall ((input.ind-%var1971X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1971X (_ bv4 32))))
 (let ((?x241 (bvadd ?x55 input.dst.llvm-%m2)))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x299))))
 (let ((?x344 (input.spec-%var-m2-1.1.1 input.ind-%var1971X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1971X)))
 (=> $x278 (= ?x344 ?x333)))))))))
 ))
 (let (($x94 (forall ((input.ind-%var1970X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1970X) (bvult input.ind-%var1970X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1970X)))
 (= $x278 $x171))))
 ))
 (let (($x138 (and $x94 $x336)))
 (let (($x103 (= $x138 true)))
 (let (($x34 (forall ((input.ind-%var1961X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1961X (_ bv4 32))))
 (let ((?x332 (bvadd ?x55 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x332))))
 (let ((?x80 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x332 (_ bv2 32))) ?x75)))
 (let ((?x249 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x332 (_ bv3 32))) ?x80)))
 (let ((?x5 (input.spec-%var-m1-1.1.1 input.ind-%var1961X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1961X)))
 (=> $x317 (= ?x5 ?x249))))))))))
 ))
 (let (($x200 (forall ((input.ind-%var1960X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1960X) (bvult input.ind-%var1960X (_ bv100 32)))))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1960X)))
 (= $x317 $x171))))
 ))
 (let (($x121 (and $x200 $x34)))
 (let (($x15 (= $x121 true)))
 (let (($x162 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x153 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x104 (and $x153 $x162)))
 (let (($x62 (= $x104 true)))
 (let ((?x310 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x224 (bvneg ?x310)))
 (let (($x41 (= ?x224 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x297 (= $x41 true)))
 (let (($x47 (= ?x224 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x105 (= $x47 true)))
 (let (($x157 (forall ((input.ind-%var1951X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1951X (_ bv4 32))))
 (let ((?x241 (bvadd ?x55 input.dst.llvm-%m2)))
 (let ((?x212 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x241))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x241 (_ bv2 32))) ?x212)))
 (let ((?x98 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x241 (_ bv3 32))) ?x209)))
 (let ((?x344 (input.spec-%var-m2-1.1.1 input.ind-%var1951X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1951X)))
 (=> $x278 (= ?x344 ?x98))))))))))
 ))
 (let (($x280 (forall ((input.ind-%var1950X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1950X) (bvult input.ind-%var1950X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1950X)))
 (= $x278 $x171))))
 ))
 (let (($x211 (and $x280 $x157)))
 (let (($x18 (= $x211 true)))
 (let (($x82 (and $x18 $x105)))
 (let (($x83 (and $x82 $x297)))
 (let (($x170 (and $x83 $x62)))
 (let (($x244 (and $x170 $x15)))
 (let (($x321 (and $x244 $x103)))
 (let (($x81 (and $x321 $x345)))
 (let (($x131 (and $x81 $x12)))
 (let (($x77 (and $x131 $x221)))
 (let (($x22 (forall ((input.ind-%var1991X (_ BitVec 32)) )(let ((?x106 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1991X)))
 (let ((?x5 (input.spec-%var-m1-1.1.1 input.ind-%var1991X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1991X)))
 (=> $x317 (= ?x5 ?x106))))))
 ))
 (let (($x150 (forall ((input.ind-%var1990X (_ BitVec 32)) )(let (($x49 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1990X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1990X)))
 (= $x317 $x49))))
 ))
 (let (($x144 (and $x150 $x22)))
 (let (($x236 (and $x144 $x77)))
 (let (($x219 (forall ((input.ind-%var2001X (_ BitVec 32)) )(let ((?x274 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2001X)))
 (let ((?x344 (input.spec-%var-m2-1.1.1 input.ind-%var2001X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var2001X)))
 (=> $x278 (= ?x344 ?x274))))))
 ))
 (let (($x347 (forall ((input.ind-%var2000X (_ BitVec 32)) )(let (($x348 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2000X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var2000X)))
 (= $x278 $x348))))
 ))
 (let (($x118 (and $x347 $x219)))
 (let (($x275 (and $x118 $x236)))
 (let (($x360 (=> $x275 $x231)))
 (not $x360))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x231 (= false true)))
 (let (($x112 (forall ((input.ind-%var1981X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1981X (_ bv4 32))))
 (let ((?x332 (bvadd ?x55 input.dst.llvm-%m1)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem ?x332))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv2 32))) ?x226))))
 (let ((?x5 (input.spec-%var-m1-1.1.1 input.ind-%var1981X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1981X)))
 (=> $x317 (= ?x5 ?x120)))))))))
 ))
 (let (($x213 (forall ((input.ind-%var1980X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1980X) (bvult input.ind-%var1980X (_ bv100 32)))))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1980X)))
 (= $x317 $x171))))
 ))
 (let (($x9 (and $x213 $x112)))
 (let (($x221 (= $x9 true)))
 (let ((?x207 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x201 (= (_ bv0 32) ?x207)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x265 (= (_ bv0 32) ?x7)))
 (let ((?x6 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x6)))
 (let ((?x117 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x117)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x42 (and $x123 $x186)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x309 (and $x8 $x42)))
 (let (($x239 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (and $x73 $x246)))
 (let (($x114 (not $x97)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x288 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (and $x288 $x93)))
 (let (($x66 (and (not $x151) $x114)))
 (let (($x248 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (and $x46 $x248)))
 (let (($x67 (not $x33)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x353 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x294 (and $x353 $x20)))
 (let (($x19 (and (not $x294) $x67)))
 (let (($x141 (and (and (and (and (and (and $x19 $x66) $x257) $x239) $x309) $x54) $x265)))
 (let (($x242 (and $x141 $x201)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x343 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x343)))
 (let (($x356 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x343)))
 (let (($x79 (or false (or false (and (and true (or $x163 $x356)) (or $x184 $x128))))))
 (let (($x298 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x79)))
 (let (($x284 (and $x298 $x242)))
 (let (($x12 (= $x284 true)))
 (let ((?x361 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x61 (= (_ bv0 2) ?x361)))
 (let (($x345 (= $x61 true)))
 (let (($x336 (forall ((input.ind-%var1971X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1971X (_ bv4 32))))
 (let ((?x241 (bvadd ?x55 input.dst.llvm-%m2)))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x299))))
 (let ((?x344 (input.spec-%var-m2-1.1.1 input.ind-%var1971X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1971X)))
 (=> $x278 (= ?x344 ?x333)))))))))
 ))
 (let (($x94 (forall ((input.ind-%var1970X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1970X) (bvult input.ind-%var1970X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1970X)))
 (= $x278 $x171))))
 ))
 (let (($x138 (and $x94 $x336)))
 (let (($x103 (= $x138 true)))
 (let (($x34 (forall ((input.ind-%var1961X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1961X (_ bv4 32))))
 (let ((?x332 (bvadd ?x55 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x332))))
 (let ((?x80 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x332 (_ bv2 32))) ?x75)))
 (let ((?x249 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x332 (_ bv3 32))) ?x80)))
 (let ((?x5 (input.spec-%var-m1-1.1.1 input.ind-%var1961X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1961X)))
 (=> $x317 (= ?x5 ?x249))))))))))
 ))
 (let (($x200 (forall ((input.ind-%var1960X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1960X) (bvult input.ind-%var1960X (_ bv100 32)))))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1960X)))
 (= $x317 $x171))))
 ))
 (let (($x121 (and $x200 $x34)))
 (let (($x15 (= $x121 true)))
 (let (($x162 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x153 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x104 (and $x153 $x162)))
 (let (($x62 (= $x104 true)))
 (let ((?x310 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x224 (bvneg ?x310)))
 (let (($x41 (= ?x224 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x297 (= $x41 true)))
 (let (($x47 (= ?x224 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x105 (= $x47 true)))
 (let (($x157 (forall ((input.ind-%var1951X (_ BitVec 32)) )(let ((?x55 (bvmul input.ind-%var1951X (_ bv4 32))))
 (let ((?x241 (bvadd ?x55 input.dst.llvm-%m2)))
 (let ((?x212 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x241))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x241 (_ bv2 32))) ?x212)))
 (let ((?x98 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x241 (_ bv3 32))) ?x209)))
 (let ((?x344 (input.spec-%var-m2-1.1.1 input.ind-%var1951X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1951X)))
 (=> $x278 (= ?x344 ?x98))))))))))
 ))
 (let (($x280 (forall ((input.ind-%var1950X (_ BitVec 32)) )(let (($x171 (and (bvule (_ bv0 32) input.ind-%var1950X) (bvult input.ind-%var1950X (_ bv100 32)))))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var1950X)))
 (= $x278 $x171))))
 ))
 (let (($x211 (and $x280 $x157)))
 (let (($x18 (= $x211 true)))
 (let (($x82 (and $x18 $x105)))
 (let (($x83 (and $x82 $x297)))
 (let (($x170 (and $x83 $x62)))
 (let (($x244 (and $x170 $x15)))
 (let (($x321 (and $x244 $x103)))
 (let (($x81 (and $x321 $x345)))
 (let (($x131 (and $x81 $x12)))
 (let (($x77 (and $x131 $x221)))
 (let (($x22 (forall ((input.ind-%var1991X (_ BitVec 32)) )(let ((?x106 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1991X)))
 (let ((?x5 (input.spec-%var-m1-1.1.1 input.ind-%var1991X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1991X)))
 (=> $x317 (= ?x5 ?x106))))))
 ))
 (let (($x150 (forall ((input.ind-%var1990X (_ BitVec 32)) )(let (($x49 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1990X)))
 (let (($x317 (input.spec-%var-m1-1.0.1 input.ind-%var1990X)))
 (= $x317 $x49))))
 ))
 (let (($x144 (and $x150 $x22)))
 (let (($x236 (and $x144 $x77)))
 (let (($x219 (forall ((input.ind-%var2001X (_ BitVec 32)) )(let ((?x274 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2001X)))
 (let ((?x344 (input.spec-%var-m2-1.1.1 input.ind-%var2001X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var2001X)))
 (=> $x278 (= ?x344 ?x274))))))
 ))
 (let (($x347 (forall ((input.ind-%var2000X (_ BitVec 32)) )(let (($x348 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2000X)))
 (let (($x278 (input.spec-%var-m2-1.0.1 input.ind-%var2000X)))
 (= $x278 $x348))))
 ))
 (let (($x118 (and $x347 $x219)))
 (let (($x275 (and $x118 $x236)))
 (let (($x360 (=> $x275 $x231)))
 (not $x360))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xa51ab5b8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7c61b8f0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7c61b8f3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xa51ab5bb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7c61b8f0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xa51ab5b8)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!15))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!16))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000600)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000603)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000600)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!16 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!17 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!19 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!19 (k!17 x!0)))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.0.1!20 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!18 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!20 (k!18 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!15 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!15 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!15 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!16 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!16 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!16 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x381 (= false true)))
 (let (($x375 (forall ((input.ind-%var2105X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2105X (_ bv4 32))))
 (let ((?x353 (bvadd ?x137 input.dst.llvm-%m1)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem ?x353))))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv2 32))) ?x368))))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2105X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2105X)))
 (=> $x177 (= ?x88 ?x372)))))))))
 ))
 (let (($x306 (forall ((input.ind-%var2104X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2104X) (bvult input.ind-%var2104X (_ bv100 32)))))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2104X)))
 (= $x177 $x82))))
 ))
 (let (($x376 (and $x306 $x375)))
 (let (($x377 (= $x376 true)))
 (let ((?x230 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x228 (= (_ bv0 32) ?x230)))
 (let ((?x359 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x354 (= (_ bv0 32) ?x359)))
 (let ((?x23 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x325 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x23)))
 (let ((?x233 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x233)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x358 (and $x181 $x50)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x125 (and $x205 $x358)))
 (let (($x357 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x349 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x273 (and $x60 $x183)))
 (let (($x198 (not $x273)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x350 (and $x187 $x140)))
 (let (($x36 (and (not $x350) $x198)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x197 (and $x37 $x21)))
 (let (($x301 (not $x197)))
 (let (($x311 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x259 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (and $x259 $x311)))
 (let (($x40 (and (not $x188) $x301)))
 (let (($x27 (and (and (and (and (and (and $x40 $x36) $x349) $x357) $x125) $x325) $x354)))
 (let (($x107 (and $x27 $x228)))
 (let (($x215 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x290 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x252 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x217 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x222 (or false (or false (and (and true (or $x217 $x252)) (or $x290 $x215))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x222)))
 (let (($x180 (and $x68 $x107)))
 (let (($x132 (= $x180 true)))
 (let (($x129 (forall ((input.ind-%var2095X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2095X (_ bv4 32))))
 (let ((?x34 (bvadd ?x137 input.dst.llvm-%m2)))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x315))))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2095X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2095X)))
 (=> $x348 (= ?x43 ?x272)))))))))
 ))
 (let (($x156 (forall ((input.ind-%var2094X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2094X) (bvult input.ind-%var2094X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2094X)))
 (= $x348 $x82))))
 ))
 (let (($x277 (and $x156 $x129)))
 (let (($x281 (= $x277 true)))
 (let (($x260 (forall ((input.ind-%var2085X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2085X (_ bv4 32))))
 (let ((?x353 (bvadd ?x137 input.dst.llvm-%m1)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x353))))
 (let ((?x255 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x353 (_ bv2 32))) ?x253)))
 (let ((?x161 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x353 (_ bv3 32))) ?x255)))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2085X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2085X)))
 (=> $x177 (= ?x88 ?x161))))))))))
 ))
 (let (($x190 (forall ((input.ind-%var2084X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2084X) (bvult input.ind-%var2084X (_ bv100 32)))))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2084X)))
 (= $x177 $x82))))
 ))
 (let (($x250 (and $x190 $x260)))
 (let (($x51 (= $x250 true)))
 (let ((?x221 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x77 (bvneg ?x221)))
 (let (($x286 (= ?x77 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x179 (= $x286 true)))
 (let (($x275 (= ?x77 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x231 (= $x275 true)))
 (let (($x291 (forall ((input.ind-%var2075X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2075X (_ bv4 32))))
 (let ((?x34 (bvadd ?x137 input.dst.llvm-%m2)))
 (let ((?x131 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x34))))
 (let ((?x26 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x34 (_ bv2 32))) ?x131)))
 (let ((?x78 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x34 (_ bv3 32))) ?x26)))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2075X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2075X)))
 (=> $x348 (= ?x43 ?x78))))))))))
 ))
 (let (($x239 (forall ((input.ind-%var2074X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2074X) (bvult input.ind-%var2074X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2074X)))
 (= $x348 $x82))))
 ))
 (let (($x120 (and $x239 $x291)))
 (let (($x122 (= $x120 true)))
 (let (($x73 (forall ((input.ind-%var2065X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2065X (_ bv4 32))))
 (let ((?x353 (bvadd ?x137 input.dst.llvm-%m1)))
 (let ((?x46 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x353))))
 (let ((?x67 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x353 (_ bv2 32))) ?x46)))
 (let ((?x93 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x353 (_ bv3 32))) ?x67)))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2065X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2065X)))
 (=> $x177 (= ?x88 ?x93))))))))))
 ))
 (let (($x81 (forall ((input.ind-%var2064X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2064X) (bvult input.ind-%var2064X (_ bv100 32)))))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2064X)))
 (= $x177 $x82))))
 ))
 (let (($x246 (and $x81 $x73)))
 (let (($x97 (= $x246 true)))
 (let (($x334 (forall ((input.ind-%var2055X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2055X (_ bv4 32))))
 (let ((?x34 (bvadd ?x137 input.dst.llvm-%m2)))
 (let ((?x94 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x34))))
 (let ((?x149 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv2 32))) ?x94)))
 (let ((?x299 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv3 32))) ?x149)))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2055X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2055X)))
 (=> $x348 (= ?x43 ?x299))))))))))
 ))
 (let (($x41 (forall ((input.ind-%var2054X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2054X) (bvult input.ind-%var2054X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2054X)))
 (= $x348 $x82))))
 ))
 (let (($x335 (and $x41 $x334)))
 (let (($x336 (= $x335 true)))
 (let (($x114 (and $x336 $x97)))
 (let (($x223 (and $x114 $x122)))
 (let (($x360 (and $x223 $x231)))
 (let (($x322 (and $x360 $x179)))
 (let (($x113 (and $x322 $x51)))
 (let (($x220 (and $x113 $x281)))
 (let (($x58 (and $x220 $x132)))
 (let (($x378 (and $x58 $x377)))
 (let (($x168 (forall ((input.ind-%var2115X (_ BitVec 32)) )(let ((?x44 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2115X)))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2115X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2115X)))
 (=> $x177 (= ?x88 ?x44))))))
 ))
 (let (($x227 (forall ((input.ind-%var2114X (_ BitVec 32)) )(let (($x204 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2114X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2114X)))
 (= $x177 $x204))))
 ))
 (let (($x142 (and $x227 $x168)))
 (let (($x379 (and $x142 $x378)))
 (let (($x276 (forall ((input.ind-%var2125X (_ BitVec 32)) )(let ((?x106 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2125X)))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2125X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2125X)))
 (=> $x348 (= ?x43 ?x106))))))
 ))
 (let (($x219 (forall ((input.ind-%var2124X (_ BitVec 32)) )(let (($x344 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2124X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2124X)))
 (= $x348 $x344))))
 ))
 (let (($x38 (and $x219 $x276)))
 (let (($x380 (and $x38 $x379)))
 (let (($x382 (=> $x380 $x381)))
 (not $x382)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x381 (= false true)))
 (let (($x375 (forall ((input.ind-%var2105X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2105X (_ bv4 32))))
 (let ((?x353 (bvadd ?x137 input.dst.llvm-%m1)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem ?x353))))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv2 32))) ?x368))))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2105X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2105X)))
 (=> $x177 (= ?x88 ?x372)))))))))
 ))
 (let (($x306 (forall ((input.ind-%var2104X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2104X) (bvult input.ind-%var2104X (_ bv100 32)))))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2104X)))
 (= $x177 $x82))))
 ))
 (let (($x376 (and $x306 $x375)))
 (let (($x377 (= $x376 true)))
 (let ((?x230 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x228 (= (_ bv0 32) ?x230)))
 (let ((?x359 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x354 (= (_ bv0 32) ?x359)))
 (let ((?x23 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x325 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x23)))
 (let ((?x233 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x233)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x358 (and $x181 $x50)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x125 (and $x205 $x358)))
 (let (($x357 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x349 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x273 (and $x60 $x183)))
 (let (($x198 (not $x273)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x350 (and $x187 $x140)))
 (let (($x36 (and (not $x350) $x198)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x197 (and $x37 $x21)))
 (let (($x301 (not $x197)))
 (let (($x311 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x259 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (and $x259 $x311)))
 (let (($x40 (and (not $x188) $x301)))
 (let (($x27 (and (and (and (and (and (and $x40 $x36) $x349) $x357) $x125) $x325) $x354)))
 (let (($x107 (and $x27 $x228)))
 (let (($x215 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x290 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x252 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x217 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x222 (or false (or false (and (and true (or $x217 $x252)) (or $x290 $x215))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x222)))
 (let (($x180 (and $x68 $x107)))
 (let (($x132 (= $x180 true)))
 (let (($x129 (forall ((input.ind-%var2095X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2095X (_ bv4 32))))
 (let ((?x34 (bvadd ?x137 input.dst.llvm-%m2)))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x315))))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2095X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2095X)))
 (=> $x348 (= ?x43 ?x272)))))))))
 ))
 (let (($x156 (forall ((input.ind-%var2094X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2094X) (bvult input.ind-%var2094X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2094X)))
 (= $x348 $x82))))
 ))
 (let (($x277 (and $x156 $x129)))
 (let (($x281 (= $x277 true)))
 (let (($x260 (forall ((input.ind-%var2085X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2085X (_ bv4 32))))
 (let ((?x353 (bvadd ?x137 input.dst.llvm-%m1)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x353))))
 (let ((?x255 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x353 (_ bv2 32))) ?x253)))
 (let ((?x161 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x353 (_ bv3 32))) ?x255)))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2085X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2085X)))
 (=> $x177 (= ?x88 ?x161))))))))))
 ))
 (let (($x190 (forall ((input.ind-%var2084X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2084X) (bvult input.ind-%var2084X (_ bv100 32)))))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2084X)))
 (= $x177 $x82))))
 ))
 (let (($x250 (and $x190 $x260)))
 (let (($x51 (= $x250 true)))
 (let ((?x221 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x77 (bvneg ?x221)))
 (let (($x286 (= ?x77 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x179 (= $x286 true)))
 (let (($x275 (= ?x77 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x231 (= $x275 true)))
 (let (($x291 (forall ((input.ind-%var2075X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2075X (_ bv4 32))))
 (let ((?x34 (bvadd ?x137 input.dst.llvm-%m2)))
 (let ((?x131 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x34))))
 (let ((?x26 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x34 (_ bv2 32))) ?x131)))
 (let ((?x78 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x34 (_ bv3 32))) ?x26)))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2075X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2075X)))
 (=> $x348 (= ?x43 ?x78))))))))))
 ))
 (let (($x239 (forall ((input.ind-%var2074X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2074X) (bvult input.ind-%var2074X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2074X)))
 (= $x348 $x82))))
 ))
 (let (($x120 (and $x239 $x291)))
 (let (($x122 (= $x120 true)))
 (let (($x73 (forall ((input.ind-%var2065X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2065X (_ bv4 32))))
 (let ((?x353 (bvadd ?x137 input.dst.llvm-%m1)))
 (let ((?x46 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x353))))
 (let ((?x67 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x353 (_ bv2 32))) ?x46)))
 (let ((?x93 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x353 (_ bv3 32))) ?x67)))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2065X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2065X)))
 (=> $x177 (= ?x88 ?x93))))))))))
 ))
 (let (($x81 (forall ((input.ind-%var2064X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2064X) (bvult input.ind-%var2064X (_ bv100 32)))))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2064X)))
 (= $x177 $x82))))
 ))
 (let (($x246 (and $x81 $x73)))
 (let (($x97 (= $x246 true)))
 (let (($x334 (forall ((input.ind-%var2055X (_ BitVec 32)) )(let ((?x137 (bvmul input.ind-%var2055X (_ bv4 32))))
 (let ((?x34 (bvadd ?x137 input.dst.llvm-%m2)))
 (let ((?x94 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x34))))
 (let ((?x149 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv2 32))) ?x94)))
 (let ((?x299 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv3 32))) ?x149)))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2055X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2055X)))
 (=> $x348 (= ?x43 ?x299))))))))))
 ))
 (let (($x41 (forall ((input.ind-%var2054X (_ BitVec 32)) )(let (($x82 (and (bvule (_ bv0 32) input.ind-%var2054X) (bvult input.ind-%var2054X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2054X)))
 (= $x348 $x82))))
 ))
 (let (($x335 (and $x41 $x334)))
 (let (($x336 (= $x335 true)))
 (let (($x114 (and $x336 $x97)))
 (let (($x223 (and $x114 $x122)))
 (let (($x360 (and $x223 $x231)))
 (let (($x322 (and $x360 $x179)))
 (let (($x113 (and $x322 $x51)))
 (let (($x220 (and $x113 $x281)))
 (let (($x58 (and $x220 $x132)))
 (let (($x378 (and $x58 $x377)))
 (let (($x168 (forall ((input.ind-%var2115X (_ BitVec 32)) )(let ((?x44 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2115X)))
 (let ((?x88 (input.spec-%var-m1-1.1.1 input.ind-%var2115X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2115X)))
 (=> $x177 (= ?x88 ?x44))))))
 ))
 (let (($x227 (forall ((input.ind-%var2114X (_ BitVec 32)) )(let (($x204 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2114X)))
 (let (($x177 (input.spec-%var-m1-1.0.1 input.ind-%var2114X)))
 (= $x177 $x204))))
 ))
 (let (($x142 (and $x227 $x168)))
 (let (($x379 (and $x142 $x378)))
 (let (($x276 (forall ((input.ind-%var2125X (_ BitVec 32)) )(let ((?x106 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2125X)))
 (let ((?x43 (input.spec-%var-m2-1.1.1 input.ind-%var2125X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2125X)))
 (=> $x348 (= ?x43 ?x106))))))
 ))
 (let (($x219 (forall ((input.ind-%var2124X (_ BitVec 32)) )(let (($x344 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2124X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2124X)))
 (= $x348 $x344))))
 ))
 (let (($x38 (and $x219 $x276)))
 (let (($x380 (and $x38 $x379)))
 (let (($x382 (=> $x380 $x381)))
 (not $x382)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xfefcafac)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xdd302734)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!21))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xebbfa438)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x5da40b30)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!19))
  (define-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!20))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x5da40b33)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xdd302737)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x5da40b30)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xdd302734)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1!25 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!23 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!25 (k!23 x!0)))
  (define-fun k!20 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!19 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!19 (bvadd #xebbfa43b (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #xebbfa43a (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #xebbfa439 (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #xebbfa438 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!20 (bvadd #xebbfa43b (bvmul #x00000004 x!0)))
                         (k!20 (bvadd #xebbfa43a (bvmul #x00000004 x!0)))
                         (k!20 (bvadd #xebbfa439 (bvmul #x00000004 x!0)))
                         (k!20 (bvadd #xebbfa438 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun k!22 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!24 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!24 (k!22 x!0)))
  (define-fun k!21 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!19 (bvadd #xfefcafaf (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #xfefcafae (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #xfefcafad (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #xfefcafac (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!21 (bvadd #xfefcafaf (bvmul #x00000004 x!0)))
                         (k!21 (bvadd #xfefcafae (bvmul #x00000004 x!0)))
                         (k!21 (bvadd #xfefcafad (bvmul #x00000004 x!0)))
                         (k!21 (bvadd #xfefcafac (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!19))
  (define-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!20))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000060)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!21))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01008404)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000006)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01008407)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000063)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01008404)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000060)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!21 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1!24 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun k!22 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!24 (k!22 x!0)))
  (define-fun input.spec-%var-m1-1.0.1!25 ((x!0 (_ BitVec 32))) Bool
    (= x!0 #x00000000))
  (define-fun k!20 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun k!19 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!19 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!19 (bvmul #x00000004 x!0))))
            (a!2 (concat (k!21 (bvadd #x00000003 (bvmul #x00000004 x!0)))
                         (k!21 (bvadd #x00000002 (bvmul #x00000004 x!0)))
                         (k!21 (bvadd #x00000001 (bvmul #x00000004 x!0)))
                         (k!21 (bvmul #x00000004 x!0)))))
        (ite (input.spec-%var-m2-1.0.1 x!0) a!1 a!2))))
  (define-fun k!23 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!25 (k!23 x!0)))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (concat (k!19 (bvadd #x00000009 (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #x00000008 (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!19 (bvadd #x00000006 (bvmul #x00000004 x!0)))))
            (a!2 (concat (k!20 (bvadd #x00000009 (bvmul #x00000004 x!0)))
                         (k!20 (bvadd #x00000008 (bvmul #x00000004 x!0)))
                         (k!20 (bvadd #x00000007 (bvmul #x00000004 x!0)))
                         (k!20 (bvadd #x00000006 (bvmul #x00000004 x!0))))))
        (ite (input.spec-%var-m1-1.0.1 x!0) a!1 a!2))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x389 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x394 (=> $x389 true)))
 (let (($x395 (= $x394 true)))
 (let (($x390 (= $x389 true)))
 (let (($x85 (forall ((input.ind-%var2217X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2217X (_ bv4 32))))
 (let ((?x313 (bvadd ?x112 input.dst.llvm-%m1)))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x347))))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2217X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2217X)))
 (=> $x267 (= ?x279 ?x270)))))))))
 ))
 (let (($x339 (forall ((input.ind-%var2216X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2216X) (bvult input.ind-%var2216X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2216X)))
 (= $x267 $x248))))
 ))
 (let (($x384 (and $x339 $x85)))
 (let (($x385 (= $x384 true)))
 (let ((?x247 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x338 (= (_ bv0 32) ?x247)))
 (let ((?x320 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x318 (= (_ bv0 32) ?x320)))
 (let ((?x92 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x96 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x92)))
 (let ((?x327 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x328 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x327)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x329 (and $x192 $x328)))
 (let (($x210 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x210 $x329)))
 (let (($x152 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x185 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x229 (and $x185 $x74)))
 (let (($x351 (not $x229)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x266 (and $x101 $x269)))
 (let (($x268 (and (not $x266) $x351)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x136 $x119)))
 (let (($x17 (not $x65)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x141 $x54)))
 (let (($x124 (and (not $x174) $x17)))
 (let (($x330 (and (and (and (and (and (and $x124 $x268) $x240) $x152) $x146) $x96) $x318)))
 (let (($x319 (and $x330 $x338)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x6 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x6)))
 (let (($x155 (or false (or false (and (and true (or $x7 $x207)) (or $x139 $x8))))))
 (let (($x258 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x155)))
 (let (($x32 (and $x258 $x319)))
 (let (($x25 (= $x32 true)))
 (let (($x130 (forall ((input.ind-%var2207X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2207X (_ bv4 32))))
 (let ((?x9 (bvadd ?x112 input.dst.llvm-%m2)))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x61))))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2207X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2207X)))
 (=> $x348 (= ?x241 ?x298)))))))))
 ))
 (let (($x256 (forall ((input.ind-%var2206X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2206X) (bvult input.ind-%var2206X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2206X)))
 (= $x348 $x248))))
 ))
 (let (($x257 (and $x256 $x130)))
 (let (($x117 (= $x257 true)))
 (let (($x200 (forall ((input.ind-%var2197X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2197X (_ bv4 32))))
 (let ((?x313 (bvadd ?x112 input.dst.llvm-%m1)))
 (let ((?x310 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x313))))
 (let ((?x62 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv2 32))) ?x310)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv3 32))) ?x62)))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2197X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2197X)))
 (=> $x267 (= ?x279 ?x75))))))))))
 ))
 (let (($x293 (forall ((input.ind-%var2196X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2196X) (bvult input.ind-%var2196X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2196X)))
 (= $x267 $x248))))
 ))
 (let (($x332 (and $x293 $x200)))
 (let (($x170 (= $x332 true)))
 (let (($x375 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x373 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x376 (and $x373 $x375)))
 (let (($x377 (= $x376 true)))
 (let ((?x107 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x180 (bvneg ?x107)))
 (let (($x367 (= ?x180 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x366 (= $x367 true)))
 (let (($x58 (= ?x180 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x306 (= $x58 true)))
 (let (($x89 (forall ((input.ind-%var2187X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2187X (_ bv4 32))))
 (let ((?x9 (bvadd ?x112 input.dst.llvm-%m2)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x9))))
 (let ((?x358 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x9 (_ bv2 32))) ?x233)))
 (let ((?x110 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x9 (_ bv3 32))) ?x358)))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2187X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2187X)))
 (=> $x348 (= ?x241 ?x110))))))))))
 ))
 (let (($x301 (forall ((input.ind-%var2186X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2186X) (bvult input.ind-%var2186X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2186X)))
 (= $x348 $x248))))
 ))
 (let (($x359 (and $x301 $x89)))
 (let (($x354 (= $x359 true)))
 (let (($x216 (forall ((input.ind-%var2177X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2177X (_ bv4 32))))
 (let ((?x313 (bvadd ?x112 input.dst.llvm-%m1)))
 (let ((?x252 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x313))))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x313 (_ bv2 32))) ?x252)))
 (let ((?x215 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x313 (_ bv3 32))) ?x52)))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2177X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2177X)))
 (=> $x267 (= ?x279 ?x215))))))))))
 ))
 (let (($x51 (forall ((input.ind-%var2176X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2176X) (bvult input.ind-%var2176X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2176X)))
 (= $x267 $x248))))
 ))
 (let (($x222 (and $x51 $x216)))
 (let (($x68 (= $x222 true)))
 (let (($x264 (forall ((input.ind-%var2167X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2167X (_ bv4 32))))
 (let ((?x9 (bvadd ?x112 input.dst.llvm-%m2)))
 (let ((?x275 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x9))))
 (let ((?x331 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x9 (_ bv2 32))) ?x275)))
 (let ((?x322 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x9 (_ bv3 32))) ?x331)))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2167X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2167X)))
 (=> $x348 (= ?x241 ?x322))))))))))
 ))
 (let (($x294 (forall ((input.ind-%var2166X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2166X) (bvult input.ind-%var2166X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2166X)))
 (= $x348 $x248))))
 ))
 (let (($x154 (and $x294 $x264)))
 (let (($x263 (= $x154 true)))
 (let (($x259 (and $x263 $x68)))
 (let (($x27 (and $x259 $x354)))
 (let (($x371 (and $x27 $x306)))
 (let (($x368 (and $x371 $x366)))
 (let (($x378 (and $x368 $x377)))
 (let (($x63 (and $x378 $x170)))
 (let (($x186 (and $x63 $x117)))
 (let (($x90 (and $x186 $x25)))
 (let (($x386 (and $x90 $x385)))
 (let (($x391 (and $x386 $x390)))
 (let (($x127 (forall ((input.ind-%var2227X (_ BitVec 32)) )(let ((?x15 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2227X)))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2227X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2227X)))
 (=> $x267 (= ?x279 ?x15))))))
 ))
 (let (($x35 (forall ((input.ind-%var2226X (_ BitVec 32)) )(let (($x56 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2226X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2226X)))
 (= $x267 $x56))))
 ))
 (let (($x333 (and $x35 $x127)))
 (let (($x392 (and $x333 $x391)))
 (let (($x105 (forall ((input.ind-%var2237X (_ BitVec 32)) )(let ((?x44 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2237X)))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2237X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2237X)))
 (=> $x348 (= ?x241 ?x44))))))
 ))
 (let (($x276 (forall ((input.ind-%var2236X (_ BitVec 32)) )(let (($x43 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2236X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2236X)))
 (= $x348 $x43))))
 ))
 (let (($x102 (and $x276 $x105)))
 (let (($x393 (and $x102 $x392)))
 (let (($x396 (=> $x393 $x395)))
 (not $x396))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x389 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x394 (=> $x389 true)))
 (let (($x395 (= $x394 true)))
 (let (($x390 (= $x389 true)))
 (let (($x85 (forall ((input.ind-%var2217X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2217X (_ bv4 32))))
 (let ((?x313 (bvadd ?x112 input.dst.llvm-%m1)))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x347))))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2217X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2217X)))
 (=> $x267 (= ?x279 ?x270)))))))))
 ))
 (let (($x339 (forall ((input.ind-%var2216X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2216X) (bvult input.ind-%var2216X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2216X)))
 (= $x267 $x248))))
 ))
 (let (($x384 (and $x339 $x85)))
 (let (($x385 (= $x384 true)))
 (let ((?x247 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x338 (= (_ bv0 32) ?x247)))
 (let ((?x320 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x318 (= (_ bv0 32) ?x320)))
 (let ((?x92 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x96 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x92)))
 (let ((?x327 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x328 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x327)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x329 (and $x192 $x328)))
 (let (($x210 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x210 $x329)))
 (let (($x152 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x185 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x229 (and $x185 $x74)))
 (let (($x351 (not $x229)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x266 (and $x101 $x269)))
 (let (($x268 (and (not $x266) $x351)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x136 $x119)))
 (let (($x17 (not $x65)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x141 $x54)))
 (let (($x124 (and (not $x174) $x17)))
 (let (($x330 (and (and (and (and (and (and $x124 $x268) $x240) $x152) $x146) $x96) $x318)))
 (let (($x319 (and $x330 $x338)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x6 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x6)))
 (let (($x155 (or false (or false (and (and true (or $x7 $x207)) (or $x139 $x8))))))
 (let (($x258 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x155)))
 (let (($x32 (and $x258 $x319)))
 (let (($x25 (= $x32 true)))
 (let (($x130 (forall ((input.ind-%var2207X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2207X (_ bv4 32))))
 (let ((?x9 (bvadd ?x112 input.dst.llvm-%m2)))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x61))))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2207X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2207X)))
 (=> $x348 (= ?x241 ?x298)))))))))
 ))
 (let (($x256 (forall ((input.ind-%var2206X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2206X) (bvult input.ind-%var2206X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2206X)))
 (= $x348 $x248))))
 ))
 (let (($x257 (and $x256 $x130)))
 (let (($x117 (= $x257 true)))
 (let (($x200 (forall ((input.ind-%var2197X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2197X (_ bv4 32))))
 (let ((?x313 (bvadd ?x112 input.dst.llvm-%m1)))
 (let ((?x310 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x313))))
 (let ((?x62 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv2 32))) ?x310)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x313 (_ bv3 32))) ?x62)))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2197X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2197X)))
 (=> $x267 (= ?x279 ?x75))))))))))
 ))
 (let (($x293 (forall ((input.ind-%var2196X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2196X) (bvult input.ind-%var2196X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2196X)))
 (= $x267 $x248))))
 ))
 (let (($x332 (and $x293 $x200)))
 (let (($x170 (= $x332 true)))
 (let (($x375 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x373 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x376 (and $x373 $x375)))
 (let (($x377 (= $x376 true)))
 (let ((?x107 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x180 (bvneg ?x107)))
 (let (($x367 (= ?x180 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x366 (= $x367 true)))
 (let (($x58 (= ?x180 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x306 (= $x58 true)))
 (let (($x89 (forall ((input.ind-%var2187X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2187X (_ bv4 32))))
 (let ((?x9 (bvadd ?x112 input.dst.llvm-%m2)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x9))))
 (let ((?x358 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x9 (_ bv2 32))) ?x233)))
 (let ((?x110 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x9 (_ bv3 32))) ?x358)))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2187X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2187X)))
 (=> $x348 (= ?x241 ?x110))))))))))
 ))
 (let (($x301 (forall ((input.ind-%var2186X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2186X) (bvult input.ind-%var2186X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2186X)))
 (= $x348 $x248))))
 ))
 (let (($x359 (and $x301 $x89)))
 (let (($x354 (= $x359 true)))
 (let (($x216 (forall ((input.ind-%var2177X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2177X (_ bv4 32))))
 (let ((?x313 (bvadd ?x112 input.dst.llvm-%m1)))
 (let ((?x252 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x313))))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x313 (_ bv2 32))) ?x252)))
 (let ((?x215 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x313 (_ bv3 32))) ?x52)))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2177X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2177X)))
 (=> $x267 (= ?x279 ?x215))))))))))
 ))
 (let (($x51 (forall ((input.ind-%var2176X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2176X) (bvult input.ind-%var2176X (_ bv100 32)))))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2176X)))
 (= $x267 $x248))))
 ))
 (let (($x222 (and $x51 $x216)))
 (let (($x68 (= $x222 true)))
 (let (($x264 (forall ((input.ind-%var2167X (_ BitVec 32)) )(let ((?x112 (bvmul input.ind-%var2167X (_ bv4 32))))
 (let ((?x9 (bvadd ?x112 input.dst.llvm-%m2)))
 (let ((?x275 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x9))))
 (let ((?x331 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x9 (_ bv2 32))) ?x275)))
 (let ((?x322 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x9 (_ bv3 32))) ?x331)))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2167X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2167X)))
 (=> $x348 (= ?x241 ?x322))))))))))
 ))
 (let (($x294 (forall ((input.ind-%var2166X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2166X) (bvult input.ind-%var2166X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2166X)))
 (= $x348 $x248))))
 ))
 (let (($x154 (and $x294 $x264)))
 (let (($x263 (= $x154 true)))
 (let (($x259 (and $x263 $x68)))
 (let (($x27 (and $x259 $x354)))
 (let (($x371 (and $x27 $x306)))
 (let (($x368 (and $x371 $x366)))
 (let (($x378 (and $x368 $x377)))
 (let (($x63 (and $x378 $x170)))
 (let (($x186 (and $x63 $x117)))
 (let (($x90 (and $x186 $x25)))
 (let (($x386 (and $x90 $x385)))
 (let (($x391 (and $x386 $x390)))
 (let (($x127 (forall ((input.ind-%var2227X (_ BitVec 32)) )(let ((?x15 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2227X)))
 (let ((?x279 (input.spec-%var-m1-1.1.1 input.ind-%var2227X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2227X)))
 (=> $x267 (= ?x279 ?x15))))))
 ))
 (let (($x35 (forall ((input.ind-%var2226X (_ BitVec 32)) )(let (($x56 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2226X)))
 (let (($x267 (input.spec-%var-m1-1.0.1 input.ind-%var2226X)))
 (= $x267 $x56))))
 ))
 (let (($x333 (and $x35 $x127)))
 (let (($x392 (and $x333 $x391)))
 (let (($x105 (forall ((input.ind-%var2237X (_ BitVec 32)) )(let ((?x44 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2237X)))
 (let ((?x241 (input.spec-%var-m2-1.1.1 input.ind-%var2237X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2237X)))
 (=> $x348 (= ?x241 ?x44))))))
 ))
 (let (($x276 (forall ((input.ind-%var2236X (_ BitVec 32)) )(let (($x43 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2236X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2236X)))
 (= $x348 $x43))))
 ))
 (let (($x102 (and $x276 $x105)))
 (let (($x393 (and $x102 $x392)))
 (let (($x396 (=> $x393 $x395)))
 (not $x396))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x399 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x400 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x399)))
 (let ((?x135 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x398 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x135)))
 (let (($x401 (= ?x398 ?x400)))
 (let (($x402 (= $x401 true)))
 (let ((?x38 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x292 (bvneg ?x38)))
 (let (($x344 (= ?x292 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x144 (= $x344 true)))
 (let (($x204 (= ?x292 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x153 (= $x204 true)))
 (let (($x118 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x320 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x96 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x318 (and $x96 $x320)))
 (let (($x341 (and $x318 $x118)))
 (let (($x314 (= $x341 true)))
 (let (($x166 (= $x118 true)))
 (let (($x364 (forall ((input.ind-%var2297X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2297X (_ bv4 32))))
 (let ((?x130 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x283))))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2297X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2297X)))
 (=> $x33 (= ?x231 ?x365)))))))))
 ))
 (let (($x321 (forall ((input.ind-%var2296X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2296X) (bvult input.ind-%var2296X (_ bv100 32)))))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2296X)))
 (= $x33 $x126))))
 ))
 (let (($x342 (and $x321 $x364)))
 (let (($x10 (= $x342 true)))
 (let ((?x234 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x274 (= (_ bv0 32) ?x234)))
 (let ((?x171 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x189 (= (_ bv0 32) ?x171)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x55)))
 (let ((?x379 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x381 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x379)))
 (let (($x280 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x382 (and $x280 $x381)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x254 (and $x109 $x382)))
 (let (($x187 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x357 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x316 (and $x60 $x198)))
 (let (($x214 (not $x316)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x273 (and $x167 $x183)))
 (let (($x21 (and (not $x273) $x214)))
 (let (($x350 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x175 (and $x37 $x350)))
 (let (($x349 (not $x175)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x178 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x285 (and $x178 $x158)))
 (let (($x36 (and (not $x285) $x349)))
 (let (($x380 (and (and (and (and (and (and $x36 $x21) $x357) $x187) $x254) $x99) $x189)))
 (let (($x383 (and $x380 $x274)))
 (let (($x260 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x160 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x315 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x160)))
 (let (($x84 (or false (or false (and (and true (or $x272 $x315)) (or $x159 $x260))))))
 (let (($x311 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x84)))
 (let (($x271 (and $x311 $x383)))
 (let (($x297 (= $x271 true)))
 (let (($x223 (forall ((input.ind-%var2287X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2287X (_ bv4 32))))
 (let ((?x228 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x120))))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2287X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2287X)))
 (=> $x348 (= ?x34 ?x122)))))))))
 ))
 (let (($x47 (forall ((input.ind-%var2286X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2286X) (bvult input.ind-%var2286X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2286X)))
 (= $x348 $x126))))
 ))
 (let (($x287 (and $x47 $x223)))
 (let (($x253 (= $x287 true)))
 (let (($x72 (forall ((input.ind-%var2277X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2277X (_ bv4 32))))
 (let ((?x130 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x394 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x130))))
 (let ((?x396 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv2 32))) ?x394)))
 (let ((?x151 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv3 32))) ?x396)))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2277X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2277X)))
 (=> $x33 (= ?x231 ?x151))))))))))
 ))
 (let (($x312 (forall ((input.ind-%var2276X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2276X) (bvult input.ind-%var2276X (_ bv100 32)))))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2276X)))
 (= $x33 $x126))))
 ))
 (let (($x227 (and $x312 $x72)))
 (let (($x41 (= $x227 true)))
 (let (($x330 (= $x318 true)))
 (let (($x327 (forall ((input.ind-%var2267X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2267X (_ bv4 32))))
 (let ((?x228 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x240 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x228))))
 (let ((?x326 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x228 (_ bv2 32))) ?x240)))
 (let ((?x100 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x228 (_ bv3 32))) ?x326)))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2267X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2267X)))
 (=> $x348 (= ?x34 ?x100))))))))))
 ))
 (let (($x141 (forall ((input.ind-%var2266X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2266X) (bvult input.ind-%var2266X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2266X)))
 (= $x348 $x126))))
 ))
 (let (($x328 (and $x141 $x327)))
 (let (($x329 (= $x328 true)))
 (let (($x307 (forall ((input.ind-%var2257X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2257X (_ bv4 32))))
 (let ((?x130 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x308 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x130))))
 (let ((?x282 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x130 (_ bv2 32))) ?x308)))
 (let ((?x42 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x130 (_ bv3 32))) ?x282)))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2257X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2257X)))
 (=> $x33 (= ?x231 ?x42))))))))))
 ))
 (let (($x310 (forall ((input.ind-%var2256X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2256X) (bvult input.ind-%var2256X (_ bv100 32)))))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2256X)))
 (= $x33 $x126))))
 ))
 (let (($x145 (and $x310 $x307)))
 (let (($x139 (= $x145 true)))
 (let (($x374 (forall ((input.ind-%var2247X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2247X (_ bv4 32))))
 (let ((?x228 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x58 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x228))))
 (let ((?x367 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x228 (_ bv2 32))) ?x58)))
 (let ((?x370 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x228 (_ bv3 32))) ?x367)))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2247X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2247X)))
 (=> $x348 (= ?x34 ?x370))))))))))
 ))
 (let (($x217 (forall ((input.ind-%var2246X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2246X) (bvult input.ind-%var2246X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2246X)))
 (= $x348 $x126))))
 ))
 (let (($x375 (and $x217 $x374)))
 (let (($x376 (= $x375 true)))
 (let (($x201 (and $x376 $x139)))
 (let (($x146 (and $x201 $x329)))
 (let (($x247 (and $x146 $x330)))
 (let (($x251 (and $x247 $x41)))
 (let (($x161 (and $x251 $x253)))
 (let (($x83 (and $x161 $x297)))
 (let (($x324 (and $x83 $x10)))
 (let (($x340 (and $x324 $x166)))
 (let (($x108 (and $x340 $x314)))
 (let (($x219 (and $x108 $x153)))
 (let (($x98 (and $x219 $x144)))
 (let (($x190 (forall ((input.ind-%var2307X (_ BitVec 32)) )(let ((?x77 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2307X)))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2307X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2307X)))
 (=> $x33 (= ?x231 ?x77))))))
 ))
 (let (($x76 (forall ((input.ind-%var2306X (_ BitVec 32)) )(let (($x48 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2306X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2306X)))
 (= $x33 $x48))))
 ))
 (let (($x57 (and $x76 $x190)))
 (let (($x177 (and $x57 $x98)))
 (let (($x288 (forall ((input.ind-%var2317X (_ BitVec 32)) )(let ((?x15 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2317X)))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2317X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2317X)))
 (=> $x348 (= ?x34 ?x15))))))
 ))
 (let (($x18 (forall ((input.ind-%var2316X (_ BitVec 32)) )(let (($x241 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2316X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2316X)))
 (= $x348 $x241))))
 ))
 (let (($x81 (and $x18 $x288)))
 (let (($x168 (and $x81 $x177)))
 (let (($x403 (=> $x168 $x402)))
 (not $x403)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x399 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x400 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x399)))
 (let ((?x135 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x398 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x135)))
 (let (($x401 (= ?x398 ?x400)))
 (let (($x402 (= $x401 true)))
 (let ((?x38 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x292 (bvneg ?x38)))
 (let (($x344 (= ?x292 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x144 (= $x344 true)))
 (let (($x204 (= ?x292 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x153 (= $x204 true)))
 (let (($x118 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x320 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x96 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x318 (and $x96 $x320)))
 (let (($x341 (and $x318 $x118)))
 (let (($x314 (= $x341 true)))
 (let (($x166 (= $x118 true)))
 (let (($x364 (forall ((input.ind-%var2297X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2297X (_ bv4 32))))
 (let ((?x130 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x283))))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2297X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2297X)))
 (=> $x33 (= ?x231 ?x365)))))))))
 ))
 (let (($x321 (forall ((input.ind-%var2296X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2296X) (bvult input.ind-%var2296X (_ bv100 32)))))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2296X)))
 (= $x33 $x126))))
 ))
 (let (($x342 (and $x321 $x364)))
 (let (($x10 (= $x342 true)))
 (let ((?x234 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x274 (= (_ bv0 32) ?x234)))
 (let ((?x171 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x189 (= (_ bv0 32) ?x171)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x55)))
 (let ((?x379 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x381 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x379)))
 (let (($x280 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x382 (and $x280 $x381)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x254 (and $x109 $x382)))
 (let (($x187 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x357 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x316 (and $x60 $x198)))
 (let (($x214 (not $x316)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x273 (and $x167 $x183)))
 (let (($x21 (and (not $x273) $x214)))
 (let (($x350 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x175 (and $x37 $x350)))
 (let (($x349 (not $x175)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x178 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x285 (and $x178 $x158)))
 (let (($x36 (and (not $x285) $x349)))
 (let (($x380 (and (and (and (and (and (and $x36 $x21) $x357) $x187) $x254) $x99) $x189)))
 (let (($x383 (and $x380 $x274)))
 (let (($x260 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x160 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x315 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x160)))
 (let (($x84 (or false (or false (and (and true (or $x272 $x315)) (or $x159 $x260))))))
 (let (($x311 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x84)))
 (let (($x271 (and $x311 $x383)))
 (let (($x297 (= $x271 true)))
 (let (($x223 (forall ((input.ind-%var2287X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2287X (_ bv4 32))))
 (let ((?x228 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x120))))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2287X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2287X)))
 (=> $x348 (= ?x34 ?x122)))))))))
 ))
 (let (($x47 (forall ((input.ind-%var2286X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2286X) (bvult input.ind-%var2286X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2286X)))
 (= $x348 $x126))))
 ))
 (let (($x287 (and $x47 $x223)))
 (let (($x253 (= $x287 true)))
 (let (($x72 (forall ((input.ind-%var2277X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2277X (_ bv4 32))))
 (let ((?x130 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x394 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x130))))
 (let ((?x396 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv2 32))) ?x394)))
 (let ((?x151 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv3 32))) ?x396)))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2277X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2277X)))
 (=> $x33 (= ?x231 ?x151))))))))))
 ))
 (let (($x312 (forall ((input.ind-%var2276X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2276X) (bvult input.ind-%var2276X (_ bv100 32)))))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2276X)))
 (= $x33 $x126))))
 ))
 (let (($x227 (and $x312 $x72)))
 (let (($x41 (= $x227 true)))
 (let (($x330 (= $x318 true)))
 (let (($x327 (forall ((input.ind-%var2267X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2267X (_ bv4 32))))
 (let ((?x228 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x240 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x228))))
 (let ((?x326 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x228 (_ bv2 32))) ?x240)))
 (let ((?x100 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x228 (_ bv3 32))) ?x326)))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2267X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2267X)))
 (=> $x348 (= ?x34 ?x100))))))))))
 ))
 (let (($x141 (forall ((input.ind-%var2266X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2266X) (bvult input.ind-%var2266X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2266X)))
 (= $x348 $x126))))
 ))
 (let (($x328 (and $x141 $x327)))
 (let (($x329 (= $x328 true)))
 (let (($x307 (forall ((input.ind-%var2257X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2257X (_ bv4 32))))
 (let ((?x130 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x308 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x130))))
 (let ((?x282 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x130 (_ bv2 32))) ?x308)))
 (let ((?x42 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x130 (_ bv3 32))) ?x282)))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2257X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2257X)))
 (=> $x33 (= ?x231 ?x42))))))))))
 ))
 (let (($x310 (forall ((input.ind-%var2256X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2256X) (bvult input.ind-%var2256X (_ bv100 32)))))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2256X)))
 (= $x33 $x126))))
 ))
 (let (($x145 (and $x310 $x307)))
 (let (($x139 (= $x145 true)))
 (let (($x374 (forall ((input.ind-%var2247X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var2247X (_ bv4 32))))
 (let ((?x228 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x58 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x228))))
 (let ((?x367 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x228 (_ bv2 32))) ?x58)))
 (let ((?x370 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x228 (_ bv3 32))) ?x367)))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2247X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2247X)))
 (=> $x348 (= ?x34 ?x370))))))))))
 ))
 (let (($x217 (forall ((input.ind-%var2246X (_ BitVec 32)) )(let (($x126 (and (bvule (_ bv0 32) input.ind-%var2246X) (bvult input.ind-%var2246X (_ bv100 32)))))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2246X)))
 (= $x348 $x126))))
 ))
 (let (($x375 (and $x217 $x374)))
 (let (($x376 (= $x375 true)))
 (let (($x201 (and $x376 $x139)))
 (let (($x146 (and $x201 $x329)))
 (let (($x247 (and $x146 $x330)))
 (let (($x251 (and $x247 $x41)))
 (let (($x161 (and $x251 $x253)))
 (let (($x83 (and $x161 $x297)))
 (let (($x324 (and $x83 $x10)))
 (let (($x340 (and $x324 $x166)))
 (let (($x108 (and $x340 $x314)))
 (let (($x219 (and $x108 $x153)))
 (let (($x98 (and $x219 $x144)))
 (let (($x190 (forall ((input.ind-%var2307X (_ BitVec 32)) )(let ((?x77 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2307X)))
 (let ((?x231 (input.spec-%var-m1-1.1.1 input.ind-%var2307X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2307X)))
 (=> $x33 (= ?x231 ?x77))))))
 ))
 (let (($x76 (forall ((input.ind-%var2306X (_ BitVec 32)) )(let (($x48 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2306X)))
 (let (($x33 (input.spec-%var-m1-1.0.1 input.ind-%var2306X)))
 (= $x33 $x48))))
 ))
 (let (($x57 (and $x76 $x190)))
 (let (($x177 (and $x57 $x98)))
 (let (($x288 (forall ((input.ind-%var2317X (_ BitVec 32)) )(let ((?x15 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2317X)))
 (let ((?x34 (input.spec-%var-m2-1.1.1 input.ind-%var2317X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2317X)))
 (=> $x348 (= ?x34 ?x15))))))
 ))
 (let (($x18 (forall ((input.ind-%var2316X (_ BitVec 32)) )(let (($x241 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2316X)))
 (let (($x348 (input.spec-%var-m2-1.0.1 input.ind-%var2316X)))
 (= $x348 $x241))))
 ))
 (let (($x81 (and $x18 $x288)))
 (let (($x168 (and $x81 $x177)))
 (let (($x403 (=> $x168 $x402)))
 (not $x403)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x357 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x357)))
 (let ((?x148 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x148)))
 (let ((?x214 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x214)))
 (let ((?x188 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x188)))
 (let (($x273 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x198 (and $x273 $x60)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x316 (and $x183 $x198)))
 (let (($x167 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x349 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x178 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x285 (and $x178 $x158)))
 (let (($x14 (not $x285)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x311 (and $x156 $x84)))
 (let (($x350 (and (not $x311) $x14)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x255 (and $x245 $x159)))
 (let (($x260 (not $x255)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x315 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (and $x315 $x70)))
 (let (($x40 (and (not $x277) $x260)))
 (let (($x379 (and (and (and (and (and (and $x40 $x350) $x349) $x167) $x316) $x21) $x197)))
 (let (($x381 (and $x379 $x232)))
 (let (($x332 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x139 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x139)))
 (let (($x328 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x139)))
 (let (($x145 (or false (or false (and (and true (or $x141 $x328)) (or $x69 $x332))))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x145)))
 (let (($x86 (and $x146 $x381)))
 (let (($x216 (= $x86 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x168 (concat ?x177 (concat ?x344 (concat ?x153 ?x94)))))
 (let (($x246 (= ?x168 input.dst.llvm-%m1)))
 (let (($x172 (= $x246 true)))
 (let ((?x399 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x401 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x404 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x35 (concat ?x43 (concat ?x404 (concat ?x401 ?x399)))))
 (let (($x67 (= ?x35 input.dst.llvm-%m2)))
 (let (($x239 (= $x67 true)))
 (let (($x294 (= input.dst.llvm-%m2 ?x35)))
 (let (($x135 (= input.dst.llvm-%m1 ?x168)))
 (let (($x372 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x376 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x373 (and $x376 $x372)))
 (let (($x112 (and (and $x373 $x135) $x294)))
 (let (($x121 (forall ((input.ind-%var2337X (_ BitVec 32)) )(let ((?x120 (bvmul input.ind-%var2337X (_ bv4 32))))
 (let ((?x364 (bvadd ?x120 input.dst.llvm-%m1)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x115))))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var2337X)))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2337X)))
 (=> $x368 (= ?x116 ?x314)))))))))
 ))
 (let (($x189 (forall ((input.ind-%var2336X (_ BitVec 32)) )(let (($x282 (and (bvule (_ bv0 32) input.ind-%var2336X) (bvult input.ind-%var2336X (_ bv100 32)))))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2336X)))
 (= $x368 $x282))))
 ))
 (let (($x38 (and $x189 $x121)))
 (let (($x236 (and $x38 $x112)))
 (let (($x272 (forall ((input.ind-%var2327X (_ BitVec 32)) )(let ((?x120 (bvmul input.ind-%var2327X (_ bv4 32))))
 (let ((?x163 (bvadd ?x120 input.dst.llvm-%m2)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x223))))
 (let ((?x33 (input.spec-%var-m2-1.1.1 input.ind-%var2327X)))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2327X)))
 (=> $x142 (= ?x33 ?x140)))))))))
 ))
 (let (($x111 (forall ((input.ind-%var2326X (_ BitVec 32)) )(let (($x282 (and (bvule (_ bv0 32) input.ind-%var2326X) (bvult input.ind-%var2326X (_ bv100 32)))))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2326X)))
 (= $x142 $x282))))
 ))
 (let (($x129 (and $x111 $x272)))
 (let (($x286 (and (and (and $x146 $x129) $x381) $x236)))
 (let (($x284 (= $x286 true)))
 (let (($x374 (= $x373 true)))
 (let (($x19 (and $x374 $x284)))
 (let (($x248 (and $x19 $x239)))
 (let (($x252 (and $x248 $x172)))
 (let (($x218 (forall ((input.ind-%var2347X (_ BitVec 32)) )(let ((?x217 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2347X)))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var2347X)))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2347X)))
 (=> $x368 (= ?x116 ?x217))))))
 ))
 (let (($x107 (forall ((input.ind-%var2346X (_ BitVec 32)) )(let (($x371 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2346X)))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2346X)))
 (= $x368 $x371))))
 ))
 (let (($x51 (and $x107 $x218)))
 (let (($x264 (and $x51 $x252)))
 (let (($x318 (forall ((input.ind-%var2357X (_ BitVec 32)) )(let ((?x331 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2357X)))
 (let ((?x33 (input.spec-%var-m2-1.1.1 input.ind-%var2357X)))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2357X)))
 (=> $x142 (= ?x33 ?x331))))))
 ))
 (let (($x333 (forall ((input.ind-%var2356X (_ BitVec 32)) )(let (($x18 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2356X)))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2356X)))
 (= $x142 $x18))))
 ))
 (let (($x222 (and $x333 $x318)))
 (let (($x250 (and $x222 $x264)))
 (let (($x68 (=> $x250 $x216)))
 (not $x68)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x357 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x357)))
 (let ((?x148 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x148)))
 (let ((?x214 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x214)))
 (let ((?x188 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x188)))
 (let (($x273 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x198 (and $x273 $x60)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x316 (and $x183 $x198)))
 (let (($x167 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x349 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x178 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x285 (and $x178 $x158)))
 (let (($x14 (not $x285)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x311 (and $x156 $x84)))
 (let (($x350 (and (not $x311) $x14)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x255 (and $x245 $x159)))
 (let (($x260 (not $x255)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x315 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (and $x315 $x70)))
 (let (($x40 (and (not $x277) $x260)))
 (let (($x379 (and (and (and (and (and (and $x40 $x350) $x349) $x167) $x316) $x21) $x197)))
 (let (($x381 (and $x379 $x232)))
 (let (($x332 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x139 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x139)))
 (let (($x328 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x139)))
 (let (($x145 (or false (or false (and (and true (or $x141 $x328)) (or $x69 $x332))))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x145)))
 (let (($x86 (and $x146 $x381)))
 (let (($x216 (= $x86 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x168 (concat ?x177 (concat ?x344 (concat ?x153 ?x94)))))
 (let (($x246 (= ?x168 input.dst.llvm-%m1)))
 (let (($x172 (= $x246 true)))
 (let ((?x399 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x401 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x404 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x35 (concat ?x43 (concat ?x404 (concat ?x401 ?x399)))))
 (let (($x67 (= ?x35 input.dst.llvm-%m2)))
 (let (($x239 (= $x67 true)))
 (let (($x294 (= input.dst.llvm-%m2 ?x35)))
 (let (($x135 (= input.dst.llvm-%m1 ?x168)))
 (let (($x372 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x376 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x373 (and $x376 $x372)))
 (let (($x112 (and (and $x373 $x135) $x294)))
 (let (($x121 (forall ((input.ind-%var2337X (_ BitVec 32)) )(let ((?x120 (bvmul input.ind-%var2337X (_ bv4 32))))
 (let ((?x364 (bvadd ?x120 input.dst.llvm-%m1)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x115))))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var2337X)))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2337X)))
 (=> $x368 (= ?x116 ?x314)))))))))
 ))
 (let (($x189 (forall ((input.ind-%var2336X (_ BitVec 32)) )(let (($x282 (and (bvule (_ bv0 32) input.ind-%var2336X) (bvult input.ind-%var2336X (_ bv100 32)))))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2336X)))
 (= $x368 $x282))))
 ))
 (let (($x38 (and $x189 $x121)))
 (let (($x236 (and $x38 $x112)))
 (let (($x272 (forall ((input.ind-%var2327X (_ BitVec 32)) )(let ((?x120 (bvmul input.ind-%var2327X (_ bv4 32))))
 (let ((?x163 (bvadd ?x120 input.dst.llvm-%m2)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x223))))
 (let ((?x33 (input.spec-%var-m2-1.1.1 input.ind-%var2327X)))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2327X)))
 (=> $x142 (= ?x33 ?x140)))))))))
 ))
 (let (($x111 (forall ((input.ind-%var2326X (_ BitVec 32)) )(let (($x282 (and (bvule (_ bv0 32) input.ind-%var2326X) (bvult input.ind-%var2326X (_ bv100 32)))))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2326X)))
 (= $x142 $x282))))
 ))
 (let (($x129 (and $x111 $x272)))
 (let (($x286 (and (and (and $x146 $x129) $x381) $x236)))
 (let (($x284 (= $x286 true)))
 (let (($x374 (= $x373 true)))
 (let (($x19 (and $x374 $x284)))
 (let (($x248 (and $x19 $x239)))
 (let (($x252 (and $x248 $x172)))
 (let (($x218 (forall ((input.ind-%var2347X (_ BitVec 32)) )(let ((?x217 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2347X)))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var2347X)))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2347X)))
 (=> $x368 (= ?x116 ?x217))))))
 ))
 (let (($x107 (forall ((input.ind-%var2346X (_ BitVec 32)) )(let (($x371 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2346X)))
 (let (($x368 (input.spec-%var-m1-1.0.1 input.ind-%var2346X)))
 (= $x368 $x371))))
 ))
 (let (($x51 (and $x107 $x218)))
 (let (($x264 (and $x51 $x252)))
 (let (($x318 (forall ((input.ind-%var2357X (_ BitVec 32)) )(let ((?x331 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2357X)))
 (let ((?x33 (input.spec-%var-m2-1.1.1 input.ind-%var2357X)))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2357X)))
 (=> $x142 (= ?x33 ?x331))))))
 ))
 (let (($x333 (forall ((input.ind-%var2356X (_ BitVec 32)) )(let (($x18 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2356X)))
 (let (($x142 (input.spec-%var-m2-1.0.1 input.ind-%var2356X)))
 (= $x142 $x18))))
 ))
 (let (($x222 (and $x333 $x318)))
 (let (($x250 (and $x222 $x264)))
 (let (($x68 (=> $x250 $x216)))
 (not $x68)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x76 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x304 (= (_ bv0 2) ?x76)))
 (let (($x352 (= $x304 true)))
 (let ((?x321 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x337 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x302 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x231 (concat ?x302 (concat ?x254 (concat ?x337 ?x321)))))
 (let (($x290 (= ?x231 input.dst.llvm-%m2)))
 (let (($x176 (= $x290 true)))
 (let (($x234 (= input.dst.llvm-%m2 ?x231)))
 (let ((?x207 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x307 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x393 (concat ?x315 (concat ?x156 (concat ?x307 ?x207)))))
 (let (($x193 (= input.dst.llvm-%m1 ?x393)))
 (let (($x253 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x255 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x100 (and $x255 $x253)))
 (let (($x366 (and (and $x100 $x193) $x234)))
 (let (($x143 (forall ((input.ind-%var2377X (_ BitVec 32)) )(let ((?x342 (bvmul input.ind-%var2377X (_ bv4 32))))
 (let ((?x240 (bvadd ?x342 input.dst.llvm-%m1)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x247))))
 (let ((?x370 (input.spec-%var-m1-1.1.1 input.ind-%var2377X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2377X)))
 (=> $x257 (= ?x370 ?x383)))))))))
 ))
 (let (($x306 (forall ((input.ind-%var2376X (_ BitVec 32)) )(let (($x198 (and (bvule (_ bv0 32) input.ind-%var2376X) (bvult input.ind-%var2376X (_ bv100 32)))))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2376X)))
 (= $x257 $x198))))
 ))
 (let (($x237 (and $x306 $x143)))
 (let (($x180 (and $x237 $x366)))
 (let ((?x325 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x157 (= (_ bv0 32) ?x325)))
 (let ((?x216 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x68 (= (_ bv0 32) ?x216)))
 (let ((?x250 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x250)))
 (let ((?x246 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x246)))
 (let (($x248 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x252 (and $x248 $x172)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x264 (and $x239 $x252)))
 (let (($x67 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x294 (and $x215 $x35)))
 (let (($x112 (not $x294)))
 (let (($x399 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x401 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x402 (and $x401 $x399)))
 (let (($x286 (and (not $x402) $x112)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x360 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x360 $x11)))
 (let (($x403 (not $x43)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (and $x144 $x168)))
 (let (($x400 (and (not $x135) $x403)))
 (let (($x205 (and (and (and (and (and (and $x400 $x286) $x19) $x67) $x264) $x86) $x68)))
 (let (($x9 (and $x205 $x157)))
 (let (($x94 (forall ((input.ind-%var2367X (_ BitVec 32)) )(let ((?x342 (bvmul input.ind-%var2367X (_ bv4 32))))
 (let ((?x115 (bvadd ?x342 input.dst.llvm-%m2)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x212))))
 (let ((?x368 (input.spec-%var-m2-1.1.1 input.ind-%var2367X)))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2367X)))
 (=> $x15 (= ?x368 ?x344)))))))))
 ))
 (let (($x109 (forall ((input.ind-%var2366X (_ BitVec 32)) )(let (($x198 (and (bvule (_ bv0 32) input.ind-%var2366X) (bvult input.ind-%var2366X (_ bv100 32)))))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2366X)))
 (= $x15 $x198))))
 ))
 (let (($x219 (and $x109 $x94)))
 (let (($x285 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x397 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x397)))
 (let (($x70 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x397)))
 (let (($x175 (or false (or false (and (and true (or $x120 $x70)) (or $x37 $x285))))))
 (let (($x187 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x175)))
 (let (($x330 (and (and (and $x187 $x219) $x9) $x180)))
 (let (($x57 (= $x330 true)))
 (let (($x282 (= $x100 true)))
 (let (($x161 (= ?x393 input.dst.llvm-%m1)))
 (let (($x223 (= $x161 true)))
 (let (($x96 (and $x223 $x282)))
 (let (($x81 (and $x96 $x57)))
 (let (($x77 (and $x81 $x176)))
 (let (($x375 (forall ((input.ind-%var2387X (_ BitVec 32)) )(let ((?x372 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2387X)))
 (let ((?x370 (input.spec-%var-m1-1.1.1 input.ind-%var2387X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2387X)))
 (=> $x257 (= ?x370 ?x372))))))
 ))
 (let (($x192 (forall ((input.ind-%var2386X (_ BitVec 32)) )(let (($x201 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2386X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2386X)))
 (= $x257 $x201))))
 ))
 (let (($x23 (and $x192 $x375)))
 (let (($x288 (and $x23 $x77)))
 (let (($x178 (forall ((input.ind-%var2397X (_ BitVec 32)) )(let ((?x263 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2397X)))
 (let ((?x368 (input.spec-%var-m2-1.1.1 input.ind-%var2397X)))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2397X)))
 (=> $x15 (= ?x368 ?x263))))))
 ))
 (let (($x295 (forall ((input.ind-%var2396X (_ BitVec 32)) )(let (($x333 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2396X)))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2396X)))
 (= $x15 $x333))))
 ))
 (let (($x92 (and $x295 $x178)))
 (let (($x34 (and $x92 $x288)))
 (let (($x89 (=> $x34 $x352)))
 (not $x89))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x76 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x304 (= (_ bv0 2) ?x76)))
 (let (($x352 (= $x304 true)))
 (let ((?x321 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x337 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x302 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x231 (concat ?x302 (concat ?x254 (concat ?x337 ?x321)))))
 (let (($x290 (= ?x231 input.dst.llvm-%m2)))
 (let (($x176 (= $x290 true)))
 (let (($x234 (= input.dst.llvm-%m2 ?x231)))
 (let ((?x207 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x307 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x393 (concat ?x315 (concat ?x156 (concat ?x307 ?x207)))))
 (let (($x193 (= input.dst.llvm-%m1 ?x393)))
 (let (($x253 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x255 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x100 (and $x255 $x253)))
 (let (($x366 (and (and $x100 $x193) $x234)))
 (let (($x143 (forall ((input.ind-%var2377X (_ BitVec 32)) )(let ((?x342 (bvmul input.ind-%var2377X (_ bv4 32))))
 (let ((?x240 (bvadd ?x342 input.dst.llvm-%m1)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x247))))
 (let ((?x370 (input.spec-%var-m1-1.1.1 input.ind-%var2377X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2377X)))
 (=> $x257 (= ?x370 ?x383)))))))))
 ))
 (let (($x306 (forall ((input.ind-%var2376X (_ BitVec 32)) )(let (($x198 (and (bvule (_ bv0 32) input.ind-%var2376X) (bvult input.ind-%var2376X (_ bv100 32)))))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2376X)))
 (= $x257 $x198))))
 ))
 (let (($x237 (and $x306 $x143)))
 (let (($x180 (and $x237 $x366)))
 (let ((?x325 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x157 (= (_ bv0 32) ?x325)))
 (let ((?x216 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x68 (= (_ bv0 32) ?x216)))
 (let ((?x250 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x250)))
 (let ((?x246 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x246)))
 (let (($x248 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x252 (and $x248 $x172)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x264 (and $x239 $x252)))
 (let (($x67 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x294 (and $x215 $x35)))
 (let (($x112 (not $x294)))
 (let (($x399 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x401 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x402 (and $x401 $x399)))
 (let (($x286 (and (not $x402) $x112)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x360 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x360 $x11)))
 (let (($x403 (not $x43)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (and $x144 $x168)))
 (let (($x400 (and (not $x135) $x403)))
 (let (($x205 (and (and (and (and (and (and $x400 $x286) $x19) $x67) $x264) $x86) $x68)))
 (let (($x9 (and $x205 $x157)))
 (let (($x94 (forall ((input.ind-%var2367X (_ BitVec 32)) )(let ((?x342 (bvmul input.ind-%var2367X (_ bv4 32))))
 (let ((?x115 (bvadd ?x342 input.dst.llvm-%m2)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x212))))
 (let ((?x368 (input.spec-%var-m2-1.1.1 input.ind-%var2367X)))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2367X)))
 (=> $x15 (= ?x368 ?x344)))))))))
 ))
 (let (($x109 (forall ((input.ind-%var2366X (_ BitVec 32)) )(let (($x198 (and (bvule (_ bv0 32) input.ind-%var2366X) (bvult input.ind-%var2366X (_ bv100 32)))))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2366X)))
 (= $x15 $x198))))
 ))
 (let (($x219 (and $x109 $x94)))
 (let (($x285 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x397 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x397)))
 (let (($x70 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x397)))
 (let (($x175 (or false (or false (and (and true (or $x120 $x70)) (or $x37 $x285))))))
 (let (($x187 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x175)))
 (let (($x330 (and (and (and $x187 $x219) $x9) $x180)))
 (let (($x57 (= $x330 true)))
 (let (($x282 (= $x100 true)))
 (let (($x161 (= ?x393 input.dst.llvm-%m1)))
 (let (($x223 (= $x161 true)))
 (let (($x96 (and $x223 $x282)))
 (let (($x81 (and $x96 $x57)))
 (let (($x77 (and $x81 $x176)))
 (let (($x375 (forall ((input.ind-%var2387X (_ BitVec 32)) )(let ((?x372 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2387X)))
 (let ((?x370 (input.spec-%var-m1-1.1.1 input.ind-%var2387X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2387X)))
 (=> $x257 (= ?x370 ?x372))))))
 ))
 (let (($x192 (forall ((input.ind-%var2386X (_ BitVec 32)) )(let (($x201 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2386X)))
 (let (($x257 (input.spec-%var-m1-1.0.1 input.ind-%var2386X)))
 (= $x257 $x201))))
 ))
 (let (($x23 (and $x192 $x375)))
 (let (($x288 (and $x23 $x77)))
 (let (($x178 (forall ((input.ind-%var2397X (_ BitVec 32)) )(let ((?x263 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2397X)))
 (let ((?x368 (input.spec-%var-m2-1.1.1 input.ind-%var2397X)))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2397X)))
 (=> $x15 (= ?x368 ?x263))))))
 ))
 (let (($x295 (forall ((input.ind-%var2396X (_ BitVec 32)) )(let (($x333 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2396X)))
 (let (($x15 (input.spec-%var-m2-1.0.1 input.ind-%var2396X)))
 (= $x15 $x333))))
 ))
 (let (($x92 (and $x295 $x178)))
 (let (($x34 (and $x92 $x288)))
 (let (($x89 (=> $x34 $x352)))
 (not $x89))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x33 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x111 (= (_ bv0 2) ?x33)))
 (let (($x107 (= $x111 true)))
 (let ((?x227 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x353 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x58 (concat ?x52 (concat ?x353 (concat ?x394 ?x227)))))
 (let (($x51 (= ?x58 input.dst.llvm-%m1)))
 (let (($x222 (= $x51 true)))
 (let ((?x253 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x88 (concat ?x204 (concat ?x96 ?x253)))))
 (let (($x251 (= input.dst.llvm-%m2 ?x72)))
 (let (($x126 (= input.dst.llvm-%m1 ?x58)))
 (let (($x175 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x38 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x397 (and $x38 $x175)))
 (let (($x312 (and (and $x397 $x126) $x251)))
 (let (($x186 (forall ((input.ind-%var2417X (_ BitVec 32)) )(let ((?x325 (bvmul input.ind-%var2417X (_ bv4 32))))
 (let ((?x340 (bvadd ?x325 input.dst.llvm-%m1)))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv1 32))) (select input.dst.llvm-mem ?x340))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv2 32))) ?x273))))
 (let ((?x308 (input.spec-%var-m1-1.1.1 input.ind-%var2417X)))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2417X)))
 (=> $x393 (= ?x308 ?x369)))))))))
 ))
 (let (($x367 (forall ((input.ind-%var2416X (_ BitVec 32)) )(let (($x294 (and (bvule (_ bv0 32) input.ind-%var2416X) (bvult input.ind-%var2416X (_ bv100 32)))))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2416X)))
 (= $x393 $x294))))
 ))
 (let (($x93 (and $x367 $x186)))
 (let (($x335 (and $x93 $x312)))
 (let ((?x352 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x89 (= (_ bv0 32) ?x352)))
 (let ((?x76 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x304 (= (_ bv0 32) ?x76)))
 (let ((?x34 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x34)))
 (let ((?x290 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x290)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x77 (and $x81 $x176)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x288 (and $x57 $x77)))
 (let (($x330 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x366 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x321 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x337 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x194 (and $x337 $x321)))
 (let (($x99 (not $x194)))
 (let (($x254 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x365 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x297 (and $x365 $x254)))
 (let (($x234 (and (not $x297) $x99)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x143 $x237)))
 (let (($x296 (not $x193)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x383 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x283 (and $x383 $x271)))
 (let (($x302 (and (not $x283) $x296)))
 (let (($x18 (and (and (and (and (and (and $x302 $x234) $x366) $x330) $x288) $x6) $x304)))
 (let (($x371 (and $x18 $x89)))
 (let (($x247 (forall ((input.ind-%var2407X (_ BitVec 32)) )(let ((?x325 (bvmul input.ind-%var2407X (_ bv4 32))))
 (let ((?x157 (bvadd ?x325 input.dst.llvm-%m2)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x306))))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var2407X)))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2407X)))
 (=> $x331 (= ?x257 ?x24)))))))))
 ))
 (let (($x286 (forall ((input.ind-%var2406X (_ BitVec 32)) )(let (($x294 (and (bvule (_ bv0 32) input.ind-%var2406X) (bvult input.ind-%var2406X (_ bv100 32)))))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2406X)))
 (= $x331 $x294))))
 ))
 (let (($x382 (and $x286 $x247)))
 (let (($x168 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x220 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x220)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x220)))
 (let (($x11 (or false (or false (and (and true (or $x84 $x121)) (or $x219 $x168))))))
 (let (($x403 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x11)))
 (let (($x218 (and (and (and $x403 $x382) $x371) $x335)))
 (let (($x327 (= $x218 true)))
 (let (($x120 (= $x397 true)))
 (let (($x198 (= ?x72 input.dst.llvm-%m2)))
 (let (($x188 (= $x198 true)))
 (let (($x47 (and $x188 $x120)))
 (let (($x158 (and $x47 $x327)))
 (let (($x376 (and $x158 $x222)))
 (let (($x146 (forall ((input.ind-%var2427X (_ BitVec 32)) )(let ((?x287 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2427X)))
 (let ((?x308 (input.spec-%var-m1-1.1.1 input.ind-%var2427X)))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2427X)))
 (=> $x393 (= ?x308 ?x287))))))
 ))
 (let (($x277 (forall ((input.ind-%var2426X (_ BitVec 32)) )(let (($x223 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2426X)))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2426X)))
 (= $x393 $x223))))
 ))
 (let (($x129 (and $x277 $x146)))
 (let (($x395 (and $x129 $x376)))
 (let (($x190 (forall ((input.ind-%var2437X (_ BitVec 32)) )(let ((?x230 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2437X)))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var2437X)))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2437X)))
 (=> $x331 (= ?x257 ?x230))))))
 ))
 (let (($x272 (forall ((input.ind-%var2436X (_ BitVec 32)) )(let (($x295 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2436X)))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2436X)))
 (= $x331 $x295))))
 ))
 (let (($x307 (and $x272 $x190)))
 (let (($x217 (and $x307 $x395)))
 (let (($x160 (=> $x217 $x107)))
 (not $x160))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x33 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x111 (= (_ bv0 2) ?x33)))
 (let (($x107 (= $x111 true)))
 (let ((?x227 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x353 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x58 (concat ?x52 (concat ?x353 (concat ?x394 ?x227)))))
 (let (($x51 (= ?x58 input.dst.llvm-%m1)))
 (let (($x222 (= $x51 true)))
 (let ((?x253 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x88 (concat ?x204 (concat ?x96 ?x253)))))
 (let (($x251 (= input.dst.llvm-%m2 ?x72)))
 (let (($x126 (= input.dst.llvm-%m1 ?x58)))
 (let (($x175 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x38 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x397 (and $x38 $x175)))
 (let (($x312 (and (and $x397 $x126) $x251)))
 (let (($x186 (forall ((input.ind-%var2417X (_ BitVec 32)) )(let ((?x325 (bvmul input.ind-%var2417X (_ bv4 32))))
 (let ((?x340 (bvadd ?x325 input.dst.llvm-%m1)))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv1 32))) (select input.dst.llvm-mem ?x340))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv2 32))) ?x273))))
 (let ((?x308 (input.spec-%var-m1-1.1.1 input.ind-%var2417X)))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2417X)))
 (=> $x393 (= ?x308 ?x369)))))))))
 ))
 (let (($x367 (forall ((input.ind-%var2416X (_ BitVec 32)) )(let (($x294 (and (bvule (_ bv0 32) input.ind-%var2416X) (bvult input.ind-%var2416X (_ bv100 32)))))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2416X)))
 (= $x393 $x294))))
 ))
 (let (($x93 (and $x367 $x186)))
 (let (($x335 (and $x93 $x312)))
 (let ((?x352 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x89 (= (_ bv0 32) ?x352)))
 (let ((?x76 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x304 (= (_ bv0 32) ?x76)))
 (let ((?x34 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x34)))
 (let ((?x290 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x290)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x77 (and $x81 $x176)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x288 (and $x57 $x77)))
 (let (($x330 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x366 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x321 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x337 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x194 (and $x337 $x321)))
 (let (($x99 (not $x194)))
 (let (($x254 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x365 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x297 (and $x365 $x254)))
 (let (($x234 (and (not $x297) $x99)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x143 $x237)))
 (let (($x296 (not $x193)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x383 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x283 (and $x383 $x271)))
 (let (($x302 (and (not $x283) $x296)))
 (let (($x18 (and (and (and (and (and (and $x302 $x234) $x366) $x330) $x288) $x6) $x304)))
 (let (($x371 (and $x18 $x89)))
 (let (($x247 (forall ((input.ind-%var2407X (_ BitVec 32)) )(let ((?x325 (bvmul input.ind-%var2407X (_ bv4 32))))
 (let ((?x157 (bvadd ?x325 input.dst.llvm-%m2)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x306))))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var2407X)))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2407X)))
 (=> $x331 (= ?x257 ?x24)))))))))
 ))
 (let (($x286 (forall ((input.ind-%var2406X (_ BitVec 32)) )(let (($x294 (and (bvule (_ bv0 32) input.ind-%var2406X) (bvult input.ind-%var2406X (_ bv100 32)))))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2406X)))
 (= $x331 $x294))))
 ))
 (let (($x382 (and $x286 $x247)))
 (let (($x168 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x220 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x220)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x220)))
 (let (($x11 (or false (or false (and (and true (or $x84 $x121)) (or $x219 $x168))))))
 (let (($x403 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x11)))
 (let (($x218 (and (and (and $x403 $x382) $x371) $x335)))
 (let (($x327 (= $x218 true)))
 (let (($x120 (= $x397 true)))
 (let (($x198 (= ?x72 input.dst.llvm-%m2)))
 (let (($x188 (= $x198 true)))
 (let (($x47 (and $x188 $x120)))
 (let (($x158 (and $x47 $x327)))
 (let (($x376 (and $x158 $x222)))
 (let (($x146 (forall ((input.ind-%var2427X (_ BitVec 32)) )(let ((?x287 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2427X)))
 (let ((?x308 (input.spec-%var-m1-1.1.1 input.ind-%var2427X)))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2427X)))
 (=> $x393 (= ?x308 ?x287))))))
 ))
 (let (($x277 (forall ((input.ind-%var2426X (_ BitVec 32)) )(let (($x223 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2426X)))
 (let (($x393 (input.spec-%var-m1-1.0.1 input.ind-%var2426X)))
 (= $x393 $x223))))
 ))
 (let (($x129 (and $x277 $x146)))
 (let (($x395 (and $x129 $x376)))
 (let (($x190 (forall ((input.ind-%var2437X (_ BitVec 32)) )(let ((?x230 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2437X)))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var2437X)))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2437X)))
 (=> $x331 (= ?x257 ?x230))))))
 ))
 (let (($x272 (forall ((input.ind-%var2436X (_ BitVec 32)) )(let (($x295 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2436X)))
 (let (($x331 (input.spec-%var-m2-1.0.1 input.ind-%var2436X)))
 (= $x331 $x295))))
 ))
 (let (($x307 (and $x272 $x190)))
 (let (($x217 (and $x307 $x395)))
 (let (($x160 (=> $x217 $x107)))
 (not $x160))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x200 (forall ((input.ind-%var2487X (_ BitVec 32)) )(let ((?x352 (bvmul input.ind-%var2487X (_ bv4 32))))
 (let ((?x89 (bvadd ?x352 input.dst.llvm-%m2)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x367))))
 (let ((?x393 (input.spec-%var-m2-1.1.1 input.ind-%var2487X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2487X)))
 (=> $x263 (= ?x393 ?x195)))))))))
 ))
 (let (($x358 (forall ((input.ind-%var2486X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var2486X) (bvult input.ind-%var2486X (_ bv100 32)))))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2486X)))
 (= $x263 $x194))))
 ))
 (let (($x170 (and $x358 $x200)))
 (let (($x61 (= $x170 true)))
 (let ((?x53 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x199 (concat ?x348 (concat ?x189 (concat ?x379 ?x53)))))
 (let (($x23 (= ?x199 input.dst.llvm-%m2)))
 (let (($x92 (= $x23 true)))
 (let (($x232 (= input.dst.llvm-%m2 ?x199)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x350 (concat ?x274 (concat ?x78 (concat ?x47 ?x175)))))
 (let (($x381 (= input.dst.llvm-%m1 ?x350)))
 (let (($x11 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x306 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x220 (and $x306 $x11)))
 (let (($x141 (and (and $x220 $x381) $x232)))
 (let (($x122 (forall ((input.ind-%var2457X (_ BitVec 32)) )(let ((?x352 (bvmul input.ind-%var2457X (_ bv4 32))))
 (let ((?x250 (bvadd ?x352 input.dst.llvm-%m1)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x236))))
 (let ((?x349 (input.spec-%var-m1-1.1.1 input.ind-%var2457X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2457X)))
 (=> $x72 (= ?x349 ?x328)))))))))
 ))
 (let (($x315 (forall ((input.ind-%var2456X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var2456X) (bvult input.ind-%var2456X (_ bv100 32)))))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2456X)))
 (= $x72 $x194))))
 ))
 (let (($x364 (and $x315 $x122)))
 (let (($x171 (and $x364 $x141)))
 (let ((?x107 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x160 (= (_ bv0 32) ?x107)))
 (let ((?x33 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x111 (= (_ bv0 32) ?x33)))
 (let ((?x217 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x318 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x217)))
 (let ((?x51 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x222 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x51)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x376 (and $x158 $x222)))
 (let (($x327 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x395 (and $x327 $x376)))
 (let (($x218 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x335 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (and $x104 $x151)))
 (let (($x126 (not $x58)))
 (let (($x394 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x227 (and $x41 $x394)))
 (let (($x251 (and (not $x227) $x126)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x186 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (and $x186 $x93)))
 (let (($x52 (not $x265)))
 (let (($x322 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x369 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x369 $x322)))
 (let (($x353 (and (not $x95) $x52)))
 (let (($x333 (and (and (and (and (and (and $x353 $x251) $x335) $x218) $x395) $x318) $x111)))
 (let (($x201 (and $x333 $x160)))
 (let (($x273 (forall ((input.ind-%var2447X (_ BitVec 32)) )(let ((?x352 (bvmul input.ind-%var2447X (_ bv4 32))))
 (let ((?x89 (bvadd ?x352 input.dst.llvm-%m2)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x367))))
 (let ((?x393 (input.spec-%var-m2-1.1.1 input.ind-%var2447X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2447X)))
 (=> $x263 (= ?x393 ?x195)))))))))
 ))
 (let (($x234 (forall ((input.ind-%var2446X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var2446X) (bvult input.ind-%var2446X (_ bv100 32)))))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2446X)))
 (= $x263 $x194))))
 ))
 (let (($x324 (and $x234 $x273)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x14 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x382 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x240 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x14)))
 (let (($x237 (or false (or false (and (and true (or $x153 $x240)) (or $x382 $x271))))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x237)))
 (let (($x375 (and (and (and $x296 $x324) $x201) $x171)))
 (let (($x245 (= $x375 true)))
 (let (($x84 (= $x220 true)))
 (let (($x294 (= ?x350 input.dst.llvm-%m1)))
 (let (($x215 (= $x294 true)))
 (let (($x311 (and $x215 $x84)))
 (let (($x144 (and $x311 $x245)))
 (let (($x276 (and $x144 $x92)))
 (let (($x40 (forall ((input.ind-%var2467X (_ BitVec 32)) )(let ((?x300 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2467X)))
 (let ((?x349 (input.spec-%var-m1-1.1.1 input.ind-%var2467X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2467X)))
 (=> $x72 (= ?x349 ?x300))))))
 ))
 (let (($x38 (forall ((input.ind-%var2466X (_ BitVec 32)) )(let (($x188 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2466X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2466X)))
 (= $x72 $x188))))
 ))
 (let (($x115 (and $x38 $x40)))
 (let (($x148 (and $x115 $x276)))
 (let (($x152 (forall ((input.ind-%var2477X (_ BitVec 32)) )(let ((?x42 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2477X)))
 (let ((?x393 (input.spec-%var-m2-1.1.1 input.ind-%var2477X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2477X)))
 (=> $x263 (= ?x393 ?x42))))))
 ))
 (let (($x342 (forall ((input.ind-%var2476X (_ BitVec 32)) )(let (($x272 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2476X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2476X)))
 (= $x263 $x272))))
 ))
 (let (($x96 (and $x342 $x152)))
 (let (($x372 (and $x96 $x148)))
 (let (($x203 (=> $x372 $x61)))
 (not $x203)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x200 (forall ((input.ind-%var2487X (_ BitVec 32)) )(let ((?x352 (bvmul input.ind-%var2487X (_ bv4 32))))
 (let ((?x89 (bvadd ?x352 input.dst.llvm-%m2)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x367))))
 (let ((?x393 (input.spec-%var-m2-1.1.1 input.ind-%var2487X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2487X)))
 (=> $x263 (= ?x393 ?x195)))))))))
 ))
 (let (($x358 (forall ((input.ind-%var2486X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var2486X) (bvult input.ind-%var2486X (_ bv100 32)))))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2486X)))
 (= $x263 $x194))))
 ))
 (let (($x170 (and $x358 $x200)))
 (let (($x61 (= $x170 true)))
 (let ((?x53 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x199 (concat ?x348 (concat ?x189 (concat ?x379 ?x53)))))
 (let (($x23 (= ?x199 input.dst.llvm-%m2)))
 (let (($x92 (= $x23 true)))
 (let (($x232 (= input.dst.llvm-%m2 ?x199)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x350 (concat ?x274 (concat ?x78 (concat ?x47 ?x175)))))
 (let (($x381 (= input.dst.llvm-%m1 ?x350)))
 (let (($x11 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x306 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x220 (and $x306 $x11)))
 (let (($x141 (and (and $x220 $x381) $x232)))
 (let (($x122 (forall ((input.ind-%var2457X (_ BitVec 32)) )(let ((?x352 (bvmul input.ind-%var2457X (_ bv4 32))))
 (let ((?x250 (bvadd ?x352 input.dst.llvm-%m1)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x236))))
 (let ((?x349 (input.spec-%var-m1-1.1.1 input.ind-%var2457X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2457X)))
 (=> $x72 (= ?x349 ?x328)))))))))
 ))
 (let (($x315 (forall ((input.ind-%var2456X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var2456X) (bvult input.ind-%var2456X (_ bv100 32)))))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2456X)))
 (= $x72 $x194))))
 ))
 (let (($x364 (and $x315 $x122)))
 (let (($x171 (and $x364 $x141)))
 (let ((?x107 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x160 (= (_ bv0 32) ?x107)))
 (let ((?x33 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x111 (= (_ bv0 32) ?x33)))
 (let ((?x217 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x318 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x217)))
 (let ((?x51 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x222 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x51)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x376 (and $x158 $x222)))
 (let (($x327 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x395 (and $x327 $x376)))
 (let (($x218 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x335 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (and $x104 $x151)))
 (let (($x126 (not $x58)))
 (let (($x394 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x227 (and $x41 $x394)))
 (let (($x251 (and (not $x227) $x126)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x186 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (and $x186 $x93)))
 (let (($x52 (not $x265)))
 (let (($x322 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x369 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x369 $x322)))
 (let (($x353 (and (not $x95) $x52)))
 (let (($x333 (and (and (and (and (and (and $x353 $x251) $x335) $x218) $x395) $x318) $x111)))
 (let (($x201 (and $x333 $x160)))
 (let (($x273 (forall ((input.ind-%var2447X (_ BitVec 32)) )(let ((?x352 (bvmul input.ind-%var2447X (_ bv4 32))))
 (let ((?x89 (bvadd ?x352 input.dst.llvm-%m2)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x367))))
 (let ((?x393 (input.spec-%var-m2-1.1.1 input.ind-%var2447X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2447X)))
 (=> $x263 (= ?x393 ?x195)))))))))
 ))
 (let (($x234 (forall ((input.ind-%var2446X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var2446X) (bvult input.ind-%var2446X (_ bv100 32)))))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2446X)))
 (= $x263 $x194))))
 ))
 (let (($x324 (and $x234 $x273)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x14 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x382 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x240 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x14)))
 (let (($x237 (or false (or false (and (and true (or $x153 $x240)) (or $x382 $x271))))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x237)))
 (let (($x375 (and (and (and $x296 $x324) $x201) $x171)))
 (let (($x245 (= $x375 true)))
 (let (($x84 (= $x220 true)))
 (let (($x294 (= ?x350 input.dst.llvm-%m1)))
 (let (($x215 (= $x294 true)))
 (let (($x311 (and $x215 $x84)))
 (let (($x144 (and $x311 $x245)))
 (let (($x276 (and $x144 $x92)))
 (let (($x40 (forall ((input.ind-%var2467X (_ BitVec 32)) )(let ((?x300 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2467X)))
 (let ((?x349 (input.spec-%var-m1-1.1.1 input.ind-%var2467X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2467X)))
 (=> $x72 (= ?x349 ?x300))))))
 ))
 (let (($x38 (forall ((input.ind-%var2466X (_ BitVec 32)) )(let (($x188 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2466X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var2466X)))
 (= $x72 $x188))))
 ))
 (let (($x115 (and $x38 $x40)))
 (let (($x148 (and $x115 $x276)))
 (let (($x152 (forall ((input.ind-%var2477X (_ BitVec 32)) )(let ((?x42 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2477X)))
 (let ((?x393 (input.spec-%var-m2-1.1.1 input.ind-%var2477X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2477X)))
 (=> $x263 (= ?x393 ?x42))))))
 ))
 (let (($x342 (forall ((input.ind-%var2476X (_ BitVec 32)) )(let (($x272 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2476X)))
 (let (($x263 (input.spec-%var-m2-1.0.1 input.ind-%var2476X)))
 (= $x263 $x272))))
 ))
 (let (($x96 (and $x342 $x152)))
 (let (($x372 (and $x96 $x148)))
 (let (($x203 (=> $x372 $x61)))
 (not $x203)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 33
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x320 (forall ((input.ind-%var2537X (_ BitVec 32)) )(let ((?x107 (bvmul input.ind-%var2537X (_ bv4 32))))
 (let ((?x34 (bvadd ?x107 input.dst.llvm-%m1)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x231))))
 (let ((?x43 (input.spec-%var-m1-1.1.1 input.ind-%var2537X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2537X)))
 (=> $x350 (= ?x43 ?x281)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var2536X (_ BitVec 32)) )(let (($x58 (and (bvule (_ bv0 32) input.ind-%var2536X) (bvult input.ind-%var2536X (_ bv100 32)))))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2536X)))
 (= $x350 $x58))))
 ))
 (let (($x293 (and $x259 $x320)))
 (let (($x50 (= $x293 true)))
 (let ((?x246 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x210 (concat ?x172 (concat ?x400 (concat ?x48 ?x246)))))
 (let (($x383 (= ?x210 input.dst.llvm-%m1)))
 (let (($x129 (= $x383 true)))
 (let ((?x11 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x311 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x404 (concat ?x21 (concat ?x183 (concat ?x311 ?x11)))))
 (let (($x374 (= input.dst.llvm-%m2 ?x404)))
 (let (($x142 (= input.dst.llvm-%m1 ?x210)))
 (let (($x237 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x147 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x14 (and $x147 $x237)))
 (let (($x308 (and (and $x14 $x142) $x374)))
 (let (($x19 (forall ((input.ind-%var2507X (_ BitVec 32)) )(let ((?x107 (bvmul input.ind-%var2507X (_ bv4 32))))
 (let ((?x34 (bvadd ?x107 input.dst.llvm-%m1)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x231))))
 (let ((?x43 (input.spec-%var-m1-1.1.1 input.ind-%var2507X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2507X)))
 (=> $x350 (= ?x43 ?x281)))))))))
 ))
 (let (($x88 (forall ((input.ind-%var2506X (_ BitVec 32)) )(let (($x58 (and (bvule (_ bv0 32) input.ind-%var2506X) (bvult input.ind-%var2506X (_ bv100 32)))))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2506X)))
 (= $x350 $x58))))
 ))
 (let (($x167 (and $x88 $x19)))
 (let (($x161 (and $x167 $x308)))
 (let ((?x61 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x203 (= (_ bv0 32) ?x61)))
 (let ((?x200 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x170 (= (_ bv0 32) ?x200)))
 (let ((?x372 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x358 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x372)))
 (let ((?x23 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x92 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x23)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x276 (and $x144 $x92)))
 (let (($x245 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x245 $x276)))
 (let (($x375 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x379 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (and $x379 $x53)))
 (let (($x149 (not $x36)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x357 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (and $x357 $x189)))
 (let (($x232 (and (not $x238) $x149)))
 (let (($x364 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x381 (and $x122 $x364)))
 (let (($x370 (not $x381)))
 (let (($x373 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x328 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x280 (and $x328 $x373)))
 (let (($x348 (and (not $x280) $x370)))
 (let (($x295 (and (and (and (and (and (and $x348 $x232) $x141) $x375) $x148) $x358) $x170)))
 (let (($x223 (and $x295 $x203)))
 (let (($x236 (forall ((input.ind-%var2497X (_ BitVec 32)) )(let ((?x107 (bvmul input.ind-%var2497X (_ bv4 32))))
 (let ((?x160 (bvadd ?x107 input.dst.llvm-%m2)))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x315))))
 (let ((?x72 (input.spec-%var-m2-1.1.1 input.ind-%var2497X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2497X)))
 (=> $x230 (= ?x72 ?x109)))))))))
 ))
 (let (($x251 (forall ((input.ind-%var2496X (_ BitVec 32)) )(let (($x58 (and (bvule (_ bv0 32) input.ind-%var2496X) (bvult input.ind-%var2496X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2496X)))
 (= $x230 $x58))))
 ))
 (let (($x205 (and $x251 $x236)))
 (let (($x322 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x135 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x324 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x340 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x135)))
 (let (($x93 (or false (or false (and (and true (or $x7 $x340)) (or $x324 $x322))))))
 (let (($x52 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x93)))
 (let (($x166 (and (and (and $x52 $x205) $x223) $x161)))
 (let (($x146 (= $x166 true)))
 (let (($x153 (= $x14 true)))
 (let (($x194 (= ?x404 input.dst.llvm-%m2)))
 (let (($x337 (= $x194 true)))
 (let (($x94 (and $x337 $x153)))
 (let (($x108 (and $x94 $x146)))
 (let (($x307 (and $x108 $x129)))
 (let (($x344 (forall ((input.ind-%var2517X (_ BitVec 32)) )(let ((?x360 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2517X)))
 (let ((?x43 (input.spec-%var-m1-1.1.1 input.ind-%var2517X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2517X)))
 (=> $x350 (= ?x43 ?x360))))))
 ))
 (let (($x303 (forall ((input.ind-%var2516X (_ BitVec 32)) )(let (($x215 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2516X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2516X)))
 (= $x350 $x215))))
 ))
 (let (($x157 (and $x303 $x344)))
 (let (($x177 (and $x157 $x307)))
 (let (($x117 (forall ((input.ind-%var2527X (_ BitVec 32)) )(let ((?x130 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2527X)))
 (let ((?x72 (input.spec-%var-m2-1.1.1 input.ind-%var2527X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2527X)))
 (=> $x230 (= ?x72 ?x130))))))
 ))
 (let (($x325 (forall ((input.ind-%var2526X (_ BitVec 32)) )(let (($x342 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2526X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2526X)))
 (= $x230 $x342))))
 ))
 (let (($x47 (and $x325 $x117)))
 (let (($x398 (and $x47 $x177)))
 (let (($x91 (=> $x398 $x50)))
 (not $x91)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x320 (forall ((input.ind-%var2537X (_ BitVec 32)) )(let ((?x107 (bvmul input.ind-%var2537X (_ bv4 32))))
 (let ((?x34 (bvadd ?x107 input.dst.llvm-%m1)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x231))))
 (let ((?x43 (input.spec-%var-m1-1.1.1 input.ind-%var2537X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2537X)))
 (=> $x350 (= ?x43 ?x281)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var2536X (_ BitVec 32)) )(let (($x58 (and (bvule (_ bv0 32) input.ind-%var2536X) (bvult input.ind-%var2536X (_ bv100 32)))))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2536X)))
 (= $x350 $x58))))
 ))
 (let (($x293 (and $x259 $x320)))
 (let (($x50 (= $x293 true)))
 (let ((?x246 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x210 (concat ?x172 (concat ?x400 (concat ?x48 ?x246)))))
 (let (($x383 (= ?x210 input.dst.llvm-%m1)))
 (let (($x129 (= $x383 true)))
 (let ((?x11 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x311 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x404 (concat ?x21 (concat ?x183 (concat ?x311 ?x11)))))
 (let (($x374 (= input.dst.llvm-%m2 ?x404)))
 (let (($x142 (= input.dst.llvm-%m1 ?x210)))
 (let (($x237 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x147 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x14 (and $x147 $x237)))
 (let (($x308 (and (and $x14 $x142) $x374)))
 (let (($x19 (forall ((input.ind-%var2507X (_ BitVec 32)) )(let ((?x107 (bvmul input.ind-%var2507X (_ bv4 32))))
 (let ((?x34 (bvadd ?x107 input.dst.llvm-%m1)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x231))))
 (let ((?x43 (input.spec-%var-m1-1.1.1 input.ind-%var2507X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2507X)))
 (=> $x350 (= ?x43 ?x281)))))))))
 ))
 (let (($x88 (forall ((input.ind-%var2506X (_ BitVec 32)) )(let (($x58 (and (bvule (_ bv0 32) input.ind-%var2506X) (bvult input.ind-%var2506X (_ bv100 32)))))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2506X)))
 (= $x350 $x58))))
 ))
 (let (($x167 (and $x88 $x19)))
 (let (($x161 (and $x167 $x308)))
 (let ((?x61 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x203 (= (_ bv0 32) ?x61)))
 (let ((?x200 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x170 (= (_ bv0 32) ?x200)))
 (let ((?x372 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x358 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x372)))
 (let ((?x23 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x92 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x23)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x276 (and $x144 $x92)))
 (let (($x245 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x245 $x276)))
 (let (($x375 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x379 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (and $x379 $x53)))
 (let (($x149 (not $x36)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x357 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (and $x357 $x189)))
 (let (($x232 (and (not $x238) $x149)))
 (let (($x364 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x381 (and $x122 $x364)))
 (let (($x370 (not $x381)))
 (let (($x373 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x328 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x280 (and $x328 $x373)))
 (let (($x348 (and (not $x280) $x370)))
 (let (($x295 (and (and (and (and (and (and $x348 $x232) $x141) $x375) $x148) $x358) $x170)))
 (let (($x223 (and $x295 $x203)))
 (let (($x236 (forall ((input.ind-%var2497X (_ BitVec 32)) )(let ((?x107 (bvmul input.ind-%var2497X (_ bv4 32))))
 (let ((?x160 (bvadd ?x107 input.dst.llvm-%m2)))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x315))))
 (let ((?x72 (input.spec-%var-m2-1.1.1 input.ind-%var2497X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2497X)))
 (=> $x230 (= ?x72 ?x109)))))))))
 ))
 (let (($x251 (forall ((input.ind-%var2496X (_ BitVec 32)) )(let (($x58 (and (bvule (_ bv0 32) input.ind-%var2496X) (bvult input.ind-%var2496X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2496X)))
 (= $x230 $x58))))
 ))
 (let (($x205 (and $x251 $x236)))
 (let (($x322 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x135 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x324 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x340 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x135)))
 (let (($x93 (or false (or false (and (and true (or $x7 $x340)) (or $x324 $x322))))))
 (let (($x52 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x93)))
 (let (($x166 (and (and (and $x52 $x205) $x223) $x161)))
 (let (($x146 (= $x166 true)))
 (let (($x153 (= $x14 true)))
 (let (($x194 (= ?x404 input.dst.llvm-%m2)))
 (let (($x337 (= $x194 true)))
 (let (($x94 (and $x337 $x153)))
 (let (($x108 (and $x94 $x146)))
 (let (($x307 (and $x108 $x129)))
 (let (($x344 (forall ((input.ind-%var2517X (_ BitVec 32)) )(let ((?x360 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2517X)))
 (let ((?x43 (input.spec-%var-m1-1.1.1 input.ind-%var2517X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2517X)))
 (=> $x350 (= ?x43 ?x360))))))
 ))
 (let (($x303 (forall ((input.ind-%var2516X (_ BitVec 32)) )(let (($x215 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2516X)))
 (let (($x350 (input.spec-%var-m1-1.0.1 input.ind-%var2516X)))
 (= $x350 $x215))))
 ))
 (let (($x157 (and $x303 $x344)))
 (let (($x177 (and $x157 $x307)))
 (let (($x117 (forall ((input.ind-%var2527X (_ BitVec 32)) )(let ((?x130 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2527X)))
 (let ((?x72 (input.spec-%var-m2-1.1.1 input.ind-%var2527X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2527X)))
 (=> $x230 (= ?x72 ?x130))))))
 ))
 (let (($x325 (forall ((input.ind-%var2526X (_ BitVec 32)) )(let (($x342 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2526X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2526X)))
 (= $x230 $x342))))
 ))
 (let (($x47 (and $x325 $x117)))
 (let (($x398 (and $x47 $x177)))
 (let (($x91 (=> $x398 $x50)))
 (not $x91)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 34
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x101 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x134 (bvneg ?x101)))
 (let (($x229 (= ?x134 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x242 (= $x229 true)))
 (let (($x185 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x149 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x53 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x232 (and $x53 $x149)))
 (let (($x74 (and $x232 $x185)))
 (let (($x269 (= $x74 true)))
 (let (($x59 (forall ((input.ind-%var2577X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2577X (_ bv4 32))))
 (let ((?x310 (bvadd ?x109 input.dst.llvm-%m1)))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem ?x310))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv2 32))) ?x378))))
 (let ((?x194 (input.spec-%var-m1-1.1.1 input.ind-%var2577X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2577X)))
 (=> $x193 (= ?x194 ?x54)))))))))
 ))
 (let (($x13 (forall ((input.ind-%var2576X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2576X) (bvult input.ind-%var2576X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2576X)))
 (= $x193 $x261))))
 ))
 (let (($x8 (and $x13 $x59)))
 (let (($x225 (= $x8 true)))
 (let ((?x12 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x180 (= (_ bv0 32) ?x12)))
 (let ((?x115 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x96 (= (_ bv0 32) ?x115)))
 (let ((?x228 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x369 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x228)))
 (let ((?x77 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x77)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x9 (and $x198 $x37)))
 (let (($x349 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x349 $x9)))
 (let (($x81 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x254 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x302 (and $x254 $x113)))
 (let (($x57 (not $x302)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x309 (and $x290 $x6)))
 (let (($x176 (and (not $x309) $x57)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x285 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x204 (and $x285 $x316)))
 (let (($x145 (not $x204)))
 (let (($x394 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x353 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x353 $x394)))
 (let (($x83 (and (not $x233) $x145)))
 (let (($x330 (and (and (and (and (and (and $x83 $x176) $x15) $x81) $x40) $x369) $x96)))
 (let (($x192 (and $x330 $x180)))
 (let (($x234 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x395 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x395)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x395)))
 (let (($x253 (or false (or false (and (and true (or $x169 $x51)) (or $x33 $x234))))))
 (let (($x333 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x253)))
 (let (($x287 (and $x333 $x192)))
 (let (($x257 (= $x287 true)))
 (let ((?x175 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x294 (= (_ bv0 2) ?x175)))
 (let (($x380 (= $x294 true)))
 (let (($x78 (forall ((input.ind-%var2567X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2567X (_ bv4 32))))
 (let ((?x402 (bvadd ?x109 input.dst.llvm-%m2)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv1 32))) (select input.dst.llvm-mem ?x402))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv2 32))) ?x60))))
 (let ((?x306 (input.spec-%var-m2-1.1.1 input.ind-%var2567X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2567X)))
 (=> $x230 (= ?x306 ?x168)))))))))
 ))
 (let (($x142 (forall ((input.ind-%var2566X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2566X) (bvult input.ind-%var2566X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2566X)))
 (= $x230 $x261))))
 ))
 (let (($x331 (and $x142 $x78)))
 (let (($x100 (= $x331 true)))
 (let (($x264 (forall ((input.ind-%var2557X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2557X (_ bv4 32))))
 (let ((?x310 (bvadd ?x109 input.dst.llvm-%m1)))
 (let ((?x297 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x310))))
 (let ((?x366 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x310 (_ bv2 32))) ?x297)))
 (let ((?x156 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x310 (_ bv3 32))) ?x366)))
 (let ((?x194 (input.spec-%var-m1-1.1.1 input.ind-%var2557X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2557X)))
 (=> $x193 (= ?x194 ?x156))))))))))
 ))
 (let (($x92 (forall ((input.ind-%var2556X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2556X) (bvult input.ind-%var2556X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2556X)))
 (= $x193 $x261))))
 ))
 (let (($x172 (and $x92 $x264)))
 (let (($x292 (= $x172 true)))
 (let (($x79 (= $x232 true)))
 (let (($x348 (forall ((input.ind-%var2547X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2547X (_ bv4 32))))
 (let ((?x402 (bvadd ?x109 input.dst.llvm-%m2)))
 (let ((?x252 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x402 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x402))))
 (let ((?x280 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x402 (_ bv2 32))) ?x252)))
 (let ((?x364 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x402 (_ bv3 32))) ?x280)))
 (let ((?x306 (input.spec-%var-m2-1.1.1 input.ind-%var2547X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2547X)))
 (=> $x230 (= ?x306 ?x364))))))))))
 ))
 (let (($x324 (forall ((input.ind-%var2546X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2546X) (bvult input.ind-%var2546X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2546X)))
 (= $x230 $x261))))
 ))
 (let (($x357 (and $x324 $x348)))
 (let (($x189 (= $x357 true)))
 (let (($x141 (and $x189 $x79)))
 (let (($x400 (and $x141 $x292)))
 (let (($x336 (and $x400 $x100)))
 (let (($x335 (and $x336 $x380)))
 (let (($x121 (and $x335 $x257)))
 (let (($x362 (and $x121 $x225)))
 (let (($x266 (and $x362 $x269)))
 (let (($x153 (forall ((input.ind-%var2587X (_ BitVec 32)) )(let ((?x371 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2587X)))
 (let ((?x194 (input.spec-%var-m1-1.1.1 input.ind-%var2587X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2587X)))
 (=> $x193 (= ?x194 ?x371))))))
 ))
 (let (($x35 (forall ((input.ind-%var2586X (_ BitVec 32)) )(let (($x220 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2586X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2586X)))
 (= $x193 $x220))))
 ))
 (let (($x94 (and $x35 $x153)))
 (let (($x17 (and $x94 $x266)))
 (let (($x24 (forall ((input.ind-%var2597X (_ BitVec 32)) )(let ((?x360 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2597X)))
 (let ((?x306 (input.spec-%var-m2-1.1.1 input.ind-%var2597X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2597X)))
 (=> $x230 (= ?x306 ?x360))))))
 ))
 (let (($x117 (forall ((input.ind-%var2596X (_ BitVec 32)) )(let (($x72 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2596X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2596X)))
 (= $x230 $x72))))
 ))
 (let (($x89 (and $x117 $x24)))
 (let (($x124 (and $x89 $x17)))
 (let (($x155 (=> $x124 $x242)))
 (not $x155)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x101 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x134 (bvneg ?x101)))
 (let (($x229 (= ?x134 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x242 (= $x229 true)))
 (let (($x185 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x149 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x53 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x232 (and $x53 $x149)))
 (let (($x74 (and $x232 $x185)))
 (let (($x269 (= $x74 true)))
 (let (($x59 (forall ((input.ind-%var2577X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2577X (_ bv4 32))))
 (let ((?x310 (bvadd ?x109 input.dst.llvm-%m1)))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem ?x310))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv2 32))) ?x378))))
 (let ((?x194 (input.spec-%var-m1-1.1.1 input.ind-%var2577X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2577X)))
 (=> $x193 (= ?x194 ?x54)))))))))
 ))
 (let (($x13 (forall ((input.ind-%var2576X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2576X) (bvult input.ind-%var2576X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2576X)))
 (= $x193 $x261))))
 ))
 (let (($x8 (and $x13 $x59)))
 (let (($x225 (= $x8 true)))
 (let ((?x12 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x180 (= (_ bv0 32) ?x12)))
 (let ((?x115 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x96 (= (_ bv0 32) ?x115)))
 (let ((?x228 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x369 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x228)))
 (let ((?x77 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x77)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x9 (and $x198 $x37)))
 (let (($x349 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x349 $x9)))
 (let (($x81 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x254 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x302 (and $x254 $x113)))
 (let (($x57 (not $x302)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x309 (and $x290 $x6)))
 (let (($x176 (and (not $x309) $x57)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x285 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x204 (and $x285 $x316)))
 (let (($x145 (not $x204)))
 (let (($x394 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x353 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x353 $x394)))
 (let (($x83 (and (not $x233) $x145)))
 (let (($x330 (and (and (and (and (and (and $x83 $x176) $x15) $x81) $x40) $x369) $x96)))
 (let (($x192 (and $x330 $x180)))
 (let (($x234 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x395 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x395)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x395)))
 (let (($x253 (or false (or false (and (and true (or $x169 $x51)) (or $x33 $x234))))))
 (let (($x333 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x253)))
 (let (($x287 (and $x333 $x192)))
 (let (($x257 (= $x287 true)))
 (let ((?x175 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x294 (= (_ bv0 2) ?x175)))
 (let (($x380 (= $x294 true)))
 (let (($x78 (forall ((input.ind-%var2567X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2567X (_ bv4 32))))
 (let ((?x402 (bvadd ?x109 input.dst.llvm-%m2)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv1 32))) (select input.dst.llvm-mem ?x402))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x402 (_ bv2 32))) ?x60))))
 (let ((?x306 (input.spec-%var-m2-1.1.1 input.ind-%var2567X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2567X)))
 (=> $x230 (= ?x306 ?x168)))))))))
 ))
 (let (($x142 (forall ((input.ind-%var2566X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2566X) (bvult input.ind-%var2566X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2566X)))
 (= $x230 $x261))))
 ))
 (let (($x331 (and $x142 $x78)))
 (let (($x100 (= $x331 true)))
 (let (($x264 (forall ((input.ind-%var2557X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2557X (_ bv4 32))))
 (let ((?x310 (bvadd ?x109 input.dst.llvm-%m1)))
 (let ((?x297 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x310))))
 (let ((?x366 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x310 (_ bv2 32))) ?x297)))
 (let ((?x156 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x310 (_ bv3 32))) ?x366)))
 (let ((?x194 (input.spec-%var-m1-1.1.1 input.ind-%var2557X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2557X)))
 (=> $x193 (= ?x194 ?x156))))))))))
 ))
 (let (($x92 (forall ((input.ind-%var2556X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2556X) (bvult input.ind-%var2556X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2556X)))
 (= $x193 $x261))))
 ))
 (let (($x172 (and $x92 $x264)))
 (let (($x292 (= $x172 true)))
 (let (($x79 (= $x232 true)))
 (let (($x348 (forall ((input.ind-%var2547X (_ BitVec 32)) )(let ((?x109 (bvmul input.ind-%var2547X (_ bv4 32))))
 (let ((?x402 (bvadd ?x109 input.dst.llvm-%m2)))
 (let ((?x252 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x402 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x402))))
 (let ((?x280 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x402 (_ bv2 32))) ?x252)))
 (let ((?x364 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x402 (_ bv3 32))) ?x280)))
 (let ((?x306 (input.spec-%var-m2-1.1.1 input.ind-%var2547X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2547X)))
 (=> $x230 (= ?x306 ?x364))))))))))
 ))
 (let (($x324 (forall ((input.ind-%var2546X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2546X) (bvult input.ind-%var2546X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2546X)))
 (= $x230 $x261))))
 ))
 (let (($x357 (and $x324 $x348)))
 (let (($x189 (= $x357 true)))
 (let (($x141 (and $x189 $x79)))
 (let (($x400 (and $x141 $x292)))
 (let (($x336 (and $x400 $x100)))
 (let (($x335 (and $x336 $x380)))
 (let (($x121 (and $x335 $x257)))
 (let (($x362 (and $x121 $x225)))
 (let (($x266 (and $x362 $x269)))
 (let (($x153 (forall ((input.ind-%var2587X (_ BitVec 32)) )(let ((?x371 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2587X)))
 (let ((?x194 (input.spec-%var-m1-1.1.1 input.ind-%var2587X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2587X)))
 (=> $x193 (= ?x194 ?x371))))))
 ))
 (let (($x35 (forall ((input.ind-%var2586X (_ BitVec 32)) )(let (($x220 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2586X)))
 (let (($x193 (input.spec-%var-m1-1.0.1 input.ind-%var2586X)))
 (= $x193 $x220))))
 ))
 (let (($x94 (and $x35 $x153)))
 (let (($x17 (and $x94 $x266)))
 (let (($x24 (forall ((input.ind-%var2597X (_ BitVec 32)) )(let ((?x360 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2597X)))
 (let ((?x306 (input.spec-%var-m2-1.1.1 input.ind-%var2597X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2597X)))
 (=> $x230 (= ?x306 ?x360))))))
 ))
 (let (($x117 (forall ((input.ind-%var2596X (_ BitVec 32)) )(let (($x72 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2596X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2596X)))
 (= $x230 $x72))))
 ))
 (let (($x89 (and $x117 $x24)))
 (let (($x124 (and $x89 $x17)))
 (let (($x155 (=> $x124 $x242)))
 (not $x155)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 35
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x325 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x352 (bvneg ?x325)))
 (let (($x397 (= ?x352 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x350 (= $x397 true)))
 (let (($x47 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x158 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x51 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x376 (and $x51 $x158)))
 (let (($x404 (and $x376 $x47)))
 (let (($x329 (= $x404 true)))
 (let (($x154 (forall ((input.ind-%var2637X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2637X (_ bv4 32))))
 (let ((?x255 (bvadd ?x272 input.dst.llvm-%m1)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x277))))
 (let ((?x328 (input.spec-%var-m1-1.1.1 input.ind-%var2637X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2637X)))
 (=> $x118 (= ?x328 ?x125)))))))))
 ))
 (let (($x108 (forall ((input.ind-%var2636X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2636X) (bvult input.ind-%var2636X (_ bv100 32)))))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2636X)))
 (= $x118 $x79))))
 ))
 (let (($x165 (and $x108 $x154)))
 (let (($x63 (= $x165 true)))
 (let ((?x245 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x144 (= (_ bv0 32) ?x245)))
 (let ((?x88 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x171 (= (_ bv0 32) ?x88)))
 (let ((?x295 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x295)))
 (let ((?x203 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x203)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x61 $x200)))
 (let (($x314 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x20 (and $x314 $x170)))
 (let (($x163 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x372 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x322 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x276 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (and $x276 $x322)))
 (let (($x341 (not $x139)))
 (let (($x247 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x315 (and $x7 $x247)))
 (let (($x375 (and (not $x315) $x341)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x218 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x107 (and $x218 $x58)))
 (let (($x250 (not $x107)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x367 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x367 $x130)))
 (let (($x301 (and (not $x251) $x250)))
 (let (($x86 (and (and (and (and (and (and $x301 $x375) $x372) $x163) $x20) $x223) $x171)))
 (let (($x246 (and $x86 $x144)))
 (let (($x135 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x183 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x265 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x183)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x183)))
 (let (($x64 (or false (or false (and (and true (or $x99 $x21)) (or $x265 $x135))))))
 (let (($x284 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x64)))
 (let (($x399 (and $x284 $x246)))
 (let (($x166 (= $x399 true)))
 (let ((?x263 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x303 (= (_ bv0 2) ?x263)))
 (let (($x143 (= $x303 true)))
 (let (($x242 (forall ((input.ind-%var2627X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2627X (_ bv4 32))))
 (let ((?x168 (bvadd ?x272 input.dst.llvm-%m2)))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x266))))
 (let ((?x11 (input.spec-%var-m2-1.1.1 input.ind-%var2627X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2627X)))
 (=> $x230 (= ?x11 ?x101)))))))))
 ))
 (let (($x257 (forall ((input.ind-%var2626X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2626X) (bvult input.ind-%var2626X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2626X)))
 (= $x230 $x79))))
 ))
 (let (($x155 (and $x257 $x242)))
 (let (($x258 (= $x155 true)))
 (let (($x228 (forall ((input.ind-%var2617X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2617X (_ bv4 32))))
 (let ((?x255 (bvadd ?x272 input.dst.llvm-%m1)))
 (let ((?x81 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x255))))
 (let ((?x198 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x255 (_ bv2 32))) ?x81)))
 (let ((?x9 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x255 (_ bv3 32))) ?x198)))
 (let ((?x328 (input.spec-%var-m1-1.1.1 input.ind-%var2617X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2617X)))
 (=> $x118 (= ?x328 ?x9))))))))))
 ))
 (let (($x394 (forall ((input.ind-%var2616X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2616X) (bvult input.ind-%var2616X (_ bv100 32)))))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2616X)))
 (= $x118 $x79))))
 ))
 (let (($x369 (and $x394 $x228)))
 (let (($x38 (= $x369 true)))
 (let (($x33 (= $x376 true)))
 (let (($x327 (forall ((input.ind-%var2607X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2607X (_ bv4 32))))
 (let ((?x168 (bvadd ?x272 input.dst.llvm-%m2)))
 (let ((?x331 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x168))))
 (let ((?x274 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x168 (_ bv2 32))) ?x331)))
 (let ((?x380 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x168 (_ bv3 32))) ?x274)))
 (let ((?x11 (input.spec-%var-m2-1.1.1 input.ind-%var2607X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2607X)))
 (=> $x230 (= ?x11 ?x380))))))))))
 ))
 (let (($x23 (forall ((input.ind-%var2606X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2606X) (bvult input.ind-%var2606X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2606X)))
 (= $x230 $x79))))
 ))
 (let (($x312 (and $x23 $x327)))
 (let (($x318 (= $x312 true)))
 (let (($x217 (and $x318 $x33)))
 (let (($x115 (and $x217 $x38)))
 (let (($x186 (and $x115 $x258)))
 (let (($x337 (and $x186 $x143)))
 (let (($x146 (and $x337 $x166)))
 (let (($x27 (and $x146 $x63)))
 (let (($x215 (and $x27 $x329)))
 (let (($x381 (forall ((input.ind-%var2647X (_ BitVec 32)) )(let ((?x236 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2647X)))
 (let ((?x328 (input.spec-%var-m1-1.1.1 input.ind-%var2647X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2647X)))
 (=> $x118 (= ?x328 ?x236))))))
 ))
 (let (($x214 (forall ((input.ind-%var2646X (_ BitVec 32)) )(let (($x52 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2646X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2646X)))
 (= $x118 $x52))))
 ))
 (let (($x370 (and $x214 $x381)))
 (let (($x342 (and $x370 $x215)))
 (let (($x283 (forall ((input.ind-%var2657X (_ BitVec 32)) )(let ((?x371 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2657X)))
 (let ((?x11 (input.spec-%var-m2-1.1.1 input.ind-%var2657X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2657X)))
 (=> $x230 (= ?x11 ?x371))))))
 ))
 (let (($x24 (forall ((input.ind-%var2656X (_ BitVec 32)) )(let (($x306 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2656X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2656X)))
 (= $x230 $x306))))
 ))
 (let (($x382 (and $x24 $x283)))
 (let (($x42 (and $x382 $x342)))
 (let (($x344 (=> $x42 $x350)))
 (not $x344)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x325 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x352 (bvneg ?x325)))
 (let (($x397 (= ?x352 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x350 (= $x397 true)))
 (let (($x47 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x158 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x51 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x376 (and $x51 $x158)))
 (let (($x404 (and $x376 $x47)))
 (let (($x329 (= $x404 true)))
 (let (($x154 (forall ((input.ind-%var2637X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2637X (_ bv4 32))))
 (let ((?x255 (bvadd ?x272 input.dst.llvm-%m1)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x277))))
 (let ((?x328 (input.spec-%var-m1-1.1.1 input.ind-%var2637X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2637X)))
 (=> $x118 (= ?x328 ?x125)))))))))
 ))
 (let (($x108 (forall ((input.ind-%var2636X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2636X) (bvult input.ind-%var2636X (_ bv100 32)))))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2636X)))
 (= $x118 $x79))))
 ))
 (let (($x165 (and $x108 $x154)))
 (let (($x63 (= $x165 true)))
 (let ((?x245 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x144 (= (_ bv0 32) ?x245)))
 (let ((?x88 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x171 (= (_ bv0 32) ?x88)))
 (let ((?x295 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x295)))
 (let ((?x203 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x203)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x61 $x200)))
 (let (($x314 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x20 (and $x314 $x170)))
 (let (($x163 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x372 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x322 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x276 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (and $x276 $x322)))
 (let (($x341 (not $x139)))
 (let (($x247 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x315 (and $x7 $x247)))
 (let (($x375 (and (not $x315) $x341)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x218 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x107 (and $x218 $x58)))
 (let (($x250 (not $x107)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x367 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x367 $x130)))
 (let (($x301 (and (not $x251) $x250)))
 (let (($x86 (and (and (and (and (and (and $x301 $x375) $x372) $x163) $x20) $x223) $x171)))
 (let (($x246 (and $x86 $x144)))
 (let (($x135 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x183 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x265 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x183)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x183)))
 (let (($x64 (or false (or false (and (and true (or $x99 $x21)) (or $x265 $x135))))))
 (let (($x284 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x64)))
 (let (($x399 (and $x284 $x246)))
 (let (($x166 (= $x399 true)))
 (let ((?x263 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x303 (= (_ bv0 2) ?x263)))
 (let (($x143 (= $x303 true)))
 (let (($x242 (forall ((input.ind-%var2627X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2627X (_ bv4 32))))
 (let ((?x168 (bvadd ?x272 input.dst.llvm-%m2)))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x266))))
 (let ((?x11 (input.spec-%var-m2-1.1.1 input.ind-%var2627X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2627X)))
 (=> $x230 (= ?x11 ?x101)))))))))
 ))
 (let (($x257 (forall ((input.ind-%var2626X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2626X) (bvult input.ind-%var2626X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2626X)))
 (= $x230 $x79))))
 ))
 (let (($x155 (and $x257 $x242)))
 (let (($x258 (= $x155 true)))
 (let (($x228 (forall ((input.ind-%var2617X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2617X (_ bv4 32))))
 (let ((?x255 (bvadd ?x272 input.dst.llvm-%m1)))
 (let ((?x81 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x255))))
 (let ((?x198 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x255 (_ bv2 32))) ?x81)))
 (let ((?x9 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x255 (_ bv3 32))) ?x198)))
 (let ((?x328 (input.spec-%var-m1-1.1.1 input.ind-%var2617X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2617X)))
 (=> $x118 (= ?x328 ?x9))))))))))
 ))
 (let (($x394 (forall ((input.ind-%var2616X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2616X) (bvult input.ind-%var2616X (_ bv100 32)))))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2616X)))
 (= $x118 $x79))))
 ))
 (let (($x369 (and $x394 $x228)))
 (let (($x38 (= $x369 true)))
 (let (($x33 (= $x376 true)))
 (let (($x327 (forall ((input.ind-%var2607X (_ BitVec 32)) )(let ((?x272 (bvmul input.ind-%var2607X (_ bv4 32))))
 (let ((?x168 (bvadd ?x272 input.dst.llvm-%m2)))
 (let ((?x331 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x168))))
 (let ((?x274 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x168 (_ bv2 32))) ?x331)))
 (let ((?x380 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x168 (_ bv3 32))) ?x274)))
 (let ((?x11 (input.spec-%var-m2-1.1.1 input.ind-%var2607X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2607X)))
 (=> $x230 (= ?x11 ?x380))))))))))
 ))
 (let (($x23 (forall ((input.ind-%var2606X (_ BitVec 32)) )(let (($x79 (and (bvule (_ bv0 32) input.ind-%var2606X) (bvult input.ind-%var2606X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2606X)))
 (= $x230 $x79))))
 ))
 (let (($x312 (and $x23 $x327)))
 (let (($x318 (= $x312 true)))
 (let (($x217 (and $x318 $x33)))
 (let (($x115 (and $x217 $x38)))
 (let (($x186 (and $x115 $x258)))
 (let (($x337 (and $x186 $x143)))
 (let (($x146 (and $x337 $x166)))
 (let (($x27 (and $x146 $x63)))
 (let (($x215 (and $x27 $x329)))
 (let (($x381 (forall ((input.ind-%var2647X (_ BitVec 32)) )(let ((?x236 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2647X)))
 (let ((?x328 (input.spec-%var-m1-1.1.1 input.ind-%var2647X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2647X)))
 (=> $x118 (= ?x328 ?x236))))))
 ))
 (let (($x214 (forall ((input.ind-%var2646X (_ BitVec 32)) )(let (($x52 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2646X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var2646X)))
 (= $x118 $x52))))
 ))
 (let (($x370 (and $x214 $x381)))
 (let (($x342 (and $x370 $x215)))
 (let (($x283 (forall ((input.ind-%var2657X (_ BitVec 32)) )(let ((?x371 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2657X)))
 (let ((?x11 (input.spec-%var-m2-1.1.1 input.ind-%var2657X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2657X)))
 (=> $x230 (= ?x11 ?x371))))))
 ))
 (let (($x24 (forall ((input.ind-%var2656X (_ BitVec 32)) )(let (($x306 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2656X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2656X)))
 (= $x230 $x306))))
 ))
 (let (($x382 (and $x24 $x283)))
 (let (($x42 (and $x382 $x342)))
 (let (($x344 (=> $x42 $x350)))
 (not $x344)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 36
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x89 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x69 (=> $x89 true)))
 (let (($x194 (= $x69 true)))
 (let (($x122 (= $x89 true)))
 (let (($x383 (forall ((input.ind-%var2697X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2697X (_ bv4 32))))
 (let ((?x403 (bvadd ?x124 input.dst.llvm-%m1)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem ?x403))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv2 32))) ?x91))))
 (let ((?x100 (input.spec-%var-m1-1.1.1 input.ind-%var2697X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2697X)))
 (=> $x141 (= ?x100 ?x313)))))))))
 ))
 (let (($x378 (forall ((input.ind-%var2696X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2696X) (bvult input.ind-%var2696X (_ bv100 32)))))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2696X)))
 (= $x141 $x33))))
 ))
 (let (($x129 (and $x378 $x383)))
 (let (($x361 (= $x129 true)))
 (let ((?x253 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x333 (= (_ bv0 32) ?x253)))
 (let ((?x57 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x227 (= (_ bv0 32) ?x57)))
 (let ((?x6 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x254 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x6)))
 (let ((?x288 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x288)))
 (let (($x309 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x290 (and $x309 $x83)))
 (let (($x302 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x302 $x290)))
 (let (($x113 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x310 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x233 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x233 $x310)))
 (let (($x285 (not $x60)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x55 (and $x53 $x36)))
 (let (($x116 (and (not $x55) $x285)))
 (let (($x366 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x264 (and $x167 $x366)))
 (let (($x142 (not $x264)))
 (let (($x360 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x205 $x360)))
 (let (($x357 (and (not $x19) $x142)))
 (let (($x96 (and (and (and (and (and (and $x357 $x116) $x316) $x113) $x145) $x254) $x227)))
 (let (($x12 (and $x96 $x333)))
 (let (($x379 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x392 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x392)))
 (let (($x261 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x392)))
 (let (($x241 (or false (or false (and (and true (or $x126 $x261)) (or $x238 $x379))))))
 (let (($x400 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x241)))
 (let (($x180 (and $x400 $x12)))
 (let (($x298 (= $x180 true)))
 (let ((?x260 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x35 (= (_ bv0 2) ?x260)))
 (let (($x324 (= $x35 true)))
 (let (($x350 (forall ((input.ind-%var2687X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2687X (_ bv4 32))))
 (let ((?x101 (bvadd ?x124 input.dst.llvm-%m2)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x215))))
 (let ((?x402 (input.spec-%var-m2-1.1.1 input.ind-%var2687X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2687X)))
 (=> $x230 (= ?x402 ?x325)))))))))
 ))
 (let (($x166 (forall ((input.ind-%var2686X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2686X) (bvult input.ind-%var2686X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2686X)))
 (= $x230 $x33))))
 ))
 (let (($x344 (and $x166 $x350)))
 (let (($x178 (= $x344 true)))
 (let (($x295 (forall ((input.ind-%var2677X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2677X (_ bv4 32))))
 (let ((?x403 (bvadd ?x124 input.dst.llvm-%m1)))
 (let ((?x163 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x403))))
 (let ((?x61 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x403 (_ bv2 32))) ?x163)))
 (let ((?x170 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x403 (_ bv3 32))) ?x61)))
 (let ((?x100 (input.spec-%var-m1-1.1.1 input.ind-%var2677X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2677X)))
 (=> $x141 (= ?x100 ?x170))))))))))
 ))
 (let (($x130 (forall ((input.ind-%var2676X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2676X) (bvult input.ind-%var2676X (_ bv100 32)))))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2676X)))
 (= $x141 $x33))))
 ))
 (let (($x223 (and $x130 $x295)))
 (let (($x308 (= $x223 true)))
 (let (($x273 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x21 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x95 (and $x21 $x273)))
 (let (($x265 (= $x95 true)))
 (let (($x219 (forall ((input.ind-%var2667X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2667X (_ bv4 32))))
 (let ((?x101 (bvadd ?x124 input.dst.llvm-%m2)))
 (let ((?x155 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x101))))
 (let ((?x365 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x101 (_ bv2 32))) ?x155)))
 (let ((?x143 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x101 (_ bv3 32))) ?x365)))
 (let ((?x402 (input.spec-%var-m2-1.1.1 input.ind-%var2667X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2667X)))
 (=> $x230 (= ?x402 ?x143))))))))))
 ))
 (let (($x353 (forall ((input.ind-%var2666X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2666X) (bvult input.ind-%var2666X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2666X)))
 (= $x230 $x33))))
 ))
 (let (($x68 (and $x353 $x219)))
 (let (($x271 (= $x68 true)))
 (let (($x321 (and $x271 $x265)))
 (let (($x88 (and $x321 $x308)))
 (let (($x76 (and $x88 $x178)))
 (let (($x373 (and $x76 $x324)))
 (let (($x103 (and $x373 $x298)))
 (let (($x259 (and $x103 $x361)))
 (let (($x252 (and $x259 $x122)))
 (let (($x335 (forall ((input.ind-%var2707X (_ BitVec 32)) )(let ((?x112 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2707X)))
 (let ((?x100 (input.spec-%var-m1-1.1.1 input.ind-%var2707X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2707X)))
 (=> $x141 (= ?x100 ?x112))))))
 ))
 (let (($x161 (forall ((input.ind-%var2706X (_ BitVec 32)) )(let (($x207 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2706X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2706X)))
 (= $x141 $x207))))
 ))
 (let (($x187 (and $x161 $x335)))
 (let (($x220 (and $x187 $x252)))
 (let (($x232 (forall ((input.ind-%var2717X (_ BitVec 32)) )(let ((?x236 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2717X)))
 (let ((?x402 (input.spec-%var-m2-1.1.1 input.ind-%var2717X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2717X)))
 (=> $x230 (= ?x402 ?x236))))))
 ))
 (let (($x283 (forall ((input.ind-%var2716X (_ BitVec 32)) )(let (($x11 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2716X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2716X)))
 (= $x230 $x11))))
 ))
 (let (($x199 (and $x283 $x232)))
 (let (($x72 (and $x199 $x220)))
 (let (($x117 (=> $x72 $x194)))
 (not $x117))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x89 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x69 (=> $x89 true)))
 (let (($x194 (= $x69 true)))
 (let (($x122 (= $x89 true)))
 (let (($x383 (forall ((input.ind-%var2697X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2697X (_ bv4 32))))
 (let ((?x403 (bvadd ?x124 input.dst.llvm-%m1)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem ?x403))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv2 32))) ?x91))))
 (let ((?x100 (input.spec-%var-m1-1.1.1 input.ind-%var2697X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2697X)))
 (=> $x141 (= ?x100 ?x313)))))))))
 ))
 (let (($x378 (forall ((input.ind-%var2696X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2696X) (bvult input.ind-%var2696X (_ bv100 32)))))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2696X)))
 (= $x141 $x33))))
 ))
 (let (($x129 (and $x378 $x383)))
 (let (($x361 (= $x129 true)))
 (let ((?x253 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x333 (= (_ bv0 32) ?x253)))
 (let ((?x57 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x227 (= (_ bv0 32) ?x57)))
 (let ((?x6 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x254 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x6)))
 (let ((?x288 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x288)))
 (let (($x309 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x290 (and $x309 $x83)))
 (let (($x302 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x302 $x290)))
 (let (($x113 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x310 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x233 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x233 $x310)))
 (let (($x285 (not $x60)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x55 (and $x53 $x36)))
 (let (($x116 (and (not $x55) $x285)))
 (let (($x366 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x264 (and $x167 $x366)))
 (let (($x142 (not $x264)))
 (let (($x360 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x205 $x360)))
 (let (($x357 (and (not $x19) $x142)))
 (let (($x96 (and (and (and (and (and (and $x357 $x116) $x316) $x113) $x145) $x254) $x227)))
 (let (($x12 (and $x96 $x333)))
 (let (($x379 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x392 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x392)))
 (let (($x261 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x392)))
 (let (($x241 (or false (or false (and (and true (or $x126 $x261)) (or $x238 $x379))))))
 (let (($x400 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x241)))
 (let (($x180 (and $x400 $x12)))
 (let (($x298 (= $x180 true)))
 (let ((?x260 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x35 (= (_ bv0 2) ?x260)))
 (let (($x324 (= $x35 true)))
 (let (($x350 (forall ((input.ind-%var2687X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2687X (_ bv4 32))))
 (let ((?x101 (bvadd ?x124 input.dst.llvm-%m2)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x215))))
 (let ((?x402 (input.spec-%var-m2-1.1.1 input.ind-%var2687X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2687X)))
 (=> $x230 (= ?x402 ?x325)))))))))
 ))
 (let (($x166 (forall ((input.ind-%var2686X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2686X) (bvult input.ind-%var2686X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2686X)))
 (= $x230 $x33))))
 ))
 (let (($x344 (and $x166 $x350)))
 (let (($x178 (= $x344 true)))
 (let (($x295 (forall ((input.ind-%var2677X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2677X (_ bv4 32))))
 (let ((?x403 (bvadd ?x124 input.dst.llvm-%m1)))
 (let ((?x163 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x403))))
 (let ((?x61 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x403 (_ bv2 32))) ?x163)))
 (let ((?x170 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x403 (_ bv3 32))) ?x61)))
 (let ((?x100 (input.spec-%var-m1-1.1.1 input.ind-%var2677X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2677X)))
 (=> $x141 (= ?x100 ?x170))))))))))
 ))
 (let (($x130 (forall ((input.ind-%var2676X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2676X) (bvult input.ind-%var2676X (_ bv100 32)))))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2676X)))
 (= $x141 $x33))))
 ))
 (let (($x223 (and $x130 $x295)))
 (let (($x308 (= $x223 true)))
 (let (($x273 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x21 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x95 (and $x21 $x273)))
 (let (($x265 (= $x95 true)))
 (let (($x219 (forall ((input.ind-%var2667X (_ BitVec 32)) )(let ((?x124 (bvmul input.ind-%var2667X (_ bv4 32))))
 (let ((?x101 (bvadd ?x124 input.dst.llvm-%m2)))
 (let ((?x155 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x101))))
 (let ((?x365 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x101 (_ bv2 32))) ?x155)))
 (let ((?x143 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x101 (_ bv3 32))) ?x365)))
 (let ((?x402 (input.spec-%var-m2-1.1.1 input.ind-%var2667X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2667X)))
 (=> $x230 (= ?x402 ?x143))))))))))
 ))
 (let (($x353 (forall ((input.ind-%var2666X (_ BitVec 32)) )(let (($x33 (and (bvule (_ bv0 32) input.ind-%var2666X) (bvult input.ind-%var2666X (_ bv100 32)))))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2666X)))
 (= $x230 $x33))))
 ))
 (let (($x68 (and $x353 $x219)))
 (let (($x271 (= $x68 true)))
 (let (($x321 (and $x271 $x265)))
 (let (($x88 (and $x321 $x308)))
 (let (($x76 (and $x88 $x178)))
 (let (($x373 (and $x76 $x324)))
 (let (($x103 (and $x373 $x298)))
 (let (($x259 (and $x103 $x361)))
 (let (($x252 (and $x259 $x122)))
 (let (($x335 (forall ((input.ind-%var2707X (_ BitVec 32)) )(let ((?x112 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2707X)))
 (let ((?x100 (input.spec-%var-m1-1.1.1 input.ind-%var2707X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2707X)))
 (=> $x141 (= ?x100 ?x112))))))
 ))
 (let (($x161 (forall ((input.ind-%var2706X (_ BitVec 32)) )(let (($x207 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2706X)))
 (let (($x141 (input.spec-%var-m1-1.0.1 input.ind-%var2706X)))
 (= $x141 $x207))))
 ))
 (let (($x187 (and $x161 $x335)))
 (let (($x220 (and $x187 $x252)))
 (let (($x232 (forall ((input.ind-%var2717X (_ BitVec 32)) )(let ((?x236 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2717X)))
 (let ((?x402 (input.spec-%var-m2-1.1.1 input.ind-%var2717X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2717X)))
 (=> $x230 (= ?x402 ?x236))))))
 ))
 (let (($x283 (forall ((input.ind-%var2716X (_ BitVec 32)) )(let (($x11 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2716X)))
 (let (($x230 (input.spec-%var-m2-1.0.1 input.ind-%var2716X)))
 (= $x230 $x11))))
 ))
 (let (($x199 (and $x283 $x232)))
 (let (($x72 (and $x199 $x220)))
 (let (($x117 (=> $x72 $x194)))
 (not $x117))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 37
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x71 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x275 (=> $x71 true)))
 (let (($x56 (= $x275 true)))
 (let (($x289 (= $x71 true)))
 (let (($x80 (forall ((input.ind-%var2777X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2777X (_ bv4 32))))
 (let ((?x234 (bvadd ?x42 input.dst.llvm-%m1)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x249))))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2777X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2777X)))
 (=> $x217 (= ?x258 ?x343)))))))))
 ))
 (let (($x226 (forall ((input.ind-%var2776X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2776X) (bvult input.ind-%var2776X (_ bv100 32)))))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2776X)))
 (= $x217 $x265))))
 ))
 (let (($x128 (and $x226 $x80)))
 (let (($x202 (= $x128 true)))
 (let ((?x386 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x389 (= (_ bv0 32) ?x386)))
 (let ((?x270 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x85 (= (_ bv0 32) ?x270)))
 (let ((?x317 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x22 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x317)))
 (let ((?x387 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x388 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x387)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x384 (and $x235 $x388)))
 (let (($x347 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x385 (and $x347 $x384)))
 (let (($x25 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x338 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x354 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x153 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x351 (and $x153 $x354)))
 (let (($x5 (not $x351)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x307 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x193 (and $x307 $x14)))
 (let (($x268 (and (not $x193) $x5)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x328 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x328 $x24)))
 (let (($x364 (not $x94)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x48 $x50)))
 (let (($x381 (and (not $x120) $x364)))
 (let (($x182 (and (and (and (and (and (and $x381 $x268) $x338) $x25) $x385) $x22) $x85)))
 (let (($x391 (and $x182 $x389)))
 (let (($x359 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x185 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x185)))
 (let (($x239 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x185)))
 (let (($x331 (or false (or false (and (and true (or $x177 $x239)) (or $x8 $x359))))))
 (let (($x306 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x331)))
 (let (($x82 (and $x306 $x391)))
 (let (($x137 (= $x82 true)))
 (let (($x66 (forall ((input.ind-%var2767X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2767X (_ bv4 32))))
 (let ((?x325 (bvadd ?x42 input.dst.llvm-%m2)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem ?x325))))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv2 32))) ?x246))))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2767X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2767X)))
 (=> $x11 (= ?x168 ?x47)))))))))
 ))
 (let (($x375 (forall ((input.ind-%var2766X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2766X) (bvult input.ind-%var2766X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2766X)))
 (= $x11 $x265))))
 ))
 (let (($x59 (and $x375 $x66)))
 (let (($x330 (= $x59 true)))
 (let (($x98 (forall ((input.ind-%var2757X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2757X (_ bv4 32))))
 (let ((?x234 (bvadd ?x42 input.dst.llvm-%m1)))
 (let ((?x104 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x234))))
 (let ((?x58 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv2 32))) ?x104)))
 (let ((?x322 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv3 32))) ?x58)))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2757X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2757X)))
 (=> $x217 (= ?x258 ?x322))))))))))
 ))
 (let (($x81 (forall ((input.ind-%var2756X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2756X) (bvult input.ind-%var2756X (_ bv100 32)))))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2756X)))
 (= $x217 $x265))))
 ))
 (let (($x301 (and $x81 $x98)))
 (let (($x7 (= $x301 true)))
 (let (($x140 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x172 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x156 (and $x172 $x140)))
 (let (($x79 (= $x156 true)))
 (let ((?x157 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x393 (bvneg ?x157)))
 (let (($x272 (= ?x393 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x78 (= $x272 true)))
 (let (($x93 (= ?x393 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x214 (= $x93 true)))
 (let (($x252 (forall ((input.ind-%var2747X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2747X (_ bv4 32))))
 (let ((?x325 (bvadd ?x42 input.dst.llvm-%m2)))
 (let ((?x129 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x325))))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x325 (_ bv2 32))) ?x129)))
 (let ((?x216 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x325 (_ bv3 32))) ?x259)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2747X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2747X)))
 (=> $x11 (= ?x168 ?x216))))))))))
 ))
 (let (($x57 (forall ((input.ind-%var2746X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2746X) (bvult input.ind-%var2746X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2746X)))
 (= $x11 $x265))))
 ))
 (let (($x220 (and $x57 $x252)))
 (let (($x72 (= $x220 true)))
 (let (($x302 (forall ((input.ind-%var2737X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2737X (_ bv4 32))))
 (let ((?x234 (bvadd ?x42 input.dst.llvm-%m1)))
 (let ((?x285 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x234))))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x234 (_ bv2 32))) ?x285)))
 (let ((?x204 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x234 (_ bv3 32))) ?x111)))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2737X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2737X)))
 (=> $x217 (= ?x258 ?x204))))))))))
 ))
 (let (($x238 (forall ((input.ind-%var2736X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2736X) (bvult input.ind-%var2736X (_ bv100 32)))))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2736X)))
 (= $x217 $x265))))
 ))
 (let (($x309 (and $x238 $x302)))
 (let (($x288 (= $x309 true)))
 (let (($x132 (forall ((input.ind-%var2727X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2727X (_ bv4 32))))
 (let ((?x325 (bvadd ?x42 input.dst.llvm-%m2)))
 (let ((?x344 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x325))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x325 (_ bv2 32))) ?x344)))
 (let ((?x324 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x325 (_ bv3 32))) ?x84)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2727X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2727X)))
 (=> $x11 (= ?x168 ?x324))))))))))
 ))
 (let (($x367 (forall ((input.ind-%var2726X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2726X) (bvult input.ind-%var2726X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2726X)))
 (= $x11 $x265))))
 ))
 (let (($x292 (and $x367 $x132)))
 (let (($x160 (= $x292 true)))
 (let (($x83 (and $x160 $x288)))
 (let (($x69 (and $x83 $x72)))
 (let (($x23 (and $x69 $x214)))
 (let (($x371 (and $x23 $x78)))
 (let (($x304 (and $x371 $x79)))
 (let (($x250 (and $x304 $x7)))
 (let (($x192 (and $x250 $x330)))
 (let (($x106 (and $x192 $x137)))
 (let (($x211 (and $x106 $x202)))
 (let (($x221 (and $x211 $x289)))
 (let (($x337 (forall ((input.ind-%var2787X (_ BitVec 32)) )(let ((?x229 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2787X)))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2787X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2787X)))
 (=> $x217 (= ?x258 ?x229))))))
 ))
 (let (($x162 (forall ((input.ind-%var2786X (_ BitVec 32)) )(let (($x152 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2786X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2786X)))
 (= $x217 $x152))))
 ))
 (let (($x282 (and $x162 $x337)))
 (let (($x102 (and $x282 $x221)))
 (let (($x376 (forall ((input.ind-%var2797X (_ BitVec 32)) )(let ((?x112 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2797X)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2797X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2797X)))
 (=> $x11 (= ?x168 ?x112))))))
 ))
 (let (($x232 (forall ((input.ind-%var2796X (_ BitVec 32)) )(let (($x402 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2796X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2796X)))
 (= $x11 $x402))))
 ))
 (let (($x169 (and $x232 $x376)))
 (let (($x179 (and $x169 $x102)))
 (let (($x278 (=> $x179 $x56)))
 (not $x278))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let (($x71 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x275 (=> $x71 true)))
 (let (($x56 (= $x275 true)))
 (let (($x289 (= $x71 true)))
 (let (($x80 (forall ((input.ind-%var2777X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2777X (_ bv4 32))))
 (let ((?x234 (bvadd ?x42 input.dst.llvm-%m1)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x249))))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2777X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2777X)))
 (=> $x217 (= ?x258 ?x343)))))))))
 ))
 (let (($x226 (forall ((input.ind-%var2776X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2776X) (bvult input.ind-%var2776X (_ bv100 32)))))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2776X)))
 (= $x217 $x265))))
 ))
 (let (($x128 (and $x226 $x80)))
 (let (($x202 (= $x128 true)))
 (let ((?x386 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x389 (= (_ bv0 32) ?x386)))
 (let ((?x270 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x85 (= (_ bv0 32) ?x270)))
 (let ((?x317 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x22 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x317)))
 (let ((?x387 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x388 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x387)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x384 (and $x235 $x388)))
 (let (($x347 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x385 (and $x347 $x384)))
 (let (($x25 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x338 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x354 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x153 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x351 (and $x153 $x354)))
 (let (($x5 (not $x351)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x307 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x193 (and $x307 $x14)))
 (let (($x268 (and (not $x193) $x5)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x328 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x328 $x24)))
 (let (($x364 (not $x94)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x48 $x50)))
 (let (($x381 (and (not $x120) $x364)))
 (let (($x182 (and (and (and (and (and (and $x381 $x268) $x338) $x25) $x385) $x22) $x85)))
 (let (($x391 (and $x182 $x389)))
 (let (($x359 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x185 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x185)))
 (let (($x239 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x185)))
 (let (($x331 (or false (or false (and (and true (or $x177 $x239)) (or $x8 $x359))))))
 (let (($x306 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x331)))
 (let (($x82 (and $x306 $x391)))
 (let (($x137 (= $x82 true)))
 (let (($x66 (forall ((input.ind-%var2767X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2767X (_ bv4 32))))
 (let ((?x325 (bvadd ?x42 input.dst.llvm-%m2)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem ?x325))))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv2 32))) ?x246))))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2767X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2767X)))
 (=> $x11 (= ?x168 ?x47)))))))))
 ))
 (let (($x375 (forall ((input.ind-%var2766X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2766X) (bvult input.ind-%var2766X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2766X)))
 (= $x11 $x265))))
 ))
 (let (($x59 (and $x375 $x66)))
 (let (($x330 (= $x59 true)))
 (let (($x98 (forall ((input.ind-%var2757X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2757X (_ bv4 32))))
 (let ((?x234 (bvadd ?x42 input.dst.llvm-%m1)))
 (let ((?x104 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x234))))
 (let ((?x58 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv2 32))) ?x104)))
 (let ((?x322 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv3 32))) ?x58)))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2757X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2757X)))
 (=> $x217 (= ?x258 ?x322))))))))))
 ))
 (let (($x81 (forall ((input.ind-%var2756X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2756X) (bvult input.ind-%var2756X (_ bv100 32)))))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2756X)))
 (= $x217 $x265))))
 ))
 (let (($x301 (and $x81 $x98)))
 (let (($x7 (= $x301 true)))
 (let (($x140 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x172 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x156 (and $x172 $x140)))
 (let (($x79 (= $x156 true)))
 (let ((?x157 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x393 (bvneg ?x157)))
 (let (($x272 (= ?x393 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x78 (= $x272 true)))
 (let (($x93 (= ?x393 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x214 (= $x93 true)))
 (let (($x252 (forall ((input.ind-%var2747X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2747X (_ bv4 32))))
 (let ((?x325 (bvadd ?x42 input.dst.llvm-%m2)))
 (let ((?x129 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x325))))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x325 (_ bv2 32))) ?x129)))
 (let ((?x216 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x325 (_ bv3 32))) ?x259)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2747X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2747X)))
 (=> $x11 (= ?x168 ?x216))))))))))
 ))
 (let (($x57 (forall ((input.ind-%var2746X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2746X) (bvult input.ind-%var2746X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2746X)))
 (= $x11 $x265))))
 ))
 (let (($x220 (and $x57 $x252)))
 (let (($x72 (= $x220 true)))
 (let (($x302 (forall ((input.ind-%var2737X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2737X (_ bv4 32))))
 (let ((?x234 (bvadd ?x42 input.dst.llvm-%m1)))
 (let ((?x285 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x234))))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x234 (_ bv2 32))) ?x285)))
 (let ((?x204 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x234 (_ bv3 32))) ?x111)))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2737X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2737X)))
 (=> $x217 (= ?x258 ?x204))))))))))
 ))
 (let (($x238 (forall ((input.ind-%var2736X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2736X) (bvult input.ind-%var2736X (_ bv100 32)))))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2736X)))
 (= $x217 $x265))))
 ))
 (let (($x309 (and $x238 $x302)))
 (let (($x288 (= $x309 true)))
 (let (($x132 (forall ((input.ind-%var2727X (_ BitVec 32)) )(let ((?x42 (bvmul input.ind-%var2727X (_ bv4 32))))
 (let ((?x325 (bvadd ?x42 input.dst.llvm-%m2)))
 (let ((?x344 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x325))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x325 (_ bv2 32))) ?x344)))
 (let ((?x324 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x325 (_ bv3 32))) ?x84)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2727X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2727X)))
 (=> $x11 (= ?x168 ?x324))))))))))
 ))
 (let (($x367 (forall ((input.ind-%var2726X (_ BitVec 32)) )(let (($x265 (and (bvule (_ bv0 32) input.ind-%var2726X) (bvult input.ind-%var2726X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2726X)))
 (= $x11 $x265))))
 ))
 (let (($x292 (and $x367 $x132)))
 (let (($x160 (= $x292 true)))
 (let (($x83 (and $x160 $x288)))
 (let (($x69 (and $x83 $x72)))
 (let (($x23 (and $x69 $x214)))
 (let (($x371 (and $x23 $x78)))
 (let (($x304 (and $x371 $x79)))
 (let (($x250 (and $x304 $x7)))
 (let (($x192 (and $x250 $x330)))
 (let (($x106 (and $x192 $x137)))
 (let (($x211 (and $x106 $x202)))
 (let (($x221 (and $x211 $x289)))
 (let (($x337 (forall ((input.ind-%var2787X (_ BitVec 32)) )(let ((?x229 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2787X)))
 (let ((?x258 (input.spec-%var-m1-1.1.1 input.ind-%var2787X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2787X)))
 (=> $x217 (= ?x258 ?x229))))))
 ))
 (let (($x162 (forall ((input.ind-%var2786X (_ BitVec 32)) )(let (($x152 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2786X)))
 (let (($x217 (input.spec-%var-m1-1.0.1 input.ind-%var2786X)))
 (= $x217 $x152))))
 ))
 (let (($x282 (and $x162 $x337)))
 (let (($x102 (and $x282 $x221)))
 (let (($x376 (forall ((input.ind-%var2797X (_ BitVec 32)) )(let ((?x112 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2797X)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var2797X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2797X)))
 (=> $x11 (= ?x168 ?x112))))))
 ))
 (let (($x232 (forall ((input.ind-%var2796X (_ BitVec 32)) )(let (($x402 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2796X)))
 (let (($x11 (input.spec-%var-m2-1.0.1 input.ind-%var2796X)))
 (= $x11 $x402))))
 ))
 (let (($x169 (and $x232 $x376)))
 (let (($x179 (and $x169 $x102)))
 (let (($x278 (=> $x179 $x56)))
 (not $x278))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 38
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x105 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x44 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x105)))
 (let ((?x75 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x279 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x75)))
 (let (($x299 (= ?x279 ?x44)))
 (let (($x267 (= $x299 true)))
 (let ((?x199 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x303 (bvneg ?x199)))
 (let (($x231 (= ?x303 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x370 (= $x231 true)))
 (let (($x207 (= ?x303 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x349 (= $x207 true)))
 (let (($x87 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x206 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x317 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x270 (and $x317 $x206)))
 (let (($x97 (and $x270 $x87)))
 (let (($x191 (= $x97 true)))
 (let (($x173 (= $x87 true)))
 (let (($x243 (forall ((input.ind-%var2857X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2857X (_ bv4 32))))
 (let ((?x225 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem ?x225))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv2 32))) ?x46))))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2857X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2857X)))
 (=> $x321 (= ?x178 ?x356)))))))))
 ))
 (let (($x171 (forall ((input.ind-%var2856X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2856X) (bvult input.ind-%var2856X (_ bv100 32)))))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2856X)))
 (= $x321 $x116))))
 ))
 (let (($x244 (and $x171 $x243)))
 (let (($x31 (= $x244 true)))
 (let ((?x312 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x198 (= (_ bv0 32) ?x312)))
 (let ((?x74 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x269 (= (_ bv0 32) ?x74)))
 (let ((?x40 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x40)))
 (let ((?x394 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x327 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x394)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x395 (and $x38 $x327)))
 (let (($x377 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x377 $x395)))
 (let (($x96 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x313 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x378 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x180 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x181 (and $x180 $x378)))
 (let (($x210 (not $x181)))
 (let (($x298 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x374 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x103 (and $x374 $x298)))
 (let (($x254 (and (not $x103) $x210)))
 (let (($x333 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x6 $x333)))
 (let (($x62 (not $x12)))
 (let (($x400 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x188 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (and $x188 $x400)))
 (let (($x326 (and (not $x300) $x62)))
 (let (($x77 (and (and (and (and (and (and $x326 $x254) $x313) $x96) $x115) $x222) $x269)))
 (let (($x396 (and $x77 $x198)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x360 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x360)))
 (let (($x205 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x360)))
 (let (($x55 (or false (or false (and (and true (or $x19 $x205)) (or $x41 $x92))))))
 (let (($x290 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x55)))
 (let (($x332 (and $x290 $x396)))
 (let (($x255 (= $x332 true)))
 (let (($x215 (forall ((input.ind-%var2847X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2847X (_ bv4 32))))
 (let ((?x117 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x329))))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2847X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2847X)))
 (=> $x402 (= ?x101 ?x404)))))))))
 ))
 (let (($x158 (forall ((input.ind-%var2846X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2846X) (bvult input.ind-%var2846X (_ bv100 32)))))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2846X)))
 (= $x402 $x116))))
 ))
 (let (($x286 (and $x158 $x215)))
 (let (($x392 (= $x286 true)))
 (let (($x195 (forall ((input.ind-%var2837X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2837X (_ bv4 32))))
 (let ((?x225 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x179 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x225))))
 (let ((?x56 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x225 (_ bv2 32))) ?x179)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x225 (_ bv3 32))) ?x56)))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2837X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2837X)))
 (=> $x321 (= ?x178 ?x28))))))))))
 ))
 (let (($x226 (forall ((input.ind-%var2836X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2836X) (bvult input.ind-%var2836X (_ bv100 32)))))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2836X)))
 (= $x321 $x116))))
 ))
 (let (($x161 (and $x226 $x195)))
 (let (($x353 (= $x161 true)))
 (let (($x85 (= $x270 true)))
 (let (($x235 (forall ((input.ind-%var2827X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2827X (_ bv4 32))))
 (let ((?x117 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x49 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x117))))
 (let ((?x90 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x117 (_ bv2 32))) ?x49)))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x117 (_ bv3 32))) ?x90)))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2827X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2827X)))
 (=> $x402 (= ?x101 ?x25))))))))))
 ))
 (let (($x306 (forall ((input.ind-%var2826X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2826X) (bvult input.ind-%var2826X (_ bv100 32)))))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2826X)))
 (= $x402 $x116))))
 ))
 (let (($x387 (and $x306 $x235)))
 (let (($x388 (= $x387 true)))
 (let (($x362 (forall ((input.ind-%var2817X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2817X (_ bv4 32))))
 (let ((?x225 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x225))))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x225 (_ bv2 32))) ?x192)))
 (let ((?x177 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x225 (_ bv3 32))) ?x52)))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2817X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2817X)))
 (=> $x321 (= ?x178 ?x177))))))))))
 ))
 (let (($x218 (forall ((input.ind-%var2816X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2816X) (bvult input.ind-%var2816X (_ bv100 32)))))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2816X)))
 (= $x321 $x116))))
 ))
 (let (($x305 (and $x218 $x362)))
 (let (($x54 (= $x305 true)))
 (let (($x172 (forall ((input.ind-%var2807X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2807X (_ bv4 32))))
 (let ((?x117 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x93 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x117))))
 (let ((?x336 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x117 (_ bv2 32))) ?x93)))
 (let ((?x371 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x117 (_ bv3 32))) ?x336)))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2807X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2807X)))
 (=> $x402 (= ?x101 ?x371))))))))))
 ))
 (let (($x310 (forall ((input.ind-%var2806X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2806X) (bvult input.ind-%var2806X (_ bv100 32)))))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2806X)))
 (= $x402 $x116))))
 ))
 (let (($x149 (and $x310 $x172)))
 (let (($x140 (= $x149 true)))
 (let (($x8 (and $x140 $x54)))
 (let (($x384 (and $x8 $x388)))
 (let (($x182 (and $x384 $x85)))
 (let (($x186 (and $x182 $x353)))
 (let (($x340 (and $x186 $x392)))
 (let (($x146 (and $x340 $x255)))
 (let (($x196 (and $x146 $x31)))
 (let (($x26 (and $x196 $x173)))
 (let (($x164 (and $x26 $x191)))
 (let (($x283 (and $x164 $x349)))
 (let (($x380 (and $x283 $x370)))
 (let (($x373 (forall ((input.ind-%var2867X (_ BitVec 32)) )(let ((?x397 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2867X)))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2867X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2867X)))
 (=> $x321 (= ?x178 ?x397))))))
 ))
 (let (($x67 (forall ((input.ind-%var2866X (_ BitVec 32)) )(let (($x248 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2866X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2866X)))
 (= $x321 $x248))))
 ))
 (let (($x237 (and $x67 $x373)))
 (let (($x141 (and $x237 $x380)))
 (let (($x95 (forall ((input.ind-%var2877X (_ BitVec 32)) )(let ((?x229 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2877X)))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2877X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2877X)))
 (=> $x402 (= ?x101 ?x229))))))
 ))
 (let (($x376 (forall ((input.ind-%var2876X (_ BitVec 32)) )(let (($x168 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2876X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2876X)))
 (= $x402 $x168))))
 ))
 (let (($x99 (and $x376 $x95)))
 (let (($x335 (and $x99 $x141)))
 (let (($x127 (=> $x335 $x267)))
 (not $x127)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(assert
 (let ((?x105 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x44 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x105)))
 (let ((?x75 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x279 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x75)))
 (let (($x299 (= ?x279 ?x44)))
 (let (($x267 (= $x299 true)))
 (let ((?x199 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x303 (bvneg ?x199)))
 (let (($x231 (= ?x303 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x370 (= $x231 true)))
 (let (($x207 (= ?x303 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x349 (= $x207 true)))
 (let (($x87 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x206 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x317 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x270 (and $x317 $x206)))
 (let (($x97 (and $x270 $x87)))
 (let (($x191 (= $x97 true)))
 (let (($x173 (= $x87 true)))
 (let (($x243 (forall ((input.ind-%var2857X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2857X (_ bv4 32))))
 (let ((?x225 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem ?x225))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv2 32))) ?x46))))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2857X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2857X)))
 (=> $x321 (= ?x178 ?x356)))))))))
 ))
 (let (($x171 (forall ((input.ind-%var2856X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2856X) (bvult input.ind-%var2856X (_ bv100 32)))))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2856X)))
 (= $x321 $x116))))
 ))
 (let (($x244 (and $x171 $x243)))
 (let (($x31 (= $x244 true)))
 (let ((?x312 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x198 (= (_ bv0 32) ?x312)))
 (let ((?x74 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x269 (= (_ bv0 32) ?x74)))
 (let ((?x40 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x40)))
 (let ((?x394 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x327 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x394)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x395 (and $x38 $x327)))
 (let (($x377 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x377 $x395)))
 (let (($x96 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x313 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x378 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x180 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x181 (and $x180 $x378)))
 (let (($x210 (not $x181)))
 (let (($x298 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x374 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x103 (and $x374 $x298)))
 (let (($x254 (and (not $x103) $x210)))
 (let (($x333 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x6 $x333)))
 (let (($x62 (not $x12)))
 (let (($x400 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x188 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (and $x188 $x400)))
 (let (($x326 (and (not $x300) $x62)))
 (let (($x77 (and (and (and (and (and (and $x326 $x254) $x313) $x96) $x115) $x222) $x269)))
 (let (($x396 (and $x77 $x198)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x360 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x360)))
 (let (($x205 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x360)))
 (let (($x55 (or false (or false (and (and true (or $x19 $x205)) (or $x41 $x92))))))
 (let (($x290 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x55)))
 (let (($x332 (and $x290 $x396)))
 (let (($x255 (= $x332 true)))
 (let (($x215 (forall ((input.ind-%var2847X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2847X (_ bv4 32))))
 (let ((?x117 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x329))))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2847X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2847X)))
 (=> $x402 (= ?x101 ?x404)))))))))
 ))
 (let (($x158 (forall ((input.ind-%var2846X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2846X) (bvult input.ind-%var2846X (_ bv100 32)))))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2846X)))
 (= $x402 $x116))))
 ))
 (let (($x286 (and $x158 $x215)))
 (let (($x392 (= $x286 true)))
 (let (($x195 (forall ((input.ind-%var2837X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2837X (_ bv4 32))))
 (let ((?x225 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x179 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x225))))
 (let ((?x56 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x225 (_ bv2 32))) ?x179)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x225 (_ bv3 32))) ?x56)))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2837X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2837X)))
 (=> $x321 (= ?x178 ?x28))))))))))
 ))
 (let (($x226 (forall ((input.ind-%var2836X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2836X) (bvult input.ind-%var2836X (_ bv100 32)))))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2836X)))
 (= $x321 $x116))))
 ))
 (let (($x161 (and $x226 $x195)))
 (let (($x353 (= $x161 true)))
 (let (($x85 (= $x270 true)))
 (let (($x235 (forall ((input.ind-%var2827X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2827X (_ bv4 32))))
 (let ((?x117 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x49 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x117))))
 (let ((?x90 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x117 (_ bv2 32))) ?x49)))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x117 (_ bv3 32))) ?x90)))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2827X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2827X)))
 (=> $x402 (= ?x101 ?x25))))))))))
 ))
 (let (($x306 (forall ((input.ind-%var2826X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2826X) (bvult input.ind-%var2826X (_ bv100 32)))))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2826X)))
 (= $x402 $x116))))
 ))
 (let (($x387 (and $x306 $x235)))
 (let (($x388 (= $x387 true)))
 (let (($x362 (forall ((input.ind-%var2817X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2817X (_ bv4 32))))
 (let ((?x225 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x225))))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x225 (_ bv2 32))) ?x192)))
 (let ((?x177 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x225 (_ bv3 32))) ?x52)))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2817X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2817X)))
 (=> $x321 (= ?x178 ?x177))))))))))
 ))
 (let (($x218 (forall ((input.ind-%var2816X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2816X) (bvult input.ind-%var2816X (_ bv100 32)))))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2816X)))
 (= $x321 $x116))))
 ))
 (let (($x305 (and $x218 $x362)))
 (let (($x54 (= $x305 true)))
 (let (($x172 (forall ((input.ind-%var2807X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var2807X (_ bv4 32))))
 (let ((?x117 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x93 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x117))))
 (let ((?x336 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x117 (_ bv2 32))) ?x93)))
 (let ((?x371 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x117 (_ bv3 32))) ?x336)))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2807X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2807X)))
 (=> $x402 (= ?x101 ?x371))))))))))
 ))
 (let (($x310 (forall ((input.ind-%var2806X (_ BitVec 32)) )(let (($x116 (and (bvule (_ bv0 32) input.ind-%var2806X) (bvult input.ind-%var2806X (_ bv100 32)))))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2806X)))
 (= $x402 $x116))))
 ))
 (let (($x149 (and $x310 $x172)))
 (let (($x140 (= $x149 true)))
 (let (($x8 (and $x140 $x54)))
 (let (($x384 (and $x8 $x388)))
 (let (($x182 (and $x384 $x85)))
 (let (($x186 (and $x182 $x353)))
 (let (($x340 (and $x186 $x392)))
 (let (($x146 (and $x340 $x255)))
 (let (($x196 (and $x146 $x31)))
 (let (($x26 (and $x196 $x173)))
 (let (($x164 (and $x26 $x191)))
 (let (($x283 (and $x164 $x349)))
 (let (($x380 (and $x283 $x370)))
 (let (($x373 (forall ((input.ind-%var2867X (_ BitVec 32)) )(let ((?x397 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var2867X)))
 (let ((?x178 (input.spec-%var-m1-1.1.1 input.ind-%var2867X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2867X)))
 (=> $x321 (= ?x178 ?x397))))))
 ))
 (let (($x67 (forall ((input.ind-%var2866X (_ BitVec 32)) )(let (($x248 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var2866X)))
 (let (($x321 (input.spec-%var-m1-1.0.1 input.ind-%var2866X)))
 (= $x321 $x248))))
 ))
 (let (($x237 (and $x67 $x373)))
 (let (($x141 (and $x237 $x380)))
 (let (($x95 (forall ((input.ind-%var2877X (_ BitVec 32)) )(let ((?x229 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var2877X)))
 (let ((?x101 (input.spec-%var-m2-1.1.1 input.ind-%var2877X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2877X)))
 (=> $x402 (= ?x101 ?x229))))))
 ))
 (let (($x376 (forall ((input.ind-%var2876X (_ BitVec 32)) )(let (($x168 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var2876X)))
 (let (($x402 (input.spec-%var-m2-1.0.1 input.ind-%var2876X)))
 (= $x402 $x168))))
 ))
 (let (($x99 (and $x376 $x95)))
 (let (($x335 (and $x99 $x141)))
 (let (($x127 (=> $x335 $x267)))
 (not $x127)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 39
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x293 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x11 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x402 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x111 (or (bvugt input.memlabel-mem--arg.0_begin ?x11) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x111) (or $x402 $x293)))))))
 (let (($x185 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x116 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x98 (= ?x116 (_ bv0 32))))
 (let ((?x113 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x248 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x113)))
 (let (($x160 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x248)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x376 (and $x54 $x160)))
 (let (($x135 (and $x376 $x98)))
 (let (($x192 (and $x135 $x185)))
 (and $x192 $x178)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x293 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x11 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x402 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x111 (or (bvugt input.memlabel-mem--arg.0_begin ?x11) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x111) (or $x402 $x293)))))))
 (let (($x185 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x116 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x98 (= ?x116 (_ bv0 32))))
 (let ((?x113 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x248 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x113)))
 (let (($x160 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x248)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x376 (and $x54 $x160)))
 (let (($x135 (and $x376 $x98)))
 (let (($x192 (and $x135 $x185)))
 (and $x192 $x178)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 40
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x69 (= false true)))
 (let ((?x350 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x365 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x372 (concat ?x265 (concat ?x273 (concat ?x365 ?x350)))))
 (let (($x60 (= ?x372 input.dst.llvm-%m)))
 (let (($x285 (= $x60 true)))
 (let (($x323 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x76 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x127 $x323)))))))
 (let (($x279 (= $x76 true)))
 (let ((?x134 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x100 (bvugt ?x134 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x283 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x134 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x134 (bvsub (bvadd ?x134 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x283 $x100)))))))
 (let (($x199 (= $x75 true)))
 (let ((?x213 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x87 (bvugt ?x213 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x213 (_ bv3 32)))))
 (let (($x184 (=> (bvule ?x213 (bvsub (bvadd ?x213 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x87)))))))
 (let (($x243 (= $x184 true)))
 (let ((?x291 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x131 (= (_ bv0 32) ?x291)))
 (let ((?x255 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x255)))
 (let (($x332 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x332 $x146)))
 (let (($x209 (and $x171 $x131)))
 (let (($x395 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x334 (and $x395 $x209)))
 (let (($x251 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x396 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x222 $x251)))))))
 (let (($x46 (and $x396 $x334)))
 (let (($x73 (= $x46 true)))
 (let (($x96 (forall ((input.ind-%var2945X (_ BitVec 32)) )(let ((?x298 (bvadd (bvmul input.ind-%var2945X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv1 32))) (select input.dst.llvm-mem ?x298))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv2 32))) ?x378))))
 (let ((?x194 (input.spec-%var-m-0.1.1 input.ind-%var2945X)))
 (let (($x324 (input.spec-%var-m-0.0.1 input.ind-%var2945X)))
 (=> $x324 (= ?x194 ?x313))))))))
 ))
 (let (($x264 (forall ((input.ind-%var2944X (_ BitVec 32)) )(let (($x324 (input.spec-%var-m-0.0.1 input.ind-%var2944X)))
 (= $x324 (and (bvule (_ bv0 32) input.ind-%var2944X) (bvult input.ind-%var2944X (_ bv100 32))))))
 ))
 (let (($x257 (and $x264 $x96)))
 (let (($x377 (= $x257 true)))
 (let ((?x195 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x21 (bvugt ?x195 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x329 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x195 (_ bv3 32)))))
 (let (($x392 (=> (bvule ?x195 (bvsub (bvadd ?x195 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x329 $x21)))))))
 (let (($x186 (= $x392 true)))
 (let (($x38 (and $x186 $x377)))
 (let (($x356 (and $x38 $x73)))
 (let (($x244 (and $x356 $x243)))
 (let (($x303 (and $x244 $x199)))
 (let (($x105 (and $x303 $x279)))
 (let (($x132 (and $x105 $x285)))
 (let ((?x325 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x275 (= ?x325 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x384 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x385 (ite $x384 (_ bv1 32) (_ bv0 32))))
 (let (($x85 (bvuge ?x385 (_ bv1 32))))
 (let (($x102 (=> $x85 $x275)))
 (let (($x182 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x226 (= $x85 $x182)))
 (let (($x229 (= false false)))
 (let (($x390 (= ?x385 (_ bv0 32))))
 (let (($x270 (=> $x390 $x229)))
 (let (($x22 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x206 (= $x390 $x22)))
 (let (($x56 (and (and (and $x206 $x270) $x226) $x102)))
 (let (($x281 (and $x56 $x132)))
 (let ((?x397 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x339 (= ?x397 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x362 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x8 (ite $x362 (_ bv1 32) (_ bv0 32))))
 (let (($x268 (bvuge ?x8 (_ bv1 32))))
 (let (($x347 (=> $x268 $x339)))
 (let (($x49 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x90 (= $x268 $x49)))
 (let (($x66 (= ?x8 (_ bv0 32))))
 (let (($x319 (=> $x66 $x229)))
 (let (($x177 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x119 (= $x66 $x177)))
 (let (($x388 (and (and (and $x119 $x319) $x90) $x347)))
 (let (($x297 (and $x388 $x281)))
 (let ((?x239 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x175 (= ?x239 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x99 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x89 (ite $x99 (_ bv1 32) (_ bv0 32))))
 (let (($x93 (bvuge ?x89 (_ bv1 32))))
 (let (($x172 (=> $x93 $x175)))
 (let (($x336 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x371 (= $x93 $x336)))
 (let (($x271 (= ?x89 (_ bv0 32))))
 (let (($x157 (=> $x271 $x229)))
 (let (($x393 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x109 (= $x271 $x393)))
 (let (($x139 (and (and (and $x109 $x157) $x371) $x172)))
 (let (($x302 (and $x139 $x297)))
 (let ((?x84 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x318 (= ?x84 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x59 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x402 (ite $x59 (_ bv1 32) (_ bv0 32))))
 (let (($x309 (bvuge ?x402 (_ bv1 32))))
 (let (($x168 (=> $x309 $x318)))
 (let (($x176 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x373 (= $x309 $x176)))
 (let (($x293 (= ?x402 (_ bv0 32))))
 (let (($x238 (=> $x293 $x229)))
 (let (($x214 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x316 (= $x293 $x214)))
 (let (($x282 (and (and (and $x316 $x238) $x373) $x168)))
 (let (($x288 (and $x282 $x302)))
 (let (($x306 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x122 (and $x306 $x288)))
 (let (($x54 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x252 (and $x54 $x122)))
 (let (($x57 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x129 (and $x57 $x252)))
 (let (($x218 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x259 (and $x218 $x129)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x256 (and $x121 $x259)))
 (let (($x361 (and $x229 $x256)))
 (let (($x52 (= ?x325 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x83 (and $x52 $x361)))
 (let (($x135 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x383 (and $x135 $x83)))
 (let (($x216 (and $x229 $x383)))
 (let (($x330 (= ?x397 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x220 (and $x330 $x216)))
 (let (($x287 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x292 (and $x287 $x220)))
 (let (($x241 (and $x229 $x292)))
 (let (($x23 (= ?x239 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x234 (and $x23 $x241)))
 (let (($x338 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x72 (and $x338 $x234)))
 (let (($x104 (and $x229 $x72)))
 (let (($x111 (= ?x84 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x233 (and $x111 $x104)))
 (let (($x322 (=> $x233 $x69)))
 (not $x322)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x69 (= false true)))
 (let ((?x350 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x365 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x372 (concat ?x265 (concat ?x273 (concat ?x365 ?x350)))))
 (let (($x60 (= ?x372 input.dst.llvm-%m)))
 (let (($x285 (= $x60 true)))
 (let (($x323 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x76 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x127 $x323)))))))
 (let (($x279 (= $x76 true)))
 (let ((?x134 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x100 (bvugt ?x134 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x283 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x134 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x134 (bvsub (bvadd ?x134 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x283 $x100)))))))
 (let (($x199 (= $x75 true)))
 (let ((?x213 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x87 (bvugt ?x213 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x213 (_ bv3 32)))))
 (let (($x184 (=> (bvule ?x213 (bvsub (bvadd ?x213 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x87)))))))
 (let (($x243 (= $x184 true)))
 (let ((?x291 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x131 (= (_ bv0 32) ?x291)))
 (let ((?x255 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x255)))
 (let (($x332 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x332 $x146)))
 (let (($x209 (and $x171 $x131)))
 (let (($x395 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x334 (and $x395 $x209)))
 (let (($x251 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x396 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x222 $x251)))))))
 (let (($x46 (and $x396 $x334)))
 (let (($x73 (= $x46 true)))
 (let (($x96 (forall ((input.ind-%var2945X (_ BitVec 32)) )(let ((?x298 (bvadd (bvmul input.ind-%var2945X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv1 32))) (select input.dst.llvm-mem ?x298))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv2 32))) ?x378))))
 (let ((?x194 (input.spec-%var-m-0.1.1 input.ind-%var2945X)))
 (let (($x324 (input.spec-%var-m-0.0.1 input.ind-%var2945X)))
 (=> $x324 (= ?x194 ?x313))))))))
 ))
 (let (($x264 (forall ((input.ind-%var2944X (_ BitVec 32)) )(let (($x324 (input.spec-%var-m-0.0.1 input.ind-%var2944X)))
 (= $x324 (and (bvule (_ bv0 32) input.ind-%var2944X) (bvult input.ind-%var2944X (_ bv100 32))))))
 ))
 (let (($x257 (and $x264 $x96)))
 (let (($x377 (= $x257 true)))
 (let ((?x195 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x21 (bvugt ?x195 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x329 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x195 (_ bv3 32)))))
 (let (($x392 (=> (bvule ?x195 (bvsub (bvadd ?x195 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x329 $x21)))))))
 (let (($x186 (= $x392 true)))
 (let (($x38 (and $x186 $x377)))
 (let (($x356 (and $x38 $x73)))
 (let (($x244 (and $x356 $x243)))
 (let (($x303 (and $x244 $x199)))
 (let (($x105 (and $x303 $x279)))
 (let (($x132 (and $x105 $x285)))
 (let ((?x325 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x275 (= ?x325 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x384 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x385 (ite $x384 (_ bv1 32) (_ bv0 32))))
 (let (($x85 (bvuge ?x385 (_ bv1 32))))
 (let (($x102 (=> $x85 $x275)))
 (let (($x182 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x226 (= $x85 $x182)))
 (let (($x229 (= false false)))
 (let (($x390 (= ?x385 (_ bv0 32))))
 (let (($x270 (=> $x390 $x229)))
 (let (($x22 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x206 (= $x390 $x22)))
 (let (($x56 (and (and (and $x206 $x270) $x226) $x102)))
 (let (($x281 (and $x56 $x132)))
 (let ((?x397 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x339 (= ?x397 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x362 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x8 (ite $x362 (_ bv1 32) (_ bv0 32))))
 (let (($x268 (bvuge ?x8 (_ bv1 32))))
 (let (($x347 (=> $x268 $x339)))
 (let (($x49 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x90 (= $x268 $x49)))
 (let (($x66 (= ?x8 (_ bv0 32))))
 (let (($x319 (=> $x66 $x229)))
 (let (($x177 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x119 (= $x66 $x177)))
 (let (($x388 (and (and (and $x119 $x319) $x90) $x347)))
 (let (($x297 (and $x388 $x281)))
 (let ((?x239 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x175 (= ?x239 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x99 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x89 (ite $x99 (_ bv1 32) (_ bv0 32))))
 (let (($x93 (bvuge ?x89 (_ bv1 32))))
 (let (($x172 (=> $x93 $x175)))
 (let (($x336 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x371 (= $x93 $x336)))
 (let (($x271 (= ?x89 (_ bv0 32))))
 (let (($x157 (=> $x271 $x229)))
 (let (($x393 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x109 (= $x271 $x393)))
 (let (($x139 (and (and (and $x109 $x157) $x371) $x172)))
 (let (($x302 (and $x139 $x297)))
 (let ((?x84 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x318 (= ?x84 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x59 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x402 (ite $x59 (_ bv1 32) (_ bv0 32))))
 (let (($x309 (bvuge ?x402 (_ bv1 32))))
 (let (($x168 (=> $x309 $x318)))
 (let (($x176 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x373 (= $x309 $x176)))
 (let (($x293 (= ?x402 (_ bv0 32))))
 (let (($x238 (=> $x293 $x229)))
 (let (($x214 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x316 (= $x293 $x214)))
 (let (($x282 (and (and (and $x316 $x238) $x373) $x168)))
 (let (($x288 (and $x282 $x302)))
 (let (($x306 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x122 (and $x306 $x288)))
 (let (($x54 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x252 (and $x54 $x122)))
 (let (($x57 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x129 (and $x57 $x252)))
 (let (($x218 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x259 (and $x218 $x129)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x256 (and $x121 $x259)))
 (let (($x361 (and $x229 $x256)))
 (let (($x52 (= ?x325 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x83 (and $x52 $x361)))
 (let (($x135 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x383 (and $x135 $x83)))
 (let (($x216 (and $x229 $x383)))
 (let (($x330 (= ?x397 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x220 (and $x330 $x216)))
 (let (($x287 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x292 (and $x287 $x220)))
 (let (($x241 (and $x229 $x292)))
 (let (($x23 (= ?x239 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x234 (and $x23 $x241)))
 (let (($x338 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x72 (and $x338 $x234)))
 (let (($x104 (and $x229 $x72)))
 (let (($x111 (= ?x84 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x233 (and $x111 $x104)))
 (let (($x322 (=> $x233 $x69)))
 (not $x322)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00593c0c)
  (define-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32)
    #x10000000)
  (define-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32)
    #x08000000)
  (define-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x003ffff9)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00593c0f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00593c0c)
  (define-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32)
    #x00000002)
  (define-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32)
    #x00000003)
  (define-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun k!4 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00593c0c) #xf9
    (ite (= x!0 #x00593c0d) #xff
    (ite (= x!0 #x00593c0e) #x3f
      #x00))))
  (define-fun input.spec-%var-m-0.0.1 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000003) true
    (ite (= x!0 #x00000002) true
    (ite (= x!0 #x00000001) true
    (ite (= x!0 #x00000000) true
      (not (bvule #x00000064 x!0)))))))
  (define-fun input.spec-%var-m-0.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000003) #x00000000
    (ite (= x!0 #x00000002) #x00000000
    (ite (= x!0 #x00000001) #x00000000
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!4 (bvadd #x00000003
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #x00593c0f)
                                     (k!4 #x00593c0e)
                                     (k!4 #x00593c0d)
                                     (k!4 #x00593c0c)))))
            (a!2 (k!4 (bvadd #x00000002
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #x00593c0f)
                                     (k!4 #x00593c0e)
                                     (k!4 #x00593c0d)
                                     (k!4 #x00593c0c)))))
            (a!3 (k!4 (bvadd #x00000001
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #x00593c0f)
                                     (k!4 #x00593c0e)
                                     (k!4 #x00593c0d)
                                     (k!4 #x00593c0c)))))
            (a!4 (k!4 (bvadd (bvmul #x00000004 x!0)
                             (concat (k!4 #x00593c0f)
                                     (k!4 #x00593c0e)
                                     (k!4 #x00593c0d)
                                     (k!4 #x00593c0c))))))
        (concat a!1 a!2 a!3 a!4)))))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32)
    #x00000002)
  (define-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32)
    #x00000400)
  (define-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32)
    #x00400000)
  (define-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x1fff7b28)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xfffffffe)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x1fff7b2b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x1fff7b28)
  (define-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32)
    #x00000002)
  (define-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32)
    #x00000003)
  (define-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m-0.0.1!6 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000003) true
    (ite (= x!0 #x00000002) true
    (ite (= x!0 #x00000001) true
    (ite (= x!0 #x00000000) true
      false)))))
  (define-fun k!5 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (ite (bvule #x00000003 x!0)
                    (ite (bvule #x00000064 x!0)
                         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
                         #x00000003)
                    #x00000002)))
      (ite (bvule #x00000001 x!0)
           (ite (bvule #x00000002 x!0) a!1 #x00000001)
           #x00000000)))
  (define-fun input.spec-%var-m-0.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m-0.0.1!6 (k!5 x!0)))
  (define-fun k!4 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x1fff7b2a) #xff
    (ite (= x!0 #x1fff7b29) #xff
    (ite (= x!0 #x1fff7b2b) #xff
    (ite (= x!0 #x1fff7b28) #xfe
      #x00)))))
  (define-fun input.spec-%var-m-0.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000003) #x00000000
    (ite (= x!0 #x00000002) #x00000000
    (ite (= x!0 #x00000001) #x00000000
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!4 (bvadd #x00000003
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #x1fff7b2b)
                                     (k!4 #x1fff7b2a)
                                     (k!4 #x1fff7b29)
                                     (k!4 #x1fff7b28)))))
            (a!2 (k!4 (bvadd #x00000002
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #x1fff7b2b)
                                     (k!4 #x1fff7b2a)
                                     (k!4 #x1fff7b29)
                                     (k!4 #x1fff7b28)))))
            (a!3 (k!4 (bvadd #x00000001
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #x1fff7b2b)
                                     (k!4 #x1fff7b2a)
                                     (k!4 #x1fff7b29)
                                     (k!4 #x1fff7b28)))))
            (a!4 (k!4 (bvadd (bvmul #x00000004 x!0)
                             (concat (k!4 #x1fff7b2b)
                                     (k!4 #x1fff7b2a)
                                     (k!4 #x1fff7b29)
                                     (k!4 #x1fff7b28))))))
        (concat a!1 a!2 a!3 a!4)))))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 41
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x115 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x51 (ite $x115 (_ bv1 32) (_ bv0 32))))
 (let (($x269 (bvuge ?x51 (_ bv1 32))))
 (let (($x228 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x123 (ite $x228 (_ bv1 32) (_ bv0 32))))
 (let (($x378 (bvuge ?x123 (_ bv1 32))))
 (let (($x403 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x215 (ite $x403 (_ bv1 32) (_ bv0 32))))
 (let (($x357 (bvuge ?x215 (_ bv1 32))))
 (let (($x278 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x56 (ite $x278 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (= ?x56 (_ bv0 32))))
 (let (($x311 (bvuge ?x56 (_ bv1 32))))
 (let (($x359 (or $x311 $x148)))
 (let (($x331 (and $x359 $x357)))
 (let (($x392 (= ?x215 (_ bv0 32))))
 (let (($x294 (and $x359 $x392)))
 (let (($x351 (or $x294 $x331)))
 (let (($x50 (and $x351 $x378)))
 (let (($x181 (= ?x123 (_ bv0 32))))
 (let (($x30 (and $x351 $x181)))
 (let (($x5 (or $x30 $x50)))
 (let (($x386 (and $x5 $x269)))
 (let (($x198 (= ?x51 (_ bv0 32))))
 (let (($x39 (and $x5 $x198)))
 (let (($x391 (or $x39 $x386)))
 (let (($x82 (or false $x391)))
 (let (($x29 (= $x82 true)))
 (let ((?x301 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x86 (concat ?x368 (concat ?x250 (concat ?x246 ?x301)))))
 (let (($x147 (= ?x86 input.dst.llvm-%m)))
 (let (($x79 (= $x147 true)))
 (let ((?x402 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x326 (= (bvand ?x402 (_ bv4294967292 32)) ?x402)))
 (let ((?x321 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x340 (= (bvand ?x321 (_ bv4294967292 32)) ?x321)))
 (let (($x379 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x321 (bvsub ?x321 (_ bv4 32))) (bvult ?x321 (bvsub ?x321 (_ bv4 32))))))
 (let (($x188 (and true $x379)))
 (let ((?x239 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x333 (= (bvand ?x239 (_ bv4294967292 32)) ?x239)))
 (let (($x91 (and $x333 $x188)))
 (let (($x227 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x402 (bvsub ?x402 (_ bv8 32))) (bvult ?x402 (bvsub ?x402 (_ bv8 32))))))
 (let (($x62 (and (and (and true $x227) $x91) $x340)))
 (let (($x245 (and $x62 $x326)))
 (let (($x304 (= $x245 true)))
 (let (($x322 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x156 (and true $x322)))
 (let (($x383 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x28 (and $x383 $x156)))
 (let (($x234 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x239 (bvsub ?x239 (_ bv12 32))) (bvult ?x239 (bvsub ?x239 (_ bv12 32))))))
 (let (($x192 (and (and (and true $x383) $x234) $x28)))
 (let (($x113 (= $x192 true)))
 (let ((?x302 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x288 (= (_ bv0 32) ?x302)))
 (let ((?x132 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x281 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x132)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x297 (and $x285 $x281)))
 (let (($x122 (and $x297 $x288)))
 (let (($x105 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (and $x105 $x122)))
 (let (($x112 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x273 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x273 $x112)))))))
 (let (($x129 (and $x60 $x252)))
 (let (($x259 (= $x129 true)))
 (let (($x261 (forall ((input.ind-%var3081X (_ BitVec 32)) )(let ((?x370 (bvadd (bvmul input.ind-%var3081X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv1 32))) (select input.dst.llvm-mem ?x370))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv2 32))) ?x199))))
 (let ((?x280 (input.spec-%var-m-0.1.1 input.ind-%var3081X)))
 (let (($x275 (input.spec-%var-m-0.0.1 input.ind-%var3081X)))
 (=> $x275 (= ?x280 ?x127))))))))
 ))
 (let (($x196 (forall ((input.ind-%var3080X (_ BitVec 32)) )(let (($x275 (input.spec-%var-m-0.0.1 input.ind-%var3080X)))
 (= $x275 (and (bvule (_ bv0 32) input.ind-%var3080X) (bvult input.ind-%var3080X (_ bv100 32))))))
 ))
 (let (($x189 (and $x196 $x261)))
 (let (($x162 (= $x189 true)))
 (let (($x256 (and $x162 $x259)))
 (let (($x126 (and $x256 $x113)))
 (let (($x81 (and $x126 $x304)))
 (let (($x107 (and $x81 $x79)))
 (let ((?x388 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x327 (= ?x388 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x395 (=> $x269 $x327)))
 (let (($x77 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x312 (= $x269 $x77)))
 (let (($x362 (= false false)))
 (let (($x74 (=> $x198 $x362)))
 (let (($x222 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x251 (= $x198 $x222)))
 (let (($x146 (and (and (and $x251 $x74) $x312) $x395)))
 (let (($x159 (and $x146 $x107)))
 (let ((?x90 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x65 (= ?x90 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x96 (=> $x378 $x65)))
 (let (($x254 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x313 (= $x378 $x254)))
 (let (($x377 (and (and (= $x181 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x181 $x362)) $x313)))
 (let (($x38 (and $x377 $x96)))
 (let (($x47 (and $x38 $x159)))
 (let ((?x119 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x264 (= ?x119 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x194 (=> $x357 $x264)))
 (let (($x19 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x205 (= $x357 $x19)))
 (let (($x374 (and (and (= $x392 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x392 $x362)) $x205)))
 (let (($x298 (and $x374 $x194)))
 (let (($x48 (and $x298 $x47)))
 (let ((?x282 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x329 (= ?x282 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x166 (=> $x311 $x329)))
 (let (($x286 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x68 (= $x311 $x286)))
 (let (($x15 (=> $x148 $x362)))
 (let (($x195 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x161 (= $x148 $x195)))
 (let (($x348 (and (and (and $x161 $x15) $x68) $x166)))
 (let (($x58 (and $x348 $x48)))
 (let (($x179 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x136 (and $x179 $x58)))
 (let (($x182 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x120 (and $x182 $x136)))
 (let (($x221 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x45 (and $x221 $x120)))
 (let (($x206 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x212 (and $x206 $x45)))
 (let (($x317 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x382 (and $x317 $x212)))
 (let (($x118 (and $x362 $x382)))
 (let (($x385 (= ?x388 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x328 (and $x385 $x118)))
 (let (($x347 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x174 (and $x347 $x328)))
 (let (($x153 (and $x362 $x174)))
 (let (($x25 (= ?x90 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x307 (and $x25 $x153)))
 (let (($x49 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x14 (and $x49 $x307)))
 (let (($x94 (and $x362 $x14)))
 (let (($x235 (= ?x119 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x364 (and $x235 $x94)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x24 (and $x13 $x364)))
 (let (($x381 (and $x362 $x24)))
 (let (($x139 (= ?x282 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x193 (and $x139 $x381)))
 (let (($x393 (bvugt ?x321 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x321 (_ bv3 32)))))
 (let (($x371 (=> (bvule ?x321 (bvsub (bvadd ?x321 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x117 $x393)))))))
 (let (($x67 (bvugt ?x402 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x402 (_ bv3 32)))))
 (let (($x318 (=> (bvule ?x402 (bvsub (bvadd ?x402 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x67)))))))
 (let (($x376 (bvugt ?x239 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x239 (_ bv3 32)))))
 (let (($x59 (=> (bvule ?x239 (bvsub (bvadd ?x239 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x218 $x376)))))))
 (let (($x185 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x325 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x185)))))))
 (let (($x401 (and $x325 $x59)))
 (let (($x293 (and $x401 $x318)))
 (let (($x168 (and $x293 $x371)))
 (let (($x354 (and $x168 $x193)))
 (let (($x249 (=> $x354 $x29)))
 (not $x249)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x115 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x51 (ite $x115 (_ bv1 32) (_ bv0 32))))
 (let (($x269 (bvuge ?x51 (_ bv1 32))))
 (let (($x228 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x123 (ite $x228 (_ bv1 32) (_ bv0 32))))
 (let (($x378 (bvuge ?x123 (_ bv1 32))))
 (let (($x403 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x215 (ite $x403 (_ bv1 32) (_ bv0 32))))
 (let (($x357 (bvuge ?x215 (_ bv1 32))))
 (let (($x278 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x56 (ite $x278 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (= ?x56 (_ bv0 32))))
 (let (($x311 (bvuge ?x56 (_ bv1 32))))
 (let (($x359 (or $x311 $x148)))
 (let (($x331 (and $x359 $x357)))
 (let (($x392 (= ?x215 (_ bv0 32))))
 (let (($x294 (and $x359 $x392)))
 (let (($x351 (or $x294 $x331)))
 (let (($x50 (and $x351 $x378)))
 (let (($x181 (= ?x123 (_ bv0 32))))
 (let (($x30 (and $x351 $x181)))
 (let (($x5 (or $x30 $x50)))
 (let (($x386 (and $x5 $x269)))
 (let (($x198 (= ?x51 (_ bv0 32))))
 (let (($x39 (and $x5 $x198)))
 (let (($x391 (or $x39 $x386)))
 (let (($x82 (or false $x391)))
 (let (($x29 (= $x82 true)))
 (let ((?x301 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x86 (concat ?x368 (concat ?x250 (concat ?x246 ?x301)))))
 (let (($x147 (= ?x86 input.dst.llvm-%m)))
 (let (($x79 (= $x147 true)))
 (let ((?x402 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x326 (= (bvand ?x402 (_ bv4294967292 32)) ?x402)))
 (let ((?x321 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x340 (= (bvand ?x321 (_ bv4294967292 32)) ?x321)))
 (let (($x379 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x321 (bvsub ?x321 (_ bv4 32))) (bvult ?x321 (bvsub ?x321 (_ bv4 32))))))
 (let (($x188 (and true $x379)))
 (let ((?x239 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x333 (= (bvand ?x239 (_ bv4294967292 32)) ?x239)))
 (let (($x91 (and $x333 $x188)))
 (let (($x227 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x402 (bvsub ?x402 (_ bv8 32))) (bvult ?x402 (bvsub ?x402 (_ bv8 32))))))
 (let (($x62 (and (and (and true $x227) $x91) $x340)))
 (let (($x245 (and $x62 $x326)))
 (let (($x304 (= $x245 true)))
 (let (($x322 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x156 (and true $x322)))
 (let (($x383 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x28 (and $x383 $x156)))
 (let (($x234 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x239 (bvsub ?x239 (_ bv12 32))) (bvult ?x239 (bvsub ?x239 (_ bv12 32))))))
 (let (($x192 (and (and (and true $x383) $x234) $x28)))
 (let (($x113 (= $x192 true)))
 (let ((?x302 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x288 (= (_ bv0 32) ?x302)))
 (let ((?x132 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x281 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x132)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x297 (and $x285 $x281)))
 (let (($x122 (and $x297 $x288)))
 (let (($x105 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (and $x105 $x122)))
 (let (($x112 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x273 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x273 $x112)))))))
 (let (($x129 (and $x60 $x252)))
 (let (($x259 (= $x129 true)))
 (let (($x261 (forall ((input.ind-%var3081X (_ BitVec 32)) )(let ((?x370 (bvadd (bvmul input.ind-%var3081X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv1 32))) (select input.dst.llvm-mem ?x370))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv2 32))) ?x199))))
 (let ((?x280 (input.spec-%var-m-0.1.1 input.ind-%var3081X)))
 (let (($x275 (input.spec-%var-m-0.0.1 input.ind-%var3081X)))
 (=> $x275 (= ?x280 ?x127))))))))
 ))
 (let (($x196 (forall ((input.ind-%var3080X (_ BitVec 32)) )(let (($x275 (input.spec-%var-m-0.0.1 input.ind-%var3080X)))
 (= $x275 (and (bvule (_ bv0 32) input.ind-%var3080X) (bvult input.ind-%var3080X (_ bv100 32))))))
 ))
 (let (($x189 (and $x196 $x261)))
 (let (($x162 (= $x189 true)))
 (let (($x256 (and $x162 $x259)))
 (let (($x126 (and $x256 $x113)))
 (let (($x81 (and $x126 $x304)))
 (let (($x107 (and $x81 $x79)))
 (let ((?x388 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x327 (= ?x388 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x395 (=> $x269 $x327)))
 (let (($x77 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x312 (= $x269 $x77)))
 (let (($x362 (= false false)))
 (let (($x74 (=> $x198 $x362)))
 (let (($x222 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x251 (= $x198 $x222)))
 (let (($x146 (and (and (and $x251 $x74) $x312) $x395)))
 (let (($x159 (and $x146 $x107)))
 (let ((?x90 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x65 (= ?x90 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x96 (=> $x378 $x65)))
 (let (($x254 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x313 (= $x378 $x254)))
 (let (($x377 (and (and (= $x181 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x181 $x362)) $x313)))
 (let (($x38 (and $x377 $x96)))
 (let (($x47 (and $x38 $x159)))
 (let ((?x119 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x264 (= ?x119 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x194 (=> $x357 $x264)))
 (let (($x19 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x205 (= $x357 $x19)))
 (let (($x374 (and (and (= $x392 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x392 $x362)) $x205)))
 (let (($x298 (and $x374 $x194)))
 (let (($x48 (and $x298 $x47)))
 (let ((?x282 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x329 (= ?x282 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x166 (=> $x311 $x329)))
 (let (($x286 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x68 (= $x311 $x286)))
 (let (($x15 (=> $x148 $x362)))
 (let (($x195 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x161 (= $x148 $x195)))
 (let (($x348 (and (and (and $x161 $x15) $x68) $x166)))
 (let (($x58 (and $x348 $x48)))
 (let (($x179 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x136 (and $x179 $x58)))
 (let (($x182 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x120 (and $x182 $x136)))
 (let (($x221 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x45 (and $x221 $x120)))
 (let (($x206 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x212 (and $x206 $x45)))
 (let (($x317 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x382 (and $x317 $x212)))
 (let (($x118 (and $x362 $x382)))
 (let (($x385 (= ?x388 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x328 (and $x385 $x118)))
 (let (($x347 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x174 (and $x347 $x328)))
 (let (($x153 (and $x362 $x174)))
 (let (($x25 (= ?x90 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x307 (and $x25 $x153)))
 (let (($x49 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x14 (and $x49 $x307)))
 (let (($x94 (and $x362 $x14)))
 (let (($x235 (= ?x119 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x364 (and $x235 $x94)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x24 (and $x13 $x364)))
 (let (($x381 (and $x362 $x24)))
 (let (($x139 (= ?x282 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x193 (and $x139 $x381)))
 (let (($x393 (bvugt ?x321 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x321 (_ bv3 32)))))
 (let (($x371 (=> (bvule ?x321 (bvsub (bvadd ?x321 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x117 $x393)))))))
 (let (($x67 (bvugt ?x402 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x402 (_ bv3 32)))))
 (let (($x318 (=> (bvule ?x402 (bvsub (bvadd ?x402 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x67)))))))
 (let (($x376 (bvugt ?x239 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x239 (_ bv3 32)))))
 (let (($x59 (=> (bvule ?x239 (bvsub (bvadd ?x239 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x218 $x376)))))))
 (let (($x185 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x325 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x185)))))))
 (let (($x401 (and $x325 $x59)))
 (let (($x293 (and $x401 $x318)))
 (let (($x168 (and $x293 $x371)))
 (let (($x354 (and $x168 $x193)))
 (let (($x249 (=> $x354 $x29)))
 (not $x249)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 201 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 42
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x90 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x18 (bvmul (_ bv4294967295 32) ?x90)))
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x61 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x8)))
 (let ((?x125 (bvadd ?x61 ?x18)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x43 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x330 (bvadd ?x214 (_ bv3 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem ?x330) (concat ?x10 ?x43))))
 (let ((?x20 (bvmul (_ bv4294967295 32) ?x342)))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x289 (concat ?x346 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x376 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x172 (bvadd ?x376 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x172) (concat ?x124 ?x289))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x16 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x305 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x268 (bvadd ?x305 (_ bv3 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem ?x268) (concat ?x133 ?x16))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x208)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x224)))
 (let ((?x369 (bvadd (bvadd (bvadd ?x128 ?x106) ?x130) ?x20)))
 (let (($x17 (= ?x369 ?x125)))
 (let (($x34 (= $x17 true)))
 (let ((?x307 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x381 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x294 (concat ?x359 (concat ?x381 (concat ?x94 ?x307)))))
 (let (($x29 (= ?x294 input.dst.llvm-%m)))
 (let (($x249 (= $x29 true)))
 (let (($x223 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x189 (= (bvand ?x376 (_ bv4294967292 32)) ?x376)))
 (let (($x127 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x376 (bvsub ?x376 (_ bv4 32))) (bvult ?x376 (bvsub ?x376 (_ bv4 32))))))
 (let (($x323 (and true $x127)))
 (let (($x141 (= (bvand ?x305 (_ bv4294967292 32)) ?x305)))
 (let (($x204 (and $x141 $x323)))
 (let (($x267 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x265 (and (and (and true $x267) $x204) $x189)))
 (let (($x302 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x288 (and true $x302)))
 (let (($x350 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x122 (and $x350 $x288)))
 (let (($x105 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x305 (bvsub ?x305 (_ bv12 32))) (bvult ?x305 (bvsub ?x305 (_ bv12 32))))))
 (let (($x259 (and (and (and true $x350) $x105) $x122)))
 (let (($x30 (and (and $x259 $x265) $x223)))
 (let (($x331 (= input.dst.llvm-%m ?x294)))
 (let ((?x382 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x118 (= (_ bv0 32) ?x382)))
 (let ((?x120 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x120)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x212 (and $x136 $x45)))
 (let (($x328 (and $x212 $x118)))
 (let (($x246 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x246 $x328)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x58 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x147)))))))
 (let (($x39 (and (and (and $x58 $x174) $x331) $x30)))
 (let (($x368 (forall ((input.ind-%var3129X (_ BitVec 32)) )(let ((?x379 (bvadd (bvmul input.ind-%var3129X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv1 32))) (select input.dst.llvm-mem ?x379))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv2 32))) ?x12))))
 (let ((?x119 (input.spec-%var-m-0.1.1 input.ind-%var3129X)))
 (let (($x362 (input.spec-%var-m-0.0.1 input.ind-%var3129X)))
 (=> $x362 (= ?x119 ?x304))))))))
 ))
 (let (($x233 (forall ((input.ind-%var3128X (_ BitVec 32)) )(let (($x362 (input.spec-%var-m-0.0.1 input.ind-%var3128X)))
 (= $x362 (and (bvule (_ bv0 32) input.ind-%var3128X) (bvult input.ind-%var3128X (_ bv100 32))))))
 ))
 (let (($x399 (and $x233 $x368)))
 (let (($x386 (and $x399 $x39)))
 (let (($x391 (= $x386 true)))
 (let (($x256 (= $x259 true)))
 (let (($x273 (and $x265 $x223)))
 (let (($x112 (= $x273 true)))
 (let (($x361 (and $x112 $x256)))
 (let (($x82 (and $x361 $x391)))
 (let (($x211 (and $x82 $x249)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x92 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x264 (bvuge ?x92 (_ bv1 32))))
 (let (($x161 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x21 (ite $x161 (_ bv1 32) (_ bv0 32))))
 (let (($x329 (bvuge ?x21 (_ bv1 32))))
 (let (($x31 (and $x329 $x264)))
 (let (($x103 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x257 (ite $x103 (_ bv1 32) (_ bv0 32))))
 (let (($x65 (bvuge ?x257 (_ bv1 32))))
 (let (($x196 (and $x65 $x31)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x332 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (bvuge ?x332 (_ bv1 32))))
 (let (($x280 (and $x327 $x196)))
 (let (($x160 (and $x280 $x211)))
 (let ((?x22 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x275 (= ?x22 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x150 (=> $x327 $x275)))
 (let (($x395 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x146 (= $x327 $x395)))
 (let (($x371 (= false false)))
 (let (($x269 (= ?x332 (_ bv0 32))))
 (let (($x396 (=> $x269 $x371)))
 (let (($x312 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x255 (= $x269 $x312)))
 (let (($x213 (and (and (and $x255 $x396) $x146) $x150)))
 (let (($x76 (and $x213 $x160)))
 (let ((?x388 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x51 (= ?x388 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x198 (=> $x65 $x51)))
 (let (($x96 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x38 (= $x65 $x96)))
 (let (($x378 (= ?x257 (_ bv0 32))))
 (let (($x240 (=> $x378 $x371)))
 (let (($x313 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x377 (= $x378 $x313)))
 (let (($x251 (and (and (and $x377 $x240) $x38) $x198)))
 (let (($x315 (and $x251 $x76)))
 (let (($x123 (= ?x90 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x181 (=> $x264 $x123)))
 (let (($x194 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x298 (= $x264 $x194)))
 (let (($x357 (= ?x92 (_ bv0 32))))
 (let (($x296 (=> $x357 $x371)))
 (let (($x205 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x374 (= $x357 $x205)))
 (let (($x180 (and (and (and $x374 $x296) $x298) $x181)))
 (let (($x102 (and $x180 $x315)))
 (let (($x215 (= ?x8 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x392 (=> $x329 $x215)))
 (let (($x166 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x348 (= $x329 $x166)))
 (let (($x311 (= ?x21 (_ bv0 32))))
 (let (($x295 (=> $x311 $x371)))
 (let (($x68 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x404 (= $x311 $x68)))
 (let (($x324 (and (and (and $x404 $x295) $x348) $x392)))
 (let (($x175 (and $x324 $x102)))
 (let (($x195 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x114 (and $x195 $x175)))
 (let (($x148 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x171 (and $x148 $x114)))
 (let (($x278 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x131 (and $x278 $x171)))
 (let (($x226 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x334 (and $x226 $x131)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x173 (and $x85 $x334)))
 (let (($x26 (and $x371 $x173)))
 (let (($x270 (= ?x22 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x207 (and $x270 $x26)))
 (let (($x317 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x335 (and $x317 $x207)))
 (let (($x244 (and $x371 $x335)))
 (let (($x385 (= ?x388 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x134 (and $x385 $x244)))
 (let (($x347 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x191 (and $x347 $x134)))
 (let (($x184 (and $x371 $x191)))
 (let (($x25 (= ?x90 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x97 (and $x25 $x184)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x243 (and $x117 $x97)))
 (let (($x155 (and $x371 $x243)))
 (let (($x393 (= ?x8 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x349 (and $x393 $x155)))
 (let (($x282 (bvugt ?x376 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x172)))
 (let (($x176 (=> (bvule ?x376 (bvsub (bvadd ?x376 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x282)))))))
 (let (($x218 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x330)))
 (let (($x229 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x218)))))))
 (let (($x293 (bvugt ?x305 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x325 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x268)))
 (let (($x401 (=> (bvule ?x305 (bvsub (bvadd ?x305 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x325 $x293)))))))
 (let (($x287 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x185 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x185)))
 (let (($x84 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x287)))))))
 (let (($x353 (and $x84 $x401)))
 (let (($x78 (and $x353 $x229)))
 (let (($x309 (and $x78 $x176)))
 (let (($x291 (and $x309 $x349)))
 (let (($x247 (=> $x291 $x34)))
 (not $x247))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x90 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x18 (bvmul (_ bv4294967295 32) ?x90)))
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x61 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x8)))
 (let ((?x125 (bvadd ?x61 ?x18)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x43 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x330 (bvadd ?x214 (_ bv3 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem ?x330) (concat ?x10 ?x43))))
 (let ((?x20 (bvmul (_ bv4294967295 32) ?x342)))
 (let ((?x346 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x289 (concat ?x346 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x376 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x172 (bvadd ?x376 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x172) (concat ?x124 ?x289))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x16 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x305 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x268 (bvadd ?x305 (_ bv3 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem ?x268) (concat ?x133 ?x16))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x208)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x224)))
 (let ((?x369 (bvadd (bvadd (bvadd ?x128 ?x106) ?x130) ?x20)))
 (let (($x17 (= ?x369 ?x125)))
 (let (($x34 (= $x17 true)))
 (let ((?x307 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x381 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x294 (concat ?x359 (concat ?x381 (concat ?x94 ?x307)))))
 (let (($x29 (= ?x294 input.dst.llvm-%m)))
 (let (($x249 (= $x29 true)))
 (let (($x223 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x189 (= (bvand ?x376 (_ bv4294967292 32)) ?x376)))
 (let (($x127 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x376 (bvsub ?x376 (_ bv4 32))) (bvult ?x376 (bvsub ?x376 (_ bv4 32))))))
 (let (($x323 (and true $x127)))
 (let (($x141 (= (bvand ?x305 (_ bv4294967292 32)) ?x305)))
 (let (($x204 (and $x141 $x323)))
 (let (($x267 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x265 (and (and (and true $x267) $x204) $x189)))
 (let (($x302 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x288 (and true $x302)))
 (let (($x350 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x122 (and $x350 $x288)))
 (let (($x105 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x305 (bvsub ?x305 (_ bv12 32))) (bvult ?x305 (bvsub ?x305 (_ bv12 32))))))
 (let (($x259 (and (and (and true $x350) $x105) $x122)))
 (let (($x30 (and (and $x259 $x265) $x223)))
 (let (($x331 (= input.dst.llvm-%m ?x294)))
 (let ((?x382 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x118 (= (_ bv0 32) ?x382)))
 (let ((?x120 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x120)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x212 (and $x136 $x45)))
 (let (($x328 (and $x212 $x118)))
 (let (($x246 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x246 $x328)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x58 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x147)))))))
 (let (($x39 (and (and (and $x58 $x174) $x331) $x30)))
 (let (($x368 (forall ((input.ind-%var3129X (_ BitVec 32)) )(let ((?x379 (bvadd (bvmul input.ind-%var3129X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv1 32))) (select input.dst.llvm-mem ?x379))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv2 32))) ?x12))))
 (let ((?x119 (input.spec-%var-m-0.1.1 input.ind-%var3129X)))
 (let (($x362 (input.spec-%var-m-0.0.1 input.ind-%var3129X)))
 (=> $x362 (= ?x119 ?x304))))))))
 ))
 (let (($x233 (forall ((input.ind-%var3128X (_ BitVec 32)) )(let (($x362 (input.spec-%var-m-0.0.1 input.ind-%var3128X)))
 (= $x362 (and (bvule (_ bv0 32) input.ind-%var3128X) (bvult input.ind-%var3128X (_ bv100 32))))))
 ))
 (let (($x399 (and $x233 $x368)))
 (let (($x386 (and $x399 $x39)))
 (let (($x391 (= $x386 true)))
 (let (($x256 (= $x259 true)))
 (let (($x273 (and $x265 $x223)))
 (let (($x112 (= $x273 true)))
 (let (($x361 (and $x112 $x256)))
 (let (($x82 (and $x361 $x391)))
 (let (($x211 (and $x82 $x249)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x92 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x264 (bvuge ?x92 (_ bv1 32))))
 (let (($x161 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x21 (ite $x161 (_ bv1 32) (_ bv0 32))))
 (let (($x329 (bvuge ?x21 (_ bv1 32))))
 (let (($x31 (and $x329 $x264)))
 (let (($x103 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x257 (ite $x103 (_ bv1 32) (_ bv0 32))))
 (let (($x65 (bvuge ?x257 (_ bv1 32))))
 (let (($x196 (and $x65 $x31)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x332 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (bvuge ?x332 (_ bv1 32))))
 (let (($x280 (and $x327 $x196)))
 (let (($x160 (and $x280 $x211)))
 (let ((?x22 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x275 (= ?x22 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x150 (=> $x327 $x275)))
 (let (($x395 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x146 (= $x327 $x395)))
 (let (($x371 (= false false)))
 (let (($x269 (= ?x332 (_ bv0 32))))
 (let (($x396 (=> $x269 $x371)))
 (let (($x312 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x255 (= $x269 $x312)))
 (let (($x213 (and (and (and $x255 $x396) $x146) $x150)))
 (let (($x76 (and $x213 $x160)))
 (let ((?x388 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x51 (= ?x388 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x198 (=> $x65 $x51)))
 (let (($x96 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x38 (= $x65 $x96)))
 (let (($x378 (= ?x257 (_ bv0 32))))
 (let (($x240 (=> $x378 $x371)))
 (let (($x313 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x377 (= $x378 $x313)))
 (let (($x251 (and (and (and $x377 $x240) $x38) $x198)))
 (let (($x315 (and $x251 $x76)))
 (let (($x123 (= ?x90 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x181 (=> $x264 $x123)))
 (let (($x194 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x298 (= $x264 $x194)))
 (let (($x357 (= ?x92 (_ bv0 32))))
 (let (($x296 (=> $x357 $x371)))
 (let (($x205 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x374 (= $x357 $x205)))
 (let (($x180 (and (and (and $x374 $x296) $x298) $x181)))
 (let (($x102 (and $x180 $x315)))
 (let (($x215 (= ?x8 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x392 (=> $x329 $x215)))
 (let (($x166 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x348 (= $x329 $x166)))
 (let (($x311 (= ?x21 (_ bv0 32))))
 (let (($x295 (=> $x311 $x371)))
 (let (($x68 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x404 (= $x311 $x68)))
 (let (($x324 (and (and (and $x404 $x295) $x348) $x392)))
 (let (($x175 (and $x324 $x102)))
 (let (($x195 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x114 (and $x195 $x175)))
 (let (($x148 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x171 (and $x148 $x114)))
 (let (($x278 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x131 (and $x278 $x171)))
 (let (($x226 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x334 (and $x226 $x131)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x173 (and $x85 $x334)))
 (let (($x26 (and $x371 $x173)))
 (let (($x270 (= ?x22 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x207 (and $x270 $x26)))
 (let (($x317 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x335 (and $x317 $x207)))
 (let (($x244 (and $x371 $x335)))
 (let (($x385 (= ?x388 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x134 (and $x385 $x244)))
 (let (($x347 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x191 (and $x347 $x134)))
 (let (($x184 (and $x371 $x191)))
 (let (($x25 (= ?x90 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x97 (and $x25 $x184)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x243 (and $x117 $x97)))
 (let (($x155 (and $x371 $x243)))
 (let (($x393 (= ?x8 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x349 (and $x393 $x155)))
 (let (($x282 (bvugt ?x376 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x172)))
 (let (($x176 (=> (bvule ?x376 (bvsub (bvadd ?x376 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x282)))))))
 (let (($x218 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x330)))
 (let (($x229 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x218)))))))
 (let (($x293 (bvugt ?x305 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x325 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x268)))
 (let (($x401 (=> (bvule ?x305 (bvsub (bvadd ?x305 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x325 $x293)))))))
 (let (($x287 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x185 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x185)))
 (let (($x84 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x287)))))))
 (let (($x353 (and $x84 $x401)))
 (let (($x78 (and $x353 $x229)))
 (let (($x309 (and $x78 $x176)))
 (let (($x291 (and $x309 $x349)))
 (let (($x247 (=> $x291 $x34)))
 (not $x247))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 43
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x388 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x300 (bvmul (_ bv4294967295 32) ?x388)))
 (let ((?x292 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x300)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x248 (bvadd ?x214 (_ bv3 32))))
 (let ((?x142 (concat (select input.dst.llvm-mem ?x248) (concat ?x333 ?x113))))
 (let ((?x158 (bvmul (_ bv4294967295 32) ?x142)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x320 (concat ?x27 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x116 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x373 (bvadd ?x116 (_ bv3 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem ?x373) (concat ?x153 ?x320))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x369 (concat ?x20 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x336 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x339 (bvadd ?x336 (_ bv3 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem ?x339) (concat ?x61 ?x369))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x183)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x163)))
 (let ((?x167 (bvadd (bvadd (bvadd ?x43 ?x17) ?x156) ?x158)))
 (let (($x241 (= ?x167 ?x292)))
 (let (($x400 (= $x241 true)))
 (let ((?x171 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x334 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x191 (concat ?x134 (concat ?x207 (concat ?x334 ?x171)))))
 (let (($x73 (= ?x191 input.dst.llvm-%m)))
 (let (($x283 (= $x73 true)))
 (let (($x200 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x273 (= (bvand ?x116 (_ bv4294967292 32)) ?x116)))
 (let (($x189 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x116 (bvsub ?x116 (_ bv4 32))) (bvult ?x116 (bvsub ?x116 (_ bv4 32))))))
 (let (($x265 (and true $x189)))
 (let (($x127 (= (bvand ?x336 (_ bv4294967292 32)) ?x336)))
 (let (($x372 (and $x127 $x265)))
 (let (($x75 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x350 (and (and (and true $x75) $x372) $x273)))
 (let (($x256 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x361 (and true $x256)))
 (let (($x105 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x318 (and $x105 $x361)))
 (let (($x297 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x336 (bvsub ?x336 (_ bv12 32))) (bvult ?x336 (bvsub ?x336 (_ bv12 32))))))
 (let (($x220 (and (and (and true $x105) $x297) $x318)))
 (let (($x243 (and (and $x220 $x350) $x200)))
 (let (($x184 (= input.dst.llvm-%m ?x191)))
 (let ((?x76 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x315 (= (_ bv0 32) ?x76)))
 (let ((?x249 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x211 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x249)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x29 $x211)))
 (let (($x102 (and $x160 $x315)))
 (let (($x307 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x175 (and $x307 $x102)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x331 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x331 $x5)))))))
 (let (($x291 (and (and (and $x82 $x175) $x184) $x243)))
 (let (($x24 (forall ((input.ind-%var3173X (_ BitVec 32)) )(let ((?x363 (bvadd (bvmul input.ind-%var3173X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv1 32))) (select input.dst.llvm-mem ?x363))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv2 32))) ?x45))))
 (let ((?x90 (input.spec-%var-m-0.1.1 input.ind-%var3173X)))
 (let (($x371 (input.spec-%var-m-0.0.1 input.ind-%var3173X)))
 (=> $x371 (= ?x90 ?x50))))))))
 ))
 (let (($x360 (forall ((input.ind-%var3172X (_ BitVec 32)) )(let (($x371 (input.spec-%var-m-0.0.1 input.ind-%var3172X)))
 (= $x371 (and (bvule (_ bv0 32) input.ind-%var3172X) (bvult input.ind-%var3172X (_ bv100 32))))))
 ))
 (let (($x381 (and $x360 $x24)))
 (let (($x80 (and $x381 $x291)))
 (let (($x100 (= $x80 true)))
 (let (($x234 (= $x220 true)))
 (let (($x260 (and $x350 $x200)))
 (let (($x60 (= $x260 true)))
 (let (($x104 (and $x60 $x234)))
 (let (($x53 (and $x104 $x100)))
 (let (($x46 (and $x53 $x283)))
 (let (($x296 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x210 (ite $x296 (_ bv1 32) (_ bv0 32))))
 (let (($x123 (bvuge ?x210 (_ bv1 32))))
 (let (($x404 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x186 (ite $x404 (_ bv1 32) (_ bv0 32))))
 (let (($x329 (= ?x186 (_ bv0 32))))
 (let (($x367 (and $x329 $x123)))
 (let (($x240 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x40 (ite $x240 (_ bv1 32) (_ bv0 32))))
 (let (($x51 (bvuge ?x40 (_ bv1 32))))
 (let (($x267 (and $x51 $x367)))
 (let (($x396 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x209 (ite $x396 (_ bv1 32) (_ bv0 32))))
 (let (($x275 (bvuge ?x209 (_ bv1 32))))
 (let (($x162 (and $x275 $x267)))
 (let (($x208 (and $x162 $x46)))
 (let ((?x182 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x196 (= ?x182 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x280 (=> $x275 $x196)))
 (let (($x150 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x213 (= $x275 $x150)))
 (let (($x282 (= false false)))
 (let (($x327 (= ?x209 (_ bv0 32))))
 (let (($x140 (=> $x327 $x282)))
 (let (($x146 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x356 (= $x327 $x146)))
 (let (($x370 (and (and (and $x356 $x140) $x213) $x280)))
 (let (($x224 (and $x370 $x208)))
 (let ((?x22 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x332 (= ?x22 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x269 (=> $x51 $x332)))
 (let (($x198 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x251 (= $x51 $x198)))
 (let (($x65 (= ?x40 (_ bv0 32))))
 (let (($x115 (=> $x65 $x282)))
 (let (($x38 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x222 (= $x65 $x38)))
 (let (($x255 (and (and (and $x222 $x115) $x251) $x269)))
 (let (($x128 (and $x255 $x224)))
 (let (($x257 (= ?x388 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x378 (=> $x123 $x257)))
 (let (($x181 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x180 (= $x123 $x181)))
 (let (($x264 (= ?x210 (_ bv0 32))))
 (let (($x228 (=> $x264 $x282)))
 (let (($x298 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x145 (= $x264 $x298)))
 (let (($x377 (and (and (and $x145 $x228) $x180) $x378)))
 (let (($x137 (and $x377 $x128)))
 (let ((?x309 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x92 (= ?x309 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x215 (bvuge ?x186 (_ bv1 32))))
 (let (($x357 (=> $x215 $x92)))
 (let (($x392 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x324 (= $x215 $x392)))
 (let (($x403 (=> $x329 $x282)))
 (let (($x348 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x237 (= $x329 $x348)))
 (let (($x374 (and (and (and $x237 $x403) $x324) $x357)))
 (let (($x202 (and $x374 $x137)))
 (let (($x68 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x133 (and $x68 $x202)))
 (let (($x311 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x355 (and $x311 $x133)))
 (let (($x161 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x262 (and $x161 $x355)))
 (let (($x398 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x343 (and $x398 $x262)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x16 (and $x56 $x343)))
 (let (($x389 (and $x282 $x16)))
 (let (($x179 (= ?x182 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x106 (and $x179 $x389)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x242 (and $x85 $x106)))
 (let (($x274 (and $x282 $x242)))
 (let (($x270 (= ?x22 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x33 (and $x270 $x274)))
 (let (($x317 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x124 (and $x317 $x33)))
 (let (($x37 (and $x282 $x124)))
 (let (($x385 (= ?x388 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x346 (and $x385 $x37)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x71 (and $x109 $x346)))
 (let (($x289 (and $x282 $x71)))
 (let (($x172 (= ?x309 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x236 (and $x172 $x289)))
 (let (($x89 (bvugt ?x116 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x373)))
 (let (($x99 (=> (bvule ?x116 (bvsub (bvadd ?x116 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x89)))))))
 (let (($x13 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x101 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x13)))))))
 (let (($x319 (bvugt ?x336 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x339)))
 (let (($x67 (=> (bvule ?x336 (bvsub (bvadd ?x336 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x319)))))))
 (let (($x306 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x235 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x235)))
 (let (($x293 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x306)))))))
 (let (($x338 (and $x293 $x67)))
 (let (($x54 (and $x338 $x101)))
 (let (($x229 (and $x54 $x99)))
 (let (($x130 (and $x229 $x236)))
 (let (($x322 (=> $x130 $x400)))
 (not $x322)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x388 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x300 (bvmul (_ bv4294967295 32) ?x388)))
 (let ((?x292 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x300)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x248 (bvadd ?x214 (_ bv3 32))))
 (let ((?x142 (concat (select input.dst.llvm-mem ?x248) (concat ?x333 ?x113))))
 (let ((?x158 (bvmul (_ bv4294967295 32) ?x142)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x320 (concat ?x27 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x116 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x373 (bvadd ?x116 (_ bv3 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem ?x373) (concat ?x153 ?x320))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x369 (concat ?x20 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x336 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x339 (bvadd ?x336 (_ bv3 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem ?x339) (concat ?x61 ?x369))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x183)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x163)))
 (let ((?x167 (bvadd (bvadd (bvadd ?x43 ?x17) ?x156) ?x158)))
 (let (($x241 (= ?x167 ?x292)))
 (let (($x400 (= $x241 true)))
 (let ((?x171 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x334 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x191 (concat ?x134 (concat ?x207 (concat ?x334 ?x171)))))
 (let (($x73 (= ?x191 input.dst.llvm-%m)))
 (let (($x283 (= $x73 true)))
 (let (($x200 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x273 (= (bvand ?x116 (_ bv4294967292 32)) ?x116)))
 (let (($x189 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x116 (bvsub ?x116 (_ bv4 32))) (bvult ?x116 (bvsub ?x116 (_ bv4 32))))))
 (let (($x265 (and true $x189)))
 (let (($x127 (= (bvand ?x336 (_ bv4294967292 32)) ?x336)))
 (let (($x372 (and $x127 $x265)))
 (let (($x75 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x350 (and (and (and true $x75) $x372) $x273)))
 (let (($x256 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x361 (and true $x256)))
 (let (($x105 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x318 (and $x105 $x361)))
 (let (($x297 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x336 (bvsub ?x336 (_ bv12 32))) (bvult ?x336 (bvsub ?x336 (_ bv12 32))))))
 (let (($x220 (and (and (and true $x105) $x297) $x318)))
 (let (($x243 (and (and $x220 $x350) $x200)))
 (let (($x184 (= input.dst.llvm-%m ?x191)))
 (let ((?x76 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x315 (= (_ bv0 32) ?x76)))
 (let ((?x249 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x211 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x249)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x29 $x211)))
 (let (($x102 (and $x160 $x315)))
 (let (($x307 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x175 (and $x307 $x102)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x331 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x331 $x5)))))))
 (let (($x291 (and (and (and $x82 $x175) $x184) $x243)))
 (let (($x24 (forall ((input.ind-%var3173X (_ BitVec 32)) )(let ((?x363 (bvadd (bvmul input.ind-%var3173X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv1 32))) (select input.dst.llvm-mem ?x363))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv2 32))) ?x45))))
 (let ((?x90 (input.spec-%var-m-0.1.1 input.ind-%var3173X)))
 (let (($x371 (input.spec-%var-m-0.0.1 input.ind-%var3173X)))
 (=> $x371 (= ?x90 ?x50))))))))
 ))
 (let (($x360 (forall ((input.ind-%var3172X (_ BitVec 32)) )(let (($x371 (input.spec-%var-m-0.0.1 input.ind-%var3172X)))
 (= $x371 (and (bvule (_ bv0 32) input.ind-%var3172X) (bvult input.ind-%var3172X (_ bv100 32))))))
 ))
 (let (($x381 (and $x360 $x24)))
 (let (($x80 (and $x381 $x291)))
 (let (($x100 (= $x80 true)))
 (let (($x234 (= $x220 true)))
 (let (($x260 (and $x350 $x200)))
 (let (($x60 (= $x260 true)))
 (let (($x104 (and $x60 $x234)))
 (let (($x53 (and $x104 $x100)))
 (let (($x46 (and $x53 $x283)))
 (let (($x296 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x210 (ite $x296 (_ bv1 32) (_ bv0 32))))
 (let (($x123 (bvuge ?x210 (_ bv1 32))))
 (let (($x404 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x186 (ite $x404 (_ bv1 32) (_ bv0 32))))
 (let (($x329 (= ?x186 (_ bv0 32))))
 (let (($x367 (and $x329 $x123)))
 (let (($x240 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x40 (ite $x240 (_ bv1 32) (_ bv0 32))))
 (let (($x51 (bvuge ?x40 (_ bv1 32))))
 (let (($x267 (and $x51 $x367)))
 (let (($x396 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x209 (ite $x396 (_ bv1 32) (_ bv0 32))))
 (let (($x275 (bvuge ?x209 (_ bv1 32))))
 (let (($x162 (and $x275 $x267)))
 (let (($x208 (and $x162 $x46)))
 (let ((?x182 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x196 (= ?x182 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x280 (=> $x275 $x196)))
 (let (($x150 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x213 (= $x275 $x150)))
 (let (($x282 (= false false)))
 (let (($x327 (= ?x209 (_ bv0 32))))
 (let (($x140 (=> $x327 $x282)))
 (let (($x146 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x356 (= $x327 $x146)))
 (let (($x370 (and (and (and $x356 $x140) $x213) $x280)))
 (let (($x224 (and $x370 $x208)))
 (let ((?x22 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x332 (= ?x22 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x269 (=> $x51 $x332)))
 (let (($x198 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x251 (= $x51 $x198)))
 (let (($x65 (= ?x40 (_ bv0 32))))
 (let (($x115 (=> $x65 $x282)))
 (let (($x38 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x222 (= $x65 $x38)))
 (let (($x255 (and (and (and $x222 $x115) $x251) $x269)))
 (let (($x128 (and $x255 $x224)))
 (let (($x257 (= ?x388 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x378 (=> $x123 $x257)))
 (let (($x181 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x180 (= $x123 $x181)))
 (let (($x264 (= ?x210 (_ bv0 32))))
 (let (($x228 (=> $x264 $x282)))
 (let (($x298 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x145 (= $x264 $x298)))
 (let (($x377 (and (and (and $x145 $x228) $x180) $x378)))
 (let (($x137 (and $x377 $x128)))
 (let ((?x309 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x92 (= ?x309 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x215 (bvuge ?x186 (_ bv1 32))))
 (let (($x357 (=> $x215 $x92)))
 (let (($x392 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x324 (= $x215 $x392)))
 (let (($x403 (=> $x329 $x282)))
 (let (($x348 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x237 (= $x329 $x348)))
 (let (($x374 (and (and (and $x237 $x403) $x324) $x357)))
 (let (($x202 (and $x374 $x137)))
 (let (($x68 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x133 (and $x68 $x202)))
 (let (($x311 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x355 (and $x311 $x133)))
 (let (($x161 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x262 (and $x161 $x355)))
 (let (($x398 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x343 (and $x398 $x262)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x16 (and $x56 $x343)))
 (let (($x389 (and $x282 $x16)))
 (let (($x179 (= ?x182 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x106 (and $x179 $x389)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x242 (and $x85 $x106)))
 (let (($x274 (and $x282 $x242)))
 (let (($x270 (= ?x22 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x33 (and $x270 $x274)))
 (let (($x317 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x124 (and $x317 $x33)))
 (let (($x37 (and $x282 $x124)))
 (let (($x385 (= ?x388 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x346 (and $x385 $x37)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x71 (and $x109 $x346)))
 (let (($x289 (and $x282 $x71)))
 (let (($x172 (= ?x309 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x236 (and $x172 $x289)))
 (let (($x89 (bvugt ?x116 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x373)))
 (let (($x99 (=> (bvule ?x116 (bvsub (bvadd ?x116 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x89)))))))
 (let (($x13 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x101 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x13)))))))
 (let (($x319 (bvugt ?x336 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x339)))
 (let (($x67 (=> (bvule ?x336 (bvsub (bvadd ?x336 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x319)))))))
 (let (($x306 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x235 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x235)))
 (let (($x293 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x306)))))))
 (let (($x338 (and $x293 $x67)))
 (let (($x54 (and $x338 $x101)))
 (let (($x229 (and $x54 $x99)))
 (let (($x130 (and $x229 $x236)))
 (let (($x322 (=> $x130 $x400)))
 (not $x322)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 223 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 44
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x229 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x379 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x229)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x177 (bvadd ?x214 (_ bv3 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem ?x177) (concat ?x48 ?x147))))
 (let ((?x368 (bvmul (_ bv4294967295 32) ?x301)))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x14 (concat ?x397 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x218 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x149 (bvadd ?x218 (_ bv3 32))))
 (let ((?x72 (concat (select input.dst.llvm-mem ?x149) (concat ?x295 ?x14))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x167 (concat ?x158 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x325 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x390 (bvadd ?x325 (_ bv3 32))))
 (let ((?x400 (concat (select input.dst.llvm-mem ?x390) (concat ?x300 ?x167))))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x6)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x192)))
 (let ((?x107 (bvadd (bvadd (bvadd ?x113 ?x400) ?x72) ?x368)))
 (let (($x326 (= ?x107 ?x379)))
 (let (($x159 (= $x326 true)))
 (let ((?x355 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x343 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x33 (concat ?x106 (concat ?x343 ?x355)))))
 (let (($x203 (= ?x124 input.dst.llvm-%m)))
 (let (($x358 (= $x203 true)))
 (let (($x132 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x260 (= (bvand ?x218 (_ bv4294967292 32)) ?x218)))
 (let (($x273 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x218 (bvsub ?x218 (_ bv4 32))) (bvult ?x218 (bvsub ?x218 (_ bv4 32))))))
 (let (($x350 (and true $x273)))
 (let (($x189 (= (bvand ?x325 (_ bv4294967292 32)) ?x325)))
 (let (($x252 (and $x189 $x350)))
 (let (($x323 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x105 (and (and (and true $x323) $x252) $x260)))
 (let (($x234 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x104 (and true $x234)))
 (let (($x297 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x49 (and $x297 $x104)))
 (let (($x259 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x325 (bvsub ?x325 (_ bv12 32))) (bvult ?x325 (bvsub ?x325 (_ bv12 32))))))
 (let (($x28 (and (and (and true $x297) $x259) $x49)))
 (let (($x71 (and (and $x28 $x105) $x132)))
 (let (($x37 (= input.dst.llvm-%m ?x124)))
 (let ((?x224 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x128 (= (_ bv0 32) ?x224)))
 (let ((?x283 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x283)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (and $x73 $x46)))
 (let (($x137 (and $x208 $x128)))
 (let (($x171 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x171 $x137)))
 (let (($x349 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x184 $x349)))))))
 (let (($x130 (and (and (and $x53 $x202) $x37) $x71)))
 (let (($x26 (forall ((input.ind-%var3217X (_ BitVec 32)) )(let ((?x94 (bvadd (bvmul input.ind-%var3217X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x211))))
 (let ((?x388 (input.spec-%var-m-0.1.1 input.ind-%var3217X)))
 (let (($x282 (input.spec-%var-m-0.0.1 input.ind-%var3217X)))
 (=> $x282 (= ?x388 ?x155))))))))
 ))
 (let (($x120 (forall ((input.ind-%var3216X (_ BitVec 32)) )(let (($x282 (input.spec-%var-m-0.0.1 input.ind-%var3216X)))
 (= $x282 (and (bvule (_ bv0 32) input.ind-%var3216X) (bvult input.ind-%var3216X (_ bv100 32))))))
 ))
 (let (($x207 (and $x120 $x26)))
 (let (($x308 (and $x207 $x130)))
 (let (($x10 (= $x308 true)))
 (let (($x245 (= $x28 true)))
 (let (($x129 (and $x105 $x132)))
 (let (($x285 (= $x129 true)))
 (let (($x62 (and $x285 $x245)))
 (let (($x88 (and $x62 $x10)))
 (let (($x263 (and $x88 $x358)))
 (let (($x228 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x254 (ite $x228 (_ bv1 32) (_ bv0 32))))
 (let (($x123 (= ?x254 (_ bv0 32))))
 (let (($x237 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x19 (ite $x237 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (bvuge ?x19 (_ bv1 32))))
 (let (($x380 (and $x92 $x123)))
 (let (($x115 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x77 (ite $x115 (_ bv1 32) (_ bv0 32))))
 (let (($x332 (bvuge ?x77 (_ bv1 32))))
 (let (($x75 (and $x332 $x380)))
 (let (($x140 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x231 (ite $x140 (_ bv1 32) (_ bv0 32))))
 (let (($x196 (bvuge ?x231 (_ bv1 32))))
 (let (($x112 (and $x196 $x75)))
 (let (($x183 (and $x112 $x263)))
 (let ((?x148 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x267 (= ?x148 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x162 (=> $x196 $x267)))
 (let (($x280 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x370 (= $x196 $x280)))
 (let (($x89 (= false false)))
 (let (($x275 (= ?x231 (_ bv0 32))))
 (let (($x31 (=> $x275 $x89)))
 (let (($x213 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x87 (= $x275 $x213)))
 (let (($x141 (and (and (and $x87 $x31) $x370) $x162)))
 (let (($x163 (and $x141 $x183)))
 (let ((?x182 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x209 (= ?x182 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x327 (=> $x332 $x209)))
 (let (($x269 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x255 (= $x332 $x269)))
 (let (($x51 (= ?x77 (_ bv0 32))))
 (let (($x74 (=> $x51 $x89)))
 (let (($x251 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x312 (= $x51 $x251)))
 (let (($x356 (and (and (and $x312 $x74) $x255) $x327)))
 (let (($x43 (and $x356 $x163)))
 (let ((?x22 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x40 (= ?x22 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x257 (bvuge ?x254 (_ bv1 32))))
 (let (($x65 (=> $x257 $x40)))
 (let (($x378 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x377 (= $x257 $x378)))
 (let (($x38 (and (and (= $x123 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x123 $x89)) $x377)))
 (let (($x222 (and $x38 $x65)))
 (let (($x125 (and $x222 $x43)))
 (let (($x210 (= ?x229 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x264 (=> $x92 $x210)))
 (let (($x357 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x374 (= $x92 $x357)))
 (let (($x215 (= ?x19 (_ bv0 32))))
 (let (($x366 (=> $x215 $x89)))
 (let (($x324 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x205 (= $x215 $x324)))
 (let (($x145 (and (and (and $x205 $x366) $x374) $x264)))
 (let (($x9 (and $x145 $x125)))
 (let (($x348 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x61 (and $x348 $x9)))
 (let (($x329 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x342 (and $x329 $x61)))
 (let (($x404 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x20 (and $x404 $x342)))
 (let (($x286 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x219 (and $x286 $x20)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x369 (and $x21 $x219)))
 (let (($x18 (and $x89 $x369)))
 (let (($x195 (= ?x148 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x17 (and $x195 $x18)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x126 (and $x56 $x17)))
 (let (($x168 (and $x89 $x126)))
 (let (($x179 (= ?x182 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x250 (and $x179 $x168)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x153 (and $x85 $x250)))
 (let (($x247 (and $x89 $x153)))
 (let (($x270 (= ?x22 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x27 (and $x270 $x247)))
 (let (($x93 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x34 (and $x93 $x27)))
 (let (($x320 (and $x89 $x34)))
 (let (($x373 (= ?x229 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x15 (and $x373 $x320)))
 (let (($x157 (bvugt ?x218 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x271 (=> (bvule ?x218 (bvsub (bvadd ?x218 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x157)))))))
 (let (($x84 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x177)))
 (let (($x330 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x287 $x84)))))))
 (let (($x387 (bvugt ?x325 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x390)))
 (let (($x353 (=> (bvule ?x325 (bvsub (bvadd ?x325 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x387)))))))
 (let (($x305 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x306 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x306)))
 (let (($x319 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x305)))))))
 (let (($x239 (and $x319 $x353)))
 (let (($x59 (and $x239 $x330)))
 (let (($x101 (and $x59 $x271)))
 (let (($x156 (and $x101 $x15)))
 (let (($x12 (=> $x156 $x159)))
 (not $x12))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x229 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x379 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x229)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x177 (bvadd ?x214 (_ bv3 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem ?x177) (concat ?x48 ?x147))))
 (let ((?x368 (bvmul (_ bv4294967295 32) ?x301)))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x14 (concat ?x397 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x218 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x149 (bvadd ?x218 (_ bv3 32))))
 (let ((?x72 (concat (select input.dst.llvm-mem ?x149) (concat ?x295 ?x14))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x167 (concat ?x158 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x325 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x390 (bvadd ?x325 (_ bv3 32))))
 (let ((?x400 (concat (select input.dst.llvm-mem ?x390) (concat ?x300 ?x167))))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x6)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x192)))
 (let ((?x107 (bvadd (bvadd (bvadd ?x113 ?x400) ?x72) ?x368)))
 (let (($x326 (= ?x107 ?x379)))
 (let (($x159 (= $x326 true)))
 (let ((?x355 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x343 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x33 (concat ?x106 (concat ?x343 ?x355)))))
 (let (($x203 (= ?x124 input.dst.llvm-%m)))
 (let (($x358 (= $x203 true)))
 (let (($x132 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x260 (= (bvand ?x218 (_ bv4294967292 32)) ?x218)))
 (let (($x273 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x218 (bvsub ?x218 (_ bv4 32))) (bvult ?x218 (bvsub ?x218 (_ bv4 32))))))
 (let (($x350 (and true $x273)))
 (let (($x189 (= (bvand ?x325 (_ bv4294967292 32)) ?x325)))
 (let (($x252 (and $x189 $x350)))
 (let (($x323 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x105 (and (and (and true $x323) $x252) $x260)))
 (let (($x234 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x104 (and true $x234)))
 (let (($x297 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x49 (and $x297 $x104)))
 (let (($x259 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x325 (bvsub ?x325 (_ bv12 32))) (bvult ?x325 (bvsub ?x325 (_ bv12 32))))))
 (let (($x28 (and (and (and true $x297) $x259) $x49)))
 (let (($x71 (and (and $x28 $x105) $x132)))
 (let (($x37 (= input.dst.llvm-%m ?x124)))
 (let ((?x224 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x128 (= (_ bv0 32) ?x224)))
 (let ((?x283 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x283)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (and $x73 $x46)))
 (let (($x137 (and $x208 $x128)))
 (let (($x171 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x171 $x137)))
 (let (($x349 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x184 $x349)))))))
 (let (($x130 (and (and (and $x53 $x202) $x37) $x71)))
 (let (($x26 (forall ((input.ind-%var3217X (_ BitVec 32)) )(let ((?x94 (bvadd (bvmul input.ind-%var3217X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x211))))
 (let ((?x388 (input.spec-%var-m-0.1.1 input.ind-%var3217X)))
 (let (($x282 (input.spec-%var-m-0.0.1 input.ind-%var3217X)))
 (=> $x282 (= ?x388 ?x155))))))))
 ))
 (let (($x120 (forall ((input.ind-%var3216X (_ BitVec 32)) )(let (($x282 (input.spec-%var-m-0.0.1 input.ind-%var3216X)))
 (= $x282 (and (bvule (_ bv0 32) input.ind-%var3216X) (bvult input.ind-%var3216X (_ bv100 32))))))
 ))
 (let (($x207 (and $x120 $x26)))
 (let (($x308 (and $x207 $x130)))
 (let (($x10 (= $x308 true)))
 (let (($x245 (= $x28 true)))
 (let (($x129 (and $x105 $x132)))
 (let (($x285 (= $x129 true)))
 (let (($x62 (and $x285 $x245)))
 (let (($x88 (and $x62 $x10)))
 (let (($x263 (and $x88 $x358)))
 (let (($x228 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x254 (ite $x228 (_ bv1 32) (_ bv0 32))))
 (let (($x123 (= ?x254 (_ bv0 32))))
 (let (($x237 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x19 (ite $x237 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (bvuge ?x19 (_ bv1 32))))
 (let (($x380 (and $x92 $x123)))
 (let (($x115 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x77 (ite $x115 (_ bv1 32) (_ bv0 32))))
 (let (($x332 (bvuge ?x77 (_ bv1 32))))
 (let (($x75 (and $x332 $x380)))
 (let (($x140 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x231 (ite $x140 (_ bv1 32) (_ bv0 32))))
 (let (($x196 (bvuge ?x231 (_ bv1 32))))
 (let (($x112 (and $x196 $x75)))
 (let (($x183 (and $x112 $x263)))
 (let ((?x148 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x267 (= ?x148 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x162 (=> $x196 $x267)))
 (let (($x280 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x370 (= $x196 $x280)))
 (let (($x89 (= false false)))
 (let (($x275 (= ?x231 (_ bv0 32))))
 (let (($x31 (=> $x275 $x89)))
 (let (($x213 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x87 (= $x275 $x213)))
 (let (($x141 (and (and (and $x87 $x31) $x370) $x162)))
 (let (($x163 (and $x141 $x183)))
 (let ((?x182 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x209 (= ?x182 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x327 (=> $x332 $x209)))
 (let (($x269 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x255 (= $x332 $x269)))
 (let (($x51 (= ?x77 (_ bv0 32))))
 (let (($x74 (=> $x51 $x89)))
 (let (($x251 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x312 (= $x51 $x251)))
 (let (($x356 (and (and (and $x312 $x74) $x255) $x327)))
 (let (($x43 (and $x356 $x163)))
 (let ((?x22 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x40 (= ?x22 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x257 (bvuge ?x254 (_ bv1 32))))
 (let (($x65 (=> $x257 $x40)))
 (let (($x378 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x377 (= $x257 $x378)))
 (let (($x38 (and (and (= $x123 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x123 $x89)) $x377)))
 (let (($x222 (and $x38 $x65)))
 (let (($x125 (and $x222 $x43)))
 (let (($x210 (= ?x229 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x264 (=> $x92 $x210)))
 (let (($x357 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x374 (= $x92 $x357)))
 (let (($x215 (= ?x19 (_ bv0 32))))
 (let (($x366 (=> $x215 $x89)))
 (let (($x324 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x205 (= $x215 $x324)))
 (let (($x145 (and (and (and $x205 $x366) $x374) $x264)))
 (let (($x9 (and $x145 $x125)))
 (let (($x348 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x61 (and $x348 $x9)))
 (let (($x329 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x342 (and $x329 $x61)))
 (let (($x404 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x20 (and $x404 $x342)))
 (let (($x286 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x219 (and $x286 $x20)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x369 (and $x21 $x219)))
 (let (($x18 (and $x89 $x369)))
 (let (($x195 (= ?x148 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x17 (and $x195 $x18)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x126 (and $x56 $x17)))
 (let (($x168 (and $x89 $x126)))
 (let (($x179 (= ?x182 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x250 (and $x179 $x168)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x153 (and $x85 $x250)))
 (let (($x247 (and $x89 $x153)))
 (let (($x270 (= ?x22 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x27 (and $x270 $x247)))
 (let (($x93 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x34 (and $x93 $x27)))
 (let (($x320 (and $x89 $x34)))
 (let (($x373 (= ?x229 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x15 (and $x373 $x320)))
 (let (($x157 (bvugt ?x218 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x271 (=> (bvule ?x218 (bvsub (bvadd ?x218 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x157)))))))
 (let (($x84 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x177)))
 (let (($x330 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x287 $x84)))))))
 (let (($x387 (bvugt ?x325 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x390)))
 (let (($x353 (=> (bvule ?x325 (bvsub (bvadd ?x325 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x387)))))))
 (let (($x305 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x306 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x306)))
 (let (($x319 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x305)))))))
 (let (($x239 (and $x319 $x353)))
 (let (($x59 (and $x239 $x330)))
 (let (($x101 (and $x59 $x271)))
 (let (($x156 (and $x101 $x15)))
 (let (($x12 (=> $x156 $x159)))
 (not $x12))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 45
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x148 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x311 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x363 (bvadd ?x311 ?x148)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x351 (concat ?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x25 (bvadd ?x214 (_ bv3 32))))
 (let ((?x24 (concat (select input.dst.llvm-mem ?x25) (concat ?x294 ?x351))))
 (let ((?x193 (bvmul (_ bv4294967295 32) ?x24)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x133 (concat ?x131 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x13 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x376 (bvadd ?x13 (_ bv3 32))))
 (let ((?x90 (concat (select input.dst.llvm-mem ?x376) (concat ?x393 ?x133))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x107 (concat ?x368 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x379 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x95 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x221 (bvadd ?x95 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x221) (concat ?x379 ?x107))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x79)))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x7)))
 (let ((?x360 (bvadd (bvadd (bvadd ?x147 ?x12) ?x90) ?x193)))
 (let (($x328 (= ?x360 ?x363)))
 (let (($x39 (= $x328 true)))
 (let ((?x342 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x153 (concat ?x250 (concat ?x17 (concat ?x219 ?x342)))))
 (let (($x83 (= ?x153 input.dst.llvm-%m)))
 (let (($x227 (= $x83 true)))
 (let (($x288 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x129 (= (bvand ?x13 (_ bv4294967292 32)) ?x13)))
 (let (($x260 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x13 (bvsub ?x13 (_ bv4 32))) (bvult ?x13 (bvsub ?x13 (_ bv4 32))))))
 (let (($x105 (and true $x260)))
 (let (($x273 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x362 (and $x273 $x105)))
 (let (($x265 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x297 (and (and (and true $x265) $x362) $x129)))
 (let (($x245 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x62 (and true $x245)))
 (let (($x259 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x347 (and $x259 $x62)))
 (let (($x220 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv12 32))) (bvult ?x95 (bvsub ?x95 (_ bv12 32))))))
 (let (($x304 (and (and (and true $x259) $x220) $x347)))
 (let (($x34 (and (and $x304 $x297) $x288)))
 (let (($x247 (= input.dst.llvm-%m ?x153)))
 (let ((?x163 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x43 (= (_ bv0 32) ?x163)))
 (let ((?x358 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x358)))
 (let (($x203 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (and $x203 $x263)))
 (let (($x125 (and $x183 $x43)))
 (let (($x355 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x355 $x125)))
 (let (($x236 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x236)))))))
 (let (($x156 (and (and (and $x88 $x9) $x247) $x34)))
 (let (($x389 (forall ((input.ind-%var3261X (_ BitVec 32)) )(let ((?x334 (bvadd (bvmul input.ind-%var3261X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv1 32))) (select input.dst.llvm-mem ?x334))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv2 32))) ?x46))))
 (let ((?x22 (input.spec-%var-m-0.1.1 input.ind-%var3261X)))
 (let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var3261X)))
 (=> $x89 (= ?x22 ?x289))))))))
 ))
 (let (($x249 (forall ((input.ind-%var3260X (_ BitVec 32)) )(let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var3260X)))
 (= $x89 (and (bvule (_ bv0 32) input.ind-%var3260X) (bvult input.ind-%var3260X (_ bv100 32))))))
 ))
 (let (($x106 (and $x249 $x389)))
 (let (($x394 (and $x106 $x156)))
 (let (($x333 (= $x394 true)))
 (let (($x174 (= $x304 true)))
 (let (($x42 (and $x297 $x288)))
 (let (($x302 (= $x42 true)))
 (let (($x382 (and $x302 $x174)))
 (let (($x216 (and $x382 $x333)))
 (let (($x253 (and $x216 $x227)))
 (let (($x103 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x96 (ite $x103 (_ bv1 32) (_ bv0 32))))
 (let (($x257 (= ?x96 (_ bv0 32))))
 (let (($x205 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x194 (ite $x205 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (= ?x194 (_ bv0 32))))
 (let (($x204 (and $x92 $x257)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x395 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x209 (bvuge ?x395 (_ bv1 32))))
 (let (($x323 (and $x209 $x204)))
 (let (($x31 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x44 (ite $x31 (_ bv1 32) (_ bv0 32))))
 (let (($x267 (bvuge ?x44 (_ bv1 32))))
 (let (($x60 (and $x267 $x323)))
 (let (($x6 (and $x60 $x253)))
 (let (($x75 (= ?x311 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x112 (=> $x267 $x75)))
 (let (($x162 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x141 (= $x267 $x162)))
 (let (($x157 (= false false)))
 (let (($x196 (= ?x44 (_ bv0 32))))
 (let (($x367 (=> $x196 $x157)))
 (let (($x370 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x303 (= $x196 $x370)))
 (let (($x127 (and (and (and $x303 $x367) $x141) $x112)))
 (let (($x192 (and $x127 $x6)))
 (let (($x231 (= ?x148 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x275 (=> $x209 $x231)))
 (let (($x327 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x356 (= $x209 $x327)))
 (let (($x332 (= ?x395 (_ bv0 32))))
 (let (($x396 (=> $x332 $x157)))
 (let (($x255 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x146 (= $x332 $x255)))
 (let (($x87 (and (and (and $x146 $x396) $x356) $x275)))
 (let (($x113 (and $x87 $x192)))
 (let ((?x182 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x77 (= ?x182 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x40 (bvuge ?x96 (_ bv1 32))))
 (let (($x51 (=> $x40 $x77)))
 (let (($x65 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x222 (= $x40 $x65)))
 (let (($x251 (and (and (= $x257 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x257 $x157)) $x222)))
 (let (($x312 (and $x251 $x51)))
 (let (($x241 (and $x312 $x113)))
 (let ((?x101 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x254 (= ?x101 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x210 (bvuge ?x194 (_ bv1 32))))
 (let (($x123 (=> $x210 $x254)))
 (let (($x264 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x145 (= $x210 $x264)))
 (let (($x296 (=> $x92 $x157)))
 (let (($x374 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x298 (= $x92 $x374)))
 (let (($x313 (and (and (and $x298 $x296) $x145) $x123)))
 (let (($x383 (and $x313 $x241)))
 (let (($x324 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x300 (and $x324 $x383)))
 (let (($x215 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x142 (and $x215 $x300)))
 (let (($x237 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x158 (and $x237 $x142)))
 (let (($x166 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x36 (and $x166 $x158)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x167 (and $x186 $x36)))
 (let (($x292 (and $x157 $x167)))
 (let (($x68 (= ?x311 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x400 (and $x68 $x292)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x108 (and $x21 $x400)))
 (let (($x41 (and $x157 $x108)))
 (let (($x195 (= ?x148 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x114 (and $x195 $x41)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x295 (and $x56 $x114)))
 (let (($x55 (and $x157 $x295)))
 (let (($x179 (= ?x182 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x397 (and $x179 $x55)))
 (let (($x139 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x322 (and $x139 $x397)))
 (let (($x14 (and $x157 $x322)))
 (let (($x149 (= ?x101 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x321 (and $x149 $x14)))
 (let (($x78 (bvugt ?x13 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x376)))
 (let (($x8 (=> (bvule ?x13 (bvsub (bvadd ?x13 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x78)))))))
 (let (($x293 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x248 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x268 $x293)))))))
 (let (($x384 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x221)))
 (let (($x338 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x384)))))))
 (let (($x319 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x339 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x387 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x339 $x319)))))))
 (let (($x310 (and $x387 $x338)))
 (let (($x238 (and $x310 $x248)))
 (let (($x330 (and $x238 $x8)))
 (let (($x72 (and $x330 $x321)))
 (let (($x45 (=> $x72 $x39)))
 (not $x45))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x148 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x311 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x363 (bvadd ?x311 ?x148)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x351 (concat ?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x25 (bvadd ?x214 (_ bv3 32))))
 (let ((?x24 (concat (select input.dst.llvm-mem ?x25) (concat ?x294 ?x351))))
 (let ((?x193 (bvmul (_ bv4294967295 32) ?x24)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x133 (concat ?x131 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x13 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x376 (bvadd ?x13 (_ bv3 32))))
 (let ((?x90 (concat (select input.dst.llvm-mem ?x376) (concat ?x393 ?x133))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x107 (concat ?x368 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x379 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x95 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x221 (bvadd ?x95 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x221) (concat ?x379 ?x107))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x79)))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x7)))
 (let ((?x360 (bvadd (bvadd (bvadd ?x147 ?x12) ?x90) ?x193)))
 (let (($x328 (= ?x360 ?x363)))
 (let (($x39 (= $x328 true)))
 (let ((?x342 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x153 (concat ?x250 (concat ?x17 (concat ?x219 ?x342)))))
 (let (($x83 (= ?x153 input.dst.llvm-%m)))
 (let (($x227 (= $x83 true)))
 (let (($x288 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x129 (= (bvand ?x13 (_ bv4294967292 32)) ?x13)))
 (let (($x260 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x13 (bvsub ?x13 (_ bv4 32))) (bvult ?x13 (bvsub ?x13 (_ bv4 32))))))
 (let (($x105 (and true $x260)))
 (let (($x273 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x362 (and $x273 $x105)))
 (let (($x265 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x297 (and (and (and true $x265) $x362) $x129)))
 (let (($x245 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x62 (and true $x245)))
 (let (($x259 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x347 (and $x259 $x62)))
 (let (($x220 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv12 32))) (bvult ?x95 (bvsub ?x95 (_ bv12 32))))))
 (let (($x304 (and (and (and true $x259) $x220) $x347)))
 (let (($x34 (and (and $x304 $x297) $x288)))
 (let (($x247 (= input.dst.llvm-%m ?x153)))
 (let ((?x163 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x43 (= (_ bv0 32) ?x163)))
 (let ((?x358 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x358)))
 (let (($x203 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (and $x203 $x263)))
 (let (($x125 (and $x183 $x43)))
 (let (($x355 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x355 $x125)))
 (let (($x236 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x236)))))))
 (let (($x156 (and (and (and $x88 $x9) $x247) $x34)))
 (let (($x389 (forall ((input.ind-%var3261X (_ BitVec 32)) )(let ((?x334 (bvadd (bvmul input.ind-%var3261X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv1 32))) (select input.dst.llvm-mem ?x334))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv2 32))) ?x46))))
 (let ((?x22 (input.spec-%var-m-0.1.1 input.ind-%var3261X)))
 (let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var3261X)))
 (=> $x89 (= ?x22 ?x289))))))))
 ))
 (let (($x249 (forall ((input.ind-%var3260X (_ BitVec 32)) )(let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var3260X)))
 (= $x89 (and (bvule (_ bv0 32) input.ind-%var3260X) (bvult input.ind-%var3260X (_ bv100 32))))))
 ))
 (let (($x106 (and $x249 $x389)))
 (let (($x394 (and $x106 $x156)))
 (let (($x333 (= $x394 true)))
 (let (($x174 (= $x304 true)))
 (let (($x42 (and $x297 $x288)))
 (let (($x302 (= $x42 true)))
 (let (($x382 (and $x302 $x174)))
 (let (($x216 (and $x382 $x333)))
 (let (($x253 (and $x216 $x227)))
 (let (($x103 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x96 (ite $x103 (_ bv1 32) (_ bv0 32))))
 (let (($x257 (= ?x96 (_ bv0 32))))
 (let (($x205 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x194 (ite $x205 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (= ?x194 (_ bv0 32))))
 (let (($x204 (and $x92 $x257)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x395 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x209 (bvuge ?x395 (_ bv1 32))))
 (let (($x323 (and $x209 $x204)))
 (let (($x31 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x44 (ite $x31 (_ bv1 32) (_ bv0 32))))
 (let (($x267 (bvuge ?x44 (_ bv1 32))))
 (let (($x60 (and $x267 $x323)))
 (let (($x6 (and $x60 $x253)))
 (let (($x75 (= ?x311 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x112 (=> $x267 $x75)))
 (let (($x162 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x141 (= $x267 $x162)))
 (let (($x157 (= false false)))
 (let (($x196 (= ?x44 (_ bv0 32))))
 (let (($x367 (=> $x196 $x157)))
 (let (($x370 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x303 (= $x196 $x370)))
 (let (($x127 (and (and (and $x303 $x367) $x141) $x112)))
 (let (($x192 (and $x127 $x6)))
 (let (($x231 (= ?x148 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x275 (=> $x209 $x231)))
 (let (($x327 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x356 (= $x209 $x327)))
 (let (($x332 (= ?x395 (_ bv0 32))))
 (let (($x396 (=> $x332 $x157)))
 (let (($x255 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x146 (= $x332 $x255)))
 (let (($x87 (and (and (and $x146 $x396) $x356) $x275)))
 (let (($x113 (and $x87 $x192)))
 (let ((?x182 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x77 (= ?x182 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x40 (bvuge ?x96 (_ bv1 32))))
 (let (($x51 (=> $x40 $x77)))
 (let (($x65 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x222 (= $x40 $x65)))
 (let (($x251 (and (and (= $x257 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x257 $x157)) $x222)))
 (let (($x312 (and $x251 $x51)))
 (let (($x241 (and $x312 $x113)))
 (let ((?x101 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x254 (= ?x101 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x210 (bvuge ?x194 (_ bv1 32))))
 (let (($x123 (=> $x210 $x254)))
 (let (($x264 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x145 (= $x210 $x264)))
 (let (($x296 (=> $x92 $x157)))
 (let (($x374 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x298 (= $x92 $x374)))
 (let (($x313 (and (and (and $x298 $x296) $x145) $x123)))
 (let (($x383 (and $x313 $x241)))
 (let (($x324 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x300 (and $x324 $x383)))
 (let (($x215 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x142 (and $x215 $x300)))
 (let (($x237 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x158 (and $x237 $x142)))
 (let (($x166 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x36 (and $x166 $x158)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x167 (and $x186 $x36)))
 (let (($x292 (and $x157 $x167)))
 (let (($x68 (= ?x311 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x400 (and $x68 $x292)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x108 (and $x21 $x400)))
 (let (($x41 (and $x157 $x108)))
 (let (($x195 (= ?x148 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x114 (and $x195 $x41)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x295 (and $x56 $x114)))
 (let (($x55 (and $x157 $x295)))
 (let (($x179 (= ?x182 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x397 (and $x179 $x55)))
 (let (($x139 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x322 (and $x139 $x397)))
 (let (($x14 (and $x157 $x322)))
 (let (($x149 (= ?x101 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x321 (and $x149 $x14)))
 (let (($x78 (bvugt ?x13 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x376)))
 (let (($x8 (=> (bvule ?x13 (bvsub (bvadd ?x13 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x78)))))))
 (let (($x293 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x248 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x268 $x293)))))))
 (let (($x384 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x221)))
 (let (($x338 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x384)))))))
 (let (($x319 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x339 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x387 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x339 $x319)))))))
 (let (($x310 (and $x387 $x338)))
 (let (($x238 (and $x310 $x248)))
 (let (($x330 (and $x238 $x8)))
 (let (($x72 (and $x330 $x321)))
 (let (($x45 (=> $x72 $x39)))
 (not $x45))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 46
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x148 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x102 (bvmul (_ bv4294967295 32) ?x148)))
 (let ((?x211 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x102)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x100 (concat ?x97 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x305 (bvadd ?x214 (_ bv3 32))))
 (let ((?x335 (concat (select input.dst.llvm-mem ?x305) (concat ?x207 ?x100))))
 (let ((?x184 (bvmul (_ bv4294967295 32) ?x335)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x366 (concat ?x61 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x84 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x116 (bvadd ?x84 (_ bv3 32))))
 (let ((?x82 (concat (select input.dst.llvm-mem ?x116) (concat ?x315 ?x366))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x360 (concat ?x193 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x328 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x225 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x278 (bvadd ?x225 (_ bv3 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem ?x278) (concat ?x328 ?x360))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x391)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x5)))
 (let ((?x94 (bvadd (bvadd (bvadd ?x351 ?x386) ?x82) ?x184)))
 (let (($x80 (= ?x94 ?x211)))
 (let (($x246 (= $x80 true)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x295 (concat ?x114 (concat ?x400 (concat ?x36 ?x142)))))
 (let (($x119 (= ?x295 input.dst.llvm-%m)))
 (let (($x399 (= $x119 true)))
 (let (($x361 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x42 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x129 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv4 32))) (bvult ?x84 (bvsub ?x84 (_ bv4 32))))))
 (let (($x297 (and true $x129)))
 (let (($x260 (= (bvand ?x225 (_ bv4294967292 32)) ?x225)))
 (let (($x371 (and $x260 $x297)))
 (let (($x350 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x259 (and (and (and true $x350) $x371) $x42)))
 (let (($x174 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x382 (and true $x174)))
 (let (($x220 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x317 (and $x220 $x382)))
 (let (($x28 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x225 (bvsub ?x225 (_ bv12 32))) (bvult ?x225 (bvsub ?x225 (_ bv12 32))))))
 (let (($x50 (and (and (and true $x220) $x28) $x317)))
 (let (($x322 (and (and $x50 $x259) $x361)))
 (let (($x55 (= input.dst.llvm-%m ?x295)))
 (let ((?x192 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x113 (= (_ bv0 32) ?x192)))
 (let ((?x227 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x253 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x227)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x83 $x253)))
 (let (($x241 (and $x6 $x113)))
 (let (($x342 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x383 (and $x342 $x241)))
 (let (($x15 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x247 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x216 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x247 $x15)))))))
 (let (($x72 (and (and (and $x216 $x383) $x55) $x322)))
 (let (($x18 (forall ((input.ind-%var3305X (_ BitVec 32)) )(let ((?x343 (bvadd (bvmul input.ind-%var3305X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x263))))
 (let ((?x182 (input.spec-%var-m-0.1.1 input.ind-%var3305X)))
 (let (($x157 (input.spec-%var-m-0.0.1 input.ind-%var3305X)))
 (=> $x157 (= ?x182 ?x320))))))))
 ))
 (let (($x283 (forall ((input.ind-%var3304X (_ BitVec 32)) )(let (($x157 (input.spec-%var-m-0.0.1 input.ind-%var3304X)))
 (= $x157 (and (bvule (_ bv0 32) input.ind-%var3304X) (bvult input.ind-%var3304X (_ bv100 32))))))
 ))
 (let (($x17 (and $x283 $x18)))
 (let (($x290 (and $x17 $x72)))
 (let (($x48 (= $x290 true)))
 (let (($x175 (= $x50 true)))
 (let (($x340 (and $x259 $x361)))
 (let (($x256 (= $x340 true)))
 (let (($x76 (and $x256 $x175)))
 (let (($x81 (and $x76 $x48)))
 (let (($x86 (and $x81 $x399)))
 (let (($x240 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x198 (ite $x240 (_ bv1 32) (_ bv0 32))))
 (let (($x77 (bvuge ?x198 (_ bv1 32))))
 (let (($x298 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x181 (ite $x298 (_ bv1 32) (_ bv0 32))))
 (let (($x254 (bvuge ?x181 (_ bv1 32))))
 (let (($x372 (and $x254 $x77)))
 (let (($x396 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x150 (ite $x396 (_ bv1 32) (_ bv0 32))))
 (let (($x209 (= ?x150 (_ bv0 32))))
 (let (($x265 (and $x209 $x372)))
 (let (($x367 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x299 (ite $x367 (_ bv1 32) (_ bv0 32))))
 (let (($x75 (bvuge ?x299 (_ bv1 32))))
 (let (($x285 (and $x75 $x265)))
 (let (($x79 (and $x285 $x86)))
 (let ((?x329 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x323 (= ?x329 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x60 (=> $x75 $x323)))
 (let (($x112 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x127 (= $x75 $x112)))
 (let (($x78 (= false false)))
 (let (($x267 (= ?x299 (_ bv0 32))))
 (let (($x380 (=> $x267 $x78)))
 (let (($x141 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x199 (= $x267 $x141)))
 (let (($x189 (and (and (and $x199 $x380) $x127) $x60)))
 (let (($x7 (and $x189 $x79)))
 (let ((?x311 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x44 (= ?x311 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x231 (bvuge ?x150 (_ bv1 32))))
 (let (($x196 (=> $x231 $x44)))
 (let (($x275 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x87 (= $x231 $x275)))
 (let (($x370 (and (and (= $x209 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x209 $x78)) $x87)))
 (let (($x303 (and $x370 $x196)))
 (let (($x147 (and $x303 $x7)))
 (let (($x395 (= ?x148 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x332 (=> $x77 $x395)))
 (let (($x51 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x312 (= $x77 $x51)))
 (let (($x40 (= ?x198 (_ bv0 32))))
 (let (($x115 (=> $x40 $x78)))
 (let (($x222 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x251 (= $x40 $x222)))
 (let (($x146 (and (and (and $x251 $x115) $x312) $x332)))
 (let (($x159 (and $x146 $x147)))
 (let ((?x330 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x96 (= ?x330 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x257 (=> $x254 $x96)))
 (let (($x123 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x313 (= $x254 $x123)))
 (let (($x210 (= ?x181 (_ bv0 32))))
 (let (($x228 (=> $x210 $x78)))
 (let (($x145 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x180 (= $x210 $x145)))
 (let (($x38 (and (and (and $x180 $x228) $x313) $x257)))
 (let (($x233 (and $x38 $x159)))
 (let (($x374 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x379 (and $x374 $x233)))
 (let (($x92 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x301 (and $x92 $x379)))
 (let (($x205 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x368 (and $x205 $x301)))
 (let (($x392 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x375 (and $x392 $x368)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x107 (and $x19 $x375)))
 (let (($x326 (and $x78 $x107)))
 (let (($x348 (= ?x329 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x12 (and $x348 $x326)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x331 (and $x186 $x12)))
 (let (($x91 (and $x78 $x331)))
 (let (($x68 (= ?x311 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x403 (and $x68 $x91)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x393 (and $x21 $x403)))
 (let (($x23 (and $x78 $x393)))
 (let (($x195 (= ?x148 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x131 (and $x195 $x23)))
 (let (($x176 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x47 (and $x176 $x131)))
 (let (($x133 (and $x78 $x47)))
 (let (($x376 (= ?x330 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x118 (and $x376 $x133)))
 (let (($x54 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x309 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x54)))))))
 (let (($x117 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x336 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x305)))
 (let (($x177 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x336 $x117)))))))
 (let (($x206 (bvugt ?x225 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x339 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x239 (=> (bvule ?x225 (bvsub (bvadd ?x225 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x339 $x206)))))))
 (let (($x325 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x270 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x270)))
 (let (($x384 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x325)))))))
 (let (($x385 (and $x384 $x239)))
 (let (($x401 (and $x385 $x177)))
 (let (($x248 (and $x401 $x309)))
 (let (($x90 (and $x248 $x118)))
 (let (($x188 (=> $x90 $x246)))
 (not $x188)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x148 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x102 (bvmul (_ bv4294967295 32) ?x148)))
 (let ((?x211 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x102)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x100 (concat ?x97 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x305 (bvadd ?x214 (_ bv3 32))))
 (let ((?x335 (concat (select input.dst.llvm-mem ?x305) (concat ?x207 ?x100))))
 (let ((?x184 (bvmul (_ bv4294967295 32) ?x335)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x366 (concat ?x61 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x84 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x116 (bvadd ?x84 (_ bv3 32))))
 (let ((?x82 (concat (select input.dst.llvm-mem ?x116) (concat ?x315 ?x366))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x360 (concat ?x193 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x328 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x225 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x278 (bvadd ?x225 (_ bv3 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem ?x278) (concat ?x328 ?x360))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x391)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x5)))
 (let ((?x94 (bvadd (bvadd (bvadd ?x351 ?x386) ?x82) ?x184)))
 (let (($x80 (= ?x94 ?x211)))
 (let (($x246 (= $x80 true)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x295 (concat ?x114 (concat ?x400 (concat ?x36 ?x142)))))
 (let (($x119 (= ?x295 input.dst.llvm-%m)))
 (let (($x399 (= $x119 true)))
 (let (($x361 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x42 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x129 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv4 32))) (bvult ?x84 (bvsub ?x84 (_ bv4 32))))))
 (let (($x297 (and true $x129)))
 (let (($x260 (= (bvand ?x225 (_ bv4294967292 32)) ?x225)))
 (let (($x371 (and $x260 $x297)))
 (let (($x350 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x259 (and (and (and true $x350) $x371) $x42)))
 (let (($x174 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x382 (and true $x174)))
 (let (($x220 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x317 (and $x220 $x382)))
 (let (($x28 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x225 (bvsub ?x225 (_ bv12 32))) (bvult ?x225 (bvsub ?x225 (_ bv12 32))))))
 (let (($x50 (and (and (and true $x220) $x28) $x317)))
 (let (($x322 (and (and $x50 $x259) $x361)))
 (let (($x55 (= input.dst.llvm-%m ?x295)))
 (let ((?x192 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x113 (= (_ bv0 32) ?x192)))
 (let ((?x227 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x253 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x227)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x83 $x253)))
 (let (($x241 (and $x6 $x113)))
 (let (($x342 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x383 (and $x342 $x241)))
 (let (($x15 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x247 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x216 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x247 $x15)))))))
 (let (($x72 (and (and (and $x216 $x383) $x55) $x322)))
 (let (($x18 (forall ((input.ind-%var3305X (_ BitVec 32)) )(let ((?x343 (bvadd (bvmul input.ind-%var3305X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x263))))
 (let ((?x182 (input.spec-%var-m-0.1.1 input.ind-%var3305X)))
 (let (($x157 (input.spec-%var-m-0.0.1 input.ind-%var3305X)))
 (=> $x157 (= ?x182 ?x320))))))))
 ))
 (let (($x283 (forall ((input.ind-%var3304X (_ BitVec 32)) )(let (($x157 (input.spec-%var-m-0.0.1 input.ind-%var3304X)))
 (= $x157 (and (bvule (_ bv0 32) input.ind-%var3304X) (bvult input.ind-%var3304X (_ bv100 32))))))
 ))
 (let (($x17 (and $x283 $x18)))
 (let (($x290 (and $x17 $x72)))
 (let (($x48 (= $x290 true)))
 (let (($x175 (= $x50 true)))
 (let (($x340 (and $x259 $x361)))
 (let (($x256 (= $x340 true)))
 (let (($x76 (and $x256 $x175)))
 (let (($x81 (and $x76 $x48)))
 (let (($x86 (and $x81 $x399)))
 (let (($x240 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x198 (ite $x240 (_ bv1 32) (_ bv0 32))))
 (let (($x77 (bvuge ?x198 (_ bv1 32))))
 (let (($x298 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x181 (ite $x298 (_ bv1 32) (_ bv0 32))))
 (let (($x254 (bvuge ?x181 (_ bv1 32))))
 (let (($x372 (and $x254 $x77)))
 (let (($x396 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x150 (ite $x396 (_ bv1 32) (_ bv0 32))))
 (let (($x209 (= ?x150 (_ bv0 32))))
 (let (($x265 (and $x209 $x372)))
 (let (($x367 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x299 (ite $x367 (_ bv1 32) (_ bv0 32))))
 (let (($x75 (bvuge ?x299 (_ bv1 32))))
 (let (($x285 (and $x75 $x265)))
 (let (($x79 (and $x285 $x86)))
 (let ((?x329 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x323 (= ?x329 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x60 (=> $x75 $x323)))
 (let (($x112 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x127 (= $x75 $x112)))
 (let (($x78 (= false false)))
 (let (($x267 (= ?x299 (_ bv0 32))))
 (let (($x380 (=> $x267 $x78)))
 (let (($x141 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x199 (= $x267 $x141)))
 (let (($x189 (and (and (and $x199 $x380) $x127) $x60)))
 (let (($x7 (and $x189 $x79)))
 (let ((?x311 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x44 (= ?x311 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x231 (bvuge ?x150 (_ bv1 32))))
 (let (($x196 (=> $x231 $x44)))
 (let (($x275 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x87 (= $x231 $x275)))
 (let (($x370 (and (and (= $x209 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x209 $x78)) $x87)))
 (let (($x303 (and $x370 $x196)))
 (let (($x147 (and $x303 $x7)))
 (let (($x395 (= ?x148 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x332 (=> $x77 $x395)))
 (let (($x51 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x312 (= $x77 $x51)))
 (let (($x40 (= ?x198 (_ bv0 32))))
 (let (($x115 (=> $x40 $x78)))
 (let (($x222 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x251 (= $x40 $x222)))
 (let (($x146 (and (and (and $x251 $x115) $x312) $x332)))
 (let (($x159 (and $x146 $x147)))
 (let ((?x330 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x96 (= ?x330 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x257 (=> $x254 $x96)))
 (let (($x123 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x313 (= $x254 $x123)))
 (let (($x210 (= ?x181 (_ bv0 32))))
 (let (($x228 (=> $x210 $x78)))
 (let (($x145 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x180 (= $x210 $x145)))
 (let (($x38 (and (and (and $x180 $x228) $x313) $x257)))
 (let (($x233 (and $x38 $x159)))
 (let (($x374 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x379 (and $x374 $x233)))
 (let (($x92 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x301 (and $x92 $x379)))
 (let (($x205 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x368 (and $x205 $x301)))
 (let (($x392 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x375 (and $x392 $x368)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x107 (and $x19 $x375)))
 (let (($x326 (and $x78 $x107)))
 (let (($x348 (= ?x329 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x12 (and $x348 $x326)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x331 (and $x186 $x12)))
 (let (($x91 (and $x78 $x331)))
 (let (($x68 (= ?x311 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x403 (and $x68 $x91)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x393 (and $x21 $x403)))
 (let (($x23 (and $x78 $x393)))
 (let (($x195 (= ?x148 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x131 (and $x195 $x23)))
 (let (($x176 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x47 (and $x176 $x131)))
 (let (($x133 (and $x78 $x47)))
 (let (($x376 (= ?x330 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x118 (and $x376 $x133)))
 (let (($x54 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x309 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x54)))))))
 (let (($x117 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x336 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x305)))
 (let (($x177 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x336 $x117)))))))
 (let (($x206 (bvugt ?x225 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x339 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x239 (=> (bvule ?x225 (bvsub (bvadd ?x225 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x339 $x206)))))))
 (let (($x325 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x270 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x270)))
 (let (($x384 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x325)))))))
 (let (($x385 (and $x384 $x239)))
 (let (($x401 (and $x385 $x177)))
 (let (($x248 (and $x401 $x309)))
 (let (($x90 (and $x248 $x118)))
 (let (($x188 (=> $x90 $x246)))
 (not $x188)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 221 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 47
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x311 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x249 (bvmul (_ bv4294967295 32) ?x311)))
 (let ((?x215 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x334 (bvadd ?x215 ?x249)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x236 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x111 (bvadd ?x214 (_ bv3 32))))
 (let ((?x16 (concat (select input.dst.llvm-mem ?x111) (concat ?x10 ?x236))))
 (let ((?x389 (bvmul (_ bv4294967295 32) ?x16)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x20 (concat ?x185 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x293 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x218 (bvadd ?x293 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x218) (concat ?x296 ?x20))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x94 (concat ?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x109 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x161 (bvadd ?x109 (_ bv3 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem ?x161) (concat ?x102 ?x94))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x191)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x97)))
 (let ((?x71 (bvadd (bvadd (bvadd ?x100 ?x246) ?x29) ?x389)))
 (let (($x137 (= ?x71 ?x334)))
 (let (($x130 (= $x137 true)))
 (let ((?x301 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x375 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x393 (concat ?x403 (concat ?x12 (concat ?x375 ?x301)))))
 (let (($x58 (= ?x393 input.dst.llvm-%m)))
 (let (($x364 (= $x58 true)))
 (let (($x104 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x340 (= (bvand ?x293 (_ bv4294967292 32)) ?x293)))
 (let (($x42 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x293 (bvsub ?x293 (_ bv4 32))) (bvult ?x293 (bvsub ?x293 (_ bv4 32))))))
 (let (($x259 (and true $x42)))
 (let (($x129 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x282 (and $x129 $x259)))
 (let (($x105 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x220 (and (and (and true $x105) $x282) $x340)))
 (let (($x175 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x76 (and true $x175)))
 (let (($x28 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x85 (and $x28 $x76)))
 (let (($x304 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv12 32))) (bvult ?x109 (bvsub ?x109 (_ bv12 32))))))
 (let (($x155 (and (and (and true $x28) $x304) $x85)))
 (let (($x47 (and (and $x155 $x220) $x104)))
 (let (($x23 (= input.dst.llvm-%m ?x393)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x147 (= (_ bv0 32) ?x7)))
 (let ((?x399 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x399)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x119 $x86)))
 (let (($x159 (and $x79 $x147)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x142 $x159)))
 (let (($x321 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x321)))))))
 (let (($x90 (and (and (and $x81 $x233) $x23) $x47)))
 (let (($x292 (forall ((input.ind-%var3349X (_ BitVec 32)) )(let ((?x219 (bvadd (bvmul input.ind-%var3349X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv1 32))) (select input.dst.llvm-mem ?x219))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv2 32))) ?x253))))
 (let ((?x148 (input.spec-%var-m-0.1.1 input.ind-%var3349X)))
 (let (($x78 (input.spec-%var-m-0.0.1 input.ind-%var3349X)))
 (=> $x78 (= ?x148 ?x14))))))))
 ))
 (let (($x358 (forall ((input.ind-%var3348X (_ BitVec 32)) )(let (($x78 (input.spec-%var-m-0.0.1 input.ind-%var3348X)))
 (= $x78 (and (bvule (_ bv0 32) input.ind-%var3348X) (bvult input.ind-%var3348X (_ bv100 32))))))
 ))
 (let (($x400 (and $x358 $x292)))
 (let (($x354 (and $x400 $x90)))
 (let (($x294 (= $x354 true)))
 (let (($x202 (= $x155 true)))
 (let (($x212 (and $x220 $x104)))
 (let (($x234 (= $x212 true)))
 (let (($x224 (and $x234 $x202)))
 (let (($x359 (and $x224 $x294)))
 (let (($x30 (and $x359 $x364)))
 (let (($x115 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x269 (ite $x115 (_ bv1 32) (_ bv0 32))))
 (let (($x395 (bvuge ?x269 (_ bv1 32))))
 (let (($x180 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x378 (ite $x180 (_ bv1 32) (_ bv0 32))))
 (let (($x254 (= ?x378 (_ bv0 32))))
 (let (($x252 (and $x254 $x395)))
 (let (($x140 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x280 (ite $x140 (_ bv1 32) (_ bv0 32))))
 (let (($x231 (= ?x280 (_ bv0 32))))
 (let (($x350 (and $x231 $x252)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x261 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x323 (bvuge ?x261 (_ bv1 32))))
 (let (($x302 (and $x323 $x350)))
 (let (($x391 (and $x302 $x30)))
 (let (($x265 (= ?x215 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x285 (=> $x323 $x265)))
 (let (($x60 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x189 (= $x323 $x60)))
 (let (($x54 (= false false)))
 (let (($x75 (= ?x261 (_ bv0 32))))
 (let (($x204 (=> $x75 $x54)))
 (let (($x127 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x170 (= $x75 $x127)))
 (let (($x273 (and (and (and $x170 $x204) $x189) $x285)))
 (let (($x5 (and $x273 $x391)))
 (let ((?x329 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x299 (= ?x329 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x44 (bvuge ?x280 (_ bv1 32))))
 (let (($x267 (=> $x44 $x299)))
 (let (($x196 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x303 (= $x44 $x196)))
 (let (($x141 (and (and (= $x231 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x231 $x54)) $x303)))
 (let (($x199 (and $x141 $x267)))
 (let (($x351 (and $x199 $x5)))
 (let (($x150 (= ?x311 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x209 (=> $x395 $x150)))
 (let (($x332 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x146 (= $x395 $x332)))
 (let (($x77 (= ?x269 (_ bv0 32))))
 (let (($x74 (=> $x77 $x54)))
 (let (($x312 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x255 (= $x77 $x312)))
 (let (($x213 (and (and (and $x255 $x74) $x146) $x209)))
 (let (($x45 (and $x213 $x351)))
 (let ((?x248 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x198 (= ?x248 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x96 (bvuge ?x378 (_ bv1 32))))
 (let (($x40 (=> $x96 $x198)))
 (let (($x257 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x38 (= $x96 $x257)))
 (let (($x103 (=> $x254 $x54)))
 (let (($x313 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x377 (= $x254 $x313)))
 (let (($x251 (and (and (and $x377 $x103) $x38) $x40)))
 (let (($x363 (and $x251 $x45)))
 (let (($x145 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x328 (and $x145 $x363)))
 (let (($x210 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x24 (and $x210 $x328)))
 (let (($x298 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x193 (and $x298 $x24)))
 (let (($x357 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x381 (and $x357 $x193)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x360 (and $x194 $x381)))
 (let (($x39 (and $x54 $x360)))
 (let (($x324 (= ?x215 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x386 (and $x324 $x39)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x243 (and $x19 $x386)))
 (let (($x388 (and $x54 $x243)))
 (let (($x348 (= ?x329 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x172 (and $x348 $x388)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x315 (and $x186 $x172)))
 (let (($x262 (and $x54 $x315)))
 (let (($x68 (= ?x311 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x61 (and $x68 $x262)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x235 (and $x99 $x61)))
 (let (($x366 (and $x54 $x235)))
 (let (($x116 (= ?x248 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x136 (and $x116 $x366)))
 (let (($x59 (bvugt ?x293 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x218)))
 (let (($x229 (=> (bvule ?x293 (bvsub (bvadd ?x293 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x59)))))))
 (let (($x387 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x319 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x25 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x319 $x387)))))))
 (let (($x226 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x161)))
 (let (($x310 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x226)))))))
 (let (($x384 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x66 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x221 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x206 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x221 $x384)))))))
 (let (($x57 (and $x206 $x310)))
 (let (($x67 (and $x57 $x25)))
 (let (($x177 (and $x67 $x229)))
 (let (($x82 (and $x177 $x136)))
 (let (($x46 (=> $x82 $x130)))
 (not $x46)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x311 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x249 (bvmul (_ bv4294967295 32) ?x311)))
 (let ((?x215 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x334 (bvadd ?x215 ?x249)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x236 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x111 (bvadd ?x214 (_ bv3 32))))
 (let ((?x16 (concat (select input.dst.llvm-mem ?x111) (concat ?x10 ?x236))))
 (let ((?x389 (bvmul (_ bv4294967295 32) ?x16)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x20 (concat ?x185 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x293 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x218 (bvadd ?x293 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x218) (concat ?x296 ?x20))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x94 (concat ?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x109 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x161 (bvadd ?x109 (_ bv3 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem ?x161) (concat ?x102 ?x94))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x191)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x97)))
 (let ((?x71 (bvadd (bvadd (bvadd ?x100 ?x246) ?x29) ?x389)))
 (let (($x137 (= ?x71 ?x334)))
 (let (($x130 (= $x137 true)))
 (let ((?x301 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x375 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x393 (concat ?x403 (concat ?x12 (concat ?x375 ?x301)))))
 (let (($x58 (= ?x393 input.dst.llvm-%m)))
 (let (($x364 (= $x58 true)))
 (let (($x104 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x340 (= (bvand ?x293 (_ bv4294967292 32)) ?x293)))
 (let (($x42 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x293 (bvsub ?x293 (_ bv4 32))) (bvult ?x293 (bvsub ?x293 (_ bv4 32))))))
 (let (($x259 (and true $x42)))
 (let (($x129 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x282 (and $x129 $x259)))
 (let (($x105 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x220 (and (and (and true $x105) $x282) $x340)))
 (let (($x175 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x76 (and true $x175)))
 (let (($x28 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x85 (and $x28 $x76)))
 (let (($x304 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv12 32))) (bvult ?x109 (bvsub ?x109 (_ bv12 32))))))
 (let (($x155 (and (and (and true $x28) $x304) $x85)))
 (let (($x47 (and (and $x155 $x220) $x104)))
 (let (($x23 (= input.dst.llvm-%m ?x393)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x147 (= (_ bv0 32) ?x7)))
 (let ((?x399 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x399)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x119 $x86)))
 (let (($x159 (and $x79 $x147)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x142 $x159)))
 (let (($x321 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x321)))))))
 (let (($x90 (and (and (and $x81 $x233) $x23) $x47)))
 (let (($x292 (forall ((input.ind-%var3349X (_ BitVec 32)) )(let ((?x219 (bvadd (bvmul input.ind-%var3349X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv1 32))) (select input.dst.llvm-mem ?x219))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv2 32))) ?x253))))
 (let ((?x148 (input.spec-%var-m-0.1.1 input.ind-%var3349X)))
 (let (($x78 (input.spec-%var-m-0.0.1 input.ind-%var3349X)))
 (=> $x78 (= ?x148 ?x14))))))))
 ))
 (let (($x358 (forall ((input.ind-%var3348X (_ BitVec 32)) )(let (($x78 (input.spec-%var-m-0.0.1 input.ind-%var3348X)))
 (= $x78 (and (bvule (_ bv0 32) input.ind-%var3348X) (bvult input.ind-%var3348X (_ bv100 32))))))
 ))
 (let (($x400 (and $x358 $x292)))
 (let (($x354 (and $x400 $x90)))
 (let (($x294 (= $x354 true)))
 (let (($x202 (= $x155 true)))
 (let (($x212 (and $x220 $x104)))
 (let (($x234 (= $x212 true)))
 (let (($x224 (and $x234 $x202)))
 (let (($x359 (and $x224 $x294)))
 (let (($x30 (and $x359 $x364)))
 (let (($x115 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x269 (ite $x115 (_ bv1 32) (_ bv0 32))))
 (let (($x395 (bvuge ?x269 (_ bv1 32))))
 (let (($x180 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x378 (ite $x180 (_ bv1 32) (_ bv0 32))))
 (let (($x254 (= ?x378 (_ bv0 32))))
 (let (($x252 (and $x254 $x395)))
 (let (($x140 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x280 (ite $x140 (_ bv1 32) (_ bv0 32))))
 (let (($x231 (= ?x280 (_ bv0 32))))
 (let (($x350 (and $x231 $x252)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x261 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x323 (bvuge ?x261 (_ bv1 32))))
 (let (($x302 (and $x323 $x350)))
 (let (($x391 (and $x302 $x30)))
 (let (($x265 (= ?x215 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x285 (=> $x323 $x265)))
 (let (($x60 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x189 (= $x323 $x60)))
 (let (($x54 (= false false)))
 (let (($x75 (= ?x261 (_ bv0 32))))
 (let (($x204 (=> $x75 $x54)))
 (let (($x127 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x170 (= $x75 $x127)))
 (let (($x273 (and (and (and $x170 $x204) $x189) $x285)))
 (let (($x5 (and $x273 $x391)))
 (let ((?x329 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x299 (= ?x329 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x44 (bvuge ?x280 (_ bv1 32))))
 (let (($x267 (=> $x44 $x299)))
 (let (($x196 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x303 (= $x44 $x196)))
 (let (($x141 (and (and (= $x231 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x231 $x54)) $x303)))
 (let (($x199 (and $x141 $x267)))
 (let (($x351 (and $x199 $x5)))
 (let (($x150 (= ?x311 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x209 (=> $x395 $x150)))
 (let (($x332 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x146 (= $x395 $x332)))
 (let (($x77 (= ?x269 (_ bv0 32))))
 (let (($x74 (=> $x77 $x54)))
 (let (($x312 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x255 (= $x77 $x312)))
 (let (($x213 (and (and (and $x255 $x74) $x146) $x209)))
 (let (($x45 (and $x213 $x351)))
 (let ((?x248 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x198 (= ?x248 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x96 (bvuge ?x378 (_ bv1 32))))
 (let (($x40 (=> $x96 $x198)))
 (let (($x257 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x38 (= $x96 $x257)))
 (let (($x103 (=> $x254 $x54)))
 (let (($x313 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x377 (= $x254 $x313)))
 (let (($x251 (and (and (and $x377 $x103) $x38) $x40)))
 (let (($x363 (and $x251 $x45)))
 (let (($x145 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x328 (and $x145 $x363)))
 (let (($x210 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x24 (and $x210 $x328)))
 (let (($x298 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x193 (and $x298 $x24)))
 (let (($x357 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x381 (and $x357 $x193)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x360 (and $x194 $x381)))
 (let (($x39 (and $x54 $x360)))
 (let (($x324 (= ?x215 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x386 (and $x324 $x39)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x243 (and $x19 $x386)))
 (let (($x388 (and $x54 $x243)))
 (let (($x348 (= ?x329 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x172 (and $x348 $x388)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x315 (and $x186 $x172)))
 (let (($x262 (and $x54 $x315)))
 (let (($x68 (= ?x311 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x61 (and $x68 $x262)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x235 (and $x99 $x61)))
 (let (($x366 (and $x54 $x235)))
 (let (($x116 (= ?x248 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x136 (and $x116 $x366)))
 (let (($x59 (bvugt ?x293 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x218)))
 (let (($x229 (=> (bvule ?x293 (bvsub (bvadd ?x293 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x59)))))))
 (let (($x387 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x319 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x25 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x319 $x387)))))))
 (let (($x226 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x161)))
 (let (($x310 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x226)))))))
 (let (($x384 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x66 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x221 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x206 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x221 $x384)))))))
 (let (($x57 (and $x206 $x310)))
 (let (($x67 (and $x57 $x25)))
 (let (($x177 (and $x67 $x229)))
 (let (($x82 (and $x177 $x136)))
 (let (($x46 (=> $x82 $x130)))
 (not $x46)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 221 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 48
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x177 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x92 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x343 (bvadd ?x92 ?x177)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x27 (concat ?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x179 (bvadd ?x214 (_ bv3 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem ?x179) (concat ?x153 ?x27))))
 (let ((?x126 (bvmul (_ bv4294967295 32) ?x18)))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x379 (concat ?x158 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x117 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x13 (bvadd ?x117 (_ bv3 32))))
 (let ((?x182 (concat (select input.dst.llvm-mem ?x13) (concat ?x149 ?x379))))
 (let ((?x389 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x71 (concat ?x389 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x32 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x404 (bvadd ?x32 (_ bv3 32))))
 (let ((?x46 (concat (select input.dst.llvm-mem ?x404) (concat ?x334 ?x71))))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x346)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x33)))
 (let ((?x283 (bvadd (bvadd (bvadd ?x236 ?x46) ?x182) ?x126)))
 (let (($x125 (= ?x283 ?x343)))
 (let (($x156 (= $x125 true)))
 (let ((?x24 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x381 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x386 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x315 (concat ?x172 (concat ?x386 (concat ?x381 ?x24)))))
 (let (($x244 (= ?x315 input.dst.llvm-%m)))
 (let (($x26 (= $x244 true)))
 (let (($x62 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x212 (= (bvand ?x117 (_ bv4294967292 32)) ?x117)))
 (let (($x340 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x117 (bvsub ?x117 (_ bv4 32))) (bvult ?x117 (bvsub ?x117 (_ bv4 32))))))
 (let (($x220 (and true $x340)))
 (let (($x42 (= (bvand ?x32 (_ bv4294967292 32)) ?x32)))
 (let (($x89 (and $x42 $x220)))
 (let (($x297 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x28 (and (and (and true $x297) $x89) $x212)))
 (let (($x202 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x224 (and true $x202)))
 (let (($x304 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x56 (and $x304 $x224)))
 (let (($x50 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x32 (bvsub ?x32 (_ bv12 32))) (bvult ?x32 (bvsub ?x32 (_ bv12 32))))))
 (let (($x289 (and (and (and true $x304) $x50) $x56)))
 (let (($x235 (and (and $x289 $x28) $x62)))
 (let (($x262 (= input.dst.llvm-%m ?x315)))
 (let ((?x5 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x351 (= (_ bv0 32) ?x5)))
 (let ((?x364 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x364)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x391 (and $x58 $x30)))
 (let (($x45 (and $x391 $x351)))
 (let (($x301 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x363 (and $x301 $x45)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x359 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x118)))))))
 (let (($x82 (and (and (and $x359 $x363) $x262) $x235)))
 (let (($x326 (forall ((input.ind-%var3393X (_ BitVec 32)) )(let ((?x36 (bvadd (bvmul input.ind-%var3393X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x86))))
 (let ((?x311 (input.spec-%var-m-0.1.1 input.ind-%var3393X)))
 (let (($x54 (input.spec-%var-m-0.0.1 input.ind-%var3393X)))
 (=> $x54 (= ?x311 ?x133))))))))
 ))
 (let (($x227 (forall ((input.ind-%var3392X (_ BitVec 32)) )(let (($x54 (input.spec-%var-m-0.0.1 input.ind-%var3392X)))
 (= $x54 (and (bvule (_ bv0 32) input.ind-%var3392X) (bvult input.ind-%var3392X (_ bv100 32))))))
 ))
 (let (($x12 (and $x227 $x326)))
 (let (($x134 (and $x12 $x82)))
 (let (($x207 (= $x134 true)))
 (let (($x9 (= $x289 true)))
 (let (($x160 (and $x28 $x62)))
 (let (($x245 (= $x160 true)))
 (let (($x163 (and $x245 $x9)))
 (let (($x349 (and $x163 $x207)))
 (let (($x120 (and $x349 $x26)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x327 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x395 (= ?x327 (_ bv0 32))))
 (let (($x377 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x65 (ite $x377 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (bvuge ?x65 (_ bv1 32))))
 (let (($x362 (and $x198 $x395)))
 (let (($x31 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x162 (ite $x31 (_ bv1 32) (_ bv0 32))))
 (let (($x44 (= ?x162 (_ bv0 32))))
 (let (($x105 (and $x44 $x362)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x223 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x265 (bvuge ?x223 (_ bv1 32))))
 (let (($x256 (and $x265 $x105)))
 (let (($x191 (and $x256 $x120)))
 (let (($x350 (= ?x92 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x302 (=> $x265 $x350)))
 (let (($x285 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x273 (= $x265 $x285)))
 (let (($x59 (= false false)))
 (let (($x323 (= ?x223 (_ bv0 32))))
 (let (($x372 (=> $x323 $x59)))
 (let (($x189 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x365 (= $x323 $x189)))
 (let (($x260 (and (and (and $x365 $x372) $x273) $x302)))
 (let (($x97 (and $x260 $x191)))
 (let ((?x215 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x261 (= ?x215 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x299 (bvuge ?x162 (_ bv1 32))))
 (let (($x75 (=> $x299 $x261)))
 (let (($x267 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x199 (= $x299 $x267)))
 (let (($x127 (and (and (= $x44 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x44 $x59)) $x199)))
 (let (($x170 (and $x127 $x75)))
 (let (($x100 (and $x170 $x97)))
 (let ((?x329 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x280 (= ?x329 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x150 (bvuge ?x327 (_ bv1 32))))
 (let (($x231 (=> $x150 $x280)))
 (let (($x209 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x213 (= $x150 $x209)))
 (let (($x87 (and (and (= $x395 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x395 $x59)) $x213)))
 (let (($x370 (and $x87 $x231)))
 (let (($x80 (and $x370 $x100)))
 (let (($x269 (= ?x177 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x77 (=> $x198 $x269)))
 (let (($x40 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x251 (= $x198 $x40)))
 (let (($x96 (= ?x65 (_ bv0 32))))
 (let (($x240 (=> $x96 $x59)))
 (let (($x38 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x222 (= $x96 $x38)))
 (let (($x255 (and (and (and $x222 $x240) $x251) $x77)))
 (let (($x291 (and $x255 $x80)))
 (let (($x313 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x102 (and $x313 $x291)))
 (let (($x254 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x335 (and $x254 $x102)))
 (let (($x180 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x184 (and $x180 $x335)))
 (let (($x264 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x173 (and $x264 $x184)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x94 (and $x181 $x173)))
 (let (($x211 (and $x59 $x94)))
 (let (($x374 (= ?x92 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x246 (and $x374 $x211)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x242 (and $x194 $x246)))
 (let (($x128 (and $x59 $x242)))
 (let (($x324 (= ?x215 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x300 (and $x324 $x128)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x296 (and $x19 $x300)))
 (let (($x69 (and $x59 $x296)))
 (let (($x348 (= ?x329 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x185 (and $x348 $x69)))
 (let (($x271 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x188 (and $x271 $x185)))
 (let (($x20 (and $x59 $x188)))
 (let (($x218 (= ?x177 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x373 (and $x218 $x20)))
 (let (($x238 (bvugt ?x117 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x309 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x101 (=> (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x309 $x238)))))))
 (let (($x287 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x325 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x179)))
 (let (($x305 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x325 $x287)))))))
 (let (($x398 (bvugt ?x32 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x221 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x404)))
 (let (($x385 (=> (bvule ?x32 (bvsub (bvadd ?x32 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x221 $x398)))))))
 (let (($x206 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x268 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x268)))
 (let (($x226 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x206)))))))
 (let (($x93 (and $x226 $x385)))
 (let (($x353 (and $x93 $x305)))
 (let (($x25 (and $x353 $x101)))
 (let (($x29 (and $x25 $x373)))
 (let (($x263 (=> $x29 $x156)))
 (not $x263))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x177 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x92 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x343 (bvadd ?x92 ?x177)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x27 (concat ?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x179 (bvadd ?x214 (_ bv3 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem ?x179) (concat ?x153 ?x27))))
 (let ((?x126 (bvmul (_ bv4294967295 32) ?x18)))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x379 (concat ?x158 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x117 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x13 (bvadd ?x117 (_ bv3 32))))
 (let ((?x182 (concat (select input.dst.llvm-mem ?x13) (concat ?x149 ?x379))))
 (let ((?x389 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x71 (concat ?x389 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x32 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x404 (bvadd ?x32 (_ bv3 32))))
 (let ((?x46 (concat (select input.dst.llvm-mem ?x404) (concat ?x334 ?x71))))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x346)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x33)))
 (let ((?x283 (bvadd (bvadd (bvadd ?x236 ?x46) ?x182) ?x126)))
 (let (($x125 (= ?x283 ?x343)))
 (let (($x156 (= $x125 true)))
 (let ((?x24 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x381 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x386 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x315 (concat ?x172 (concat ?x386 (concat ?x381 ?x24)))))
 (let (($x244 (= ?x315 input.dst.llvm-%m)))
 (let (($x26 (= $x244 true)))
 (let (($x62 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x212 (= (bvand ?x117 (_ bv4294967292 32)) ?x117)))
 (let (($x340 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x117 (bvsub ?x117 (_ bv4 32))) (bvult ?x117 (bvsub ?x117 (_ bv4 32))))))
 (let (($x220 (and true $x340)))
 (let (($x42 (= (bvand ?x32 (_ bv4294967292 32)) ?x32)))
 (let (($x89 (and $x42 $x220)))
 (let (($x297 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x28 (and (and (and true $x297) $x89) $x212)))
 (let (($x202 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x224 (and true $x202)))
 (let (($x304 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x56 (and $x304 $x224)))
 (let (($x50 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x32 (bvsub ?x32 (_ bv12 32))) (bvult ?x32 (bvsub ?x32 (_ bv12 32))))))
 (let (($x289 (and (and (and true $x304) $x50) $x56)))
 (let (($x235 (and (and $x289 $x28) $x62)))
 (let (($x262 (= input.dst.llvm-%m ?x315)))
 (let ((?x5 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x351 (= (_ bv0 32) ?x5)))
 (let ((?x364 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x364)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x391 (and $x58 $x30)))
 (let (($x45 (and $x391 $x351)))
 (let (($x301 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x363 (and $x301 $x45)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x359 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x118)))))))
 (let (($x82 (and (and (and $x359 $x363) $x262) $x235)))
 (let (($x326 (forall ((input.ind-%var3393X (_ BitVec 32)) )(let ((?x36 (bvadd (bvmul input.ind-%var3393X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x86))))
 (let ((?x311 (input.spec-%var-m-0.1.1 input.ind-%var3393X)))
 (let (($x54 (input.spec-%var-m-0.0.1 input.ind-%var3393X)))
 (=> $x54 (= ?x311 ?x133))))))))
 ))
 (let (($x227 (forall ((input.ind-%var3392X (_ BitVec 32)) )(let (($x54 (input.spec-%var-m-0.0.1 input.ind-%var3392X)))
 (= $x54 (and (bvule (_ bv0 32) input.ind-%var3392X) (bvult input.ind-%var3392X (_ bv100 32))))))
 ))
 (let (($x12 (and $x227 $x326)))
 (let (($x134 (and $x12 $x82)))
 (let (($x207 (= $x134 true)))
 (let (($x9 (= $x289 true)))
 (let (($x160 (and $x28 $x62)))
 (let (($x245 (= $x160 true)))
 (let (($x163 (and $x245 $x9)))
 (let (($x349 (and $x163 $x207)))
 (let (($x120 (and $x349 $x26)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x327 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x395 (= ?x327 (_ bv0 32))))
 (let (($x377 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x65 (ite $x377 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (bvuge ?x65 (_ bv1 32))))
 (let (($x362 (and $x198 $x395)))
 (let (($x31 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x162 (ite $x31 (_ bv1 32) (_ bv0 32))))
 (let (($x44 (= ?x162 (_ bv0 32))))
 (let (($x105 (and $x44 $x362)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x223 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x265 (bvuge ?x223 (_ bv1 32))))
 (let (($x256 (and $x265 $x105)))
 (let (($x191 (and $x256 $x120)))
 (let (($x350 (= ?x92 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x302 (=> $x265 $x350)))
 (let (($x285 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x273 (= $x265 $x285)))
 (let (($x59 (= false false)))
 (let (($x323 (= ?x223 (_ bv0 32))))
 (let (($x372 (=> $x323 $x59)))
 (let (($x189 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x365 (= $x323 $x189)))
 (let (($x260 (and (and (and $x365 $x372) $x273) $x302)))
 (let (($x97 (and $x260 $x191)))
 (let ((?x215 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x261 (= ?x215 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x299 (bvuge ?x162 (_ bv1 32))))
 (let (($x75 (=> $x299 $x261)))
 (let (($x267 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x199 (= $x299 $x267)))
 (let (($x127 (and (and (= $x44 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x44 $x59)) $x199)))
 (let (($x170 (and $x127 $x75)))
 (let (($x100 (and $x170 $x97)))
 (let ((?x329 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x280 (= ?x329 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x150 (bvuge ?x327 (_ bv1 32))))
 (let (($x231 (=> $x150 $x280)))
 (let (($x209 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x213 (= $x150 $x209)))
 (let (($x87 (and (and (= $x395 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x395 $x59)) $x213)))
 (let (($x370 (and $x87 $x231)))
 (let (($x80 (and $x370 $x100)))
 (let (($x269 (= ?x177 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x77 (=> $x198 $x269)))
 (let (($x40 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x251 (= $x198 $x40)))
 (let (($x96 (= ?x65 (_ bv0 32))))
 (let (($x240 (=> $x96 $x59)))
 (let (($x38 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x222 (= $x96 $x38)))
 (let (($x255 (and (and (and $x222 $x240) $x251) $x77)))
 (let (($x291 (and $x255 $x80)))
 (let (($x313 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x102 (and $x313 $x291)))
 (let (($x254 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x335 (and $x254 $x102)))
 (let (($x180 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x184 (and $x180 $x335)))
 (let (($x264 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x173 (and $x264 $x184)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x94 (and $x181 $x173)))
 (let (($x211 (and $x59 $x94)))
 (let (($x374 (= ?x92 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x246 (and $x374 $x211)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x242 (and $x194 $x246)))
 (let (($x128 (and $x59 $x242)))
 (let (($x324 (= ?x215 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x300 (and $x324 $x128)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x296 (and $x19 $x300)))
 (let (($x69 (and $x59 $x296)))
 (let (($x348 (= ?x329 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x185 (and $x348 $x69)))
 (let (($x271 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x188 (and $x271 $x185)))
 (let (($x20 (and $x59 $x188)))
 (let (($x218 (= ?x177 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x373 (and $x218 $x20)))
 (let (($x238 (bvugt ?x117 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x309 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x101 (=> (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x309 $x238)))))))
 (let (($x287 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x325 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x179)))
 (let (($x305 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x325 $x287)))))))
 (let (($x398 (bvugt ?x32 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x221 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x404)))
 (let (($x385 (=> (bvule ?x32 (bvsub (bvadd ?x32 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x221 $x398)))))))
 (let (($x206 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x268 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x268)))
 (let (($x226 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x206)))))))
 (let (($x93 (and $x226 $x385)))
 (let (($x353 (and $x93 $x305)))
 (let (($x25 (and $x353 $x101)))
 (let (($x29 (and $x25 $x373)))
 (let (($x263 (=> $x29 $x156)))
 (not $x263))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 218 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 49
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x48 (concat ?x397 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x384 (bvadd ?x214 (_ bv3 32))))
 (let ((?x108 (concat (select input.dst.llvm-mem ?x384) (concat ?x400 ?x48))))
 (let ((?x55 (bvmul (_ bv4294967295 32) ?x108)))
 (let ((?x328 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x103 (concat ?x328 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x387 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x84 (bvadd ?x387 (_ bv3 32))))
 (let ((?x216 (concat (select input.dst.llvm-mem ?x84) (concat ?x113 ?x103))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x283 (concat ?x126 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x178 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x237 (bvadd ?x178 (_ bv3 32))))
 (let ((?x394 (concat (select input.dst.llvm-mem ?x237) (concat ?x125 ?x283))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x333)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x15)))
 (let ((?x219 (bvadd (bvadd (bvadd ?x27 ?x394) ?x216) ?x55)))
 (let ((?x210 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x241 (= ?x210 ?x219)))
 (let (($x72 (= $x241 true)))
 (let ((?x335 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x296 (concat ?x300 (concat ?x246 (concat ?x173 ?x335)))))
 (let (($x22 (= ?x296 input.dst.llvm-%m)))
 (let (($x106 (= $x22 true)))
 (let (($x382 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x160 (= (bvand ?x387 (_ bv4294967292 32)) ?x387)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x387 (bvsub ?x387 (_ bv4 32))) (bvult ?x387 (bvsub ?x387 (_ bv4 32))))))
 (let (($x28 (and true $x212)))
 (let (($x340 (= (bvand ?x178 (_ bv4294967292 32)) ?x178)))
 (let (($x157 (and $x340 $x28)))
 (let (($x259 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x304 (and (and (and true $x259) $x157) $x160)))
 (let (($x9 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x163 (and true $x9)))
 (let (($x50 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x21 (and $x50 $x163)))
 (let (($x155 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x178 (bvsub ?x178 (_ bv12 32))) (bvult ?x178 (bvsub ?x178 (_ bv12 32))))))
 (let (($x320 (and (and (and true $x50) $x155) $x21)))
 (let (($x188 (and (and $x320 $x304) $x382)))
 (let (($x69 (= input.dst.llvm-%m ?x296)))
 (let ((?x97 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x100 (= (_ bv0 32) ?x97)))
 (let ((?x26 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x26)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (and $x244 $x120)))
 (let (($x80 (and $x191 $x100)))
 (let (($x24 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x291 (and $x24 $x80)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x262 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x349 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x262 $x136)))))))
 (let (($x29 (and (and (and $x349 $x291) $x69) $x188)))
 (let (($x39 (forall ((input.ind-%var3437X (_ BitVec 32)) )(let ((?x375 (bvadd (bvmul input.ind-%var3437X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv1 32))) (select input.dst.llvm-mem ?x375))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv2 32))) ?x30))))
 (let ((?x329 (input.spec-%var-m-0.1.1 input.ind-%var3437X)))
 (let (($x59 (input.spec-%var-m-0.0.1 input.ind-%var3437X)))
 (=> $x59 (= ?x329 ?x366))))))))
 ))
 (let (($x399 (forall ((input.ind-%var3436X (_ BitVec 32)) )(let (($x59 (input.spec-%var-m-0.0.1 input.ind-%var3436X)))
 (= $x59 (and (bvule (_ bv0 32) input.ind-%var3436X) (bvult input.ind-%var3436X (_ bv100 32))))))
 ))
 (let (($x386 (and $x399 $x39)))
 (let (($x53 (and $x386 $x29)))
 (let (($x10 (= $x53 true)))
 (let (($x383 (= $x320 true)))
 (let (($x208 (and $x304 $x382)))
 (let (($x174 (= $x208 true)))
 (let (($x192 (and $x174 $x383)))
 (let (($x274 (and $x192 $x10)))
 (let (($x37 (and $x274 $x106)))
 (let (($x396 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x275 (ite $x396 (_ bv1 32) (_ bv0 32))))
 (let (($x150 (= ?x275 (_ bv0 32))))
 (let (($x222 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x51 (ite $x222 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (= ?x51 (_ bv0 32))))
 (let (($x371 (and $x198 $x150)))
 (let (($x367 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x112 (ite $x367 (_ bv1 32) (_ bv0 32))))
 (let (($x299 (= ?x112 (_ bv0 32))))
 (let (($x297 (and $x299 $x371)))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x200 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x350 (bvuge ?x200 (_ bv1 32))))
 (let (($x234 (and $x350 $x297)))
 (let (($x346 (and $x234 $x37)))
 (let (($x105 (= ?x210 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x256 (=> $x350 $x105)))
 (let (($x302 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x260 (= $x350 $x302)))
 (let (($x238 (= false false)))
 (let (($x265 (= ?x200 (_ bv0 32))))
 (let (($x252 (=> $x265 $x238)))
 (let (($x273 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x279 (= $x265 $x273)))
 (let (($x129 (and (and (and $x279 $x252) $x260) $x256)))
 (let (($x33 (and $x129 $x346)))
 (let ((?x92 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x223 (= ?x92 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x261 (bvuge ?x112 (_ bv1 32))))
 (let (($x323 (=> $x261 $x223)))
 (let (($x75 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x170 (= $x261 $x75)))
 (let (($x189 (and (and (= $x299 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x299 $x238)) $x170)))
 (let (($x365 (and $x189 $x323)))
 (let (($x236 (and $x365 $x33)))
 (let ((?x215 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x162 (= ?x215 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x280 (bvuge ?x275 (_ bv1 32))))
 (let (($x44 (=> $x280 $x162)))
 (let (($x231 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x370 (= $x280 $x231)))
 (let (($x303 (and (and (= $x150 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x150 $x238)) $x370)))
 (let (($x141 (and $x303 $x44)))
 (let (($x130 (and $x141 $x236)))
 (let ((?x25 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x327 (= ?x25 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x269 (bvuge ?x51 (_ bv1 32))))
 (let (($x395 (=> $x269 $x327)))
 (let (($x77 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x255 (= $x269 $x77)))
 (let (($x115 (=> $x198 $x238)))
 (let (($x251 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x312 (= $x198 $x251)))
 (let (($x356 (and (and (and $x312 $x115) $x255) $x395)))
 (let (($x249 (and $x356 $x130)))
 (let (($x38 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x334 (and $x38 $x249)))
 (let (($x96 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x16 (and $x96 $x334)))
 (let (($x377 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x389 (and $x377 $x16)))
 (let (($x123 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x124 (and $x123 $x389)))
 (let (($x378 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x71 (and $x378 $x124)))
 (let (($x137 (and $x238 $x71)))
 (let (($x145 (= ?x210 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x46 (and $x145 $x137)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x247 (and $x181 $x46)))
 (let (($x73 (and $x238 $x247)))
 (let (($x374 (= ?x92 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x228 (and $x374 $x73)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x149 (and $x194 $x228)))
 (let (($x11 (and $x238 $x149)))
 (let (($x324 (= ?x215 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x158 (and $x324 $x11)))
 (let (($x8 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x308 (and $x8 $x158)))
 (let (($x379 (and $x238 $x308)))
 (let (($x13 (= ?x25 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x43 (and $x13 $x379)))
 (let (($x401 (bvugt ?x387 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x84)))
 (let (($x330 (=> (bvule ?x387 (bvsub (bvadd ?x387 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x229 $x401)))))))
 (let (($x139 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x225 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x384)))
 (let (($x111 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x225 $x139)))))))
 (let (($x68 (bvugt ?x178 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x57 (=> (bvule ?x178 (bvsub (bvadd ?x178 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x68)))))))
 (let (($x226 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x336 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x336)))
 (let (($x398 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x226)))))))
 (let (($x195 (and $x398 $x57)))
 (let (($x338 (and $x195 $x111)))
 (let (($x305 (and $x338 $x330)))
 (let (($x182 (and $x305 $x43)))
 (let (($x253 (=> $x182 $x72)))
 (not $x253)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x48 (concat ?x397 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x384 (bvadd ?x214 (_ bv3 32))))
 (let ((?x108 (concat (select input.dst.llvm-mem ?x384) (concat ?x400 ?x48))))
 (let ((?x55 (bvmul (_ bv4294967295 32) ?x108)))
 (let ((?x328 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x103 (concat ?x328 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x387 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x84 (bvadd ?x387 (_ bv3 32))))
 (let ((?x216 (concat (select input.dst.llvm-mem ?x84) (concat ?x113 ?x103))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x283 (concat ?x126 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x178 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x237 (bvadd ?x178 (_ bv3 32))))
 (let ((?x394 (concat (select input.dst.llvm-mem ?x237) (concat ?x125 ?x283))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x333)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x15)))
 (let ((?x219 (bvadd (bvadd (bvadd ?x27 ?x394) ?x216) ?x55)))
 (let ((?x210 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x241 (= ?x210 ?x219)))
 (let (($x72 (= $x241 true)))
 (let ((?x335 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x296 (concat ?x300 (concat ?x246 (concat ?x173 ?x335)))))
 (let (($x22 (= ?x296 input.dst.llvm-%m)))
 (let (($x106 (= $x22 true)))
 (let (($x382 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x160 (= (bvand ?x387 (_ bv4294967292 32)) ?x387)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x387 (bvsub ?x387 (_ bv4 32))) (bvult ?x387 (bvsub ?x387 (_ bv4 32))))))
 (let (($x28 (and true $x212)))
 (let (($x340 (= (bvand ?x178 (_ bv4294967292 32)) ?x178)))
 (let (($x157 (and $x340 $x28)))
 (let (($x259 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x304 (and (and (and true $x259) $x157) $x160)))
 (let (($x9 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x163 (and true $x9)))
 (let (($x50 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x21 (and $x50 $x163)))
 (let (($x155 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x178 (bvsub ?x178 (_ bv12 32))) (bvult ?x178 (bvsub ?x178 (_ bv12 32))))))
 (let (($x320 (and (and (and true $x50) $x155) $x21)))
 (let (($x188 (and (and $x320 $x304) $x382)))
 (let (($x69 (= input.dst.llvm-%m ?x296)))
 (let ((?x97 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x100 (= (_ bv0 32) ?x97)))
 (let ((?x26 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x26)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (and $x244 $x120)))
 (let (($x80 (and $x191 $x100)))
 (let (($x24 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x291 (and $x24 $x80)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x262 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x349 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x262 $x136)))))))
 (let (($x29 (and (and (and $x349 $x291) $x69) $x188)))
 (let (($x39 (forall ((input.ind-%var3437X (_ BitVec 32)) )(let ((?x375 (bvadd (bvmul input.ind-%var3437X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv1 32))) (select input.dst.llvm-mem ?x375))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv2 32))) ?x30))))
 (let ((?x329 (input.spec-%var-m-0.1.1 input.ind-%var3437X)))
 (let (($x59 (input.spec-%var-m-0.0.1 input.ind-%var3437X)))
 (=> $x59 (= ?x329 ?x366))))))))
 ))
 (let (($x399 (forall ((input.ind-%var3436X (_ BitVec 32)) )(let (($x59 (input.spec-%var-m-0.0.1 input.ind-%var3436X)))
 (= $x59 (and (bvule (_ bv0 32) input.ind-%var3436X) (bvult input.ind-%var3436X (_ bv100 32))))))
 ))
 (let (($x386 (and $x399 $x39)))
 (let (($x53 (and $x386 $x29)))
 (let (($x10 (= $x53 true)))
 (let (($x383 (= $x320 true)))
 (let (($x208 (and $x304 $x382)))
 (let (($x174 (= $x208 true)))
 (let (($x192 (and $x174 $x383)))
 (let (($x274 (and $x192 $x10)))
 (let (($x37 (and $x274 $x106)))
 (let (($x396 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x275 (ite $x396 (_ bv1 32) (_ bv0 32))))
 (let (($x150 (= ?x275 (_ bv0 32))))
 (let (($x222 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x51 (ite $x222 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (= ?x51 (_ bv0 32))))
 (let (($x371 (and $x198 $x150)))
 (let (($x367 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x112 (ite $x367 (_ bv1 32) (_ bv0 32))))
 (let (($x299 (= ?x112 (_ bv0 32))))
 (let (($x297 (and $x299 $x371)))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x200 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x350 (bvuge ?x200 (_ bv1 32))))
 (let (($x234 (and $x350 $x297)))
 (let (($x346 (and $x234 $x37)))
 (let (($x105 (= ?x210 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x256 (=> $x350 $x105)))
 (let (($x302 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x260 (= $x350 $x302)))
 (let (($x238 (= false false)))
 (let (($x265 (= ?x200 (_ bv0 32))))
 (let (($x252 (=> $x265 $x238)))
 (let (($x273 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x279 (= $x265 $x273)))
 (let (($x129 (and (and (and $x279 $x252) $x260) $x256)))
 (let (($x33 (and $x129 $x346)))
 (let ((?x92 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x223 (= ?x92 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x261 (bvuge ?x112 (_ bv1 32))))
 (let (($x323 (=> $x261 $x223)))
 (let (($x75 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x170 (= $x261 $x75)))
 (let (($x189 (and (and (= $x299 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x299 $x238)) $x170)))
 (let (($x365 (and $x189 $x323)))
 (let (($x236 (and $x365 $x33)))
 (let ((?x215 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x162 (= ?x215 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x280 (bvuge ?x275 (_ bv1 32))))
 (let (($x44 (=> $x280 $x162)))
 (let (($x231 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x370 (= $x280 $x231)))
 (let (($x303 (and (and (= $x150 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x150 $x238)) $x370)))
 (let (($x141 (and $x303 $x44)))
 (let (($x130 (and $x141 $x236)))
 (let ((?x25 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x327 (= ?x25 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x269 (bvuge ?x51 (_ bv1 32))))
 (let (($x395 (=> $x269 $x327)))
 (let (($x77 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x255 (= $x269 $x77)))
 (let (($x115 (=> $x198 $x238)))
 (let (($x251 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x312 (= $x198 $x251)))
 (let (($x356 (and (and (and $x312 $x115) $x255) $x395)))
 (let (($x249 (and $x356 $x130)))
 (let (($x38 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x334 (and $x38 $x249)))
 (let (($x96 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x16 (and $x96 $x334)))
 (let (($x377 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x389 (and $x377 $x16)))
 (let (($x123 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x124 (and $x123 $x389)))
 (let (($x378 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x71 (and $x378 $x124)))
 (let (($x137 (and $x238 $x71)))
 (let (($x145 (= ?x210 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x46 (and $x145 $x137)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x247 (and $x181 $x46)))
 (let (($x73 (and $x238 $x247)))
 (let (($x374 (= ?x92 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x228 (and $x374 $x73)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x149 (and $x194 $x228)))
 (let (($x11 (and $x238 $x149)))
 (let (($x324 (= ?x215 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x158 (and $x324 $x11)))
 (let (($x8 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x308 (and $x8 $x158)))
 (let (($x379 (and $x238 $x308)))
 (let (($x13 (= ?x25 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x43 (and $x13 $x379)))
 (let (($x401 (bvugt ?x387 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x84)))
 (let (($x330 (=> (bvule ?x387 (bvsub (bvadd ?x387 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x229 $x401)))))))
 (let (($x139 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x225 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x384)))
 (let (($x111 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x225 $x139)))))))
 (let (($x68 (bvugt ?x178 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x57 (=> (bvule ?x178 (bvsub (bvadd ?x178 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x68)))))))
 (let (($x226 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x336 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x336)))
 (let (($x398 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x226)))))))
 (let (($x195 (and $x398 $x57)))
 (let (($x338 (and $x195 $x111)))
 (let (($x305 (and $x338 $x330)))
 (let (($x182 (and $x305 $x43)))
 (let (($x253 (=> $x182 $x72)))
 (not $x253)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 217 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 50
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x92 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x90 (bvmul (_ bv4294967295 32) ?x92)))
 (let ((?x354 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x90)))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x393 (concat ?x294 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x109 (bvadd ?x214 (_ bv3 32))))
 (let ((?x23 (concat (select input.dst.llvm-mem ?x109) (concat ?x107 ?x393))))
 (let ((?x47 (bvmul (_ bv4294967295 32) ?x23)))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x116 (concat ?x240 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x287 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x293 (bvadd ?x287 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x293) (concat ?x83 ?x116))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x219 (concat ?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x205 (bvadd ?x99 (_ bv3 32))))
 (let ((?x66 (concat (select input.dst.llvm-mem ?x205) (concat ?x72 ?x219))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x295)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x397)))
 (let ((?x159 (bvadd (bvadd (bvadd ?x48 ?x66) ?x91) ?x47)))
 (let (($x342 (= ?x159 ?x354)))
 (let (($x355 (= $x342 true)))
 (let ((?x16 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x149 (concat ?x228 (concat ?x46 (concat ?x124 ?x16)))))
 (let (($x88 (= ?x149 input.dst.llvm-%m)))
 (let (($x369 (= $x88 true)))
 (let (($x76 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x208 (= (bvand ?x287 (_ bv4294967292 32)) ?x287)))
 (let (($x160 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x287 (bvsub ?x287 (_ bv4 32))) (bvult ?x287 (bvsub ?x287 (_ bv4 32))))))
 (let (($x304 (and true $x160)))
 (let (($x212 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x78 (and $x212 $x304)))
 (let (($x220 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x50 (and (and (and true $x220) $x78) $x208)))
 (let (($x383 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x192 (and true $x383)))
 (let (($x155 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x186 (and $x155 $x192)))
 (let (($x289 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv12 32))) (bvult ?x99 (bvsub ?x99 (_ bv12 32))))))
 (let (($x14 (and (and (and true $x155) $x289) $x186)))
 (let (($x308 (and (and $x14 $x50) $x76)))
 (let (($x11 (= input.dst.llvm-%m ?x149)))
 (let ((?x33 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x236 (= (_ bv0 32) ?x33)))
 (let ((?x106 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x106)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x346 (and $x22 $x37)))
 (let (($x130 (and $x346 $x236)))
 (let (($x335 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x249 (and $x335 $x130)))
 (let (($x373 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x274 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x373)))))))
 (let (($x182 (and (and (and $x274 $x249) $x11) $x308)))
 (let (($x211 (forall ((input.ind-%var3481X (_ BitVec 32)) )(let ((?x381 (bvadd (bvmul input.ind-%var3481X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv1 32))) (select input.dst.llvm-mem ?x381))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv2 32))) ?x120))))
 (let ((?x215 (input.spec-%var-m-0.1.1 input.ind-%var3481X)))
 (let (($x238 (input.spec-%var-m-0.0.1 input.ind-%var3481X)))
 (=> $x238 (= ?x215 ?x20))))))))
 ))
 (let (($x364 (forall ((input.ind-%var3480X (_ BitVec 32)) )(let (($x238 (input.spec-%var-m-0.0.1 input.ind-%var3480X)))
 (= $x238 (and (bvule (_ bv0 32) input.ind-%var3480X) (bvult input.ind-%var3480X (_ bv100 32))))))
 ))
 (let (($x246 (and $x364 $x211)))
 (let (($x168 (and $x246 $x182)))
 (let (($x153 (= $x168 true)))
 (let (($x233 (= $x14 true)))
 (let (($x183 (and $x50 $x76)))
 (let (($x175 (= $x183 true)))
 (let (($x7 (and $x175 $x233)))
 (let (($x250 (and $x7 $x153)))
 (let (($x34 (and $x250 $x369)))
 (let (($x140 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x196 (ite $x140 (_ bv1 32) (_ bv0 32))))
 (let (($x162 (bvuge ?x196 (_ bv1 32))))
 (let (($x312 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x332 (ite $x312 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (bvuge ?x332 (_ bv1 32))))
 (let (($x282 (and $x327 $x162)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x60 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x223 (bvuge ?x60 (_ bv1 32))))
 (let (($x259 (and $x223 $x282)))
 (let (($x252 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x132 (ite $x252 (_ bv1 32) (_ bv0 32))))
 (let (($x350 (= ?x132 (_ bv0 32))))
 (let (($x245 (and $x350 $x259)))
 (let (($x333 (and $x245 $x34)))
 (let ((?x254 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x297 (= ?x254 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x105 (bvuge ?x132 (_ bv1 32))))
 (let (($x234 (=> $x105 $x297)))
 (let (($x256 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x129 (= $x105 $x256)))
 (let (($x401 (= false false)))
 (let (($x362 (=> $x350 $x401)))
 (let (($x260 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x281 (= $x350 $x260)))
 (let (($x42 (and (and (and $x281 $x362) $x129) $x234)))
 (let (($x15 (and $x42 $x333)))
 (let ((?x210 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x200 (= ?x210 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x265 (=> $x223 $x200)))
 (let (($x323 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x365 (= $x223 $x323)))
 (let (($x261 (= ?x60 (_ bv0 32))))
 (let (($x204 (=> $x261 $x401)))
 (let (($x170 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x189 (= $x261 $x170)))
 (let (($x279 (and (and (and $x189 $x204) $x365) $x265)))
 (let (($x27 (and $x279 $x15)))
 (let (($x112 (= ?x92 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x299 (=> $x162 $x112)))
 (let (($x44 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x141 (= $x162 $x44)))
 (let (($x280 (= ?x196 (_ bv0 32))))
 (let (($x31 (=> $x280 $x401)))
 (let (($x370 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x303 (= $x280 $x370)))
 (let (($x127 (and (and (and $x303 $x31) $x141) $x299)))
 (let (($x263 (and $x127 $x27)))
 (let ((?x305 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x275 (= ?x305 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x150 (=> $x327 $x275)))
 (let (($x395 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x356 (= $x327 $x395)))
 (let (($x269 (= ?x332 (_ bv0 32))))
 (let (($x74 (=> $x269 $x401)))
 (let (($x255 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x146 (= $x269 $x255)))
 (let (($x87 (and (and (and $x146 $x74) $x356) $x150)))
 (let (($x343 (and $x87 $x263)))
 (let (($x251 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x125 (and $x251 $x343)))
 (let (($x198 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x18 (and $x198 $x125)))
 (let (($x222 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x126 (and $x222 $x18)))
 (let (($x257 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x17 (and $x257 $x126)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x283 (and $x65 $x17)))
 (let (($x156 (and $x401 $x283)))
 (let (($x313 (= ?x254 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x394 (and $x313 $x156)))
 (let (($x378 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x322 (and $x378 $x394)))
 (let (($x148 (and $x401 $x322)))
 (let (($x145 (= ?x210 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x376 (and $x145 $x148)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x113 (and $x181 $x376)))
 (let (($x368 (and $x401 $x113)))
 (let (($x374 (= ?x92 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x328 (and $x374 $x368)))
 (let (($x309 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x270 (and $x309 $x328)))
 (let (($x103 (and $x401 $x270)))
 (let (($x84 (= ?x305 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x203 (and $x84 $x103)))
 (let (($x67 (bvugt ?x287 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x248 (=> (bvule ?x287 (bvsub (bvadd ?x287 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x67)))))))
 (let (($x278 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x179 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x268 $x278)))))))
 (let (($x166 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x93 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x166)))))))
 (let (($x32 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x348 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x348)))
 (let (($x68 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x32)))))))
 (let (($x98 (and $x68 $x93)))
 (let (($x239 (and $x98 $x179)))
 (let (($x111 (and $x239 $x248)))
 (let (($x216 (and $x111 $x203)))
 (let (($x171 (=> $x216 $x355)))
 (not $x171)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x92 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x90 (bvmul (_ bv4294967295 32) ?x92)))
 (let ((?x354 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x90)))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x393 (concat ?x294 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x109 (bvadd ?x214 (_ bv3 32))))
 (let ((?x23 (concat (select input.dst.llvm-mem ?x109) (concat ?x107 ?x393))))
 (let ((?x47 (bvmul (_ bv4294967295 32) ?x23)))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x116 (concat ?x240 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x287 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x293 (bvadd ?x287 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x293) (concat ?x83 ?x116))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x219 (concat ?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x205 (bvadd ?x99 (_ bv3 32))))
 (let ((?x66 (concat (select input.dst.llvm-mem ?x205) (concat ?x72 ?x219))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x295)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x397)))
 (let ((?x159 (bvadd (bvadd (bvadd ?x48 ?x66) ?x91) ?x47)))
 (let (($x342 (= ?x159 ?x354)))
 (let (($x355 (= $x342 true)))
 (let ((?x16 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x149 (concat ?x228 (concat ?x46 (concat ?x124 ?x16)))))
 (let (($x88 (= ?x149 input.dst.llvm-%m)))
 (let (($x369 (= $x88 true)))
 (let (($x76 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x208 (= (bvand ?x287 (_ bv4294967292 32)) ?x287)))
 (let (($x160 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x287 (bvsub ?x287 (_ bv4 32))) (bvult ?x287 (bvsub ?x287 (_ bv4 32))))))
 (let (($x304 (and true $x160)))
 (let (($x212 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x78 (and $x212 $x304)))
 (let (($x220 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x50 (and (and (and true $x220) $x78) $x208)))
 (let (($x383 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x192 (and true $x383)))
 (let (($x155 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x186 (and $x155 $x192)))
 (let (($x289 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv12 32))) (bvult ?x99 (bvsub ?x99 (_ bv12 32))))))
 (let (($x14 (and (and (and true $x155) $x289) $x186)))
 (let (($x308 (and (and $x14 $x50) $x76)))
 (let (($x11 (= input.dst.llvm-%m ?x149)))
 (let ((?x33 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x236 (= (_ bv0 32) ?x33)))
 (let ((?x106 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x106)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x346 (and $x22 $x37)))
 (let (($x130 (and $x346 $x236)))
 (let (($x335 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x249 (and $x335 $x130)))
 (let (($x373 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x274 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x373)))))))
 (let (($x182 (and (and (and $x274 $x249) $x11) $x308)))
 (let (($x211 (forall ((input.ind-%var3481X (_ BitVec 32)) )(let ((?x381 (bvadd (bvmul input.ind-%var3481X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv1 32))) (select input.dst.llvm-mem ?x381))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv2 32))) ?x120))))
 (let ((?x215 (input.spec-%var-m-0.1.1 input.ind-%var3481X)))
 (let (($x238 (input.spec-%var-m-0.0.1 input.ind-%var3481X)))
 (=> $x238 (= ?x215 ?x20))))))))
 ))
 (let (($x364 (forall ((input.ind-%var3480X (_ BitVec 32)) )(let (($x238 (input.spec-%var-m-0.0.1 input.ind-%var3480X)))
 (= $x238 (and (bvule (_ bv0 32) input.ind-%var3480X) (bvult input.ind-%var3480X (_ bv100 32))))))
 ))
 (let (($x246 (and $x364 $x211)))
 (let (($x168 (and $x246 $x182)))
 (let (($x153 (= $x168 true)))
 (let (($x233 (= $x14 true)))
 (let (($x183 (and $x50 $x76)))
 (let (($x175 (= $x183 true)))
 (let (($x7 (and $x175 $x233)))
 (let (($x250 (and $x7 $x153)))
 (let (($x34 (and $x250 $x369)))
 (let (($x140 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x196 (ite $x140 (_ bv1 32) (_ bv0 32))))
 (let (($x162 (bvuge ?x196 (_ bv1 32))))
 (let (($x312 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x332 (ite $x312 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (bvuge ?x332 (_ bv1 32))))
 (let (($x282 (and $x327 $x162)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x60 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x223 (bvuge ?x60 (_ bv1 32))))
 (let (($x259 (and $x223 $x282)))
 (let (($x252 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x132 (ite $x252 (_ bv1 32) (_ bv0 32))))
 (let (($x350 (= ?x132 (_ bv0 32))))
 (let (($x245 (and $x350 $x259)))
 (let (($x333 (and $x245 $x34)))
 (let ((?x254 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x297 (= ?x254 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x105 (bvuge ?x132 (_ bv1 32))))
 (let (($x234 (=> $x105 $x297)))
 (let (($x256 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x129 (= $x105 $x256)))
 (let (($x401 (= false false)))
 (let (($x362 (=> $x350 $x401)))
 (let (($x260 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x281 (= $x350 $x260)))
 (let (($x42 (and (and (and $x281 $x362) $x129) $x234)))
 (let (($x15 (and $x42 $x333)))
 (let ((?x210 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x200 (= ?x210 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x265 (=> $x223 $x200)))
 (let (($x323 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x365 (= $x223 $x323)))
 (let (($x261 (= ?x60 (_ bv0 32))))
 (let (($x204 (=> $x261 $x401)))
 (let (($x170 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x189 (= $x261 $x170)))
 (let (($x279 (and (and (and $x189 $x204) $x365) $x265)))
 (let (($x27 (and $x279 $x15)))
 (let (($x112 (= ?x92 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x299 (=> $x162 $x112)))
 (let (($x44 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x141 (= $x162 $x44)))
 (let (($x280 (= ?x196 (_ bv0 32))))
 (let (($x31 (=> $x280 $x401)))
 (let (($x370 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x303 (= $x280 $x370)))
 (let (($x127 (and (and (and $x303 $x31) $x141) $x299)))
 (let (($x263 (and $x127 $x27)))
 (let ((?x305 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x275 (= ?x305 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x150 (=> $x327 $x275)))
 (let (($x395 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x356 (= $x327 $x395)))
 (let (($x269 (= ?x332 (_ bv0 32))))
 (let (($x74 (=> $x269 $x401)))
 (let (($x255 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x146 (= $x269 $x255)))
 (let (($x87 (and (and (and $x146 $x74) $x356) $x150)))
 (let (($x343 (and $x87 $x263)))
 (let (($x251 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x125 (and $x251 $x343)))
 (let (($x198 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x18 (and $x198 $x125)))
 (let (($x222 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x126 (and $x222 $x18)))
 (let (($x257 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x17 (and $x257 $x126)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x283 (and $x65 $x17)))
 (let (($x156 (and $x401 $x283)))
 (let (($x313 (= ?x254 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x394 (and $x313 $x156)))
 (let (($x378 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x322 (and $x378 $x394)))
 (let (($x148 (and $x401 $x322)))
 (let (($x145 (= ?x210 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x376 (and $x145 $x148)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x113 (and $x181 $x376)))
 (let (($x368 (and $x401 $x113)))
 (let (($x374 (= ?x92 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x328 (and $x374 $x368)))
 (let (($x309 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x270 (and $x309 $x328)))
 (let (($x103 (and $x401 $x270)))
 (let (($x84 (= ?x305 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x203 (and $x84 $x103)))
 (let (($x67 (bvugt ?x287 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x248 (=> (bvule ?x287 (bvsub (bvadd ?x287 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x67)))))))
 (let (($x278 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x179 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x268 $x278)))))))
 (let (($x166 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x93 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x166)))))))
 (let (($x32 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x348 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x348)))
 (let (($x68 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x32)))))))
 (let (($x98 (and $x68 $x93)))
 (let (($x239 (and $x98 $x179)))
 (let (($x111 (and $x239 $x248)))
 (let (($x216 (and $x111 $x203)))
 (let (($x171 (=> $x216 $x355)))
 (not $x171)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 223 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 51
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x210 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x399 (bvmul (_ bv4294967295 32) ?x210)))
 (let ((?x254 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x375 (bvadd ?x254 ?x399)))
 (let ((?x172 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x136 (concat ?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x221 (bvadd ?x214 (_ bv3 32))))
 (let ((?x360 (concat (select input.dst.llvm-mem ?x221) (concat ?x207 ?x136))))
 (let ((?x39 (bvmul (_ bv4294967295 32) ?x360)))
 (let ((?x390 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x184 (concat ?x390 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x139 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x117 (bvadd ?x139 (_ bv3 32))))
 (let ((?x119 (concat (select input.dst.llvm-mem ?x117) (concat ?x115 ?x184))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x159 (concat ?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x206 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x298 (bvadd ?x206 (_ bv3 32))))
 (let ((?x355 (concat (select input.dst.llvm-mem ?x298) (concat ?x90 ?x159))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x12)))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x294)))
 (let ((?x235 (bvadd (bvadd (bvadd ?x393 ?x355) ?x119) ?x39)))
 (let (($x45 (= ?x235 ?x375)))
 (let (($x82 (= $x45 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x376 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x113 (concat ?x376 (concat ?x394 (concat ?x17 ?x18)))))
 (let (($x41 (= ?x113 input.dst.llvm-%m)))
 (let (($x292 (= $x41 true)))
 (let (($x224 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x183 (= (bvand ?x139 (_ bv4294967292 32)) ?x139)))
 (let (($x208 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x139 (bvsub ?x139 (_ bv4 32))) (bvult ?x139 (bvsub ?x139 (_ bv4 32))))))
 (let (($x50 (and true $x208)))
 (let (($x160 (= (bvand ?x206 (_ bv4294967292 32)) ?x206)))
 (let (($x54 (and $x160 $x50)))
 (let (($x28 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x155 (and (and (and true $x28) $x54) $x183)))
 (let (($x233 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x7 (and true $x233)))
 (let (($x289 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x19 (and $x289 $x7)))
 (let (($x320 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x206 (bvsub ?x206 (_ bv12 32))) (bvult ?x206 (bvsub ?x206 (_ bv12 32))))))
 (let (($x133 (and (and (and true $x289) $x320) $x19)))
 (let (($x270 (and (and $x133 $x155) $x224)))
 (let (($x368 (= input.dst.llvm-%m ?x113)))
 (let ((?x15 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x27 (= (_ bv0 32) ?x15)))
 (let ((?x369 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x369)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x333 (and $x88 $x34)))
 (let (($x263 (and $x333 $x27)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x343 (and $x16 $x263)))
 (let (($x43 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x250 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x43)))))))
 (let (($x216 (and (and (and $x250 $x343) $x368) $x270)))
 (let (($x137 (forall ((input.ind-%var3525X (_ BitVec 32)) )(let ((?x173 (bvadd (bvmul input.ind-%var3525X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x37))))
 (let ((?x92 (input.spec-%var-m-0.1.1 input.ind-%var3525X)))
 (let (($x401 (input.spec-%var-m-0.0.1 input.ind-%var3525X)))
 (=> $x401 (= ?x92 ?x379))))))))
 ))
 (let (($x26 (forall ((input.ind-%var3524X (_ BitVec 32)) )(let (($x401 (input.spec-%var-m-0.0.1 input.ind-%var3524X)))
 (= $x401 (and (bvule (_ bv0 32) input.ind-%var3524X) (bvult input.ind-%var3524X (_ bv100 32))))))
 ))
 (let (($x46 (and $x26 $x137)))
 (let (($x114 (and $x46 $x216)))
 (let (($x400 (= $x114 true)))
 (let (($x363 (= $x133 true)))
 (let (($x6 (and $x155 $x224)))
 (let (($x202 (= $x6 true)))
 (let (($x5 (and $x202 $x363)))
 (let (($x321 (and $x5 $x400)))
 (let (($x358 (and $x321 $x292)))
 (let (($x31 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x267 (ite $x31 (_ bv1 32) (_ bv0 32))))
 (let (($x112 (bvuge ?x267 (_ bv1 32))))
 (let (($x146 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x209 (ite $x146 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (= ?x209 (_ bv0 32))))
 (let (($x89 (and $x327 $x112)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x285 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x200 (bvuge ?x285 (_ bv1 32))))
 (let (($x220 (and $x200 $x89)))
 (let (($x362 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x288 (ite $x362 (_ bv1 32) (_ bv0 32))))
 (let (($x105 (= ?x288 (_ bv0 32))))
 (let (($x174 (and $x105 $x220)))
 (let (($x295 (and $x174 $x358)))
 (let ((?x96 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x259 (= ?x96 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x297 (bvuge ?x288 (_ bv1 32))))
 (let (($x245 (=> $x297 $x259)))
 (let (($x234 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x42 (= $x297 $x234)))
 (let (($x67 (= false false)))
 (let (($x371 (=> $x105 $x67)))
 (let (($x129 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x122 (= $x105 $x129)))
 (let (($x340 (and (and (and $x122 $x371) $x42) $x245)))
 (let (($x397 (and $x340 $x295)))
 (let (($x132 (= ?x254 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x350 (=> $x200 $x132)))
 (let (($x265 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x279 (= $x200 $x265)))
 (let (($x223 (= ?x285 (_ bv0 32))))
 (let (($x372 (=> $x223 $x67)))
 (let (($x365 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x273 (= $x223 $x365)))
 (let (($x281 (and (and (and $x273 $x372) $x279) $x350)))
 (let (($x48 (and $x281 $x397)))
 (let (($x60 (= ?x210 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x261 (=> $x112 $x60)))
 (let (($x299 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x127 (= $x112 $x299)))
 (let (($x162 (= ?x267 (_ bv0 32))))
 (let (($x367 (=> $x162 $x67)))
 (let (($x141 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x199 (= $x162 $x141)))
 (let (($x189 (and (and (and $x199 $x367) $x127) $x261)))
 (let (($x290 (and $x189 $x48)))
 (let ((?x111 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x196 (= ?x111 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x275 (bvuge ?x209 (_ bv1 32))))
 (let (($x280 (=> $x275 $x196)))
 (let (($x150 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x87 (= $x275 $x150)))
 (let (($x396 (=> $x327 $x67)))
 (let (($x356 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x213 (= $x327 $x356)))
 (let (($x303 (and (and (and $x213 $x396) $x87) $x280)))
 (let (($x241 (and $x303 $x290)))
 (let (($x255 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x72 (and $x255 $x241)))
 (let (($x269 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x108 (and $x269 $x72)))
 (let (($x312 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x55 (and $x312 $x108)))
 (let (($x40 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x167 (and $x40 $x55)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x219 (and $x51 $x167)))
 (let (($x253 (and $x67 $x219)))
 (let (($x38 (= ?x96 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x66 (and $x38 $x253)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x227 (and $x65 $x66)))
 (let (($x81 (and $x67 $x227)))
 (let (($x313 (= ?x254 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x147 (and $x313 $x81)))
 (let (($x378 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x83 (and $x378 $x147)))
 (let (($x102 (and $x67 $x83)))
 (let (($x145 (= ?x210 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x240 (and $x145 $x102)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x193 (and $x229 $x240)))
 (let (($x116 (and $x67 $x193)))
 (let (($x293 (= ?x111 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x311 (and $x293 $x116)))
 (let (($x353 (bvugt ?x139 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x330 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x117)))
 (let (($x177 (=> (bvule ?x139 (bvsub (bvadd ?x139 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x330 $x353)))))))
 (let (($x398 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x221)))
 (let (($x384 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x398)))))))
 (let (($x392 (bvugt ?x206 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x195 (=> (bvule ?x206 (bvsub (bvadd ?x206 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x392)))))))
 (let (($x68 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x319 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x319)))
 (let (($x166 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x68)))))))
 (let (($x339 (and $x166 $x195)))
 (let (($x310 (and $x339 $x384)))
 (let (($x179 (and $x310 $x177)))
 (let (($x91 (and $x179 $x311)))
 (let (($x30 (=> $x91 $x82)))
 (not $x30)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x210 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x399 (bvmul (_ bv4294967295 32) ?x210)))
 (let ((?x254 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x375 (bvadd ?x254 ?x399)))
 (let ((?x172 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x136 (concat ?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x221 (bvadd ?x214 (_ bv3 32))))
 (let ((?x360 (concat (select input.dst.llvm-mem ?x221) (concat ?x207 ?x136))))
 (let ((?x39 (bvmul (_ bv4294967295 32) ?x360)))
 (let ((?x390 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x184 (concat ?x390 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x139 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x117 (bvadd ?x139 (_ bv3 32))))
 (let ((?x119 (concat (select input.dst.llvm-mem ?x117) (concat ?x115 ?x184))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x159 (concat ?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x206 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x298 (bvadd ?x206 (_ bv3 32))))
 (let ((?x355 (concat (select input.dst.llvm-mem ?x298) (concat ?x90 ?x159))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x12)))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x294)))
 (let ((?x235 (bvadd (bvadd (bvadd ?x393 ?x355) ?x119) ?x39)))
 (let (($x45 (= ?x235 ?x375)))
 (let (($x82 (= $x45 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x376 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x113 (concat ?x376 (concat ?x394 (concat ?x17 ?x18)))))
 (let (($x41 (= ?x113 input.dst.llvm-%m)))
 (let (($x292 (= $x41 true)))
 (let (($x224 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x183 (= (bvand ?x139 (_ bv4294967292 32)) ?x139)))
 (let (($x208 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x139 (bvsub ?x139 (_ bv4 32))) (bvult ?x139 (bvsub ?x139 (_ bv4 32))))))
 (let (($x50 (and true $x208)))
 (let (($x160 (= (bvand ?x206 (_ bv4294967292 32)) ?x206)))
 (let (($x54 (and $x160 $x50)))
 (let (($x28 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x155 (and (and (and true $x28) $x54) $x183)))
 (let (($x233 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x7 (and true $x233)))
 (let (($x289 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x19 (and $x289 $x7)))
 (let (($x320 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x206 (bvsub ?x206 (_ bv12 32))) (bvult ?x206 (bvsub ?x206 (_ bv12 32))))))
 (let (($x133 (and (and (and true $x289) $x320) $x19)))
 (let (($x270 (and (and $x133 $x155) $x224)))
 (let (($x368 (= input.dst.llvm-%m ?x113)))
 (let ((?x15 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x27 (= (_ bv0 32) ?x15)))
 (let ((?x369 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x369)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x333 (and $x88 $x34)))
 (let (($x263 (and $x333 $x27)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x343 (and $x16 $x263)))
 (let (($x43 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x250 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x43)))))))
 (let (($x216 (and (and (and $x250 $x343) $x368) $x270)))
 (let (($x137 (forall ((input.ind-%var3525X (_ BitVec 32)) )(let ((?x173 (bvadd (bvmul input.ind-%var3525X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x37))))
 (let ((?x92 (input.spec-%var-m-0.1.1 input.ind-%var3525X)))
 (let (($x401 (input.spec-%var-m-0.0.1 input.ind-%var3525X)))
 (=> $x401 (= ?x92 ?x379))))))))
 ))
 (let (($x26 (forall ((input.ind-%var3524X (_ BitVec 32)) )(let (($x401 (input.spec-%var-m-0.0.1 input.ind-%var3524X)))
 (= $x401 (and (bvule (_ bv0 32) input.ind-%var3524X) (bvult input.ind-%var3524X (_ bv100 32))))))
 ))
 (let (($x46 (and $x26 $x137)))
 (let (($x114 (and $x46 $x216)))
 (let (($x400 (= $x114 true)))
 (let (($x363 (= $x133 true)))
 (let (($x6 (and $x155 $x224)))
 (let (($x202 (= $x6 true)))
 (let (($x5 (and $x202 $x363)))
 (let (($x321 (and $x5 $x400)))
 (let (($x358 (and $x321 $x292)))
 (let (($x31 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x267 (ite $x31 (_ bv1 32) (_ bv0 32))))
 (let (($x112 (bvuge ?x267 (_ bv1 32))))
 (let (($x146 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x209 (ite $x146 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (= ?x209 (_ bv0 32))))
 (let (($x89 (and $x327 $x112)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x285 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x200 (bvuge ?x285 (_ bv1 32))))
 (let (($x220 (and $x200 $x89)))
 (let (($x362 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x288 (ite $x362 (_ bv1 32) (_ bv0 32))))
 (let (($x105 (= ?x288 (_ bv0 32))))
 (let (($x174 (and $x105 $x220)))
 (let (($x295 (and $x174 $x358)))
 (let ((?x96 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x259 (= ?x96 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x297 (bvuge ?x288 (_ bv1 32))))
 (let (($x245 (=> $x297 $x259)))
 (let (($x234 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x42 (= $x297 $x234)))
 (let (($x67 (= false false)))
 (let (($x371 (=> $x105 $x67)))
 (let (($x129 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x122 (= $x105 $x129)))
 (let (($x340 (and (and (and $x122 $x371) $x42) $x245)))
 (let (($x397 (and $x340 $x295)))
 (let (($x132 (= ?x254 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x350 (=> $x200 $x132)))
 (let (($x265 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x279 (= $x200 $x265)))
 (let (($x223 (= ?x285 (_ bv0 32))))
 (let (($x372 (=> $x223 $x67)))
 (let (($x365 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x273 (= $x223 $x365)))
 (let (($x281 (and (and (and $x273 $x372) $x279) $x350)))
 (let (($x48 (and $x281 $x397)))
 (let (($x60 (= ?x210 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x261 (=> $x112 $x60)))
 (let (($x299 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x127 (= $x112 $x299)))
 (let (($x162 (= ?x267 (_ bv0 32))))
 (let (($x367 (=> $x162 $x67)))
 (let (($x141 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x199 (= $x162 $x141)))
 (let (($x189 (and (and (and $x199 $x367) $x127) $x261)))
 (let (($x290 (and $x189 $x48)))
 (let ((?x111 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x196 (= ?x111 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x275 (bvuge ?x209 (_ bv1 32))))
 (let (($x280 (=> $x275 $x196)))
 (let (($x150 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x87 (= $x275 $x150)))
 (let (($x396 (=> $x327 $x67)))
 (let (($x356 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x213 (= $x327 $x356)))
 (let (($x303 (and (and (and $x213 $x396) $x87) $x280)))
 (let (($x241 (and $x303 $x290)))
 (let (($x255 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x72 (and $x255 $x241)))
 (let (($x269 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x108 (and $x269 $x72)))
 (let (($x312 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x55 (and $x312 $x108)))
 (let (($x40 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x167 (and $x40 $x55)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x219 (and $x51 $x167)))
 (let (($x253 (and $x67 $x219)))
 (let (($x38 (= ?x96 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x66 (and $x38 $x253)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x227 (and $x65 $x66)))
 (let (($x81 (and $x67 $x227)))
 (let (($x313 (= ?x254 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x147 (and $x313 $x81)))
 (let (($x378 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x83 (and $x378 $x147)))
 (let (($x102 (and $x67 $x83)))
 (let (($x145 (= ?x210 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x240 (and $x145 $x102)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x193 (and $x229 $x240)))
 (let (($x116 (and $x67 $x193)))
 (let (($x293 (= ?x111 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x311 (and $x293 $x116)))
 (let (($x353 (bvugt ?x139 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x330 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x117)))
 (let (($x177 (=> (bvule ?x139 (bvsub (bvadd ?x139 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x330 $x353)))))))
 (let (($x398 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x221)))
 (let (($x384 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x398)))))))
 (let (($x392 (bvugt ?x206 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x195 (=> (bvule ?x206 (bvsub (bvadd ?x206 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x392)))))))
 (let (($x68 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x319 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x319)))
 (let (($x166 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x68)))))))
 (let (($x339 (and $x166 $x195)))
 (let (($x310 (and $x339 $x384)))
 (let (($x179 (and $x310 $x177)))
 (let (($x91 (and $x179 $x311)))
 (let (($x30 (=> $x91 $x82)))
 (not $x30)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 223 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 52
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x179 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x96 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x381 (bvadd ?x96 ?x179)))
 (let ((?x373 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x185 (concat ?x373 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x324 (bvadd ?x214 (_ bv3 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem ?x324) (concat ?x296 ?x185))))
 (let ((?x242 (bvmul (_ bv4294967295 32) ?x211)))
 (let ((?x389 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x125 (concat ?x389 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x278 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x387 (bvadd ?x278 (_ bv3 32))))
 (let ((?x215 (concat (select input.dst.llvm-mem ?x387) (concat ?x13 ?x125))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x235 (concat ?x39 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x161 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x180 (bvadd ?x161 (_ bv3 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem ?x180) (concat ?x375 ?x235))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x61)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x172)))
 (let ((?x364 (bvadd (bvadd (bvadd ?x136 ?x30) ?x215) ?x242)))
 (let (($x80 (= ?x364 ?x381)))
 (let (($x29 (= $x80 true)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x83 (concat ?x147 (concat ?x66 (concat ?x167 ?x108)))))
 (let (($x403 (= ?x83 input.dst.llvm-%m)))
 (let (($x331 (= $x403 true)))
 (let (($x163 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x6 (= (bvand ?x278 (_ bv4294967292 32)) ?x278)))
 (let (($x183 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x278 (bvsub ?x278 (_ bv4 32))) (bvult ?x278 (bvsub ?x278 (_ bv4 32))))))
 (let (($x155 (and true $x183)))
 (let (($x208 (= (bvand ?x161 (_ bv4294967292 32)) ?x161)))
 (let (($x59 (and $x208 $x155)))
 (let (($x304 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x289 (and (and (and true $x304) $x59) $x6)))
 (let (($x363 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x5 (and true $x363)))
 (let (($x320 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x194 (and $x320 $x5)))
 (let (($x14 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x161 (bvsub ?x161 (_ bv12 32))) (bvult ?x161 (bvsub ?x161 (_ bv12 32))))))
 (let (($x366 (and (and (and true $x320) $x14) $x194)))
 (let (($x193 (and (and $x366 $x289) $x163)))
 (let (($x102 (= input.dst.llvm-%m ?x83)))
 (let ((?x397 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x48 (= (_ bv0 32) ?x397)))
 (let ((?x292 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x358 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x292)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x295 (and $x41 $x358)))
 (let (($x290 (and $x295 $x48)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (and $x18 $x290)))
 (let (($x203 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x368 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x321 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x368 $x203)))))))
 (let (($x91 (and (and (and $x321 $x241) $x102) $x193)))
 (let (($x156 (forall ((input.ind-%var3569X (_ BitVec 32)) )(let ((?x124 (bvadd (bvmul input.ind-%var3569X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem ?x124))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv2 32))) ?x34))))
 (let ((?x210 (input.spec-%var-m-0.1.1 input.ind-%var3569X)))
 (let (($x67 (input.spec-%var-m-0.0.1 input.ind-%var3569X)))
 (=> $x67 (= ?x210 ?x103))))))))
 ))
 (let (($x106 (forall ((input.ind-%var3568X (_ BitVec 32)) )(let (($x67 (input.spec-%var-m-0.0.1 input.ind-%var3568X)))
 (= $x67 (and (bvule (_ bv0 32) input.ind-%var3568X) (bvult input.ind-%var3568X (_ bv100 32))))))
 ))
 (let (($x394 (and $x106 $x156)))
 (let (($x118 (and $x394 $x91)))
 (let (($x107 (= $x118 true)))
 (let (($x291 (= $x366 true)))
 (let (($x79 (and $x289 $x163)))
 (let (($x9 (= $x79 true)))
 (let (($x97 (and $x9 $x291)))
 (let (($x131 (and $x97 $x107)))
 (let (($x36 (and $x131 $x331)))
 (let (($x367 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x75 (ite $x367 (_ bv1 32) (_ bv0 32))))
 (let (($x112 (= ?x75 (_ bv0 32))))
 (let (($x213 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x231 (ite $x213 (_ bv1 32) (_ bv0 32))))
 (let (($x196 (bvuge ?x231 (_ bv1 32))))
 (let (($x157 (and $x196 $x112)))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x302 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x132 (bvuge ?x302 (_ bv1 32))))
 (let (($x28 (and $x132 $x157)))
 (let (($x371 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x361 (ite $x371 (_ bv1 32) (_ bv0 32))))
 (let (($x297 (= ?x361 (_ bv0 32))))
 (let (($x175 (and $x297 $x28)))
 (let (($x12 (and $x175 $x36)))
 (let ((?x198 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x220 (= ?x198 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x259 (bvuge ?x361 (_ bv1 32))))
 (let (($x174 (=> $x259 $x220)))
 (let (($x245 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x340 (= $x259 $x245)))
 (let (($x353 (= false false)))
 (let (($x282 (=> $x297 $x353)))
 (let (($x42 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x318 (= $x297 $x42)))
 (let (($x212 (and (and (and $x318 $x282) $x340) $x174)))
 (let (($x294 (and $x212 $x12)))
 (let (($x288 (= ?x96 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x105 (=> $x132 $x288)))
 (let (($x350 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x281 (= $x132 $x350)))
 (let (($x200 (= ?x302 (_ bv0 32))))
 (let (($x252 (=> $x200 $x353)))
 (let (($x279 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x260 (= $x200 $x279)))
 (let (($x122 (and (and (and $x260 $x252) $x281) $x105)))
 (let (($x393 (and $x122 $x294)))
 (let ((?x254 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x285 (= ?x254 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x60 (bvuge ?x75 (_ bv1 32))))
 (let (($x223 (=> $x60 $x285)))
 (let (($x261 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x189 (= $x60 $x261)))
 (let (($x365 (and (and (= $x112 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x112 $x353)) $x189)))
 (let (($x273 (and $x365 $x223)))
 (let (($x342 (and $x273 $x393)))
 (let (($x267 (= ?x179 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x162 (=> $x196 $x267)))
 (let (($x280 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x303 (= $x196 $x280)))
 (let (($x275 (= ?x231 (_ bv0 32))))
 (let (($x140 (=> $x275 $x353)))
 (let (($x87 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x370 (= $x275 $x87)))
 (let (($x199 (and (and (and $x370 $x140) $x303) $x162)))
 (let (($x86 (and $x199 $x342)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x90 (and $x356 $x86)))
 (let (($x327 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x23 (and $x327 $x90)))
 (let (($x146 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x47 (and $x146 $x23)))
 (let (($x77 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x326 (and $x77 $x47)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x159 (and $x332 $x326)))
 (let (($x354 (and $x353 $x159)))
 (let (($x251 (= ?x198 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x355 (and $x251 $x354)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x243 (and $x51 $x355)))
 (let (($x351 (and $x353 $x243)))
 (let (($x38 (= ?x96 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x334 (and $x38 $x351)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x115 (and $x65 $x334)))
 (let (($x307 (and $x353 $x115)))
 (let (($x313 (= ?x254 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x390 (and $x313 $x307)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x171 (and $x101 $x390)))
 (let (($x184 (and $x353 $x171)))
 (let (($x117 (= ?x179 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x218 (and $x117 $x184)))
 (let (($x338 (bvugt ?x278 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x387)))
 (let (($x25 (=> (bvule ?x278 (bvsub (bvadd ?x278 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x338)))))))
 (let (($x325 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x324)))
 (let (($x109 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x325)))))))
 (let (($x357 (bvugt ?x161 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x180)))
 (let (($x98 (=> (bvule ?x161 (bvsub (bvadd ?x161 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x357)))))))
 (let (($x166 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x225 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x225)))
 (let (($x392 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x166)))))))
 (let (($x271 (and $x392 $x98)))
 (let (($x385 (and $x271 $x109)))
 (let (($x384 (and $x385 $x25)))
 (let (($x119 (and $x384 $x218)))
 (let (($x120 (=> $x119 $x29)))
 (not $x120))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x179 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x96 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x381 (bvadd ?x96 ?x179)))
 (let ((?x373 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x185 (concat ?x373 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x324 (bvadd ?x214 (_ bv3 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem ?x324) (concat ?x296 ?x185))))
 (let ((?x242 (bvmul (_ bv4294967295 32) ?x211)))
 (let ((?x389 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x125 (concat ?x389 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x278 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x387 (bvadd ?x278 (_ bv3 32))))
 (let ((?x215 (concat (select input.dst.llvm-mem ?x387) (concat ?x13 ?x125))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x235 (concat ?x39 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x161 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x180 (bvadd ?x161 (_ bv3 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem ?x180) (concat ?x375 ?x235))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x61)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x172)))
 (let ((?x364 (bvadd (bvadd (bvadd ?x136 ?x30) ?x215) ?x242)))
 (let (($x80 (= ?x364 ?x381)))
 (let (($x29 (= $x80 true)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x83 (concat ?x147 (concat ?x66 (concat ?x167 ?x108)))))
 (let (($x403 (= ?x83 input.dst.llvm-%m)))
 (let (($x331 (= $x403 true)))
 (let (($x163 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x6 (= (bvand ?x278 (_ bv4294967292 32)) ?x278)))
 (let (($x183 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x278 (bvsub ?x278 (_ bv4 32))) (bvult ?x278 (bvsub ?x278 (_ bv4 32))))))
 (let (($x155 (and true $x183)))
 (let (($x208 (= (bvand ?x161 (_ bv4294967292 32)) ?x161)))
 (let (($x59 (and $x208 $x155)))
 (let (($x304 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x289 (and (and (and true $x304) $x59) $x6)))
 (let (($x363 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x5 (and true $x363)))
 (let (($x320 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x194 (and $x320 $x5)))
 (let (($x14 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x161 (bvsub ?x161 (_ bv12 32))) (bvult ?x161 (bvsub ?x161 (_ bv12 32))))))
 (let (($x366 (and (and (and true $x320) $x14) $x194)))
 (let (($x193 (and (and $x366 $x289) $x163)))
 (let (($x102 (= input.dst.llvm-%m ?x83)))
 (let ((?x397 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x48 (= (_ bv0 32) ?x397)))
 (let ((?x292 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x358 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x292)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x295 (and $x41 $x358)))
 (let (($x290 (and $x295 $x48)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (and $x18 $x290)))
 (let (($x203 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x368 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x321 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x368 $x203)))))))
 (let (($x91 (and (and (and $x321 $x241) $x102) $x193)))
 (let (($x156 (forall ((input.ind-%var3569X (_ BitVec 32)) )(let ((?x124 (bvadd (bvmul input.ind-%var3569X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem ?x124))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv2 32))) ?x34))))
 (let ((?x210 (input.spec-%var-m-0.1.1 input.ind-%var3569X)))
 (let (($x67 (input.spec-%var-m-0.0.1 input.ind-%var3569X)))
 (=> $x67 (= ?x210 ?x103))))))))
 ))
 (let (($x106 (forall ((input.ind-%var3568X (_ BitVec 32)) )(let (($x67 (input.spec-%var-m-0.0.1 input.ind-%var3568X)))
 (= $x67 (and (bvule (_ bv0 32) input.ind-%var3568X) (bvult input.ind-%var3568X (_ bv100 32))))))
 ))
 (let (($x394 (and $x106 $x156)))
 (let (($x118 (and $x394 $x91)))
 (let (($x107 (= $x118 true)))
 (let (($x291 (= $x366 true)))
 (let (($x79 (and $x289 $x163)))
 (let (($x9 (= $x79 true)))
 (let (($x97 (and $x9 $x291)))
 (let (($x131 (and $x97 $x107)))
 (let (($x36 (and $x131 $x331)))
 (let (($x367 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x75 (ite $x367 (_ bv1 32) (_ bv0 32))))
 (let (($x112 (= ?x75 (_ bv0 32))))
 (let (($x213 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x231 (ite $x213 (_ bv1 32) (_ bv0 32))))
 (let (($x196 (bvuge ?x231 (_ bv1 32))))
 (let (($x157 (and $x196 $x112)))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x302 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x132 (bvuge ?x302 (_ bv1 32))))
 (let (($x28 (and $x132 $x157)))
 (let (($x371 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x361 (ite $x371 (_ bv1 32) (_ bv0 32))))
 (let (($x297 (= ?x361 (_ bv0 32))))
 (let (($x175 (and $x297 $x28)))
 (let (($x12 (and $x175 $x36)))
 (let ((?x198 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x220 (= ?x198 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x259 (bvuge ?x361 (_ bv1 32))))
 (let (($x174 (=> $x259 $x220)))
 (let (($x245 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x340 (= $x259 $x245)))
 (let (($x353 (= false false)))
 (let (($x282 (=> $x297 $x353)))
 (let (($x42 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x318 (= $x297 $x42)))
 (let (($x212 (and (and (and $x318 $x282) $x340) $x174)))
 (let (($x294 (and $x212 $x12)))
 (let (($x288 (= ?x96 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x105 (=> $x132 $x288)))
 (let (($x350 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x281 (= $x132 $x350)))
 (let (($x200 (= ?x302 (_ bv0 32))))
 (let (($x252 (=> $x200 $x353)))
 (let (($x279 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x260 (= $x200 $x279)))
 (let (($x122 (and (and (and $x260 $x252) $x281) $x105)))
 (let (($x393 (and $x122 $x294)))
 (let ((?x254 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x285 (= ?x254 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x60 (bvuge ?x75 (_ bv1 32))))
 (let (($x223 (=> $x60 $x285)))
 (let (($x261 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x189 (= $x60 $x261)))
 (let (($x365 (and (and (= $x112 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x112 $x353)) $x189)))
 (let (($x273 (and $x365 $x223)))
 (let (($x342 (and $x273 $x393)))
 (let (($x267 (= ?x179 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x162 (=> $x196 $x267)))
 (let (($x280 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x303 (= $x196 $x280)))
 (let (($x275 (= ?x231 (_ bv0 32))))
 (let (($x140 (=> $x275 $x353)))
 (let (($x87 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x370 (= $x275 $x87)))
 (let (($x199 (and (and (and $x370 $x140) $x303) $x162)))
 (let (($x86 (and $x199 $x342)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x90 (and $x356 $x86)))
 (let (($x327 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x23 (and $x327 $x90)))
 (let (($x146 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x47 (and $x146 $x23)))
 (let (($x77 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x326 (and $x77 $x47)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x159 (and $x332 $x326)))
 (let (($x354 (and $x353 $x159)))
 (let (($x251 (= ?x198 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x355 (and $x251 $x354)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x243 (and $x51 $x355)))
 (let (($x351 (and $x353 $x243)))
 (let (($x38 (= ?x96 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x334 (and $x38 $x351)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x115 (and $x65 $x334)))
 (let (($x307 (and $x353 $x115)))
 (let (($x313 (= ?x254 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x390 (and $x313 $x307)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x171 (and $x101 $x390)))
 (let (($x184 (and $x353 $x171)))
 (let (($x117 (= ?x179 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x218 (and $x117 $x184)))
 (let (($x338 (bvugt ?x278 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x387)))
 (let (($x25 (=> (bvule ?x278 (bvsub (bvadd ?x278 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x338)))))))
 (let (($x325 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x324)))
 (let (($x109 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x325)))))))
 (let (($x357 (bvugt ?x161 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x180)))
 (let (($x98 (=> (bvule ?x161 (bvsub (bvadd ?x161 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x357)))))))
 (let (($x166 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x225 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x225)))
 (let (($x392 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x166)))))))
 (let (($x271 (and $x392 $x98)))
 (let (($x385 (and $x271 $x109)))
 (let (($x384 (and $x385 $x25)))
 (let (($x119 (and $x384 $x218)))
 (let (($x120 (=> $x119 $x29)))
 (not $x120))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 53
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x153 (concat ?x158 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x68 (bvadd ?x214 (_ bv3 32))))
 (let ((?x247 (concat (select input.dst.llvm-mem ?x68) (concat ?x46 ?x153))))
 (let ((?x11 (bvmul (_ bv4294967295 32) ?x247)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x396 (concat ?x72 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x398 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x287 (bvadd ?x398 (_ bv3 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem ?x287) (concat ?x236 ?x396))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x364 (concat ?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x309 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x377 (bvadd ?x309 (_ bv3 32))))
 (let ((?x53 (concat (select input.dst.llvm-mem ?x377) (concat ?x80 ?x364))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x10)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x373)))
 (let ((?x173 (bvadd (bvadd (bvadd ?x185 ?x53) ?x274) ?x11)))
 (let ((?x198 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x130 (= ?x198 ?x173)))
 (let (($x182 (= $x130 true)))
 (let ((?x23 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x355 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x334 (concat ?x355 (concat ?x326 ?x23)))))
 (let (($x329 (= ?x115 input.dst.llvm-%m)))
 (let (($x386 (= $x329 true)))
 (let (($x192 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x79 (= (bvand ?x398 (_ bv4294967292 32)) ?x398)))
 (let (($x6 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x398 (bvsub ?x398 (_ bv4 32))) (bvult ?x398 (bvsub ?x398 (_ bv4 32))))))
 (let (($x289 (and true $x6)))
 (let (($x183 (= (bvand ?x309 (_ bv4294967292 32)) ?x309)))
 (let (($x238 (and $x183 $x289)))
 (let (($x50 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x320 (and (and (and true $x50) $x238) $x79)))
 (let (($x291 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x97 (and true $x291)))
 (let (($x14 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x181 (and $x14 $x97)))
 (let (($x133 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x309 (bvsub ?x309 (_ bv12 32))) (bvult ?x309 (bvsub ?x309 (_ bv12 32))))))
 (let (($x20 (and (and (and true $x14) $x133) $x181)))
 (let (($x171 (and (and $x20 $x320) $x192)))
 (let (($x307 (= input.dst.llvm-%m ?x115)))
 (let ((?x294 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x393 (= (_ bv0 32) ?x294)))
 (let ((?x331 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x331)))
 (let (($x403 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (and $x403 $x36)))
 (let (($x342 (and $x12 $x393)))
 (let (($x108 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x108 $x342)))
 (let (($x311 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x311)))))))
 (let (($x119 (and (and (and $x131 $x86) $x307) $x171)))
 (let (($x253 (forall ((input.ind-%var3613X (_ BitVec 32)) )(let ((?x17 (bvadd (bvmul input.ind-%var3613X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x358))))
 (let ((?x254 (input.spec-%var-m-0.1.1 input.ind-%var3613X)))
 (let (($x353 (input.spec-%var-m-0.0.1 input.ind-%var3613X)))
 (=> $x353 (= ?x254 ?x116))))))))
 ))
 (let (($x369 (forall ((input.ind-%var3612X (_ BitVec 32)) )(let (($x353 (input.spec-%var-m-0.0.1 input.ind-%var3612X)))
 (= $x353 (and (bvule (_ bv0 32) input.ind-%var3612X) (bvult input.ind-%var3612X (_ bv100 32))))))
 ))
 (let (($x66 (and $x369 $x253)))
 (let (($x359 (and $x66 $x119)))
 (let (($x207 (= $x359 true)))
 (let (($x249 (= $x20 true)))
 (let (($x391 (and $x320 $x192)))
 (let (($x383 (= $x391 true)))
 (let (($x33 (and $x383 $x249)))
 (let (($x388 (and $x33 $x207)))
 (let (($x262 (and $x388 $x386)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x323 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x60 (= ?x323 (_ bv0 32))))
 (let (($x370 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x44 (ite $x370 (_ bv1 32) (_ bv0 32))))
 (let (($x196 (= ?x44 (_ bv0 32))))
 (let (($x78 (and $x196 $x60)))
 (let (($x252 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x256 (ite $x252 (_ bv1 32) (_ bv0 32))))
 (let (($x288 (bvuge ?x256 (_ bv1 32))))
 (let (($x304 (and $x288 $x78)))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x104 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x259 (= ?x104 (_ bv0 32))))
 (let (($x202 (and $x259 $x304)))
 (let (($x61 (and $x202 $x262)))
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x28 (= ?x269 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x220 (bvuge ?x104 (_ bv1 32))))
 (let (($x175 (=> $x220 $x28)))
 (let (($x174 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x212 (= $x220 $x174)))
 (let (($x338 (= false false)))
 (let (($x89 (=> $x259 $x338)))
 (let (($x340 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x49 (= $x259 $x340)))
 (let (($x160 (and (and (and $x49 $x89) $x212) $x175)))
 (let (($x172 (and $x160 $x61)))
 (let (($x361 (= ?x198 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x297 (=> $x288 $x361)))
 (let (($x105 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x122 (= $x288 $x105)))
 (let (($x132 (= ?x256 (_ bv0 32))))
 (let (($x362 (=> $x132 $x338)))
 (let (($x281 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x129 (= $x132 $x281)))
 (let (($x318 (and (and (and $x129 $x362) $x122) $x297)))
 (let (($x136 (and $x318 $x172)))
 (let ((?x96 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x302 (= ?x96 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x285 (bvuge ?x323 (_ bv1 32))))
 (let (($x200 (=> $x285 $x302)))
 (let (($x223 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x273 (= $x285 $x223)))
 (let (($x279 (and (and (= $x60 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x60 $x338)) $x273)))
 (let (($x260 (and $x279 $x200)))
 (let (($x82 (and $x260 $x136)))
 (let ((?x384 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x75 (= ?x384 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x267 (bvuge ?x44 (_ bv1 32))))
 (let (($x112 (=> $x267 $x75)))
 (let (($x162 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x199 (= $x267 $x162)))
 (let (($x31 (=> $x196 $x338)))
 (let (($x303 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x141 (= $x196 $x303)))
 (let (($x170 (and (and (and $x141 $x31) $x199) $x112)))
 (let (($x399 (and $x170 $x82)))
 (let (($x87 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x375 (and $x87 $x399)))
 (let (($x275 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x360 (and $x275 $x375)))
 (let (($x213 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x39 (and $x213 $x360)))
 (let (($x395 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x315 (and $x395 $x39)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x235 (and $x209 $x315)))
 (let (($x45 (and $x338 $x235)))
 (let (($x255 (= ?x269 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x30 (and $x255 $x45)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x69 (and $x332 $x30)))
 (let (($x58 (and $x338 $x69)))
 (let (($x251 (= ?x198 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x74 (and $x251 $x58)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x13 (and $x51 $x74)))
 (let (($x52 (and $x338 $x13)))
 (let (($x38 (= ?x96 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x389 (and $x38 $x52)))
 (let (($x330 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x134 (and $x330 $x389)))
 (let (($x125 (and $x338 $x134)))
 (let (($x387 (= ?x384 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x100 (and $x387 $x125)))
 (let (($x239 (bvugt ?x398 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x287)))
 (let (($x305 (=> (bvule ?x398 (bvsub (bvadd ?x398 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x239)))))))
 (let (($x8 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x221 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x8)))))))
 (let (($x145 (bvugt ?x309 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x377)))
 (let (($x339 (=> (bvule ?x309 (bvsub (bvadd ?x309 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x166 $x145)))))))
 (let (($x392 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x268 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x268)))
 (let (($x357 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x392)))))))
 (let (($x374 (and $x357 $x339)))
 (let (($x57 (and $x374 $x221)))
 (let (($x109 (and $x57 $x305)))
 (let (($x215 (and $x109 $x100)))
 (let (($x37 (=> $x215 $x182)))
 (not $x37)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x153 (concat ?x158 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x68 (bvadd ?x214 (_ bv3 32))))
 (let ((?x247 (concat (select input.dst.llvm-mem ?x68) (concat ?x46 ?x153))))
 (let ((?x11 (bvmul (_ bv4294967295 32) ?x247)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x396 (concat ?x72 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x398 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x287 (bvadd ?x398 (_ bv3 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem ?x287) (concat ?x236 ?x396))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x364 (concat ?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x309 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x377 (bvadd ?x309 (_ bv3 32))))
 (let ((?x53 (concat (select input.dst.llvm-mem ?x377) (concat ?x80 ?x364))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x10)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x373)))
 (let ((?x173 (bvadd (bvadd (bvadd ?x185 ?x53) ?x274) ?x11)))
 (let ((?x198 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x130 (= ?x198 ?x173)))
 (let (($x182 (= $x130 true)))
 (let ((?x23 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x355 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x334 (concat ?x355 (concat ?x326 ?x23)))))
 (let (($x329 (= ?x115 input.dst.llvm-%m)))
 (let (($x386 (= $x329 true)))
 (let (($x192 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x79 (= (bvand ?x398 (_ bv4294967292 32)) ?x398)))
 (let (($x6 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x398 (bvsub ?x398 (_ bv4 32))) (bvult ?x398 (bvsub ?x398 (_ bv4 32))))))
 (let (($x289 (and true $x6)))
 (let (($x183 (= (bvand ?x309 (_ bv4294967292 32)) ?x309)))
 (let (($x238 (and $x183 $x289)))
 (let (($x50 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x320 (and (and (and true $x50) $x238) $x79)))
 (let (($x291 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x97 (and true $x291)))
 (let (($x14 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x181 (and $x14 $x97)))
 (let (($x133 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x309 (bvsub ?x309 (_ bv12 32))) (bvult ?x309 (bvsub ?x309 (_ bv12 32))))))
 (let (($x20 (and (and (and true $x14) $x133) $x181)))
 (let (($x171 (and (and $x20 $x320) $x192)))
 (let (($x307 (= input.dst.llvm-%m ?x115)))
 (let ((?x294 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x393 (= (_ bv0 32) ?x294)))
 (let ((?x331 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x331)))
 (let (($x403 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (and $x403 $x36)))
 (let (($x342 (and $x12 $x393)))
 (let (($x108 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x108 $x342)))
 (let (($x311 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x311)))))))
 (let (($x119 (and (and (and $x131 $x86) $x307) $x171)))
 (let (($x253 (forall ((input.ind-%var3613X (_ BitVec 32)) )(let ((?x17 (bvadd (bvmul input.ind-%var3613X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x358))))
 (let ((?x254 (input.spec-%var-m-0.1.1 input.ind-%var3613X)))
 (let (($x353 (input.spec-%var-m-0.0.1 input.ind-%var3613X)))
 (=> $x353 (= ?x254 ?x116))))))))
 ))
 (let (($x369 (forall ((input.ind-%var3612X (_ BitVec 32)) )(let (($x353 (input.spec-%var-m-0.0.1 input.ind-%var3612X)))
 (= $x353 (and (bvule (_ bv0 32) input.ind-%var3612X) (bvult input.ind-%var3612X (_ bv100 32))))))
 ))
 (let (($x66 (and $x369 $x253)))
 (let (($x359 (and $x66 $x119)))
 (let (($x207 (= $x359 true)))
 (let (($x249 (= $x20 true)))
 (let (($x391 (and $x320 $x192)))
 (let (($x383 (= $x391 true)))
 (let (($x33 (and $x383 $x249)))
 (let (($x388 (and $x33 $x207)))
 (let (($x262 (and $x388 $x386)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x323 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x60 (= ?x323 (_ bv0 32))))
 (let (($x370 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x44 (ite $x370 (_ bv1 32) (_ bv0 32))))
 (let (($x196 (= ?x44 (_ bv0 32))))
 (let (($x78 (and $x196 $x60)))
 (let (($x252 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x256 (ite $x252 (_ bv1 32) (_ bv0 32))))
 (let (($x288 (bvuge ?x256 (_ bv1 32))))
 (let (($x304 (and $x288 $x78)))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x104 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x259 (= ?x104 (_ bv0 32))))
 (let (($x202 (and $x259 $x304)))
 (let (($x61 (and $x202 $x262)))
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x28 (= ?x269 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x220 (bvuge ?x104 (_ bv1 32))))
 (let (($x175 (=> $x220 $x28)))
 (let (($x174 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x212 (= $x220 $x174)))
 (let (($x338 (= false false)))
 (let (($x89 (=> $x259 $x338)))
 (let (($x340 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x49 (= $x259 $x340)))
 (let (($x160 (and (and (and $x49 $x89) $x212) $x175)))
 (let (($x172 (and $x160 $x61)))
 (let (($x361 (= ?x198 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x297 (=> $x288 $x361)))
 (let (($x105 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x122 (= $x288 $x105)))
 (let (($x132 (= ?x256 (_ bv0 32))))
 (let (($x362 (=> $x132 $x338)))
 (let (($x281 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x129 (= $x132 $x281)))
 (let (($x318 (and (and (and $x129 $x362) $x122) $x297)))
 (let (($x136 (and $x318 $x172)))
 (let ((?x96 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x302 (= ?x96 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x285 (bvuge ?x323 (_ bv1 32))))
 (let (($x200 (=> $x285 $x302)))
 (let (($x223 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x273 (= $x285 $x223)))
 (let (($x279 (and (and (= $x60 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x60 $x338)) $x273)))
 (let (($x260 (and $x279 $x200)))
 (let (($x82 (and $x260 $x136)))
 (let ((?x384 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x75 (= ?x384 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x267 (bvuge ?x44 (_ bv1 32))))
 (let (($x112 (=> $x267 $x75)))
 (let (($x162 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x199 (= $x267 $x162)))
 (let (($x31 (=> $x196 $x338)))
 (let (($x303 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x141 (= $x196 $x303)))
 (let (($x170 (and (and (and $x141 $x31) $x199) $x112)))
 (let (($x399 (and $x170 $x82)))
 (let (($x87 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x375 (and $x87 $x399)))
 (let (($x275 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x360 (and $x275 $x375)))
 (let (($x213 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x39 (and $x213 $x360)))
 (let (($x395 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x315 (and $x395 $x39)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x235 (and $x209 $x315)))
 (let (($x45 (and $x338 $x235)))
 (let (($x255 (= ?x269 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x30 (and $x255 $x45)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x69 (and $x332 $x30)))
 (let (($x58 (and $x338 $x69)))
 (let (($x251 (= ?x198 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x74 (and $x251 $x58)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x13 (and $x51 $x74)))
 (let (($x52 (and $x338 $x13)))
 (let (($x38 (= ?x96 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x389 (and $x38 $x52)))
 (let (($x330 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x134 (and $x330 $x389)))
 (let (($x125 (and $x338 $x134)))
 (let (($x387 (= ?x384 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x100 (and $x387 $x125)))
 (let (($x239 (bvugt ?x398 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x287)))
 (let (($x305 (=> (bvule ?x398 (bvsub (bvadd ?x398 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x239)))))))
 (let (($x8 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x221 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x8)))))))
 (let (($x145 (bvugt ?x309 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x377)))
 (let (($x339 (=> (bvule ?x309 (bvsub (bvadd ?x309 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x166 $x145)))))))
 (let (($x392 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x268 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x268)))
 (let (($x357 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x392)))))))
 (let (($x374 (and $x357 $x339)))
 (let (($x57 (and $x374 $x221)))
 (let (($x109 (and $x57 $x305)))
 (let (($x215 (and $x109 $x100)))
 (let (($x37 (=> $x215 $x182)))
 (not $x37)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 219 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 54
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x198 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x216 (bvmul (_ bv4294967295 32) ?x198)))
 (let ((?x109 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x34 (bvadd ?x109 ?x216)))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x400 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x206 (bvadd ?x214 (_ bv3 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem ?x206) (concat ?x283 ?x113))))
 (let ((?x270 (bvmul (_ bv4294967295 32) ?x368)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x293 (concat ?x140 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x325 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x139 (bvadd ?x325 (_ bv3 32))))
 (let ((?x148 (concat (select input.dst.llvm-mem ?x139) (concat ?x22 ?x293))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x173 (concat ?x11 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x237 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x222 (bvadd ?x237 (_ bv3 32))))
 (let ((?x319 (concat (select input.dst.llvm-mem ?x222) (concat ?x182 ?x173))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x149)))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x158)))
 (let ((?x263 (bvadd (bvadd (bvadd ?x153 ?x319) ?x148) ?x270)))
 (let (($x114 (= ?x263 ?x34)))
 (let (($x335 (= $x114 true)))
 (let ((?x360 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x30 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x13 (concat ?x74 (concat ?x30 (concat ?x315 ?x360)))))
 (let (($x349 (= ?x13 input.dst.llvm-%m)))
 (let (($x94 (= $x349 true)))
 (let (($x7 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x391 (= (bvand ?x325 (_ bv4294967292 32)) ?x325)))
 (let (($x79 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x325 (bvsub ?x325 (_ bv4 32))) (bvult ?x325 (bvsub ?x325 (_ bv4 32))))))
 (let (($x320 (and true $x79)))
 (let (($x6 (= (bvand ?x237 (_ bv4294967292 32)) ?x237)))
 (let (($x401 (and $x6 $x320)))
 (let (($x155 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x14 (and (and (and true $x155) $x401) $x391)))
 (let (($x249 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x33 (and true $x249)))
 (let (($x133 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x378 (and $x133 $x33)))
 (let (($x366 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x237 (bvsub ?x237 (_ bv12 32))) (bvult ?x237 (bvsub ?x237 (_ bv12 32))))))
 (let (($x379 (and (and (and true $x133) $x366) $x378)))
 (let (($x134 (and (and $x379 $x14) $x7)))
 (let (($x52 (= input.dst.llvm-%m ?x13)))
 (let ((?x172 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x136 (= (_ bv0 32) ?x172)))
 (let ((?x386 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x262 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x386)))
 (let (($x329 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (and $x329 $x262)))
 (let (($x82 (and $x61 $x136)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x399 (and $x23 $x82)))
 (let (($x218 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x388 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x307 $x218)))))))
 (let (($x215 (and (and (and $x388 $x399) $x52) $x134)))
 (let (($x354 (forall ((input.ind-%var3657X (_ BitVec 32)) )(let ((?x167 (bvadd (bvmul input.ind-%var3657X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x36))))
 (let ((?x96 (input.spec-%var-m-0.1.1 input.ind-%var3657X)))
 (let (($x338 (input.spec-%var-m-0.0.1 input.ind-%var3657X)))
 (=> $x338 (= ?x96 ?x184))))))))
 ))
 (let (($x292 (forall ((input.ind-%var3656X (_ BitVec 32)) )(let (($x338 (input.spec-%var-m-0.0.1 input.ind-%var3656X)))
 (= $x338 (and (bvule (_ bv0 32) input.ind-%var3656X) (bvult input.ind-%var3656X (_ bv100 32))))))
 ))
 (let (($x355 (and $x292 $x354)))
 (let (($x128 (and $x355 $x215)))
 (let (($x296 (= $x128 true)))
 (let (($x343 (= $x379 true)))
 (let (($x191 (and $x14 $x7)))
 (let (($x233 (= $x191 true)))
 (let (($x15 (and $x233 $x343)))
 (let (($x300 (and $x15 $x296)))
 (let (($x188 (and $x300 $x94)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x265 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x302 (bvuge ?x265 (_ bv1 32))))
 (let (($x141 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x299 (ite $x141 (_ bv1 32) (_ bv0 32))))
 (let (($x75 (bvuge ?x299 (_ bv1 32))))
 (let (($x54 (and $x75 $x302)))
 (let (($x362 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x234 (ite $x362 (_ bv1 32) (_ bv0 32))))
 (let (($x288 (= ?x234 (_ bv0 32))))
 (let (($x50 (and $x288 $x54)))
 (let (($x89 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x62 (ite $x89 (_ bv1 32) (_ bv0 32))))
 (let (($x220 (= ?x62 (_ bv0 32))))
 (let (($x9 (and $x220 $x50)))
 (let (($x10 (and $x9 $x188)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x304 (= ?x327 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x28 (bvuge ?x62 (_ bv1 32))))
 (let (($x202 (=> $x28 $x304)))
 (let (($x175 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x160 (= $x28 $x175)))
 (let (($x239 (= false false)))
 (let (($x157 (=> $x220 $x239)))
 (let (($x212 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x347 (= $x220 $x212)))
 (let (($x208 (and (and (and $x347 $x157) $x160) $x202)))
 (let (($x373 (and $x208 $x10)))
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x104 (= ?x269 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x361 (bvuge ?x234 (_ bv1 32))))
 (let (($x259 (=> $x361 $x104)))
 (let (($x297 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x318 (= $x361 $x297)))
 (let (($x340 (and (and (= $x288 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x288 $x239)) $x318)))
 (let (($x49 (and $x340 $x259)))
 (let (($x185 (and $x49 $x373)))
 (let (($x256 (= ?x198 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x132 (=> $x302 $x256)))
 (let (($x200 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x260 (= $x302 $x200)))
 (let (($x285 (= ?x265 (_ bv0 32))))
 (let (($x372 (=> $x285 $x239)))
 (let (($x273 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x279 (= $x285 $x273)))
 (let (($x129 (and (and (and $x279 $x372) $x260) $x132)))
 (let (($x120 (and $x129 $x185)))
 (let (($x323 (= ?x109 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x60 (=> $x75 $x323)))
 (let (($x112 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x170 (= $x75 $x112)))
 (let (($x267 (= ?x299 (_ bv0 32))))
 (let (($x367 (=> $x267 $x239)))
 (let (($x199 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x127 (= $x267 $x199)))
 (let (($x365 (and (and (and $x127 $x367) $x170) $x60)))
 (let (($x381 (and $x365 $x120)))
 (let (($x303 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x80 (and $x303 $x381)))
 (let (($x196 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x211 (and $x196 $x80)))
 (let (($x370 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x242 (and $x370 $x211)))
 (let (($x150 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x246 (and $x150 $x242)))
 (let (($x231 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x364 (and $x231 $x246)))
 (let (($x29 (and $x239 $x364)))
 (let (($x356 (= ?x327 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x53 (and $x356 $x29)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x308 (and $x209 $x53)))
 (let (($x92 (and $x239 $x308)))
 (let (($x255 (= ?x269 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x84 (and $x255 $x92)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x236 (and $x332 $x84)))
 (let (($x126 (and $x239 $x236)))
 (let (($x251 (= ?x198 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x72 (and $x251 $x126)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x348 (and $x248 $x72)))
 (let (($x396 (and $x239 $x348)))
 (let (($x287 (= ?x109 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x244 (and $x287 $x396)))
 (let (($x310 (bvugt ?x325 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x139)))
 (let (($x111 (=> (bvule ?x325 (bvsub (bvadd ?x325 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x25 $x310)))))))
 (let (($x205 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x225 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x324 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x225 $x205)))))))
 (let (($x123 (bvugt ?x237 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x271 (=> (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x123)))))))
 (let (($x357 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x336 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x180 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x336)))
 (let (($x145 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x180 $x357)))))))
 (let (($x286 (and $x145 $x271)))
 (let (($x93 (and $x286 $x324)))
 (let (($x221 (and $x93 $x111)))
 (let (($x274 (and $x221 $x244)))
 (let (($x24 (=> $x274 $x335)))
 (not $x24)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x198 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x216 (bvmul (_ bv4294967295 32) ?x198)))
 (let ((?x109 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x34 (bvadd ?x109 ?x216)))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x400 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x206 (bvadd ?x214 (_ bv3 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem ?x206) (concat ?x283 ?x113))))
 (let ((?x270 (bvmul (_ bv4294967295 32) ?x368)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x293 (concat ?x140 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x325 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x139 (bvadd ?x325 (_ bv3 32))))
 (let ((?x148 (concat (select input.dst.llvm-mem ?x139) (concat ?x22 ?x293))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x173 (concat ?x11 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x237 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x222 (bvadd ?x237 (_ bv3 32))))
 (let ((?x319 (concat (select input.dst.llvm-mem ?x222) (concat ?x182 ?x173))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x149)))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x158)))
 (let ((?x263 (bvadd (bvadd (bvadd ?x153 ?x319) ?x148) ?x270)))
 (let (($x114 (= ?x263 ?x34)))
 (let (($x335 (= $x114 true)))
 (let ((?x360 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x30 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x13 (concat ?x74 (concat ?x30 (concat ?x315 ?x360)))))
 (let (($x349 (= ?x13 input.dst.llvm-%m)))
 (let (($x94 (= $x349 true)))
 (let (($x7 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x391 (= (bvand ?x325 (_ bv4294967292 32)) ?x325)))
 (let (($x79 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x325 (bvsub ?x325 (_ bv4 32))) (bvult ?x325 (bvsub ?x325 (_ bv4 32))))))
 (let (($x320 (and true $x79)))
 (let (($x6 (= (bvand ?x237 (_ bv4294967292 32)) ?x237)))
 (let (($x401 (and $x6 $x320)))
 (let (($x155 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x14 (and (and (and true $x155) $x401) $x391)))
 (let (($x249 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x33 (and true $x249)))
 (let (($x133 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x378 (and $x133 $x33)))
 (let (($x366 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x237 (bvsub ?x237 (_ bv12 32))) (bvult ?x237 (bvsub ?x237 (_ bv12 32))))))
 (let (($x379 (and (and (and true $x133) $x366) $x378)))
 (let (($x134 (and (and $x379 $x14) $x7)))
 (let (($x52 (= input.dst.llvm-%m ?x13)))
 (let ((?x172 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x136 (= (_ bv0 32) ?x172)))
 (let ((?x386 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x262 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x386)))
 (let (($x329 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (and $x329 $x262)))
 (let (($x82 (and $x61 $x136)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x399 (and $x23 $x82)))
 (let (($x218 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x388 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x307 $x218)))))))
 (let (($x215 (and (and (and $x388 $x399) $x52) $x134)))
 (let (($x354 (forall ((input.ind-%var3657X (_ BitVec 32)) )(let ((?x167 (bvadd (bvmul input.ind-%var3657X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x36))))
 (let ((?x96 (input.spec-%var-m-0.1.1 input.ind-%var3657X)))
 (let (($x338 (input.spec-%var-m-0.0.1 input.ind-%var3657X)))
 (=> $x338 (= ?x96 ?x184))))))))
 ))
 (let (($x292 (forall ((input.ind-%var3656X (_ BitVec 32)) )(let (($x338 (input.spec-%var-m-0.0.1 input.ind-%var3656X)))
 (= $x338 (and (bvule (_ bv0 32) input.ind-%var3656X) (bvult input.ind-%var3656X (_ bv100 32))))))
 ))
 (let (($x355 (and $x292 $x354)))
 (let (($x128 (and $x355 $x215)))
 (let (($x296 (= $x128 true)))
 (let (($x343 (= $x379 true)))
 (let (($x191 (and $x14 $x7)))
 (let (($x233 (= $x191 true)))
 (let (($x15 (and $x233 $x343)))
 (let (($x300 (and $x15 $x296)))
 (let (($x188 (and $x300 $x94)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x265 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x302 (bvuge ?x265 (_ bv1 32))))
 (let (($x141 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x299 (ite $x141 (_ bv1 32) (_ bv0 32))))
 (let (($x75 (bvuge ?x299 (_ bv1 32))))
 (let (($x54 (and $x75 $x302)))
 (let (($x362 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x234 (ite $x362 (_ bv1 32) (_ bv0 32))))
 (let (($x288 (= ?x234 (_ bv0 32))))
 (let (($x50 (and $x288 $x54)))
 (let (($x89 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x62 (ite $x89 (_ bv1 32) (_ bv0 32))))
 (let (($x220 (= ?x62 (_ bv0 32))))
 (let (($x9 (and $x220 $x50)))
 (let (($x10 (and $x9 $x188)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x304 (= ?x327 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x28 (bvuge ?x62 (_ bv1 32))))
 (let (($x202 (=> $x28 $x304)))
 (let (($x175 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x160 (= $x28 $x175)))
 (let (($x239 (= false false)))
 (let (($x157 (=> $x220 $x239)))
 (let (($x212 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x347 (= $x220 $x212)))
 (let (($x208 (and (and (and $x347 $x157) $x160) $x202)))
 (let (($x373 (and $x208 $x10)))
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x104 (= ?x269 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x361 (bvuge ?x234 (_ bv1 32))))
 (let (($x259 (=> $x361 $x104)))
 (let (($x297 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x318 (= $x361 $x297)))
 (let (($x340 (and (and (= $x288 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x288 $x239)) $x318)))
 (let (($x49 (and $x340 $x259)))
 (let (($x185 (and $x49 $x373)))
 (let (($x256 (= ?x198 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x132 (=> $x302 $x256)))
 (let (($x200 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x260 (= $x302 $x200)))
 (let (($x285 (= ?x265 (_ bv0 32))))
 (let (($x372 (=> $x285 $x239)))
 (let (($x273 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x279 (= $x285 $x273)))
 (let (($x129 (and (and (and $x279 $x372) $x260) $x132)))
 (let (($x120 (and $x129 $x185)))
 (let (($x323 (= ?x109 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x60 (=> $x75 $x323)))
 (let (($x112 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x170 (= $x75 $x112)))
 (let (($x267 (= ?x299 (_ bv0 32))))
 (let (($x367 (=> $x267 $x239)))
 (let (($x199 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x127 (= $x267 $x199)))
 (let (($x365 (and (and (and $x127 $x367) $x170) $x60)))
 (let (($x381 (and $x365 $x120)))
 (let (($x303 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x80 (and $x303 $x381)))
 (let (($x196 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x211 (and $x196 $x80)))
 (let (($x370 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x242 (and $x370 $x211)))
 (let (($x150 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x246 (and $x150 $x242)))
 (let (($x231 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x364 (and $x231 $x246)))
 (let (($x29 (and $x239 $x364)))
 (let (($x356 (= ?x327 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x53 (and $x356 $x29)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x308 (and $x209 $x53)))
 (let (($x92 (and $x239 $x308)))
 (let (($x255 (= ?x269 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x84 (and $x255 $x92)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x236 (and $x332 $x84)))
 (let (($x126 (and $x239 $x236)))
 (let (($x251 (= ?x198 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x72 (and $x251 $x126)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x348 (and $x248 $x72)))
 (let (($x396 (and $x239 $x348)))
 (let (($x287 (= ?x109 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x244 (and $x287 $x396)))
 (let (($x310 (bvugt ?x325 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x139)))
 (let (($x111 (=> (bvule ?x325 (bvsub (bvadd ?x325 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x25 $x310)))))))
 (let (($x205 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x225 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x324 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x225 $x205)))))))
 (let (($x123 (bvugt ?x237 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x271 (=> (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x123)))))))
 (let (($x357 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x336 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x180 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x336)))
 (let (($x145 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x180 $x357)))))))
 (let (($x286 (and $x145 $x271)))
 (let (($x93 (and $x286 $x324)))
 (let (($x221 (and $x93 $x111)))
 (let (($x274 (and $x221 $x244)))
 (let (($x24 (=> $x274 $x335)))
 (not $x24)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 221 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 55
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x17 (bvmul (_ bv4294967295 32) ?x269)))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x311 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x313 (bvadd ?x214 (_ bv3 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem ?x313) (concat ?x83 ?x240))))
 (let ((?x227 (bvmul (_ bv4294967295 32) ?x253)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x375 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x278 (bvadd ?x8 (_ bv3 32))))
 (let ((?x254 (concat (select input.dst.llvm-mem ?x278) (concat ?x117 ?x375))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x166 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x312 (bvadd ?x166 (_ bv3 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem ?x312) (concat ?x114 ?x216))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x283)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x203)))
 (let ((?x369 (bvadd (bvadd (bvadd ?x156 ?x301) ?x254) ?x227)))
 (let (($x290 (= ?x369 ?x17)))
 (let (($x91 (= $x290 true)))
 (let ((?x211 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x236 (concat ?x84 (concat ?x53 (concat ?x246 ?x211)))))
 (let (($x73 (= ?x236 input.dst.llvm-%m)))
 (let (($x137 (= $x73 true)))
 (let (($x5 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x191 (= (bvand ?x8 (_ bv4294967292 32)) ?x8)))
 (let (($x391 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x8 (bvsub ?x8 (_ bv4 32))) (bvult ?x8 (bvsub ?x8 (_ bv4 32))))))
 (let (($x14 (and true $x391)))
 (let (($x79 (= (bvand ?x166 (_ bv4294967292 32)) ?x166)))
 (let (($x67 (and $x79 $x14)))
 (let (($x289 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x133 (and (and (and true $x289) $x67) $x191)))
 (let (($x343 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x15 (and true $x343)))
 (let (($x366 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x65 (and $x366 $x15)))
 (let (($x20 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x166 (bvsub ?x166 (_ bv12 32))) (bvult ?x166 (bvsub ?x166 (_ bv12 32))))))
 (let (($x103 (and (and (and true $x366) $x20) $x65)))
 (let (($x348 (and (and $x103 $x133) $x5)))
 (let (($x126 (= input.dst.llvm-%m ?x236)))
 (let ((?x373 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x185 (= (_ bv0 32) ?x373)))
 (let ((?x94 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x94)))
 (let (($x349 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x349 $x188)))
 (let (($x120 (and $x10 $x185)))
 (let (($x360 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x381 (and $x360 $x120)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x300 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x100)))))))
 (let (($x274 (and (and (and $x300 $x381) $x126) $x348)))
 (let (($x45 (forall ((input.ind-%var3701X (_ BitVec 32)) )(let ((?x326 (bvadd (bvmul input.ind-%var3701X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv1 32))) (select input.dst.llvm-mem ?x326))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv2 32))) ?x262))))
 (let ((?x198 (input.spec-%var-m-0.1.1 input.ind-%var3701X)))
 (let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var3701X)))
 (=> $x239 (= ?x198 ?x125))))))))
 ))
 (let (($x331 (forall ((input.ind-%var3700X (_ BitVec 32)) )(let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var3700X)))
 (= $x239 (and (bvule (_ bv0 32) input.ind-%var3700X) (bvult input.ind-%var3700X (_ bv100 32))))))
 ))
 (let (($x30 (and $x331 $x45)))
 (let (($x228 (and $x30 $x274)))
 (let (($x46 (= $x228 true)))
 (let (($x241 (= $x103 true)))
 (let (($x346 (and $x133 $x5)))
 (let (($x363 (= $x346 true)))
 (let (($x397 (and $x363 $x241)))
 (let (($x43 (and $x397 $x46)))
 (let (($x26 (and $x43 $x137)))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x350 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x256 (bvuge ?x350 (_ bv1 32))))
 (let (($x127 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x261 (ite $x127 (_ bv1 32) (_ bv0 32))))
 (let (($x75 (= ?x261 (_ bv0 32))))
 (let (($x59 (and $x75 $x256)))
 (let (($x371 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x245 (ite $x371 (_ bv1 32) (_ bv0 32))))
 (let (($x361 (= ?x245 (_ bv0 32))))
 (let (($x155 (and $x361 $x59)))
 (let (($x157 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x382 (ite $x157 (_ bv1 32) (_ bv0 32))))
 (let (($x28 (= ?x382 (_ bv0 32))))
 (let (($x383 (and $x28 $x155)))
 (let (($x149 (and $x383 $x26)))
 (let ((?x275 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x50 (= ?x275 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x304 (bvuge ?x382 (_ bv1 32))))
 (let (($x9 (=> $x304 $x50)))
 (let (($x202 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x208 (= $x304 $x202)))
 (let (($x310 (= false false)))
 (let (($x78 (=> $x28 $x310)))
 (let (($x160 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x317 (= $x28 $x160)))
 (let (($x183 (and (and (and $x317 $x78) $x208) $x9)))
 (let (($x158 (and $x183 $x149)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x62 (= ?x327 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x104 (bvuge ?x245 (_ bv1 32))))
 (let (($x220 (=> $x104 $x62)))
 (let (($x259 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x49 (= $x104 $x259)))
 (let (($x212 (and (and (= $x361 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x361 $x310)) $x49)))
 (let (($x347 (and $x212 $x220)))
 (let (($x153 (and $x347 $x158)))
 (let (($x234 (= ?x269 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x288 (=> $x256 $x234)))
 (let (($x132 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x129 (= $x256 $x132)))
 (let (($x302 (= ?x350 (_ bv0 32))))
 (let (($x252 (=> $x302 $x310)))
 (let (($x260 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x281 (= $x302 $x260)))
 (let (($x42 (and (and (and $x281 $x252) $x129) $x288)))
 (let (($x168 (and $x42 $x153)))
 (let ((?x221 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x265 (= ?x221 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x323 (bvuge ?x261 (_ bv1 32))))
 (let (($x285 (=> $x323 $x265)))
 (let (($x60 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x365 (= $x323 $x60)))
 (let (($x380 (=> $x75 $x310)))
 (let (($x170 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x189 (= $x75 $x170)))
 (let (($x279 (and (and (and $x189 $x380) $x365) $x285)))
 (let (($x130 (and $x279 $x168)))
 (let (($x199 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x182 (and $x199 $x130)))
 (let (($x267 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x247 (and $x267 $x182)))
 (let (($x141 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x11 (and $x141 $x247)))
 (let (($x280 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x71 (and $x280 $x11)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x173 (and $x44 $x71)))
 (let (($x37 (and $x310 $x173)))
 (let (($x87 (= ?x275 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x319 (and $x87 $x37)))
 (let (($x231 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x106 (and $x231 $x319)))
 (let (($x250 (and $x310 $x106)))
 (let (($x356 (= ?x327 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x27 (and $x356 $x250)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x22 (and $x209 $x27)))
 (let (($x90 (and $x310 $x22)))
 (let (($x255 (= ?x269 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x140 (and $x255 $x90)))
 (let (($x177 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x55 (and $x177 $x140)))
 (let (($x293 (and $x310 $x55)))
 (let (($x139 (= ?x221 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x210 (and $x139 $x293)))
 (let (($x385 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x305 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x179 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x305 $x385)))))))
 (let (($x226 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x392 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x313)))
 (let (($x68 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x392 $x226)))))))
 (let (($x306 (bvugt ?x166 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x180 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x312)))
 (let (($x374 (=> (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x180 $x306)))))))
 (let (($x145 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x32 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x377 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x32)))
 (let (($x123 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x377 $x145)))))))
 (let (($x229 (and $x123 $x374)))
 (let (($x195 (and $x229 $x68)))
 (let (($x324 (and $x195 $x179)))
 (let (($x148 (and $x324 $x210)))
 (let (($x358 (=> $x148 $x91)))
 (not $x358))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x17 (bvmul (_ bv4294967295 32) ?x269)))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x311 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x313 (bvadd ?x214 (_ bv3 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem ?x313) (concat ?x83 ?x240))))
 (let ((?x227 (bvmul (_ bv4294967295 32) ?x253)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x375 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x278 (bvadd ?x8 (_ bv3 32))))
 (let ((?x254 (concat (select input.dst.llvm-mem ?x278) (concat ?x117 ?x375))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x166 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x312 (bvadd ?x166 (_ bv3 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem ?x312) (concat ?x114 ?x216))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x283)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x203)))
 (let ((?x369 (bvadd (bvadd (bvadd ?x156 ?x301) ?x254) ?x227)))
 (let (($x290 (= ?x369 ?x17)))
 (let (($x91 (= $x290 true)))
 (let ((?x211 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x236 (concat ?x84 (concat ?x53 (concat ?x246 ?x211)))))
 (let (($x73 (= ?x236 input.dst.llvm-%m)))
 (let (($x137 (= $x73 true)))
 (let (($x5 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x191 (= (bvand ?x8 (_ bv4294967292 32)) ?x8)))
 (let (($x391 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x8 (bvsub ?x8 (_ bv4 32))) (bvult ?x8 (bvsub ?x8 (_ bv4 32))))))
 (let (($x14 (and true $x391)))
 (let (($x79 (= (bvand ?x166 (_ bv4294967292 32)) ?x166)))
 (let (($x67 (and $x79 $x14)))
 (let (($x289 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x133 (and (and (and true $x289) $x67) $x191)))
 (let (($x343 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x15 (and true $x343)))
 (let (($x366 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x65 (and $x366 $x15)))
 (let (($x20 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x166 (bvsub ?x166 (_ bv12 32))) (bvult ?x166 (bvsub ?x166 (_ bv12 32))))))
 (let (($x103 (and (and (and true $x366) $x20) $x65)))
 (let (($x348 (and (and $x103 $x133) $x5)))
 (let (($x126 (= input.dst.llvm-%m ?x236)))
 (let ((?x373 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x185 (= (_ bv0 32) ?x373)))
 (let ((?x94 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x94)))
 (let (($x349 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x349 $x188)))
 (let (($x120 (and $x10 $x185)))
 (let (($x360 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x381 (and $x360 $x120)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x300 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x100)))))))
 (let (($x274 (and (and (and $x300 $x381) $x126) $x348)))
 (let (($x45 (forall ((input.ind-%var3701X (_ BitVec 32)) )(let ((?x326 (bvadd (bvmul input.ind-%var3701X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv1 32))) (select input.dst.llvm-mem ?x326))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv2 32))) ?x262))))
 (let ((?x198 (input.spec-%var-m-0.1.1 input.ind-%var3701X)))
 (let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var3701X)))
 (=> $x239 (= ?x198 ?x125))))))))
 ))
 (let (($x331 (forall ((input.ind-%var3700X (_ BitVec 32)) )(let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var3700X)))
 (= $x239 (and (bvule (_ bv0 32) input.ind-%var3700X) (bvult input.ind-%var3700X (_ bv100 32))))))
 ))
 (let (($x30 (and $x331 $x45)))
 (let (($x228 (and $x30 $x274)))
 (let (($x46 (= $x228 true)))
 (let (($x241 (= $x103 true)))
 (let (($x346 (and $x133 $x5)))
 (let (($x363 (= $x346 true)))
 (let (($x397 (and $x363 $x241)))
 (let (($x43 (and $x397 $x46)))
 (let (($x26 (and $x43 $x137)))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x350 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x256 (bvuge ?x350 (_ bv1 32))))
 (let (($x127 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x261 (ite $x127 (_ bv1 32) (_ bv0 32))))
 (let (($x75 (= ?x261 (_ bv0 32))))
 (let (($x59 (and $x75 $x256)))
 (let (($x371 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x245 (ite $x371 (_ bv1 32) (_ bv0 32))))
 (let (($x361 (= ?x245 (_ bv0 32))))
 (let (($x155 (and $x361 $x59)))
 (let (($x157 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x382 (ite $x157 (_ bv1 32) (_ bv0 32))))
 (let (($x28 (= ?x382 (_ bv0 32))))
 (let (($x383 (and $x28 $x155)))
 (let (($x149 (and $x383 $x26)))
 (let ((?x275 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x50 (= ?x275 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x304 (bvuge ?x382 (_ bv1 32))))
 (let (($x9 (=> $x304 $x50)))
 (let (($x202 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x208 (= $x304 $x202)))
 (let (($x310 (= false false)))
 (let (($x78 (=> $x28 $x310)))
 (let (($x160 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x317 (= $x28 $x160)))
 (let (($x183 (and (and (and $x317 $x78) $x208) $x9)))
 (let (($x158 (and $x183 $x149)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x62 (= ?x327 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x104 (bvuge ?x245 (_ bv1 32))))
 (let (($x220 (=> $x104 $x62)))
 (let (($x259 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x49 (= $x104 $x259)))
 (let (($x212 (and (and (= $x361 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x361 $x310)) $x49)))
 (let (($x347 (and $x212 $x220)))
 (let (($x153 (and $x347 $x158)))
 (let (($x234 (= ?x269 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x288 (=> $x256 $x234)))
 (let (($x132 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x129 (= $x256 $x132)))
 (let (($x302 (= ?x350 (_ bv0 32))))
 (let (($x252 (=> $x302 $x310)))
 (let (($x260 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x281 (= $x302 $x260)))
 (let (($x42 (and (and (and $x281 $x252) $x129) $x288)))
 (let (($x168 (and $x42 $x153)))
 (let ((?x221 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x265 (= ?x221 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x323 (bvuge ?x261 (_ bv1 32))))
 (let (($x285 (=> $x323 $x265)))
 (let (($x60 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x365 (= $x323 $x60)))
 (let (($x380 (=> $x75 $x310)))
 (let (($x170 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x189 (= $x75 $x170)))
 (let (($x279 (and (and (and $x189 $x380) $x365) $x285)))
 (let (($x130 (and $x279 $x168)))
 (let (($x199 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x182 (and $x199 $x130)))
 (let (($x267 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x247 (and $x267 $x182)))
 (let (($x141 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x11 (and $x141 $x247)))
 (let (($x280 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x71 (and $x280 $x11)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x173 (and $x44 $x71)))
 (let (($x37 (and $x310 $x173)))
 (let (($x87 (= ?x275 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x319 (and $x87 $x37)))
 (let (($x231 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x106 (and $x231 $x319)))
 (let (($x250 (and $x310 $x106)))
 (let (($x356 (= ?x327 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x27 (and $x356 $x250)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x22 (and $x209 $x27)))
 (let (($x90 (and $x310 $x22)))
 (let (($x255 (= ?x269 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x140 (and $x255 $x90)))
 (let (($x177 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x55 (and $x177 $x140)))
 (let (($x293 (and $x310 $x55)))
 (let (($x139 (= ?x221 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x210 (and $x139 $x293)))
 (let (($x385 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x305 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x179 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x305 $x385)))))))
 (let (($x226 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x392 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x313)))
 (let (($x68 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x392 $x226)))))))
 (let (($x306 (bvugt ?x166 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x180 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x312)))
 (let (($x374 (=> (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x180 $x306)))))))
 (let (($x145 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x32 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x377 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x32)))
 (let (($x123 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x377 $x145)))))))
 (let (($x229 (and $x123 $x374)))
 (let (($x195 (and $x229 $x68)))
 (let (($x324 (and $x195 $x179)))
 (let (($x148 (and $x324 $x210)))
 (let (($x358 (=> $x148 $x91)))
 (not $x358))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 56
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x390 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x390 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x355 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x309 (bvadd ?x214 (_ bv3 32))))
 (let ((?x243 (concat (select input.dst.llvm-mem ?x309) (concat ?x355 ?x207))))
 (let ((?x307 (bvmul (_ bv4294967295 32) ?x243)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x367 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x205 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x398 (bvadd ?x205 (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x398) (concat ?x393 ?x367))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x369 (concat ?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x330 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x146 (bvadd ?x330 (_ bv3 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem ?x146) (concat ?x290 ?x369))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x107)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x311)))
 (let ((?x167 (bvadd (bvadd (bvadd ?x240 ?x118) ?x131) ?x307)))
 (let ((?x324 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x342 (= ?x324 ?x167)))
 (let (($x119 (= $x342 true)))
 (let ((?x247 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x22 (concat ?x27 (concat ?x319 (concat ?x71 ?x247)))))
 (let (($x322 (= ?x22 input.dst.llvm-%m)))
 (let (($x394 (= $x322 true)))
 (let (($x97 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x346 (= (bvand ?x205 (_ bv4294967292 32)) ?x205)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x205 (bvsub ?x205 (_ bv4 32))) (bvult ?x205 (bvsub ?x205 (_ bv4 32))))))
 (let (($x133 (and true $x191)))
 (let (($x391 (= (bvand ?x330 (_ bv4294967292 32)) ?x330)))
 (let (($x353 (and $x391 $x133)))
 (let (($x320 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x366 (and (and (and true $x320) $x353) $x346)))
 (let (($x241 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x397 (and true $x241)))
 (let (($x20 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x51 (and $x20 $x397)))
 (let (($x379 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x330 (bvsub ?x330 (_ bv12 32))) (bvult ?x330 (bvsub ?x330 (_ bv12 32))))))
 (let (($x116 (and (and (and true $x20) $x379) $x51)))
 (let (($x55 (and (and $x116 $x366) $x97)))
 (let (($x90 (= input.dst.llvm-%m ?x22)))
 (let ((?x158 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x153 (= (_ bv0 32) ?x158)))
 (let ((?x137 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x137)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (and $x73 $x26)))
 (let (($x168 (and $x149 $x153)))
 (let (($x211 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x211 $x168)))
 (let (($x244 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x244)))))))
 (let (($x148 (and (and (and $x43 $x130) $x90) $x55)))
 (let (($x29 (forall ((input.ind-%var3745X (_ BitVec 32)) )(let ((?x315 (bvadd (bvmul input.ind-%var3745X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv1 32))) (select input.dst.llvm-mem ?x315))))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv2 32))) ?x188))))
 (let ((?x269 (input.spec-%var-m-0.1.1 input.ind-%var3745X)))
 (let (($x310 (input.spec-%var-m-0.0.1 input.ind-%var3745X)))
 (=> $x310 (= ?x269 ?x396))))))))
 ))
 (let (($x386 (forall ((input.ind-%var3744X (_ BitVec 32)) )(let (($x310 (input.spec-%var-m-0.0.1 input.ind-%var3744X)))
 (= $x310 (and (bvule (_ bv0 32) input.ind-%var3744X) (bvult input.ind-%var3744X (_ bv100 32))))))
 ))
 (let (($x53 (and $x386 $x29)))
 (let (($x113 (and $x53 $x148)))
 (let (($x328 (= $x113 true)))
 (let (($x86 (= $x116 true)))
 (let (($x333 (and $x366 $x97)))
 (let (($x291 (= $x333 true)))
 (let (($x294 (and $x291 $x86)))
 (let (($x400 (and $x294 $x328)))
 (let (($x124 (and $x400 $x394)))
 (let (($x252 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x105 (ite $x252 (_ bv1 32) (_ bv0 32))))
 (let (($x256 (= ?x105 (_ bv0 32))))
 (let (($x189 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x223 (ite $x189 (_ bv1 32) (_ bv0 32))))
 (let (($x265 (bvuge ?x223 (_ bv1 32))))
 (let (($x238 (and $x265 $x256)))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x174 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x104 (= ?x174 (_ bv0 32))))
 (let (($x289 (and $x104 $x238)))
 (let (($x78 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x76 (ite $x78 (_ bv1 32) (_ bv0 32))))
 (let (($x304 (= ?x76 (_ bv0 32))))
 (let (($x233 (and $x304 $x289)))
 (let (($x283 (and $x233 $x124)))
 (let ((?x196 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x155 (= ?x196 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x50 (bvuge ?x76 (_ bv1 32))))
 (let (($x383 (=> $x50 $x155)))
 (let (($x9 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x183 (= $x50 $x9)))
 (let (($x385 (= false false)))
 (let (($x54 (=> $x304 $x385)))
 (let (($x208 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x85 (= $x304 $x208)))
 (let (($x6 (and (and (and $x85 $x54) $x183) $x383)))
 (let (($x203 (and $x6 $x283)))
 (let ((?x275 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x382 (= ?x275 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x62 (bvuge ?x174 (_ bv1 32))))
 (let (($x28 (=> $x62 $x382)))
 (let (($x220 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x347 (= $x62 $x220)))
 (let (($x160 (and (and (= $x104 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x104 $x385)) $x347)))
 (let (($x317 (and $x160 $x28)))
 (let (($x156 (and $x317 $x203)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x245 (= ?x327 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x234 (bvuge ?x105 (_ bv1 32))))
 (let (($x361 (=> $x234 $x245)))
 (let (($x288 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x42 (= $x234 $x288)))
 (let (($x318 (and (and (= $x256 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x256 $x385)) $x42)))
 (let (($x340 (and $x318 $x361)))
 (let (($x24 (and $x340 $x156)))
 (let (($x350 (= ?x324 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x302 (=> $x265 $x350)))
 (let (($x285 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x279 (= $x265 $x285)))
 (let (($x323 (= ?x223 (_ bv0 32))))
 (let (($x204 (=> $x323 $x385)))
 (let (($x365 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x273 (= $x323 $x365)))
 (let (($x281 (and (and (and $x273 $x204) $x279) $x302)))
 (let (($x34 (and $x281 $x24)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x114 (and $x170 $x34)))
 (let (($x75 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x270 (and $x75 $x114)))
 (let (($x127 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x263 (and $x127 $x270)))
 (let (($x162 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x368 (and $x162 $x263)))
 (let (($x299 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x216 (and $x299 $x368)))
 (let (($x335 (and $x385 $x216)))
 (let (($x303 (= ?x196 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x301 (and $x303 $x335)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x102 (and $x44 $x301)))
 (let (($x88 (and $x385 $x102)))
 (let (($x87 (= ?x275 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x31 (and $x87 $x88)))
 (let (($x231 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x117 (and $x231 $x31)))
 (let (($x404 (and $x385 $x117)))
 (let (($x356 (= ?x327 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x47 (and $x356 $x404)))
 (let (($x25 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x178 (and $x25 $x47)))
 (let (($x375 (and $x385 $x178)))
 (let (($x278 (= ?x324 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x48 (and $x278 $x375)))
 (let (($x57 (bvugt ?x205 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x398)))
 (let (($x384 (=> (bvule ?x205 (bvsub (bvadd ?x205 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x57)))))))
 (let (($x38 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x309)))
 (let (($x206 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x38)))))))
 (let (($x251 (bvugt ?x330 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x146)))
 (let (($x286 (=> (bvule ?x330 (bvsub (bvadd ?x330 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x251)))))))
 (let (($x123 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x222 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x306 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x222 $x123)))))))
 (let (($x257 (and $x306 $x286)))
 (let (($x98 (and $x257 $x206)))
 (let (($x68 (and $x98 $x384)))
 (let (($x254 (and $x68 $x48)))
 (let (($x36 (=> $x254 $x119)))
 (not $x36)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x390 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x390 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x355 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x309 (bvadd ?x214 (_ bv3 32))))
 (let ((?x243 (concat (select input.dst.llvm-mem ?x309) (concat ?x355 ?x207))))
 (let ((?x307 (bvmul (_ bv4294967295 32) ?x243)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x367 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x205 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x398 (bvadd ?x205 (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x398) (concat ?x393 ?x367))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x369 (concat ?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x330 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x146 (bvadd ?x330 (_ bv3 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem ?x146) (concat ?x290 ?x369))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x107)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x311)))
 (let ((?x167 (bvadd (bvadd (bvadd ?x240 ?x118) ?x131) ?x307)))
 (let ((?x324 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x342 (= ?x324 ?x167)))
 (let (($x119 (= $x342 true)))
 (let ((?x247 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x22 (concat ?x27 (concat ?x319 (concat ?x71 ?x247)))))
 (let (($x322 (= ?x22 input.dst.llvm-%m)))
 (let (($x394 (= $x322 true)))
 (let (($x97 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x346 (= (bvand ?x205 (_ bv4294967292 32)) ?x205)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x205 (bvsub ?x205 (_ bv4 32))) (bvult ?x205 (bvsub ?x205 (_ bv4 32))))))
 (let (($x133 (and true $x191)))
 (let (($x391 (= (bvand ?x330 (_ bv4294967292 32)) ?x330)))
 (let (($x353 (and $x391 $x133)))
 (let (($x320 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x366 (and (and (and true $x320) $x353) $x346)))
 (let (($x241 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x397 (and true $x241)))
 (let (($x20 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x51 (and $x20 $x397)))
 (let (($x379 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x330 (bvsub ?x330 (_ bv12 32))) (bvult ?x330 (bvsub ?x330 (_ bv12 32))))))
 (let (($x116 (and (and (and true $x20) $x379) $x51)))
 (let (($x55 (and (and $x116 $x366) $x97)))
 (let (($x90 (= input.dst.llvm-%m ?x22)))
 (let ((?x158 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x153 (= (_ bv0 32) ?x158)))
 (let ((?x137 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x137)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (and $x73 $x26)))
 (let (($x168 (and $x149 $x153)))
 (let (($x211 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x211 $x168)))
 (let (($x244 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x244)))))))
 (let (($x148 (and (and (and $x43 $x130) $x90) $x55)))
 (let (($x29 (forall ((input.ind-%var3745X (_ BitVec 32)) )(let ((?x315 (bvadd (bvmul input.ind-%var3745X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv1 32))) (select input.dst.llvm-mem ?x315))))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv2 32))) ?x188))))
 (let ((?x269 (input.spec-%var-m-0.1.1 input.ind-%var3745X)))
 (let (($x310 (input.spec-%var-m-0.0.1 input.ind-%var3745X)))
 (=> $x310 (= ?x269 ?x396))))))))
 ))
 (let (($x386 (forall ((input.ind-%var3744X (_ BitVec 32)) )(let (($x310 (input.spec-%var-m-0.0.1 input.ind-%var3744X)))
 (= $x310 (and (bvule (_ bv0 32) input.ind-%var3744X) (bvult input.ind-%var3744X (_ bv100 32))))))
 ))
 (let (($x53 (and $x386 $x29)))
 (let (($x113 (and $x53 $x148)))
 (let (($x328 (= $x113 true)))
 (let (($x86 (= $x116 true)))
 (let (($x333 (and $x366 $x97)))
 (let (($x291 (= $x333 true)))
 (let (($x294 (and $x291 $x86)))
 (let (($x400 (and $x294 $x328)))
 (let (($x124 (and $x400 $x394)))
 (let (($x252 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x105 (ite $x252 (_ bv1 32) (_ bv0 32))))
 (let (($x256 (= ?x105 (_ bv0 32))))
 (let (($x189 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x223 (ite $x189 (_ bv1 32) (_ bv0 32))))
 (let (($x265 (bvuge ?x223 (_ bv1 32))))
 (let (($x238 (and $x265 $x256)))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x174 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x104 (= ?x174 (_ bv0 32))))
 (let (($x289 (and $x104 $x238)))
 (let (($x78 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x76 (ite $x78 (_ bv1 32) (_ bv0 32))))
 (let (($x304 (= ?x76 (_ bv0 32))))
 (let (($x233 (and $x304 $x289)))
 (let (($x283 (and $x233 $x124)))
 (let ((?x196 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x155 (= ?x196 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x50 (bvuge ?x76 (_ bv1 32))))
 (let (($x383 (=> $x50 $x155)))
 (let (($x9 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x183 (= $x50 $x9)))
 (let (($x385 (= false false)))
 (let (($x54 (=> $x304 $x385)))
 (let (($x208 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x85 (= $x304 $x208)))
 (let (($x6 (and (and (and $x85 $x54) $x183) $x383)))
 (let (($x203 (and $x6 $x283)))
 (let ((?x275 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x382 (= ?x275 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x62 (bvuge ?x174 (_ bv1 32))))
 (let (($x28 (=> $x62 $x382)))
 (let (($x220 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x347 (= $x62 $x220)))
 (let (($x160 (and (and (= $x104 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x104 $x385)) $x347)))
 (let (($x317 (and $x160 $x28)))
 (let (($x156 (and $x317 $x203)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x245 (= ?x327 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x234 (bvuge ?x105 (_ bv1 32))))
 (let (($x361 (=> $x234 $x245)))
 (let (($x288 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x42 (= $x234 $x288)))
 (let (($x318 (and (and (= $x256 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x256 $x385)) $x42)))
 (let (($x340 (and $x318 $x361)))
 (let (($x24 (and $x340 $x156)))
 (let (($x350 (= ?x324 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x302 (=> $x265 $x350)))
 (let (($x285 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x279 (= $x265 $x285)))
 (let (($x323 (= ?x223 (_ bv0 32))))
 (let (($x204 (=> $x323 $x385)))
 (let (($x365 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x273 (= $x323 $x365)))
 (let (($x281 (and (and (and $x273 $x204) $x279) $x302)))
 (let (($x34 (and $x281 $x24)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x114 (and $x170 $x34)))
 (let (($x75 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x270 (and $x75 $x114)))
 (let (($x127 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x263 (and $x127 $x270)))
 (let (($x162 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x368 (and $x162 $x263)))
 (let (($x299 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x216 (and $x299 $x368)))
 (let (($x335 (and $x385 $x216)))
 (let (($x303 (= ?x196 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x301 (and $x303 $x335)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x102 (and $x44 $x301)))
 (let (($x88 (and $x385 $x102)))
 (let (($x87 (= ?x275 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x31 (and $x87 $x88)))
 (let (($x231 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x117 (and $x231 $x31)))
 (let (($x404 (and $x385 $x117)))
 (let (($x356 (= ?x327 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x47 (and $x356 $x404)))
 (let (($x25 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x178 (and $x25 $x47)))
 (let (($x375 (and $x385 $x178)))
 (let (($x278 (= ?x324 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x48 (and $x278 $x375)))
 (let (($x57 (bvugt ?x205 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x398)))
 (let (($x384 (=> (bvule ?x205 (bvsub (bvadd ?x205 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x57)))))))
 (let (($x38 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x309)))
 (let (($x206 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x38)))))))
 (let (($x251 (bvugt ?x330 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x146)))
 (let (($x286 (=> (bvule ?x330 (bvsub (bvadd ?x330 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x251)))))))
 (let (($x123 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x222 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x306 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x222 $x123)))))))
 (let (($x257 (and $x306 $x286)))
 (let (($x98 (and $x257 $x206)))
 (let (($x68 (and $x98 $x384)))
 (let (($x254 (and $x68 $x48)))
 (let (($x36 (=> $x254 $x119)))
 (not $x36)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 217 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 57
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x13 (concat ?x296 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x237 (bvadd ?x214 (_ bv3 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem ?x237) (concat ?x235 ?x13))))
 (let ((?x134 (bvmul (_ bv4294967295 32) ?x52)))
 (let ((?x380 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x287 (concat ?x380 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x225 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x325 (bvadd ?x225 (_ bv3 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem ?x325) (concat ?x403 ?x287))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x342 (concat ?x167 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x195 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x231 (bvadd ?x195 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x231) (concat ?x36 ?x342))))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x355)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x334)))
 (let ((?x82 (bvadd (bvadd (bvadd ?x159 ?x336) ?x58) ?x134)))
 (let (($x215 (= (_ bv0 32) ?x82)))
 (let (($x262 (= $x215 true)))
 (let ((?x263 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x404 (concat ?x117 (concat ?x102 (concat ?x216 ?x263)))))
 (let (($x219 (= ?x404 input.dst.llvm-%m)))
 (let (($x193 (= $x219 true)))
 (let (($x295 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x291 (= (bvand ?x225 (_ bv4294967292 32)) ?x225)))
 (let (($x366 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x225 (bvsub ?x225 (_ bv4 32))) (bvult ?x225 (bvsub ?x225 (_ bv4 32))))))
 (let (($x338 (and true $x366)))
 (let (($x133 (= (bvand ?x195 (_ bv4294967292 32)) ?x195)))
 (let (($x97 (and $x133 $x338)))
 (let (($x19 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x239 (and (and (and true $x19) $x97) $x291)))
 (let (($x294 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x332 (and true $x294)))
 (let (($x12 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x310 (and $x12 $x332)))
 (let (($x241 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x195 (bvsub ?x195 (_ bv12 32))) (bvult ?x195 (bvsub ?x195 (_ bv12 32))))))
 (let (($x399 (and (and (and true $x12) $x241) $x310)))
 (let (($x375 (and (and $x399 $x239) $x295)))
 (let (($x47 (= input.dst.llvm-%m ?x404)))
 (let ((?x156 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x24 (= (_ bv0 32) ?x156)))
 (let ((?x124 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x283 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x124)))
 (let (($x394 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x203 (and $x394 $x283)))
 (let (($x34 (and $x203 $x24)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x114 (and $x173 $x34)))
 (let (($x140 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x322 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x210 $x140)))))))
 (let (($x81 (and (and (and $x322 $x114) $x47) $x375)))
 (let (($x319 (forall ((input.ind-%var3789X (_ BitVec 32)) )(let ((?x211 (bvadd (bvmul input.ind-%var3789X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x149))))
 (let ((?x395 (input.spec-%var-m-0.1.1 input.ind-%var3789X)))
 (let (($x204 (input.spec-%var-m-0.0.1 input.ind-%var3789X)))
 (=> $x204 (= ?x395 ?x250))))))))
 ))
 (let (($x360 (forall ((input.ind-%var3788X (_ BitVec 32)) )(let (($x204 (input.spec-%var-m-0.0.1 input.ind-%var3788X)))
 (= $x204 (and (bvule (_ bv0 32) input.ind-%var3788X) (bvult input.ind-%var3788X (_ bv100 32))))))
 ))
 (let (($x11 (and $x360 $x319)))
 (let (($x83 (and $x11 $x81)))
 (let (($x147 (= $x83 true)))
 (let (($x172 (= $x399 true)))
 (let (($x249 (and $x239 $x295)))
 (let (($x378 (= $x249 true)))
 (let (($x329 (and $x378 $x172)))
 (let (($x321 (and $x329 $x147)))
 (let (($x107 (and $x321 $x193)))
 (let (($x297 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x234 (ite $x297 (_ bv1 32) (_ bv0 32))))
 (let (($x288 (= ?x234 (_ bv0 32))))
 (let (($x385 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x265 (ite $x385 (_ bv1 32) (_ bv0 32))))
 (let (($x285 (= ?x265 (_ bv0 32))))
 (let (($x320 (and $x285 $x288)))
 (let (($x175 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x62 (ite $x175 (_ bv1 32) (_ bv0 32))))
 (let (($x220 (= ?x62 (_ bv0 32))))
 (let (($x363 (and $x220 $x320)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x50 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x9 (= ?x50 (_ bv0 32))))
 (let (($x186 (and $x9 $x363)))
 (let (($x311 (and $x186 $x107)))
 (let ((?x162 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x233 (= ?x162 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x383 (bvuge ?x50 (_ bv1 32))))
 (let (($x163 (=> $x383 $x233)))
 (let (($x6 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x238 (= $x383 $x6)))
 (let (($x57 (= false false)))
 (let (($x155 (=> $x9 $x57)))
 (let (($x56 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x59 (= $x9 $x56)))
 (let (($x401 (and (and (and $x59 $x155) $x238) $x163)))
 (let (($x240 (and $x401 $x311)))
 (let ((?x280 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x304 (= ?x280 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x28 (bvuge ?x62 (_ bv1 32))))
 (let (($x202 (=> $x28 $x304)))
 (let (($x317 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x78 (= $x28 $x317)))
 (let (($x85 (and (and (= $x220 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x220 $x57)) $x78)))
 (let (($x54 (and $x85 $x202)))
 (let (($x358 (and $x54 $x240)))
 (let ((?x150 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x104 (= ?x150 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x361 (bvuge ?x234 (_ bv1 32))))
 (let (($x259 (=> $x361 $x104)))
 (let (($x340 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x282 (= $x361 $x340)))
 (let (($x212 (and (and (= $x288 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x288 $x57)) $x282)))
 (let (($x89 (and $x212 $x259)))
 (let (($x17 (and $x89 $x358)))
 (let ((?x68 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x256 (= ?x68 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x302 (bvuge ?x265 (_ bv1 32))))
 (let (($x132 (=> $x302 $x256)))
 (let (($x281 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x252 (= $x302 $x281)))
 (let (($x350 (=> $x285 $x57)))
 (let (($x260 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x372 (= $x285 $x260)))
 (let (($x362 (and (and (and $x372 $x350) $x252) $x132)))
 (let (($x290 (and $x362 $x17)))
 (let (($x273 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x253 (and $x273 $x290)))
 (let (($x60 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x227 (and $x60 $x253)))
 (let (($x223 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x66 (and $x223 $x227)))
 (let (($x170 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x369 (and $x170 $x66)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x91 (and $x75 $x369)))
 (let (($x118 (and $x57 $x91)))
 (let (($x127 (= ?x162 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x171 (and $x127 $x118)))
 (let (($x267 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x96 (and $x267 $x171)))
 (let (($x387 (and $x57 $x96)))
 (let (($x141 (= ?x280 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x393 (and $x141 $x387)))
 (let (($x196 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x39 (and $x196 $x393)))
 (let (($x80 (and $x57 $x39)))
 (let (($x370 (= ?x150 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x268 (and $x370 $x80)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x367 (and $x305 $x268)))
 (let (($x41 (and $x57 $x367)))
 (let (($x398 (= ?x68 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x131 (and $x398 $x41)))
 (let (($x93 (bvugt ?x225 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x325)))
 (let (($x25 (=> (bvule ?x225 (bvsub (bvadd ?x225 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x93)))))))
 (let (($x377 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x313 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x377)))))))
 (let (($x248 (bvugt ?x195 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x229 (=> (bvule ?x195 (bvsub (bvadd ?x195 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x248)))))))
 (let (($x166 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x123 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x251 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x264 $x166)))))))
 (let (($x176 (and $x251 $x229)))
 (let (($x339 (and $x176 $x313)))
 (let (($x206 (and $x339 $x25)))
 (let (($x292 (and $x206 $x131)))
 (let (($x128 (=> $x292 $x262)))
 (not $x128)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x13 (concat ?x296 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x214 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x237 (bvadd ?x214 (_ bv3 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem ?x237) (concat ?x235 ?x13))))
 (let ((?x134 (bvmul (_ bv4294967295 32) ?x52)))
 (let ((?x380 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x287 (concat ?x380 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x225 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x325 (bvadd ?x225 (_ bv3 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem ?x325) (concat ?x403 ?x287))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x342 (concat ?x167 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x195 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x231 (bvadd ?x195 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x231) (concat ?x36 ?x342))))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x355)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x334)))
 (let ((?x82 (bvadd (bvadd (bvadd ?x159 ?x336) ?x58) ?x134)))
 (let (($x215 (= (_ bv0 32) ?x82)))
 (let (($x262 (= $x215 true)))
 (let ((?x263 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x404 (concat ?x117 (concat ?x102 (concat ?x216 ?x263)))))
 (let (($x219 (= ?x404 input.dst.llvm-%m)))
 (let (($x193 (= $x219 true)))
 (let (($x295 (= (bvand ?x214 (_ bv4294967292 32)) ?x214)))
 (let (($x291 (= (bvand ?x225 (_ bv4294967292 32)) ?x225)))
 (let (($x366 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x225 (bvsub ?x225 (_ bv4 32))) (bvult ?x225 (bvsub ?x225 (_ bv4 32))))))
 (let (($x338 (and true $x366)))
 (let (($x133 (= (bvand ?x195 (_ bv4294967292 32)) ?x195)))
 (let (($x97 (and $x133 $x338)))
 (let (($x19 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x214 (bvsub ?x214 (_ bv8 32))) (bvult ?x214 (bvsub ?x214 (_ bv8 32))))))
 (let (($x239 (and (and (and true $x19) $x97) $x291)))
 (let (($x294 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x332 (and true $x294)))
 (let (($x12 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x310 (and $x12 $x332)))
 (let (($x241 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x195 (bvsub ?x195 (_ bv12 32))) (bvult ?x195 (bvsub ?x195 (_ bv12 32))))))
 (let (($x399 (and (and (and true $x12) $x241) $x310)))
 (let (($x375 (and (and $x399 $x239) $x295)))
 (let (($x47 (= input.dst.llvm-%m ?x404)))
 (let ((?x156 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x24 (= (_ bv0 32) ?x156)))
 (let ((?x124 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x283 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x124)))
 (let (($x394 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x203 (and $x394 $x283)))
 (let (($x34 (and $x203 $x24)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x114 (and $x173 $x34)))
 (let (($x140 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x322 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x210 $x140)))))))
 (let (($x81 (and (and (and $x322 $x114) $x47) $x375)))
 (let (($x319 (forall ((input.ind-%var3789X (_ BitVec 32)) )(let ((?x211 (bvadd (bvmul input.ind-%var3789X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x149))))
 (let ((?x395 (input.spec-%var-m-0.1.1 input.ind-%var3789X)))
 (let (($x204 (input.spec-%var-m-0.0.1 input.ind-%var3789X)))
 (=> $x204 (= ?x395 ?x250))))))))
 ))
 (let (($x360 (forall ((input.ind-%var3788X (_ BitVec 32)) )(let (($x204 (input.spec-%var-m-0.0.1 input.ind-%var3788X)))
 (= $x204 (and (bvule (_ bv0 32) input.ind-%var3788X) (bvult input.ind-%var3788X (_ bv100 32))))))
 ))
 (let (($x11 (and $x360 $x319)))
 (let (($x83 (and $x11 $x81)))
 (let (($x147 (= $x83 true)))
 (let (($x172 (= $x399 true)))
 (let (($x249 (and $x239 $x295)))
 (let (($x378 (= $x249 true)))
 (let (($x329 (and $x378 $x172)))
 (let (($x321 (and $x329 $x147)))
 (let (($x107 (and $x321 $x193)))
 (let (($x297 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x234 (ite $x297 (_ bv1 32) (_ bv0 32))))
 (let (($x288 (= ?x234 (_ bv0 32))))
 (let (($x385 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x265 (ite $x385 (_ bv1 32) (_ bv0 32))))
 (let (($x285 (= ?x265 (_ bv0 32))))
 (let (($x320 (and $x285 $x288)))
 (let (($x175 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x62 (ite $x175 (_ bv1 32) (_ bv0 32))))
 (let (($x220 (= ?x62 (_ bv0 32))))
 (let (($x363 (and $x220 $x320)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x50 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x9 (= ?x50 (_ bv0 32))))
 (let (($x186 (and $x9 $x363)))
 (let (($x311 (and $x186 $x107)))
 (let ((?x162 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x233 (= ?x162 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x383 (bvuge ?x50 (_ bv1 32))))
 (let (($x163 (=> $x383 $x233)))
 (let (($x6 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x238 (= $x383 $x6)))
 (let (($x57 (= false false)))
 (let (($x155 (=> $x9 $x57)))
 (let (($x56 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x59 (= $x9 $x56)))
 (let (($x401 (and (and (and $x59 $x155) $x238) $x163)))
 (let (($x240 (and $x401 $x311)))
 (let ((?x280 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x304 (= ?x280 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x28 (bvuge ?x62 (_ bv1 32))))
 (let (($x202 (=> $x28 $x304)))
 (let (($x317 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x78 (= $x28 $x317)))
 (let (($x85 (and (and (= $x220 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x220 $x57)) $x78)))
 (let (($x54 (and $x85 $x202)))
 (let (($x358 (and $x54 $x240)))
 (let ((?x150 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x104 (= ?x150 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x361 (bvuge ?x234 (_ bv1 32))))
 (let (($x259 (=> $x361 $x104)))
 (let (($x340 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x282 (= $x361 $x340)))
 (let (($x212 (and (and (= $x288 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x288 $x57)) $x282)))
 (let (($x89 (and $x212 $x259)))
 (let (($x17 (and $x89 $x358)))
 (let ((?x68 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x256 (= ?x68 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x302 (bvuge ?x265 (_ bv1 32))))
 (let (($x132 (=> $x302 $x256)))
 (let (($x281 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x252 (= $x302 $x281)))
 (let (($x350 (=> $x285 $x57)))
 (let (($x260 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x372 (= $x285 $x260)))
 (let (($x362 (and (and (and $x372 $x350) $x252) $x132)))
 (let (($x290 (and $x362 $x17)))
 (let (($x273 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x253 (and $x273 $x290)))
 (let (($x60 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x227 (and $x60 $x253)))
 (let (($x223 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x66 (and $x223 $x227)))
 (let (($x170 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x369 (and $x170 $x66)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x91 (and $x75 $x369)))
 (let (($x118 (and $x57 $x91)))
 (let (($x127 (= ?x162 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x171 (and $x127 $x118)))
 (let (($x267 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x96 (and $x267 $x171)))
 (let (($x387 (and $x57 $x96)))
 (let (($x141 (= ?x280 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x393 (and $x141 $x387)))
 (let (($x196 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x39 (and $x196 $x393)))
 (let (($x80 (and $x57 $x39)))
 (let (($x370 (= ?x150 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x268 (and $x370 $x80)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x367 (and $x305 $x268)))
 (let (($x41 (and $x57 $x367)))
 (let (($x398 (= ?x68 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x131 (and $x398 $x41)))
 (let (($x93 (bvugt ?x225 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x325)))
 (let (($x25 (=> (bvule ?x225 (bvsub (bvadd ?x225 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x93)))))))
 (let (($x377 (bvugt ?x214 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x313 (=> (bvule ?x214 (bvsub (bvadd ?x214 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x377)))))))
 (let (($x248 (bvugt ?x195 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x229 (=> (bvule ?x195 (bvsub (bvadd ?x195 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x248)))))))
 (let (($x166 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x123 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x251 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x264 $x166)))))))
 (let (($x176 (and $x251 $x229)))
 (let (($x339 (and $x176 $x313)))
 (let (($x206 (and $x339 $x25)))
 (let (($x292 (and $x206 $x131)))
 (let (($x128 (=> $x292 $x262)))
 (not $x128)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 217 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 58
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x155 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x21 (ite $x155 (_ bv1 32) (_ bv0 32))))
 (let (($x233 (bvuge ?x21 (_ bv1 32))))
 (let (($x382 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x208 (ite $x382 (_ bv1 32) (_ bv0 32))))
 (let (($x304 (bvuge ?x208 (_ bv1 32))))
 (let (($x245 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x49 (ite $x245 (_ bv1 32) (_ bv0 32))))
 (let (($x104 (bvuge ?x49 (_ bv1 32))))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x129 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x302 (= ?x129 (_ bv0 32))))
 (let (($x256 (bvuge ?x129 (_ bv1 32))))
 (let (($x136 (or $x256 $x302)))
 (let (($x182 (and $x136 $x104)))
 (let (($x361 (= ?x49 (_ bv0 32))))
 (let (($x403 (and $x136 $x361)))
 (let (($x380 (or $x403 $x182)))
 (let (($x287 (and $x380 $x304)))
 (let (($x28 (= ?x208 (_ bv0 32))))
 (let (($x242 (and $x380 $x28)))
 (let (($x198 (or $x242 $x287)))
 (let (($x326 (and $x198 $x233)))
 (let (($x383 (= ?x21 (_ bv0 32))))
 (let (($x58 (and $x198 $x383)))
 (let (($x74 (or $x58 $x326)))
 (let (($x69 (or false $x74)))
 (let (($x30 (= $x69 true)))
 (let ((?x369 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x387 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x268 (concat ?x80 (concat ?x387 (concat ?x118 ?x369)))))
 (let (($x367 (= ?x268 input.dst.llvm-%m)))
 (let (($x41 (= $x367 true)))
 (let (($x107 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x311 (and true $x107)))
 (let (($x47 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x240 (and $x47 $x311)))
 (let ((?x312 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x254 (bvsub ?x312 (_ bv12 32))))
 (let (($x83 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x312 ?x254) (bvult ?x312 ?x254))))
 (let (($x290 (and (and (and true $x47) $x83) $x240)))
 (let (($x253 (= $x290 true)))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x216 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let ((?x316 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x31 (= (bvand ?x316 (_ bv4294967292 32)) ?x316)))
 (let (($x24 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x316 (bvsub ?x316 (_ bv4 32))) (bvult ?x316 (bvsub ?x316 (_ bv4 32))))))
 (let (($x34 (and true $x24)))
 (let (($x394 (= (bvand ?x312 (_ bv4294967292 32)) ?x312)))
 (let (($x114 (and $x394 $x34)))
 (let (($x322 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x102 (and (and (and true $x322) $x114) $x31)))
 (let (($x263 (and $x102 $x216)))
 (let (($x335 (= $x263 true)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x106 (= (_ bv0 32) ?x11)))
 (let ((?x27 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x319 (and $x250 $x37)))
 (let (($x22 (and $x319 $x106)))
 (let (($x92 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x400 (and $x92 $x22)))
 (let (($x158 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x168 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x158)))))))
 (let (($x90 (and $x168 $x400)))
 (let (($x210 (= $x90 true)))
 (let (($x10 (forall ((input.ind-%var3833X (_ BitVec 32)) )(let ((?x397 (bvadd (bvmul input.ind-%var3833X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x332))))
 (let ((?x98 (input.spec-%var-m-0.1.1 input.ind-%var3833X)))
 (let (($x57 (input.spec-%var-m-0.0.1 input.ind-%var3833X)))
 (=> $x57 (= ?x98 ?x204))))))))
 ))
 (let (($x338 (forall ((input.ind-%var3832X (_ BitVec 32)) )(let (($x57 (input.spec-%var-m-0.0.1 input.ind-%var3832X)))
 (= $x57 (and (bvule (_ bv0 32) input.ind-%var3832X) (bvult input.ind-%var3832X (_ bv100 32))))))
 ))
 (let (($x349 (and $x338 $x10)))
 (let (($x94 (= $x349 true)))
 (let (($x140 (and $x94 $x210)))
 (let (($x88 (and $x140 $x335)))
 (let (($x227 (and $x88 $x253)))
 (let (($x131 (and $x227 $x41)))
 (let ((?x112 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x363 (= ?x112 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x186 (=> $x233 $x363)))
 (let (($x163 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x401 (= $x233 $x163)))
 (let (($x150 (= false false)))
 (let (($x289 (=> $x383 $x150)))
 (let (($x238 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x79 (= $x383 $x238)))
 (let (($x67 (and (and (and $x79 $x289) $x401) $x186)))
 (let (($x292 (and $x67 $x131)))
 (let ((?x162 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x50 (= ?x162 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x9 (=> $x304 $x50)))
 (let (($x202 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x54 (= $x304 $x202)))
 (let (($x56 (and (and (= $x28 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x28 $x150)) $x54)))
 (let (($x59 (and $x56 $x9)))
 (let (($x207 (and $x59 $x292)))
 (let ((?x280 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x62 (= ?x280 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x220 (=> $x104 $x62)))
 (let (($x259 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x89 (= $x104 $x259)))
 (let (($x160 (and (and (= $x361 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x361 $x150)) $x89)))
 (let (($x157 (and $x160 $x220)))
 (let (($x218 (and $x157 $x207)))
 (let ((?x209 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x234 (= ?x209 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x288 (=> $x256 $x234)))
 (let (($x132 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x362 (= $x256 $x132)))
 (let (($x105 (=> $x302 $x150)))
 (let (($x252 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x122 (= $x302 $x252)))
 (let (($x371 (and (and (and $x122 $x105) $x362) $x288)))
 (let (($x390 (and $x371 $x218)))
 (let (($x260 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x354 (and $x260 $x390)))
 (let (($x285 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x115 (and $x285 $x354)))
 (let (($x385 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x351 (and $x385 $x115)))
 (let (($x365 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x355 (and $x365 $x351)))
 (let (($x323 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x334 (and $x323 $x355)))
 (let (($x159 (and $x150 $x334)))
 (let (($x189 (= ?x112 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x161 (and $x189 $x159)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x119 (and $x75 $x161)))
 (let (($x36 (and $x150 $x119)))
 (let (($x127 (= ?x162 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x307 (and $x127 $x36)))
 (let (($x267 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x167 (and $x267 $x307)))
 (let (($x243 (and $x150 $x167)))
 (let (($x141 (= ?x280 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x342 (and $x141 $x243)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x359 (and $x44 $x342)))
 (let (($x336 (and $x150 $x359)))
 (let (($x275 (= ?x209 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x331 (and $x275 $x336)))
 (let (($x278 (bvugt ?x316 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x384 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x316 (_ bv3 32)))))
 (let (($x205 (=> (bvule ?x316 (bvsub (bvadd ?x316 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x384 $x278)))))))
 (let (($x257 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x271 (_ bv3 32)))))
 (let (($x324 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x257)))))))
 (let (($x180 (bvugt ?x312 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x255 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x312 (_ bv3 32)))))
 (let (($x214 (=> (bvule ?x312 (bvsub (bvadd ?x312 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x255 $x180)))))))
 (let (($x330 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x101 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x330)))))))
 (let (($x38 (and $x101 $x214)))
 (let (($x121 (and $x38 $x324)))
 (let (($x111 (and $x121 $x205)))
 (let (($x388 (and $x111 $x331)))
 (let (($x235 (=> $x388 $x30)))
 (not $x235))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x155 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x21 (ite $x155 (_ bv1 32) (_ bv0 32))))
 (let (($x233 (bvuge ?x21 (_ bv1 32))))
 (let (($x382 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x208 (ite $x382 (_ bv1 32) (_ bv0 32))))
 (let (($x304 (bvuge ?x208 (_ bv1 32))))
 (let (($x245 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x49 (ite $x245 (_ bv1 32) (_ bv0 32))))
 (let (($x104 (bvuge ?x49 (_ bv1 32))))
 (let (($x372 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x129 (ite $x372 (_ bv1 32) (_ bv0 32))))
 (let (($x302 (= ?x129 (_ bv0 32))))
 (let (($x256 (bvuge ?x129 (_ bv1 32))))
 (let (($x136 (or $x256 $x302)))
 (let (($x182 (and $x136 $x104)))
 (let (($x361 (= ?x49 (_ bv0 32))))
 (let (($x403 (and $x136 $x361)))
 (let (($x380 (or $x403 $x182)))
 (let (($x287 (and $x380 $x304)))
 (let (($x28 (= ?x208 (_ bv0 32))))
 (let (($x242 (and $x380 $x28)))
 (let (($x198 (or $x242 $x287)))
 (let (($x326 (and $x198 $x233)))
 (let (($x383 (= ?x21 (_ bv0 32))))
 (let (($x58 (and $x198 $x383)))
 (let (($x74 (or $x58 $x326)))
 (let (($x69 (or false $x74)))
 (let (($x30 (= $x69 true)))
 (let ((?x369 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x387 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x268 (concat ?x80 (concat ?x387 (concat ?x118 ?x369)))))
 (let (($x367 (= ?x268 input.dst.llvm-%m)))
 (let (($x41 (= $x367 true)))
 (let (($x107 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x311 (and true $x107)))
 (let (($x47 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x240 (and $x47 $x311)))
 (let ((?x312 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x254 (bvsub ?x312 (_ bv12 32))))
 (let (($x83 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x312 ?x254) (bvult ?x312 ?x254))))
 (let (($x290 (and (and (and true $x47) $x83) $x240)))
 (let (($x253 (= $x290 true)))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x216 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let ((?x316 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x31 (= (bvand ?x316 (_ bv4294967292 32)) ?x316)))
 (let (($x24 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x316 (bvsub ?x316 (_ bv4 32))) (bvult ?x316 (bvsub ?x316 (_ bv4 32))))))
 (let (($x34 (and true $x24)))
 (let (($x394 (= (bvand ?x312 (_ bv4294967292 32)) ?x312)))
 (let (($x114 (and $x394 $x34)))
 (let (($x322 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x102 (and (and (and true $x322) $x114) $x31)))
 (let (($x263 (and $x102 $x216)))
 (let (($x335 (= $x263 true)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x106 (= (_ bv0 32) ?x11)))
 (let ((?x27 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x319 (and $x250 $x37)))
 (let (($x22 (and $x319 $x106)))
 (let (($x92 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x400 (and $x92 $x22)))
 (let (($x158 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x168 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x158)))))))
 (let (($x90 (and $x168 $x400)))
 (let (($x210 (= $x90 true)))
 (let (($x10 (forall ((input.ind-%var3833X (_ BitVec 32)) )(let ((?x397 (bvadd (bvmul input.ind-%var3833X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x332))))
 (let ((?x98 (input.spec-%var-m-0.1.1 input.ind-%var3833X)))
 (let (($x57 (input.spec-%var-m-0.0.1 input.ind-%var3833X)))
 (=> $x57 (= ?x98 ?x204))))))))
 ))
 (let (($x338 (forall ((input.ind-%var3832X (_ BitVec 32)) )(let (($x57 (input.spec-%var-m-0.0.1 input.ind-%var3832X)))
 (= $x57 (and (bvule (_ bv0 32) input.ind-%var3832X) (bvult input.ind-%var3832X (_ bv100 32))))))
 ))
 (let (($x349 (and $x338 $x10)))
 (let (($x94 (= $x349 true)))
 (let (($x140 (and $x94 $x210)))
 (let (($x88 (and $x140 $x335)))
 (let (($x227 (and $x88 $x253)))
 (let (($x131 (and $x227 $x41)))
 (let ((?x112 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x363 (= ?x112 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x186 (=> $x233 $x363)))
 (let (($x163 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x401 (= $x233 $x163)))
 (let (($x150 (= false false)))
 (let (($x289 (=> $x383 $x150)))
 (let (($x238 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x79 (= $x383 $x238)))
 (let (($x67 (and (and (and $x79 $x289) $x401) $x186)))
 (let (($x292 (and $x67 $x131)))
 (let ((?x162 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x50 (= ?x162 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x9 (=> $x304 $x50)))
 (let (($x202 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x54 (= $x304 $x202)))
 (let (($x56 (and (and (= $x28 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x28 $x150)) $x54)))
 (let (($x59 (and $x56 $x9)))
 (let (($x207 (and $x59 $x292)))
 (let ((?x280 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x62 (= ?x280 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x220 (=> $x104 $x62)))
 (let (($x259 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x89 (= $x104 $x259)))
 (let (($x160 (and (and (= $x361 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x361 $x150)) $x89)))
 (let (($x157 (and $x160 $x220)))
 (let (($x218 (and $x157 $x207)))
 (let ((?x209 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x234 (= ?x209 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x288 (=> $x256 $x234)))
 (let (($x132 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x362 (= $x256 $x132)))
 (let (($x105 (=> $x302 $x150)))
 (let (($x252 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x122 (= $x302 $x252)))
 (let (($x371 (and (and (and $x122 $x105) $x362) $x288)))
 (let (($x390 (and $x371 $x218)))
 (let (($x260 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x354 (and $x260 $x390)))
 (let (($x285 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x115 (and $x285 $x354)))
 (let (($x385 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x351 (and $x385 $x115)))
 (let (($x365 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x355 (and $x365 $x351)))
 (let (($x323 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x334 (and $x323 $x355)))
 (let (($x159 (and $x150 $x334)))
 (let (($x189 (= ?x112 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x161 (and $x189 $x159)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x119 (and $x75 $x161)))
 (let (($x36 (and $x150 $x119)))
 (let (($x127 (= ?x162 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x307 (and $x127 $x36)))
 (let (($x267 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x167 (and $x267 $x307)))
 (let (($x243 (and $x150 $x167)))
 (let (($x141 (= ?x280 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x342 (and $x141 $x243)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x359 (and $x44 $x342)))
 (let (($x336 (and $x150 $x359)))
 (let (($x275 (= ?x209 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x331 (and $x275 $x336)))
 (let (($x278 (bvugt ?x316 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x384 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x316 (_ bv3 32)))))
 (let (($x205 (=> (bvule ?x316 (bvsub (bvadd ?x316 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x384 $x278)))))))
 (let (($x257 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x271 (_ bv3 32)))))
 (let (($x324 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x257)))))))
 (let (($x180 (bvugt ?x312 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x255 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x312 (_ bv3 32)))))
 (let (($x214 (=> (bvule ?x312 (bvsub (bvadd ?x312 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x255 $x180)))))))
 (let (($x330 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x101 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x330)))))))
 (let (($x38 (and $x101 $x214)))
 (let (($x121 (and $x38 $x324)))
 (let (($x111 (and $x121 $x205)))
 (let (($x388 (and $x111 $x331)))
 (let (($x235 (=> $x388 $x30)))
 (not $x235))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 202 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 59
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x162 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x228 (bvmul (_ bv4294967295 32) ?x162)))
 (let ((?x111 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x43 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x111)))
 (let ((?x23 (bvadd ?x43 ?x228)))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x126 (concat ?x236 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x176 (bvadd ?x271 (_ bv3 32))))
 (let ((?x244 (concat (select input.dst.llvm-mem ?x176) (concat ?x308 ?x126))))
 (let ((?x274 (bvmul (_ bv4294967295 32) ?x244)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x139 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x386 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x226 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x25 (bvadd ?x226 (_ bv3 32))))
 (let ((?x84 (concat (select input.dst.llvm-mem ?x25) (concat ?x386 ?x139))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x82 (concat ?x134 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x298 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x299 (bvadd ?x298 (_ bv3 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem ?x299) (concat ?x262 ?x82))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x20)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x296)))
 (let ((?x381 (bvadd (bvadd (bvadd ?x13 ?x306) ?x84) ?x274)))
 (let (($x18 (= ?x381 ?x23)))
 (let (($x16 (= $x18 true)))
 (let ((?x307 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x336 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x403 (concat ?x136 (concat ?x336 (concat ?x243 ?x307)))))
 (let (($x30 (= ?x403 input.dst.llvm-%m)))
 (let (($x235 (= $x30 true)))
 (let (($x130 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x349 (= (bvand ?x226 (_ bv4294967292 32)) ?x226)))
 (let (($x204 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x226 (bvsub ?x226 (_ bv4 32))) (bvult ?x226 (bvsub ?x226 (_ bv4 32))))))
 (let (($x373 (and true $x204)))
 (let (($x86 (= (bvand ?x298 (_ bv4294967292 32)) ?x298)))
 (let (($x300 (and $x86 $x373)))
 (let (($x327 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x211 (and (and (and true $x327) $x300) $x349)))
 (let (($x11 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x106 (and true $x11)))
 (let (($x137 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x22 (and $x137 $x106)))
 (let (($x92 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x298 (bvsub ?x298 (_ bv12 32))) (bvult ?x298 (bvsub ?x298 (_ bv12 32))))))
 (let (($x210 (and (and (and true $x137) $x92) $x22)))
 (let (($x242 (and (and $x210 $x211) $x130)))
 (let (($x182 (= input.dst.llvm-%m ?x403)))
 (let ((?x334 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x159 (= (_ bv0 32) ?x334)))
 (let ((?x115 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x351 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x115)))
 (let (($x354 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x355 (and $x354 $x351)))
 (let (($x161 (and $x355 $x159)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x118 $x161)))
 (let (($x367 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x390 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x268 $x367)))))))
 (let (($x58 (and (and (and $x390 $x119) $x182) $x242)))
 (let (($x80 (forall ((input.ind-%var3881X (_ BitVec 32)) )(let ((?x83 (bvadd (bvmul input.ind-%var3881X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x219))))
 (let ((?x280 (input.spec-%var-m-0.1.1 input.ind-%var3881X)))
 (let (($x150 (input.spec-%var-m-0.0.1 input.ind-%var3881X)))
 (=> $x150 (= ?x280 ?x253))))))))
 ))
 (let (($x156 (forall ((input.ind-%var3880X (_ BitVec 32)) )(let (($x150 (input.spec-%var-m-0.0.1 input.ind-%var3880X)))
 (= $x150 (and (bvule (_ bv0 32) input.ind-%var3880X) (bvult input.ind-%var3880X (_ bv100 32))))))
 ))
 (let (($x96 (and $x156 $x80)))
 (let (($x326 (and $x96 $x58)))
 (let (($x74 (= $x326 true)))
 (let (($x140 (= $x210 true)))
 (let (($x293 (and $x211 $x130)))
 (let (($x158 (= $x293 true)))
 (let (($x148 (and $x158 $x140)))
 (let (($x69 (and $x148 $x74)))
 (let (($x389 (and $x69 $x235)))
 (let (($x174 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x347 (ite $x174 (_ bv1 32) (_ bv0 32))))
 (let (($x62 (bvuge ?x347 (_ bv1 32))))
 (let (($x122 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x42 (ite $x122 (_ bv1 32) (_ bv0 32))))
 (let (($x234 (bvuge ?x42 (_ bv1 32))))
 (let (($x366 (and $x234 $x62)))
 (let (($x76 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x183 (ite $x76 (_ bv1 32) (_ bv0 32))))
 (let (($x50 (bvuge ?x183 (_ bv1 32))))
 (let (($x338 (and $x50 $x366)))
 (let (($x289 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x391 (ite $x289 (_ bv1 32) (_ bv0 32))))
 (let (($x363 (bvuge ?x391 (_ bv1 32))))
 (let (($x98 (and $x363 $x338)))
 (let (($x40 (and $x98 $x389)))
 (let ((?x60 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x57 (= ?x60 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x5 (=> $x363 $x57)))
 (let (($x186 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x67 (= $x363 $x186)))
 (let (($x278 (= false false)))
 (let (($x233 (= ?x391 (_ bv0 32))))
 (let (($x320 (=> $x233 $x278)))
 (let (($x401 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x192 (= $x233 $x401)))
 (let (($x346 (and (and (and $x192 $x320) $x67) $x5)))
 (let (($x360 (and $x346 $x40)))
 (let ((?x112 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x21 (= ?x112 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x383 (=> $x50 $x21)))
 (let (($x9 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x59 (= $x50 $x9)))
 (let (($x304 (= ?x183 (_ bv0 32))))
 (let (($x224 (=> $x304 $x278)))
 (let (($x54 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x56 (= $x304 $x54)))
 (let (($x79 (and (and (and $x56 $x224) $x59) $x383)))
 (let (($x66 (and $x79 $x360)))
 (let (($x208 (= ?x162 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x28 (=> $x62 $x208)))
 (let (($x220 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x157 (= $x62 $x220)))
 (let (($x104 (= ?x347 (_ bv0 32))))
 (let (($x175 (=> $x104 $x278)))
 (let (($x89 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x160 (= $x104 $x89)))
 (let (($x85 (and (and (and $x160 $x175) $x157) $x28)))
 (let (($x350 (and $x85 $x66)))
 (let (($x49 (= ?x111 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x361 (=> $x234 $x49)))
 (let (($x288 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x371 (= $x234 $x288)))
 (let (($x256 (= ?x42 (_ bv0 32))))
 (let (($x297 (=> $x256 $x278)))
 (let (($x362 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x318 (= $x256 $x362)))
 (let (($x212 (and (and (and $x318 $x297) $x371) $x361)))
 (let (($x221 (and $x212 $x350)))
 (let (($x252 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x333 (and $x252 $x221)))
 (let (($x302 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x14 (and $x302 $x333)))
 (let (($x372 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x181 (and $x372 $x14)))
 (let (($x279 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x191 (and $x279 $x181)))
 (let (($x265 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x239 (and $x265 $x191)))
 (let (($x33 (and $x278 $x239)))
 (let (($x273 (= ?x60 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x15 (and $x273 $x33)))
 (let (($x323 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x65 (and $x323 $x15)))
 (let (($x12 (and $x278 $x65)))
 (let (($x189 (= ?x112 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x61 (and $x189 $x12)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x249 (and $x75 $x61)))
 (let (($x378 (and $x278 $x249)))
 (let (($x127 (= ?x162 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x295 (and $x127 $x378)))
 (let (($x179 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x379 (and $x179 $x295)))
 (let (($x343 (and $x278 $x379)))
 (let (($x93 (= ?x111 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x103 (and $x93 $x343)))
 (let (($x206 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x370 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x206)))))))
 (let (($x222 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x176)))
 (let (($x339 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x222)))))))
 (let (($x135 (bvugt ?x298 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x299)))
 (let (($x309 (=> (bvule ?x298 (bvsub (bvadd ?x298 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x166 $x135)))))))
 (let (($x101 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x251 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x357 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x251)))
 (let (($x180 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x357 $x101)))))))
 (let (($x229 (and $x180 $x309)))
 (let (($x237 (and $x229 $x339)))
 (let (($x324 (and $x237 $x370)))
 (let (($x19 (and $x324 $x103)))
 (let (($x142 (=> $x19 $x16)))
 (not $x142))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x162 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x228 (bvmul (_ bv4294967295 32) ?x162)))
 (let ((?x111 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x43 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x111)))
 (let ((?x23 (bvadd ?x43 ?x228)))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x126 (concat ?x236 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x176 (bvadd ?x271 (_ bv3 32))))
 (let ((?x244 (concat (select input.dst.llvm-mem ?x176) (concat ?x308 ?x126))))
 (let ((?x274 (bvmul (_ bv4294967295 32) ?x244)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x139 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x386 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x226 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x25 (bvadd ?x226 (_ bv3 32))))
 (let ((?x84 (concat (select input.dst.llvm-mem ?x25) (concat ?x386 ?x139))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x82 (concat ?x134 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x298 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x299 (bvadd ?x298 (_ bv3 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem ?x299) (concat ?x262 ?x82))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x20)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x296)))
 (let ((?x381 (bvadd (bvadd (bvadd ?x13 ?x306) ?x84) ?x274)))
 (let (($x18 (= ?x381 ?x23)))
 (let (($x16 (= $x18 true)))
 (let ((?x307 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x336 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x403 (concat ?x136 (concat ?x336 (concat ?x243 ?x307)))))
 (let (($x30 (= ?x403 input.dst.llvm-%m)))
 (let (($x235 (= $x30 true)))
 (let (($x130 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x349 (= (bvand ?x226 (_ bv4294967292 32)) ?x226)))
 (let (($x204 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x226 (bvsub ?x226 (_ bv4 32))) (bvult ?x226 (bvsub ?x226 (_ bv4 32))))))
 (let (($x373 (and true $x204)))
 (let (($x86 (= (bvand ?x298 (_ bv4294967292 32)) ?x298)))
 (let (($x300 (and $x86 $x373)))
 (let (($x327 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x211 (and (and (and true $x327) $x300) $x349)))
 (let (($x11 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x106 (and true $x11)))
 (let (($x137 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x22 (and $x137 $x106)))
 (let (($x92 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x298 (bvsub ?x298 (_ bv12 32))) (bvult ?x298 (bvsub ?x298 (_ bv12 32))))))
 (let (($x210 (and (and (and true $x137) $x92) $x22)))
 (let (($x242 (and (and $x210 $x211) $x130)))
 (let (($x182 (= input.dst.llvm-%m ?x403)))
 (let ((?x334 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x159 (= (_ bv0 32) ?x334)))
 (let ((?x115 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x351 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x115)))
 (let (($x354 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x355 (and $x354 $x351)))
 (let (($x161 (and $x355 $x159)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x118 $x161)))
 (let (($x367 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x390 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x268 $x367)))))))
 (let (($x58 (and (and (and $x390 $x119) $x182) $x242)))
 (let (($x80 (forall ((input.ind-%var3881X (_ BitVec 32)) )(let ((?x83 (bvadd (bvmul input.ind-%var3881X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x219))))
 (let ((?x280 (input.spec-%var-m-0.1.1 input.ind-%var3881X)))
 (let (($x150 (input.spec-%var-m-0.0.1 input.ind-%var3881X)))
 (=> $x150 (= ?x280 ?x253))))))))
 ))
 (let (($x156 (forall ((input.ind-%var3880X (_ BitVec 32)) )(let (($x150 (input.spec-%var-m-0.0.1 input.ind-%var3880X)))
 (= $x150 (and (bvule (_ bv0 32) input.ind-%var3880X) (bvult input.ind-%var3880X (_ bv100 32))))))
 ))
 (let (($x96 (and $x156 $x80)))
 (let (($x326 (and $x96 $x58)))
 (let (($x74 (= $x326 true)))
 (let (($x140 (= $x210 true)))
 (let (($x293 (and $x211 $x130)))
 (let (($x158 (= $x293 true)))
 (let (($x148 (and $x158 $x140)))
 (let (($x69 (and $x148 $x74)))
 (let (($x389 (and $x69 $x235)))
 (let (($x174 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x347 (ite $x174 (_ bv1 32) (_ bv0 32))))
 (let (($x62 (bvuge ?x347 (_ bv1 32))))
 (let (($x122 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x42 (ite $x122 (_ bv1 32) (_ bv0 32))))
 (let (($x234 (bvuge ?x42 (_ bv1 32))))
 (let (($x366 (and $x234 $x62)))
 (let (($x76 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x183 (ite $x76 (_ bv1 32) (_ bv0 32))))
 (let (($x50 (bvuge ?x183 (_ bv1 32))))
 (let (($x338 (and $x50 $x366)))
 (let (($x289 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x391 (ite $x289 (_ bv1 32) (_ bv0 32))))
 (let (($x363 (bvuge ?x391 (_ bv1 32))))
 (let (($x98 (and $x363 $x338)))
 (let (($x40 (and $x98 $x389)))
 (let ((?x60 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x57 (= ?x60 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x5 (=> $x363 $x57)))
 (let (($x186 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x67 (= $x363 $x186)))
 (let (($x278 (= false false)))
 (let (($x233 (= ?x391 (_ bv0 32))))
 (let (($x320 (=> $x233 $x278)))
 (let (($x401 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x192 (= $x233 $x401)))
 (let (($x346 (and (and (and $x192 $x320) $x67) $x5)))
 (let (($x360 (and $x346 $x40)))
 (let ((?x112 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x21 (= ?x112 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x383 (=> $x50 $x21)))
 (let (($x9 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x59 (= $x50 $x9)))
 (let (($x304 (= ?x183 (_ bv0 32))))
 (let (($x224 (=> $x304 $x278)))
 (let (($x54 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x56 (= $x304 $x54)))
 (let (($x79 (and (and (and $x56 $x224) $x59) $x383)))
 (let (($x66 (and $x79 $x360)))
 (let (($x208 (= ?x162 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x28 (=> $x62 $x208)))
 (let (($x220 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x157 (= $x62 $x220)))
 (let (($x104 (= ?x347 (_ bv0 32))))
 (let (($x175 (=> $x104 $x278)))
 (let (($x89 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x160 (= $x104 $x89)))
 (let (($x85 (and (and (and $x160 $x175) $x157) $x28)))
 (let (($x350 (and $x85 $x66)))
 (let (($x49 (= ?x111 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x361 (=> $x234 $x49)))
 (let (($x288 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x371 (= $x234 $x288)))
 (let (($x256 (= ?x42 (_ bv0 32))))
 (let (($x297 (=> $x256 $x278)))
 (let (($x362 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x318 (= $x256 $x362)))
 (let (($x212 (and (and (and $x318 $x297) $x371) $x361)))
 (let (($x221 (and $x212 $x350)))
 (let (($x252 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x333 (and $x252 $x221)))
 (let (($x302 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x14 (and $x302 $x333)))
 (let (($x372 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x181 (and $x372 $x14)))
 (let (($x279 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x191 (and $x279 $x181)))
 (let (($x265 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x239 (and $x265 $x191)))
 (let (($x33 (and $x278 $x239)))
 (let (($x273 (= ?x60 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x15 (and $x273 $x33)))
 (let (($x323 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x65 (and $x323 $x15)))
 (let (($x12 (and $x278 $x65)))
 (let (($x189 (= ?x112 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x61 (and $x189 $x12)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x249 (and $x75 $x61)))
 (let (($x378 (and $x278 $x249)))
 (let (($x127 (= ?x162 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x295 (and $x127 $x378)))
 (let (($x179 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x379 (and $x179 $x295)))
 (let (($x343 (and $x278 $x379)))
 (let (($x93 (= ?x111 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x103 (and $x93 $x343)))
 (let (($x206 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x370 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x206)))))))
 (let (($x222 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x176)))
 (let (($x339 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x222)))))))
 (let (($x135 (bvugt ?x298 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x299)))
 (let (($x309 (=> (bvule ?x298 (bvsub (bvadd ?x298 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x166 $x135)))))))
 (let (($x101 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x251 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x357 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x251)))
 (let (($x180 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x357 $x101)))))))
 (let (($x229 (and $x180 $x309)))
 (let (($x237 (and $x229 $x339)))
 (let (($x324 (and $x237 $x370)))
 (let (($x19 (and $x324 $x103)))
 (let (($x142 (=> $x19 $x16)))
 (not $x142))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 60
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x112 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x178 (bvmul (_ bv4294967295 32) ?x112)))
 (let ((?x247 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x178)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x31 (concat ?x48 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x146 (bvadd ?x271 (_ bv3 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem ?x146) (concat ?x358 ?x31))))
 (let ((?x216 (bvmul (_ bv4294967295 32) ?x368)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x213 (concat ?x164 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x257 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x305 (bvadd ?x257 (_ bv3 32))))
 (let ((?x114 (concat (select input.dst.llvm-mem ?x305) (concat ?x36 ?x213))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x381 (concat ?x274 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x376 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x261 (bvadd ?x376 (_ bv3 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem ?x261) (concat ?x43 ?x381))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x364)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x236)))
 (let ((?x404 (bvadd (bvadd (bvadd ?x126 ?x18) ?x114) ?x216)))
 (let (($x173 (= ?x404 ?x247)))
 (let (($x254 (= $x173 true)))
 (let ((?x14 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x249 (concat ?x61 (concat ?x15 (concat ?x191 ?x14)))))
 (let (($x194 (= ?x249 input.dst.llvm-%m)))
 (let (($x241 (= $x194 true)))
 (let (($x73 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x293 (= (bvand ?x257 (_ bv4294967292 32)) ?x257)))
 (let (($x349 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x257 (bvsub ?x257 (_ bv4 32))) (bvult ?x257 (bvsub ?x257 (_ bv4 32))))))
 (let (($x211 (and true $x349)))
 (let (($x204 (= (bvand ?x376 (_ bv4294967292 32)) ?x376)))
 (let (($x149 (and $x204 $x211)))
 (let (($x294 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x137 (and (and (and true $x294) $x149) $x293)))
 (let (($x140 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x148 (and true $x140)))
 (let (($x92 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x196 (and $x92 $x148)))
 (let (($x319 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x376 (bvsub ?x376 (_ bv12 32))) (bvult ?x376 (bvsub ?x376 (_ bv12 32))))))
 (let (($x322 (and (and (and true $x92) $x319) $x196)))
 (let (($x379 (and (and $x322 $x137) $x73)))
 (let (($x378 (= input.dst.llvm-%m ?x249)))
 (let ((?x360 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x66 (= (_ bv0 32) ?x360)))
 (let ((?x235 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x389 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x235)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x30 $x389)))
 (let (($x350 (and $x40 $x66)))
 (let (($x307 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x221 (and $x307 $x350)))
 (let (($x198 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x198)))))))
 (let (($x19 (and (and (and $x69 $x221) $x378) $x379)))
 (let (($x359 (forall ((input.ind-%var3925X (_ BitVec 32)) )(let ((?x91 (bvadd (bvmul input.ind-%var3925X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x351))))
 (let ((?x162 (input.spec-%var-m-0.1.1 input.ind-%var3925X)))
 (let (($x278 (input.spec-%var-m-0.0.1 input.ind-%var3925X)))
 (=> $x278 (= ?x162 ?x287))))))))
 ))
 (let (($x147 (forall ((input.ind-%var3924X (_ BitVec 32)) )(let (($x278 (input.spec-%var-m-0.0.1 input.ind-%var3924X)))
 (= $x278 (and (bvule (_ bv0 32) input.ind-%var3924X) (bvult input.ind-%var3924X (_ bv100 32))))))
 ))
 (let (($x336 (and $x147 $x359)))
 (let (($x100 (and $x336 $x19)))
 (let (($x184 (= $x100 true)))
 (let (($x394 (= $x322 true)))
 (let (($x26 (and $x137 $x73)))
 (let (($x168 (= $x26 true)))
 (let (($x124 (and $x168 $x394)))
 (let (($x188 (and $x124 $x184)))
 (let (($x133 (and $x188 $x241)))
 (let (($x175 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x317 (ite $x175 (_ bv1 32) (_ bv0 32))))
 (let (($x208 (bvuge ?x317 (_ bv1 32))))
 (let (($x318 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x340 (ite $x318 (_ bv1 32) (_ bv0 32))))
 (let (($x234 (= ?x340 (_ bv0 32))))
 (let (($x329 (and $x234 $x208)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x6 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x21 (bvuge ?x6 (_ bv1 32))))
 (let (($x327 (and $x21 $x329)))
 (let (($x320 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x7 (ite $x320 (_ bv1 32) (_ bv0 32))))
 (let (($x57 (bvuge ?x7 (_ bv1 32))))
 (let (($x94 (and $x57 $x327)))
 (let (($x20 (and $x94 $x133)))
 (let ((?x285 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x338 (= ?x285 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x98 (=> $x57 $x338)))
 (let (($x5 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x346 (= $x57 $x5)))
 (let (($x206 (= false false)))
 (let (($x363 (= ?x7 (_ bv0 32))))
 (let (($x398 (=> $x363 $x206)))
 (let (($x67 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x353 (= $x363 $x67)))
 (let (($x397 (and (and (and $x353 $x398) $x346) $x98)))
 (let (($x296 (and $x397 $x20)))
 (let ((?x60 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x391 (= ?x60 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x233 (=> $x21 $x391)))
 (let (($x383 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x79 (= $x21 $x383)))
 (let (($x50 (= ?x6 (_ bv0 32))))
 (let (($x155 (=> $x50 $x206)))
 (let (($x59 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x238 (= $x50 $x59)))
 (let (($x192 (and (and (and $x238 $x155) $x79) $x233)))
 (let (($x13 (and $x192 $x296)))
 (let (($x183 (= ?x112 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x304 (=> $x208 $x183)))
 (let (($x28 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x85 (= $x208 $x28)))
 (let (($x62 (= ?x317 (_ bv0 32))))
 (let (($x382 (=> $x62 $x206)))
 (let (($x157 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x78 (= $x62 $x157)))
 (let (($x56 (and (and (and $x78 $x382) $x85) $x304)))
 (let (($x108 (and $x56 $x13)))
 (let ((?x324 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x347 (= ?x324 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x49 (bvuge ?x340 (_ bv1 32))))
 (let (($x104 (=> $x49 $x347)))
 (let (($x361 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x212 (= $x49 $x361)))
 (let (($x245 (=> $x234 $x206)))
 (let (($x371 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x282 (= $x234 $x371)))
 (let (($x160 (and (and (and $x282 $x245) $x212) $x104)))
 (let (($x215 (and $x160 $x108)))
 (let (($x362 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x262 (and $x362 $x215)))
 (let (($x256 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x52 (and $x256 $x262)))
 (let (($x122 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x134 (and $x122 $x52)))
 (let (($x281 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x45 (and $x281 $x134)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x82 (and $x129 $x45)))
 (let (($x128 (and $x206 $x82)))
 (let (($x260 (= ?x285 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x306 (and $x260 $x128)))
 (let (($x265 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x269 (and $x265 $x306)))
 (let (($x315 (and $x206 $x269)))
 (let (($x273 (= ?x60 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x396 (and $x273 $x315)))
 (let (($x323 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x386 (and $x323 $x396)))
 (let (($x270 (and $x206 $x386)))
 (let (($x189 (= ?x112 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x200 (and $x189 $x270)))
 (let (($x384 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x71 (and $x384 $x200)))
 (let (($x139 (and $x206 $x71)))
 (let (($x25 (= ?x324 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x125 (and $x25 $x139)))
 (let (($x87 (bvugt ?x257 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x305)))
 (let (($x325 (=> (bvule ?x257 (bvsub (bvadd ?x257 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x87)))))))
 (let (($x330 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x146)))
 (let (($x377 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x264 $x330)))))))
 (let (($x357 (bvugt ?x376 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x261)))
 (let (($x38 (=> (bvule ?x376 (bvsub (bvadd ?x376 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x251 $x357)))))))
 (let (($x180 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x135 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x180)))))))
 (let (($x77 (and $x135 $x38)))
 (let (($x402 (and $x77 $x377)))
 (let (($x339 (and $x402 $x325)))
 (let (($x84 (and $x339 $x125)))
 (let (($x34 (=> $x84 $x254)))
 (not $x34)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x112 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x178 (bvmul (_ bv4294967295 32) ?x112)))
 (let ((?x247 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x178)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x31 (concat ?x48 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x146 (bvadd ?x271 (_ bv3 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem ?x146) (concat ?x358 ?x31))))
 (let ((?x216 (bvmul (_ bv4294967295 32) ?x368)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x213 (concat ?x164 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x257 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x305 (bvadd ?x257 (_ bv3 32))))
 (let ((?x114 (concat (select input.dst.llvm-mem ?x305) (concat ?x36 ?x213))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x381 (concat ?x274 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x376 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x261 (bvadd ?x376 (_ bv3 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem ?x261) (concat ?x43 ?x381))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x364)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x236)))
 (let ((?x404 (bvadd (bvadd (bvadd ?x126 ?x18) ?x114) ?x216)))
 (let (($x173 (= ?x404 ?x247)))
 (let (($x254 (= $x173 true)))
 (let ((?x14 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x249 (concat ?x61 (concat ?x15 (concat ?x191 ?x14)))))
 (let (($x194 (= ?x249 input.dst.llvm-%m)))
 (let (($x241 (= $x194 true)))
 (let (($x73 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x293 (= (bvand ?x257 (_ bv4294967292 32)) ?x257)))
 (let (($x349 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x257 (bvsub ?x257 (_ bv4 32))) (bvult ?x257 (bvsub ?x257 (_ bv4 32))))))
 (let (($x211 (and true $x349)))
 (let (($x204 (= (bvand ?x376 (_ bv4294967292 32)) ?x376)))
 (let (($x149 (and $x204 $x211)))
 (let (($x294 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x137 (and (and (and true $x294) $x149) $x293)))
 (let (($x140 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x148 (and true $x140)))
 (let (($x92 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x196 (and $x92 $x148)))
 (let (($x319 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x376 (bvsub ?x376 (_ bv12 32))) (bvult ?x376 (bvsub ?x376 (_ bv12 32))))))
 (let (($x322 (and (and (and true $x92) $x319) $x196)))
 (let (($x379 (and (and $x322 $x137) $x73)))
 (let (($x378 (= input.dst.llvm-%m ?x249)))
 (let ((?x360 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x66 (= (_ bv0 32) ?x360)))
 (let ((?x235 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x389 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x235)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x30 $x389)))
 (let (($x350 (and $x40 $x66)))
 (let (($x307 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x221 (and $x307 $x350)))
 (let (($x198 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x198)))))))
 (let (($x19 (and (and (and $x69 $x221) $x378) $x379)))
 (let (($x359 (forall ((input.ind-%var3925X (_ BitVec 32)) )(let ((?x91 (bvadd (bvmul input.ind-%var3925X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x351))))
 (let ((?x162 (input.spec-%var-m-0.1.1 input.ind-%var3925X)))
 (let (($x278 (input.spec-%var-m-0.0.1 input.ind-%var3925X)))
 (=> $x278 (= ?x162 ?x287))))))))
 ))
 (let (($x147 (forall ((input.ind-%var3924X (_ BitVec 32)) )(let (($x278 (input.spec-%var-m-0.0.1 input.ind-%var3924X)))
 (= $x278 (and (bvule (_ bv0 32) input.ind-%var3924X) (bvult input.ind-%var3924X (_ bv100 32))))))
 ))
 (let (($x336 (and $x147 $x359)))
 (let (($x100 (and $x336 $x19)))
 (let (($x184 (= $x100 true)))
 (let (($x394 (= $x322 true)))
 (let (($x26 (and $x137 $x73)))
 (let (($x168 (= $x26 true)))
 (let (($x124 (and $x168 $x394)))
 (let (($x188 (and $x124 $x184)))
 (let (($x133 (and $x188 $x241)))
 (let (($x175 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x317 (ite $x175 (_ bv1 32) (_ bv0 32))))
 (let (($x208 (bvuge ?x317 (_ bv1 32))))
 (let (($x318 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x340 (ite $x318 (_ bv1 32) (_ bv0 32))))
 (let (($x234 (= ?x340 (_ bv0 32))))
 (let (($x329 (and $x234 $x208)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x6 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x21 (bvuge ?x6 (_ bv1 32))))
 (let (($x327 (and $x21 $x329)))
 (let (($x320 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x7 (ite $x320 (_ bv1 32) (_ bv0 32))))
 (let (($x57 (bvuge ?x7 (_ bv1 32))))
 (let (($x94 (and $x57 $x327)))
 (let (($x20 (and $x94 $x133)))
 (let ((?x285 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x338 (= ?x285 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x98 (=> $x57 $x338)))
 (let (($x5 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x346 (= $x57 $x5)))
 (let (($x206 (= false false)))
 (let (($x363 (= ?x7 (_ bv0 32))))
 (let (($x398 (=> $x363 $x206)))
 (let (($x67 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x353 (= $x363 $x67)))
 (let (($x397 (and (and (and $x353 $x398) $x346) $x98)))
 (let (($x296 (and $x397 $x20)))
 (let ((?x60 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x391 (= ?x60 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x233 (=> $x21 $x391)))
 (let (($x383 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x79 (= $x21 $x383)))
 (let (($x50 (= ?x6 (_ bv0 32))))
 (let (($x155 (=> $x50 $x206)))
 (let (($x59 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x238 (= $x50 $x59)))
 (let (($x192 (and (and (and $x238 $x155) $x79) $x233)))
 (let (($x13 (and $x192 $x296)))
 (let (($x183 (= ?x112 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x304 (=> $x208 $x183)))
 (let (($x28 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x85 (= $x208 $x28)))
 (let (($x62 (= ?x317 (_ bv0 32))))
 (let (($x382 (=> $x62 $x206)))
 (let (($x157 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x78 (= $x62 $x157)))
 (let (($x56 (and (and (and $x78 $x382) $x85) $x304)))
 (let (($x108 (and $x56 $x13)))
 (let ((?x324 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x347 (= ?x324 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x49 (bvuge ?x340 (_ bv1 32))))
 (let (($x104 (=> $x49 $x347)))
 (let (($x361 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x212 (= $x49 $x361)))
 (let (($x245 (=> $x234 $x206)))
 (let (($x371 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x282 (= $x234 $x371)))
 (let (($x160 (and (and (and $x282 $x245) $x212) $x104)))
 (let (($x215 (and $x160 $x108)))
 (let (($x362 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x262 (and $x362 $x215)))
 (let (($x256 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x52 (and $x256 $x262)))
 (let (($x122 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x134 (and $x122 $x52)))
 (let (($x281 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x45 (and $x281 $x134)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x82 (and $x129 $x45)))
 (let (($x128 (and $x206 $x82)))
 (let (($x260 (= ?x285 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x306 (and $x260 $x128)))
 (let (($x265 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x269 (and $x265 $x306)))
 (let (($x315 (and $x206 $x269)))
 (let (($x273 (= ?x60 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x396 (and $x273 $x315)))
 (let (($x323 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x386 (and $x323 $x396)))
 (let (($x270 (and $x206 $x386)))
 (let (($x189 (= ?x112 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x200 (and $x189 $x270)))
 (let (($x384 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x71 (and $x384 $x200)))
 (let (($x139 (and $x206 $x71)))
 (let (($x25 (= ?x324 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x125 (and $x25 $x139)))
 (let (($x87 (bvugt ?x257 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x305)))
 (let (($x325 (=> (bvule ?x257 (bvsub (bvadd ?x257 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x87)))))))
 (let (($x330 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x146)))
 (let (($x377 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x264 $x330)))))))
 (let (($x357 (bvugt ?x376 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x261)))
 (let (($x38 (=> (bvule ?x376 (bvsub (bvadd ?x376 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x251 $x357)))))))
 (let (($x180 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x135 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x180)))))))
 (let (($x77 (and $x135 $x38)))
 (let (($x402 (and $x77 $x377)))
 (let (($x339 (and $x402 $x325)))
 (let (($x84 (and $x339 $x125)))
 (let (($x34 (=> $x84 $x254)))
 (not $x34)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 223 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 61
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x339 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x83 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x339)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x367 (concat ?x39 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x312 (bvadd ?x271 (_ bv3 32))))
 (let ((?x369 (concat (select input.dst.llvm-mem ?x312) (concat ?x218 ?x367))))
 (let ((?x80 (bvmul (_ bv4294967295 32) ?x369)))
 (let ((?x356 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x167 (concat ?x356 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x297 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x222 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x316 (bvadd ?x222 (_ bv3 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem ?x316) (concat ?x297 ?x167))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x404 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x145 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x223 (bvadd ?x145 (_ bv3 32))))
 (let ((?x254 (concat (select input.dst.llvm-mem ?x223) (concat ?x178 ?x404))))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x47)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x48)))
 (let ((?x131 (bvadd (bvadd (bvadd ?x31 ?x254) ?x203) ?x80)))
 (let (($x240 (= ?x131 ?x83)))
 (let (($x292 (= $x240 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x386 (concat ?x396 (concat ?x306 (concat ?x45 ?x52)))))
 (let (($x29 (= ?x386 input.dst.llvm-%m)))
 (let (($x46 (= $x29 true)))
 (let (($x27 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x26 (= (bvand ?x222 (_ bv4294967292 32)) ?x222)))
 (let (($x293 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x222 (bvsub ?x222 (_ bv4 32))) (bvult ?x222 (bvsub ?x222 (_ bv4 32))))))
 (let (($x137 (and true $x293)))
 (let (($x349 (= (bvand ?x145 (_ bv4294967292 32)) ?x145)))
 (let (($x400 (and $x349 $x137)))
 (let (($x373 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x92 (and (and (and true $x373) $x400) $x26)))
 (let (($x394 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x124 (and true $x394)))
 (let (($x319 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x267 (and $x319 $x124)))
 (let (($x210 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x145 (bvsub ?x145 (_ bv12 32))) (bvult ?x145 (bvsub ?x145 (_ bv12 32))))))
 (let (($x301 (and (and (and true $x319) $x210) $x267)))
 (let (($x71 (and (and $x301 $x92) $x27)))
 (let (($x270 (= input.dst.llvm-%m ?x386)))
 (let ((?x296 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x13 (= (_ bv0 32) ?x296)))
 (let ((?x241 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x241)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (and $x194 $x133)))
 (let (($x108 (and $x20 $x13)))
 (let (($x14 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x215 (and $x14 $x108)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x378 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x188 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x378 $x103)))))))
 (let (($x84 (and (and (and $x188 $x215) $x270) $x71)))
 (let (($x33 (forall ((input.ind-%var3969X (_ BitVec 32)) )(let ((?x243 (bvadd (bvmul input.ind-%var3969X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x389))))
 (let ((?x112 (input.spec-%var-m-0.1.1 input.ind-%var3969X)))
 (let (($x206 (input.spec-%var-m-0.0.1 input.ind-%var3969X)))
 (=> $x206 (= ?x112 ?x343))))))))
 ))
 (let (($x115 (forall ((input.ind-%var3968X (_ BitVec 32)) )(let (($x206 (input.spec-%var-m-0.0.1 input.ind-%var3968X)))
 (= $x206 (and (bvule (_ bv0 32) input.ind-%var3968X) (bvult input.ind-%var3968X (_ bv100 32))))))
 ))
 (let (($x15 (and $x115 $x33)))
 (let (($x72 (and $x15 $x84)))
 (let (($x308 (= $x72 true)))
 (let (($x290 (= $x301 true)))
 (let (($x90 (and $x92 $x27)))
 (let (($x250 (= $x90 true)))
 (let (($x107 (and $x250 $x290)))
 (let (($x348 (and $x107 $x308)))
 (let (($x120 (and $x348 $x46)))
 (let (($x382 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x202 (ite $x382 (_ bv1 32) (_ bv0 32))))
 (let (($x208 (= ?x202 (_ bv0 32))))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x259 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x347 (bvuge ?x259 (_ bv1 32))))
 (let (($x116 (and $x347 $x208)))
 (let (($x155 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x163 (ite $x155 (_ bv1 32) (_ bv0 32))))
 (let (($x391 (bvuge ?x163 (_ bv1 32))))
 (let (($x294 (and $x391 $x116)))
 (let (($x398 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x51 (ite $x398 (_ bv1 32) (_ bv0 32))))
 (let (($x338 (bvuge ?x51 (_ bv1 32))))
 (let (($x158 (and $x338 $x294)))
 (let (($x364 (and $x158 $x120)))
 (let ((?x302 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x327 (= ?x302 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x94 (=> $x338 $x327)))
 (let (($x98 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x397 (= $x338 $x98)))
 (let (($x87 (= false false)))
 (let (($x57 (= ?x51 (_ bv0 32))))
 (let (($x366 (=> $x57 $x87)))
 (let (($x346 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x291 (= $x57 $x346)))
 (let (($x86 (and (and (and $x291 $x366) $x397) $x94)))
 (let (($x236 (and $x86 $x364)))
 (let ((?x285 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x7 (= ?x285 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x363 (=> $x391 $x7)))
 (let (($x233 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x192 (= $x391 $x233)))
 (let (($x21 (= ?x163 (_ bv0 32))))
 (let (($x289 (=> $x21 $x87)))
 (let (($x79 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x401 (= $x21 $x79)))
 (let (($x353 (and (and (and $x401 $x289) $x192) $x363)))
 (let (($x126 (and $x353 $x236)))
 (let ((?x60 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x6 (= ?x60 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x183 (bvuge ?x202 (_ bv1 32))))
 (let (($x50 (=> $x183 $x6)))
 (let (($x304 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x56 (= $x183 $x304)))
 (let (($x59 (and (and (= $x208 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x208 $x87)) $x56)))
 (let (($x238 (and $x59 $x50)))
 (let (($x23 (and $x238 $x126)))
 (let (($x317 (= ?x339 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x62 (=> $x347 $x317)))
 (let (($x104 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x160 (= $x347 $x104)))
 (let (($x49 (= ?x259 (_ bv0 32))))
 (let (($x174 (=> $x49 $x87)))
 (let (($x212 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x89 (= $x49 $x212)))
 (let (($x78 (and (and (and $x89 $x174) $x160) $x62)))
 (let (($x185 (and $x78 $x23)))
 (let (($x371 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x43 (and $x371 $x185)))
 (let (($x234 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x244 (and $x234 $x43)))
 (let (($x318 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x274 (and $x318 $x244)))
 (let (($x132 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x53 (and $x132 $x274)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x381 (and $x42 $x53)))
 (let (($x228 (and $x87 $x381)))
 (let (($x252 (= ?x302 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x18 (and $x252 $x228)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x102 (and $x129 $x18)))
 (let (($x109 (and $x87 $x102)))
 (let (($x260 (= ?x285 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x387 (and $x260 $x109)))
 (let (($x265 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x36 (and $x265 $x387)))
 (let (($x142 (and $x87 $x36)))
 (let (($x273 (= ?x60 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x164 (and $x273 $x142)))
 (let (($x8 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x16 (and $x8 $x164)))
 (let (($x213 (and $x87 $x16)))
 (let (($x305 (= ?x339 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x105 (and $x305 $x213)))
 (let (($x121 (bvugt ?x222 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x370 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x316)))
 (let (($x209 (=> (bvule ?x222 (bvsub (bvadd ?x222 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x370 $x121)))))))
 (let (($x101 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x303 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x312)))
 (let (($x176 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x303 $x101)))))))
 (let (($x248 (bvugt ?x145 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x231 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x229 (=> (bvule ?x145 (bvsub (bvadd ?x145 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x231 $x248)))))))
 (let (($x135 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x299 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x357 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x299 $x135)))))))
 (let (($x95 (and $x357 $x229)))
 (let (($x272 (and $x95 $x176)))
 (let (($x377 (and $x272 $x209)))
 (let (($x114 (and $x377 $x105)))
 (let (($x219 (=> $x114 $x292)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x339 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x83 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x339)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x367 (concat ?x39 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x312 (bvadd ?x271 (_ bv3 32))))
 (let ((?x369 (concat (select input.dst.llvm-mem ?x312) (concat ?x218 ?x367))))
 (let ((?x80 (bvmul (_ bv4294967295 32) ?x369)))
 (let ((?x356 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x167 (concat ?x356 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x297 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x222 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x316 (bvadd ?x222 (_ bv3 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem ?x316) (concat ?x297 ?x167))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x404 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x145 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x223 (bvadd ?x145 (_ bv3 32))))
 (let ((?x254 (concat (select input.dst.llvm-mem ?x223) (concat ?x178 ?x404))))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x47)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x48)))
 (let ((?x131 (bvadd (bvadd (bvadd ?x31 ?x254) ?x203) ?x80)))
 (let (($x240 (= ?x131 ?x83)))
 (let (($x292 (= $x240 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x386 (concat ?x396 (concat ?x306 (concat ?x45 ?x52)))))
 (let (($x29 (= ?x386 input.dst.llvm-%m)))
 (let (($x46 (= $x29 true)))
 (let (($x27 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x26 (= (bvand ?x222 (_ bv4294967292 32)) ?x222)))
 (let (($x293 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x222 (bvsub ?x222 (_ bv4 32))) (bvult ?x222 (bvsub ?x222 (_ bv4 32))))))
 (let (($x137 (and true $x293)))
 (let (($x349 (= (bvand ?x145 (_ bv4294967292 32)) ?x145)))
 (let (($x400 (and $x349 $x137)))
 (let (($x373 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x92 (and (and (and true $x373) $x400) $x26)))
 (let (($x394 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x124 (and true $x394)))
 (let (($x319 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x267 (and $x319 $x124)))
 (let (($x210 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x145 (bvsub ?x145 (_ bv12 32))) (bvult ?x145 (bvsub ?x145 (_ bv12 32))))))
 (let (($x301 (and (and (and true $x319) $x210) $x267)))
 (let (($x71 (and (and $x301 $x92) $x27)))
 (let (($x270 (= input.dst.llvm-%m ?x386)))
 (let ((?x296 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x13 (= (_ bv0 32) ?x296)))
 (let ((?x241 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x241)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (and $x194 $x133)))
 (let (($x108 (and $x20 $x13)))
 (let (($x14 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x215 (and $x14 $x108)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x378 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x188 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x378 $x103)))))))
 (let (($x84 (and (and (and $x188 $x215) $x270) $x71)))
 (let (($x33 (forall ((input.ind-%var3969X (_ BitVec 32)) )(let ((?x243 (bvadd (bvmul input.ind-%var3969X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x389))))
 (let ((?x112 (input.spec-%var-m-0.1.1 input.ind-%var3969X)))
 (let (($x206 (input.spec-%var-m-0.0.1 input.ind-%var3969X)))
 (=> $x206 (= ?x112 ?x343))))))))
 ))
 (let (($x115 (forall ((input.ind-%var3968X (_ BitVec 32)) )(let (($x206 (input.spec-%var-m-0.0.1 input.ind-%var3968X)))
 (= $x206 (and (bvule (_ bv0 32) input.ind-%var3968X) (bvult input.ind-%var3968X (_ bv100 32))))))
 ))
 (let (($x15 (and $x115 $x33)))
 (let (($x72 (and $x15 $x84)))
 (let (($x308 (= $x72 true)))
 (let (($x290 (= $x301 true)))
 (let (($x90 (and $x92 $x27)))
 (let (($x250 (= $x90 true)))
 (let (($x107 (and $x250 $x290)))
 (let (($x348 (and $x107 $x308)))
 (let (($x120 (and $x348 $x46)))
 (let (($x382 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x202 (ite $x382 (_ bv1 32) (_ bv0 32))))
 (let (($x208 (= ?x202 (_ bv0 32))))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x259 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x347 (bvuge ?x259 (_ bv1 32))))
 (let (($x116 (and $x347 $x208)))
 (let (($x155 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x163 (ite $x155 (_ bv1 32) (_ bv0 32))))
 (let (($x391 (bvuge ?x163 (_ bv1 32))))
 (let (($x294 (and $x391 $x116)))
 (let (($x398 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x51 (ite $x398 (_ bv1 32) (_ bv0 32))))
 (let (($x338 (bvuge ?x51 (_ bv1 32))))
 (let (($x158 (and $x338 $x294)))
 (let (($x364 (and $x158 $x120)))
 (let ((?x302 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x327 (= ?x302 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x94 (=> $x338 $x327)))
 (let (($x98 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x397 (= $x338 $x98)))
 (let (($x87 (= false false)))
 (let (($x57 (= ?x51 (_ bv0 32))))
 (let (($x366 (=> $x57 $x87)))
 (let (($x346 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x291 (= $x57 $x346)))
 (let (($x86 (and (and (and $x291 $x366) $x397) $x94)))
 (let (($x236 (and $x86 $x364)))
 (let ((?x285 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x7 (= ?x285 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x363 (=> $x391 $x7)))
 (let (($x233 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x192 (= $x391 $x233)))
 (let (($x21 (= ?x163 (_ bv0 32))))
 (let (($x289 (=> $x21 $x87)))
 (let (($x79 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x401 (= $x21 $x79)))
 (let (($x353 (and (and (and $x401 $x289) $x192) $x363)))
 (let (($x126 (and $x353 $x236)))
 (let ((?x60 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x6 (= ?x60 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x183 (bvuge ?x202 (_ bv1 32))))
 (let (($x50 (=> $x183 $x6)))
 (let (($x304 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x56 (= $x183 $x304)))
 (let (($x59 (and (and (= $x208 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x208 $x87)) $x56)))
 (let (($x238 (and $x59 $x50)))
 (let (($x23 (and $x238 $x126)))
 (let (($x317 (= ?x339 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x62 (=> $x347 $x317)))
 (let (($x104 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x160 (= $x347 $x104)))
 (let (($x49 (= ?x259 (_ bv0 32))))
 (let (($x174 (=> $x49 $x87)))
 (let (($x212 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x89 (= $x49 $x212)))
 (let (($x78 (and (and (and $x89 $x174) $x160) $x62)))
 (let (($x185 (and $x78 $x23)))
 (let (($x371 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x43 (and $x371 $x185)))
 (let (($x234 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x244 (and $x234 $x43)))
 (let (($x318 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x274 (and $x318 $x244)))
 (let (($x132 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x53 (and $x132 $x274)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x381 (and $x42 $x53)))
 (let (($x228 (and $x87 $x381)))
 (let (($x252 (= ?x302 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x18 (and $x252 $x228)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x102 (and $x129 $x18)))
 (let (($x109 (and $x87 $x102)))
 (let (($x260 (= ?x285 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x387 (and $x260 $x109)))
 (let (($x265 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x36 (and $x265 $x387)))
 (let (($x142 (and $x87 $x36)))
 (let (($x273 (= ?x60 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x164 (and $x273 $x142)))
 (let (($x8 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x16 (and $x8 $x164)))
 (let (($x213 (and $x87 $x16)))
 (let (($x305 (= ?x339 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x105 (and $x305 $x213)))
 (let (($x121 (bvugt ?x222 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x370 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x316)))
 (let (($x209 (=> (bvule ?x222 (bvsub (bvadd ?x222 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x370 $x121)))))))
 (let (($x101 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x303 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x312)))
 (let (($x176 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x303 $x101)))))))
 (let (($x248 (bvugt ?x145 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x231 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x229 (=> (bvule ?x145 (bvsub (bvadd ?x145 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x231 $x248)))))))
 (let (($x135 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x299 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x357 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x299 $x135)))))))
 (let (($x95 (and $x357 $x229)))
 (let (($x272 (and $x95 $x176)))
 (let (($x377 (and $x272 $x209)))
 (let (($x114 (and $x377 $x105)))
 (let (($x219 (=> $x114 $x292)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 62
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x302 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x256 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x91 (bvadd ?x256 ?x302)))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x380 (concat ?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x298 (bvadd ?x271 (_ bv3 32))))
 (let ((?x359 (concat (select input.dst.llvm-mem ?x298) (concat ?x403 ?x380))))
 (let ((?x331 (bvmul (_ bv4294967295 32) ?x359)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x262 (concat ?x181 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x330 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x226 (bvadd ?x330 (_ bv3 32))))
 (let ((?x162 (concat (select input.dst.llvm-mem ?x226) (concat ?x93 ?x262))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x131 (concat ?x80 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x195 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x385 (bvadd ?x195 (_ bv3 32))))
 (let ((?x219 (concat (select input.dst.llvm-mem ?x385) (concat ?x83 ?x131))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x41)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x39)))
 (let ((?x147 (bvadd (bvadd (bvadd ?x367 ?x219) ?x162) ?x331)))
 (let (($x161 (= ?x147 ?x91)))
 (let (($x58 (= $x161 true)))
 (let ((?x244 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x387 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x36 (concat ?x387 (concat ?x18 (concat ?x53 ?x244)))))
 (let (($x55 (= ?x36 input.dst.llvm-%m)))
 (let (($x88 (= $x55 true)))
 (let (($x106 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x90 (= (bvand ?x330 (_ bv4294967292 32)) ?x330)))
 (let (($x26 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x330 (bvsub ?x330 (_ bv4 32))) (bvult ?x330 (bvsub ?x330 (_ bv4 32))))))
 (let (($x92 (and true $x26)))
 (let (($x293 (= (bvand ?x195 (_ bv4294967292 32)) ?x195)))
 (let (($x150 (and $x293 $x92)))
 (let (($x211 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x319 (and (and (and true $x211) $x150) $x90)))
 (let (($x290 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x107 (and true $x290)))
 (let (($x210 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x75 (and $x210 $x107)))
 (let (($x322 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x195 (bvsub ?x195 (_ bv12 32))) (bvult ?x195 (bvsub ?x195 (_ bv12 32))))))
 (let (($x253 (and (and (and true $x210) $x322) $x75)))
 (let (($x16 (and (and $x253 $x319) $x106)))
 (let (($x142 (= input.dst.llvm-%m ?x36)))
 (let ((?x236 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x126 (= (_ bv0 32) ?x236)))
 (let ((?x46 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x364 (and $x29 $x120)))
 (let (($x23 (and $x364 $x126)))
 (let (($x52 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (and $x52 $x23)))
 (let (($x125 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x270 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x348 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x270 $x125)))))))
 (let (($x114 (and (and (and $x348 $x185) $x142) $x16)))
 (let (($x128 (forall ((input.ind-%var4013X (_ BitVec 32)) )(let ((?x191 (bvadd (bvmul input.ind-%var4013X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv1 32))) (select input.dst.llvm-mem ?x191))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv2 32))) ?x133))))
 (let ((?x60 (input.spec-%var-m-0.1.1 input.ind-%var4013X)))
 (let (($x87 (input.spec-%var-m-0.0.1 input.ind-%var4013X)))
 (=> $x87 (= ?x60 ?x139))))))))
 ))
 (let (($x235 (forall ((input.ind-%var4012X (_ BitVec 32)) )(let (($x87 (input.spec-%var-m-0.0.1 input.ind-%var4012X)))
 (= $x87 (and (bvule (_ bv0 32) input.ind-%var4012X) (bvult input.ind-%var4012X (_ bv100 32))))))
 ))
 (let (($x306 (and $x235 $x128)))
 (let (($x328 (and $x306 $x114)))
 (let (($x358 (= $x328 true)))
 (let (($x119 (= $x253 true)))
 (let (($x283 (and $x319 $x106)))
 (let (($x11 (= $x283 true)))
 (let (($x334 (and $x11 $x119)))
 (let (($x117 (and $x334 $x358)))
 (let (($x263 (and $x117 $x88)))
 (let (($x76 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x9 (ite $x76 (_ bv1 32) (_ bv0 32))))
 (let (($x183 (= ?x9 (_ bv0 32))))
 (let (($x89 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x220 (ite $x89 (_ bv1 32) (_ bv0 32))))
 (let (($x347 (= ?x220 (_ bv0 32))))
 (let (($x300 (and $x347 $x183)))
 (let (($x289 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x186 (ite $x289 (_ bv1 32) (_ bv0 32))))
 (let (($x7 (bvuge ?x186 (_ bv1 32))))
 (let (($x373 (and $x7 $x300)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x399 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (bvuge ?x399 (_ bv1 32))))
 (let (($x168 (and $x327 $x373)))
 (let (($x47 (and $x168 $x263)))
 (let (($x294 (= ?x256 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x158 (=> $x327 $x294)))
 (let (($x94 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x86 (= $x327 $x94)))
 (let (($x121 (= false false)))
 (let (($x338 (= ?x399 (_ bv0 32))))
 (let (($x329 (=> $x338 $x121)))
 (let (($x397 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x310 (= $x338 $x397)))
 (let (($x204 (and (and (and $x310 $x329) $x86) $x158)))
 (let (($x48 (and $x204 $x47)))
 (let (($x51 (= ?x302 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x57 (=> $x7 $x51)))
 (let (($x363 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x353 (= $x7 $x363)))
 (let (($x391 (= ?x186 (_ bv0 32))))
 (let (($x320 (=> $x391 $x121)))
 (let (($x192 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x67 (= $x391 $x192)))
 (let (($x291 (and (and (and $x67 $x320) $x353) $x57)))
 (let (($x31 (and $x291 $x48)))
 (let ((?x285 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x163 (= ?x285 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x6 (bvuge ?x9 (_ bv1 32))))
 (let (($x21 (=> $x6 $x163)))
 (let (($x50 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x238 (= $x6 $x50)))
 (let (($x79 (and (and (= $x183 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x183 $x121)) $x238)))
 (let (($x401 (and $x79 $x21)))
 (let (($x173 (and $x401 $x31)))
 (let ((?x377 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x202 (= ?x377 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x317 (bvuge ?x220 (_ bv1 32))))
 (let (($x208 (=> $x317 $x202)))
 (let (($x62 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x78 (= $x317 $x62)))
 (let (($x175 (=> $x347 $x121)))
 (let (($x160 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x157 (= $x347 $x160)))
 (let (($x54 (and (and (and $x157 $x175) $x78) $x208)))
 (let (($x113 (and $x54 $x173)))
 (let (($x212 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x178 (and $x212 $x113)))
 (let (($x49 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x368 (and $x49 $x178)))
 (let (($x282 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x216 (and $x282 $x368)))
 (let (($x288 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x335 (and $x288 $x216)))
 (let (($x340 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x404 (and $x340 $x335)))
 (let (($x247 (and $x121 $x404)))
 (let (($x362 (= ?x256 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x254 (and $x362 $x247)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x171 (and $x42 $x254)))
 (let (($x311 (and $x121 $x171)))
 (let (($x252 (= ?x302 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x333 (and $x252 $x311)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x297 (and $x129 $x333)))
 (let (($x375 (and $x121 $x297)))
 (let (($x260 (= ?x285 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x356 (and $x260 $x375)))
 (let (($x205 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x34 (and $x205 $x356)))
 (let (($x167 (and $x121 $x34)))
 (let (($x316 (= ?x377 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x275 (and $x316 $x167)))
 (let (($x237 (bvugt ?x330 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x325 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x226)))
 (let (($x111 (=> (bvule ?x330 (bvsub (bvadd ?x330 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x325 $x237)))))))
 (let (($x180 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x146 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x180)))))))
 (let (($x299 (bvugt ?x195 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x385)))
 (let (($x77 (=> (bvule ?x195 (bvsub (bvadd ?x195 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x299)))))))
 (let (($x357 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x261 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x248 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x261 $x357)))))))
 (let (($x392 (and $x248 $x77)))
 (let (($x214 (and $x392 $x146)))
 (let (($x176 (and $x214 $x111)))
 (let (($x203 (and $x176 $x275)))
 (let (($x351 (=> $x203 $x58)))
 (not $x351))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x302 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x256 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x91 (bvadd ?x256 ?x302)))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x380 (concat ?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x298 (bvadd ?x271 (_ bv3 32))))
 (let ((?x359 (concat (select input.dst.llvm-mem ?x298) (concat ?x403 ?x380))))
 (let ((?x331 (bvmul (_ bv4294967295 32) ?x359)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x262 (concat ?x181 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x330 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x226 (bvadd ?x330 (_ bv3 32))))
 (let ((?x162 (concat (select input.dst.llvm-mem ?x226) (concat ?x93 ?x262))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x131 (concat ?x80 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x195 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x385 (bvadd ?x195 (_ bv3 32))))
 (let ((?x219 (concat (select input.dst.llvm-mem ?x385) (concat ?x83 ?x131))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x41)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x39)))
 (let ((?x147 (bvadd (bvadd (bvadd ?x367 ?x219) ?x162) ?x331)))
 (let (($x161 (= ?x147 ?x91)))
 (let (($x58 (= $x161 true)))
 (let ((?x244 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x387 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x36 (concat ?x387 (concat ?x18 (concat ?x53 ?x244)))))
 (let (($x55 (= ?x36 input.dst.llvm-%m)))
 (let (($x88 (= $x55 true)))
 (let (($x106 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x90 (= (bvand ?x330 (_ bv4294967292 32)) ?x330)))
 (let (($x26 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x330 (bvsub ?x330 (_ bv4 32))) (bvult ?x330 (bvsub ?x330 (_ bv4 32))))))
 (let (($x92 (and true $x26)))
 (let (($x293 (= (bvand ?x195 (_ bv4294967292 32)) ?x195)))
 (let (($x150 (and $x293 $x92)))
 (let (($x211 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x319 (and (and (and true $x211) $x150) $x90)))
 (let (($x290 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x107 (and true $x290)))
 (let (($x210 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x75 (and $x210 $x107)))
 (let (($x322 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x195 (bvsub ?x195 (_ bv12 32))) (bvult ?x195 (bvsub ?x195 (_ bv12 32))))))
 (let (($x253 (and (and (and true $x210) $x322) $x75)))
 (let (($x16 (and (and $x253 $x319) $x106)))
 (let (($x142 (= input.dst.llvm-%m ?x36)))
 (let ((?x236 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x126 (= (_ bv0 32) ?x236)))
 (let ((?x46 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x364 (and $x29 $x120)))
 (let (($x23 (and $x364 $x126)))
 (let (($x52 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (and $x52 $x23)))
 (let (($x125 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x270 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x348 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x270 $x125)))))))
 (let (($x114 (and (and (and $x348 $x185) $x142) $x16)))
 (let (($x128 (forall ((input.ind-%var4013X (_ BitVec 32)) )(let ((?x191 (bvadd (bvmul input.ind-%var4013X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv1 32))) (select input.dst.llvm-mem ?x191))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv2 32))) ?x133))))
 (let ((?x60 (input.spec-%var-m-0.1.1 input.ind-%var4013X)))
 (let (($x87 (input.spec-%var-m-0.0.1 input.ind-%var4013X)))
 (=> $x87 (= ?x60 ?x139))))))))
 ))
 (let (($x235 (forall ((input.ind-%var4012X (_ BitVec 32)) )(let (($x87 (input.spec-%var-m-0.0.1 input.ind-%var4012X)))
 (= $x87 (and (bvule (_ bv0 32) input.ind-%var4012X) (bvult input.ind-%var4012X (_ bv100 32))))))
 ))
 (let (($x306 (and $x235 $x128)))
 (let (($x328 (and $x306 $x114)))
 (let (($x358 (= $x328 true)))
 (let (($x119 (= $x253 true)))
 (let (($x283 (and $x319 $x106)))
 (let (($x11 (= $x283 true)))
 (let (($x334 (and $x11 $x119)))
 (let (($x117 (and $x334 $x358)))
 (let (($x263 (and $x117 $x88)))
 (let (($x76 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x9 (ite $x76 (_ bv1 32) (_ bv0 32))))
 (let (($x183 (= ?x9 (_ bv0 32))))
 (let (($x89 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x220 (ite $x89 (_ bv1 32) (_ bv0 32))))
 (let (($x347 (= ?x220 (_ bv0 32))))
 (let (($x300 (and $x347 $x183)))
 (let (($x289 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x186 (ite $x289 (_ bv1 32) (_ bv0 32))))
 (let (($x7 (bvuge ?x186 (_ bv1 32))))
 (let (($x373 (and $x7 $x300)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x399 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x327 (bvuge ?x399 (_ bv1 32))))
 (let (($x168 (and $x327 $x373)))
 (let (($x47 (and $x168 $x263)))
 (let (($x294 (= ?x256 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x158 (=> $x327 $x294)))
 (let (($x94 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x86 (= $x327 $x94)))
 (let (($x121 (= false false)))
 (let (($x338 (= ?x399 (_ bv0 32))))
 (let (($x329 (=> $x338 $x121)))
 (let (($x397 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x310 (= $x338 $x397)))
 (let (($x204 (and (and (and $x310 $x329) $x86) $x158)))
 (let (($x48 (and $x204 $x47)))
 (let (($x51 (= ?x302 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x57 (=> $x7 $x51)))
 (let (($x363 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x353 (= $x7 $x363)))
 (let (($x391 (= ?x186 (_ bv0 32))))
 (let (($x320 (=> $x391 $x121)))
 (let (($x192 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x67 (= $x391 $x192)))
 (let (($x291 (and (and (and $x67 $x320) $x353) $x57)))
 (let (($x31 (and $x291 $x48)))
 (let ((?x285 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x163 (= ?x285 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x6 (bvuge ?x9 (_ bv1 32))))
 (let (($x21 (=> $x6 $x163)))
 (let (($x50 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x238 (= $x6 $x50)))
 (let (($x79 (and (and (= $x183 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x183 $x121)) $x238)))
 (let (($x401 (and $x79 $x21)))
 (let (($x173 (and $x401 $x31)))
 (let ((?x377 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x202 (= ?x377 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x317 (bvuge ?x220 (_ bv1 32))))
 (let (($x208 (=> $x317 $x202)))
 (let (($x62 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x78 (= $x317 $x62)))
 (let (($x175 (=> $x347 $x121)))
 (let (($x160 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x157 (= $x347 $x160)))
 (let (($x54 (and (and (and $x157 $x175) $x78) $x208)))
 (let (($x113 (and $x54 $x173)))
 (let (($x212 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x178 (and $x212 $x113)))
 (let (($x49 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x368 (and $x49 $x178)))
 (let (($x282 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x216 (and $x282 $x368)))
 (let (($x288 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x335 (and $x288 $x216)))
 (let (($x340 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x404 (and $x340 $x335)))
 (let (($x247 (and $x121 $x404)))
 (let (($x362 (= ?x256 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x254 (and $x362 $x247)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x171 (and $x42 $x254)))
 (let (($x311 (and $x121 $x171)))
 (let (($x252 (= ?x302 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x333 (and $x252 $x311)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x297 (and $x129 $x333)))
 (let (($x375 (and $x121 $x297)))
 (let (($x260 (= ?x285 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x356 (and $x260 $x375)))
 (let (($x205 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x34 (and $x205 $x356)))
 (let (($x167 (and $x121 $x34)))
 (let (($x316 (= ?x377 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x275 (and $x316 $x167)))
 (let (($x237 (bvugt ?x330 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x325 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x226)))
 (let (($x111 (=> (bvule ?x330 (bvsub (bvadd ?x330 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x325 $x237)))))))
 (let (($x180 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x146 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x180)))))))
 (let (($x299 (bvugt ?x195 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x385)))
 (let (($x77 (=> (bvule ?x195 (bvsub (bvadd ?x195 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x299)))))))
 (let (($x357 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x261 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x248 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x261 $x357)))))))
 (let (($x392 (and $x248 $x77)))
 (let (($x214 (and $x392 $x146)))
 (let (($x176 (and $x214 $x111)))
 (let (($x203 (and $x176 $x275)))
 (let (($x351 (=> $x203 $x58)))
 (not $x351))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 63
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x302 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x350 (bvmul (_ bv4294967295 32) ?x302)))
 (let ((?x389 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x350)))
 (let ((?x295 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x184 (concat ?x295 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x376 (bvadd ?x271 (_ bv3 32))))
 (let ((?x65 (concat (select input.dst.llvm-mem ?x376) (concat ?x15 ?x184))))
 (let ((?x378 (bvmul (_ bv4294967295 32) ?x65)))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x174 (concat ?x43 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x101 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x257 (bvadd ?x101 (_ bv3 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem ?x257) (concat ?x66 ?x174))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x331 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x255 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x372 (bvadd ?x255 (_ bv3 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem ?x372) (concat ?x161 ?x147))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x74)))
 (let ((?x380 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x198)))
 (let ((?x243 (bvadd (bvadd (bvadd ?x380 ?x326) ?x69) ?x378)))
 (let (($x100 (= ?x243 ?x389)))
 (let (($x118 (= $x100 true)))
 (let ((?x368 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x335 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x297 (concat ?x333 (concat ?x254 (concat ?x335 ?x368)))))
 (let (($x280 (= ?x297 input.dst.llvm-%m)))
 (let (($x96 (= $x280 true)))
 (let (($x148 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x283 (= (bvand ?x101 (_ bv4294967292 32)) ?x101)))
 (let (($x90 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x101 (bvsub ?x101 (_ bv4 32))) (bvult ?x101 (bvsub ?x101 (_ bv4 32))))))
 (let (($x319 (and true $x90)))
 (let (($x26 (= (bvand ?x255 (_ bv4294967292 32)) ?x255)))
 (let (($x278 (and $x26 $x319)))
 (let (($x137 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x210 (and (and (and true $x137) $x278) $x283)))
 (let (($x119 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x334 (and true $x119)))
 (let (($x322 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x323 (and $x322 $x334)))
 (let (($x301 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x255 (bvsub ?x255 (_ bv12 32))) (bvult ?x255 (bvsub ?x255 (_ bv12 32))))))
 (let (($x287 (and (and (and true $x322) $x301) $x323)))
 (let (($x34 (and (and $x287 $x210) $x148)))
 (let (($x375 (= input.dst.llvm-%m ?x297)))
 (let ((?x48 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x31 (= (_ bv0 32) ?x48)))
 (let ((?x88 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x55 $x263)))
 (let (($x173 (and $x47 $x31)))
 (let (($x244 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x113 (and $x244 $x173)))
 (let (($x105 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x105)))))))
 (let (($x203 (and (and (and $x117 $x113) $x375) $x34)))
 (let (($x228 (forall ((input.ind-%var4057X (_ BitVec 32)) )(let ((?x45 (bvadd (bvmul input.ind-%var4057X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x120))))
 (let ((?x285 (input.spec-%var-m-0.1.1 input.ind-%var4057X)))
 (let (($x121 (input.spec-%var-m-0.0.1 input.ind-%var4057X)))
 (=> $x121 (= ?x285 ?x213))))))))
 ))
 (let (($x241 (forall ((input.ind-%var4056X (_ BitVec 32)) )(let (($x121 (input.spec-%var-m-0.0.1 input.ind-%var4056X)))
 (= $x121 (and (bvule (_ bv0 32) input.ind-%var4056X) (bvult input.ind-%var4056X (_ bv100 32))))))
 ))
 (let (($x18 (and $x241 $x228)))
 (let (($x81 (and $x18 $x203)))
 (let (($x218 (= $x81 true)))
 (let (($x221 (= $x287 true)))
 (let (($x193 (and $x210 $x148)))
 (let (($x140 (= $x193 true)))
 (let (($x360 (and $x140 $x221)))
 (let (($x227 (and $x360 $x218)))
 (let (($x268 (and $x227 $x96)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x383 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x163 (bvuge ?x383 (_ bv1 32))))
 (let (($x157 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x28 (ite $x157 (_ bv1 32) (_ bv0 32))))
 (let (($x202 (bvuge ?x28 (_ bv1 32))))
 (let (($x149 (and $x202 $x163)))
 (let (($x320 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x5 (ite $x320 (_ bv1 32) (_ bv0 32))))
 (let (($x7 (= ?x5 (_ bv0 32))))
 (let (($x211 (and $x7 $x149)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x172 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x172 (_ bv1 32))))
 (let (($x250 (and $x294 $x211)))
 (let (($x41 (and $x250 $x268)))
 (let ((?x234 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x373 (= ?x234 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x168 (=> $x294 $x373)))
 (let (($x158 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x204 (= $x294 $x158)))
 (let (($x237 (= false false)))
 (let (($x327 (= ?x172 (_ bv0 32))))
 (let (($x116 (=> $x327 $x237)))
 (let (($x86 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x332 (= $x327 $x86)))
 (let (($x349 (and (and (and $x332 $x116) $x204) $x168)))
 (let (($x39 (and $x349 $x41)))
 (let ((?x256 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x399 (= ?x256 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x51 (bvuge ?x5 (_ bv1 32))))
 (let (($x338 (=> $x51 $x399)))
 (let (($x57 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x291 (= $x51 $x57)))
 (let (($x397 (and (and (= $x7 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x7 $x237)) $x291)))
 (let (($x310 (and $x397 $x338)))
 (let (($x367 (and $x310 $x39)))
 (let (($x186 (= ?x302 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x391 (=> $x163 $x186)))
 (let (($x21 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x401 (= $x163 $x21)))
 (let (($x6 (= ?x383 (_ bv0 32))))
 (let (($x155 (=> $x6 $x237)))
 (let (($x238 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x79 (= $x6 $x238)))
 (let (($x67 (and (and (and $x79 $x155) $x401) $x391)))
 (let (($x292 (and $x67 $x367)))
 (let ((?x176 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x9 (= ?x176 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x183 (=> $x202 $x9)))
 (let (($x208 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x54 (= $x202 $x208)))
 (let (($x317 (= ?x28 (_ bv0 32))))
 (let (($x382 (=> $x317 $x237)))
 (let (($x78 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x85 (= $x317 $x78)))
 (let (($x59 (and (and (and $x85 $x382) $x54) $x183)))
 (let (($x156 (and $x59 $x292)))
 (let (($x160 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x83 (and $x160 $x156)))
 (let (($x347 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x369 (and $x347 $x83)))
 (let (($x89 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x80 (and $x89 $x369)))
 (let (($x361 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x393 (and $x361 $x80)))
 (let (($x259 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x131 (and $x259 $x393)))
 (let (($x240 (and $x237 $x131)))
 (let (($x371 (= ?x234 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x219 (and $x371 $x240)))
 (let (($x340 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x182 (and $x340 $x219)))
 (let (($x321 (and $x237 $x182)))
 (let (($x362 (= ?x256 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x245 (and $x362 $x321)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x93 (and $x42 $x245)))
 (let (($x141 (and $x237 $x93)))
 (let (($x252 (= ?x302 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x181 (and $x252 $x141)))
 (let (($x370 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x207 (and $x370 $x181)))
 (let (($x262 (and $x237 $x207)))
 (let (($x226 (= ?x176 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x159 (and $x226 $x262)))
 (let (($x402 (bvugt ?x101 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x257)))
 (let (($x324 (=> (bvule ?x101 (bvsub (bvadd ?x101 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x209 $x402)))))))
 (let (($x135 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x376)))
 (let (($x312 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x135)))))))
 (let (($x261 (bvugt ?x255 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x372)))
 (let (($x95 (=> (bvule ?x255 (bvsub (bvadd ?x255 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x261)))))))
 (let (($x248 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x264 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x223 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x264)))
 (let (($x299 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x223 $x248)))))))
 (let (($x177 (and $x299 $x95)))
 (let (($x309 (and $x177 $x312)))
 (let (($x146 (and $x309 $x324)))
 (let (($x162 (and $x146 $x159)))
 (let (($x17 (=> $x162 $x118)))
 (not $x17)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x302 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x350 (bvmul (_ bv4294967295 32) ?x302)))
 (let ((?x389 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x350)))
 (let ((?x295 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x184 (concat ?x295 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x376 (bvadd ?x271 (_ bv3 32))))
 (let ((?x65 (concat (select input.dst.llvm-mem ?x376) (concat ?x15 ?x184))))
 (let ((?x378 (bvmul (_ bv4294967295 32) ?x65)))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x174 (concat ?x43 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x101 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x257 (bvadd ?x101 (_ bv3 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem ?x257) (concat ?x66 ?x174))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x331 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x255 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x372 (bvadd ?x255 (_ bv3 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem ?x372) (concat ?x161 ?x147))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x74)))
 (let ((?x380 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x198)))
 (let ((?x243 (bvadd (bvadd (bvadd ?x380 ?x326) ?x69) ?x378)))
 (let (($x100 (= ?x243 ?x389)))
 (let (($x118 (= $x100 true)))
 (let ((?x368 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x335 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x297 (concat ?x333 (concat ?x254 (concat ?x335 ?x368)))))
 (let (($x280 (= ?x297 input.dst.llvm-%m)))
 (let (($x96 (= $x280 true)))
 (let (($x148 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x283 (= (bvand ?x101 (_ bv4294967292 32)) ?x101)))
 (let (($x90 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x101 (bvsub ?x101 (_ bv4 32))) (bvult ?x101 (bvsub ?x101 (_ bv4 32))))))
 (let (($x319 (and true $x90)))
 (let (($x26 (= (bvand ?x255 (_ bv4294967292 32)) ?x255)))
 (let (($x278 (and $x26 $x319)))
 (let (($x137 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x210 (and (and (and true $x137) $x278) $x283)))
 (let (($x119 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x334 (and true $x119)))
 (let (($x322 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x323 (and $x322 $x334)))
 (let (($x301 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x255 (bvsub ?x255 (_ bv12 32))) (bvult ?x255 (bvsub ?x255 (_ bv12 32))))))
 (let (($x287 (and (and (and true $x322) $x301) $x323)))
 (let (($x34 (and (and $x287 $x210) $x148)))
 (let (($x375 (= input.dst.llvm-%m ?x297)))
 (let ((?x48 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x31 (= (_ bv0 32) ?x48)))
 (let ((?x88 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x263 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x55 $x263)))
 (let (($x173 (and $x47 $x31)))
 (let (($x244 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x113 (and $x244 $x173)))
 (let (($x105 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x105)))))))
 (let (($x203 (and (and (and $x117 $x113) $x375) $x34)))
 (let (($x228 (forall ((input.ind-%var4057X (_ BitVec 32)) )(let ((?x45 (bvadd (bvmul input.ind-%var4057X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x120))))
 (let ((?x285 (input.spec-%var-m-0.1.1 input.ind-%var4057X)))
 (let (($x121 (input.spec-%var-m-0.0.1 input.ind-%var4057X)))
 (=> $x121 (= ?x285 ?x213))))))))
 ))
 (let (($x241 (forall ((input.ind-%var4056X (_ BitVec 32)) )(let (($x121 (input.spec-%var-m-0.0.1 input.ind-%var4056X)))
 (= $x121 (and (bvule (_ bv0 32) input.ind-%var4056X) (bvult input.ind-%var4056X (_ bv100 32))))))
 ))
 (let (($x18 (and $x241 $x228)))
 (let (($x81 (and $x18 $x203)))
 (let (($x218 (= $x81 true)))
 (let (($x221 (= $x287 true)))
 (let (($x193 (and $x210 $x148)))
 (let (($x140 (= $x193 true)))
 (let (($x360 (and $x140 $x221)))
 (let (($x227 (and $x360 $x218)))
 (let (($x268 (and $x227 $x96)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x383 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x163 (bvuge ?x383 (_ bv1 32))))
 (let (($x157 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x28 (ite $x157 (_ bv1 32) (_ bv0 32))))
 (let (($x202 (bvuge ?x28 (_ bv1 32))))
 (let (($x149 (and $x202 $x163)))
 (let (($x320 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x5 (ite $x320 (_ bv1 32) (_ bv0 32))))
 (let (($x7 (= ?x5 (_ bv0 32))))
 (let (($x211 (and $x7 $x149)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x172 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x172 (_ bv1 32))))
 (let (($x250 (and $x294 $x211)))
 (let (($x41 (and $x250 $x268)))
 (let ((?x234 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x373 (= ?x234 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x168 (=> $x294 $x373)))
 (let (($x158 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x204 (= $x294 $x158)))
 (let (($x237 (= false false)))
 (let (($x327 (= ?x172 (_ bv0 32))))
 (let (($x116 (=> $x327 $x237)))
 (let (($x86 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x332 (= $x327 $x86)))
 (let (($x349 (and (and (and $x332 $x116) $x204) $x168)))
 (let (($x39 (and $x349 $x41)))
 (let ((?x256 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x399 (= ?x256 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x51 (bvuge ?x5 (_ bv1 32))))
 (let (($x338 (=> $x51 $x399)))
 (let (($x57 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x291 (= $x51 $x57)))
 (let (($x397 (and (and (= $x7 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x7 $x237)) $x291)))
 (let (($x310 (and $x397 $x338)))
 (let (($x367 (and $x310 $x39)))
 (let (($x186 (= ?x302 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x391 (=> $x163 $x186)))
 (let (($x21 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x401 (= $x163 $x21)))
 (let (($x6 (= ?x383 (_ bv0 32))))
 (let (($x155 (=> $x6 $x237)))
 (let (($x238 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x79 (= $x6 $x238)))
 (let (($x67 (and (and (and $x79 $x155) $x401) $x391)))
 (let (($x292 (and $x67 $x367)))
 (let ((?x176 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x9 (= ?x176 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x183 (=> $x202 $x9)))
 (let (($x208 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x54 (= $x202 $x208)))
 (let (($x317 (= ?x28 (_ bv0 32))))
 (let (($x382 (=> $x317 $x237)))
 (let (($x78 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x85 (= $x317 $x78)))
 (let (($x59 (and (and (and $x85 $x382) $x54) $x183)))
 (let (($x156 (and $x59 $x292)))
 (let (($x160 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x83 (and $x160 $x156)))
 (let (($x347 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x369 (and $x347 $x83)))
 (let (($x89 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x80 (and $x89 $x369)))
 (let (($x361 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x393 (and $x361 $x80)))
 (let (($x259 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x131 (and $x259 $x393)))
 (let (($x240 (and $x237 $x131)))
 (let (($x371 (= ?x234 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x219 (and $x371 $x240)))
 (let (($x340 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x182 (and $x340 $x219)))
 (let (($x321 (and $x237 $x182)))
 (let (($x362 (= ?x256 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x245 (and $x362 $x321)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x93 (and $x42 $x245)))
 (let (($x141 (and $x237 $x93)))
 (let (($x252 (= ?x302 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x181 (and $x252 $x141)))
 (let (($x370 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x207 (and $x370 $x181)))
 (let (($x262 (and $x237 $x207)))
 (let (($x226 (= ?x176 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x159 (and $x226 $x262)))
 (let (($x402 (bvugt ?x101 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x257)))
 (let (($x324 (=> (bvule ?x101 (bvsub (bvadd ?x101 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x209 $x402)))))))
 (let (($x135 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x376)))
 (let (($x312 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x135)))))))
 (let (($x261 (bvugt ?x255 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x372)))
 (let (($x95 (=> (bvule ?x255 (bvsub (bvadd ?x255 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x261)))))))
 (let (($x248 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x264 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x223 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x264)))
 (let (($x299 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x223 $x248)))))))
 (let (($x177 (and $x299 $x95)))
 (let (($x309 (and $x177 $x312)))
 (let (($x146 (and $x309 $x324)))
 (let (($x162 (and $x146 $x159)))
 (let (($x17 (=> $x162 $x118)))
 (not $x17)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 221 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 64
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x256 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x235 (bvmul (_ bv4294967295 32) ?x256)))
 (let ((?x49 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x191 (bvadd ?x49 ?x235)))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x125 (concat ?x396 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x145 (bvadd ?x271 (_ bv3 32))))
 (let ((?x82 (concat (select input.dst.llvm-mem ?x145) (concat ?x308 ?x125))))
 (let ((?x128 (bvmul (_ bv4294967295 32) ?x82)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x274 (concat ?x189 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x180 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x222 (bvadd ?x180 (_ bv3 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem ?x222) (concat ?x175 ?x274))))
 (let ((?x378 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x378 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x166 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x122 (bvadd ?x166 (_ bv3 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem ?x122) (concat ?x350 ?x243))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x249)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x295)))
 (let ((?x71 (bvadd (bvadd (bvadd ?x184 ?x118) ?x30) ?x128)))
 (let (($x108 (= ?x71 ?x191)))
 (let (($x84 (= $x108 true)))
 (let ((?x369 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x393 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x245 (concat ?x219 (concat ?x393 ?x369)))))
 (let (($x390 (= ?x93 input.dst.llvm-%m)))
 (let (($x342 (= $x390 true)))
 (let (($x124 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x193 (= (bvand ?x180 (_ bv4294967292 32)) ?x180)))
 (let (($x283 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x180 (bvsub ?x180 (_ bv4 32))) (bvult ?x180 (bvsub ?x180 (_ bv4 32))))))
 (let (($x210 (and true $x283)))
 (let (($x90 (= (bvand ?x166 (_ bv4294967292 32)) ?x166)))
 (let (($x206 (and $x90 $x210)))
 (let (($x92 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x322 (and (and (and true $x92) $x206) $x193)))
 (let (($x221 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x360 (and true $x221)))
 (let (($x301 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x265 (and $x301 $x360)))
 (let (($x253 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x166 (bvsub ?x166 (_ bv12 32))) (bvult ?x166 (bvsub ?x166 (_ bv12 32))))))
 (let (($x343 (and (and (and true $x301) $x253) $x265)))
 (let (($x207 (and (and $x343 $x322) $x124)))
 (let (($x141 (= input.dst.llvm-%m ?x93)))
 (let ((?x39 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x367 (= (_ bv0 32) ?x39)))
 (let ((?x96 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x268 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x280 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x280 $x268)))
 (let (($x292 (and $x41 $x367)))
 (let (($x368 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (and $x368 $x292)))
 (let (($x275 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x375 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x227 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x375 $x275)))))))
 (let (($x162 (and (and (and $x227 $x156) $x141) $x207)))
 (let (($x247 (forall ((input.ind-%var4101X (_ BitVec 32)) )(let ((?x53 (bvadd (bvmul input.ind-%var4101X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x263))))
 (let ((?x302 (input.spec-%var-m-0.1.1 input.ind-%var4101X)))
 (let (($x237 (input.spec-%var-m-0.0.1 input.ind-%var4101X)))
 (=> $x237 (= ?x302 ?x167))))))))
 ))
 (let (($x46 (forall ((input.ind-%var4100X (_ BitVec 32)) )(let (($x237 (input.spec-%var-m-0.0.1 input.ind-%var4100X)))
 (= $x237 (and (bvule (_ bv0 32) input.ind-%var4100X) (bvult input.ind-%var4100X (_ bv100 32))))))
 ))
 (let (($x254 (and $x46 $x247)))
 (let (($x388 (and $x254 $x162)))
 (let (($x403 (= $x388 true)))
 (let (($x215 (= $x343 true)))
 (let (($x355 (and $x322 $x124)))
 (let (($x394 (= $x355 true)))
 (let (($x296 (and $x394 $x215)))
 (let (($x136 (and $x296 $x403)))
 (let (($x242 (and $x136 $x342)))
 (let (($x155 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x233 (ite $x155 (_ bv1 32) (_ bv0 32))))
 (let (($x186 (bvuge ?x233 (_ bv1 32))))
 (let (($x85 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x304 (ite $x85 (_ bv1 32) (_ bv0 32))))
 (let (($x202 (= ?x304 (_ bv0 32))))
 (let (($x400 (and $x202 $x186)))
 (let (($x398 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x98 (ite $x398 (_ bv1 32) (_ bv0 32))))
 (let (($x51 (= ?x98 (_ bv0 32))))
 (let (($x137 (and $x51 $x400)))
 (let (($x116 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x10 (ite $x116 (_ bv1 32) (_ bv0 32))))
 (let (($x373 (bvuge ?x10 (_ bv1 32))))
 (let (($x11 (and $x373 $x137)))
 (let (($x74 (and $x11 $x242)))
 (let (($x211 (= ?x49 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x250 (=> $x373 $x211)))
 (let (($x168 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x349 (= $x373 $x168)))
 (let (($x402 (= false false)))
 (let (($x294 (= ?x10 (_ bv0 32))))
 (let (($x300 (=> $x294 $x402)))
 (let (($x204 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x246 (= $x294 $x204)))
 (let (($x293 (and (and (and $x246 $x300) $x349) $x250)))
 (let (($x198 (and $x293 $x74)))
 (let ((?x234 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x172 (= ?x234 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x399 (bvuge ?x98 (_ bv1 32))))
 (let (($x327 (=> $x399 $x172)))
 (let (($x338 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x310 (= $x399 $x338)))
 (let (($x86 (and (and (= $x51 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x51 $x402)) $x310)))
 (let (($x332 (and $x86 $x327)))
 (let (($x380 (and $x332 $x198)))
 (let (($x5 (= ?x256 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x7 (=> $x186 $x5)))
 (let (($x391 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x67 (= $x186 $x391)))
 (let (($x163 (= ?x233 (_ bv0 32))))
 (let (($x289 (=> $x163 $x402)))
 (let (($x401 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x192 (= $x163 $x401)))
 (let (($x346 (and (and (and $x192 $x289) $x67) $x7)))
 (let (($x351 (and $x346 $x380)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x383 (= ?x146 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x9 (bvuge ?x304 (_ bv1 32))))
 (let (($x6 (=> $x9 $x383)))
 (let (($x183 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x59 (= $x9 $x183)))
 (let (($x76 (=> $x202 $x402)))
 (let (($x54 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x56 (= $x202 $x54)))
 (let (($x79 (and (and (and $x56 $x76) $x59) $x6)))
 (let (($x91 (and $x79 $x351)))
 (let (($x78 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x161 (and $x78 $x91)))
 (let (($x317 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x359 (and $x317 $x161)))
 (let (($x157 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x331 (and $x157 $x359)))
 (let (($x104 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x336 (and $x104 $x331)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x147 (and $x220 $x336)))
 (let (($x58 (and $x402 $x147)))
 (let (($x212 (= ?x49 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x326 (and $x212 $x58)))
 (let (($x259 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x379 (and $x259 $x326)))
 (let (($x112 (and $x402 $x379)))
 (let (($x371 (= ?x234 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x25 (and $x371 $x112)))
 (let (($x340 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x66 (and $x340 $x25)))
 (let (($x134 (and $x402 $x66)))
 (let (($x362 (= ?x256 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x43 (and $x362 $x134)))
 (let (($x325 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x127 (and $x325 $x43)))
 (let (($x174 (and $x402 $x127)))
 (let (($x257 (= ?x146 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x354 (and $x257 $x174)))
 (let (($x272 (bvugt ?x180 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x339 (=> (bvule ?x180 (bvsub (bvadd ?x180 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x272)))))))
 (let (($x357 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x365 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x145)))
 (let (($x298 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x365 $x357)))))))
 (let (($x223 (bvugt ?x166 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x392 (=> (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x264 $x223)))))))
 (let (($x299 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x303 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x385 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x303)))
 (let (($x261 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x385 $x299)))))))
 (let (($x123 (and $x261 $x392)))
 (let (($x38 (and $x123 $x298)))
 (let (($x312 (and $x38 $x339)))
 (let (($x69 (and $x312 $x354)))
 (let (($x133 (=> $x69 $x84)))
 (not $x133)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x256 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x235 (bvmul (_ bv4294967295 32) ?x256)))
 (let ((?x49 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x191 (bvadd ?x49 ?x235)))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x125 (concat ?x396 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x145 (bvadd ?x271 (_ bv3 32))))
 (let ((?x82 (concat (select input.dst.llvm-mem ?x145) (concat ?x308 ?x125))))
 (let ((?x128 (bvmul (_ bv4294967295 32) ?x82)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x274 (concat ?x189 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x180 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x222 (bvadd ?x180 (_ bv3 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem ?x222) (concat ?x175 ?x274))))
 (let ((?x378 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x378 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x166 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x122 (bvadd ?x166 (_ bv3 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem ?x122) (concat ?x350 ?x243))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x249)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x295)))
 (let ((?x71 (bvadd (bvadd (bvadd ?x184 ?x118) ?x30) ?x128)))
 (let (($x108 (= ?x71 ?x191)))
 (let (($x84 (= $x108 true)))
 (let ((?x369 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x393 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x245 (concat ?x219 (concat ?x393 ?x369)))))
 (let (($x390 (= ?x93 input.dst.llvm-%m)))
 (let (($x342 (= $x390 true)))
 (let (($x124 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x193 (= (bvand ?x180 (_ bv4294967292 32)) ?x180)))
 (let (($x283 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x180 (bvsub ?x180 (_ bv4 32))) (bvult ?x180 (bvsub ?x180 (_ bv4 32))))))
 (let (($x210 (and true $x283)))
 (let (($x90 (= (bvand ?x166 (_ bv4294967292 32)) ?x166)))
 (let (($x206 (and $x90 $x210)))
 (let (($x92 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x322 (and (and (and true $x92) $x206) $x193)))
 (let (($x221 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x360 (and true $x221)))
 (let (($x301 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x265 (and $x301 $x360)))
 (let (($x253 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x166 (bvsub ?x166 (_ bv12 32))) (bvult ?x166 (bvsub ?x166 (_ bv12 32))))))
 (let (($x343 (and (and (and true $x301) $x253) $x265)))
 (let (($x207 (and (and $x343 $x322) $x124)))
 (let (($x141 (= input.dst.llvm-%m ?x93)))
 (let ((?x39 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x367 (= (_ bv0 32) ?x39)))
 (let ((?x96 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x268 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x280 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x280 $x268)))
 (let (($x292 (and $x41 $x367)))
 (let (($x368 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (and $x368 $x292)))
 (let (($x275 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x375 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x227 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x375 $x275)))))))
 (let (($x162 (and (and (and $x227 $x156) $x141) $x207)))
 (let (($x247 (forall ((input.ind-%var4101X (_ BitVec 32)) )(let ((?x53 (bvadd (bvmul input.ind-%var4101X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x263))))
 (let ((?x302 (input.spec-%var-m-0.1.1 input.ind-%var4101X)))
 (let (($x237 (input.spec-%var-m-0.0.1 input.ind-%var4101X)))
 (=> $x237 (= ?x302 ?x167))))))))
 ))
 (let (($x46 (forall ((input.ind-%var4100X (_ BitVec 32)) )(let (($x237 (input.spec-%var-m-0.0.1 input.ind-%var4100X)))
 (= $x237 (and (bvule (_ bv0 32) input.ind-%var4100X) (bvult input.ind-%var4100X (_ bv100 32))))))
 ))
 (let (($x254 (and $x46 $x247)))
 (let (($x388 (and $x254 $x162)))
 (let (($x403 (= $x388 true)))
 (let (($x215 (= $x343 true)))
 (let (($x355 (and $x322 $x124)))
 (let (($x394 (= $x355 true)))
 (let (($x296 (and $x394 $x215)))
 (let (($x136 (and $x296 $x403)))
 (let (($x242 (and $x136 $x342)))
 (let (($x155 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x233 (ite $x155 (_ bv1 32) (_ bv0 32))))
 (let (($x186 (bvuge ?x233 (_ bv1 32))))
 (let (($x85 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x304 (ite $x85 (_ bv1 32) (_ bv0 32))))
 (let (($x202 (= ?x304 (_ bv0 32))))
 (let (($x400 (and $x202 $x186)))
 (let (($x398 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x98 (ite $x398 (_ bv1 32) (_ bv0 32))))
 (let (($x51 (= ?x98 (_ bv0 32))))
 (let (($x137 (and $x51 $x400)))
 (let (($x116 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x10 (ite $x116 (_ bv1 32) (_ bv0 32))))
 (let (($x373 (bvuge ?x10 (_ bv1 32))))
 (let (($x11 (and $x373 $x137)))
 (let (($x74 (and $x11 $x242)))
 (let (($x211 (= ?x49 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x250 (=> $x373 $x211)))
 (let (($x168 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x349 (= $x373 $x168)))
 (let (($x402 (= false false)))
 (let (($x294 (= ?x10 (_ bv0 32))))
 (let (($x300 (=> $x294 $x402)))
 (let (($x204 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x246 (= $x294 $x204)))
 (let (($x293 (and (and (and $x246 $x300) $x349) $x250)))
 (let (($x198 (and $x293 $x74)))
 (let ((?x234 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x172 (= ?x234 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x399 (bvuge ?x98 (_ bv1 32))))
 (let (($x327 (=> $x399 $x172)))
 (let (($x338 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x310 (= $x399 $x338)))
 (let (($x86 (and (and (= $x51 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x51 $x402)) $x310)))
 (let (($x332 (and $x86 $x327)))
 (let (($x380 (and $x332 $x198)))
 (let (($x5 (= ?x256 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x7 (=> $x186 $x5)))
 (let (($x391 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x67 (= $x186 $x391)))
 (let (($x163 (= ?x233 (_ bv0 32))))
 (let (($x289 (=> $x163 $x402)))
 (let (($x401 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x192 (= $x163 $x401)))
 (let (($x346 (and (and (and $x192 $x289) $x67) $x7)))
 (let (($x351 (and $x346 $x380)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x383 (= ?x146 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x9 (bvuge ?x304 (_ bv1 32))))
 (let (($x6 (=> $x9 $x383)))
 (let (($x183 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x59 (= $x9 $x183)))
 (let (($x76 (=> $x202 $x402)))
 (let (($x54 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x56 (= $x202 $x54)))
 (let (($x79 (and (and (and $x56 $x76) $x59) $x6)))
 (let (($x91 (and $x79 $x351)))
 (let (($x78 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x161 (and $x78 $x91)))
 (let (($x317 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x359 (and $x317 $x161)))
 (let (($x157 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x331 (and $x157 $x359)))
 (let (($x104 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x336 (and $x104 $x331)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x147 (and $x220 $x336)))
 (let (($x58 (and $x402 $x147)))
 (let (($x212 (= ?x49 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x326 (and $x212 $x58)))
 (let (($x259 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x379 (and $x259 $x326)))
 (let (($x112 (and $x402 $x379)))
 (let (($x371 (= ?x234 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x25 (and $x371 $x112)))
 (let (($x340 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x66 (and $x340 $x25)))
 (let (($x134 (and $x402 $x66)))
 (let (($x362 (= ?x256 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x43 (and $x362 $x134)))
 (let (($x325 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x127 (and $x325 $x43)))
 (let (($x174 (and $x402 $x127)))
 (let (($x257 (= ?x146 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x354 (and $x257 $x174)))
 (let (($x272 (bvugt ?x180 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x339 (=> (bvule ?x180 (bvsub (bvadd ?x180 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x272)))))))
 (let (($x357 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x365 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x145)))
 (let (($x298 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x365 $x357)))))))
 (let (($x223 (bvugt ?x166 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x392 (=> (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x264 $x223)))))))
 (let (($x299 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x303 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x385 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x303)))
 (let (($x261 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x385 $x299)))))))
 (let (($x123 (and $x261 $x392)))
 (let (($x38 (and $x123 $x298)))
 (let (($x312 (and $x38 $x339)))
 (let (($x69 (and $x312 $x354)))
 (let (($x133 (=> $x69 $x84)))
 (not $x133)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 221 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 65
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x312 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x347 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x45 (bvadd ?x347 ?x312)))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x164 (concat ?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x195 (bvadd ?x271 (_ bv3 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem ?x195) (concat ?x36 ?x164))))
 (let ((?x102 (bvmul (_ bv4294967295 32) ?x228)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x83 (concat ?x216 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x135 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x330 (bvadd ?x135 (_ bv3 32))))
 (let ((?x285 (concat (select input.dst.llvm-mem ?x330) (concat ?x316 ?x83))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x71 (concat ?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x251 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x318 (bvadd ?x251 (_ bv3 32))))
 (let ((?x133 (concat (select input.dst.llvm-mem ?x318) (concat ?x191 ?x71))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x200)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x396)))
 (let ((?x241 (bvadd (bvadd (bvadd ?x125 ?x133) ?x285) ?x102)))
 (let (($x23 (= ?x241 ?x45)))
 (let (($x114 (= $x23 true)))
 (let ((?x359 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x336 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x25 (concat ?x326 (concat ?x336 ?x359)))))
 (let (($x12 (= ?x66 input.dst.llvm-%m)))
 (let (($x33 (= $x12 true)))
 (let (($x107 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x355 (= (bvand ?x135 (_ bv4294967292 32)) ?x135)))
 (let (($x193 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x135 (bvsub ?x135 (_ bv4 32))) (bvult ?x135 (bvsub ?x135 (_ bv4 32))))))
 (let (($x322 (and true $x193)))
 (let (($x283 (= (bvand ?x251 (_ bv4294967292 32)) ?x251)))
 (let (($x87 (and $x283 $x322)))
 (let (($x319 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x301 (and (and (and true $x319) $x87) $x355)))
 (let (($x215 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x296 (and true $x215)))
 (let (($x253 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x129 (and $x253 $x296)))
 (let (($x287 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x251 (bvsub ?x251 (_ bv12 32))) (bvult ?x251 (bvsub ?x251 (_ bv12 32))))))
 (let (($x139 (and (and (and true $x253) $x287) $x129)))
 (let (($x127 (and (and $x139 $x301) $x107)))
 (let (($x134 (= input.dst.llvm-%m ?x66)))
 (let ((?x198 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x380 (= (_ bv0 32) ?x198)))
 (let ((?x342 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x342)))
 (let (($x390 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (and $x390 $x242)))
 (let (($x351 (and $x74 $x380)))
 (let (($x369 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (and $x369 $x351)))
 (let (($x159 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x159)))))))
 (let (($x69 (and (and (and $x136 $x91) $x134) $x127)))
 (let (($x240 (forall ((input.ind-%var4145X (_ BitVec 32)) )(let ((?x335 (bvadd (bvmul input.ind-%var4145X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv1 32))) (select input.dst.llvm-mem ?x335))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv2 32))) ?x268))))
 (let ((?x256 (input.spec-%var-m-0.1.1 input.ind-%var4145X)))
 (let (($x402 (input.spec-%var-m-0.0.1 input.ind-%var4145X)))
 (=> $x402 (= ?x256 ?x262))))))))
 ))
 (let (($x88 (forall ((input.ind-%var4144X (_ BitVec 32)) )(let (($x402 (input.spec-%var-m-0.0.1 input.ind-%var4144X)))
 (= $x402 (and (bvule (_ bv0 32) input.ind-%var4144X) (bvult input.ind-%var4144X (_ bv100 32))))))
 ))
 (let (($x219 (and $x88 $x240)))
 (let (($x61 (and $x219 $x69)))
 (let (($x15 (= $x61 true)))
 (let (($x185 (= $x139 true)))
 (let (($x40 (and $x301 $x107)))
 (let (($x290 (= $x40 true)))
 (let (($x236 (and $x290 $x185)))
 (let (($x103 (and $x236 $x15)))
 (let (($x115 (and $x103 $x33)))
 (let (($x289 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x363 (ite $x289 (_ bv1 32) (_ bv0 32))))
 (let (($x186 (= ?x363 (_ bv0 32))))
 (let (($x56 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x50 (ite $x56 (_ bv1 32) (_ bv0 32))))
 (let (($x383 (bvuge ?x50 (_ bv1 32))))
 (let (($x150 (and $x383 $x186)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x94 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x399 (= ?x94 (_ bv0 32))))
 (let (($x92 (and $x399 $x150)))
 (let (($x300 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x130 (ite $x300 (_ bv1 32) (_ bv0 32))))
 (let (($x211 (bvuge ?x130 (_ bv1 32))))
 (let (($x140 (and $x211 $x92)))
 (let (($x249 (and $x140 $x115)))
 (let (($x137 (= ?x347 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x11 (=> $x211 $x137)))
 (let (($x250 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x293 (= $x211 $x250)))
 (let (($x272 (= false false)))
 (let (($x373 (= ?x130 (_ bv0 32))))
 (let (($x149 (=> $x373 $x272)))
 (let (($x349 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x153 (= $x373 $x349)))
 (let (($x26 (and (and (and $x153 $x149) $x293) $x11)))
 (let (($x295 (and $x26 $x249)))
 (let ((?x49 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x10 (= ?x49 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x172 (bvuge ?x94 (_ bv1 32))))
 (let (($x294 (=> $x172 $x10)))
 (let (($x327 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x332 (= $x172 $x327)))
 (let (($x204 (and (and (= $x399 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x399 $x272)) $x332)))
 (let (($x246 (and $x204 $x294)))
 (let (($x184 (and $x246 $x295)))
 (let ((?x234 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x98 (= ?x234 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x5 (bvuge ?x363 (_ bv1 32))))
 (let (($x51 (=> $x5 $x98)))
 (let (($x7 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x346 (= $x5 $x7)))
 (let (($x291 (and (and (= $x186 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x186 $x272)) $x346)))
 (let (($x397 (and $x291 $x51)))
 (let (($x100 (and $x397 $x184)))
 (let (($x233 (= ?x312 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x163 (=> $x383 $x233)))
 (let (($x6 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x79 (= $x383 $x6)))
 (let (($x9 (= ?x50 (_ bv0 32))))
 (let (($x224 (=> $x9 $x272)))
 (let (($x59 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x238 (= $x9 $x59)))
 (let (($x192 (and (and (and $x238 $x224) $x79) $x163)))
 (let (($x19 (and $x192 $x100)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x350 (and $x54 $x19)))
 (let (($x202 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x65 (and $x202 $x350)))
 (let (($x85 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x378 (and $x85 $x65)))
 (let (($x62 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x239 (and $x62 $x378)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x243 (and $x28 $x239)))
 (let (($x389 (and $x272 $x243)))
 (let (($x160 (= ?x347 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x118 (and $x160 $x389)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x269 (and $x220 $x118)))
 (let (($x13 (and $x272 $x269)))
 (let (($x212 (= ?x49 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x178 (and $x212 $x13)))
 (let (($x259 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x175 (and $x259 $x178)))
 (let (($x24 (and $x272 $x175)))
 (let (($x371 (= ?x234 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x189 (and $x371 $x24)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x17 (and $x209 $x189)))
 (let (($x274 (and $x272 $x17)))
 (let (($x222 (= ?x312 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x305 (and $x222 $x274)))
 (let (($x214 (bvugt ?x135 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x324 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x330)))
 (let (($x377 (=> (bvule ?x135 (bvsub (bvadd ?x135 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x324 $x214)))))))
 (let (($x248 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x195)))
 (let (($x376 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x279 $x248)))))))
 (let (($x385 (bvugt ?x251 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x303 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x318)))
 (let (($x177 (=> (bvule ?x251 (bvsub (bvadd ?x251 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x303 $x385)))))))
 (let (($x261 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x199 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x372 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x199)))
 (let (($x223 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x372 $x261)))))))
 (let (($x68 (and $x223 $x177)))
 (let (($x229 (and $x68 $x376)))
 (let (($x298 (and $x229 $x377)))
 (let (($x30 (and $x298 $x305)))
 (let (($x120 (=> $x30 $x114)))
 (not $x120))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x312 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x347 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x45 (bvadd ?x347 ?x312)))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x164 (concat ?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x195 (bvadd ?x271 (_ bv3 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem ?x195) (concat ?x36 ?x164))))
 (let ((?x102 (bvmul (_ bv4294967295 32) ?x228)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x83 (concat ?x216 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x135 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x330 (bvadd ?x135 (_ bv3 32))))
 (let ((?x285 (concat (select input.dst.llvm-mem ?x330) (concat ?x316 ?x83))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x71 (concat ?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x251 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x318 (bvadd ?x251 (_ bv3 32))))
 (let ((?x133 (concat (select input.dst.llvm-mem ?x318) (concat ?x191 ?x71))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x200)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x396)))
 (let ((?x241 (bvadd (bvadd (bvadd ?x125 ?x133) ?x285) ?x102)))
 (let (($x23 (= ?x241 ?x45)))
 (let (($x114 (= $x23 true)))
 (let ((?x359 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x336 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x25 (concat ?x326 (concat ?x336 ?x359)))))
 (let (($x12 (= ?x66 input.dst.llvm-%m)))
 (let (($x33 (= $x12 true)))
 (let (($x107 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x355 (= (bvand ?x135 (_ bv4294967292 32)) ?x135)))
 (let (($x193 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x135 (bvsub ?x135 (_ bv4 32))) (bvult ?x135 (bvsub ?x135 (_ bv4 32))))))
 (let (($x322 (and true $x193)))
 (let (($x283 (= (bvand ?x251 (_ bv4294967292 32)) ?x251)))
 (let (($x87 (and $x283 $x322)))
 (let (($x319 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x301 (and (and (and true $x319) $x87) $x355)))
 (let (($x215 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x296 (and true $x215)))
 (let (($x253 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x129 (and $x253 $x296)))
 (let (($x287 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x251 (bvsub ?x251 (_ bv12 32))) (bvult ?x251 (bvsub ?x251 (_ bv12 32))))))
 (let (($x139 (and (and (and true $x253) $x287) $x129)))
 (let (($x127 (and (and $x139 $x301) $x107)))
 (let (($x134 (= input.dst.llvm-%m ?x66)))
 (let ((?x198 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x380 (= (_ bv0 32) ?x198)))
 (let ((?x342 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x342)))
 (let (($x390 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (and $x390 $x242)))
 (let (($x351 (and $x74 $x380)))
 (let (($x369 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (and $x369 $x351)))
 (let (($x159 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x159)))))))
 (let (($x69 (and (and (and $x136 $x91) $x134) $x127)))
 (let (($x240 (forall ((input.ind-%var4145X (_ BitVec 32)) )(let ((?x335 (bvadd (bvmul input.ind-%var4145X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv1 32))) (select input.dst.llvm-mem ?x335))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv2 32))) ?x268))))
 (let ((?x256 (input.spec-%var-m-0.1.1 input.ind-%var4145X)))
 (let (($x402 (input.spec-%var-m-0.0.1 input.ind-%var4145X)))
 (=> $x402 (= ?x256 ?x262))))))))
 ))
 (let (($x88 (forall ((input.ind-%var4144X (_ BitVec 32)) )(let (($x402 (input.spec-%var-m-0.0.1 input.ind-%var4144X)))
 (= $x402 (and (bvule (_ bv0 32) input.ind-%var4144X) (bvult input.ind-%var4144X (_ bv100 32))))))
 ))
 (let (($x219 (and $x88 $x240)))
 (let (($x61 (and $x219 $x69)))
 (let (($x15 (= $x61 true)))
 (let (($x185 (= $x139 true)))
 (let (($x40 (and $x301 $x107)))
 (let (($x290 (= $x40 true)))
 (let (($x236 (and $x290 $x185)))
 (let (($x103 (and $x236 $x15)))
 (let (($x115 (and $x103 $x33)))
 (let (($x289 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x363 (ite $x289 (_ bv1 32) (_ bv0 32))))
 (let (($x186 (= ?x363 (_ bv0 32))))
 (let (($x56 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x50 (ite $x56 (_ bv1 32) (_ bv0 32))))
 (let (($x383 (bvuge ?x50 (_ bv1 32))))
 (let (($x150 (and $x383 $x186)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x94 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x399 (= ?x94 (_ bv0 32))))
 (let (($x92 (and $x399 $x150)))
 (let (($x300 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x130 (ite $x300 (_ bv1 32) (_ bv0 32))))
 (let (($x211 (bvuge ?x130 (_ bv1 32))))
 (let (($x140 (and $x211 $x92)))
 (let (($x249 (and $x140 $x115)))
 (let (($x137 (= ?x347 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x11 (=> $x211 $x137)))
 (let (($x250 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x293 (= $x211 $x250)))
 (let (($x272 (= false false)))
 (let (($x373 (= ?x130 (_ bv0 32))))
 (let (($x149 (=> $x373 $x272)))
 (let (($x349 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x153 (= $x373 $x349)))
 (let (($x26 (and (and (and $x153 $x149) $x293) $x11)))
 (let (($x295 (and $x26 $x249)))
 (let ((?x49 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x10 (= ?x49 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x172 (bvuge ?x94 (_ bv1 32))))
 (let (($x294 (=> $x172 $x10)))
 (let (($x327 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x332 (= $x172 $x327)))
 (let (($x204 (and (and (= $x399 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x399 $x272)) $x332)))
 (let (($x246 (and $x204 $x294)))
 (let (($x184 (and $x246 $x295)))
 (let ((?x234 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x98 (= ?x234 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x5 (bvuge ?x363 (_ bv1 32))))
 (let (($x51 (=> $x5 $x98)))
 (let (($x7 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x346 (= $x5 $x7)))
 (let (($x291 (and (and (= $x186 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x186 $x272)) $x346)))
 (let (($x397 (and $x291 $x51)))
 (let (($x100 (and $x397 $x184)))
 (let (($x233 (= ?x312 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x163 (=> $x383 $x233)))
 (let (($x6 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x79 (= $x383 $x6)))
 (let (($x9 (= ?x50 (_ bv0 32))))
 (let (($x224 (=> $x9 $x272)))
 (let (($x59 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x238 (= $x9 $x59)))
 (let (($x192 (and (and (and $x238 $x224) $x79) $x163)))
 (let (($x19 (and $x192 $x100)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x350 (and $x54 $x19)))
 (let (($x202 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x65 (and $x202 $x350)))
 (let (($x85 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x378 (and $x85 $x65)))
 (let (($x62 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x239 (and $x62 $x378)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x243 (and $x28 $x239)))
 (let (($x389 (and $x272 $x243)))
 (let (($x160 (= ?x347 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x118 (and $x160 $x389)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x269 (and $x220 $x118)))
 (let (($x13 (and $x272 $x269)))
 (let (($x212 (= ?x49 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x178 (and $x212 $x13)))
 (let (($x259 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x175 (and $x259 $x178)))
 (let (($x24 (and $x272 $x175)))
 (let (($x371 (= ?x234 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x189 (and $x371 $x24)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x17 (and $x209 $x189)))
 (let (($x274 (and $x272 $x17)))
 (let (($x222 (= ?x312 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x305 (and $x222 $x274)))
 (let (($x214 (bvugt ?x135 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x324 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x330)))
 (let (($x377 (=> (bvule ?x135 (bvsub (bvadd ?x135 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x324 $x214)))))))
 (let (($x248 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x195)))
 (let (($x376 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x279 $x248)))))))
 (let (($x385 (bvugt ?x251 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x303 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x318)))
 (let (($x177 (=> (bvule ?x251 (bvsub (bvadd ?x251 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x303 $x385)))))))
 (let (($x261 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x199 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x372 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x199)))
 (let (($x223 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x372 $x261)))))))
 (let (($x68 (and $x223 $x177)))
 (let (($x229 (and $x68 $x376)))
 (let (($x298 (and $x229 $x377)))
 (let (($x30 (and $x298 $x305)))
 (let (($x120 (=> $x30 $x114)))
 (not $x120))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 218 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 66
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x356 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x356 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x255 (bvadd ?x271 (_ bv3 32))))
 (let ((?x171 (concat (select input.dst.llvm-mem ?x255) (concat ?x254 ?x218))))
 (let ((?x375 (bvmul (_ bv4294967295 32) ?x171)))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x76 (concat ?x161 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x357 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x101 (bvadd ?x357 (_ bv3 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem ?x101) (concat ?x31 ?x76))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x241 (concat ?x102 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x282 (bvadd ?x231 (_ bv3 32))))
 (let ((?x328 (concat (select input.dst.llvm-mem ?x282) (concat ?x23 ?x241))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x358)))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x105)))
 (let ((?x53 (bvadd (bvadd (bvadd ?x164 ?x328) ?x117) ?x375)))
 (let ((?x317 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x173 (= ?x317 ?x53)))
 (let (($x203 (= $x173 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x178 (concat ?x118 (concat ?x239 ?x65)))))
 (let (($x60 (= ?x175 input.dst.llvm-%m)))
 (let (($x306 (= $x60 true)))
 (let (($x334 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x40 (= (bvand ?x357 (_ bv4294967292 32)) ?x357)))
 (let (($x355 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x357 (bvsub ?x357 (_ bv4 32))) (bvult ?x357 (bvsub ?x357 (_ bv4 32))))))
 (let (($x301 (and true $x355)))
 (let (($x193 (= (bvand ?x231 (_ bv4294967292 32)) ?x231)))
 (let (($x121 (and $x193 $x301)))
 (let (($x210 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x253 (and (and (and true $x210) $x121) $x40)))
 (let (($x185 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x236 (and true $x185)))
 (let (($x287 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x42 (and $x287 $x236)))
 (let (($x343 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x231 (bvsub ?x231 (_ bv12 32))) (bvult ?x231 (bvsub ?x231 (_ bv12 32))))))
 (let (($x213 (and (and (and true $x287) $x343) $x42)))
 (let (($x17 (and (and $x213 $x253) $x334)))
 (let (($x24 (= input.dst.llvm-%m ?x175)))
 (let ((?x295 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x184 (= (_ bv0 32) ?x295)))
 (let ((?x33 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x115 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x33)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x249 (and $x12 $x115)))
 (let (($x100 (and $x249 $x184)))
 (let (($x359 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x359 $x100)))
 (let (($x354 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x103 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x354)))))))
 (let (($x30 (and (and (and $x103 $x19) $x24) $x17)))
 (let (($x58 (forall ((input.ind-%var4189X (_ BitVec 32)) )(let ((?x393 (bvadd (bvmul input.ind-%var4189X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x393 (_ bv1 32))) (select input.dst.llvm-mem ?x393))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x393 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x393 (_ bv2 32))) ?x242))))
 (let ((?x234 (input.spec-%var-m-0.1.1 input.ind-%var4189X)))
 (let (($x272 (input.spec-%var-m-0.0.1 input.ind-%var4189X)))
 (=> $x272 (= ?x234 ?x174))))))))
 ))
 (let (($x96 (forall ((input.ind-%var4188X (_ BitVec 32)) )(let (($x272 (input.spec-%var-m-0.0.1 input.ind-%var4188X)))
 (= $x272 (and (bvule (_ bv0 32) input.ind-%var4188X) (bvult input.ind-%var4188X (_ bv100 32))))))
 ))
 (let (($x326 (and $x96 $x58)))
 (let (($x188 (and $x326 $x30)))
 (let (($x308 (= $x188 true)))
 (let (($x113 (= $x213 true)))
 (let (($x20 (and $x253 $x334)))
 (let (($x119 (= $x20 true)))
 (let (($x48 (and $x119 $x113)))
 (let (($x315 (and $x48 $x308)))
 (let (($x270 (and $x315 $x306)))
 (let (($x320 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x57 (ite $x320 (_ bv1 32) (_ bv0 32))))
 (let (($x5 (= ?x57 (_ bv0 32))))
 (let (($x238 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x21 (ite $x238 (_ bv1 32) (_ bv0 32))))
 (let (($x383 (= ?x21 (_ bv0 32))))
 (let (($x278 (and $x383 $x5)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x158 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x172 (= ?x158 (_ bv0 32))))
 (let (($x319 (and $x172 $x278)))
 (let (($x149 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x73 (ite $x149 (_ bv1 32) (_ bv0 32))))
 (let (($x137 (bvuge ?x73 (_ bv1 32))))
 (let (($x394 (and $x137 $x319)))
 (let (($x200 (and $x394 $x270)))
 (let (($x92 (= ?x317 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x140 (=> $x137 $x92)))
 (let (($x11 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x26 (= $x137 $x11)))
 (let (($x214 (= false false)))
 (let (($x211 (= ?x73 (_ bv0 32))))
 (let (($x400 (=> $x211 $x214)))
 (let (($x293 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x395 (= $x211 $x293)))
 (let (($x90 (and (and (and $x395 $x400) $x26) $x140)))
 (let (($x396 (and $x90 $x200)))
 (let ((?x347 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x130 (= ?x347 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x10 (bvuge ?x158 (_ bv1 32))))
 (let (($x373 (=> $x10 $x130)))
 (let (($x294 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x246 (= $x10 $x294)))
 (let (($x349 (and (and (= $x172 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x172 $x214)) $x246)))
 (let (($x153 (and $x349 $x373)))
 (let (($x125 (and $x153 $x396)))
 (let ((?x49 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x94 (= ?x49 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x98 (bvuge ?x57 (_ bv1 32))))
 (let (($x399 (=> $x98 $x94)))
 (let (($x51 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x397 (= $x98 $x51)))
 (let (($x310 (and (and (= $x5 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x5 $x214)) $x397)))
 (let (($x86 (and $x310 $x399)))
 (let (($x84 (and $x86 $x125)))
 (let ((?x298 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x363 (= ?x298 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x233 (bvuge ?x21 (_ bv1 32))))
 (let (($x186 (=> $x233 $x363)))
 (let (($x163 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x192 (= $x233 $x163)))
 (let (($x155 (=> $x383 $x214)))
 (let (($x79 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x401 (= $x383 $x79)))
 (let (($x353 (and (and (and $x401 $x155) $x192) $x186)))
 (let (($x235 (and $x353 $x84)))
 (let (($x59 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x191 (and $x59 $x235)))
 (let (($x9 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x82 (and $x9 $x191)))
 (let (($x56 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x128 (and $x56 $x82)))
 (let (($x208 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x386 (and $x208 $x128)))
 (let (($x304 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x71 (and $x304 $x386)))
 (let (($x108 (and $x214 $x71)))
 (let (($x78 (= ?x317 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x133 (and $x78 $x108)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x142 (and $x28 $x133)))
 (let (($x194 (and $x214 $x142)))
 (let (($x160 (= ?x347 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x382 (and $x160 $x194)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x316 (and $x220 $x382)))
 (let (($x273 (and $x214 $x316)))
 (let (($x212 (= ?x49 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x216 (and $x212 $x273)))
 (let (($x111 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x72 (and $x111 $x216)))
 (let (($x83 (and $x214 $x72)))
 (let (($x330 (= ?x298 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x126 (and $x330 $x83)))
 (let (($x309 (bvugt ?x357 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x339 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x176 (=> (bvule ?x357 (bvsub (bvadd ?x357 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x339 $x309)))))))
 (let (($x299 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x281 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x255)))
 (let (($x145 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x281 $x299)))))))
 (let (($x372 (bvugt ?x231 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x282)))
 (let (($x123 (=> (bvule ?x231 (bvsub (bvadd ?x231 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x372)))))))
 (let (($x223 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x170 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x170)))
 (let (($x385 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x223)))))))
 (let (($x44 (and $x385 $x123)))
 (let (($x77 (and $x44 $x145)))
 (let (($x376 (and $x77 $x176)))
 (let (($x285 (and $x376 $x126)))
 (let (($x263 (=> $x285 $x203)))
 (not $x263)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x356 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x356 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x255 (bvadd ?x271 (_ bv3 32))))
 (let ((?x171 (concat (select input.dst.llvm-mem ?x255) (concat ?x254 ?x218))))
 (let ((?x375 (bvmul (_ bv4294967295 32) ?x171)))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x76 (concat ?x161 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x357 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x101 (bvadd ?x357 (_ bv3 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem ?x101) (concat ?x31 ?x76))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x241 (concat ?x102 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x282 (bvadd ?x231 (_ bv3 32))))
 (let ((?x328 (concat (select input.dst.llvm-mem ?x282) (concat ?x23 ?x241))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x358)))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x105)))
 (let ((?x53 (bvadd (bvadd (bvadd ?x164 ?x328) ?x117) ?x375)))
 (let ((?x317 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x173 (= ?x317 ?x53)))
 (let (($x203 (= $x173 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x178 (concat ?x118 (concat ?x239 ?x65)))))
 (let (($x60 (= ?x175 input.dst.llvm-%m)))
 (let (($x306 (= $x60 true)))
 (let (($x334 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x40 (= (bvand ?x357 (_ bv4294967292 32)) ?x357)))
 (let (($x355 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x357 (bvsub ?x357 (_ bv4 32))) (bvult ?x357 (bvsub ?x357 (_ bv4 32))))))
 (let (($x301 (and true $x355)))
 (let (($x193 (= (bvand ?x231 (_ bv4294967292 32)) ?x231)))
 (let (($x121 (and $x193 $x301)))
 (let (($x210 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x253 (and (and (and true $x210) $x121) $x40)))
 (let (($x185 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x236 (and true $x185)))
 (let (($x287 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x42 (and $x287 $x236)))
 (let (($x343 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x231 (bvsub ?x231 (_ bv12 32))) (bvult ?x231 (bvsub ?x231 (_ bv12 32))))))
 (let (($x213 (and (and (and true $x287) $x343) $x42)))
 (let (($x17 (and (and $x213 $x253) $x334)))
 (let (($x24 (= input.dst.llvm-%m ?x175)))
 (let ((?x295 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x184 (= (_ bv0 32) ?x295)))
 (let ((?x33 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x115 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x33)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x249 (and $x12 $x115)))
 (let (($x100 (and $x249 $x184)))
 (let (($x359 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x359 $x100)))
 (let (($x354 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x103 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x354)))))))
 (let (($x30 (and (and (and $x103 $x19) $x24) $x17)))
 (let (($x58 (forall ((input.ind-%var4189X (_ BitVec 32)) )(let ((?x393 (bvadd (bvmul input.ind-%var4189X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x393 (_ bv1 32))) (select input.dst.llvm-mem ?x393))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x393 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x393 (_ bv2 32))) ?x242))))
 (let ((?x234 (input.spec-%var-m-0.1.1 input.ind-%var4189X)))
 (let (($x272 (input.spec-%var-m-0.0.1 input.ind-%var4189X)))
 (=> $x272 (= ?x234 ?x174))))))))
 ))
 (let (($x96 (forall ((input.ind-%var4188X (_ BitVec 32)) )(let (($x272 (input.spec-%var-m-0.0.1 input.ind-%var4188X)))
 (= $x272 (and (bvule (_ bv0 32) input.ind-%var4188X) (bvult input.ind-%var4188X (_ bv100 32))))))
 ))
 (let (($x326 (and $x96 $x58)))
 (let (($x188 (and $x326 $x30)))
 (let (($x308 (= $x188 true)))
 (let (($x113 (= $x213 true)))
 (let (($x20 (and $x253 $x334)))
 (let (($x119 (= $x20 true)))
 (let (($x48 (and $x119 $x113)))
 (let (($x315 (and $x48 $x308)))
 (let (($x270 (and $x315 $x306)))
 (let (($x320 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x57 (ite $x320 (_ bv1 32) (_ bv0 32))))
 (let (($x5 (= ?x57 (_ bv0 32))))
 (let (($x238 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x21 (ite $x238 (_ bv1 32) (_ bv0 32))))
 (let (($x383 (= ?x21 (_ bv0 32))))
 (let (($x278 (and $x383 $x5)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x158 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x172 (= ?x158 (_ bv0 32))))
 (let (($x319 (and $x172 $x278)))
 (let (($x149 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x73 (ite $x149 (_ bv1 32) (_ bv0 32))))
 (let (($x137 (bvuge ?x73 (_ bv1 32))))
 (let (($x394 (and $x137 $x319)))
 (let (($x200 (and $x394 $x270)))
 (let (($x92 (= ?x317 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x140 (=> $x137 $x92)))
 (let (($x11 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x26 (= $x137 $x11)))
 (let (($x214 (= false false)))
 (let (($x211 (= ?x73 (_ bv0 32))))
 (let (($x400 (=> $x211 $x214)))
 (let (($x293 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x395 (= $x211 $x293)))
 (let (($x90 (and (and (and $x395 $x400) $x26) $x140)))
 (let (($x396 (and $x90 $x200)))
 (let ((?x347 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x130 (= ?x347 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x10 (bvuge ?x158 (_ bv1 32))))
 (let (($x373 (=> $x10 $x130)))
 (let (($x294 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x246 (= $x10 $x294)))
 (let (($x349 (and (and (= $x172 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x172 $x214)) $x246)))
 (let (($x153 (and $x349 $x373)))
 (let (($x125 (and $x153 $x396)))
 (let ((?x49 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x94 (= ?x49 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x98 (bvuge ?x57 (_ bv1 32))))
 (let (($x399 (=> $x98 $x94)))
 (let (($x51 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x397 (= $x98 $x51)))
 (let (($x310 (and (and (= $x5 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x5 $x214)) $x397)))
 (let (($x86 (and $x310 $x399)))
 (let (($x84 (and $x86 $x125)))
 (let ((?x298 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x363 (= ?x298 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x233 (bvuge ?x21 (_ bv1 32))))
 (let (($x186 (=> $x233 $x363)))
 (let (($x163 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x192 (= $x233 $x163)))
 (let (($x155 (=> $x383 $x214)))
 (let (($x79 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x401 (= $x383 $x79)))
 (let (($x353 (and (and (and $x401 $x155) $x192) $x186)))
 (let (($x235 (and $x353 $x84)))
 (let (($x59 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x191 (and $x59 $x235)))
 (let (($x9 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x82 (and $x9 $x191)))
 (let (($x56 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x128 (and $x56 $x82)))
 (let (($x208 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x386 (and $x208 $x128)))
 (let (($x304 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x71 (and $x304 $x386)))
 (let (($x108 (and $x214 $x71)))
 (let (($x78 (= ?x317 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x133 (and $x78 $x108)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x142 (and $x28 $x133)))
 (let (($x194 (and $x214 $x142)))
 (let (($x160 (= ?x347 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x382 (and $x160 $x194)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x316 (and $x220 $x382)))
 (let (($x273 (and $x214 $x316)))
 (let (($x212 (= ?x49 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x216 (and $x212 $x273)))
 (let (($x111 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x72 (and $x111 $x216)))
 (let (($x83 (and $x214 $x72)))
 (let (($x330 (= ?x298 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x126 (and $x330 $x83)))
 (let (($x309 (bvugt ?x357 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x339 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x176 (=> (bvule ?x357 (bvsub (bvadd ?x357 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x339 $x309)))))))
 (let (($x299 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x281 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x255)))
 (let (($x145 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x281 $x299)))))))
 (let (($x372 (bvugt ?x231 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x282)))
 (let (($x123 (=> (bvule ?x231 (bvsub (bvadd ?x231 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x372)))))))
 (let (($x223 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x170 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x170)))
 (let (($x385 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x223)))))))
 (let (($x44 (and $x385 $x123)))
 (let (($x77 (and $x44 $x145)))
 (let (($x376 (and $x77 $x176)))
 (let (($x285 (and $x376 $x126)))
 (let (($x263 (=> $x285 $x203)))
 (not $x263)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 217 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 67
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x347 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x162 (bvmul (_ bv4294967295 32) ?x347)))
 (let ((?x388 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x162)))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x403 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x166 (bvadd ?x271 (_ bv3 32))))
 (let ((?x141 (concat (select input.dst.llvm-mem ?x166) (concat ?x131 ?x93))))
 (let ((?x207 (bvmul (_ bv4294967295 32) ?x141)))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x257 (concat ?x224 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x248 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x180 (bvadd ?x248 (_ bv3 32))))
 (let ((?x321 (concat (select input.dst.llvm-mem ?x180) (concat ?x55 ?x257))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x53 (concat ?x375 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x89 (bvadd ?x286 (_ bv3 32))))
 (let ((?x252 (concat (select input.dst.llvm-mem ?x89) (concat ?x203 ?x53))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x297)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x356)))
 (let ((?x292 (bvadd (bvadd (bvadd ?x218 ?x252) ?x321) ?x207)))
 (let (($x244 (= ?x292 ?x388)))
 (let (($x52 (= $x244 true)))
 (let ((?x82 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x386 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x382 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x316 (concat ?x382 (concat ?x133 (concat ?x386 ?x82)))))
 (let (($x348 (= ?x316 input.dst.llvm-%m)))
 (let (($x381 (= $x348 true)))
 (let (($x360 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x20 (= (bvand ?x248 (_ bv4294967292 32)) ?x248)))
 (let (($x40 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x248 (bvsub ?x248 (_ bv4 32))) (bvult ?x248 (bvsub ?x248 (_ bv4 32))))))
 (let (($x253 (and true $x40)))
 (let (($x355 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x237 (and $x355 $x253)))
 (let (($x322 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x287 (and (and (and true $x322) $x237) $x20)))
 (let (($x113 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x48 (and true $x113)))
 (let (($x343 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x340 (and $x343 $x48)))
 (let (($x139 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x167 (and (and (and true $x343) $x139) $x340)))
 (let (($x72 (and (and $x167 $x287) $x360)))
 (let (($x273 (= input.dst.llvm-%m ?x316)))
 (let ((?x396 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x125 (= (_ bv0 32) ?x396)))
 (let ((?x306 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x306)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (and $x60 $x270)))
 (let (($x84 (and $x200 $x125)))
 (let (($x65 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x235 (and $x65 $x84)))
 (let (($x305 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x315 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x305)))))))
 (let (($x285 (and (and (and $x315 $x235) $x273) $x72)))
 (let (($x389 (forall ((input.ind-%var4233X (_ BitVec 32)) )(let ((?x336 (bvadd (bvmul input.ind-%var4233X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv1 32))) (select input.dst.llvm-mem ?x336))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv2 32))) ?x115))))
 (let ((?x49 (input.spec-%var-m-0.1.1 input.ind-%var4233X)))
 (let (($x214 (input.spec-%var-m-0.0.1 input.ind-%var4233X)))
 (=> $x214 (= ?x49 ?x274))))))))
 ))
 (let (($x342 (forall ((input.ind-%var4232X (_ BitVec 32)) )(let (($x214 (input.spec-%var-m-0.0.1 input.ind-%var4232X)))
 (= $x214 (and (bvule (_ bv0 32) input.ind-%var4232X) (bvult input.ind-%var4232X (_ bv100 32))))))
 ))
 (let (($x118 (and $x342 $x389)))
 (let (($x109 (and $x118 $x285)))
 (let (($x36 (= $x109 true)))
 (let (($x156 (= $x167 true)))
 (let (($x364 (and $x287 $x360)))
 (let (($x221 (= $x364 true)))
 (let (($x39 (and $x221 $x156)))
 (let (($x387 (and $x39 $x36)))
 (let (($x16 (and $x387 $x381)))
 (let (($x398 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x338 (ite $x398 (_ bv1 32) (_ bv0 32))))
 (let (($x94 (bvuge ?x338 (_ bv1 32))))
 (let (($x401 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x391 (ite $x401 (_ bv1 32) (_ bv0 32))))
 (let (($x363 (bvuge ?x391 (_ bv1 32))))
 (let (($x206 (and $x363 $x94)))
 (let (($x116 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x168 (ite $x116 (_ bv1 32) (_ bv0 32))))
 (let (($x130 (bvuge ?x168 (_ bv1 32))))
 (let (($x210 (and $x130 $x206)))
 (let (($x400 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x27 (ite $x400 (_ bv1 32) (_ bv0 32))))
 (let (($x137 (= ?x27 (_ bv0 32))))
 (let (($x290 (and $x137 $x210)))
 (let (($x358 (and $x290 $x16)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x319 (= ?x202 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x92 (bvuge ?x27 (_ bv1 32))))
 (let (($x394 (=> $x92 $x319)))
 (let (($x140 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x90 (= $x92 $x140)))
 (let (($x309 (= false false)))
 (let (($x150 (=> $x137 $x309)))
 (let (($x26 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x37 (= $x137 $x26)))
 (let (($x283 (and (and (and $x37 $x150) $x90) $x394)))
 (let (($x105 (and $x283 $x358)))
 (let ((?x317 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x73 (= ?x317 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x211 (=> $x130 $x73)))
 (let (($x373 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x153 (= $x130 $x373)))
 (let (($x10 (= ?x168 (_ bv0 32))))
 (let (($x300 (=> $x10 $x309)))
 (let (($x246 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x349 (= $x10 $x246)))
 (let (($x395 (and (and (and $x349 $x300) $x153) $x211)))
 (let (($x164 (and $x395 $x105)))
 (let (($x158 (= ?x347 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x172 (=> $x94 $x158)))
 (let (($x399 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x86 (= $x94 $x399)))
 (let (($x98 (= ?x338 (_ bv0 32))))
 (let (($x366 (=> $x98 $x309)))
 (let (($x397 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x310 (= $x98 $x397)))
 (let (($x204 (and (and (and $x310 $x366) $x86) $x172)))
 (let (($x120 (and $x204 $x164)))
 (let ((?x376 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x57 (= ?x376 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x5 (=> $x363 $x57)))
 (let (($x186 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x353 (= $x363 $x186)))
 (let (($x233 (= ?x391 (_ bv0 32))))
 (let (($x289 (=> $x233 $x309)))
 (let (($x192 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x67 (= $x233 $x192)))
 (let (($x291 (and (and (and $x67 $x289) $x353) $x5)))
 (let (($x45 (and $x291 $x120)))
 (let (($x79 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x23 (and $x79 $x45)))
 (let (($x383 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x228 (and $x383 $x23)))
 (let (($x238 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x102 (and $x238 $x228)))
 (let (($x183 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x18 (and $x183 $x102)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x241 (and $x50 $x18)))
 (let (($x114 (and $x309 $x241)))
 (let (($x54 (= ?x202 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x328 (and $x54 $x114)))
 (let (($x304 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x34 (and $x304 $x328)))
 (let (($x302 (and $x309 $x34)))
 (let (($x78 (= ?x317 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x226 (and $x78 $x302)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x31 (and $x28 $x226)))
 (let (($x80 (and $x309 $x31)))
 (let (($x160 (= ?x347 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x161 (and $x160 $x80)))
 (let (($x324 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x260 (and $x324 $x161)))
 (let (($x76 (and $x309 $x260)))
 (let (($x101 (= ?x376 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x29 (and $x101 $x76)))
 (let (($x38 (bvugt ?x248 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x377 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x180)))
 (let (($x146 (=> (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x377 $x38)))))))
 (let (($x261 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x166)))
 (let (($x195 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x261)))))))
 (let (($x122 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x68 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x122)))))))
 (let (($x385 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x365 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x318 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x365)))
 (let (($x372 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x318 $x385)))))))
 (let (($x179 (and $x372 $x68)))
 (let (($x95 (and $x179 $x195)))
 (let (($x145 (and $x95 $x146)))
 (let (($x117 (and $x145 $x29)))
 (let (($x14 (=> $x117 $x52)))
 (not $x14)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x347 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x162 (bvmul (_ bv4294967295 32) ?x347)))
 (let ((?x388 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x162)))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x403 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x166 (bvadd ?x271 (_ bv3 32))))
 (let ((?x141 (concat (select input.dst.llvm-mem ?x166) (concat ?x131 ?x93))))
 (let ((?x207 (bvmul (_ bv4294967295 32) ?x141)))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x257 (concat ?x224 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x248 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x180 (bvadd ?x248 (_ bv3 32))))
 (let ((?x321 (concat (select input.dst.llvm-mem ?x180) (concat ?x55 ?x257))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x53 (concat ?x375 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x89 (bvadd ?x286 (_ bv3 32))))
 (let ((?x252 (concat (select input.dst.llvm-mem ?x89) (concat ?x203 ?x53))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x297)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x356)))
 (let ((?x292 (bvadd (bvadd (bvadd ?x218 ?x252) ?x321) ?x207)))
 (let (($x244 (= ?x292 ?x388)))
 (let (($x52 (= $x244 true)))
 (let ((?x82 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x386 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x382 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x316 (concat ?x382 (concat ?x133 (concat ?x386 ?x82)))))
 (let (($x348 (= ?x316 input.dst.llvm-%m)))
 (let (($x381 (= $x348 true)))
 (let (($x360 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x20 (= (bvand ?x248 (_ bv4294967292 32)) ?x248)))
 (let (($x40 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x248 (bvsub ?x248 (_ bv4 32))) (bvult ?x248 (bvsub ?x248 (_ bv4 32))))))
 (let (($x253 (and true $x40)))
 (let (($x355 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x237 (and $x355 $x253)))
 (let (($x322 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x287 (and (and (and true $x322) $x237) $x20)))
 (let (($x113 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x48 (and true $x113)))
 (let (($x343 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x340 (and $x343 $x48)))
 (let (($x139 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x167 (and (and (and true $x343) $x139) $x340)))
 (let (($x72 (and (and $x167 $x287) $x360)))
 (let (($x273 (= input.dst.llvm-%m ?x316)))
 (let ((?x396 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x125 (= (_ bv0 32) ?x396)))
 (let ((?x306 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x306)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (and $x60 $x270)))
 (let (($x84 (and $x200 $x125)))
 (let (($x65 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x235 (and $x65 $x84)))
 (let (($x305 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x315 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x305)))))))
 (let (($x285 (and (and (and $x315 $x235) $x273) $x72)))
 (let (($x389 (forall ((input.ind-%var4233X (_ BitVec 32)) )(let ((?x336 (bvadd (bvmul input.ind-%var4233X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv1 32))) (select input.dst.llvm-mem ?x336))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv2 32))) ?x115))))
 (let ((?x49 (input.spec-%var-m-0.1.1 input.ind-%var4233X)))
 (let (($x214 (input.spec-%var-m-0.0.1 input.ind-%var4233X)))
 (=> $x214 (= ?x49 ?x274))))))))
 ))
 (let (($x342 (forall ((input.ind-%var4232X (_ BitVec 32)) )(let (($x214 (input.spec-%var-m-0.0.1 input.ind-%var4232X)))
 (= $x214 (and (bvule (_ bv0 32) input.ind-%var4232X) (bvult input.ind-%var4232X (_ bv100 32))))))
 ))
 (let (($x118 (and $x342 $x389)))
 (let (($x109 (and $x118 $x285)))
 (let (($x36 (= $x109 true)))
 (let (($x156 (= $x167 true)))
 (let (($x364 (and $x287 $x360)))
 (let (($x221 (= $x364 true)))
 (let (($x39 (and $x221 $x156)))
 (let (($x387 (and $x39 $x36)))
 (let (($x16 (and $x387 $x381)))
 (let (($x398 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x338 (ite $x398 (_ bv1 32) (_ bv0 32))))
 (let (($x94 (bvuge ?x338 (_ bv1 32))))
 (let (($x401 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x391 (ite $x401 (_ bv1 32) (_ bv0 32))))
 (let (($x363 (bvuge ?x391 (_ bv1 32))))
 (let (($x206 (and $x363 $x94)))
 (let (($x116 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x168 (ite $x116 (_ bv1 32) (_ bv0 32))))
 (let (($x130 (bvuge ?x168 (_ bv1 32))))
 (let (($x210 (and $x130 $x206)))
 (let (($x400 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x27 (ite $x400 (_ bv1 32) (_ bv0 32))))
 (let (($x137 (= ?x27 (_ bv0 32))))
 (let (($x290 (and $x137 $x210)))
 (let (($x358 (and $x290 $x16)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x319 (= ?x202 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x92 (bvuge ?x27 (_ bv1 32))))
 (let (($x394 (=> $x92 $x319)))
 (let (($x140 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x90 (= $x92 $x140)))
 (let (($x309 (= false false)))
 (let (($x150 (=> $x137 $x309)))
 (let (($x26 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x37 (= $x137 $x26)))
 (let (($x283 (and (and (and $x37 $x150) $x90) $x394)))
 (let (($x105 (and $x283 $x358)))
 (let ((?x317 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x73 (= ?x317 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x211 (=> $x130 $x73)))
 (let (($x373 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x153 (= $x130 $x373)))
 (let (($x10 (= ?x168 (_ bv0 32))))
 (let (($x300 (=> $x10 $x309)))
 (let (($x246 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x349 (= $x10 $x246)))
 (let (($x395 (and (and (and $x349 $x300) $x153) $x211)))
 (let (($x164 (and $x395 $x105)))
 (let (($x158 (= ?x347 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x172 (=> $x94 $x158)))
 (let (($x399 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x86 (= $x94 $x399)))
 (let (($x98 (= ?x338 (_ bv0 32))))
 (let (($x366 (=> $x98 $x309)))
 (let (($x397 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x310 (= $x98 $x397)))
 (let (($x204 (and (and (and $x310 $x366) $x86) $x172)))
 (let (($x120 (and $x204 $x164)))
 (let ((?x376 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x57 (= ?x376 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x5 (=> $x363 $x57)))
 (let (($x186 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x353 (= $x363 $x186)))
 (let (($x233 (= ?x391 (_ bv0 32))))
 (let (($x289 (=> $x233 $x309)))
 (let (($x192 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x67 (= $x233 $x192)))
 (let (($x291 (and (and (and $x67 $x289) $x353) $x5)))
 (let (($x45 (and $x291 $x120)))
 (let (($x79 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x23 (and $x79 $x45)))
 (let (($x383 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x228 (and $x383 $x23)))
 (let (($x238 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x102 (and $x238 $x228)))
 (let (($x183 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x18 (and $x183 $x102)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x241 (and $x50 $x18)))
 (let (($x114 (and $x309 $x241)))
 (let (($x54 (= ?x202 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x328 (and $x54 $x114)))
 (let (($x304 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x34 (and $x304 $x328)))
 (let (($x302 (and $x309 $x34)))
 (let (($x78 (= ?x317 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x226 (and $x78 $x302)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x31 (and $x28 $x226)))
 (let (($x80 (and $x309 $x31)))
 (let (($x160 (= ?x347 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x161 (and $x160 $x80)))
 (let (($x324 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x260 (and $x324 $x161)))
 (let (($x76 (and $x309 $x260)))
 (let (($x101 (= ?x376 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x29 (and $x101 $x76)))
 (let (($x38 (bvugt ?x248 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x377 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x180)))
 (let (($x146 (=> (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x377 $x38)))))))
 (let (($x261 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x166)))
 (let (($x195 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x261)))))))
 (let (($x122 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x68 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x122)))))))
 (let (($x385 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x365 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x318 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x365)))
 (let (($x372 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x318 $x385)))))))
 (let (($x179 (and $x372 $x68)))
 (let (($x95 (and $x179 $x195)))
 (let (($x145 (and $x95 $x146)))
 (let (($x117 (and $x145 $x29)))
 (let (($x14 (=> $x117 $x52)))
 (not $x14)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 223 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 68
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x317 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x96 (bvmul (_ bv4294967295 32) ?x317)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x393 (bvadd ?x202 ?x96)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x354 (concat ?x25 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x251 (bvadd ?x271 (_ bv3 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem ?x251) (concat ?x15 ?x354))))
 (let ((?x58 (bvmul (_ bv4294967295 32) ?x147)))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x378 (concat ?x362 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x299 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x135 (bvadd ?x299 (_ bv3 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem ?x135) (concat ?x155 ?x378))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x292 (concat ?x207 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x157 (bvadd ?x99 (_ bv3 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem ?x157) (concat ?x162 ?x292))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x219)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x403)))
 (let ((?x127 (bvadd (bvadd (bvadd ?x93 ?x52) ?x280) ?x58)))
 (let (($x351 (= ?x127 ?x393)))
 (let (($x69 (= $x351 true)))
 (let ((?x228 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x328 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x31 (concat ?x226 (concat ?x328 (concat ?x18 ?x228)))))
 (let (($x311 (= ?x31 input.dst.llvm-%m)))
 (let (($x247 (= $x311 true)))
 (let (($x296 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x364 (= (bvand ?x299 (_ bv4294967292 32)) ?x299)))
 (let (($x20 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x299 (bvsub ?x299 (_ bv4 32))) (bvult ?x299 (bvsub ?x299 (_ bv4 32))))))
 (let (($x287 (and true $x20)))
 (let (($x40 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x402 (and $x40 $x287)))
 (let (($x301 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x343 (and (and (and true $x301) $x402) $x364)))
 (let (($x156 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x39 (and true $x156)))
 (let (($x139 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x259 (and $x139 $x39)))
 (let (($x213 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv12 32))) (bvult ?x99 (bvsub ?x99 (_ bv12 32))))))
 (let (($x262 (and (and (and true $x139) $x213) $x259)))
 (let (($x260 (and (and $x262 $x343) $x296)))
 (let (($x80 (= input.dst.llvm-%m ?x31)))
 (let ((?x105 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x164 (= (_ bv0 32) ?x105)))
 (let ((?x381 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x381)))
 (let (($x348 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x358 (and $x348 $x16)))
 (let (($x120 (and $x358 $x164)))
 (let (($x82 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x45 (and $x82 $x120)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x273 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x387 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x273 $x126)))))))
 (let (($x117 (and (and (and $x387 $x45) $x80) $x260)))
 (let (($x108 (forall ((input.ind-%var4277X (_ BitVec 32)) )(let ((?x239 (bvadd (bvmul input.ind-%var4277X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x270))))
 (let ((?x347 (input.spec-%var-m-0.1.1 input.ind-%var4277X)))
 (let (($x309 (input.spec-%var-m-0.0.1 input.ind-%var4277X)))
 (=> $x309 (= ?x347 ?x83))))))))
 ))
 (let (($x33 (forall ((input.ind-%var4276X (_ BitVec 32)) )(let (($x309 (input.spec-%var-m-0.0.1 input.ind-%var4276X)))
 (= $x309 (and (bvule (_ bv0 32) input.ind-%var4276X) (bvult input.ind-%var4276X (_ bv100 32))))))
 ))
 (let (($x133 (and $x33 $x108)))
 (let (($x333 (and $x133 $x117)))
 (let (($x254 (= $x333 true)))
 (let (($x91 (= $x262 true)))
 (let (($x47 (and $x343 $x296)))
 (let (($x215 (= $x47 true)))
 (let (($x198 (and $x215 $x91)))
 (let (($x275 (and $x198 $x254)))
 (let (($x46 (and $x275 $x247)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x327 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x158 (bvuge ?x327 (_ bv1 32))))
 (let (($x67 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x7 (ite $x67 (_ bv1 32) (_ bv0 32))))
 (let (($x363 (= ?x7 (_ bv0 32))))
 (let (($x87 (and $x363 $x158)))
 (let (($x300 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x250 (ite $x300 (_ bv1 32) (_ bv0 32))))
 (let (($x73 (bvuge ?x250 (_ bv1 32))))
 (let (($x322 (and $x73 $x87)))
 (let (($x150 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x106 (ite $x150 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (= ?x106 (_ bv0 32))))
 (let (($x119 (and $x92 $x322)))
 (let (($x297 (and $x119 $x46)))
 (let ((?x9 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x210 (= ?x9 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x319 (bvuge ?x106 (_ bv1 32))))
 (let (($x290 (=> $x319 $x210)))
 (let (($x394 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x283 (= $x319 $x394)))
 (let (($x38 (= false false)))
 (let (($x278 (=> $x92 $x38)))
 (let (($x90 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x22 (= $x92 $x90)))
 (let (($x193 (and (and (and $x22 $x278) $x283) $x290)))
 (let (($x356 (and $x193 $x297)))
 (let (($x27 (= ?x202 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x137 (=> $x73 $x27)))
 (let (($x211 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x395 (= $x73 $x211)))
 (let (($x130 (= ?x250 (_ bv0 32))))
 (let (($x149 (=> $x130 $x38)))
 (let (($x153 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x293 (= $x130 $x153)))
 (let (($x37 (and (and (and $x293 $x149) $x395) $x137)))
 (let (($x218 (and $x37 $x356)))
 (let (($x168 (= ?x317 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x10 (=> $x158 $x168)))
 (let (($x172 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x204 (= $x158 $x172)))
 (let (($x94 (= ?x327 (_ bv0 32))))
 (let (($x329 (=> $x94 $x38)))
 (let (($x86 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x332 (= $x94 $x86)))
 (let (($x349 (and (and (and $x332 $x329) $x204) $x10)))
 (let (($x81 (and $x349 $x218)))
 (let ((?x145 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x338 (= ?x145 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x57 (bvuge ?x7 (_ bv1 32))))
 (let (($x98 (=> $x57 $x338)))
 (let (($x5 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x291 (= $x57 $x5)))
 (let (($x320 (=> $x363 $x38)))
 (let (($x353 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x346 (= $x363 $x353)))
 (let (($x310 (and (and (and $x346 $x320) $x291) $x98)))
 (let (($x173 (and $x310 $x81)))
 (let (($x192 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x203 (and $x192 $x173)))
 (let (($x233 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x171 (and $x233 $x203)))
 (let (($x401 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x375 (and $x401 $x171)))
 (let (($x6 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x404 (and $x6 $x375)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x53 (and $x21 $x404)))
 (let (($x263 (and $x38 $x53)))
 (let (($x59 (= ?x9 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x252 (and $x59 $x263)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x88 (and $x50 $x252)))
 (let (($x227 (and $x38 $x88)))
 (let (($x54 (= ?x202 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x367 (and $x54 $x227)))
 (let (($x304 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x55 (and $x304 $x367)))
 (let (($x350 (and $x38 $x55)))
 (let (($x78 (= ?x317 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x224 (and $x78 $x350)))
 (let (($x339 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x331 (and $x339 $x224)))
 (let (($x257 (and $x38 $x331)))
 (let (($x180 (= ?x145 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x256 (and $x180 $x257)))
 (let (($x229 (bvugt ?x299 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x312 (=> (bvule ?x299 (bvsub (bvadd ?x299 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x229)))))))
 (let (($x223 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x251)))
 (let (($x255 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x288 $x223)))))))
 (let (($x318 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x365 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x157)))
 (let (($x44 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x365 $x318)))))))
 (let (($x372 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x279 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x279)))
 (let (($x122 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x372)))))))
 (let (($x384 (and $x122 $x44)))
 (let (($x392 (and $x384 $x255)))
 (let (($x195 (and $x392 $x312)))
 (let (($x321 (and $x195 $x256)))
 (let (($x242 (=> $x321 $x69)))
 (not $x242)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x317 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x96 (bvmul (_ bv4294967295 32) ?x317)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x393 (bvadd ?x202 ?x96)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x354 (concat ?x25 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x251 (bvadd ?x271 (_ bv3 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem ?x251) (concat ?x15 ?x354))))
 (let ((?x58 (bvmul (_ bv4294967295 32) ?x147)))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x378 (concat ?x362 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x299 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x135 (bvadd ?x299 (_ bv3 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem ?x135) (concat ?x155 ?x378))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x292 (concat ?x207 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x99 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x157 (bvadd ?x99 (_ bv3 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem ?x157) (concat ?x162 ?x292))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x219)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x403)))
 (let ((?x127 (bvadd (bvadd (bvadd ?x93 ?x52) ?x280) ?x58)))
 (let (($x351 (= ?x127 ?x393)))
 (let (($x69 (= $x351 true)))
 (let ((?x228 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x328 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x31 (concat ?x226 (concat ?x328 (concat ?x18 ?x228)))))
 (let (($x311 (= ?x31 input.dst.llvm-%m)))
 (let (($x247 (= $x311 true)))
 (let (($x296 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x364 (= (bvand ?x299 (_ bv4294967292 32)) ?x299)))
 (let (($x20 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x299 (bvsub ?x299 (_ bv4 32))) (bvult ?x299 (bvsub ?x299 (_ bv4 32))))))
 (let (($x287 (and true $x20)))
 (let (($x40 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x402 (and $x40 $x287)))
 (let (($x301 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x343 (and (and (and true $x301) $x402) $x364)))
 (let (($x156 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x39 (and true $x156)))
 (let (($x139 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x259 (and $x139 $x39)))
 (let (($x213 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv12 32))) (bvult ?x99 (bvsub ?x99 (_ bv12 32))))))
 (let (($x262 (and (and (and true $x139) $x213) $x259)))
 (let (($x260 (and (and $x262 $x343) $x296)))
 (let (($x80 (= input.dst.llvm-%m ?x31)))
 (let ((?x105 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x164 (= (_ bv0 32) ?x105)))
 (let ((?x381 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x381)))
 (let (($x348 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x358 (and $x348 $x16)))
 (let (($x120 (and $x358 $x164)))
 (let (($x82 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x45 (and $x82 $x120)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x273 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x387 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x273 $x126)))))))
 (let (($x117 (and (and (and $x387 $x45) $x80) $x260)))
 (let (($x108 (forall ((input.ind-%var4277X (_ BitVec 32)) )(let ((?x239 (bvadd (bvmul input.ind-%var4277X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x270))))
 (let ((?x347 (input.spec-%var-m-0.1.1 input.ind-%var4277X)))
 (let (($x309 (input.spec-%var-m-0.0.1 input.ind-%var4277X)))
 (=> $x309 (= ?x347 ?x83))))))))
 ))
 (let (($x33 (forall ((input.ind-%var4276X (_ BitVec 32)) )(let (($x309 (input.spec-%var-m-0.0.1 input.ind-%var4276X)))
 (= $x309 (and (bvule (_ bv0 32) input.ind-%var4276X) (bvult input.ind-%var4276X (_ bv100 32))))))
 ))
 (let (($x133 (and $x33 $x108)))
 (let (($x333 (and $x133 $x117)))
 (let (($x254 (= $x333 true)))
 (let (($x91 (= $x262 true)))
 (let (($x47 (and $x343 $x296)))
 (let (($x215 (= $x47 true)))
 (let (($x198 (and $x215 $x91)))
 (let (($x275 (and $x198 $x254)))
 (let (($x46 (and $x275 $x247)))
 (let (($x366 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x327 (ite $x366 (_ bv1 32) (_ bv0 32))))
 (let (($x158 (bvuge ?x327 (_ bv1 32))))
 (let (($x67 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x7 (ite $x67 (_ bv1 32) (_ bv0 32))))
 (let (($x363 (= ?x7 (_ bv0 32))))
 (let (($x87 (and $x363 $x158)))
 (let (($x300 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x250 (ite $x300 (_ bv1 32) (_ bv0 32))))
 (let (($x73 (bvuge ?x250 (_ bv1 32))))
 (let (($x322 (and $x73 $x87)))
 (let (($x150 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x106 (ite $x150 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (= ?x106 (_ bv0 32))))
 (let (($x119 (and $x92 $x322)))
 (let (($x297 (and $x119 $x46)))
 (let ((?x9 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x210 (= ?x9 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x319 (bvuge ?x106 (_ bv1 32))))
 (let (($x290 (=> $x319 $x210)))
 (let (($x394 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x283 (= $x319 $x394)))
 (let (($x38 (= false false)))
 (let (($x278 (=> $x92 $x38)))
 (let (($x90 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x22 (= $x92 $x90)))
 (let (($x193 (and (and (and $x22 $x278) $x283) $x290)))
 (let (($x356 (and $x193 $x297)))
 (let (($x27 (= ?x202 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x137 (=> $x73 $x27)))
 (let (($x211 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x395 (= $x73 $x211)))
 (let (($x130 (= ?x250 (_ bv0 32))))
 (let (($x149 (=> $x130 $x38)))
 (let (($x153 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x293 (= $x130 $x153)))
 (let (($x37 (and (and (and $x293 $x149) $x395) $x137)))
 (let (($x218 (and $x37 $x356)))
 (let (($x168 (= ?x317 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x10 (=> $x158 $x168)))
 (let (($x172 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x204 (= $x158 $x172)))
 (let (($x94 (= ?x327 (_ bv0 32))))
 (let (($x329 (=> $x94 $x38)))
 (let (($x86 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x332 (= $x94 $x86)))
 (let (($x349 (and (and (and $x332 $x329) $x204) $x10)))
 (let (($x81 (and $x349 $x218)))
 (let ((?x145 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x338 (= ?x145 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x57 (bvuge ?x7 (_ bv1 32))))
 (let (($x98 (=> $x57 $x338)))
 (let (($x5 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x291 (= $x57 $x5)))
 (let (($x320 (=> $x363 $x38)))
 (let (($x353 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x346 (= $x363 $x353)))
 (let (($x310 (and (and (and $x346 $x320) $x291) $x98)))
 (let (($x173 (and $x310 $x81)))
 (let (($x192 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x203 (and $x192 $x173)))
 (let (($x233 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x171 (and $x233 $x203)))
 (let (($x401 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x375 (and $x401 $x171)))
 (let (($x6 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x404 (and $x6 $x375)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x53 (and $x21 $x404)))
 (let (($x263 (and $x38 $x53)))
 (let (($x59 (= ?x9 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x252 (and $x59 $x263)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x88 (and $x50 $x252)))
 (let (($x227 (and $x38 $x88)))
 (let (($x54 (= ?x202 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x367 (and $x54 $x227)))
 (let (($x304 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x55 (and $x304 $x367)))
 (let (($x350 (and $x38 $x55)))
 (let (($x78 (= ?x317 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x224 (and $x78 $x350)))
 (let (($x339 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x331 (and $x339 $x224)))
 (let (($x257 (and $x38 $x331)))
 (let (($x180 (= ?x145 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x256 (and $x180 $x257)))
 (let (($x229 (bvugt ?x299 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x312 (=> (bvule ?x299 (bvsub (bvadd ?x299 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x229)))))))
 (let (($x223 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x251)))
 (let (($x255 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x288 $x223)))))))
 (let (($x318 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x365 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x157)))
 (let (($x44 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x365 $x318)))))))
 (let (($x372 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x279 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x279)))
 (let (($x122 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x372)))))))
 (let (($x384 (and $x122 $x44)))
 (let (($x392 (and $x384 $x255)))
 (let (($x195 (and $x392 $x312)))
 (let (($x321 (and $x195 $x256)))
 (let (($x242 (=> $x321 $x69)))
 (not $x242)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 223 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 69
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x195 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x9 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x336 (bvadd ?x9 ?x195)))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x189 (concat ?x305 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x231 (bvadd ?x271 (_ bv3 32))))
 (let ((?x389 (concat (select input.dst.llvm-mem ?x231) (concat ?x175 ?x189))))
 (let ((?x269 (bvmul (_ bv4294967295 32) ?x389)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x23 (concat ?x128 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x330 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x261 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x357 (bvadd ?x261 (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x357) (concat ?x330 ?x23))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x264 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x85 (bvadd ?x264 (_ bv3 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem ?x85) (concat ?x393 ?x127))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x43)))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x25)))
 (let ((?x342 (bvadd (bvadd (bvadd ?x354 ?x242) ?x49) ?x269)))
 (let (($x100 (= ?x342 ?x336)))
 (let (($x30 (= $x100 true)))
 (let ((?x171 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x55 (concat ?x367 (concat ?x252 (concat ?x404 ?x171)))))
 (let (($x245 (= ?x55 input.dst.llvm-%m)))
 (let (($x182 (= $x245 true)))
 (let (($x236 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x47 (= (bvand ?x261 (_ bv4294967292 32)) ?x261)))
 (let (($x364 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x261 (bvsub ?x261 (_ bv4 32))) (bvult ?x261 (bvsub ?x261 (_ bv4 32))))))
 (let (($x343 (and true $x364)))
 (let (($x20 (= (bvand ?x264 (_ bv4294967292 32)) ?x264)))
 (let (($x272 (and $x20 $x343)))
 (let (($x253 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x139 (and (and (and true $x253) $x272) $x47)))
 (let (($x91 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x198 (and true $x91)))
 (let (($x213 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x220 (and $x213 $x198)))
 (let (($x167 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x264 (bvsub ?x264 (_ bv12 32))) (bvult ?x264 (bvsub ?x264 (_ bv12 32))))))
 (let (($x174 (and (and (and true $x213) $x167) $x220)))
 (let (($x331 (and (and $x174 $x139) $x236)))
 (let (($x350 (= input.dst.llvm-%m ?x55)))
 (let ((?x356 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x218 (= (_ bv0 32) ?x356)))
 (let ((?x247 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x247)))
 (let (($x311 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x297 (and $x311 $x46)))
 (let (($x81 (and $x297 $x218)))
 (let (($x228 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x228 $x81)))
 (let (($x29 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x275 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x80 $x29)))))))
 (let (($x321 (and (and (and $x275 $x173) $x350) $x331)))
 (let (($x114 (forall ((input.ind-%var4321X (_ BitVec 32)) )(let ((?x386 (bvadd (bvmul input.ind-%var4321X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd ?x386 (_ bv1 32))) (select input.dst.llvm-mem ?x386))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x386 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x386 (_ bv2 32))) ?x16))))
 (let ((?x317 (input.spec-%var-m-0.1.1 input.ind-%var4321X)))
 (let (($x38 (input.spec-%var-m-0.0.1 input.ind-%var4321X)))
 (=> $x38 (= ?x317 ?x76))))))))
 ))
 (let (($x306 (forall ((input.ind-%var4320X (_ BitVec 32)) )(let (($x38 (input.spec-%var-m-0.0.1 input.ind-%var4320X)))
 (= $x38 (and (bvule (_ bv0 32) input.ind-%var4320X) (bvult input.ind-%var4320X (_ bv100 32))))))
 ))
 (let (($x328 (and $x306 $x114)))
 (let (($x159 (and $x328 $x321)))
 (let (($x131 (= $x159 true)))
 (let (($x19 (= $x174 true)))
 (let (($x41 (and $x139 $x236)))
 (let (($x185 (= $x41 true)))
 (let (($x295 (and $x185 $x19)))
 (let (($x181 (and $x295 $x131)))
 (let (($x335 (and $x181 $x182)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x294 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x158 (= ?x294 (_ bv0 32))))
 (let (($x346 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x51 (ite $x346 (_ bv1 32) (_ bv0 32))))
 (let (($x338 (bvuge ?x51 (_ bv1 32))))
 (let (($x121 (and $x338 $x158)))
 (let (($x149 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x11 (ite $x149 (_ bv1 32) (_ bv0 32))))
 (let (($x27 (bvuge ?x11 (_ bv1 32))))
 (let (($x301 (and $x27 $x121)))
 (let (($x278 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x148 (ite $x278 (_ bv1 32) (_ bv0 32))))
 (let (($x319 (= ?x148 (_ bv0 32))))
 (let (($x221 (and $x319 $x301)))
 (let (($x219 (and $x221 $x335)))
 (let ((?x383 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x322 (= ?x383 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x210 (bvuge ?x148 (_ bv1 32))))
 (let (($x119 (=> $x210 $x322)))
 (let (($x290 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x193 (= $x210 $x290)))
 (let (($x229 (= false false)))
 (let (($x206 (=> $x319 $x229)))
 (let (($x283 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x196 (= $x319 $x283)))
 (let (($x355 (and (and (and $x196 $x206) $x193) $x119)))
 (let (($x403 (and $x355 $x219)))
 (let (($x106 (= ?x9 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x92 (=> $x27 $x106)))
 (let (($x137 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x37 (= $x27 $x137)))
 (let (($x73 (= ?x11 (_ bv0 32))))
 (let (($x400 (=> $x73 $x229)))
 (let (($x395 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x26 (= $x73 $x395)))
 (let (($x22 (and (and (and $x26 $x400) $x37) $x92)))
 (let (($x93 (and $x22 $x403)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x250 (= ?x202 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x168 (bvuge ?x294 (_ bv1 32))))
 (let (($x130 (=> $x168 $x250)))
 (let (($x10 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x349 (= $x168 $x10)))
 (let (($x153 (and (and (= $x158 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x158 $x229)) $x349)))
 (let (($x293 (and $x153 $x130)))
 (let (($x244 (and $x293 $x93)))
 (let (($x327 (= ?x195 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x94 (=> $x338 $x327)))
 (let (($x98 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x310 (= $x338 $x98)))
 (let (($x57 (= ?x51 (_ bv0 32))))
 (let (($x398 (=> $x57 $x229)))
 (let (($x291 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x397 (= $x57 $x291)))
 (let (($x332 (and (and (and $x397 $x398) $x310) $x94)))
 (let (($x268 (and $x332 $x244)))
 (let (($x353 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x162 (and $x353 $x268)))
 (let (($x363 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x141 (and $x363 $x162)))
 (let (($x67 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x207 (and $x67 $x141)))
 (let (($x163 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x240 (and $x163 $x207)))
 (let (($x391 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x292 (and $x391 $x240)))
 (let (($x388 (and $x229 $x292)))
 (let (($x79 (= ?x383 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x52 (and $x79 $x388)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x379 (and $x21 $x52)))
 (let (($x380 (and $x229 $x379)))
 (let (($x59 (= ?x9 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x191 (and $x59 $x380)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x155 (and $x50 $x191)))
 (let (($x307 (and $x229 $x155)))
 (let (($x54 (= ?x202 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x362 (and $x54 $x307)))
 (let (($x377 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x14 (and $x377 $x362)))
 (let (($x378 (and $x229 $x14)))
 (let (($x135 (= ?x195 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x222 (and $x135 $x378)))
 (let (($x77 (bvugt ?x261 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x357)))
 (let (($x298 (=> (bvule ?x261 (bvsub (bvadd ?x261 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x146 $x77)))))))
 (let (($x385 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x361 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x166 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x361 $x385)))))))
 (let (($x282 (bvugt ?x264 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x179 (=> (bvule ?x264 (bvsub (bvadd ?x264 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x279 $x282)))))))
 (let (($x122 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x281 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x281)))
 (let (($x318 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x122)))))))
 (let (($x8 (and $x318 $x179)))
 (let (($x177 (and $x8 $x166)))
 (let (($x255 (and $x177 $x298)))
 (let (($x280 (and $x255 $x222)))
 (let (($x115 (=> $x280 $x30)))
 (not $x115))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x195 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x9 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x336 (bvadd ?x9 ?x195)))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x189 (concat ?x305 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x231 (bvadd ?x271 (_ bv3 32))))
 (let ((?x389 (concat (select input.dst.llvm-mem ?x231) (concat ?x175 ?x189))))
 (let ((?x269 (bvmul (_ bv4294967295 32) ?x389)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x23 (concat ?x128 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x330 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x261 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x357 (bvadd ?x261 (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x357) (concat ?x330 ?x23))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x264 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x85 (bvadd ?x264 (_ bv3 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem ?x85) (concat ?x393 ?x127))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x43)))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x25)))
 (let ((?x342 (bvadd (bvadd (bvadd ?x354 ?x242) ?x49) ?x269)))
 (let (($x100 (= ?x342 ?x336)))
 (let (($x30 (= $x100 true)))
 (let ((?x171 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x404 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x55 (concat ?x367 (concat ?x252 (concat ?x404 ?x171)))))
 (let (($x245 (= ?x55 input.dst.llvm-%m)))
 (let (($x182 (= $x245 true)))
 (let (($x236 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x47 (= (bvand ?x261 (_ bv4294967292 32)) ?x261)))
 (let (($x364 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x261 (bvsub ?x261 (_ bv4 32))) (bvult ?x261 (bvsub ?x261 (_ bv4 32))))))
 (let (($x343 (and true $x364)))
 (let (($x20 (= (bvand ?x264 (_ bv4294967292 32)) ?x264)))
 (let (($x272 (and $x20 $x343)))
 (let (($x253 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x139 (and (and (and true $x253) $x272) $x47)))
 (let (($x91 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x198 (and true $x91)))
 (let (($x213 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x220 (and $x213 $x198)))
 (let (($x167 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x264 (bvsub ?x264 (_ bv12 32))) (bvult ?x264 (bvsub ?x264 (_ bv12 32))))))
 (let (($x174 (and (and (and true $x213) $x167) $x220)))
 (let (($x331 (and (and $x174 $x139) $x236)))
 (let (($x350 (= input.dst.llvm-%m ?x55)))
 (let ((?x356 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x218 (= (_ bv0 32) ?x356)))
 (let ((?x247 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x247)))
 (let (($x311 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x297 (and $x311 $x46)))
 (let (($x81 (and $x297 $x218)))
 (let (($x228 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x228 $x81)))
 (let (($x29 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x275 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x80 $x29)))))))
 (let (($x321 (and (and (and $x275 $x173) $x350) $x331)))
 (let (($x114 (forall ((input.ind-%var4321X (_ BitVec 32)) )(let ((?x386 (bvadd (bvmul input.ind-%var4321X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd ?x386 (_ bv1 32))) (select input.dst.llvm-mem ?x386))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x386 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x386 (_ bv2 32))) ?x16))))
 (let ((?x317 (input.spec-%var-m-0.1.1 input.ind-%var4321X)))
 (let (($x38 (input.spec-%var-m-0.0.1 input.ind-%var4321X)))
 (=> $x38 (= ?x317 ?x76))))))))
 ))
 (let (($x306 (forall ((input.ind-%var4320X (_ BitVec 32)) )(let (($x38 (input.spec-%var-m-0.0.1 input.ind-%var4320X)))
 (= $x38 (and (bvule (_ bv0 32) input.ind-%var4320X) (bvult input.ind-%var4320X (_ bv100 32))))))
 ))
 (let (($x328 (and $x306 $x114)))
 (let (($x159 (and $x328 $x321)))
 (let (($x131 (= $x159 true)))
 (let (($x19 (= $x174 true)))
 (let (($x41 (and $x139 $x236)))
 (let (($x185 (= $x41 true)))
 (let (($x295 (and $x185 $x19)))
 (let (($x181 (and $x295 $x131)))
 (let (($x335 (and $x181 $x182)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x294 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x158 (= ?x294 (_ bv0 32))))
 (let (($x346 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x51 (ite $x346 (_ bv1 32) (_ bv0 32))))
 (let (($x338 (bvuge ?x51 (_ bv1 32))))
 (let (($x121 (and $x338 $x158)))
 (let (($x149 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x11 (ite $x149 (_ bv1 32) (_ bv0 32))))
 (let (($x27 (bvuge ?x11 (_ bv1 32))))
 (let (($x301 (and $x27 $x121)))
 (let (($x278 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x148 (ite $x278 (_ bv1 32) (_ bv0 32))))
 (let (($x319 (= ?x148 (_ bv0 32))))
 (let (($x221 (and $x319 $x301)))
 (let (($x219 (and $x221 $x335)))
 (let ((?x383 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x322 (= ?x383 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x210 (bvuge ?x148 (_ bv1 32))))
 (let (($x119 (=> $x210 $x322)))
 (let (($x290 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x193 (= $x210 $x290)))
 (let (($x229 (= false false)))
 (let (($x206 (=> $x319 $x229)))
 (let (($x283 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x196 (= $x319 $x283)))
 (let (($x355 (and (and (and $x196 $x206) $x193) $x119)))
 (let (($x403 (and $x355 $x219)))
 (let (($x106 (= ?x9 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x92 (=> $x27 $x106)))
 (let (($x137 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x37 (= $x27 $x137)))
 (let (($x73 (= ?x11 (_ bv0 32))))
 (let (($x400 (=> $x73 $x229)))
 (let (($x395 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x26 (= $x73 $x395)))
 (let (($x22 (and (and (and $x26 $x400) $x37) $x92)))
 (let (($x93 (and $x22 $x403)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x250 (= ?x202 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x168 (bvuge ?x294 (_ bv1 32))))
 (let (($x130 (=> $x168 $x250)))
 (let (($x10 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x349 (= $x168 $x10)))
 (let (($x153 (and (and (= $x158 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x158 $x229)) $x349)))
 (let (($x293 (and $x153 $x130)))
 (let (($x244 (and $x293 $x93)))
 (let (($x327 (= ?x195 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x94 (=> $x338 $x327)))
 (let (($x98 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x310 (= $x338 $x98)))
 (let (($x57 (= ?x51 (_ bv0 32))))
 (let (($x398 (=> $x57 $x229)))
 (let (($x291 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x397 (= $x57 $x291)))
 (let (($x332 (and (and (and $x397 $x398) $x310) $x94)))
 (let (($x268 (and $x332 $x244)))
 (let (($x353 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x162 (and $x353 $x268)))
 (let (($x363 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x141 (and $x363 $x162)))
 (let (($x67 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x207 (and $x67 $x141)))
 (let (($x163 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x240 (and $x163 $x207)))
 (let (($x391 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x292 (and $x391 $x240)))
 (let (($x388 (and $x229 $x292)))
 (let (($x79 (= ?x383 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x52 (and $x79 $x388)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x379 (and $x21 $x52)))
 (let (($x380 (and $x229 $x379)))
 (let (($x59 (= ?x9 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x191 (and $x59 $x380)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x155 (and $x50 $x191)))
 (let (($x307 (and $x229 $x155)))
 (let (($x54 (= ?x202 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x362 (and $x54 $x307)))
 (let (($x377 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x14 (and $x377 $x362)))
 (let (($x378 (and $x229 $x14)))
 (let (($x135 (= ?x195 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x222 (and $x135 $x378)))
 (let (($x77 (bvugt ?x261 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x357)))
 (let (($x298 (=> (bvule ?x261 (bvsub (bvadd ?x261 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x146 $x77)))))))
 (let (($x385 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x361 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x166 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x361 $x385)))))))
 (let (($x282 (bvugt ?x264 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x179 (=> (bvule ?x264 (bvsub (bvadd ?x264 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x279 $x282)))))))
 (let (($x122 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x281 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x281)))
 (let (($x318 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x122)))))))
 (let (($x8 (and $x318 $x179)))
 (let (($x177 (and $x8 $x166)))
 (let (($x255 (and $x177 $x298)))
 (let (($x280 (and $x255 $x222)))
 (let (($x115 (=> $x280 $x30)))
 (not $x115))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 70
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x36 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x286 (bvadd ?x271 (_ bv3 32))))
 (let ((?x142 (concat (select input.dst.llvm-mem ?x286) (concat ?x133 ?x36))))
 (let ((?x273 (bvmul (_ bv4294967295 32) ?x142)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x320 (concat ?x203 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x223 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x248 (bvadd ?x223 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x248) (concat ?x125 ?x320))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x342 (concat ?x269 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x303 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x56 (bvadd ?x303 (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x56) (concat ?x100 ?x342))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x308)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x305)))
 (let ((?x239 (bvadd (bvadd (bvadd ?x189 ?x188) ?x315) ?x273)))
 (let ((?x383 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x84 (= ?x383 ?x239)))
 (let (($x285 (= $x84 true)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x191 (concat ?x52 (concat ?x240 ?x141)))))
 (let (($x234 (= ?x155 input.dst.llvm-%m)))
 (let (($x326 (= $x234 true)))
 (let (($x48 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x41 (= (bvand ?x223 (_ bv4294967292 32)) ?x223)))
 (let (($x47 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x223 (bvsub ?x223 (_ bv4 32))) (bvult ?x223 (bvsub ?x223 (_ bv4 32))))))
 (let (($x139 (and true $x47)))
 (let (($x364 (= (bvand ?x303 (_ bv4294967292 32)) ?x303)))
 (let (($x214 (and $x364 $x139)))
 (let (($x287 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x213 (and (and (and true $x287) $x214) $x41)))
 (let (($x19 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x295 (and true $x19)))
 (let (($x167 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x28 (and $x167 $x295)))
 (let (($x262 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x303 (bvsub ?x303 (_ bv12 32))) (bvult ?x303 (bvsub ?x303 (_ bv12 32))))))
 (let (($x274 (and (and (and true $x167) $x262) $x28)))
 (let (($x14 (and (and $x274 $x213) $x48)))
 (let (($x307 (= input.dst.llvm-%m ?x155)))
 (let ((?x403 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x93 (= (_ bv0 32) ?x403)))
 (let ((?x182 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x335 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x182)))
 (let (($x245 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x219 (and $x245 $x335)))
 (let (($x244 (and $x219 $x93)))
 (let (($x171 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x268 (and $x171 $x244)))
 (let (($x256 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x350 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x350 $x256)))))))
 (let (($x280 (and (and (and $x181 $x268) $x307) $x14)))
 (let (($x263 (forall ((input.ind-%var4365X (_ BitVec 32)) )(let ((?x18 (bvadd (bvmul input.ind-%var4365X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x46))))
 (let ((?x202 (input.spec-%var-m-0.1.1 input.ind-%var4365X)))
 (let (($x229 (input.spec-%var-m-0.0.1 input.ind-%var4365X)))
 (=> $x229 (= ?x202 ?x257))))))))
 ))
 (let (($x381 (forall ((input.ind-%var4364X (_ BitVec 32)) )(let (($x229 (input.spec-%var-m-0.0.1 input.ind-%var4364X)))
 (= $x229 (and (bvule (_ bv0 32) input.ind-%var4364X) (bvult input.ind-%var4364X (_ bv100 32))))))
 ))
 (let (($x252 (and $x381 $x263)))
 (let (($x136 (and $x252 $x280)))
 (let (($x15 (= $x136 true)))
 (let (($x235 (= $x274 true)))
 (let (($x74 (and $x213 $x48)))
 (let (($x113 (= $x74 true)))
 (let (($x396 (and $x113 $x235)))
 (let (($x112 (and $x396 $x15)))
 (let (($x134 (and $x112 $x326)))
 (let (($x116 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x373 (ite $x116 (_ bv1 32) (_ bv0 32))))
 (let (($x168 (= ?x373 (_ bv0 32))))
 (let (($x397 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x399 (ite $x397 (_ bv1 32) (_ bv0 32))))
 (let (($x338 (= ?x399 (_ bv0 32))))
 (let (($x237 (and $x338 $x168)))
 (let (($x400 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x140 (ite $x400 (_ bv1 32) (_ bv0 32))))
 (let (($x106 (bvuge ?x140 (_ bv1 32))))
 (let (($x253 (and $x106 $x237)))
 (let (($x206 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x124 (ite $x206 (_ bv1 32) (_ bv0 32))))
 (let (($x210 (= ?x124 (_ bv0 32))))
 (let (($x215 (and $x210 $x253)))
 (let (($x43 (and $x215 $x134)))
 (let ((?x233 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x301 (= ?x233 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x322 (bvuge ?x124 (_ bv1 32))))
 (let (($x221 (=> $x322 $x301)))
 (let (($x119 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x355 (= $x322 $x119)))
 (let (($x77 (= false false)))
 (let (($x87 (=> $x210 $x77)))
 (let (($x193 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x267 (= $x210 $x193)))
 (let (($x40 (and (and (and $x267 $x87) $x355) $x221)))
 (let (($x25 (and $x40 $x43)))
 (let (($x148 (= ?x383 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x319 (=> $x106 $x148)))
 (let (($x92 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x22 (= $x106 $x92)))
 (let (($x27 (= ?x140 (_ bv0 32))))
 (let (($x150 (=> $x27 $x77)))
 (let (($x37 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x90 (= $x27 $x37)))
 (let (($x196 (and (and (and $x90 $x150) $x22) $x319)))
 (let (($x354 (and $x196 $x25)))
 (let ((?x9 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x11 (= ?x9 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x250 (bvuge ?x373 (_ bv1 32))))
 (let (($x73 (=> $x250 $x11)))
 (let (($x130 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x293 (= $x250 $x130)))
 (let (($x395 (and (and (= $x168 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x168 $x77)) $x293)))
 (let (($x26 (and $x395 $x73)))
 (let (($x69 (and $x26 $x354)))
 (let ((?x255 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x294 (= ?x255 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x327 (bvuge ?x399 (_ bv1 32))))
 (let (($x158 (=> $x327 $x294)))
 (let (($x94 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x332 (= $x327 $x94)))
 (let (($x366 (=> $x338 $x77)))
 (let (($x310 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x86 (= $x338 $x310)))
 (let (($x246 (and (and (and $x86 $x366) $x332) $x158)))
 (let (($x96 (and $x246 $x69)))
 (let (($x291 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x393 (and $x291 $x96)))
 (let (($x57 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x147 (and $x57 $x393)))
 (let (($x346 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x58 (and $x346 $x147)))
 (let (($x186 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x66 (and $x186 $x58)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x127 (and $x7 $x66)))
 (let (($x351 (and $x77 $x127)))
 (let (($x192 (= ?x233 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x242 (and $x192 $x351)))
 (let (($x391 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x24 (and $x391 $x242)))
 (let (($x390 (and $x77 $x24)))
 (let (($x79 (= ?x383 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x289 (and $x79 $x390)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x330 (and $x21 $x289)))
 (let (($x371 (and $x77 $x330)))
 (let (($x59 (= ?x9 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x128 (and $x59 $x371)))
 (let (($x176 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x61 (and $x176 $x128)))
 (let (($x23 (and $x77 $x61)))
 (let (($x357 (= ?x255 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x184 (and $x357 $x23)))
 (let (($x95 (bvugt ?x223 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x312 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x376 (=> (bvule ?x223 (bvsub (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x312 $x95)))))))
 (let (($x372 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x251 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x372)))))))
 (let (($x89 (bvugt ?x303 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x281 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x56)))
 (let (($x384 (=> (bvule ?x303 (bvsub (bvadd ?x303 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x281 $x89)))))))
 (let (($x318 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x132 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x282 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x318)))))))
 (let (($x205 (and $x282 $x384)))
 (let (($x123 (and $x205 $x251)))
 (let (($x166 (and $x123 $x376)))
 (let (($x49 (and $x166 $x184)))
 (let (($x270 (=> $x49 $x285)))
 (not $x270)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x36 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x286 (bvadd ?x271 (_ bv3 32))))
 (let ((?x142 (concat (select input.dst.llvm-mem ?x286) (concat ?x133 ?x36))))
 (let ((?x273 (bvmul (_ bv4294967295 32) ?x142)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x320 (concat ?x203 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x223 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x248 (bvadd ?x223 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x248) (concat ?x125 ?x320))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x342 (concat ?x269 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x303 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x56 (bvadd ?x303 (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x56) (concat ?x100 ?x342))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x308)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x305)))
 (let ((?x239 (bvadd (bvadd (bvadd ?x189 ?x188) ?x315) ?x273)))
 (let ((?x383 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x84 (= ?x383 ?x239)))
 (let (($x285 (= $x84 true)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x191 (concat ?x52 (concat ?x240 ?x141)))))
 (let (($x234 (= ?x155 input.dst.llvm-%m)))
 (let (($x326 (= $x234 true)))
 (let (($x48 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x41 (= (bvand ?x223 (_ bv4294967292 32)) ?x223)))
 (let (($x47 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x223 (bvsub ?x223 (_ bv4 32))) (bvult ?x223 (bvsub ?x223 (_ bv4 32))))))
 (let (($x139 (and true $x47)))
 (let (($x364 (= (bvand ?x303 (_ bv4294967292 32)) ?x303)))
 (let (($x214 (and $x364 $x139)))
 (let (($x287 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x213 (and (and (and true $x287) $x214) $x41)))
 (let (($x19 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x295 (and true $x19)))
 (let (($x167 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x28 (and $x167 $x295)))
 (let (($x262 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x303 (bvsub ?x303 (_ bv12 32))) (bvult ?x303 (bvsub ?x303 (_ bv12 32))))))
 (let (($x274 (and (and (and true $x167) $x262) $x28)))
 (let (($x14 (and (and $x274 $x213) $x48)))
 (let (($x307 (= input.dst.llvm-%m ?x155)))
 (let ((?x403 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x93 (= (_ bv0 32) ?x403)))
 (let ((?x182 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x335 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x182)))
 (let (($x245 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x219 (and $x245 $x335)))
 (let (($x244 (and $x219 $x93)))
 (let (($x171 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x268 (and $x171 $x244)))
 (let (($x256 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x350 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x350 $x256)))))))
 (let (($x280 (and (and (and $x181 $x268) $x307) $x14)))
 (let (($x263 (forall ((input.ind-%var4365X (_ BitVec 32)) )(let ((?x18 (bvadd (bvmul input.ind-%var4365X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x46))))
 (let ((?x202 (input.spec-%var-m-0.1.1 input.ind-%var4365X)))
 (let (($x229 (input.spec-%var-m-0.0.1 input.ind-%var4365X)))
 (=> $x229 (= ?x202 ?x257))))))))
 ))
 (let (($x381 (forall ((input.ind-%var4364X (_ BitVec 32)) )(let (($x229 (input.spec-%var-m-0.0.1 input.ind-%var4364X)))
 (= $x229 (and (bvule (_ bv0 32) input.ind-%var4364X) (bvult input.ind-%var4364X (_ bv100 32))))))
 ))
 (let (($x252 (and $x381 $x263)))
 (let (($x136 (and $x252 $x280)))
 (let (($x15 (= $x136 true)))
 (let (($x235 (= $x274 true)))
 (let (($x74 (and $x213 $x48)))
 (let (($x113 (= $x74 true)))
 (let (($x396 (and $x113 $x235)))
 (let (($x112 (and $x396 $x15)))
 (let (($x134 (and $x112 $x326)))
 (let (($x116 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x373 (ite $x116 (_ bv1 32) (_ bv0 32))))
 (let (($x168 (= ?x373 (_ bv0 32))))
 (let (($x397 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x399 (ite $x397 (_ bv1 32) (_ bv0 32))))
 (let (($x338 (= ?x399 (_ bv0 32))))
 (let (($x237 (and $x338 $x168)))
 (let (($x400 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x140 (ite $x400 (_ bv1 32) (_ bv0 32))))
 (let (($x106 (bvuge ?x140 (_ bv1 32))))
 (let (($x253 (and $x106 $x237)))
 (let (($x206 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x124 (ite $x206 (_ bv1 32) (_ bv0 32))))
 (let (($x210 (= ?x124 (_ bv0 32))))
 (let (($x215 (and $x210 $x253)))
 (let (($x43 (and $x215 $x134)))
 (let ((?x233 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x301 (= ?x233 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x322 (bvuge ?x124 (_ bv1 32))))
 (let (($x221 (=> $x322 $x301)))
 (let (($x119 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x355 (= $x322 $x119)))
 (let (($x77 (= false false)))
 (let (($x87 (=> $x210 $x77)))
 (let (($x193 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x267 (= $x210 $x193)))
 (let (($x40 (and (and (and $x267 $x87) $x355) $x221)))
 (let (($x25 (and $x40 $x43)))
 (let (($x148 (= ?x383 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x319 (=> $x106 $x148)))
 (let (($x92 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x22 (= $x106 $x92)))
 (let (($x27 (= ?x140 (_ bv0 32))))
 (let (($x150 (=> $x27 $x77)))
 (let (($x37 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x90 (= $x27 $x37)))
 (let (($x196 (and (and (and $x90 $x150) $x22) $x319)))
 (let (($x354 (and $x196 $x25)))
 (let ((?x9 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x11 (= ?x9 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x250 (bvuge ?x373 (_ bv1 32))))
 (let (($x73 (=> $x250 $x11)))
 (let (($x130 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x293 (= $x250 $x130)))
 (let (($x395 (and (and (= $x168 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x168 $x77)) $x293)))
 (let (($x26 (and $x395 $x73)))
 (let (($x69 (and $x26 $x354)))
 (let ((?x255 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x294 (= ?x255 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x327 (bvuge ?x399 (_ bv1 32))))
 (let (($x158 (=> $x327 $x294)))
 (let (($x94 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x332 (= $x327 $x94)))
 (let (($x366 (=> $x338 $x77)))
 (let (($x310 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x86 (= $x338 $x310)))
 (let (($x246 (and (and (and $x86 $x366) $x332) $x158)))
 (let (($x96 (and $x246 $x69)))
 (let (($x291 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x393 (and $x291 $x96)))
 (let (($x57 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x147 (and $x57 $x393)))
 (let (($x346 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x58 (and $x346 $x147)))
 (let (($x186 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x66 (and $x186 $x58)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x127 (and $x7 $x66)))
 (let (($x351 (and $x77 $x127)))
 (let (($x192 (= ?x233 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x242 (and $x192 $x351)))
 (let (($x391 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x24 (and $x391 $x242)))
 (let (($x390 (and $x77 $x24)))
 (let (($x79 (= ?x383 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x289 (and $x79 $x390)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x330 (and $x21 $x289)))
 (let (($x371 (and $x77 $x330)))
 (let (($x59 (= ?x9 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x128 (and $x59 $x371)))
 (let (($x176 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x61 (and $x176 $x128)))
 (let (($x23 (and $x77 $x61)))
 (let (($x357 (= ?x255 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x184 (and $x357 $x23)))
 (let (($x95 (bvugt ?x223 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x312 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x376 (=> (bvule ?x223 (bvsub (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x312 $x95)))))))
 (let (($x372 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x251 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x372)))))))
 (let (($x89 (bvugt ?x303 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x281 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x56)))
 (let (($x384 (=> (bvule ?x303 (bvsub (bvadd ?x303 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x281 $x89)))))))
 (let (($x318 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x132 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x282 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x318)))))))
 (let (($x205 (and $x282 $x384)))
 (let (($x123 (and $x205 $x251)))
 (let (($x166 (and $x123 $x376)))
 (let (($x49 (and $x166 $x184)))
 (let (($x270 (=> $x49 $x285)))
 (not $x270)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 219 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 71
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x383 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x117 (bvmul (_ bv4294967295 32) ?x383)))
 (let ((?x166 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x16 (bvadd ?x166 ?x117)))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x31 (concat ?x254 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x99 (bvadd ?x271 (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x99) (concat ?x241 ?x31))))
 (let ((?x260 (bvmul (_ bv4294967295 32) ?x80)))
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x180 (concat ?x398 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x385 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x299 (bvadd ?x385 (_ bv3 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem ?x299) (concat ?x60 ?x180))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x199 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x238 (bvadd ?x199 (_ bv3 32))))
 (let ((?x160 (concat (select input.dst.llvm-mem ?x238) (concat ?x285 ?x239))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x316)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x216)))
 (let ((?x120 (bvadd (bvadd (bvadd ?x36 ?x160) ?x302) ?x260)))
 (let (($x333 (= ?x120 ?x16)))
 (let (($x65 (= $x333 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x330 (concat ?x289 (concat ?x242 (concat ?x66 ?x147)))))
 (let (($x103 (= ?x330 input.dst.llvm-%m)))
 (let (($x243 (= $x103 true)))
 (let (($x39 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x74 (= (bvand ?x385 (_ bv4294967292 32)) ?x385)))
 (let (($x41 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x385 (bvsub ?x385 (_ bv4 32))) (bvult ?x385 (bvsub ?x385 (_ bv4 32))))))
 (let (($x213 (and true $x41)))
 (let (($x47 (= (bvand ?x199 (_ bv4294967292 32)) ?x199)))
 (let (($x309 (and $x47 $x213)))
 (let (($x343 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x167 (and (and (and true $x343) $x309) $x74)))
 (let (($x235 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x396 (and true $x235)))
 (let (($x262 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x304 (and $x262 $x396)))
 (let (($x174 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x199 (bvsub ?x199 (_ bv12 32))) (bvult ?x199 (bvsub ?x199 (_ bv12 32))))))
 (let (($x83 (and (and (and true $x262) $x174) $x304)))
 (let (($x61 (and (and $x83 $x167) $x39)))
 (let (($x371 (= input.dst.llvm-%m ?x330)))
 (let ((?x25 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x354 (= (_ bv0 32) ?x25)))
 (let ((?x326 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x326)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (and $x234 $x134)))
 (let (($x69 (and $x43 $x354)))
 (let (($x141 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x96 (and $x141 $x69)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x112 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x307 $x222)))))))
 (let (($x49 (and (and (and $x112 $x96) $x371) $x61)))
 (let (($x388 (forall ((input.ind-%var4409X (_ BitVec 32)) )(let ((?x404 (bvadd (bvmul input.ind-%var4409X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv1 32))) (select input.dst.llvm-mem ?x404))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv2 32))) ?x335))))
 (let ((?x9 (input.spec-%var-m-0.1.1 input.ind-%var4409X)))
 (let (($x77 (input.spec-%var-m-0.0.1 input.ind-%var4409X)))
 (=> $x77 (= ?x9 ?x378))))))))
 ))
 (let (($x247 (forall ((input.ind-%var4408X (_ BitVec 32)) )(let (($x77 (input.spec-%var-m-0.0.1 input.ind-%var4408X)))
 (= $x77 (and (bvule (_ bv0 32) input.ind-%var4408X) (bvult input.ind-%var4408X (_ bv100 32))))))
 ))
 (let (($x52 (and $x247 $x388)))
 (let (($x13 (and $x52 $x49)))
 (let (($x175 (= $x13 true)))
 (let (($x45 (= $x83 true)))
 (let (($x249 (and $x167 $x39)))
 (let (($x156 (= $x249 true)))
 (let (($x105 (and $x156 $x45)))
 (let (($x178 (and $x105 $x175)))
 (let (($x17 (and $x178 $x243)))
 (let (($x300 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x211 (ite $x300 (_ bv1 32) (_ bv0 32))))
 (let (($x11 (bvuge ?x211 (_ bv1 32))))
 (let (($x86 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x172 (ite $x86 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x172 (_ bv1 32))))
 (let (($x402 (and $x294 $x11)))
 (let (($x150 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x394 (ite $x150 (_ bv1 32) (_ bv0 32))))
 (let (($x106 (= ?x394 (_ bv0 32))))
 (let (($x287 (and $x106 $x402)))
 (let (($x87 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x107 (ite $x87 (_ bv1 32) (_ bv0 32))))
 (let (($x322 (= ?x107 (_ bv0 32))))
 (let (($x185 (and $x322 $x287)))
 (let (($x308 (and $x185 $x17)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x253 (= ?x363 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x301 (bvuge ?x107 (_ bv1 32))))
 (let (($x215 (=> $x301 $x253)))
 (let (($x221 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x40 (= $x301 $x221)))
 (let (($x95 (= false false)))
 (let (($x121 (=> $x322 $x95)))
 (let (($x355 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x75 (= $x322 $x355)))
 (let (($x20 (and (and (and $x75 $x121) $x40) $x215)))
 (let (($x305 (and $x20 $x308)))
 (let ((?x233 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x124 (= ?x233 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x148 (bvuge ?x394 (_ bv1 32))))
 (let (($x210 (=> $x148 $x124)))
 (let (($x319 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x196 (= $x148 $x319)))
 (let (($x193 (and (and (= $x106 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x106 $x95)) $x196)))
 (let (($x267 (and $x193 $x210)))
 (let (($x189 (and $x267 $x305)))
 (let (($x140 (= ?x383 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x27 (=> $x11 $x140)))
 (let (($x73 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x26 (= $x11 $x73)))
 (let (($x250 (= ?x211 (_ bv0 32))))
 (let (($x149 (=> $x250 $x95)))
 (let (($x293 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x395 (= $x250 $x293)))
 (let (($x90 (and (and (and $x395 $x149) $x26) $x27)))
 (let (($x115 (and $x90 $x189)))
 (let (($x373 (= ?x166 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x168 (=> $x294 $x373)))
 (let (($x158 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x246 (= $x294 $x158)))
 (let (($x327 (= ?x172 (_ bv0 32))))
 (let (($x329 (=> $x327 $x95)))
 (let (($x332 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x204 (= $x327 $x332)))
 (let (($x153 (and (and (and $x204 $x329) $x246) $x168)))
 (let (($x336 (and $x153 $x115)))
 (let (($x310 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x100 (and $x310 $x336)))
 (let (($x338 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x389 (and $x338 $x100)))
 (let (($x397 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x269 (and $x397 $x389)))
 (let (($x5 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x118 (and $x5 $x269)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x342 (and $x51 $x118)))
 (let (($x30 (and $x95 $x342)))
 (let (($x353 (= ?x363 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x188 (and $x353 $x30)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x72 (and $x7 $x188)))
 (let (($x347 (and $x95 $x72)))
 (let (($x192 (= ?x233 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x101 (and $x192 $x347)))
 (let (($x391 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x125 (and $x391 $x101)))
 (let (($x102 (and $x95 $x125)))
 (let (($x79 (= ?x383 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x203 (and $x79 $x102)))
 (let (($x146 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x212 (and $x146 $x203)))
 (let (($x320 (and $x95 $x212)))
 (let (($x248 (= ?x166 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x12 (and $x248 $x320)))
 (let (($x392 (bvugt ?x385 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x299)))
 (let (($x145 (=> (bvule ?x385 (bvsub (bvadd ?x385 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x392)))))))
 (let (($x122 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x231 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x122)))))))
 (let (($x157 (bvugt ?x199 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x238)))
 (let (($x8 (=> (bvule ?x199 (bvsub (bvadd ?x199 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x157)))))))
 (let (($x282 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x288 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x288)))
 (let (($x89 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x85 $x282)))))))
 (let (($x370 (and $x89 $x8)))
 (let (($x68 (and $x370 $x231)))
 (let (($x251 (and $x68 $x145)))
 (let (($x315 (and $x251 $x12)))
 (let (($x359 (=> $x315 $x65)))
 (not $x359)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x383 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x117 (bvmul (_ bv4294967295 32) ?x383)))
 (let ((?x166 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x16 (bvadd ?x166 ?x117)))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x31 (concat ?x254 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x99 (bvadd ?x271 (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x99) (concat ?x241 ?x31))))
 (let ((?x260 (bvmul (_ bv4294967295 32) ?x80)))
 (let ((?x398 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x180 (concat ?x398 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x385 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x299 (bvadd ?x385 (_ bv3 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem ?x299) (concat ?x60 ?x180))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x199 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x238 (bvadd ?x199 (_ bv3 32))))
 (let ((?x160 (concat (select input.dst.llvm-mem ?x238) (concat ?x285 ?x239))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x316)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x216)))
 (let ((?x120 (bvadd (bvadd (bvadd ?x36 ?x160) ?x302) ?x260)))
 (let (($x333 (= ?x120 ?x16)))
 (let (($x65 (= $x333 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x330 (concat ?x289 (concat ?x242 (concat ?x66 ?x147)))))
 (let (($x103 (= ?x330 input.dst.llvm-%m)))
 (let (($x243 (= $x103 true)))
 (let (($x39 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x74 (= (bvand ?x385 (_ bv4294967292 32)) ?x385)))
 (let (($x41 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x385 (bvsub ?x385 (_ bv4 32))) (bvult ?x385 (bvsub ?x385 (_ bv4 32))))))
 (let (($x213 (and true $x41)))
 (let (($x47 (= (bvand ?x199 (_ bv4294967292 32)) ?x199)))
 (let (($x309 (and $x47 $x213)))
 (let (($x343 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x167 (and (and (and true $x343) $x309) $x74)))
 (let (($x235 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x396 (and true $x235)))
 (let (($x262 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x304 (and $x262 $x396)))
 (let (($x174 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x199 (bvsub ?x199 (_ bv12 32))) (bvult ?x199 (bvsub ?x199 (_ bv12 32))))))
 (let (($x83 (and (and (and true $x262) $x174) $x304)))
 (let (($x61 (and (and $x83 $x167) $x39)))
 (let (($x371 (= input.dst.llvm-%m ?x330)))
 (let ((?x25 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x354 (= (_ bv0 32) ?x25)))
 (let ((?x326 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x326)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (and $x234 $x134)))
 (let (($x69 (and $x43 $x354)))
 (let (($x141 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x96 (and $x141 $x69)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x112 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x307 $x222)))))))
 (let (($x49 (and (and (and $x112 $x96) $x371) $x61)))
 (let (($x388 (forall ((input.ind-%var4409X (_ BitVec 32)) )(let ((?x404 (bvadd (bvmul input.ind-%var4409X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv1 32))) (select input.dst.llvm-mem ?x404))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x404 (_ bv2 32))) ?x335))))
 (let ((?x9 (input.spec-%var-m-0.1.1 input.ind-%var4409X)))
 (let (($x77 (input.spec-%var-m-0.0.1 input.ind-%var4409X)))
 (=> $x77 (= ?x9 ?x378))))))))
 ))
 (let (($x247 (forall ((input.ind-%var4408X (_ BitVec 32)) )(let (($x77 (input.spec-%var-m-0.0.1 input.ind-%var4408X)))
 (= $x77 (and (bvule (_ bv0 32) input.ind-%var4408X) (bvult input.ind-%var4408X (_ bv100 32))))))
 ))
 (let (($x52 (and $x247 $x388)))
 (let (($x13 (and $x52 $x49)))
 (let (($x175 (= $x13 true)))
 (let (($x45 (= $x83 true)))
 (let (($x249 (and $x167 $x39)))
 (let (($x156 (= $x249 true)))
 (let (($x105 (and $x156 $x45)))
 (let (($x178 (and $x105 $x175)))
 (let (($x17 (and $x178 $x243)))
 (let (($x300 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x211 (ite $x300 (_ bv1 32) (_ bv0 32))))
 (let (($x11 (bvuge ?x211 (_ bv1 32))))
 (let (($x86 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x172 (ite $x86 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x172 (_ bv1 32))))
 (let (($x402 (and $x294 $x11)))
 (let (($x150 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x394 (ite $x150 (_ bv1 32) (_ bv0 32))))
 (let (($x106 (= ?x394 (_ bv0 32))))
 (let (($x287 (and $x106 $x402)))
 (let (($x87 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x107 (ite $x87 (_ bv1 32) (_ bv0 32))))
 (let (($x322 (= ?x107 (_ bv0 32))))
 (let (($x185 (and $x322 $x287)))
 (let (($x308 (and $x185 $x17)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x253 (= ?x363 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x301 (bvuge ?x107 (_ bv1 32))))
 (let (($x215 (=> $x301 $x253)))
 (let (($x221 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x40 (= $x301 $x221)))
 (let (($x95 (= false false)))
 (let (($x121 (=> $x322 $x95)))
 (let (($x355 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x75 (= $x322 $x355)))
 (let (($x20 (and (and (and $x75 $x121) $x40) $x215)))
 (let (($x305 (and $x20 $x308)))
 (let ((?x233 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x124 (= ?x233 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x148 (bvuge ?x394 (_ bv1 32))))
 (let (($x210 (=> $x148 $x124)))
 (let (($x319 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x196 (= $x148 $x319)))
 (let (($x193 (and (and (= $x106 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x106 $x95)) $x196)))
 (let (($x267 (and $x193 $x210)))
 (let (($x189 (and $x267 $x305)))
 (let (($x140 (= ?x383 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x27 (=> $x11 $x140)))
 (let (($x73 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x26 (= $x11 $x73)))
 (let (($x250 (= ?x211 (_ bv0 32))))
 (let (($x149 (=> $x250 $x95)))
 (let (($x293 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x395 (= $x250 $x293)))
 (let (($x90 (and (and (and $x395 $x149) $x26) $x27)))
 (let (($x115 (and $x90 $x189)))
 (let (($x373 (= ?x166 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x168 (=> $x294 $x373)))
 (let (($x158 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x246 (= $x294 $x158)))
 (let (($x327 (= ?x172 (_ bv0 32))))
 (let (($x329 (=> $x327 $x95)))
 (let (($x332 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x204 (= $x327 $x332)))
 (let (($x153 (and (and (and $x204 $x329) $x246) $x168)))
 (let (($x336 (and $x153 $x115)))
 (let (($x310 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x100 (and $x310 $x336)))
 (let (($x338 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x389 (and $x338 $x100)))
 (let (($x397 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x269 (and $x397 $x389)))
 (let (($x5 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x118 (and $x5 $x269)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x342 (and $x51 $x118)))
 (let (($x30 (and $x95 $x342)))
 (let (($x353 (= ?x363 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x188 (and $x353 $x30)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x72 (and $x7 $x188)))
 (let (($x347 (and $x95 $x72)))
 (let (($x192 (= ?x233 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x101 (and $x192 $x347)))
 (let (($x391 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x125 (and $x391 $x101)))
 (let (($x102 (and $x95 $x125)))
 (let (($x79 (= ?x383 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x203 (and $x79 $x102)))
 (let (($x146 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x212 (and $x146 $x203)))
 (let (($x320 (and $x95 $x212)))
 (let (($x248 (= ?x166 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x12 (and $x248 $x320)))
 (let (($x392 (bvugt ?x385 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x299)))
 (let (($x145 (=> (bvule ?x385 (bvsub (bvadd ?x385 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x392)))))))
 (let (($x122 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x231 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x122)))))))
 (let (($x157 (bvugt ?x199 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x238)))
 (let (($x8 (=> (bvule ?x199 (bvsub (bvadd ?x199 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x157)))))))
 (let (($x282 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x288 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x288)))
 (let (($x89 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x85 $x282)))))))
 (let (($x370 (and $x89 $x8)))
 (let (($x68 (and $x370 $x231)))
 (let (($x251 (and $x68 $x145)))
 (let (($x315 (and $x251 $x12)))
 (let (($x359 (=> $x315 $x65)))
 (not $x359)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 221 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 72
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x233 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x18 (bvmul (_ bv4294967295 32) ?x233)))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x224 (concat ?x256 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x264 (bvadd ?x271 (_ bv3 32))))
 (let ((?x263 (concat (select input.dst.llvm-mem ?x264) (concat ?x55 ?x224))))
 (let ((?x88 (bvmul (_ bv4294967295 32) ?x263)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x393 (concat ?x207 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x372 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x261 (bvadd ?x372 (_ bv3 32))))
 (let ((?x202 (concat (select input.dst.llvm-mem ?x261) (concat ?x135 ?x393))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x120 (concat ?x260 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x170 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x401 (bvadd ?x170 (_ bv3 32))))
 (let ((?x359 (concat (select input.dst.llvm-mem ?x401) (concat ?x16 ?x120))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x328)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x254)))
 (let ((?x381 (bvadd (bvadd (bvadd ?x31 ?x359) ?x202) ?x88)))
 (let (($x81 (= ?x381 ?x18)))
 (let (($x321 (= $x81 true)))
 (let ((?x389 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x125 (concat ?x101 (concat ?x188 (concat ?x118 ?x389)))))
 (let (($x194 (= ?x125 input.dst.llvm-%m)))
 (let (($x108 (= $x194 true)))
 (let (($x198 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x249 (= (bvand ?x372 (_ bv4294967292 32)) ?x372)))
 (let (($x74 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x372 (bvsub ?x372 (_ bv4 32))) (bvult ?x372 (bvsub ?x372 (_ bv4 32))))))
 (let (($x167 (and true $x74)))
 (let (($x41 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x38 (and $x41 $x167)))
 (let (($x139 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x262 (and (and (and true $x139) $x38) $x249)))
 (let (($x45 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x105 (and true $x45)))
 (let (($x174 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x50 (and $x174 $x105)))
 (let (($x274 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv12 32))) (bvult ?x170 (bvsub ?x170 (_ bv12 32))))))
 (let (($x76 (and (and (and true $x174) $x274) $x50)))
 (let (($x212 (and (and $x76 $x262) $x198)))
 (let (($x102 (= input.dst.llvm-%m ?x125)))
 (let ((?x305 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x189 (= (_ bv0 32) ?x305)))
 (let ((?x243 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x243)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (and $x103 $x17)))
 (let (($x115 (and $x308 $x189)))
 (let (($x147 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x336 (and $x147 $x115)))
 (let (($x184 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x371 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x371 $x184)))))))
 (let (($x315 (and (and (and $x178 $x336) $x102) $x212)))
 (let (($x351 (forall ((input.ind-%var4453X (_ BitVec 32)) )(let ((?x240 (bvadd (bvmul input.ind-%var4453X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x134))))
 (let ((?x383 (input.spec-%var-m-0.1.1 input.ind-%var4453X)))
 (let (($x95 (input.spec-%var-m-0.0.1 input.ind-%var4453X)))
 (=> $x95 (= ?x383 ?x23))))))))
 ))
 (let (($x182 (forall ((input.ind-%var4452X (_ BitVec 32)) )(let (($x95 (input.spec-%var-m-0.0.1 input.ind-%var4452X)))
 (= $x95 (and (bvule (_ bv0 32) input.ind-%var4452X) (bvult input.ind-%var4452X (_ bv100 32))))))
 ))
 (let (($x242 (and $x182 $x351)))
 (let (($x382 (and $x242 $x315)))
 (let (($x133 (= $x382 true)))
 (let (($x173 (= $x76 true)))
 (let (($x200 (and $x262 $x198)))
 (let (($x91 (= $x200 true)))
 (let (($x356 (and $x91 $x173)))
 (let (($x126 (and $x356 $x133)))
 (let (($x33 (and $x126 $x108)))
 (let (($x149 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x137 (ite $x149 (_ bv1 32) (_ bv0 32))))
 (let (($x140 (bvuge ?x137 (_ bv1 32))))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x10 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (= ?x10 (_ bv0 32))))
 (let (($x272 (and $x294 $x140)))
 (let (($x278 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x290 (ite $x278 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (= ?x290 (_ bv0 32))))
 (let (($x343 (and $x148 $x272)))
 (let (($x121 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x334 (ite $x121 (_ bv1 32) (_ bv0 32))))
 (let (($x301 (= ?x334 (_ bv0 32))))
 (let (($x113 (and $x301 $x343)))
 (let (($x316 (and $x113 $x33)))
 (let ((?x57 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x287 (= ?x57 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x253 (bvuge ?x334 (_ bv1 32))))
 (let (($x185 (=> $x253 $x287)))
 (let (($x215 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x20 (= $x253 $x215)))
 (let (($x392 (= false false)))
 (let (($x237 (=> $x301 $x392)))
 (let (($x40 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x323 (= $x301 $x40)))
 (let (($x364 (and (and (and $x323 $x237) $x20) $x185)))
 (let (($x216 (and $x364 $x316)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x107 (= ?x363 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x124 (bvuge ?x290 (_ bv1 32))))
 (let (($x322 (=> $x124 $x107)))
 (let (($x210 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x267 (= $x124 $x210)))
 (let (($x355 (and (and (= $x148 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x148 $x392)) $x267)))
 (let (($x75 (and $x355 $x322)))
 (let (($x36 (and $x75 $x216)))
 (let (($x394 (= ?x233 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x106 (=> $x140 $x394)))
 (let (($x27 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x90 (= $x140 $x27)))
 (let (($x11 (= ?x137 (_ bv0 32))))
 (let (($x400 (=> $x11 $x392)))
 (let (($x26 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x37 (= $x11 $x26)))
 (let (($x283 (and (and (and $x37 $x400) $x90) $x106)))
 (let (($x109 (and $x283 $x36)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x211 (= ?x251 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x373 (bvuge ?x10 (_ bv1 32))))
 (let (($x250 (=> $x373 $x211)))
 (let (($x168 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x153 (= $x373 $x168)))
 (let (($x116 (=> $x294 $x392)))
 (let (($x246 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x349 (= $x294 $x246)))
 (let (($x395 (and (and (and $x349 $x116) $x153) $x250)))
 (let (($x84 (and $x395 $x109)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x285 (and $x332 $x84)))
 (let (($x327 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x142 (and $x327 $x285)))
 (let (($x86 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x273 (and $x86 $x142)))
 (let (($x98 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x71 (and $x98 $x273)))
 (let (($x399 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x239 (and $x399 $x71)))
 (let (($x270 (and $x392 $x239)))
 (let (($x291 (= ?x57 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x160 (and $x291 $x270)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x306 (and $x51 $x160)))
 (let (($x387 (and $x392 $x306)))
 (let (($x353 (= ?x363 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x164 (and $x353 $x387)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x60 (and $x7 $x164)))
 (let (($x162 (and $x392 $x60)))
 (let (($x192 (= ?x233 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x398 (and $x192 $x162)))
 (let (($x312 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x375 (and $x312 $x398)))
 (let (($x180 (and $x392 $x375)))
 (let (($x299 (= ?x251 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x317 (and $x299 $x180)))
 (let (($x177 (bvugt ?x372 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x376 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x261)))
 (let (($x195 (=> (bvule ?x372 (bvsub (bvadd ?x372 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x376 $x177)))))))
 (let (($x318 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x264)))
 (let (($x286 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x318)))))))
 (let (($x85 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x401)))
 (let (($x205 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x288 $x85)))))))
 (let (($x89 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x361 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x361)))
 (let (($x157 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x56 $x89)))))))
 (let (($x325 (and $x157 $x205)))
 (let (($x44 (and $x325 $x286)))
 (let (($x231 (and $x44 $x195)))
 (let (($x302 (and $x231 $x317)))
 (let (($x46 (=> $x302 $x321)))
 (not $x46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x233 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x18 (bvmul (_ bv4294967295 32) ?x233)))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x224 (concat ?x256 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x264 (bvadd ?x271 (_ bv3 32))))
 (let ((?x263 (concat (select input.dst.llvm-mem ?x264) (concat ?x55 ?x224))))
 (let ((?x88 (bvmul (_ bv4294967295 32) ?x263)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x393 (concat ?x207 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x372 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x261 (bvadd ?x372 (_ bv3 32))))
 (let ((?x202 (concat (select input.dst.llvm-mem ?x261) (concat ?x135 ?x393))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x120 (concat ?x260 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x170 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x401 (bvadd ?x170 (_ bv3 32))))
 (let ((?x359 (concat (select input.dst.llvm-mem ?x401) (concat ?x16 ?x120))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x328)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x254)))
 (let ((?x381 (bvadd (bvadd (bvadd ?x31 ?x359) ?x202) ?x88)))
 (let (($x81 (= ?x381 ?x18)))
 (let (($x321 (= $x81 true)))
 (let ((?x389 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x125 (concat ?x101 (concat ?x188 (concat ?x118 ?x389)))))
 (let (($x194 (= ?x125 input.dst.llvm-%m)))
 (let (($x108 (= $x194 true)))
 (let (($x198 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x249 (= (bvand ?x372 (_ bv4294967292 32)) ?x372)))
 (let (($x74 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x372 (bvsub ?x372 (_ bv4 32))) (bvult ?x372 (bvsub ?x372 (_ bv4 32))))))
 (let (($x167 (and true $x74)))
 (let (($x41 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x38 (and $x41 $x167)))
 (let (($x139 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x262 (and (and (and true $x139) $x38) $x249)))
 (let (($x45 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x105 (and true $x45)))
 (let (($x174 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x50 (and $x174 $x105)))
 (let (($x274 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv12 32))) (bvult ?x170 (bvsub ?x170 (_ bv12 32))))))
 (let (($x76 (and (and (and true $x174) $x274) $x50)))
 (let (($x212 (and (and $x76 $x262) $x198)))
 (let (($x102 (= input.dst.llvm-%m ?x125)))
 (let ((?x305 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x189 (= (_ bv0 32) ?x305)))
 (let ((?x243 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x243)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (and $x103 $x17)))
 (let (($x115 (and $x308 $x189)))
 (let (($x147 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x336 (and $x147 $x115)))
 (let (($x184 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x371 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x178 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x371 $x184)))))))
 (let (($x315 (and (and (and $x178 $x336) $x102) $x212)))
 (let (($x351 (forall ((input.ind-%var4453X (_ BitVec 32)) )(let ((?x240 (bvadd (bvmul input.ind-%var4453X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x134))))
 (let ((?x383 (input.spec-%var-m-0.1.1 input.ind-%var4453X)))
 (let (($x95 (input.spec-%var-m-0.0.1 input.ind-%var4453X)))
 (=> $x95 (= ?x383 ?x23))))))))
 ))
 (let (($x182 (forall ((input.ind-%var4452X (_ BitVec 32)) )(let (($x95 (input.spec-%var-m-0.0.1 input.ind-%var4452X)))
 (= $x95 (and (bvule (_ bv0 32) input.ind-%var4452X) (bvult input.ind-%var4452X (_ bv100 32))))))
 ))
 (let (($x242 (and $x182 $x351)))
 (let (($x382 (and $x242 $x315)))
 (let (($x133 (= $x382 true)))
 (let (($x173 (= $x76 true)))
 (let (($x200 (and $x262 $x198)))
 (let (($x91 (= $x200 true)))
 (let (($x356 (and $x91 $x173)))
 (let (($x126 (and $x356 $x133)))
 (let (($x33 (and $x126 $x108)))
 (let (($x149 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x137 (ite $x149 (_ bv1 32) (_ bv0 32))))
 (let (($x140 (bvuge ?x137 (_ bv1 32))))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x10 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (= ?x10 (_ bv0 32))))
 (let (($x272 (and $x294 $x140)))
 (let (($x278 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x290 (ite $x278 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (= ?x290 (_ bv0 32))))
 (let (($x343 (and $x148 $x272)))
 (let (($x121 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x334 (ite $x121 (_ bv1 32) (_ bv0 32))))
 (let (($x301 (= ?x334 (_ bv0 32))))
 (let (($x113 (and $x301 $x343)))
 (let (($x316 (and $x113 $x33)))
 (let ((?x57 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x287 (= ?x57 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x253 (bvuge ?x334 (_ bv1 32))))
 (let (($x185 (=> $x253 $x287)))
 (let (($x215 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x20 (= $x253 $x215)))
 (let (($x392 (= false false)))
 (let (($x237 (=> $x301 $x392)))
 (let (($x40 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x323 (= $x301 $x40)))
 (let (($x364 (and (and (and $x323 $x237) $x20) $x185)))
 (let (($x216 (and $x364 $x316)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x107 (= ?x363 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x124 (bvuge ?x290 (_ bv1 32))))
 (let (($x322 (=> $x124 $x107)))
 (let (($x210 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x267 (= $x124 $x210)))
 (let (($x355 (and (and (= $x148 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x148 $x392)) $x267)))
 (let (($x75 (and $x355 $x322)))
 (let (($x36 (and $x75 $x216)))
 (let (($x394 (= ?x233 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x106 (=> $x140 $x394)))
 (let (($x27 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x90 (= $x140 $x27)))
 (let (($x11 (= ?x137 (_ bv0 32))))
 (let (($x400 (=> $x11 $x392)))
 (let (($x26 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x37 (= $x11 $x26)))
 (let (($x283 (and (and (and $x37 $x400) $x90) $x106)))
 (let (($x109 (and $x283 $x36)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x211 (= ?x251 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x373 (bvuge ?x10 (_ bv1 32))))
 (let (($x250 (=> $x373 $x211)))
 (let (($x168 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x153 (= $x373 $x168)))
 (let (($x116 (=> $x294 $x392)))
 (let (($x246 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x349 (= $x294 $x246)))
 (let (($x395 (and (and (and $x349 $x116) $x153) $x250)))
 (let (($x84 (and $x395 $x109)))
 (let (($x332 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x285 (and $x332 $x84)))
 (let (($x327 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x142 (and $x327 $x285)))
 (let (($x86 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x273 (and $x86 $x142)))
 (let (($x98 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x71 (and $x98 $x273)))
 (let (($x399 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x239 (and $x399 $x71)))
 (let (($x270 (and $x392 $x239)))
 (let (($x291 (= ?x57 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x160 (and $x291 $x270)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x306 (and $x51 $x160)))
 (let (($x387 (and $x392 $x306)))
 (let (($x353 (= ?x363 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x164 (and $x353 $x387)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x60 (and $x7 $x164)))
 (let (($x162 (and $x392 $x60)))
 (let (($x192 (= ?x233 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x398 (and $x192 $x162)))
 (let (($x312 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x375 (and $x312 $x398)))
 (let (($x180 (and $x392 $x375)))
 (let (($x299 (= ?x251 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x317 (and $x299 $x180)))
 (let (($x177 (bvugt ?x372 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x376 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x261)))
 (let (($x195 (=> (bvule ?x372 (bvsub (bvadd ?x372 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x376 $x177)))))))
 (let (($x318 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x264)))
 (let (($x286 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x318)))))))
 (let (($x85 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x401)))
 (let (($x205 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x288 $x85)))))))
 (let (($x89 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x361 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x361)))
 (let (($x157 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x56 $x89)))))))
 (let (($x325 (and $x157 $x205)))
 (let (($x44 (and $x325 $x286)))
 (let (($x231 (and $x44 $x195)))
 (let (($x302 (and $x231 $x317)))
 (let (($x46 (=> $x302 $x321)))
 (not $x46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 220 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 73
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x15 (concat ?x362 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x303 (bvadd ?x271 (_ bv3 32))))
 (let ((?x379 (concat (select input.dst.llvm-mem ?x303) (concat ?x52 ?x15))))
 (let ((?x307 (bvmul (_ bv4294967295 32) ?x379)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x329 (concat ?x100 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x122 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x223 (bvadd ?x122 (_ bv3 32))))
 (let ((?x181 (concat (select input.dst.llvm-mem ?x223) (concat ?x93 ?x329))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x381 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x365 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x67 (bvadd ?x365 (_ bv3 32))))
 (let ((?x159 (concat (select input.dst.llvm-mem ?x67) (concat ?x81 ?x381))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x131)))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x256)))
 (let ((?x404 (bvadd (bvadd (bvadd ?x224 ?x159) ?x181) ?x307)))
 (let ((?x231 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x244 (= ?x231 ?x404)))
 (let (($x280 (= $x244 true)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x164 (concat ?x160 (concat ?x71 ?x142)))))
 (let (($x226 (= ?x60 input.dst.llvm-%m)))
 (let (($x34 (= $x226 true)))
 (let (($x295 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x200 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x249 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv4 32))) (bvult ?x122 (bvsub ?x122 (_ bv4 32))))))
 (let (($x262 (and true $x249)))
 (let (($x74 (= (bvand ?x365 (_ bv4294967292 32)) ?x365)))
 (let (($x229 (and $x74 $x262)))
 (let (($x213 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x174 (and (and (and true $x213) $x229) $x200)))
 (let (($x173 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x356 (and true $x173)))
 (let (($x274 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x21 (and $x274 $x356)))
 (let (($x83 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x365 (bvsub ?x365 (_ bv12 32))) (bvult ?x365 (bvsub ?x365 (_ bv12 32))))))
 (let (($x257 (and (and (and true $x274) $x83) $x21)))
 (let (($x375 (and (and $x257 $x174) $x295)))
 (let (($x162 (= input.dst.llvm-%m ?x60)))
 (let ((?x216 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x36 (= (_ bv0 32) ?x216)))
 (let ((?x108 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x108)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x316 (and $x194 $x33)))
 (let (($x109 (and $x316 $x36)))
 (let (($x389 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x389 $x109)))
 (let (($x12 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x126 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x12)))))))
 (let (($x302 (and (and (and $x126 $x84) $x162) $x375)))
 (let (($x30 (forall ((input.ind-%var4497X (_ BitVec 32)) )(let ((?x66 (bvadd (bvmul input.ind-%var4497X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv1 32))) (select input.dst.llvm-mem ?x66))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv2 32))) ?x17))))
 (let ((?x233 (input.spec-%var-m-0.1.1 input.ind-%var4497X)))
 (let (($x392 (input.spec-%var-m-0.0.1 input.ind-%var4497X)))
 (=> $x392 (= ?x233 ?x320))))))))
 ))
 (let (($x326 (forall ((input.ind-%var4496X (_ BitVec 32)) )(let (($x392 (input.spec-%var-m-0.0.1 input.ind-%var4496X)))
 (= $x392 (and (bvule (_ bv0 32) input.ind-%var4496X) (bvult input.ind-%var4496X (_ bv100 32))))))
 ))
 (let (($x188 (and $x326 $x30)))
 (let (($x29 (and $x188 $x302)))
 (let (($x241 (= $x29 true)))
 (let (($x268 (= $x257 true)))
 (let (($x358 (and $x174 $x295)))
 (let (($x19 (= $x358 true)))
 (let (($x403 (and $x19 $x268)))
 (let (($x161 (and $x403 $x241)))
 (let (($x386 (and $x161 $x34)))
 (let (($x400 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x92 (ite $x400 (_ bv1 32) (_ bv0 32))))
 (let (($x140 (= ?x92 (_ bv0 32))))
 (let (($x349 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x130 (ite $x349 (_ bv1 32) (_ bv0 32))))
 (let (($x211 (bvuge ?x130 (_ bv1 32))))
 (let (($x214 (and $x211 $x140)))
 (let (($x206 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x119 (ite $x206 (_ bv1 32) (_ bv0 32))))
 (let (($x124 (= ?x119 (_ bv0 32))))
 (let (($x139 (and $x124 $x214)))
 (let (($x237 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x360 (ite $x237 (_ bv1 32) (_ bv0 32))))
 (let (($x253 (= ?x360 (_ bv0 32))))
 (let (($x156 (and $x253 $x139)))
 (let (($x328 (and $x156 $x386)))
 (let ((?x338 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x343 (= ?x338 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x287 (bvuge ?x360 (_ bv1 32))))
 (let (($x113 (=> $x287 $x343)))
 (let (($x185 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x364 (= $x287 $x185)))
 (let (($x177 (= false false)))
 (let (($x402 (=> $x253 $x177)))
 (let (($x20 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x265 (= $x253 $x20)))
 (let (($x47 (and (and (and $x265 $x402) $x364) $x113)))
 (let (($x254 (and $x47 $x328)))
 (let ((?x57 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x334 (= ?x57 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x107 (bvuge ?x119 (_ bv1 32))))
 (let (($x301 (=> $x107 $x334)))
 (let (($x322 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x75 (= $x107 $x322)))
 (let (($x40 (and (and (= $x124 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x124 $x177)) $x75)))
 (let (($x323 (and $x40 $x301)))
 (let (($x31 (and $x323 $x254)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x290 (= ?x363 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x394 (bvuge ?x92 (_ bv1 32))))
 (let (($x148 (=> $x394 $x290)))
 (let (($x106 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x283 (= $x394 $x106)))
 (let (($x196 (and (and (= $x140 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x140 $x177)) $x283)))
 (let (($x193 (and $x196 $x148)))
 (let (($x65 (and $x193 $x31)))
 (let (($x137 (= ?x231 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x11 (=> $x211 $x137)))
 (let (($x250 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x395 (= $x211 $x250)))
 (let (($x373 (= ?x130 (_ bv0 32))))
 (let (($x300 (=> $x373 $x177)))
 (let (($x153 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x293 (= $x373 $x153)))
 (let (($x37 (and (and (and $x293 $x300) $x395) $x11)))
 (let (($x117 (and $x37 $x65)))
 (let (($x246 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x16 (and $x246 $x117)))
 (let (($x294 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x80 (and $x294 $x16)))
 (let (($x204 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x260 (and $x204 $x80)))
 (let (($x94 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x114 (and $x94 $x260)))
 (let (($x172 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x120 (and $x172 $x114)))
 (let (($x333 (and $x177 $x120)))
 (let (($x310 (= ?x338 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x359 (and $x310 $x333)))
 (let (($x399 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x350 (and $x399 $x359)))
 (let (($x348 (and $x177 $x350)))
 (let (($x291 (= ?x57 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x366 (and $x291 $x348)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x135 (and $x51 $x366)))
 (let (($x78 (and $x177 $x135)))
 (let (($x353 (= ?x363 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x207 (and $x353 $x78)))
 (let (($x298 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x369 (and $x298 $x207)))
 (let (($x393 (and $x177 $x369)))
 (let (($x261 (= ?x231 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x218 (and $x261 $x393)))
 (let (($x123 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x255 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x123)))))))
 (let (($x282 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x303)))
 (let (($x99 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x183 $x282)))))))
 (let (($x56 (bvugt ?x365 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x361 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x67)))
 (let (($x370 (=> (bvule ?x365 (bvsub (bvadd ?x365 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x361 $x56)))))))
 (let (($x157 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x104 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x104)))
 (let (($x85 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x157)))))))
 (let (($x209 (and $x85 $x370)))
 (let (($x179 (and $x209 $x99)))
 (let (($x286 (and $x179 $x255)))
 (let (($x202 (and $x286 $x218)))
 (let (($x335 (=> $x202 $x280)))
 (not $x335)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x15 (concat ?x362 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x303 (bvadd ?x271 (_ bv3 32))))
 (let ((?x379 (concat (select input.dst.llvm-mem ?x303) (concat ?x52 ?x15))))
 (let ((?x307 (bvmul (_ bv4294967295 32) ?x379)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x329 (concat ?x100 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x122 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x223 (bvadd ?x122 (_ bv3 32))))
 (let ((?x181 (concat (select input.dst.llvm-mem ?x223) (concat ?x93 ?x329))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x381 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x365 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x67 (bvadd ?x365 (_ bv3 32))))
 (let ((?x159 (concat (select input.dst.llvm-mem ?x67) (concat ?x81 ?x381))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x131)))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x256)))
 (let ((?x404 (bvadd (bvadd (bvadd ?x224 ?x159) ?x181) ?x307)))
 (let ((?x231 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x244 (= ?x231 ?x404)))
 (let (($x280 (= $x244 true)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x164 (concat ?x160 (concat ?x71 ?x142)))))
 (let (($x226 (= ?x60 input.dst.llvm-%m)))
 (let (($x34 (= $x226 true)))
 (let (($x295 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x200 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x249 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv4 32))) (bvult ?x122 (bvsub ?x122 (_ bv4 32))))))
 (let (($x262 (and true $x249)))
 (let (($x74 (= (bvand ?x365 (_ bv4294967292 32)) ?x365)))
 (let (($x229 (and $x74 $x262)))
 (let (($x213 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x174 (and (and (and true $x213) $x229) $x200)))
 (let (($x173 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x356 (and true $x173)))
 (let (($x274 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x21 (and $x274 $x356)))
 (let (($x83 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x365 (bvsub ?x365 (_ bv12 32))) (bvult ?x365 (bvsub ?x365 (_ bv12 32))))))
 (let (($x257 (and (and (and true $x274) $x83) $x21)))
 (let (($x375 (and (and $x257 $x174) $x295)))
 (let (($x162 (= input.dst.llvm-%m ?x60)))
 (let ((?x216 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x36 (= (_ bv0 32) ?x216)))
 (let ((?x108 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x108)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x316 (and $x194 $x33)))
 (let (($x109 (and $x316 $x36)))
 (let (($x389 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x389 $x109)))
 (let (($x12 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x126 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x12)))))))
 (let (($x302 (and (and (and $x126 $x84) $x162) $x375)))
 (let (($x30 (forall ((input.ind-%var4497X (_ BitVec 32)) )(let ((?x66 (bvadd (bvmul input.ind-%var4497X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv1 32))) (select input.dst.llvm-mem ?x66))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv2 32))) ?x17))))
 (let ((?x233 (input.spec-%var-m-0.1.1 input.ind-%var4497X)))
 (let (($x392 (input.spec-%var-m-0.0.1 input.ind-%var4497X)))
 (=> $x392 (= ?x233 ?x320))))))))
 ))
 (let (($x326 (forall ((input.ind-%var4496X (_ BitVec 32)) )(let (($x392 (input.spec-%var-m-0.0.1 input.ind-%var4496X)))
 (= $x392 (and (bvule (_ bv0 32) input.ind-%var4496X) (bvult input.ind-%var4496X (_ bv100 32))))))
 ))
 (let (($x188 (and $x326 $x30)))
 (let (($x29 (and $x188 $x302)))
 (let (($x241 (= $x29 true)))
 (let (($x268 (= $x257 true)))
 (let (($x358 (and $x174 $x295)))
 (let (($x19 (= $x358 true)))
 (let (($x403 (and $x19 $x268)))
 (let (($x161 (and $x403 $x241)))
 (let (($x386 (and $x161 $x34)))
 (let (($x400 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x92 (ite $x400 (_ bv1 32) (_ bv0 32))))
 (let (($x140 (= ?x92 (_ bv0 32))))
 (let (($x349 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x130 (ite $x349 (_ bv1 32) (_ bv0 32))))
 (let (($x211 (bvuge ?x130 (_ bv1 32))))
 (let (($x214 (and $x211 $x140)))
 (let (($x206 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x119 (ite $x206 (_ bv1 32) (_ bv0 32))))
 (let (($x124 (= ?x119 (_ bv0 32))))
 (let (($x139 (and $x124 $x214)))
 (let (($x237 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x360 (ite $x237 (_ bv1 32) (_ bv0 32))))
 (let (($x253 (= ?x360 (_ bv0 32))))
 (let (($x156 (and $x253 $x139)))
 (let (($x328 (and $x156 $x386)))
 (let ((?x338 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x343 (= ?x338 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x287 (bvuge ?x360 (_ bv1 32))))
 (let (($x113 (=> $x287 $x343)))
 (let (($x185 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x364 (= $x287 $x185)))
 (let (($x177 (= false false)))
 (let (($x402 (=> $x253 $x177)))
 (let (($x20 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x265 (= $x253 $x20)))
 (let (($x47 (and (and (and $x265 $x402) $x364) $x113)))
 (let (($x254 (and $x47 $x328)))
 (let ((?x57 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x334 (= ?x57 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x107 (bvuge ?x119 (_ bv1 32))))
 (let (($x301 (=> $x107 $x334)))
 (let (($x322 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x75 (= $x107 $x322)))
 (let (($x40 (and (and (= $x124 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x124 $x177)) $x75)))
 (let (($x323 (and $x40 $x301)))
 (let (($x31 (and $x323 $x254)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x290 (= ?x363 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x394 (bvuge ?x92 (_ bv1 32))))
 (let (($x148 (=> $x394 $x290)))
 (let (($x106 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x283 (= $x394 $x106)))
 (let (($x196 (and (and (= $x140 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x140 $x177)) $x283)))
 (let (($x193 (and $x196 $x148)))
 (let (($x65 (and $x193 $x31)))
 (let (($x137 (= ?x231 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x11 (=> $x211 $x137)))
 (let (($x250 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x395 (= $x211 $x250)))
 (let (($x373 (= ?x130 (_ bv0 32))))
 (let (($x300 (=> $x373 $x177)))
 (let (($x153 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x293 (= $x373 $x153)))
 (let (($x37 (and (and (and $x293 $x300) $x395) $x11)))
 (let (($x117 (and $x37 $x65)))
 (let (($x246 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x16 (and $x246 $x117)))
 (let (($x294 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x80 (and $x294 $x16)))
 (let (($x204 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x260 (and $x204 $x80)))
 (let (($x94 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x114 (and $x94 $x260)))
 (let (($x172 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x120 (and $x172 $x114)))
 (let (($x333 (and $x177 $x120)))
 (let (($x310 (= ?x338 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x359 (and $x310 $x333)))
 (let (($x399 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x350 (and $x399 $x359)))
 (let (($x348 (and $x177 $x350)))
 (let (($x291 (= ?x57 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x366 (and $x291 $x348)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x135 (and $x51 $x366)))
 (let (($x78 (and $x177 $x135)))
 (let (($x353 (= ?x363 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x207 (and $x353 $x78)))
 (let (($x298 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x369 (and $x298 $x207)))
 (let (($x393 (and $x177 $x369)))
 (let (($x261 (= ?x231 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x218 (and $x261 $x393)))
 (let (($x123 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x255 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x123)))))))
 (let (($x282 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x303)))
 (let (($x99 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x183 $x282)))))))
 (let (($x56 (bvugt ?x365 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x361 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x67)))
 (let (($x370 (=> (bvule ?x365 (bvsub (bvadd ?x365 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x361 $x56)))))))
 (let (($x157 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x104 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x104)))
 (let (($x85 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x157)))))))
 (let (($x209 (and $x85 $x370)))
 (let (($x179 (and $x209 $x99)))
 (let (($x286 (and $x179 $x255)))
 (let (($x202 (and $x286 $x218)))
 (let (($x335 (=> $x202 $x280)))
 (not $x335)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 217 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
==query_number: 74
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x330 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x199 (bvadd ?x271 (_ bv3 32))))
 (let ((?x371 (concat (select input.dst.llvm-mem ?x199) (concat ?x127 ?x330))))
 (let ((?x61 (bvmul (_ bv4294967295 32) ?x371)))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x248 (concat ?x116 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x318 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x385 (bvadd ?x318 (_ bv3 32))))
 (let ((?x390 (concat (select input.dst.llvm-mem ?x385) (concat ?x245 ?x248))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x404 (concat ?x307 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x279 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x346 (bvadd ?x279 (_ bv3 32))))
 (let ((?x59 (concat (select input.dst.llvm-mem ?x346) (concat ?x280 ?x404))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x155)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x362)))
 (let ((?x69 (bvadd (bvadd (bvadd ?x15 ?x59) ?x390) ?x61)))
 (let (($x49 (= (_ bv0 32) ?x69)))
 (let (($x134 (= $x49 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x366 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x135 (concat ?x366 (concat ?x359 (concat ?x114 ?x80)))))
 (let (($x275 (= ?x135 input.dst.llvm-%m)))
 (let (($x53 (= $x275 true)))
 (let (($x396 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x358 (= (bvand ?x318 (_ bv4294967292 32)) ?x318)))
 (let (($x200 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x318 (bvsub ?x318 (_ bv4 32))) (bvult ?x318 (bvsub ?x318 (_ bv4 32))))))
 (let (($x174 (and true $x200)))
 (let (($x249 (= (bvand ?x279 (_ bv4294967292 32)) ?x279)))
 (let (($x77 (and $x249 $x174)))
 (let (($x167 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x274 (and (and (and true $x167) $x77) $x358)))
 (let (($x268 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x403 (and true $x268)))
 (let (($x83 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x391 (and $x83 $x403)))
 (let (($x76 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x279 (bvsub ?x279 (_ bv12 32))) (bvult ?x279 (bvsub ?x279 (_ bv12 32))))))
 (let (($x378 (and (and (and true $x83) $x76) $x391)))
 (let (($x369 (and (and $x378 $x274) $x396)))
 (let (($x78 (= input.dst.llvm-%m ?x135)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x31 (= (_ bv0 32) ?x254)))
 (let ((?x34 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x386 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x34)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x328 (and $x226 $x386)))
 (let (($x65 (and $x328 $x31)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x142 $x65)))
 (let (($x317 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x317)))))))
 (let (($x202 (and (and (and $x161 $x117) $x78) $x369)))
 (let (($x270 (forall ((input.ind-%var4541X (_ BitVec 32)) )(let ((?x118 (bvadd (bvmul input.ind-%var4541X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x33))))
 (let ((?x363 (input.spec-%var-m-0.1.1 input.ind-%var4541X)))
 (let (($x177 (input.spec-%var-m-0.0.1 input.ind-%var4541X)))
 (=> $x177 (= ?x363 ?x180))))))))
 ))
 (let (($x243 (forall ((input.ind-%var4540X (_ BitVec 32)) )(let (($x177 (input.spec-%var-m-0.0.1 input.ind-%var4540X)))
 (= $x177 (and (bvule (_ bv0 32) input.ind-%var4540X) (bvult input.ind-%var4540X (_ bv100 32))))))
 ))
 (let (($x160 (and $x243 $x270)))
 (let (($x227 (and $x160 $x202)))
 (let (($x55 (= $x227 true)))
 (let (($x96 (= $x378 true)))
 (let (($x297 (and $x274 $x396)))
 (let (($x235 (= $x297 true)))
 (let (($x25 (and $x235 $x96)))
 (let (($x367 (and $x25 $x55)))
 (let (($x331 (and $x367 $x53)))
 (let (($x150 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x319 (ite $x150 (_ bv1 32) (_ bv0 32))))
 (let (($x394 (= ?x319 (_ bv0 32))))
 (let (($x293 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x73 (ite $x293 (_ bv1 32) (_ bv0 32))))
 (let (($x211 (= ?x73 (_ bv0 32))))
 (let (($x309 (and $x211 $x394)))
 (let (($x87 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x221 (ite $x87 (_ bv1 32) (_ bv0 32))))
 (let (($x107 (= ?x221 (_ bv0 32))))
 (let (($x213 (and $x107 $x309)))
 (let (($x402 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x296 (ite $x402 (_ bv1 32) (_ bv0 32))))
 (let (($x287 (= ?x296 (_ bv0 32))))
 (let (($x91 (and $x287 $x213)))
 (let (($x131 (and $x91 $x331)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x139 (= ?x327 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x343 (bvuge ?x296 (_ bv1 32))))
 (let (($x156 (=> $x343 $x139)))
 (let (($x113 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x47 (= $x343 $x113)))
 (let (($x123 (= false false)))
 (let (($x272 (=> $x287 $x123)))
 (let (($x364 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x129 (= $x287 $x364)))
 (let (($x41 (and (and (and $x129 $x272) $x47) $x156)))
 (let (($x256 (and $x41 $x131)))
 (let ((?x338 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x360 (= ?x338 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x334 (bvuge ?x221 (_ bv1 32))))
 (let (($x253 (=> $x334 $x360)))
 (let (($x301 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x323 (= $x334 $x301)))
 (let (($x20 (and (and (= $x107 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x107 $x123)) $x323)))
 (let (($x265 (and $x20 $x253)))
 (let (($x224 (and $x265 $x256)))
 (let ((?x57 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x119 (= ?x57 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x290 (bvuge ?x319 (_ bv1 32))))
 (let (($x124 (=> $x290 $x119)))
 (let (($x148 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x193 (= $x290 $x148)))
 (let (($x267 (and (and (= $x394 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x394 $x123)) $x193)))
 (let (($x355 (and $x267 $x124)))
 (let (($x46 (and $x355 $x224)))
 (let ((?x286 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x92 (= ?x286 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x137 (bvuge ?x73 (_ bv1 32))))
 (let (($x140 (=> $x137 $x92)))
 (let (($x11 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x37 (= $x137 $x11)))
 (let (($x149 (=> $x211 $x123)))
 (let (($x395 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x26 (= $x211 $x395)))
 (let (($x22 (and (and (and $x26 $x149) $x37) $x140)))
 (let (($x18 (and $x22 $x46)))
 (let (($x153 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x81 (and $x153 $x18)))
 (let (($x373 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x263 (and $x373 $x81)))
 (let (($x349 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x88 (and $x349 $x263)))
 (let (($x158 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x252 (and $x158 $x88)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x381 (and $x10 $x252)))
 (let (($x321 (and $x123 $x381)))
 (let (($x332 (= ?x327 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x159 (and $x332 $x321)))
 (let (($x172 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x14 (and $x172 $x159)))
 (let (($x9 (and $x123 $x14)))
 (let (($x310 (= ?x338 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x357 (and $x310 $x9)))
 (let (($x399 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x93 (and $x399 $x357)))
 (let (($x58 (and $x123 $x93)))
 (let (($x291 (= ?x57 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x100 (and $x291 $x58)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x54 (and $x376 $x100)))
 (let (($x329 (and $x123 $x54)))
 (let (($x223 (= ?x286 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x311 (and $x223 $x329)))
 (let (($x68 (bvugt ?x318 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x195 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x385)))
 (let (($x166 (=> (bvule ?x318 (bvsub (bvadd ?x318 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x195 $x68)))))))
 (let (($x89 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x199)))
 (let (($x264 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x6 $x89)))))))
 (let (($x238 (bvugt ?x279 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x346)))
 (let (($x325 (=> (bvule ?x279 (bvsub (bvadd ?x279 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x238)))))))
 (let (($x85 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x401 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x56 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x401 $x85)))))))
 (let (($x111 (and $x56 $x325)))
 (let (($x384 (and $x111 $x264)))
 (let (($x99 (and $x384 $x166)))
 (let (($x181 (and $x99 $x311)))
 (let (($x13 (=> $x181 $x134)))
 (not $x13)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x330 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x199 (bvadd ?x271 (_ bv3 32))))
 (let ((?x371 (concat (select input.dst.llvm-mem ?x199) (concat ?x127 ?x330))))
 (let ((?x61 (bvmul (_ bv4294967295 32) ?x371)))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x248 (concat ?x116 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x318 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x385 (bvadd ?x318 (_ bv3 32))))
 (let ((?x390 (concat (select input.dst.llvm-mem ?x385) (concat ?x245 ?x248))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x404 (concat ?x307 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x279 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x346 (bvadd ?x279 (_ bv3 32))))
 (let ((?x59 (concat (select input.dst.llvm-mem ?x346) (concat ?x280 ?x404))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x155)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x362)))
 (let ((?x69 (bvadd (bvadd (bvadd ?x15 ?x59) ?x390) ?x61)))
 (let (($x49 (= (_ bv0 32) ?x69)))
 (let (($x134 (= $x49 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x359 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x366 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x135 (concat ?x366 (concat ?x359 (concat ?x114 ?x80)))))
 (let (($x275 (= ?x135 input.dst.llvm-%m)))
 (let (($x53 (= $x275 true)))
 (let (($x396 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x358 (= (bvand ?x318 (_ bv4294967292 32)) ?x318)))
 (let (($x200 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x318 (bvsub ?x318 (_ bv4 32))) (bvult ?x318 (bvsub ?x318 (_ bv4 32))))))
 (let (($x174 (and true $x200)))
 (let (($x249 (= (bvand ?x279 (_ bv4294967292 32)) ?x279)))
 (let (($x77 (and $x249 $x174)))
 (let (($x167 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x274 (and (and (and true $x167) $x77) $x358)))
 (let (($x268 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x403 (and true $x268)))
 (let (($x83 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x391 (and $x83 $x403)))
 (let (($x76 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x279 (bvsub ?x279 (_ bv12 32))) (bvult ?x279 (bvsub ?x279 (_ bv12 32))))))
 (let (($x378 (and (and (and true $x83) $x76) $x391)))
 (let (($x369 (and (and $x378 $x274) $x396)))
 (let (($x78 (= input.dst.llvm-%m ?x135)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x31 (= (_ bv0 32) ?x254)))
 (let ((?x34 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x386 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x34)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x328 (and $x226 $x386)))
 (let (($x65 (and $x328 $x31)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x142 $x65)))
 (let (($x317 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x317)))))))
 (let (($x202 (and (and (and $x161 $x117) $x78) $x369)))
 (let (($x270 (forall ((input.ind-%var4541X (_ BitVec 32)) )(let ((?x118 (bvadd (bvmul input.ind-%var4541X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x33))))
 (let ((?x363 (input.spec-%var-m-0.1.1 input.ind-%var4541X)))
 (let (($x177 (input.spec-%var-m-0.0.1 input.ind-%var4541X)))
 (=> $x177 (= ?x363 ?x180))))))))
 ))
 (let (($x243 (forall ((input.ind-%var4540X (_ BitVec 32)) )(let (($x177 (input.spec-%var-m-0.0.1 input.ind-%var4540X)))
 (= $x177 (and (bvule (_ bv0 32) input.ind-%var4540X) (bvult input.ind-%var4540X (_ bv100 32))))))
 ))
 (let (($x160 (and $x243 $x270)))
 (let (($x227 (and $x160 $x202)))
 (let (($x55 (= $x227 true)))
 (let (($x96 (= $x378 true)))
 (let (($x297 (and $x274 $x396)))
 (let (($x235 (= $x297 true)))
 (let (($x25 (and $x235 $x96)))
 (let (($x367 (and $x25 $x55)))
 (let (($x331 (and $x367 $x53)))
 (let (($x150 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x319 (ite $x150 (_ bv1 32) (_ bv0 32))))
 (let (($x394 (= ?x319 (_ bv0 32))))
 (let (($x293 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x73 (ite $x293 (_ bv1 32) (_ bv0 32))))
 (let (($x211 (= ?x73 (_ bv0 32))))
 (let (($x309 (and $x211 $x394)))
 (let (($x87 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x221 (ite $x87 (_ bv1 32) (_ bv0 32))))
 (let (($x107 (= ?x221 (_ bv0 32))))
 (let (($x213 (and $x107 $x309)))
 (let (($x402 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x296 (ite $x402 (_ bv1 32) (_ bv0 32))))
 (let (($x287 (= ?x296 (_ bv0 32))))
 (let (($x91 (and $x287 $x213)))
 (let (($x131 (and $x91 $x331)))
 (let ((?x327 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x139 (= ?x327 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x343 (bvuge ?x296 (_ bv1 32))))
 (let (($x156 (=> $x343 $x139)))
 (let (($x113 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x47 (= $x343 $x113)))
 (let (($x123 (= false false)))
 (let (($x272 (=> $x287 $x123)))
 (let (($x364 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x129 (= $x287 $x364)))
 (let (($x41 (and (and (and $x129 $x272) $x47) $x156)))
 (let (($x256 (and $x41 $x131)))
 (let ((?x338 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x360 (= ?x338 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x334 (bvuge ?x221 (_ bv1 32))))
 (let (($x253 (=> $x334 $x360)))
 (let (($x301 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x323 (= $x334 $x301)))
 (let (($x20 (and (and (= $x107 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x107 $x123)) $x323)))
 (let (($x265 (and $x20 $x253)))
 (let (($x224 (and $x265 $x256)))
 (let ((?x57 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x119 (= ?x57 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x290 (bvuge ?x319 (_ bv1 32))))
 (let (($x124 (=> $x290 $x119)))
 (let (($x148 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x193 (= $x290 $x148)))
 (let (($x267 (and (and (= $x394 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x394 $x123)) $x193)))
 (let (($x355 (and $x267 $x124)))
 (let (($x46 (and $x355 $x224)))
 (let ((?x286 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x92 (= ?x286 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x137 (bvuge ?x73 (_ bv1 32))))
 (let (($x140 (=> $x137 $x92)))
 (let (($x11 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x37 (= $x137 $x11)))
 (let (($x149 (=> $x211 $x123)))
 (let (($x395 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x26 (= $x211 $x395)))
 (let (($x22 (and (and (and $x26 $x149) $x37) $x140)))
 (let (($x18 (and $x22 $x46)))
 (let (($x153 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x81 (and $x153 $x18)))
 (let (($x373 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x263 (and $x373 $x81)))
 (let (($x349 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x88 (and $x349 $x263)))
 (let (($x158 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x252 (and $x158 $x88)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x381 (and $x10 $x252)))
 (let (($x321 (and $x123 $x381)))
 (let (($x332 (= ?x327 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x159 (and $x332 $x321)))
 (let (($x172 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x14 (and $x172 $x159)))
 (let (($x9 (and $x123 $x14)))
 (let (($x310 (= ?x338 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x357 (and $x310 $x9)))
 (let (($x399 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x93 (and $x399 $x357)))
 (let (($x58 (and $x123 $x93)))
 (let (($x291 (= ?x57 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x100 (and $x291 $x58)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x54 (and $x376 $x100)))
 (let (($x329 (and $x123 $x54)))
 (let (($x223 (= ?x286 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x311 (and $x223 $x329)))
 (let (($x68 (bvugt ?x318 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x195 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x385)))
 (let (($x166 (=> (bvule ?x318 (bvsub (bvadd ?x318 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x195 $x68)))))))
 (let (($x89 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x199)))
 (let (($x264 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x6 $x89)))))))
 (let (($x238 (bvugt ?x279 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x346)))
 (let (($x325 (=> (bvule ?x279 (bvsub (bvadd ?x279 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x238)))))))
 (let (($x85 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x401 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x56 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x401 $x85)))))))
 (let (($x111 (and $x56 $x325)))
 (let (($x384 (and $x111 $x264)))
 (let (($x99 (and $x384 $x166)))
 (let (($x181 (and $x99 $x311)))
 (let (($x13 (=> $x181 $x134)))
 (not $x13)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 217 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087505/query
